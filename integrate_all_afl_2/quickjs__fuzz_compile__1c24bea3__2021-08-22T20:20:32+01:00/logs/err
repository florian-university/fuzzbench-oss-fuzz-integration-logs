WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: quickjs_fuzz_compile.
INFO:root:Please run "make test-run-afl-quickjs_fuzz_compile" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:43eafab02db0fb09ce2d6e9db0cb38d26de10f4c0163d39a3a6cc1c5afe81e7a
#1 transferring dockerfile: 911B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:8c842db59acbe489d7e13e3b15224352d62443590205b1a6848c7802bafd87da
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#9 [internal] load build context
#9 sha256:6784eaaf443c6f2eef2048f75fe7e5e4905ea0d4bd1c739d83b37f5dd8c29990
#9 DONE 0.0s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#5 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/quickjs_fuzz_compile
#4 sha256:b3ba911a5e9f9449adfca0b31334a1df03b4a86f7405c5213afdcf70fc864eef
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/quickjs_fuzz_compile:latest: not found

#9 [internal] load build context
#9 sha256:6784eaaf443c6f2eef2048f75fe7e5e4905ea0d4bd1c739d83b37f5dd8c29990
#9 transferring context: 9.12kB done
#9 DONE 0.0s

#7 [3/6] RUN git clone --depth 1 https://github.com/bellard/quickjs quickjs
#7 sha256:88f522f90b013723f70505f5d4af897031e44471578be124b8e62b59bc4da1d6
#7 CACHED

#8 [4/6] WORKDIR /src/quickjs
#8 sha256:0c860717a535c3fde7bffa2b570d947629620ad5c570141874dc89e015b24be9
#8 CACHED

#10 [5/6] COPY build.sh /src/
#10 sha256:1b4ee74233c8c4ed5ad8f7e1e110c00036dded2968674264eb21db3c882deed5
#10 CACHED

#6 [2/6] RUN apt-get update && apt-get install -y make
#6 sha256:3f1d6a55af806298c1b6951fbf76321c67d198023e00277385a4beaf410c5a65
#6 CACHED

#11 [6/6] COPY fuzz*.c /src/
#11 sha256:c2a7d41a717e1bdf65ab11e26d64407d96769b1b4c26665cec81b08a0bc89dfd
#11 CACHED

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:764346d30ee93e94bf52c138c34e30bc01760fa88ce2c98f3b78663eedcce204 done
#12 naming to gcr.io/fuzzbench/builders/benchmark/quickjs_fuzz_compile done
#12 DONE 0.1s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/quickjs_fuzz_compile:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:8575369c92641601f5e629c7aefa45357fa1d29774d112422eb080069c2d371a
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:9faa800f2904b6404e65d7b041e97e893ccb662570b7b0d1694253326e8b3fbd
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/quickjs_fuzz_compile:latest
#3 sha256:01a99cae429e16083f2729e432a2363c6afcf4b9a5e8cdd09b9ac3f5dd08e2eb
#3 DONE 0.0s

#7 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/quickjs_fuzz_compile
#7 sha256:311680bed59707859dbd34934ea193cdec6e938435de1e30aa819ab17ab86584
#7 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/quickjs_fuzz_compile-intermediate
#4 sha256:204fe1e00624355b1fc5b9a9e4901e619457ac443d8c16eaecf127d7b2d832da
#4 ERROR: gcr.io/fuzzbench/builders/afl/quickjs_fuzz_compile-intermediate:latest: not found

#5 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#5 sha256:4d05b571a031969a740432cf686ea54c06f58a07b2d2b5d6b581ac0055285f3f
#5 CACHED

#6 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#6 sha256:4e27ceaa2da40602fb02e91fd723640a961537ebc9672ca17e993743a4dfdceb
#6 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:032110ed81bc9370d8692d6c2697b88fa172fc83cb73127c62de037f13ef1df7 done
#8 naming to gcr.io/fuzzbench/builders/afl/quickjs_fuzz_compile-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/quickjs_fuzz_compile-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:b3b5aefcfe40458b900df1f22342b71ca549d3392f40697dd1c786031d3f66a8
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:963d485633cb7c1dc07ffc501ebdec610e495c601dab87dfb6524c49b48138e0
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:c974f8fac7f924af3260b90877a60a9dd2a2bf4fbfff33f4c8e2543d7a462f4c
#8 transferring context: 591B 0.0s done
#8 DONE 0.1s

#9 [4/7] COPY ./requirements.txt /
#9 sha256:3084362367f6d045bbe999823c3d4b277f7b6620220a517ae963f082b71c5646
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:decde8e03354442eed2874e4c062448841d378ce599b709d54dbab3203c53c22
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:03f51d18ee7be9027ee82c097f483a13a2483b143fb2f1cc5ac7aa5cac1f4210
#11 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:47f09ba4b53c3f2c0c6eb8965a40c0da1f9c82dc49a4a712e69ff640fc3f742f
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:06cefeb620ef0a12ea1bcad2e9d41606970bfe3e730adc09f2f646fe13a3a162 done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:da568b2ad520431907a080ed669b9f60d1757fa819e63e2fb11cf96f99ed54bd
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:44c1714e7797074cc8f55a4cdac4f75a725560b6443453245d5790aa5d7f0daa
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/quickjs_fuzz_compile-intermediate:latest
#3 sha256:f41e1e7e41ab89ef45b865162360928c263e8dbdfa944b76adc23581f0d95920
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:b285e1dbcfd528ccfa94f310a2bc9c8d4c878ce0efce05d206122a5ebf672fea
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/quickjs_fuzz_compile-intermediate
#6 sha256:6bd7a20aa8f46e0e04e1b8e809d013079ebdf3eafd924ab156b3cf6cc0ed626b
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/quickjs_fuzz_compile
#5 sha256:80f5fdfc1fd5d731e5fd658cd7b8474b34e78d71c0712040efbcb323b6cfbeb2
#5 ERROR: gcr.io/fuzzbench/builders/afl/quickjs_fuzz_compile:latest: not found

#12 [internal] load build context
#12 sha256:b285e1dbcfd528ccfa94f310a2bc9c8d4c878ce0efce05d206122a5ebf672fea
#12 transferring context: 742.39kB 0.1s done
#12 DONE 0.1s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:6b952186b1c1fe490780d5e2383e4619af7a12ef11e36faa0e12294ce3d64c6b
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:a459541c560818c25c31d4550c06ea6c3765be7250399015e3b8e896c7c0ef6c
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:88a42b80c402b1b7a86dbbe03e03525ff3189c27ef5313e8a033b47d06aa26d2
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:4f8b33621177409f2c375e0f720617ad2f3649b4dff058739fe6cf2e388f6d82
#11 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:f0754d06517e10dd073c0308bd3050e06234c3cee068f4803c7c82f81e9413b2
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:53bf18a36c023ba44cf41fae75c5d3eb8950cde7018635b0a1ec2df6de9c5161
#14 DONE 0.5s

#15 [stage-1  8/13] COPY benchmarks/quickjs_fuzz_compile/benchmark.yaml /
#15 sha256:49972de6bc2c98bb307ba7320c7da65650fab3fee20de7e2cf53a1fe0551ee69
#15 DONE 0.1s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:cfcadda728230739d2a08113fa0369b87d5af7dfac133d6fffa9f40ed05e4c86
#16 DONE 0.5s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:98632843b1f19f4f74ca79eefd6ddbf3be4c54bec9d28cf25d2e8d0a5f3f19bd
#17 DONE 0.1s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:6dc4e669029793114adc9957251be5542edc708e2756dd4094a42cdffe7c49da
#18 0.436 Checking out commit 1c24bea3
#18 1.355 error: pathspec '1c24bea3' did not match any file(s) known to git
#18 1.359 error: pathspec '1c24bea3' did not match any file(s) known to git
#18 1.367 error: pathspec '1c24bea3' did not match any file(s) known to git
#18 1.413 Checkout unsuccessful.
#18 DONE 1.5s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:e041236458004c3199e979d5de6812eb00ef98708ecfa48a3073afca2f56a4d6
#19 DONE 0.6s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:6e0693dc51f75c5bfd743970f771d4690079e343d9d030333d3c5fe453e821b9
#20 0.500 Run fuzzer_build to build the target
#20 0.615 FUZZ_TARGET = fuzz_compile
#20 0.615 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.615 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.619 Building benchmark quickjs_fuzz_compile with fuzzer afl
#20 0.622 + sed -i -e s/CFLAGS=/CFLAGS+=/ Makefile
#20 0.625 + CONFIG_CLANG=y
#20 0.625 + make libquickjs.a
#20 0.631 mkdir -p .obj .obj/examples .obj/tests
#20 0.633 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -g -Wall -MMD -MF .obj/.d -Wextra -Wno-sign-compare -Wno-missing-field-initializers -Wundef -Wuninitialized -Wunused -Wno-unused-parameter -Wwrite-strings -Wchar-subscripts -funsigned-char -MMD -MF .obj/.d -D_GNU_SOURCE -DCONFIG_VERSION=\"2021-03-27\" -DCONFIG_BIGNUM -O2 -c -o .obj/quickjs.nolto.o quickjs.c
#20 0.998 quickjs.c:10741:30: warning: implicit conversion from 'long' to 'double' changes value from 9223372036854775807 to 9223372036854775808 [-Wimplicit-const-int-float-conversion]
#20 0.998                 else if (d > INT64_MAX)
#20 0.998                            ~ ^~~~~~~~~
#20 0.998 /usr/include/stdint.h:124:22: note: expanded from macro 'INT64_MAX'
#20 0.998 # define INT64_MAX              (__INT64_C(9223372036854775807))
#20 0.998                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 0.998 /usr/include/stdint.h:106:24: note: expanded from macro '__INT64_C'
#20 0.998 #  define __INT64_C(c)  c ## L
#20 0.998                         ^~~~~~
#20 0.998 <scratch space>:26:1: note: expanded from here
#20 0.998 9223372036854775807L
#20 0.998 ^~~~~~~~~~~~~~~~~~~~
#20 1.888 quickjs.c:53847:25: warning: implicit conversion from 'long' to 'double' changes value from 9223372036854775807 to 9223372036854775808 [-Wimplicit-const-int-float-conversion]
#20 1.888     if (isnan(d) || d > INT64_MAX)
#20 1.888                       ~ ^~~~~~~~~
#20 1.888 /usr/include/stdint.h:124:22: note: expanded from macro 'INT64_MAX'
#20 1.888 # define INT64_MAX              (__INT64_C(9223372036854775807))
#20 1.888                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 1.888 /usr/include/stdint.h:106:24: note: expanded from macro '__INT64_C'
#20 1.888 #  define __INT64_C(c)  c ## L
#20 1.888                         ^~~~~~
#20 1.888 <scratch space>:78:1: note: expanded from here
#20 1.888 9223372036854775807L
#20 1.888 ^~~~~~~~~~~~~~~~~~~~
#20 36.67 2 warnings generated.
#20 36.69 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -g -Wall -MMD -MF .obj/.d -Wextra -Wno-sign-compare -Wno-missing-field-initializers -Wundef -Wuninitialized -Wunused -Wno-unused-parameter -Wwrite-strings -Wchar-subscripts -funsigned-char -MMD -MF .obj/.d -D_GNU_SOURCE -DCONFIG_VERSION=\"2021-03-27\" -DCONFIG_BIGNUM -O2 -c -o .obj/libregexp.nolto.o libregexp.c
#20 37.87 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -g -Wall -MMD -MF .obj/.d -Wextra -Wno-sign-compare -Wno-missing-field-initializers -Wundef -Wuninitialized -Wunused -Wno-unused-parameter -Wwrite-strings -Wchar-subscripts -funsigned-char -MMD -MF .obj/.d -D_GNU_SOURCE -DCONFIG_VERSION=\"2021-03-27\" -DCONFIG_BIGNUM -O2 -c -o .obj/libunicode.nolto.o libunicode.c
#20 38.57 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -g -Wall -MMD -MF .obj/.d -Wextra -Wno-sign-compare -Wno-missing-field-initializers -Wundef -Wuninitialized -Wunused -Wno-unused-parameter -Wwrite-strings -Wchar-subscripts -funsigned-char -MMD -MF .obj/.d -D_GNU_SOURCE -DCONFIG_VERSION=\"2021-03-27\" -DCONFIG_BIGNUM -O2 -c -o .obj/cutils.nolto.o cutils.c
#20 38.91 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -g -Wall -MMD -MF .obj/.d -Wextra -Wno-sign-compare -Wno-missing-field-initializers -Wundef -Wuninitialized -Wunused -Wno-unused-parameter -Wwrite-strings -Wchar-subscripts -funsigned-char -MMD -MF .obj/.d -D_GNU_SOURCE -DCONFIG_VERSION=\"2021-03-27\" -DCONFIG_BIGNUM -O2 -c -o .obj/quickjs-libc.nolto.o quickjs-libc.c
#20 40.23 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -g -Wall -MMD -MF .obj/.d -Wextra -Wno-sign-compare -Wno-missing-field-initializers -Wundef -Wuninitialized -Wunused -Wno-unused-parameter -Wwrite-strings -Wchar-subscripts -funsigned-char -MMD -MF .obj/.d -D_GNU_SOURCE -DCONFIG_VERSION=\"2021-03-27\" -DCONFIG_BIGNUM -O2 -c -o .obj/libbf.nolto.o libbf.c
#20 45.21 llvm-ar rcs libquickjs.a .obj/quickjs.nolto.o .obj/libregexp.nolto.o .obj/libunicode.nolto.o .obj/cutils.nolto.o .obj/quickjs-libc.nolto.o .obj/libbf.nolto.o
#20 45.23 + zip -r /out/fuzz_eval_seed_corpus.zip tests/microbench.js tests/test_bignum.js tests/test_bjson.js tests/test_builtin.js tests/test_closure.js tests/test_language.js tests/test_loop.js tests/test_op_overloading.js tests/test_qjscalc.js tests/test_std.js tests/test_worker.js tests/test_worker_module.js
#20 45.23   adding: tests/microbench.js (deflated 78%)
#20 45.23   adding: tests/test_bignum.js (deflated 75%)
#20 45.23   adding: tests/test_bjson.js (deflated 70%)
#20 45.23   adding: tests/test_builtin.js (deflated 75%)
#20 45.23   adding: tests/test_closure.js (deflated 71%)
#20 45.24   adding: tests/test_language.js (deflated 75%)
#20 45.24   adding: tests/test_loop.js (deflated 79%)
#20 45.24   adding: tests/test_op_overloading.js (deflated 80%)
#20 45.24   adding: tests/test_qjscalc.js (deflated 63%)
#20 45.24   adding: tests/test_std.js (deflated 68%)
#20 45.24   adding: tests/test_worker.js (deflated 61%)
#20 45.24   adding: tests/test_worker_module.js (deflated 49%)
#20 45.24 + zip -r /out/fuzz_eval_seed_corpus.zip examples/fib_module.js examples/hello.js examples/hello_module.js examples/pi_bigdecimal.js examples/pi_bigfloat.js examples/pi_bigint.js examples/test_fib.js examples/test_point.js
#20 45.24   adding: examples/fib_module.js (deflated 39%)
#20 45.24   adding: examples/hello.js (stored 0%)
#20 45.24   adding: examples/hello_module.js (deflated 19%)
#20 45.24   adding: examples/pi_bigdecimal.js (deflated 58%)
#20 45.24   adding: examples/pi_bigfloat.js (deflated 57%)
#20 45.24   adding: examples/pi_bigint.js (deflated 59%)
#20 45.24   adding: examples/test_fib.js (deflated 21%)
#20 45.24   adding: examples/test_point.js (deflated 56%)
#20 45.24 + zip -r /out/fuzz_compile_seed_corpus.zip tests/microbench.js tests/test_bignum.js tests/test_bjson.js tests/test_builtin.js tests/test_closure.js tests/test_language.js tests/test_loop.js tests/test_op_overloading.js tests/test_qjscalc.js tests/test_std.js tests/test_worker.js tests/test_worker_module.js
#20 45.24   adding: tests/microbench.js (deflated 78%)
#20 45.24   adding: tests/test_bignum.js (deflated 75%)
#20 45.24   adding: tests/test_bjson.js (deflated 70%)
#20 45.25   adding: tests/test_builtin.js (deflated 75%)
#20 45.25   adding: tests/test_closure.js (deflated 71%)
#20 45.25   adding: tests/test_language.js (deflated 75%)
#20 45.25   adding: tests/test_loop.js (deflated 79%)
#20 45.25   adding: tests/test_op_overloading.js (deflated 80%)
#20 45.25   adding: tests/test_qjscalc.js (deflated 63%)
#20 45.25   adding: tests/test_std.js (deflated 68%)
#20 45.25   adding: tests/test_worker.js (deflated 61%)
#20 45.25   adding: tests/test_worker_module.js (deflated 49%)
#20 45.25 + zip -r /out/fuzz_compile_seed_corpus.zip examples/fib_module.js examples/hello.js examples/hello_module.js examples/pi_bigdecimal.js examples/pi_bigfloat.js examples/pi_bigint.js examples/test_fib.js examples/test_point.js
#20 45.25   adding: examples/fib_module.js (deflated 39%)
#20 45.25   adding: examples/hello.js (stored 0%)
#20 45.25   adding: examples/hello_module.js (deflated 19%)
#20 45.25   adding: examples/pi_bigdecimal.js (deflated 58%)
#20 45.25   adding: examples/pi_bigfloat.js (deflated 57%)
#20 45.25   adding: examples/pi_bigint.js (deflated 59%)
#20 45.25   adding: examples/test_fib.js (deflated 21%)
#20 45.25   adding: examples/test_point.js (deflated 56%)
#20 45.25 + cd ..
#20 45.25 + FUZZ_TARGETS='fuzz_eval fuzz_compile fuzz_regexp'
#20 45.25 + for f in $FUZZ_TARGETS
#20 45.25 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -Iquickjs -c fuzz_eval.c -o fuzz_eval.o
#20 45.32 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard fuzz_eval.o -o /out/fuzz_eval quickjs/libquickjs.a /libAFL.a
#20 45.68 + for f in $FUZZ_TARGETS
#20 45.68 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -Iquickjs -c fuzz_compile.c -o fuzz_compile.o
#20 45.76 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard fuzz_compile.o -o /out/fuzz_compile quickjs/libquickjs.a /libAFL.a
#20 46.11 + for f in $FUZZ_TARGETS
#20 46.11 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -Iquickjs -c fuzz_regexp.c -o fuzz_regexp.o
#20 46.18 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard fuzz_regexp.o -o /out/fuzz_regexp quickjs/libquickjs.a /libAFL.a
#20 46.54 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 46.8s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:c4b640980cf9c0b56edc7648fb9835acb2c952773f5b2c561f09728c6d29c203 done
#21 naming to gcr.io/fuzzbench/builders/afl/quickjs_fuzz_compile done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/quickjs_fuzz_compile:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:db1f2a59a78a4f809d97dfc58f75526f3dafccb799c3ca287606002ab44db742
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:a58e9ed99576619499dd8e4a0b5ea020243cfeaf7f3472c4ad7d15656bdfaa27
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/quickjs_fuzz_compile-intermediate
#4 sha256:4650026fc11c5ac27645cb81a7b370c13f47b1ad7df9671f5a008356791fa23b
#4 ERROR: gcr.io/fuzzbench/runners/afl/quickjs_fuzz_compile-intermediate:latest: not found

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:559804d64fdb09848e27ac6aa062a59b9bde70e4fee70f67b96f8abeb802c389 done
#6 naming to gcr.io/fuzzbench/runners/afl/quickjs_fuzz_compile-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/quickjs_fuzz_compile-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:95dc02faa06789977b18e4b0254b969ff7a0635773232c2c5510869741b9fab1
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:a176e370841b4a870f98299ab4f77a1f51eeaff2bc55a40ca13f9b897ecfba51
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/quickjs_fuzz_compile-intermediate:latest
#3 sha256:a6780cfc280af9ea5d6830bc7b061154cd7d99f312d93b553f89b026842d76e5
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/quickjs_fuzz_compile:latest
#4 sha256:6dbdb1a2439236f9d18fc9be204749492247f64c45792c355133efe8f0ad23cc
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:5218bfdf6b8e8e7d9dcbf8473ce1b5008d240fdbc8ec91808bb4233924f25a19
#12 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/quickjs_fuzz_compile
#10 sha256:aed3007db1bb174fcf9dfa315a1b64ecd883cff14692345269b934fc0cf1a029
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/quickjs_fuzz_compile
#5 sha256:dddbc0fa5a186b7f9a00683b0bb5aa7e79792a8bd11c6fa5b963c79ee53f5667
#5 ERROR: gcr.io/fuzzbench/runners/afl/quickjs_fuzz_compile:latest: not found

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/quickjs_fuzz_compile-intermediate
#6 sha256:353e0b1669b73d3622d7ad8e3e5cb9c2ff6829efd0ff43429f49965b890ee582
#6 DONE 0.0s

#12 [internal] load build context
#12 sha256:5218bfdf6b8e8e7d9dcbf8473ce1b5008d240fdbc8ec91808bb4233924f25a19
#12 transferring context: 9.03MB 0.2s done
#12 DONE 0.2s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/quickjs_fuzz_compile
#10 sha256:aed3007db1bb174fcf9dfa315a1b64ecd883cff14692345269b934fc0cf1a029
#10 DONE 0.4s

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:0d5178fd4316e78c29289241a57c5d3fb3989abc3887ab80da77e65b7a7a00d4
#9 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:e2b5c0e86633881fce2eccc30266617d0ad85f59259ee2257ccd1a5858accbd8
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:081828c44ced0cf6fa300a416c173148997adfd0025cf233aa91b58747367f32
#8 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:1a667b317d165065b7826cb97839afafa812b1c07274b1046a7db2573a13edd1
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:da44f79db74bce50bee38c3d7e5c53cd0cce77df5a1ec65ea5ed998fa57e7ed2
#13 DONE 0.3s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:a86d883f414bfdcffb7188bfde5f8daab2737274a863b12f278f04ad4a1d4528
#14 DONE 0.3s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:11b7dbe434482b2f18f0348753424ad75077131535c9ff6fdb638ef8b3219e8e
#15 DONE 1.0s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:57e32213b0f75d88ef31650f25854b0d93f777db33729254f19c5de29432f137
#16 DONE 0.7s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:09829d2d1e954e249f7c25993eef7186d4496aa4873ff84a84a2a110a56cce52
#17 DONE 0.3s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:e66120181cdd363de6481ca4f15f8e5f61cb1a6a8e260b41dcf402c6ca47a002
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:71b0647f2306696a0666237a758bc895e3241f3916b8697ca779033a82e0bad1
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:ed301ce02898620a779eb5763e225c7e7a8fdaabc5d3eba720f18aa202e9b5ce
#20 DONE 0.4s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:f4bda14e641f671887947a6f92e987114bfae3a7e4b5e21b76f69a900fe75825 done
#21 naming to gcr.io/fuzzbench/runners/afl/quickjs_fuzz_compile done
#21 DONE 0.0s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/quickjs_fuzz_compile:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Unarchived 20 files from seed corpus /out/fuzz_compile_seed_corpus.zip.
ERROR:root:Executed command: "nice -n 5 python3 -u -c from fuzzers.afl import fuzzer; fuzzer.fuzz('/out/seeds', '/out/corpus', '/out/fuzz_compile')" returned: 1.
ERROR:root:Fuzz process returned nonzero. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 209, in run_fuzzer\n    new_process.execute(command,\n  File "/src/common/new_process.py", line 124, in execute\n    raise subprocess.CalledProcessError(retcode, command)\nsubprocess.CalledProcessError: Command \'[\'nice\', \'-n\', \'5\', \'python3\', \'-u\', \'-c\', "from fuzzers.afl import fuzzer; fuzzer.fuzz(\'/out/seeds\', \'/out/corpus\', \'/out/fuzz_compile\')"]\' returned non-zero exit status 1.\n'}
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7fbede89a1f0> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
make: *** [docker/generated.mk:282364: test-run-afl-quickjs_fuzz_compile] Error 1
