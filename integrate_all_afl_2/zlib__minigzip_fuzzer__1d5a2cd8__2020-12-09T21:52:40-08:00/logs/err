WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: zlib_minigzip_fuzzer.
INFO:root:Please run "make test-run-afl-zlib_minigzip_fuzzer" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:89062deb4e950f68bd95ee0703900ba791e9b42873e98c30ef8922752c309c94
#1 transferring dockerfile: 925B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:776f9db5bda5463df7fe724090536b04cd4e16456e86af4d8f75e7fa25b8de4a
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#9 [internal] load build context
#9 sha256:bb40c9f383f9ccd77cabab668622875fb9a833e873bf8c7bb4273b5797cf1091
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#5 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/zlib_minigzip_fuzzer
#4 sha256:864f2fbe97d42bc174a8bbb4850592b52439069aa63d0c376549b95ae21e1403
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/zlib_minigzip_fuzzer:latest: not found

#9 [internal] load build context
#9 sha256:bb40c9f383f9ccd77cabab668622875fb9a833e873bf8c7bb4273b5797cf1091
#9 transferring context: 34.45kB done
#9 DONE 0.4s

#7 [3/5] RUN git clone --depth 1 -b develop https://github.com/madler/zlib.git
#7 sha256:2db80f1acb4ec415ea6aff45b9903fcdbf63fe7be6dd577e99489178db800722
#7 CACHED

#8 [4/5] WORKDIR zlib
#8 sha256:305dacf35f7191abfcbb2e67237640cbb20138484e70dff50d1fc662a0772ce2
#8 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:425dc7a252565eeea60f3de4c59c779438ad25f6692cfd7941a8ec9fc7a73f78
#6 CACHED

#10 [5/5] COPY build.sh *_fuzzer.c* /src/
#10 sha256:afa1323fb108ef3588b926a964da1c138ec3fa3a1331e175d5f71d824a5fce0b
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:385f0799292aa8bb79a294af498f9b511a0481156fdbfe0fed3de6035ff240e0
#11 writing image sha256:385f0799292aa8bb79a294af498f9b511a0481156fdbfe0fed3de6035ff240e0 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/zlib_minigzip_fuzzer done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/zlib_minigzip_fuzzer:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:935a87cc826e045c300c7b760156b0a9c78ae91f39461d3836cbba9dddb21425
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:9ec88195be938808672b49bd3fd8fe8d05ee0b7d671696543c99c7106b1a0ce4
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/zlib_minigzip_fuzzer:latest
#3 sha256:b9c6043b05997f312d7062393d05102e4370d0f553f495428fec4e6fe7a54ec8
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/zlib_minigzip_fuzzer
#5 sha256:545f1ea366614b0025b77068f4d9986b61078b9c5c6d32f69c766f9a74f1ec22
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer-intermediate
#4 sha256:6f3108a7e2a7cd4bf1e49d5180653b64aeb9b5365d04e328582f9af73ab33cbb
#4 ERROR: gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer-intermediate:latest: not found

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:70d6f80cbdd10b676207031189e0c3080774ccf1c72da43dc0fd2136e86a4282
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:acc5fc62f74755c463a66b47cd207a358c145f28bcb4b9b31cf319729e25e63a
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:e507d2de6cab8b4b5a1d88dc6368b1c9956770946881bf5a1dc07c01b0e6df63 done
#8 naming to gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:4a9505a295fb1193b4b226adb94d46bee50ae5ad349ffa5acdd7a236f57c27ea
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:6df6f8d5961713e34039bbbb214e22b7990db302ca581d949fad632f929eb38d
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:103a2bf35fed1c9dcdee9319690ae555a1ebd3c59a536ccbda42e62e6ba0ce9d
#8 transferring context: 591B 0.0s done
#8 DONE 0.1s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:50c6e3b308a9bdc468c029afee40ffd916de17a27222a306222600d93e52af32
#10 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:bfe7a1050b1ffe7cb7f4f3ce480ac583480e51c6c24886571e0dab96373c7e7b
#9 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:6a9140e6fef068ab81ed1610c29abf1757e5664f6adb28627ee13154d950ef59
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:b1970e5901335918d8736496d036209d231874d81c047c3ab6ad0921c655bb0d
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:4f3dd76512df28a9318832178fc76739758c784ed8f6f0bb7d2f9fdfb54ec807 done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:fbc6a475fa1343fc3c34502f023cf19bba8be3e7f856b9f1d476f91b93fbdfa8
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:fd51e9418a6b8c01c4eb4f971b1c017259203290ee71f86f8ea8d747f4d0734c
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer-intermediate:latest
#3 sha256:0432d617f36833278f18bc26ebc01410d4d0f6145be99bb2e4fc979dc735b74a
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:49f60eb761e318142e657e0854e4275bb989d148beef24101f6b24de09e6643d
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer-intermediate
#6 sha256:750d52d480d47cab5d22fda6404f4e2729b72518dff527b2f4e008bbb8b4c400
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer
#5 sha256:fe0fcc0795fa2950faa6f1b6a7e1a97e34feaa4b61524064d3fef743cd6f8073
#5 ERROR: gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:49f60eb761e318142e657e0854e4275bb989d148beef24101f6b24de09e6643d
#12 transferring context: 742.39kB 0.1s done
#12 DONE 0.1s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:f552186c3ba26bd49ea25b7994b64ca833fbb705d8464b9c27fe4738e00db567
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:01de7e2c286fe0f14dcedcdc2bccb6ada6a085598d8bb1c83857c5f7a187054f
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:a9a7b6888c0b2844aa5f479567cde0f458c6440d050ea53041cabf3899c9fc4c
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:346ab67404c282359990a07f80a65671224a98956a58d6ee4190aeec4b371526
#11 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:c0db0fa157569dcaac41796b1228618c2b016ff526b71698a3dbf3298271aa01
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:ee74833faeb9741e40e8a370eae1d168bdd718199ca4432c79b5f4605d0584f3
#14 DONE 0.5s

#15 [stage-1  8/13] COPY benchmarks/zlib_minigzip_fuzzer/benchmark.yaml /
#15 sha256:d0f0811990d22a960ca1d2256cd84f29d4091c2ae5c7506e9ea352b65c87b5bc
#15 DONE 0.1s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:6eec31f1d78a0e2d46e628629e86304a17413f36cbac8dd343f60b3427fc9aea
#16 DONE 0.5s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:a8e33daf814de0f22cbb1bb2bf42d0311671bf8b8cb96a4969234f072298dca9
#17 DONE 0.1s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:37099bb6e8a6062f3fb54c47f115bf6ccefa2e4b6369ac54b0c1aa73d634db95
#18 0.461 Checking out commit 1d5a2cd8
#18 2.450 From https://github.com/madler/zlib
#18 2.450  * [new tag]         v0.71       -> v0.71
#18 2.450  * [new tag]         v0.79       -> v0.79
#18 2.451  * [new tag]         v0.8        -> v0.8
#18 2.451  * [new tag]         v0.9        -> v0.9
#18 2.451  * [new tag]         v0.91       -> v0.91
#18 2.451  * [new tag]         v0.92       -> v0.92
#18 2.452  * [new tag]         v0.93       -> v0.93
#18 2.452  * [new tag]         v0.94       -> v0.94
#18 2.452  * [new tag]         v0.95       -> v0.95
#18 2.452  * [new tag]         v0.99       -> v0.99
#18 2.453  * [new tag]         v1.0-pre    -> v1.0-pre
#18 2.453  * [new tag]         v1.0.1      -> v1.0.1
#18 2.453  * [new tag]         v1.0.2      -> v1.0.2
#18 2.454  * [new tag]         v1.0.4      -> v1.0.4
#18 2.454  * [new tag]         v1.0.5      -> v1.0.5
#18 2.454  * [new tag]         v1.0.7      -> v1.0.7
#18 2.454  * [new tag]         v1.0.8      -> v1.0.8
#18 2.455  * [new tag]         v1.0.9      -> v1.0.9
#18 2.455  * [new tag]         v1.1.0      -> v1.1.0
#18 2.455  * [new tag]         v1.1.1      -> v1.1.1
#18 2.456  * [new tag]         v1.1.2      -> v1.1.2
#18 2.456  * [new tag]         v1.1.3      -> v1.1.3
#18 2.456  * [new tag]         v1.1.4      -> v1.1.4
#18 2.456  * [new tag]         v1.2.0      -> v1.2.0
#18 2.457  * [new tag]         v1.2.0.1    -> v1.2.0.1
#18 2.457  * [new tag]         v1.2.0.2    -> v1.2.0.2
#18 2.457  * [new tag]         v1.2.0.3    -> v1.2.0.3
#18 2.458  * [new tag]         v1.2.0.4    -> v1.2.0.4
#18 2.458  * [new tag]         v1.2.0.5    -> v1.2.0.5
#18 2.458  * [new tag]         v1.2.0.6    -> v1.2.0.6
#18 2.458  * [new tag]         v1.2.0.7    -> v1.2.0.7
#18 2.459  * [new tag]         v1.2.0.8    -> v1.2.0.8
#18 2.459  * [new tag]         v1.2.1      -> v1.2.1
#18 2.459  * [new tag]         v1.2.1.1    -> v1.2.1.1
#18 2.459  * [new tag]         v1.2.1.2    -> v1.2.1.2
#18 2.460  * [new tag]         v1.2.10     -> v1.2.10
#18 2.460  * [new tag]         v1.2.11     -> v1.2.11
#18 2.460  * [new tag]         v1.2.12     -> v1.2.12
#18 2.461  * [new tag]         v1.2.2      -> v1.2.2
#18 2.461  * [new tag]         v1.2.2.1    -> v1.2.2.1
#18 2.461  * [new tag]         v1.2.2.2    -> v1.2.2.2
#18 2.461  * [new tag]         v1.2.2.3    -> v1.2.2.3
#18 2.462  * [new tag]         v1.2.2.4    -> v1.2.2.4
#18 2.462  * [new tag]         v1.2.3      -> v1.2.3
#18 2.462  * [new tag]         v1.2.3.1    -> v1.2.3.1
#18 2.462  * [new tag]         v1.2.3.2    -> v1.2.3.2
#18 2.463  * [new tag]         v1.2.3.3    -> v1.2.3.3
#18 2.463  * [new tag]         v1.2.3.4    -> v1.2.3.4
#18 2.463  * [new tag]         v1.2.3.5    -> v1.2.3.5
#18 2.463  * [new tag]         v1.2.3.6    -> v1.2.3.6
#18 2.464  * [new tag]         v1.2.3.7    -> v1.2.3.7
#18 2.464  * [new tag]         v1.2.3.8    -> v1.2.3.8
#18 2.464  * [new tag]         v1.2.3.9    -> v1.2.3.9
#18 2.464  * [new tag]         v1.2.4      -> v1.2.4
#18 2.465  * [new tag]         v1.2.4-pre1 -> v1.2.4-pre1
#18 2.465  * [new tag]         v1.2.4-pre2 -> v1.2.4-pre2
#18 2.465  * [new tag]         v1.2.4.1    -> v1.2.4.1
#18 2.465  * [new tag]         v1.2.4.2    -> v1.2.4.2
#18 2.466  * [new tag]         v1.2.4.3    -> v1.2.4.3
#18 2.466  * [new tag]         v1.2.4.4    -> v1.2.4.4
#18 2.466  * [new tag]         v1.2.4.5    -> v1.2.4.5
#18 2.467  * [new tag]         v1.2.5      -> v1.2.5
#18 2.467  * [new tag]         v1.2.5.1    -> v1.2.5.1
#18 2.467  * [new tag]         v1.2.5.2    -> v1.2.5.2
#18 2.467  * [new tag]         v1.2.5.3    -> v1.2.5.3
#18 2.468  * [new tag]         v1.2.6      -> v1.2.6
#18 2.468  * [new tag]         v1.2.6.1    -> v1.2.6.1
#18 2.468  * [new tag]         v1.2.7      -> v1.2.7
#18 2.468  * [new tag]         v1.2.7.1    -> v1.2.7.1
#18 2.469  * [new tag]         v1.2.7.2    -> v1.2.7.2
#18 2.469  * [new tag]         v1.2.7.3    -> v1.2.7.3
#18 2.469  * [new tag]         v1.2.8      -> v1.2.8
#18 2.469  * [new tag]         v1.2.9      -> v1.2.9
#18 2.476 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 2.479 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 2.486 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 2.536 Checkout unsuccessful.
#18 DONE 3.1s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:6442d2c9bc9f0cd990e3d5344c06ec6dbe32f5b006fcb66cd83edeb7a4edaefa
#19 DONE 0.5s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:24c09cf3306e900be3d357a4ad73124da2c59283baecfdfc6d77dcacc67f576a
#20 0.438 Run fuzzer_build to build the target
#20 0.557 FUZZ_TARGET = minigzip_fuzzer
#20 0.557 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.558 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.562 Building benchmark zlib_minigzip_fuzzer with fuzzer afl
#20 0.566 + ./configure
#20 0.672 Checking for shared library support...
#20 0.748 Building shared library libz.so.1.2.12.1-motley with clang.
#20 0.792 Checking for size_t... Yes.
#20 0.824 Checking for off64_t... Yes.
#20 0.825 Checking for fseeko... Yes.
#20 0.977 Checking for strerror... Yes.
#20 1.022 Checking for unistd.h... Yes.
#20 1.054 Checking for stdarg.h... Yes.
#20 1.106 Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().
#20 1.259 Checking for vsnprintf() in stdio.h... Yes.
#20 1.303 Checking for return value of vsnprintf()... Yes.
#20 1.328 Checking for attribute(visibility) support... Yes.
#20 1.346 ++ nproc
#20 1.347 + make -j8 clean
#20 1.350 rm -f *.o *.lo *~ \
#20 1.350    example minigzip examplesh minigzipsh \
#20 1.350    example64 minigzip64 \
#20 1.350    infcover \
#20 1.350    libz.* foo.gz so_locations \
#20 1.350    _match.s maketree contrib/infback9/*.o
#20 1.353 rm -rf objs
#20 1.354 rm -f *.gcda *.gcno *.gcov
#20 1.356 rm -f contrib/infback9/*.gcda contrib/infback9/*.gcno contrib/infback9/*.gcov
#20 1.359 ++ nproc
#20 1.360 + make -j8 all
#20 1.364 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -c -o example.o test/example.c
#20 1.364 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o adler32.o adler32.c
#20 1.365 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o crc32.o crc32.c
#20 1.365 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o deflate.o deflate.c
#20 1.366 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o infback.o infback.c
#20 1.366 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o inffast.o inffast.c
#20 1.367 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o inflate.o inflate.c
#20 1.368 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o inftrees.o inftrees.c
#20 1.568 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o trees.o trees.c
#20 1.608 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o zutil.o zutil.c
#20 1.614 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o compress.o compress.c
#20 1.676 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o uncompr.o uncompr.c
#20 1.703 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzclose.o gzclose.c
#20 1.715 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzlib.o gzlib.c
#20 1.716 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzread.o gzread.c
#20 1.759 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzwrite.o gzwrite.c
#20 1.804 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -c -o minigzip.o test/minigzip.c
#20 1.964 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/adler32.o adler32.c
#20 1.967 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/crc32.o crc32.c
#20 2.000 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/deflate.o deflate.c
#20 2.061 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/infback.o infback.c
#20 2.096 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/inffast.o inffast.c
#20 2.173 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/inflate.o inflate.c
#20 2.304 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/inftrees.o inftrees.c
#20 2.361 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/trees.o trees.c
#20 2.480 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/zutil.o zutil.c
#20 2.555 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/compress.o compress.c
#20 2.557 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/uncompr.o uncompr.c
#20 2.585 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzclose.o gzclose.c
#20 2.640 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzlib.o gzlib.c
#20 2.672 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzread.o gzread.c
#20 2.687 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzwrite.o gzwrite.c
#20 2.735 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -D_FILE_OFFSET_BITS=64 -c -o example64.o test/example.c
#20 2.795 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -D_FILE_OFFSET_BITS=64 -c -o minigzip64.o test/minigzip.c
#20 2.909 ar rc libz.a adler32.o crc32.o deflate.o infback.o inffast.o inflate.o inftrees.o trees.o zutil.o compress.o uncompr.o gzclose.o gzlib.o gzread.o gzwrite.o 
#20 2.933 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o example example.o -L. libz.a
#20 2.982 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o minigzip minigzip.o -L. libz.a
#20 2.998 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o example64 example64.o -L. libz.a
#20 3.012 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o minigzip64 minigzip64.o -L. libz.a
#20 3.486 clang -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o libz.so.1.2.12.1-motley adler32.lo crc32.lo deflate.lo infback.lo inffast.lo inflate.lo inftrees.lo trees.lo zutil.lo compress.lo uncompr.lo gzclose.lo gzlib.lo gzread.lo gzwrite.lo  -lc 
#20 3.551 rm -f libz.so libz.so.1
#20 3.552 ln -s libz.so.1.2.12.1-motley libz.so
#20 3.554 ln -s libz.so.1.2.12.1-motley libz.so.1
#20 3.556 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o examplesh example.o -L. libz.so.1.2.12.1-motley
#20 3.556 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o minigzipsh minigzip.o -L. libz.so.1.2.12.1-motley
#20 3.679 ++ find /src -name '*_fuzzer.cc'
#20 3.701 + for f in $(find $SRC -name '*_fuzzer.cc')
#20 3.701 ++ basename -s .cc /src/zlib_uncompress2_fuzzer.cc
#20 3.702 + b=zlib_uncompress2_fuzzer
#20 3.702 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I. /src/zlib_uncompress2_fuzzer.cc -o /out/zlib_uncompress2_fuzzer /libAFL.a ./libz.a
#20 4.007 + for f in $(find $SRC -name '*_fuzzer.cc')
#20 4.008 ++ basename -s .cc /src/zlib_uncompress_fuzzer.cc
#20 4.009 + b=zlib_uncompress_fuzzer
#20 4.009 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I. /src/zlib_uncompress_fuzzer.cc -o /out/zlib_uncompress_fuzzer /libAFL.a ./libz.a
#20 4.313 + zip /out/seed_corpus.zip CMakeLists.txt Makefile.in adler32.c adler32.lo adler32.o compress.c compress.lo compress.o configure.log crc32.c crc32.h crc32.lo crc32.o deflate.c deflate.h deflate.lo deflate.o example.o example64.o gzclose.c gzclose.lo gzclose.o gzguts.h gzlib.c gzlib.lo gzlib.o gzread.c gzread.lo gzread.o gzwrite.c gzwrite.lo gzwrite.o infback.c infback.lo infback.o inffast.c inffast.h inffast.lo inffast.o inffixed.h inflate.c inflate.h inflate.lo inflate.o inftrees.c inftrees.h inftrees.lo inftrees.o libz.a libz.so libz.so.1 libz.so.1.2.12.1-motley make_vms.com minigzip.o minigzip64.o treebuild.xml trees.c trees.h trees.lo trees.o uncompr.c uncompr.lo uncompr.o zconf.h zconf.h.cmakein zconf.h.in zlib.3 zlib.3.pdf zlib.h zlib.map zlib.pc zlib.pc.cmakein zlib.pc.in zutil.c zutil.h zutil.lo zutil.o
#20 4.315   adding: CMakeLists.txt (deflated 68%)
#20 4.315   adding: Makefile.in (deflated 77%)
#20 4.316   adding: adler32.c (deflated 69%)
#20 4.316   adding: adler32.lo (deflated 70%)
#20 4.316   adding: adler32.o (deflated 70%)
#20 4.317   adding: compress.c (deflated 63%)
#20 4.317   adding: compress.lo (deflated 71%)
#20 4.317   adding: compress.o (deflated 71%)
#20 4.318   adding: configure.log (deflated 79%)
#20 4.318   adding: crc32.c (deflated 75%)
#20 4.319   adding: crc32.h (deflated 61%)
#20 4.366   adding: crc32.lo (deflated 43%)
#20 4.367   adding: crc32.o (deflated 47%)
#20 4.368   adding: deflate.c (deflated 76%)
#20 4.372   adding: deflate.h (deflated 64%)
#20 4.372   adding: deflate.lo (deflated 77%)
#20 4.378   adding: deflate.o (deflated 79%)
#20 4.383   adding: example.o (deflated 77%)
#20 4.384   adding: example64.o (deflated 77%)
#20 4.385   adding: gzclose.c (deflated 41%)
#20 4.385   adding: gzclose.lo (deflated 67%)
#20 4.385   adding: gzclose.o (deflated 67%)
#20 4.386   adding: gzguts.h (deflated 63%)
#20 4.386   adding: gzlib.c (deflated 73%)
#20 4.387   adding: gzlib.lo (deflated 77%)
#20 4.388   adding: gzlib.o (deflated 78%)
#20 4.389   adding: gzread.c (deflated 74%)
#20 4.390   adding: gzread.lo (deflated 74%)
#20 4.391   adding: gzread.o (deflated 74%)
#20 4.392   adding: gzwrite.c (deflated 79%)
#20 4.393   adding: gzwrite.lo (deflated 75%)
#20 4.394   adding: gzwrite.o (deflated 75%)
#20 4.396   adding: infback.c (deflated 76%)
#20 4.397   adding: infback.lo (deflated 69%)
#20 4.398   adding: infback.o (deflated 69%)
#20 4.399   adding: inffast.c (deflated 75%)
#20 4.400   adding: inffast.h (deflated 32%)
#20 4.400   adding: inffast.lo (deflated 69%)
#20 4.401   adding: inffast.o (deflated 66%)
#20 4.401   adding: inffixed.h (deflated 75%)
#20 4.402   adding: inflate.c (deflated 77%)
#20 4.404   adding: inflate.h (deflated 67%)
#20 4.404   adding: inflate.lo (deflated 73%)
#20 4.408   adding: inflate.o (deflated 73%)
#20 4.411   adding: inftrees.c (deflated 67%)
#20 4.412   adding: inftrees.h (deflated 58%)
#20 4.412   adding: inftrees.lo (deflated 67%)
#20 4.412   adding: inftrees.o (deflated 66%)
#20 4.413   adding: libz.a (deflated 73%)
#20 4.433   adding: libz.so (deflated 55%)
#20 4.445   adding: libz.so.1 (deflated 55%)
#20 4.457   adding: libz.so.1.2.12.1-motley (deflated 55%)
#20 4.470   adding: make_vms.com (deflated 72%)
#20 4.471   adding: minigzip.o (deflated 74%)
#20 4.471   adding: minigzip64.o (deflated 74%)
#20 4.472   adding: treebuild.xml (deflated 80%)
#20 4.472   adding: trees.c (deflated 73%)
#20 4.474   adding: trees.h (deflated 83%)
#20 4.475   adding: trees.lo (deflated 72%)
#20 4.476   adding: trees.o (deflated 71%)
#20 4.478   adding: uncompr.c (deflated 62%)
#20 4.478   adding: uncompr.lo (deflated 66%)
#20 4.479   adding: uncompr.o (deflated 66%)
#20 4.479   adding: zconf.h (deflated 73%)
#20 4.480   adding: zconf.h.cmakein (deflated 73%)
#20 4.480   adding: zconf.h.in (deflated 73%)
#20 4.481   adding: zlib.3 (deflated 54%)
#20 4.481   adding: zlib.3.pdf (deflated 20%)
#20 4.482   adding: zlib.h (deflated 73%)
#20 4.488   adding: zlib.map (deflated 69%)
#20 4.488   adding: zlib.pc (deflated 38%)
#20 4.488   adding: zlib.pc.cmakein (deflated 39%)
#20 4.488   adding: zlib.pc.in (deflated 38%)
#20 4.488   adding: zutil.c (deflated 65%)
#20 4.489   adding: zutil.h (deflated 63%)
#20 4.489   adding: zutil.lo (deflated 72%)
#20 4.489   adding: zutil.o (deflated 73%)
#20 4.491 ++ find /src -name '*_fuzzer.c'
#20 4.511 + for f in $(find $SRC -name '*_fuzzer.c')
#20 4.512 ++ basename -s .c /src/checksum_fuzzer.c
#20 4.513 + b=checksum_fuzzer
#20 4.513 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/checksum_fuzzer.c -c -o /tmp/checksum_fuzzer.o
#20 4.594 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/checksum_fuzzer /tmp/checksum_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 4.847 + rm -f /tmp/checksum_fuzzer.o
#20 4.849 + ln -sf /out/seed_corpus.zip /out/checksum_fuzzer_seed_corpus.zip
#20 4.850 + for f in $(find $SRC -name '*_fuzzer.c')
#20 4.851 ++ basename -s .c /src/compress_fuzzer.c
#20 4.852 + b=compress_fuzzer
#20 4.852 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/compress_fuzzer.c -c -o /tmp/compress_fuzzer.o
#20 4.923 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/compress_fuzzer /tmp/compress_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 5.187 + rm -f /tmp/compress_fuzzer.o
#20 5.189 + ln -sf /out/seed_corpus.zip /out/compress_fuzzer_seed_corpus.zip
#20 5.190 + for f in $(find $SRC -name '*_fuzzer.c')
#20 5.191 ++ basename -s .c /src/example_small_fuzzer.c
#20 5.192 + b=example_small_fuzzer
#20 5.192 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/example_small_fuzzer.c -c -o /tmp/example_small_fuzzer.o
#20 5.276 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/example_small_fuzzer /tmp/example_small_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 5.537 + rm -f /tmp/example_small_fuzzer.o
#20 5.538 + ln -sf /out/seed_corpus.zip /out/example_small_fuzzer_seed_corpus.zip
#20 5.539 + for f in $(find $SRC -name '*_fuzzer.c')
#20 5.540 ++ basename -s .c /src/example_large_fuzzer.c
#20 5.541 + b=example_large_fuzzer
#20 5.541 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/example_large_fuzzer.c -c -o /tmp/example_large_fuzzer.o
#20 5.625 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/example_large_fuzzer /tmp/example_large_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 5.874 + rm -f /tmp/example_large_fuzzer.o
#20 5.875 + ln -sf /out/seed_corpus.zip /out/example_large_fuzzer_seed_corpus.zip
#20 5.877 + for f in $(find $SRC -name '*_fuzzer.c')
#20 5.877 ++ basename -s .c /src/example_flush_fuzzer.c
#20 5.879 + b=example_flush_fuzzer
#20 5.879 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/example_flush_fuzzer.c -c -o /tmp/example_flush_fuzzer.o
#20 5.960 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/example_flush_fuzzer /tmp/example_flush_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 6.209 + rm -f /tmp/example_flush_fuzzer.o
#20 6.211 + ln -sf /out/seed_corpus.zip /out/example_flush_fuzzer_seed_corpus.zip
#20 6.212 + for f in $(find $SRC -name '*_fuzzer.c')
#20 6.213 ++ basename -s .c /src/example_dict_fuzzer.c
#20 6.214 + b=example_dict_fuzzer
#20 6.214 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/example_dict_fuzzer.c -c -o /tmp/example_dict_fuzzer.o
#20 6.308 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/example_dict_fuzzer /tmp/example_dict_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 6.572 + rm -f /tmp/example_dict_fuzzer.o
#20 6.574 + ln -sf /out/seed_corpus.zip /out/example_dict_fuzzer_seed_corpus.zip
#20 6.575 + for f in $(find $SRC -name '*_fuzzer.c')
#20 6.575 ++ basename -s .c /src/minigzip_fuzzer.c
#20 6.576 + b=minigzip_fuzzer
#20 6.576 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/minigzip_fuzzer.c -c -o /tmp/minigzip_fuzzer.o
#20 6.673 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/minigzip_fuzzer /tmp/minigzip_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 6.926 + rm -f /tmp/minigzip_fuzzer.o
#20 6.927 + ln -sf /out/seed_corpus.zip /out/minigzip_fuzzer_seed_corpus.zip
#20 6.929 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 7.1s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:b8ea1923477d943943b82ff94d53f0e7fbf3cb21d3c931c36b59c802176439c6 done
#21 naming to gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:d7a4645de21228473e54326c27b211b5a089195003bb3529e951e764a14f66b0
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:d02bcd0196c6158ec494ab0497ee6c7c980a5b955a8f92feaf8eae78f2279f87
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer-intermediate
#5 sha256:4abace62d93e3e3ad2e1c1f668f1631706f9b2e22f4acfbb3b5957db233c5a41
#5 ERROR: gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer-intermediate:latest: not found

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:2c1a4fdee9c5d94984aa494cbb6ed2d2c3af173ad21b30731bc92c7eb4e30e66 done
#6 naming to gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:5c73f06224d12e9c080202af6e2c79f9137f0fd23e27a942da9396a628a01265
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:eab96020d6bc2316cb263a34a98c338ea292d4e5b8cae23c8a9eddddac57d60b
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer-intermediate:latest
#4 sha256:4665a5f719e200fd37d126271eda8fbebd54c470a8a416480d613d047bc59930
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer:latest
#3 sha256:376e8ea78b956beb87b84b2a7511f6006b570d9e9d33402e43399229d573dc89
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:2d89fc353775c75cea904fa78b5e3919409e1929b776fbdbea22077cf1b87d5b
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer-intermediate
#6 sha256:ac8e893e52193dfe392ff0dbf326bb79ed4c2c89c5055d2749356a9bab0ca39c
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer
#10 sha256:2c23dcaad05f9957a99c93b5b314b520babef3252ae54c3a72ceabf0ab855c87
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer
#5 sha256:1c9f9d29d6269c1bfda9a5ffd0ac96121db32126285e50508c84b7d6e13a0adc
#5 ERROR: gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:2d89fc353775c75cea904fa78b5e3919409e1929b776fbdbea22077cf1b87d5b
#12 transferring context: 9.06MB 0.2s done
#12 DONE 0.2s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer
#10 sha256:2c23dcaad05f9957a99c93b5b314b520babef3252ae54c3a72ceabf0ab855c87
#10 DONE 0.4s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:4c042054d5bd4e3f3d8db4b6abe3d2311971b68c9383aaef87e4886489c1b9a3
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:800a935c7d5858eb556d57348545849f2439b8610d73e3524848374c15cc5e73
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:664829080ba7a3e42a777428dd0caa26409d1e83fa05ec2d08d444cae70dfe29
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:1d01624082a4e68174d3244880edbb38dd324bf462fba7a42c30242d416bec79
#11 DONE 0.2s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:580dc689433ea004a7744087338a7961b92262ccd2813365e56fb43667e5fb0b
#13 DONE 0.2s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:171153b052395b37d3bf7d153ad7ae46238bff2c732faa3dace05d4bddbf202c
#14 DONE 0.2s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:dacbee2896cb4b7a89a32f4862669bb418ef0854f0b2f41e9d176a4cae9229f8
#15 DONE 0.4s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:0f95e6094eaf2b5cadb2d92d4e25d2b1ed6617e82d7f0015aa8672271a9ad190
#16 DONE 0.5s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:7f6eb4c7d7901803f375ae483492377365c07c75428a722cdc692a3789ada7c4
#17 DONE 0.1s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:2936d9ec887989dee188f2ed9d39cbcc1195a45b28fe5fd45b559838e3fc3929
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:675386f6c372b3d3b894ea38d5b01c1e0f8835a57d2632203e1da26312b44641
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:cdac2a3869d060d29a0788d313dfa69dc219011a1839f6c17f726aaa0ad8d65f
#20 DONE 0.4s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:f38956e38d2285d6027f233eaa31bf4eae01591e9db9f60932e81a868b27e1e0 done
#21 naming to gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer done
#21 DONE 0.0s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Unarchived 77 files from seed corpus /out/minigzip_fuzzer_seed_corpus.zip.
INFO:root:Doing final sync.
