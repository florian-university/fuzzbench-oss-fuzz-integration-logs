WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: lzo_lzo_decompress_target.
INFO:root:Please run "make test-run-afl-lzo_lzo_decompress_target" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:8101c1abc122c52988fdcc4dd196fd9febff91dbc5390c39b462f5fb58f04d1d
#1 transferring dockerfile: 1.01kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:727a39b3296a4670cc2c9e971bf0f6c968e467790271862273d8300e6bf7c618
#2 transferring context: 0.0s
#2 transferring context: 2B 0.0s done
#2 DONE 0.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#4 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#4 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#4 DONE 0.0s

#7 [internal] load build context
#7 sha256:ebd360432433d94131c547a2c18d4b97fc683565b43f4d89836bc3cd3c37da17
#7 DONE 0.0s

#10 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target
#10 sha256:36daac9b393d9d9f74e34b6fb93568b32ced6541d5477d44db637835a17878dd
#10 ERROR: gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target:latest: not found

#7 [internal] load build context
#7 sha256:ebd360432433d94131c547a2c18d4b97fc683565b43f4d89836bc3cd3c37da17
#7 transferring context: 17.83kB done
#7 DONE 0.0s

#8 [4/5] COPY *.c *.cc *.options build.sh /src/
#8 sha256:739221d2f6a1c5326bdd1390ff79edf12d117592fcde7298bf7c574518c5bf17
#8 CACHED

#5 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#5 sha256:4a36570962698a9dd6707bba1ce7d1da85f2389d0ec6c6f4efe406fbfa0cedec
#5 CACHED

#6 [3/5] RUN wget -O lzo.tar.gz     http://www.oberhumer.com/opensource/lzo/download/lzo-2.10.tar.gz
#6 sha256:62a7f7a8616630c22ea04b03bd566fb72ba3b36ca7a89ccbae802bfb168a3ab7
#6 CACHED

#9 [5/5] COPY lzo_decompress_target_seeds /src/lzo_decompress_target_seeds
#9 sha256:a4109bf37aed97810dc35c57258d3e3b61d6ec72a3f6e63b2ed9e73317b6361a
#9 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:93f5be9e910ab6d92f5861f87f2ff32eef1934433a1a8434d632323bcec0f2f1 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:5314f2a4a8d620821a98fba43ef95897c955b618fc5ebbba31694ff240e478e6
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:60d7277d497b23a8250854dac63ff4270cf257486e95d13008f69209874aff4b
#2 transferring context:
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target:latest
#3 sha256:80acfac66a8714350cbac83e1e50abe969e83e5472cd4693fcb9ddb15af4851b
#3 DONE 0.0s

#4 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target
#4 sha256:243f7de1b7f1c36ab66e56a787aba7344bec81161eb0a6c7b58acade3918f981
#4 DONE 0.0s

#7 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate
#7 sha256:790a0798dc94d5890fdb88db33339399be52c6d0de53e377f887d3a9eef793f7
#7 ERROR: gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate:latest: not found

#5 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#5 sha256:9f36545926f05941000e8c3777d88d97f3221ae1ea10ca2f3fc20c62ec54b432
#5 CACHED

#6 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#6 sha256:0ab8921b55c7b8cb3bbcb974aa2b005fb5e1f29b0572c6d5c11a62d040be05bc
#6 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:9aa7b88734264d39c6bbb6110199c4e9640b6e3ee91d3d6028b8b8f496ec1263 done
#8 naming to gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:1304e63217a0ffda74428c74de677403be1ada59f405aed85c0a756f06fcc286
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:92653cd8ee4a50bd3be695094e7baf6c4aea1b2534f43f58f353cd054469c89b
#2 transferring context:
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:9836e9a5a84280eb56a7dd72fd59c4a904f34122206e1da35c73f53e5b761a77
#8 transferring context: 591B 0.1s done
#8 DONE 0.1s

#9 [4/7] COPY ./requirements.txt /
#9 sha256:888026a4181fc3c4747f6ba898bcf666f43b90784f8dd6f504d2bb4e5930a759
#9 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:f447be7a25b86abc9cbc9d897219ec69f9165cfb3f409982a289d6a191cc81aa
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:07aea6ddc14d846376d65142ce043fff76a060277fc3ad60b3e9d97de93ccc01
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:42d36f32cebf2520925604cca193114177b9e8cf38aa6e136fad25d74f9a29fc
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:421fd4bc2fd3686d2d38fb2dd0ae32aea018ff1219ecd7c9dbfcb1172525f564 done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:33454841a96dd6d01309405030f07f8f41535e63a88e929958ce76f705b9eea0
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:ba07ebafdec80b1108a293d4c37658701f3d5871e85533de92ddbf65d14d397b
#2 transferring context: 34B done
#2 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate:latest
#3 sha256:57277ad610ff2521191e75da22afb9064f4a9cf1f1cf01d5bb679fea15a74973
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:a33cbd801f76d9b63bf019b8e2da30701b07cd84b2a015fe61a25b26db74f5b8
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate
#6 sha256:0431697bc05bb7dd576b8c033524251400cc829120bf34576c4f5bcdf1f41695
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target
#5 sha256:f5ad800077a190aafdad177ae8d36c9409387967f4c03cc6e231d67b6f6f03f9
#5 ERROR: gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target:latest: not found

#12 [internal] load build context
#12 sha256:a33cbd801f76d9b63bf019b8e2da30701b07cd84b2a015fe61a25b26db74f5b8
#12 transferring context: 742.41kB 0.1s done
#12 DONE 0.2s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:2551bc1000e391b57ca9c3138c085a4af7e7336e79998f941824d50fa9edcf05
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:dd5429ca0285b084777db6fe279ac9a5dd4001d2ac19e458af0eb9b823f5d9b2
#11 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:fecde7b439d88f9341f9a0f44b1783e0cc85a2c596199ab96d93e9ed4a72174e
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:df4068d2096acf7ce14b6b0bfb8c97bdd5f67a7789badf68b66cc3b5c44309a7
#9 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:5bd510e7e7c239889fb90203ec554511ed810a10c52f2e73af3bba526da12335
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:82c414e09610e682b416a248b4acbb6bdfcbd0d5479cc5d3f78336769a7b3769
#14 DONE 1.3s

#15 [stage-1  8/13] COPY benchmarks/lzo_lzo_decompress_target/benchmark.yaml /
#15 sha256:3bcef128f7167a09d97869bbf20137cfefe279eda0a14c82de2044bed8d40499
#15 DONE 0.1s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:f2ba6303e542ff2c9208d5a635ed05595d7db74cb3cedaa0af9723c87a9146fd
#16 DONE 1.3s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:da514e5a51a392dd759b186cba058fc0db2ff15acdce5069d45bd3fdd746aad8
#17 DONE 0.1s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:c3c6c0ab5c83d41c0625b791c22b6bb4ae88b6f943b877e3ea01d821f4d9e773
#18 1.245 Checking out commit d561c49a
#18 1.252 error: pathspec 'd561c49a' did not match any file(s) known to git
#18 1.276 error: pathspec 'd561c49a' did not match any file(s) known to git
#18 1.365 Checkout unsuccessful.
#18 DONE 1.5s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:ffb51fc63003c2e26db209d9ea03932acfa34059da75c0eddeb4da4b9949ab2d
#19 DONE 1.2s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:26852678ce57141d19029450a80587083b77fc167b2dd2f72257c03fc0c7baac
#20 1.256 Run fuzzer_build to build the target
#20 1.629 FUZZ_TARGET = lzo_decompress_target
#20 1.629 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 1.629 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 1.648 Building benchmark lzo_lzo_decompress_target with fuzzer afl
#20 1.653 + cd /src
#20 1.653 + tar xzf lzo.tar.gz
#20 1.812 + cd lzo-2.10
#20 1.813 + ./configure
#20 2.451 configure: Configuring LZO 2.10
#20 2.512 checking build system type... x86_64-pc-linux-gnu
#20 2.724 checking host system type... x86_64-pc-linux-gnu
#20 2.725 checking target system type... x86_64-pc-linux-gnu
#20 2.726 checking whether to enable maintainer-specific portions of Makefiles... no
#20 2.728 checking for gcc... clang
#20 2.951 checking whether the C compiler works... yes
#20 3.298 checking for C compiler default output file name... a.out
#20 3.301 checking for suffix of executables... 
#20 3.606 checking whether we are cross compiling... no
#20 3.935 checking for suffix of object files... o
#20 4.019 checking whether we are using the GNU C compiler... yes
#20 4.085 checking whether clang accepts -g... yes
#20 4.132 checking for clang option to accept ISO C89... none needed
#20 4.232 checking whether clang understands -c and -o together... yes
#20 4.338 checking for ar... ar
#20 4.347 checking the archiver (ar) interface... ar
#20 4.449 checking for style of include used by make... GNU
#20 4.471 checking dependency style of clang... gcc3
#20 4.621 checking how to run the C preprocessor... clang -E
#20 4.907 checking whether the C preprocessor needs special flags... none needed
#20 4.985 checking for an ANSI C-conforming const... yes
#20 5.052 checking for grep that handles long lines and -e... /usr/bin/grep
#20 5.058 checking for egrep... /usr/bin/grep -E
#20 5.064 checking for ANSI C header files... yes
#20 5.738 checking for sys/types.h... yes
#20 5.901 checking for sys/stat.h... yes
#20 6.058 checking for stdlib.h... yes
#20 6.226 checking for string.h... yes
#20 6.382 checking for memory.h... yes
#20 6.522 checking for strings.h... yes
#20 6.698 checking for inttypes.h... yes
#20 6.886 checking for stdint.h... yes
#20 7.086 checking for unistd.h... yes
#20 7.219 checking whether byte ordering is bigendian... no
#20 7.497 checking for special C compiler options needed for large files... no
#20 7.498 checking for _FILE_OFFSET_BITS value needed for large files... no
#20 7.592 checking for a BSD-compatible install... /usr/bin/install -c
#20 7.620 checking whether build environment is sane... yes
#20 7.653 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 7.661 checking for gawk... no
#20 7.662 checking for mawk... mawk
#20 7.664 checking whether make sets $(MAKE)... yes
#20 7.714 checking whether make supports nested variables... yes
#20 7.757 checking dependency style of clang... gcc3
#20 7.931 checking whether make supports nested variables... (cached) yes
#20 7.933 checking how to print strings... printf
#20 8.114 checking for a sed that does not truncate output... /usr/bin/sed
#20 8.139 checking for fgrep... /usr/bin/grep -F
#20 8.154 checking for ld used by clang... /usr/bin/ld
#20 8.236 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 8.246 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 8.263 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 8.341 checking whether ln -s works... yes
#20 8.343 checking the maximum length of command line arguments... 1572864
#20 8.382 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 8.384 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 8.385 checking for /usr/bin/ld option to reload object files... -r
#20 8.388 checking for objdump... objdump
#20 8.393 checking how to recognize dependent libraries... pass_all
#20 8.402 checking for dlltool... no
#20 8.404 checking how to associate runtime and link libraries... printf %s\n
#20 8.407 checking for archiver @FILE support... @
#20 8.535 checking for strip... strip
#20 8.538 checking for ranlib... ranlib
#20 8.554 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 9.115 checking for sysroot... no
#20 9.181 checking for mt... no
#20 9.183 checking if : is a manifest tool... no
#20 9.199 checking for dlfcn.h... yes
#20 9.374 checking for objdir... .libs
#20 9.857 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 9.943 checking for clang option to produce PIC... -fPIC -DPIC
#20 9.944 checking if clang PIC flag -fPIC -DPIC works... yes
#20 10.06 checking if clang static flag -static works... yes
#20 10.49 checking if clang supports -c -o file.o... yes
#20 10.57 checking if clang supports -c -o file.o... (cached) yes
#20 10.58 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 10.64 checking dynamic linker characteristics... GNU/Linux ld.so
#20 11.19 checking how to hardcode library paths into programs... immediate
#20 11.19 checking whether stripping libraries is possible... yes
#20 11.21 checking if libtool supports shared libraries... yes
#20 11.21 checking whether to build shared libraries... no
#20 11.21 checking whether to build static libraries... yes
#20 11.21 checking whether time.h and sys/time.h may both be included... yes
#20 11.32 checking assert.h usability... yes
#20 11.52 checking assert.h presence... yes
#20 11.58 checking for assert.h... yes
#20 11.63 checking ctype.h usability... yes
#20 11.81 checking ctype.h presence... yes
#20 11.89 checking for ctype.h... yes
#20 11.94 checking dirent.h usability... yes
#20 12.12 checking dirent.h presence... yes
#20 12.19 checking for dirent.h... yes
#20 12.22 checking errno.h usability... yes
#20 12.39 checking errno.h presence... yes
#20 12.45 checking for errno.h... yes
#20 12.50 checking fcntl.h usability... yes
#20 12.66 checking fcntl.h presence... yes
#20 12.73 checking for fcntl.h... yes
#20 12.76 checking float.h usability... yes
#20 12.90 checking float.h presence... yes
#20 12.95 checking for float.h... yes
#20 12.98 checking limits.h usability... yes
#20 13.14 checking limits.h presence... yes
#20 13.19 checking for limits.h... yes
#20 13.23 checking malloc.h usability... yes
#20 13.38 checking malloc.h presence... yes
#20 13.47 checking for malloc.h... yes
#20 13.49 checking for memory.h... (cached) yes
#20 13.54 checking setjmp.h usability... yes
#20 13.71 checking setjmp.h presence... yes
#20 13.79 checking for setjmp.h... yes
#20 13.82 checking signal.h usability... yes
#20 13.99 checking signal.h presence... yes
#20 14.05 checking for signal.h... yes
#20 14.09 checking stdarg.h usability... yes
#20 14.24 checking stdarg.h presence... yes
#20 14.28 checking for stdarg.h... yes
#20 14.30 checking stddef.h usability... yes
#20 14.45 checking stddef.h presence... yes
#20 14.49 checking for stddef.h... yes
#20 14.51 checking for stdint.h... (cached) yes
#20 14.55 checking stdio.h usability... yes
#20 14.69 checking stdio.h presence... yes
#20 14.76 checking for stdio.h... yes
#20 14.79 checking for stdlib.h... (cached) yes
#20 14.85 checking for string.h... (cached) yes
#20 14.90 checking for strings.h... (cached) yes
#20 14.93 checking time.h usability... yes
#20 15.11 checking time.h presence... yes
#20 15.18 checking for time.h... yes
#20 15.21 checking for unistd.h... (cached) yes
#20 15.27 checking utime.h usability... yes
#20 15.43 checking utime.h presence... yes
#20 15.48 checking for utime.h... yes
#20 15.50 checking sys/mman.h usability... yes
#20 15.70 checking sys/mman.h presence... yes
#20 15.76 checking for sys/mman.h... yes
#20 15.79 checking sys/resource.h usability... yes
#20 15.97 checking sys/resource.h presence... yes
#20 16.04 checking for sys/resource.h... yes
#20 16.07 checking for sys/stat.h... (cached) yes
#20 16.11 checking sys/time.h usability... yes
#20 16.27 checking sys/time.h presence... yes
#20 16.32 checking for sys/time.h... yes
#20 16.35 checking for sys/types.h... (cached) yes
#20 16.38 checking sys/wait.h usability... yes
#20 16.52 checking sys/wait.h presence... yes
#20 16.58 checking for sys/wait.h... yes
#20 16.60 checking whether limits.h is sane... yes
#20 16.68 checking for off_t... yes
#20 17.03 checking for ptrdiff_t... yes
#20 17.38 checking for size_t... yes
#20 17.73 checking return type of signal handlers... void
#20 17.84 checking size of short... 2
#20 18.31 checking size of int... 4
#20 18.70 checking size of long... 8
#20 19.13 checking size of long long... 8
#20 19.54 checking size of __int16... 0
#20 19.76 checking size of __int32... 0
#20 19.97 checking size of __int64... 0
#20 20.16 checking size of void *... 8
#20 20.58 checking size of size_t... 8
#20 20.98 checking size of ptrdiff_t... 8
#20 21.43 checking size of __int32... (cached) 0
#20 21.43 checking size of intmax_t... 8
#20 21.78 checking size of uintmax_t... 8
#20 22.20 checking size of intptr_t... 8
#20 22.65 checking size of uintptr_t... 8
#20 23.09 checking size of float... 4
#20 23.47 checking size of double... 8
#20 23.89 checking size of long double... 16
#20 24.26 checking size of dev_t... 8
#20 24.69 checking size of fpos_t... 16
#20 25.16 checking size of mode_t... 4
#20 25.59 checking size of off_t... 8
#20 25.97 checking size of ssize_t... 8
#20 26.33 checking size of time_t... 8
#20 26.73 checking for access... yes
#20 27.09 checking for alloca... no
#20 27.48 checking for atexit... yes
#20 27.79 checking for atoi... yes
#20 28.16 checking for atol... yes
#20 28.47 checking for chmod... yes
#20 28.80 checking for chown... yes
#20 29.18 checking for clock_getcpuclockid... yes
#20 29.57 checking for clock_getres... yes
#20 29.89 checking for clock_gettime... yes
#20 30.27 checking for ctime... yes
#20 30.60 checking for difftime... yes
#20 31.00 checking for fstat... yes
#20 31.35 checking for getenv... yes
#20 31.68 checking for getpagesize... yes
#20 32.00 checking for getrusage... yes
#20 32.35 checking for gettimeofday... yes
#20 32.69 checking for gmtime... yes
#20 33.04 checking for isatty... yes
#20 33.32 checking for localtime... yes
#20 33.61 checking for longjmp... yes
#20 33.99 checking for lstat... yes
#20 34.40 checking for memcmp... yes
#20 34.81 checking for memcpy... yes
#20 35.18 checking for memmove... yes
#20 35.52 checking for memset... yes
#20 35.95 checking for mkdir... yes
#20 36.35 checking for mktime... yes
#20 36.66 checking for mmap... yes
#20 36.97 checking for mprotect... yes
#20 37.34 checking for munmap... yes
#20 37.65 checking for qsort... yes
#20 38.05 checking for raise... yes
#20 38.43 checking for rmdir... yes
#20 38.80 checking for setjmp... yes
#20 39.14 checking for signal... yes
#20 39.45 checking for snprintf... yes
#20 39.78 checking for strcasecmp... yes
#20 40.13 checking for strchr... yes
#20 40.52 checking for strdup... yes
#20 40.99 checking for strerror... yes
#20 41.38 checking for strftime... yes
#20 41.74 checking for stricmp... no
#20 42.12 checking for strncasecmp... yes
#20 42.47 checking for strnicmp... no
#20 42.78 checking for strrchr... yes
#20 43.11 checking for strstr... yes
#20 43.50 checking for time... yes
#20 43.96 checking for umask... yes
#20 44.32 checking for utime... yes
#20 44.64 checking for vsnprintf... yes
#20 44.95 checking whether to build assembly versions... no
#20 45.03 checking whether your compiler passes the LZO conformance test... yes
#20 45.48 checking that generated files are newer than configure... done
#20 45.48 configure: creating ./config.status
#20 48.25 config.status: creating Makefile
#20 48.33 config.status: creating lzo2.pc
#20 48.39 config.status: creating config.h
#20 48.44 config.status: executing depfiles commands
#20 49.38 config.status: executing libtool commands
#20 49.45 
#20 49.45    LZO configuration summary
#20 49.45    -------------------------
#20 49.45    LZO version                : 2.10
#20 49.45    configured for host        : x86_64-pc-linux-gnu
#20 49.45    source code location       : .
#20 49.45    compiler                   : clang
#20 49.45    preprocessor definitions   : -DLZO_HAVE_CONFIG_H=1
#20 49.45    preprocessor flags         : 
#20 49.45    compiler flags             : -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard
#20 49.45    build static library       : yes
#20 49.45    build shared library       : no
#20 49.45    enable i386 assembly code  : no
#20 49.45 
#20 49.45 
#20 49.45    LZO 2.10 configured.
#20 49.45 
#20 49.45    Copyright (C) 1996-2017 Markus Franz Xaver Johannes Oberhumer
#20 49.45    All Rights Reserved.
#20 49.45 
#20 49.45    The LZO library is free software; you can redistribute it and/or
#20 49.45    modify it under the terms of the GNU General Public License as
#20 49.45    published by the Free Software Foundation; either version 2 of
#20 49.45    the License, or (at your option) any later version.
#20 49.45 
#20 49.45    The LZO library is distributed in the hope that it will be useful,
#20 49.45    but WITHOUT ANY WARRANTY; without even the implied warranty of
#20 49.45    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#20 49.45    GNU General Public License for more details.
#20 49.45 
#20 49.45    Markus F.X.J. Oberhumer
#20 49.45    <markus@oberhumer.com>
#20 49.45    http://www.oberhumer.com/opensource/lzo/
#20 49.45 
#20 49.45 
#20 49.45 Type 'make' to build LZO.
#20 49.45 Type 'make check' and 'make test' to test LZO.
#20 49.45 Type 'make install' to install LZO.
#20 49.45 After installing LZO, please have a look at 'examples/simple.c'.
#20 49.45 
#20 49.66 ++ nproc
#20 49.66 + make -j8
#20 49.69 make  all-am
#20 49.75 make[1]: Entering directory '/src/lzo-2.10'
#20 49.92   CC       src/lzo1.lo
#20 49.93   CC       src/lzo1_99.lo
#20 49.94   CC       src/lzo1a.lo
#20 49.94   CC       src/lzo1b_1.lo
#20 49.95   CC       src/lzo1b_2.lo
#20 49.95   CC       src/lzo1a_99.lo
#20 49.96   CC       src/lzo1b_3.lo
#20 49.98   CC       src/lzo1b_4.lo
#20 55.36   CC       src/lzo1b_5.lo
#20 55.43   CC       src/lzo1b_6.lo
#20 55.45   CC       src/lzo1b_7.lo
#20 55.46   CC       src/lzo1b_8.lo
#20 55.74   CC       src/lzo1b_9.lo
#20 56.08   CC       src/lzo1b_99.lo
#20 56.13   CC       src/lzo1b_9x.lo
#20 56.45   CC       src/lzo1b_cc.lo
#20 60.95   CC       src/lzo1b_d1.lo
#20 61.08   CC       src/lzo1b_d2.lo
#20 61.29   CC       src/lzo1b_rr.lo
#20 61.38   CC       src/lzo1b_xx.lo
#20 61.50   CC       src/lzo1c_1.lo
#20 61.79   CC       src/lzo1c_2.lo
#20 62.18   CC       src/lzo1c_3.lo
#20 62.66   CC       src/lzo1c_4.lo
#20 65.54   CC       src/lzo1c_5.lo
#20 66.53   CC       src/lzo1c_6.lo
#20 66.70   CC       src/lzo1c_7.lo
#20 66.82   CC       src/lzo1c_8.lo
#20 67.50   CC       src/lzo1c_9.lo
#20 67.65   CC       src/lzo1c_99.lo
#20 67.97   CC       src/lzo1c_9x.lo
#20 69.41   CC       src/lzo1c_cc.lo
#20 71.35   CC       src/lzo1c_d1.lo
#20 72.72   CC       src/lzo1c_d2.lo
#20 72.92   CC       src/lzo1c_rr.lo
#20 73.85   CC       src/lzo1c_xx.lo
#20 73.98   CC       src/lzo1f_1.lo
#20 74.24   CC       src/lzo1f_9x.lo
#20 74.27   CC       src/lzo1f_d1.lo
#20 74.33   CC       src/lzo1f_d2.lo
#20 77.71   CC       src/lzo1x_1.lo
#20 77.72   CC       src/lzo1x_1k.lo
#20 77.73   CC       src/lzo1x_1l.lo
#20 79.41   CC       src/lzo1x_1o.lo
#20 79.80   CC       src/lzo1x_9x.lo
#20 79.92   CC       src/lzo1x_d1.lo
#20 80.63   CC       src/lzo1x_d2.lo
#20 81.98   CC       src/lzo1x_d3.lo
#20 83.50   CC       src/lzo1x_o.lo
#20 83.58   CC       src/lzo1y_1.lo
#20 84.04   CC       src/lzo1y_9x.lo
#20 84.92   CC       src/lzo1y_d1.lo
#20 85.85   CC       src/lzo1y_d2.lo
#20 87.31   CC       src/lzo1y_d3.lo
#20 88.36   CC       src/lzo1y_o.lo
#20 89.21   CC       src/lzo1z_9x.lo
#20 89.46   CC       src/lzo1z_d1.lo
#20 89.84   CC       src/lzo1z_d2.lo
#20 90.52   CC       src/lzo1z_d3.lo
#20 91.45   CC       src/lzo2a_9x.lo
#20 92.26   CC       src/lzo2a_d1.lo
#20 93.18   CC       src/lzo2a_d2.lo
#20 93.62   CC       src/lzo_crc.lo
#20 95.04   CC       src/lzo_init.lo
#20 95.32   CC       src/lzo_ptr.lo
#20 96.97   CC       src/lzo_str.lo
#20 97.14   CC       src/lzo_util.lo
#20 98.15   CC       examples/dict.o
#20 98.16   CC       examples/lzopack.o
#20 98.22   CC       examples/overlap.o
#20 98.45   CC       examples/precomp.o
#20 99.48   CC       examples/precomp2.o
#20 99.80   CC       examples/simple.o
#20 99.80   CC       lzotest/lzotest.o
#20 99.83   CC       tests/align.o
#20 100.1   CC       tests/chksum.o
#20 101.0   CC       tests/promote.o
#20 101.1   CC       tests/sizes.o
#20 101.2   CC       minilzo/t-testmini.o
#20 101.2   CC       minilzo/t-minilzo.o
#20 101.4   CCLD     tests/promote
#20 101.5   CCLD     tests/sizes
#20 102.1   CCLD     src/liblzo2.la
#20 105.2   CCLD     minilzo/testmini
#20 105.7 ar: `u' modifier ignored since `D' is the default (see `U')
#20 106.1   CCLD     examples/dict
#20 106.1   CCLD     examples/lzopack
#20 106.2   CCLD     examples/overlap
#20 106.2   CCLD     examples/precomp
#20 106.2   CCLD     examples/precomp2
#20 106.2   CCLD     examples/simple
#20 109.6   CCLD     tests/align
#20 110.6   CCLD     tests/chksum
#20 110.8   CCLD     lzotest/lzotest
#20 114.0 make[1]: Leaving directory '/src/lzo-2.10'
#20 114.0 + for file in $SRC/*.c
#20 114.0 ++ basename /src/lzo_compress_target.c .c
#20 114.0 + name=lzo_compress_target
#20 114.0 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -I include -I minilzo -I include/lzo /src/lzo_compress_target.c -o lzo_compress_target.o
#20 114.2 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I include -I minilzo -I include/lzo lzo_compress_target.o -o /out/lzo_compress_target /libAFL.a src/.libs/liblzo2.a
#20 114.7 + for file in $SRC/*.c
#20 114.7 ++ basename /src/lzo_decompress_target.c .c
#20 114.7 + name=lzo_decompress_target
#20 114.7 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -I include -I minilzo -I include/lzo /src/lzo_decompress_target.c -o lzo_decompress_target.o
#20 114.8 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I include -I minilzo -I include/lzo lzo_decompress_target.o -o /out/lzo_decompress_target /libAFL.a src/.libs/liblzo2.a
#20 115.4 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I include -I minilzo -I include/lzo /src/all_lzo_compress.cc -o /out/all_lzo_compress /libAFL.a src/.libs/liblzo2.a
#20 118.5 + cp /src/lzo_compress_target.options /src/lzo_decompress_target.options /out/
#20 118.5 + zip -j /out/lzo_decompress_target_seed_corpus.zip /src/lzo_decompress_target_seeds/seed.lzo
#20 118.5   adding: seed.lzo (deflated 6%)
#20 118.5 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 118.7s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:d8a0334c4667fc8cc9afab9c2b80ecdb83aa0d8ba8ba3aa1adb71e320a2c5252 done
#21 naming to gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:8f12033eb4d75ca599dac9af29a16b9e66bbd05e4f1f908b45ebcdc6e6e3499f
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:baa43e1f3e12aa6998cdcc51d2454adb95b02f769560217b6a7b964efbb99bfa
#2 transferring context: 2B done
#2 DONE 0.1s

#4 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:2d70b12f7febc4bbdb90c915fe725c67a492af7bfbaab726410d4db571339d67 done
#6 naming to gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate
#5 sha256:c4ed430e28f11ea8d5c6c58c9b5ba67039ccb652fb409a3df4c19c0e24a5788f
#5 ERROR: gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate:latest: not found
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:842071173ede1ba48d794ad5cd7df3a03587a3c44e62aa318719d767a736f703
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:a7df2f93d73cc5a6d585863a732964582f0e023ec863cdeee659330c216256b6
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target:latest
#3 sha256:ff9f16c2770d2e26006f04c530cb11894ed73123f078196236ac718a17ca0892
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate:latest
#4 sha256:2bd3c1473c0b46c80adf5f44c76f5170c1a1c6a5b0407c436634ec46fb1a2479
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:ed187cfcd6eaf41309d8adf04bfb559f13c71de96d6c1f7d97a7e62b39bea24d
#12 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target
#5 sha256:e2d20e3fdd5c06f6f1f660580709a0a32251c925314e95f27f780d5a59e9683d
#5 ERROR: gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target:latest: not found

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate
#6 sha256:1f01e4df7001fe17bb56f959af14a80030f698c6534dcdfa477c96269267f825
#6 DONE 0.0s

#12 [internal] load build context
#12 sha256:ed187cfcd6eaf41309d8adf04bfb559f13c71de96d6c1f7d97a7e62b39bea24d
#12 transferring context: 9.04MB 0.5s done
#12 DONE 0.6s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target
#10 sha256:28689005e55c7bb7608ffc481c505f2f8e3f5880dd06a7c608e6e20ad7accb35
#10 DONE 0.7s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:5298844308dde8f0c46d0a037c2a4eccebe2f1acc6435a22b5a5a0247e046512
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:d7611944ed4e960d15365bc6b859c437e7a6015d9899cae1dbe0105e3af9e75f
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:ea89c4fb466d21e7c79571e8bf55b65cc4ad82fa01eafb8e2970d4f9f84caf6e
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:5531f874c3d9a2a416c6f844ab6c7bfc489b2a05e77e857b693cc462efb37b7d
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:8e701d64883a5823b61afdbb19ee6362c5b1e5d2c001e46c0f97a99fc40e7ac0
#13 DONE 0.4s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:aa634b7ec4a2a7d5d0ebbb1634030cd6dc3472ba884831c5ff76ba6b64a71861
#14 DONE 0.3s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:bf916fb2ae0a025ee66f33002a451d7290c5dbb957d8bfd17876884d17bd7be0
#15 DONE 1.2s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:848342cc6fb4c493dc3992b3af76d3b5f294baff0df264fbb8b1ef2251d502b2
#16 DONE 1.5s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:f3fe5adf583ad634cbf57c22eb113c886203efef0d16bf49528791bb2710edbe
#17 DONE 0.2s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:9dae9d0f2bd6713d71153cdb3fe607f6c0d4381b94d2ca85f79f2f502786166f
#18 DONE 0.2s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:c73097a74b7cbd0eb0cdc5880416ceb13fd1b894789423375b28f3f5a32e99d6
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:b748c790c9412a3a2af92a866cc1ead6e9e761cccfb868037ff431c586b2d667
#20 DONE 1.2s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:d2fb57c2e31d4026aa0c79d66ddb5dc03e369949be41dd50253fea1a48ea8245 done
#21 naming to gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target done
#21 DONE 0.0s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Unarchived 1 files from seed corpus /out/lzo_decompress_target_seed_corpus.zip.
INFO:root:Doing final sync.
