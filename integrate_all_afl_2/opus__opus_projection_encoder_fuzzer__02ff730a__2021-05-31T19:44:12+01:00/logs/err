WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: opus_opus_projection_encoder_fuzzer.
INFO:root:Please run "make test-run-afl-opus_opus_projection_encoder_fuzzer" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:845e198f6f43890a564a1c6848da7fdddfa8c4845a5ae6be030c2c03592b4d36
#1 transferring dockerfile: 1.30kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:5820a1c7bbb277c3f7b5b8f97ca44a3caf9fee4f30d0a213f4b93ba8e5632ead
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#12 [internal] load build context
#12 sha256:f0ecd4b2fd76d858ccc34c4d0ea230a643513187d82566ad76240695d09d8741
#12 DONE 0.0s

#5 [1/9] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#5 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/opus_opus_projection_encoder_fuzzer
#4 sha256:892866a94af2990cb1f087522f988b3f082603450b2aae6f62050abd7d0ec7be
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/opus_opus_projection_encoder_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:f0ecd4b2fd76d858ccc34c4d0ea230a643513187d82566ad76240695d09d8741
#12 transferring context: 4.69kB done
#12 DONE 0.1s

#6 [2/9] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#6 sha256:4a36570962698a9dd6707bba1ce7d1da85f2389d0ec6c6f4efe406fbfa0cedec
#6 CACHED

#8 [4/9] RUN sed -i -e 's/xenial/bionic/g' /etc/apt/sources.list
#8 sha256:ed90565ac39226fdb08275fd2580fdbb159c9629c0df13c71eddfd11130c7cc9
#8 CACHED

#13 [8/9] COPY build.sh /src/
#13 sha256:cd230fc14ffee61156384c5fea7af1b3f7ae7a91458064a4244628f1c72b0982
#13 CACHED

#7 [3/9] RUN git clone https://gitlab.xiph.org/xiph/opus.git
#7 sha256:eb94f818b8dc5b4189af35d254c1a8d2882550d13d902bcfac1ae60b8af398e6
#7 CACHED

#9 [5/9] RUN apt-get update && apt-get install -y --reinstall wget
#9 sha256:bcad1c7781215707971594a4823963ebbe77c87a3490a635677366651d87ee4a
#9 CACHED

#10 [6/9] RUN wget https://opus-codec.org/static/testvectors/opus_testvectors.tar.gz
#10 sha256:a64c8b1cf66ec0c7bf19004594b5f0373d8ad527ee5087dc9174fa412dcd8023
#10 CACHED

#11 [7/9] WORKDIR opus
#11 sha256:59d8c77354e07fb423f55dc0b9110ef739a40010ee1a5f6ed2d1e22a23ee8688
#11 CACHED

#14 [9/9] COPY *.c tests/
#14 sha256:ea683a11738812fe896786969d3f33ca525d7b819af83d77382e7effc77c875f
#14 CACHED

#15 exporting to image
#15 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#15 exporting layers done
#15 writing image sha256:08d9a51d37e37c7549100657ca63d0280c8a7a5cbd025cd87e146c0e735f20fd
#15 writing image sha256:08d9a51d37e37c7549100657ca63d0280c8a7a5cbd025cd87e146c0e735f20fd done
#15 naming to gcr.io/fuzzbench/builders/benchmark/opus_opus_projection_encoder_fuzzer done
#15 DONE 0.2s

#16 exporting cache
#16 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#16 preparing build cache for export done
#16 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/opus_opus_projection_encoder_fuzzer:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:24e541485d0483ce3017c2ecef97cb0a5fbd1a380ca48ee1a6654d9b3ef606fa
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:bbb030cd0d90f87cb7c1af950c5ac2a48f25e6b6d9e9a601d72548c970363f29
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/opus_opus_projection_encoder_fuzzer:latest
#3 sha256:4b1922077a085e57185f6dcc4cca8301e5084898535fc34c5d41f5a64aa17238
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/opus_opus_projection_encoder_fuzzer
#5 sha256:887a8990fa03300da5d93cf1586da6394ddb3dec2fba01dfb51f3dc0e46313f1
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus_projection_encoder_fuzzer-intermediate
#4 sha256:5bbcc8e51030a5acefb4bf3150ec921d7ba48a163dec77467deb71e9485f07a8
#4 ERROR: gcr.io/fuzzbench/builders/afl/opus_opus_projection_encoder_fuzzer-intermediate:latest: not found

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:d4afaf00a20e80832d379fa513d9272623b3d48827e0fa8f4fa7731f31265034
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:b849203cc7a78fc6e12f6f0da6e2361ca1555d59a8440fd053296ae5ed19913a
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:fe9b7fafc65cc8515203f90b7922e772fee32b23aacc48abac64be680bba8bfe done
#8 naming to gcr.io/fuzzbench/builders/afl/opus_opus_projection_encoder_fuzzer-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus_projection_encoder_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:89db5c88366caee4fbde74633900d4cd362780271ca2039976c21dd1cdddc9f4
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:0e27194fbd09c0c5e28c099a8eb18dd0f4250cc3e077646a20f10b1511266441
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:7ec051f44d91a867d2aa26e8bb3112833216e32c6de74dd82f87af59792bb6cf
#8 transferring context: 591B 0.0s done
#8 DONE 0.1s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:6a5549cb4192cb1358b9e89f865af21b0d88eaf463fd5dd8a7878a49fc99c24b
#10 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:81c1e00d8699c1e4b4c41c03c6c70b66c025dc27c7d0c1dd56218db0c5d13459
#9 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:f286d3e1195b879ff0edf76d532db0273c8da0c25d7ba5276f934d6f832ea057
#11 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:5091d81326ed6cc50a58da97b4d290f5de5265b25a690fea1332f054af4b1d63
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:5fb2f80ccab2180926bb2bc5ede0619da567b589e8773822348f5143b515f16f done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:15f5aafd58b8f812fc12f2a9e16fad1f1734a7b68a00165221fa22c71136cc85
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:11018fcb2b2f7ceb82608f72fab79e5e931857f951084c6a1438163d387db660
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/opus_opus_projection_encoder_fuzzer-intermediate:latest
#3 sha256:68f4e8dad0a8da41b019fc42b6566fa1c5273a36486c74f2ead662bef453058c
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:56b14818c9f0c1fdb0233b5f513ded79abb455e4ea97478309e02170832cc7ba
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/opus_opus_projection_encoder_fuzzer-intermediate
#6 sha256:7e3b27924a01947c375b8b5c15ecdd9e2531523465fcf7582bf07b81112aa447
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus_projection_encoder_fuzzer
#5 sha256:5c0dce9f6bcda9c96f84b36f4862bbd9bf74d0c5055fd9f186816f5bd800f8e2
#5 ERROR: gcr.io/fuzzbench/builders/afl/opus_opus_projection_encoder_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:56b14818c9f0c1fdb0233b5f513ded79abb455e4ea97478309e02170832cc7ba
#12 transferring context: 742.44kB 0.1s done
#12 DONE 0.1s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:45c6b5fc06cca26db10b5ee61f4ccdc4e70f79e9a99e93d88aadb0eb70fce364
#11 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:e1d94f2e9f17fc621adf6e7c7bb83f96fbe7b740fb29b93df219be6b7221050e
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:dc738174dcc0b434ab95e1f8643568e18489eb0ec74f74f90f3d2a4015b16fdd
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:cc625989f642587aa0dcd5ece4978cabe17ddb712b334d5022ea4de1a349a01e
#10 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:90a36524a66a6d7ce5ad02c4cfb0a9d880fc0b3e680f62c0ebff345a70a20732
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:70f4d5de743481658ec98a6fe0d0b2323d3a79b09282d1b95d1479f6f844261a
#14 DONE 0.5s

#15 [stage-1  8/13] COPY benchmarks/opus_opus_projection_encoder_fuzzer/benchmark.yaml /
#15 sha256:99e4d2bdea351e3f36faadc61c5fae9cc85b72d36372f44392d8f86a9609f8de
#15 DONE 0.1s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:2c505571c8c9cd547be651c2dd4999ba0328e6f91d2cdcde42db0e21d794544b
#16 DONE 0.5s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:985fe5a61740b6de9367e4e12174867b0b6db10b87f623e4027698ae4897cf97
#17 DONE 0.1s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:4ef7b756a792cf43fc0108430af6d1ab9e54550780d92774d6fd9e164c57fb48
#18 0.492 Checking out commit 02ff730a
#18 0.497 error: pathspec '02ff730a' did not match any file(s) known to git
#18 0.502 error: pathspec '02ff730a' did not match any file(s) known to git
#18 0.511 error: pathspec '02ff730a' did not match any file(s) known to git
#18 0.564 Checkout unsuccessful.
#18 DONE 0.6s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:e760cf414fe45431402e946db57fbb5218574562255208f9b39885c47424fc9b
#19 DONE 0.5s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:ddab55fd9c4f5afccf12fc994cd4856834b8dbdcd2aaf0aaafa263fde45cee98
#20 0.403 Run fuzzer_build to build the target
#20 0.515 FUZZ_TARGET = opus_projection_encoder_fuzzer
#20 0.515 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.515 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.520 Building benchmark opus_opus_projection_encoder_fuzzer with fuzzer afl
#20 0.523 + set -eu
#20 0.523 + FUZZERS='opus_decode_fuzzer opus_multi_fuzzer'
#20 0.523 + BUILDS=(floating fixed)
#20 0.523 + tar xvf /src/opus_testvectors.tar.gz
#20 0.528 opus_testvectors/
#20 0.529 opus_testvectors/testvector11.bit
#20 0.532 opus_testvectors/testvector05.dec
#20 0.590 opus_testvectors/testvector01.bit
#20 0.598 opus_testvectors/testvector07.dec
#20 0.644 opus_testvectors/testvector09.dec
#20 0.711 opus_testvectors/testvector12.bit
#20 0.712 opus_testvectors/testvector03.dec
#20 0.761 opus_testvectors/testvector01.dec
#20 0.829 opus_testvectors/testvector10.bit
#20 0.835 opus_testvectors/testvector03.bit
#20 0.836 opus_testvectors/testvector09.bit
#20 0.842 opus_testvectors/testvector11.dec
#20 0.901 opus_testvectors/testvector10.dec
#20 0.964 opus_testvectors/testvector04.bit
#20 0.965 opus_testvectors/testvector02.bit
#20 0.966 opus_testvectors/testvector06.bit
#20 0.967 opus_testvectors/testvector08.dec
#20 1.023 opus_testvectors/testvector12.dec
#20 1.069 opus_testvectors/testvector08.bit
#20 1.070 opus_testvectors/testvector07.bit
#20 1.072 opus_testvectors/testvector02.dec
#20 1.118 opus_testvectors/testvector06.dec
#20 1.167 opus_testvectors/testvector04.dec
#20 1.217 opus_testvectors/testvector05.bit
#20 1.219 + [[ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard = *sanitize=memory* ]]
#20 1.219 + ./autogen.sh
#20 1.221 Updating build configuration files, please wait....
#20 5.795 libtoolize: putting auxiliary files in '.'.
#20 5.795 libtoolize: linking file './ltmain.sh'
#20 5.883 libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
#20 5.883 libtoolize: linking file 'm4/libtool.m4'
#20 5.931 libtoolize: linking file 'm4/ltoptions.m4'
#20 5.982 libtoolize: linking file 'm4/ltsugar.m4'
#20 6.031 libtoolize: linking file 'm4/ltversion.m4'
#20 6.083 libtoolize: linking file 'm4/lt~obsolete.m4'
#20 10.62 configure.ac:38: installing './compile'
#20 10.62 configure.ac:36: installing './config.guess'
#20 10.62 configure.ac:36: installing './config.sub'
#20 10.62 configure.ac:33: installing './install-sh'
#20 10.62 configure.ac:33: installing './missing'
#20 10.66 Makefile.am:337: warning: '%'-style pattern rules are a GNU make extension
#20 10.66 Makefile.am:340: warning: '%'-style pattern rules are a GNU make extension
#20 10.66 Makefile.am: installing './INSTALL'
#20 10.76 Makefile.am: installing './depcomp'
#20 10.80 parallel-tests: installing './test-driver'
#20 10.90 + for build in "${BUILDS[@]}"
#20 10.90 + case "$build" in
#20 10.90 + extra_args=
#20 10.90 + ./configure --enable-static --disable-shared --disable-doc --enable-assertions
#20 11.13 checking whether make supports nested variables... yes
#20 11.13 checking for a BSD-compatible install... /usr/bin/install -c
#20 11.15 checking whether build environment is sane... yes
#20 11.17 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 11.17 checking for gawk... no
#20 11.17 checking for mawk... mawk
#20 11.17 checking whether make sets $(MAKE)... yes
#20 11.20 checking whether to enable maintainer-specific portions of Makefiles... yes
#20 11.21 checking build system type... x86_64-pc-linux-gnu
#20 11.30 checking host system type... x86_64-pc-linux-gnu
#20 11.30 checking how to print strings... printf
#20 11.35 checking whether make supports the include directive... yes (GNU style)
#20 11.37 checking for gcc... clang
#20 11.46 checking whether the C compiler works... yes
#20 11.59 checking for C compiler default output file name... a.out
#20 11.59 checking for suffix of executables... 
#20 11.74 checking whether we are cross compiling... no
#20 11.89 checking for suffix of object files... o
#20 11.92 checking whether we are using the GNU C compiler... yes
#20 11.96 checking whether clang accepts -g... yes
#20 11.99 checking for clang option to accept ISO C89... none needed
#20 12.03 checking whether clang understands -c and -o together... yes
#20 12.08 checking dependency style of clang... gcc3
#20 12.14 checking for a sed that does not truncate output... /usr/bin/sed
#20 12.15 checking for grep that handles long lines and -e... /usr/bin/grep
#20 12.16 checking for egrep... /usr/bin/grep -E
#20 12.16 checking for fgrep... /usr/bin/grep -F
#20 12.16 checking for ld used by clang... /usr/bin/ld
#20 12.19 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 12.19 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 12.20 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 12.24 checking whether ln -s works... yes
#20 12.24 checking the maximum length of command line arguments... 1572864
#20 12.25 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 12.25 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 12.25 checking for /usr/bin/ld option to reload object files... -r
#20 12.25 checking for objdump... objdump
#20 12.25 checking how to recognize dependent libraries... pass_all
#20 12.26 checking for dlltool... no
#20 12.26 checking how to associate runtime and link libraries... printf %s\n
#20 12.26 checking for ar... ar
#20 12.26 checking for archiver @FILE support... @
#20 12.30 checking for strip... strip
#20 12.31 checking for ranlib... ranlib
#20 12.31 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 12.51 checking for sysroot... no
#20 12.51 checking for a working dd... /usr/bin/dd
#20 12.51 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 12.55 checking for mt... no
#20 12.55 checking if : is a manifest tool... no
#20 12.56 checking how to run the C preprocessor... clang -E
#20 12.68 checking for ANSI C header files... yes
#20 12.96 checking for sys/types.h... yes
#20 13.02 checking for sys/stat.h... yes
#20 13.08 checking for stdlib.h... yes
#20 13.14 checking for string.h... yes
#20 13.20 checking for memory.h... yes
#20 13.27 checking for strings.h... yes
#20 13.33 checking for inttypes.h... yes
#20 13.40 checking for stdint.h... yes
#20 13.46 checking for unistd.h... yes
#20 13.54 checking for dlfcn.h... yes
#20 13.61 checking for objdir... .libs
#20 13.80 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 13.83 checking for clang option to produce PIC... -fPIC -DPIC
#20 13.83 checking if clang PIC flag -fPIC -DPIC works... yes
#20 13.87 checking if clang static flag -static works... yes
#20 14.06 checking if clang supports -c -o file.o... yes
#20 14.11 checking if clang supports -c -o file.o... (cached) yes
#20 14.11 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 14.14 checking dynamic linker characteristics... GNU/Linux ld.so
#20 14.33 checking how to hardcode library paths into programs... immediate
#20 14.33 checking whether stripping libraries is possible... yes
#20 14.33 checking if libtool supports shared libraries... yes
#20 14.33 checking whether to build shared libraries... no
#20 14.33 checking whether to build static libraries... yes
#20 14.34 checking for clang option to accept ISO C99... none needed
#20 14.41 checking for an ANSI C-conforming const... yes
#20 14.45 checking for inline... inline
#20 14.48 checking dependency style of clang... gcc3
#20 14.54 checking for C/C++ restrict keyword... __restrict
#20 14.58 checking for C99 variable-size arrays... yes
#20 14.62 checking for cos in -lm... yes
#20 14.77 checking if compiler supports SSE intrinsics... yes
#20 14.97 checking if compiler supports SSE2 intrinsics... yes
#20 15.17 checking if compiler supports SSE4.1 intrinsics... no
#20 15.29 checking if compiler supports SSE4.1 intrinsics with -msse4.1... yes
#20 15.50 checking if compiler supports AVX intrinsics... no
#20 16.05 checking if compiler supports AVX intrinsics with -mavx... yes
#20 16.69 checking How to get X86 CPU Info... Inline Assembly
#20 16.84 checking if clang supports -fvisibility=hidden... yes
#20 16.87 checking if clang supports -fstack-protector-strong... yes
#20 17.01 checking whether to add -D_FORTIFY_SOURCE=2 to CFLAGS... yes
#20 17.15 checking if clang supports -Wall -Wextra -Wcast-align -Wnested-externs -Wshadow -Wstrict-prototypes... yes
#20 17.18 checking for lrintf... yes
#20 17.33 checking for lrint... yes
#20 17.47 checking for __malloc_hook... yes
#20 17.68 checking that generated files are newer than configure... done
#20 17.68 configure: creating ./config.status
#20 18.48 config.status: creating Makefile
#20 18.50 config.status: creating opus.pc
#20 18.52 config.status: creating opus-uninstalled.pc
#20 18.54 config.status: creating celt/arm/armopts.s
#20 18.57 config.status: creating doc/Makefile
#20 18.60 config.status: creating doc/Doxyfile
#20 18.63 config.status: creating config.h
#20 18.64 config.status: executing depfiles commands
#20 19.98 config.status: executing libtool commands
#20 20.00 configure:
#20 20.00 ------------------------------------------------------------------------
#20 20.00   opus 1.3.1-107-gccaaffa9:  Automatic configuration OK.
#20 20.00 
#20 20.00     Compiler support:
#20 20.00 
#20 20.00       C99 var arrays: ................ yes
#20 20.00       C99 lrintf: .................... yes
#20 20.00       Use alloca: .................... no (using var arrays)
#20 20.00 
#20 20.00     General configuration:
#20 20.00 
#20 20.00       Floating point support: ........ yes
#20 20.00       Fast float approximations: ..... no
#20 20.00       Fixed point debugging: ......... no
#20 20.00       Inline Assembly Optimizations: . No inline ASM for your platform, please send patches
#20 20.00       External Assembly Optimizations: 
#20 20.00       Intrinsics Optimizations: ...... x86 SSE SSE2 SSE4.1 AVX
#20 20.00       Run-time CPU detection: ........ x86 SSE4.1 AVX
#20 20.00       Custom modes: .................. no
#20 20.00       Assertion checking: ............ yes
#20 20.00       Hardening: ..................... yes
#20 20.00       Fuzzing: ....................... no
#20 20.00       Check ASM: ..................... no
#20 20.00 
#20 20.00       API documentation: ............. no
#20 20.00       Extra programs: ................ yes
#20 20.00 ------------------------------------------------------------------------
#20 20.00 
#20 20.00  Type "make; make install" to compile and install
#20 20.00  Type "make check" to run the test suite
#20 20.00 
#20 20.07 ++ nproc
#20 20.07 + make -j8
#20 20.12 make  all-recursive
#20 20.14 make[1]: Entering directory '/src/opus'
#20 20.19 make[2]: Entering directory '/src/opus'
#20 20.23   CC       src/opus.lo
#20 20.23   CC       src/opus_decoder.lo
#20 20.23   CC       src/opus_encoder.lo
#20 20.23   CC       src/opus_multistream.lo
#20 20.23   CC       src/opus_multistream_encoder.lo
#20 20.23   CC       src/opus_multistream_decoder.lo
#20 20.23   CC       src/repacketizer.lo
#20 20.24   CC       src/opus_projection_encoder.lo
#20 20.61   CC       src/opus_projection_decoder.lo
#20 20.61   CC       src/mapping_matrix.lo
#20 20.66   CC       src/analysis.lo
#20 20.68   CC       src/mlp.lo
#20 20.80   CC       src/mlp_data.lo
#20 20.94   CC       src/repacketizer_demo.o
#20 21.03 make[3]: Entering directory '/src/opus/doc'
#20 21.03 make[3]: Nothing to be done for 'all'.
#20 21.03 make[3]: Leaving directory '/src/opus/doc'
#20 21.03   CC       celt/tests/test_unit_cwrs32.o
#20 21.12   CC       celt/tests/test_unit_dft.o
#20 21.14   CC       celt/bands.lo
#20 21.15   CC       celt/celt.lo
#20 21.18   CC       celt/celt_encoder.lo
#20 21.35   CC       celt/celt_decoder.lo
#20 21.48   CC       celt/cwrs.lo
#20 21.53   CC       celt/entcode.lo
#20 21.72   CC       celt/entdec.lo
#20 21.77   CC       celt/entenc.lo
#20 21.79   CC       celt/kiss_fft.lo
#20 21.79   CC       celt/laplace.lo
#20 22.05   CC       celt/mathops.lo
#20 22.07   CC       celt/mdct.lo
#20 22.09   CC       celt/modes.lo
#20 22.23   CC       celt/pitch.lo
#20 22.28   CC       celt/celt_lpc.lo
#20 22.30   CC       celt/quant_bands.lo
#20 22.38   CC       celt/rate.lo
#20 22.43 celt/pitch.c:252:41: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction]
#20 22.43    celt_sig_assert((((unsigned char *)_x-(unsigned char *)NULL)&3)==0);
#20 22.43    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 22.43 ./celt/arch.h:93:38: note: expanded from macro 'celt_sig_assert'
#20 22.43 #define celt_sig_assert(cond) {if (!(cond)) {CELT_FATAL("signal assertion failed: " #cond);}}
#20 22.43                                      ^~~~
#20 22.45   CC       celt/vq.lo
#20 22.72 1 warning generated.
#20 22.72   CC       celt/x86/x86cpu.lo
#20 22.73   CC       celt/x86/x86_celt_map.lo
#20 22.86   CC       celt/x86/pitch_sse.lo
#20 22.89   CC       celt/x86/pitch_sse2.lo
#20 22.94   CC       celt/x86/vq_sse2.lo
#20 22.99   CC       celt/x86/celt_lpc_sse4_1.lo
#20 23.04   CC       celt/x86/pitch_sse4_1.lo
#20 23.14   CC       celt/tests/test_unit_entropy.o
#20 23.21   CC       celt/tests/test_unit_laplace.o
#20 23.21 celt/x86/vq_sse2.c:78:24: warning: cast from 'int *' to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 23.22       _mm_storeu_si128((__m128i*)&iy[j], _mm_setzero_si128());
#20 23.22                        ^~~~~~~~~~~~~~~~
#20 23.22 celt/x86/vq_sse2.c:119:27: warning: cast from 'int *' to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 23.22          _mm_storeu_si128((__m128i*)&iy[j], iy4);
#20 23.22                           ^~~~~~~~~~~~~~~~
#20 23.23 celt/x86/vq_sse2.c:208:28: warning: cast from 'int *' to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 23.23       y4 = _mm_loadu_si128((__m128i*)&iy[j]);
#20 23.23                            ^~~~~~~~~~~~~~~~
#20 23.23 celt/x86/vq_sse2.c:211:24: warning: cast from 'int *' to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 23.23       _mm_storeu_si128((__m128i*)&iy[j], y4);
#20 23.23                        ^~~~~~~~~~~~~~~~
#20 23.25   CC       celt/tests/test_unit_mathops.o
#20 23.26   CC       celt/tests/test_unit_mdct.o
#20 23.30   CC       celt/tests/test_unit_rotation.o
#20 23.34   CC       celt/tests/test_unit_types.o
#20 23.36 4 warnings generated.
#20 23.38   CC       src/opus_compare.o
#20 23.41   CC       src/opus_demo.o
#20 23.47   CC       silk/CNG.lo
#20 23.50   CC       silk/code_signs.lo
#20 23.55   CC       silk/init_decoder.lo
#20 23.81   CC       silk/decode_core.lo
#20 23.84   CC       silk/decode_frame.lo
#20 23.85   CC       silk/decode_parameters.lo
#20 23.95   CC       silk/decode_indices.lo
#20 23.96   CC       silk/decode_pulses.lo
#20 23.97   CC       silk/decoder_set_fs.lo
#20 24.14   CC       silk/dec_API.lo
#20 24.15   CC       silk/enc_API.lo
#20 24.16   CC       silk/encode_indices.lo
#20 24.25   CC       silk/encode_pulses.lo
#20 24.26   CC       silk/gain_quant.lo
#20 24.33   CC       silk/interpolate.lo
#20 24.38   CC       silk/LP_variable_cutoff.lo
#20 24.49   CC       silk/NLSF_decode.lo
#20 24.58   CC       silk/NSQ.lo
#20 24.62   CC       silk/NSQ_del_dec.lo
#20 24.70   CC       silk/PLC.lo
#20 24.70   CC       silk/shell_coder.lo
#20 24.74   CC       silk/tables_gain.lo
#20 24.78   CC       silk/tables_LTP.lo
#20 24.87   CC       silk/tables_NLSF_CB_NB_MB.lo
#20 24.98   CC       silk/tables_NLSF_CB_WB.lo
#20 25.00   CC       silk/tables_other.lo
#20 25.04   CC       silk/tables_pitch_lag.lo
#20 25.04   CC       silk/tables_pulses_per_block.lo
#20 25.13   CC       silk/VAD.lo
#20 25.24   CC       silk/control_audio_bandwidth.lo
#20 25.25   CC       silk/quant_LTP_gains.lo
#20 25.25   CC       silk/VQ_WMat_EC.lo
#20 25.28   CC       silk/HP_variable_cutoff.lo
#20 25.28   CC       silk/NLSF_encode.lo
#20 25.30   CC       silk/NLSF_VQ.lo
#20 25.52   CC       silk/NLSF_unpack.lo
#20 25.54   CC       silk/NLSF_del_dec_quant.lo
#20 25.56   CC       silk/process_NLSFs.lo
#20 25.57   CC       silk/stereo_LR_to_MS.lo
#20 25.62   CC       silk/stereo_MS_to_LR.lo
#20 25.63   CC       silk/check_control_input.lo
#20 25.66   CC       silk/control_SNR.lo
#20 25.70   CC       silk/init_encoder.lo
#20 25.77   CC       silk/control_codec.lo
#20 25.85   CC       silk/A2NLSF.lo
#20 25.92   CC       silk/ana_filt_bank_1.lo
#20 25.92   CC       silk/biquad_alt.lo
#20 25.93   CC       silk/bwexpander_32.lo
#20 26.01   CC       silk/bwexpander.lo
#20 26.04   CC       silk/debug.lo
#20 26.10   CC       silk/decode_pitch.lo
#20 26.17   CC       silk/inner_prod_aligned.lo
#20 26.18   CC       silk/lin2log.lo
#20 26.18   CC       silk/log2lin.lo
#20 26.22   CC       silk/LPC_analysis_filter.lo
#20 26.26   CC       silk/LPC_inv_pred_gain.lo
#20 26.27   CC       silk/table_LSF_cos.lo
#20 26.38   CC       silk/NLSF2A.lo
#20 26.43   CC       silk/NLSF_stabilize.lo
#20 26.44   CC       silk/NLSF_VQ_weights_laroia.lo
#20 26.44   CC       silk/pitch_est_tables.lo
#20 26.44   CC       silk/resampler.lo
#20 26.53   CC       silk/resampler_down2_3.lo
#20 26.56   CC       silk/resampler_down2.lo
#20 26.66   CC       silk/resampler_private_AR2.lo
#20 26.69   CC       silk/resampler_private_down_FIR.lo
#20 26.71   CC       silk/resampler_private_IIR_FIR.lo
#20 26.73   CC       silk/resampler_private_up2_HQ.lo
#20 26.75   CC       silk/resampler_rom.lo
#20 26.79   CC       silk/sigm_Q15.lo
#20 26.81   CC       silk/sort.lo
#20 26.82   CC       silk/sum_sqr_shift.lo
#20 26.94   CC       silk/stereo_decode_pred.lo
#20 27.00   CC       silk/stereo_encode_pred.lo
#20 27.01   CC       silk/stereo_find_predictor.lo
#20 27.02   CC       silk/stereo_quant_pred.lo
#20 27.03   CC       silk/LPC_fit.lo
#20 27.12   CC       silk/float/apply_sine_window_FLP.lo
#20 27.14   CC       silk/float/corrMatrix_FLP.lo
#20 27.15   CC       silk/float/encode_frame_FLP.lo
#20 27.21   CC       silk/float/find_LPC_FLP.lo
#20 27.27   CC       silk/float/find_LTP_FLP.lo
#20 27.34   CC       silk/float/find_pitch_lags_FLP.lo
#20 27.35   CC       silk/float/find_pred_coefs_FLP.lo
#20 27.46   CC       silk/float/LPC_analysis_filter_FLP.lo
#20 27.47   CC       silk/float/LTP_analysis_filter_FLP.lo
#20 27.52   CC       silk/float/LTP_scale_ctrl_FLP.lo
#20 27.57   CC       silk/float/noise_shape_analysis_FLP.lo
#20 27.62   CC       silk/float/process_gains_FLP.lo
#20 27.70   CC       silk/float/regularize_correlations_FLP.lo
#20 27.72   CC       silk/float/residual_energy_FLP.lo
#20 27.74   CC       silk/float/warped_autocorrelation_FLP.lo
#20 27.86   CC       silk/float/wrappers_FLP.lo
#20 27.88   CC       silk/float/autocorrelation_FLP.lo
#20 28.00   CC       silk/float/burg_modified_FLP.lo
#20 28.04   CC       silk/float/bwexpander_FLP.lo
#20 28.08   CC       silk/float/energy_FLP.lo
#20 28.13   CC       silk/float/inner_product_FLP.lo
#20 28.13   CC       silk/float/k2a_FLP.lo
#20 28.21   CC       silk/float/LPC_inv_pred_gain_FLP.lo
#20 28.30   CC       silk/float/pitch_analysis_core_FLP.lo
#20 28.38   CC       silk/float/scale_copy_vector_FLP.lo
#20 28.43   CC       silk/float/scale_vector_FLP.lo
#20 28.49   CC       silk/float/schur_FLP.lo
#20 28.50   CC       silk/float/sort_FLP.lo
#20 28.51   CC       silk/x86/NSQ_sse4_1.lo
#20 28.56   CC       silk/x86/NSQ_del_dec_sse4_1.lo
#20 28.56   CC       silk/x86/x86_silk_map.lo
#20 28.77   CC       silk/x86/VAD_sse4_1.lo
#20 28.81   CC       silk/x86/VQ_WMat_EC_sse4_1.lo
#20 28.85   CC       silk/tests/test_unit_LPC_inv_pred_gain.o
#20 28.86 silk/x86/NSQ_sse4_1.c:341:39: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 28.86     a_Q12_01234567 = _mm_loadu_si128( (__m128i *)(&a_Q12[ 0 ] ) );
#20 28.87                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.87 silk/x86/NSQ_sse4_1.c:343:39: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 28.87     a_Q12_89ABCDEF = _mm_loadu_si128( (__m128i *)(&a_Q12[ 8 ] ) );
#20 28.87                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.87 silk/x86/NSQ_sse4_1.c:349:44: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 28.87     AR_shp_Q13_76543210 = _mm_loadu_si128( (__m128i *)(&AR_shp_Q13[0] ) );
#20 28.87                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.87 silk/x86/NSQ_sse4_1.c:354:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.87     xmm_tempa = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[-16]) );
#20 28.87                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.87 silk/x86/NSQ_sse4_1.c:355:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.87     xmm_tempb = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[-12]) );
#20 28.87                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.87 silk/x86/NSQ_sse4_1.c:363:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.87     xmm_tempa = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -8 ]) );
#20 28.87                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.87 silk/x86/NSQ_sse4_1.c:364:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.87     xmm_tempb = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -4 ]) );
#20 28.87                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.87 silk/x86/NSQ_sse4_1.c:373:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.87     xmm_tempa = _mm_loadu_si128( (__m128i *)(&(NSQ->sAR2_Q14[ 0 ]) ) );
#20 28.87                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.87 silk/x86/NSQ_sse4_1.c:374:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.88     xmm_tempb = _mm_loadu_si128( (__m128i *)(&(NSQ->sAR2_Q14[ 4 ]) ) );
#20 28.88                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.88 silk/x86/NSQ_sse4_1.c:442:30: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 28.88                 b_Q14_3210 = OP_CVTEPI16_EPI32_M64( b_Q14 );
#20 28.88                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.88 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 28.88  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 28.88                                      ^~~~~~~~~~~~~~
#20 28.88 silk/x86/NSQ_sse4_1.c:446:54: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.88                 pred_lag_ptr_0123 = _mm_loadu_si128( (__m128i *)(&pred_lag_ptr[ -3 ] ) );
#20 28.88                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.88   CC       tests/test_opus_api.o
#20 28.89 silk/x86/NSQ_sse4_1.c:598:23: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.89     _mm_storeu_si128( (__m128i *)(&NSQ->sAR2_Q14[ 4 ]), xmm_tempa );
#20 28.89                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.89 silk/x86/NSQ_sse4_1.c:599:23: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.89     _mm_storeu_si128( (__m128i *)(&NSQ->sAR2_Q14[ 0 ]), xmm_tempb );
#20 28.89                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.89 silk/x86/NSQ_sse4_1.c:615:48: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.89             xmm_xq_Q14_3210 = _mm_loadu_si128( (__m128i *)(&(psLPC_Q14[ i + 0 ] ) ) );
#20 28.89                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.89 silk/x86/NSQ_sse4_1.c:616:48: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.89             xmm_xq_Q14_7654 = _mm_loadu_si128( (__m128i *)(&(psLPC_Q14[ i + 4 ] ) ) );
#20 28.89                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.89 silk/x86/NSQ_sse4_1.c:647:31: warning: cast from 'opus_int16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 28.89             _mm_storeu_si128( (__m128i *)(&xq[ i ] ), xmm_xq_Q14_3210 );
#20 28.89                               ^~~~~~~~~~~~~~~~~~~~~~
#20 28.90 silk/x86/NSQ_sse4_1.c:688:24: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 28.90         xmm_x16_x2x0 = OP_CVTEPI16_EPI32_M64( &(x16[ i ] ) );
#20 28.90                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.90 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 28.90  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 28.90                                      ^~~~~~~~~~~~~~
#20 28.90 silk/x86/NSQ_sse4_1.c:701:27: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.90         _mm_storeu_si128( (__m128i *)(&(x_sc_Q10[ i ] ) ), xmm_x16_x2x0 );
#20 28.90                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.90 silk/x86/NSQ_sse4_1.c:732:54: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.90             xmm_sLTP_shp_Q14_x2x0 = _mm_loadu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ) );
#20 28.90                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.90 silk/x86/NSQ_sse4_1.c:744:31: silk/x86/NSQ_del_dec_sse4_1.cwarning: :408:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 28.90     a_Q12_0123 = OP_CVTEPI16_EPI32_M64( a_Q12 );
#20 28.90                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.90 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 28.90  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.91   CC       tests/test_opus_decode.o
#20 28.91             _mm_storeu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ), xmm_sLTP_shp_Q14_x2x0 );
#20 28.91                                      ^~~~~~~~~~~~~~
#20 28.91                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.91 
#20 28.91 silk/x86/NSQ_del_dec_sse4_1.c:409:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 28.91     a_Q12_4567 = OP_CVTEPI16_EPI32_M64( a_Q12 + 4 );
#20 28.91                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.91 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 28.91  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 28.91                                      ^~~~~~~~~~~~~~
#20 28.91 silk/x86/NSQ_del_dec_sse4_1.c:412:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 28.91         a_Q12_89AB = OP_CVTEPI16_EPI32_M64( a_Q12 + 8 );
#20 28.91                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.91 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 28.91  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 28.91                                      ^~~~~~~~~~~~~~
#20 28.91 silk/x86/NSQ_del_dec_sse4_1.c:413:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 28.91         a_Q12_CDEF = OP_CVTEPI16_EPI32_M64( a_Q12 + 12 );
#20 28.91                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.91 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 28.91  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 28.91                                      ^~~~~~~~~~~~~~
#20 28.91 silk/x86/NSQ_del_dec_sse4_1.c:417:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 28.91         b_Q12_0123 = OP_CVTEPI16_EPI32_M64( b_Q14 );
#20 28.91                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.91 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 28.91  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 28.91                                      ^~~~~~~~~~~~~~
#20 28.91 silk/x86/NSQ_del_dec_sse4_1.c:430:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.91                 pred_lag_ptr_tmp    = _mm_loadu_si128( (__m128i *)(&pred_lag_ptr[ -3 ] ) );
#20 28.91                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.91 silk/x86/NSQ_del_dec_sse4_1.c:485:52: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.92                 psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -3 ] ) ); /* -3, -2 , -1, 0 */
#20 28.92                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.92 silk/x86/NSQ_del_dec_sse4_1.c:499:52: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.92                 psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -7 ] ) );
#20 28.92                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.92 silk/x86/NSQ_del_dec_sse4_1.c:514:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.92                     psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -11 ] ) );
#20 28.92                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.92 silk/x86/NSQ_del_dec_sse4_1.c:527:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.92                     psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -15 ] ) );
#20 28.92                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.94 silk/x86/NSQ_del_dec_sse4_1.c:819:24: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 28.94         xmm_x16_x2x0 = OP_CVTEPI16_EPI32_M64( &(x16[ i ] ) );
#20 28.94                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.94 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 28.95  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 28.95                                      ^~~~~~~~~~~~~~
#20 28.95 silk/x86/NSQ_del_dec_sse4_1.c:832:27: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.95         _mm_storeu_si128( (__m128i *)(&(x_sc_Q10[ i ] ) ), xmm_x16_x2x0 );
#20 28.95                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.95 silk/x86/NSQ_del_dec_sse4_1.c:864:58: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.95                 xmm_sLTP_shp_Q14_x2x0 = _mm_loadu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ) );
#20 28.95                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.95 silk/x86/NSQ_del_dec_sse4_1.c:876:35: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.96                 _mm_storeu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ), xmm_sLTP_shp_Q14_x2x0 );
#20 28.96                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.12 silk/x86/VAD_sse4_1.c:147:44: warning: cast from 'opus_int16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.12                 xmm_X   = _mm_loadu_si128( (__m128i *)&(X[ X_offset[ b ] + i + dec_subframe_offset ] ) );
#20 29.12                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.17 silk/x86/VQ_WMat_EC_sse4_1.c:68:36: warning: cast from 'const opus_int32 *' (aka 'const int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.17     v_XX_31_Q17 = _mm_loadu_si128( (__m128i *)(&XX_Q17[ 1 ] ) );
#20 29.17                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.18 silk/x86/VQ_WMat_EC_sse4_1.c:88:26: warning: cast from 'const opus_int8 *' (aka 'const signed char *') to 'int *' increases required alignment from 1 to 4 [-Wcast-align]
#20 29.18         v_cb_row_31_Q7 = OP_CVTEPI8_EPI32_M32( &cb_row_Q7[ 1 ] );
#20 29.18                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.18 ./celt/x86/x86cpu.h:60:40: note: expanded from macro 'OP_CVTEPI8_EPI32_M32'
#20 29.18  (_mm_cvtepi8_epi32(_mm_cvtsi32_si128(*(int *)(x))))
#20 29.18                                        ^~~~~~~~~~
#20 29.24 2 warnings generated.
#20 29.24   CC       tests/test_opus_encode.o
#20 29.26   CC       tests/opus_encode_regressions.o
#20 29.47   CC       tests/test_opus_padding.o
#20 29.49 20 warnings generated.
#20 29.51   CC       tests/test_opus_projection.o
#20 29.53 1 warning generated.
#20 29.54   CC       doc/trivial_example.o
#20 29.55   CCLD     celt/tests/test_unit_cwrs32
#20 29.56 tests/test_opus_padding.c:81:7: warning: variable 'tests' set but not used [-Wunused-but-set-variable]
#20 29.56   int tests = 0;;
#20 29.56       ^
#20 29.59 1 warning generated.
#20 29.60   CCLD     celt/tests/test_unit_dft
#20 29.71   CCLD     celt/tests/test_unit_entropy
#20 29.77 14 warnings generated.
#20 29.79   CCLD     celt/tests/test_unit_laplace
#20 29.81   CCLD     celt/tests/test_unit_mathops
#20 29.94   CCLD     celt/tests/test_unit_mdct
#20 29.98   CCLD     celt/tests/test_unit_rotation
#20 30.07   CCLD     celt/tests/test_unit_types
#20 30.13   CCLD     opus_compare
#20 30.16   CCLD     libopus.la
#20 30.30   CCLD     silk/tests/test_unit_LPC_inv_pred_gain
#20 30.37   CCLD     tests/test_opus_projection
#20 30.81   CCLD     opus_demo
#20 30.81   CCLD     repacketizer_demo
#20 30.81   CCLD     tests/test_opus_api
#20 30.81   CCLD     tests/test_opus_decode
#20 30.81   CCLD     tests/test_opus_encode
#20 30.81   CCLD     tests/test_opus_padding
#20 30.87   CCLD     trivial_example
#20 31.32 make[2]: Leaving directory '/src/opus'
#20 31.32 make[1]: Leaving directory '/src/opus'
#20 31.32 + for fuzzer in $FUZZERS
#20 31.32 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -Iinclude tests/opus_decode_fuzzer.c -o opus_decode_fuzzer.o
#20 31.38 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard opus_decode_fuzzer.o -o /out/opus_decode_fuzzer_floating /libAFL.a .libs/libopus.a
#20 31.64 + '[' -f tests/opus_decode_fuzzer.options ']'
#20 31.64 + cp tests/opus_decode_fuzzer.options /out/opus_decode_fuzzer_floating.options
#20 31.65 + zip -r /out/opus_decode_fuzzer_floating_seed_corpus.zip opus_testvectors/
#20 31.65   adding: opus_testvectors/ (stored 0%)
#20 31.65   adding: opus_testvectors/testvector03.bit (deflated 2%)
#20 31.66   adding: opus_testvectors/testvector01.bit (deflated 15%)
#20 31.69   adding: opus_testvectors/testvector07.bit (deflated 4%)
#20 31.70   adding: opus_testvectors/testvector02.bit (deflated 3%)
#20 31.70   adding: opus_testvectors/testvector12.bit (deflated 4%)
#20 31.71   adding: opus_testvectors/testvector03.dec (deflated 48%)
#20 31.96   adding: opus_testvectors/testvector06.dec (deflated 45%)
#20 32.26   adding: opus_testvectors/testvector11.dec (deflated 7%)
#20 32.55   adding: opus_testvectors/testvector11.bit (deflated 0%)
#20 32.57   adding: opus_testvectors/testvector06.bit (deflated 3%)
#20 32.58   adding: opus_testvectors/testvector08.dec (deflated 38%)
#20 32.90   adding: opus_testvectors/testvector02.dec (deflated 50%)
#20 33.17   adding: opus_testvectors/testvector01.dec (deflated 29%)
#20 33.58   adding: opus_testvectors/testvector05.bit (deflated 3%)
#20 33.59   adding: opus_testvectors/testvector08.bit (deflated 1%)
#20 33.59   adding: opus_testvectors/testvector09.bit (deflated 11%)
#20 33.63   adding: opus_testvectors/testvector10.dec (deflated 49%)
#20 33.93   adding: opus_testvectors/testvector07.dec (deflated 44%)
#20 34.19   adding: opus_testvectors/testvector04.dec (deflated 49%)
#20 34.50   adding: opus_testvectors/testvector09.dec (deflated 43%)
#20 34.83   adding: opus_testvectors/testvector05.dec (deflated 47%)
#20 35.16   adding: opus_testvectors/testvector12.dec (deflated 61%)
#20 35.46   adding: opus_testvectors/testvector10.bit (deflated 9%)
#20 35.49   adding: opus_testvectors/testvector04.bit (deflated 3%)
#20 35.50 + for fuzzer in $FUZZERS
#20 35.50 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -Iinclude tests/opus_multi_fuzzer.c -o opus_multi_fuzzer.o
#20 35.57 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard opus_multi_fuzzer.o -o /out/opus_multi_fuzzer_floating /libAFL.a .libs/libopus.a
#20 35.84 + '[' -f tests/opus_multi_fuzzer.options ']'
#20 35.84 + zip -r /out/opus_multi_fuzzer_floating_seed_corpus.zip opus_testvectors/
#20 35.84   adding: opus_testvectors/ (stored 0%)
#20 35.84   adding: opus_testvectors/testvector03.bit (deflated 2%)
#20 35.85   adding: opus_testvectors/testvector01.bit (deflated 15%)
#20 35.88   adding: opus_testvectors/testvector07.bit (deflated 4%)
#20 35.89   adding: opus_testvectors/testvector02.bit (deflated 3%)
#20 35.89   adding: opus_testvectors/testvector12.bit (deflated 4%)
#20 35.90   adding: opus_testvectors/testvector03.dec (deflated 48%)
#20 36.16   adding: opus_testvectors/testvector06.dec (deflated 45%)
#20 36.47   adding: opus_testvectors/testvector11.dec (deflated 7%)
#20 36.76   adding: opus_testvectors/testvector11.bit (deflated 0%)
#20 36.77   adding: opus_testvectors/testvector06.bit (deflated 3%)
#20 36.78   adding: opus_testvectors/testvector08.dec (deflated 38%)
#20 37.12   adding: opus_testvectors/testvector02.dec (deflated 50%)
#20 37.39   adding: opus_testvectors/testvector01.dec (deflated 29%)
#20 37.80   adding: opus_testvectors/testvector05.bit (deflated 3%)
#20 37.81   adding: opus_testvectors/testvector08.bit (deflated 1%)
#20 37.82   adding: opus_testvectors/testvector09.bit (deflated 11%)
#20 37.85   adding: opus_testvectors/testvector10.dec (deflated 49%)
#20 38.16   adding: opus_testvectors/testvector07.dec (deflated 44%)
#20 38.43   adding: opus_testvectors/testvector04.dec (deflated 49%)
#20 38.74   adding: opus_testvectors/testvector09.dec (deflated 43%)
#20 39.08   adding: opus_testvectors/testvector05.dec (deflated 47%)
#20 39.41   adding: opus_testvectors/testvector12.dec (deflated 61%)
#20 39.71   adding: opus_testvectors/testvector10.bit (deflated 9%)
#20 39.75   adding: opus_testvectors/testvector04.bit (deflated 3%)
#20 39.75 + for build in "${BUILDS[@]}"
#20 39.75 + case "$build" in
#20 39.75 + extra_args=' --enable-fixed-point --enable-check-asm'
#20 39.75 + ./configure --enable-fixed-point --enable-check-asm --enable-static --disable-shared --disable-doc --enable-assertions
#20 40.00 checking whether make supports nested variables... yes
#20 40.00 checking for a BSD-compatible install... /usr/bin/install -c
#20 40.02 checking whether build environment is sane... yes
#20 40.03 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 40.04 checking for gawk... no
#20 40.04 checking for mawk... mawk
#20 40.04 checking whether make sets $(MAKE)... yes
#20 40.07 checking whether to enable maintainer-specific portions of Makefiles... yes
#20 40.09 checking build system type... x86_64-pc-linux-gnu
#20 40.17 checking host system type... x86_64-pc-linux-gnu
#20 40.17 checking how to print strings... printf
#20 40.22 checking whether make supports the include directive... yes (GNU style)
#20 40.24 checking for gcc... clang
#20 40.33 checking whether the C compiler works... yes
#20 40.47 checking for C compiler default output file name... a.out
#20 40.47 checking for suffix of executables... 
#20 40.60 checking whether we are cross compiling... no
#20 40.75 checking for suffix of object files... o
#20 40.78 checking whether we are using the GNU C compiler... yes
#20 40.81 checking whether clang accepts -g... yes
#20 40.84 checking for clang option to accept ISO C89... none needed
#20 40.90 checking whether clang understands -c and -o together... yes
#20 40.95 checking dependency style of clang... gcc3
#20 41.01 checking for a sed that does not truncate output... /usr/bin/sed
#20 41.01 checking for grep that handles long lines and -e... /usr/bin/grep
#20 41.02 checking for egrep... /usr/bin/grep -E
#20 41.02 checking for fgrep... /usr/bin/grep -F
#20 41.03 checking for ld used by clang... /usr/bin/ld
#20 41.05 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 41.06 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 41.06 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 41.10 checking whether ln -s works... yes
#20 41.10 checking the maximum length of command line arguments... 1572864
#20 41.11 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 41.11 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 41.11 checking for /usr/bin/ld option to reload object files... -r
#20 41.11 checking for objdump... objdump
#20 41.12 checking how to recognize dependent libraries... pass_all
#20 41.12 checking for dlltool... no
#20 41.12 checking how to associate runtime and link libraries... printf %s\n
#20 41.12 checking for ar... ar
#20 41.12 checking for archiver @FILE support... @
#20 41.16 checking for strip... strip
#20 41.17 checking for ranlib... ranlib
#20 41.17 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 41.36 checking for sysroot... no
#20 41.36 checking for a working dd... /usr/bin/dd
#20 41.36 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 41.40 checking for mt... no
#20 41.40 checking if : is a manifest tool... no
#20 41.41 checking how to run the C preprocessor... clang -E
#20 41.53 checking for ANSI C header files... yes
#20 41.80 checking for sys/types.h... yes
#20 41.86 checking for sys/stat.h... yes
#20 41.92 checking for stdlib.h... yes
#20 41.99 checking for string.h... yes
#20 42.05 checking for memory.h... yes
#20 42.12 checking for strings.h... yes
#20 42.18 checking for inttypes.h... yes
#20 42.25 checking for stdint.h... yes
#20 42.32 checking for unistd.h... yes
#20 42.38 checking for dlfcn.h... yes
#20 42.45 checking for objdir... .libs
#20 42.63 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 42.67 checking for clang option to produce PIC... -fPIC -DPIC
#20 42.67 checking if clang PIC flag -fPIC -DPIC works... yes
#20 42.71 checking if clang static flag -static works... yes
#20 42.90 checking if clang supports -c -o file.o... yes
#20 42.95 checking if clang supports -c -o file.o... (cached) yes
#20 42.95 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 42.98 checking dynamic linker characteristics... GNU/Linux ld.so
#20 43.17 checking how to hardcode library paths into programs... immediate
#20 43.17 checking whether stripping libraries is possible... yes
#20 43.18 checking if libtool supports shared libraries... yes
#20 43.18 checking whether to build shared libraries... no
#20 43.18 checking whether to build static libraries... yes
#20 43.18 checking for clang option to accept ISO C99... none needed
#20 43.25 checking for an ANSI C-conforming const... yes
#20 43.29 checking for inline... inline
#20 43.32 checking dependency style of clang... gcc3
#20 43.38 checking for C/C++ restrict keyword... __restrict
#20 43.42 checking for C99 variable-size arrays... yes
#20 43.46 checking for cos in -lm... yes
#20 43.61 checking if compiler supports SSE intrinsics... yes
#20 43.81 checking if compiler supports SSE2 intrinsics... yes
#20 44.01 checking if compiler supports SSE4.1 intrinsics... no
#20 44.14 checking if compiler supports SSE4.1 intrinsics with -msse4.1... yes
#20 44.34 checking if compiler supports AVX intrinsics... no
#20 44.89 checking if compiler supports AVX intrinsics with -mavx... yes
#20 45.53 checking How to get X86 CPU Info... Inline Assembly
#20 45.67 checking if clang supports -fvisibility=hidden... yes
#20 45.70 checking if clang supports -fstack-protector-strong... yes
#20 45.84 checking whether to add -D_FORTIFY_SOURCE=2 to CFLAGS... yes
#20 45.99 checking if clang supports -Wall -Wextra -Wcast-align -Wnested-externs -Wshadow -Wstrict-prototypes... yes
#20 46.02 checking for lrintf... yes
#20 46.16 checking for lrint... yes
#20 46.32 checking for __malloc_hook... yes
#20 46.52 checking that generated files are newer than configure... done
#20 46.52 configure: creating ./config.status
#20 47.33 config.status: creating Makefile
#20 47.36 config.status: creating opus.pc
#20 47.37 config.status: creating opus-uninstalled.pc
#20 47.39 config.status: creating celt/arm/armopts.s
#20 47.42 config.status: creating doc/Makefile
#20 47.45 config.status: creating doc/Doxyfile
#20 47.47 config.status: creating config.h
#20 47.49 config.status: executing depfiles commands
#20 47.55 config.status: executing libtool commands
#20 47.56 configure:
#20 47.56 ------------------------------------------------------------------------
#20 47.56   opus 1.3.1-107-gccaaffa9:  Automatic configuration OK.
#20 47.56 
#20 47.56     Compiler support:
#20 47.56 
#20 47.56       C99 var arrays: ................ yes
#20 47.56       C99 lrintf: .................... yes
#20 47.56       Use alloca: .................... no (using var arrays)
#20 47.56 
#20 47.56     General configuration:
#20 47.56 
#20 47.56       Floating point support: ........ no
#20 47.56       Fast float approximations: ..... no
#20 47.56       Fixed point debugging: ......... no
#20 47.56       Inline Assembly Optimizations: . No inline ASM for your platform, please send patches
#20 47.56       External Assembly Optimizations: 
#20 47.56       Intrinsics Optimizations: ...... x86 SSE SSE2 SSE4.1 AVX
#20 47.56       Run-time CPU detection: ........ x86 SSE4.1 AVX
#20 47.56       Custom modes: .................. no
#20 47.56       Assertion checking: ............ yes
#20 47.56       Hardening: ..................... yes
#20 47.56       Fuzzing: ....................... no
#20 47.56       Check ASM: ..................... yes
#20 47.56 
#20 47.56       API documentation: ............. no
#20 47.56       Extra programs: ................ yes
#20 47.56 ------------------------------------------------------------------------
#20 47.56 
#20 47.56  Type "make; make install" to compile and install
#20 47.56  Type "make check" to run the test suite
#20 47.56 
#20 47.64 ++ nproc
#20 47.64 + make -j8
#20 47.74 make  all-recursive
#20 47.80 make[1]: Entering directory '/src/opus'
#20 47.89 make[2]: Entering directory '/src/opus'
#20 47.95   CC       src/opus.lo
#20 47.95   CC       src/opus_decoder.lo
#20 47.95   CC       src/opus_encoder.lo
#20 47.95   CC       src/opus_multistream.lo
#20 47.95   CC       src/opus_multistream_encoder.lo
#20 47.95   CC       src/opus_multistream_decoder.lo
#20 47.95   CC       src/repacketizer.lo
#20 47.95   CC       src/opus_projection_encoder.lo
#20 48.28   CC       src/opus_projection_decoder.lo
#20 48.33   CC       src/mapping_matrix.lo
#20 48.41   CC       src/analysis.lo
#20 48.41   CC       src/mlp.lo
#20 48.51   CC       src/mlp_data.lo
#20 48.62   CC       src/repacketizer_demo.o
#20 48.68   CC       silk/tests/test_unit_LPC_inv_pred_gain.o
#20 48.82   CC       tests/test_opus_api.o
#20 48.84   CC       tests/test_opus_decode.o
#20 48.90   CC       tests/test_opus_encode.o
#20 48.91   CC       tests/opus_encode_regressions.o
#20 49.06   CC       tests/test_opus_projection.o
#20 49.18 make[3]: Entering directory '/src/opus/doc'
#20 49.18 make[3]: Nothing to be done for 'all'.
#20 49.18 make[3]: Leaving directory '/src/opus/doc'
#20 49.19   CC       celt/tests/test_unit_cwrs32.o
#20 49.24   CC       celt/tests/test_unit_dft.o
#20 49.44   CC       celt/bands.lo
#20 49.47   CC       celt/celt.lo
#20 49.52   CC       celt/celt_encoder.lo
#20 49.66   CC       celt/celt_decoder.lo
#20 49.90   CC       celt/cwrs.lo
#20 49.90   CC       celt/entcode.lo
#20 49.96   CC       celt/entdec.lo
#20 50.04   CC       celt/entenc.lo
#20 50.09   CC       celt/kiss_fft.lo
#20 50.21   CC       celt/laplace.lo
#20 50.32   CC       celt/mathops.lo
#20 50.33   CC       celt/mdct.lo
#20 50.48   CC       celt/modes.lo
#20 50.51   CC       celt/pitch.lo
#20 50.64   CC       celt/celt_lpc.lo
#20 50.68   CC       celt/quant_bands.lo
#20 50.73 celt/pitch.c  CC       celt/rate.lo
#20 50.73 :252:41: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction]
#20 50.73    celt_sig_assert((((unsigned char *)_x-(unsigned char *)NULL)&3)==0);
#20 50.73    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 50.73 ./celt/arch.h:93:38: note: expanded from macro 'celt_sig_assert'
#20 50.73 #define celt_sig_assert(cond) {if (!(cond)) {CELT_FATAL("signal assertion failed: " #cond);}}
#20 50.73                                      ^~~~
#20 50.75   CC       celt/vq.lo
#20 51.29 1 warning generated  CC       celt/x86/x86cpu.lo
#20 51.29 .
#20 51.31   CC       celt/x86/x86_celt_map.lo
#20 51.33   CC       celt/x86/pitch_sse.lo
#20 51.37   CC       celt/x86/pitch_sse2.lo
#20 51.42   CC       celt/x86/vq_sse2.lo
#20 51.54   CC       celt/x86/celt_lpc_sse4_1.lo
#20 51.57   CC       celt/x86/pitch_sse4_1.lo
#20 51.57   CC       celt/tests/test_unit_entropy.o
#20 51.60   CC       celt/tests/test_unit_laplace.o
#20 51.66 celt/x86/pitch_sse2.c:59:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.66         inVec1_76543210 = _mm_loadu_si128((__m128i *)(&x[i + 0]));
#20 51.66                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.66 celt/x86/pitch_sse2.c:60:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.66         inVec2_76543210 = _mm_loadu_si128((__m128i *)(&y[i + 0]));
#20 51.66                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.67 celt/x86/pitch_sse2.c:62:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.67         inVec1_FEDCBA98 = _mm_loadu_si128((__m128i *)(&x[i + 8]));
#20 51.67                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.67 celt/x86/pitch_sse2.c:63:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.67         inVec2_FEDCBA98 = _mm_loadu_si128((__m128i *)(&y[i + 8]));
#20 51.67                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.67 celt/x86/pitch_sse2.c:76:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.67         inVec1_76543210 = _mm_loadu_si128((__m128i *)(&x[i + 0]));
#20 51.68                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.68 celt/x86/pitch_sse2.c:77:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.68         inVec2_76543210 = _mm_loadu_si128((__m128i *)(&y[i + 0]));
#20 51.68                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.70   CC       celt/tests/test_unit_mathops.o
#20 51.72 6 warnings generated.
#20 51.74   CC       celt/tests/test_unit_mdct.o
#20 51.84 celt/x86/celt_lpc_sse4_1.c:73:14: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.84       vecX = OP_CVTEPI16_EPI32_M64(x + i);
#20 51.85              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.85 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.85  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.85                                      ^~~~~~~~~~~~~~
#20 51.85 celt/x86/celt_lpc_sse4_1.c:76:24: warning: cast from 'opus_val16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.85       _mm_storel_epi64((__m128i *)(y + i), vecSum);
#20 51.85                        ^~~~~~~~~~~~~~~~~~
#20 51.85   CC       celt/tests/test_unit_rotation.o
#20 51.92 celt/x86/pitch_sse4_1.c:61:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.92         inVec1_76543210 = _mm_loadu_si128((__m128i *)(&x[i + 0]));
#20 51.92                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.92 celt/x86/pitch_sse4_1.c:62:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.92         inVec2_76543210 = _mm_loadu_si128((__m128i *)(&y[i + 0]));
#20 51.92                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.92 celt/x86/pitch_sse4_1.c:64:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.92         inVec1_FEDCBA98 = _mm_loadu_si128((__m128i *)(&x[i + 8]));
#20 51.92                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.92 celt/x86/pitch_sse4_1.c:65:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.92         inVec2_FEDCBA98 = _mm_loadu_si128((__m128i *)(&y[i + 8]));
#20 51.92                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.92 celt/x86/pitch_sse4_1.c:78:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.92         inVec1_76543210 = _mm_loadu_si128((__m128i *)(&x[i + 0]));
#20 51.92                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.92 celt/x86/pitch_sse4_1.c:79:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.92         inVec2_76543210 = _mm_loadu_si128((__m128i *)(&y[i + 0]));
#20 51.92                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.93 celt/x86/pitch_sse4_1.c:89:23: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.93         inVec1_3210 = OP_CVTEPI16_EPI32_M64(&x[i + 0]);
#20 51.93                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.93 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.93  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.93                                      ^~~~~~~~~~~~~~
#20 51.93 celt/x86/pitch_sse4_1.c:90:23: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.93         inVec2_3210 = OP_CVTEPI16_EPI32_M64(&y[i + 0]);
#20 51.93                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.93 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.93  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.93                                      ^~~~~~~~~~~~~~
#20 51.93 celt/x86/pitch_sse4_1.c:137:32: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.93         vecX = _mm_loadu_si128((__m128i *)(&x[j + 0]));
#20 51.93                                ^~~~~~~~~~~~~~~~~~~~~~
#20 51.93 celt/x86/pitch_sse4_1.c:138:33: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.93         vecY0 = _mm_loadu_si128((__m128i *)(&y[j + 0]));
#20 51.93                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 51.93 celt/x86/pitch_sse4_1.c:139:33: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.94         vecY1 = _mm_loadu_si128((__m128i *)(&y[j + 1]));
#20 51.94                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 51.94 celt/x86/pitch_sse4_1.c:140:33: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.94         vecY2 = _mm_loadu_si128((__m128i *)(&y[j + 2]));
#20 51.94                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 51.94 celt/x86/pitch_sse4_1.c:141:33: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.94         vecY3 = _mm_loadu_si128((__m128i *)(&y[j + 3]));
#20 51.94                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 51.94 celt/x86/pitch_sse4_1.c:166:16: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.94         vecX = OP_CVTEPI16_EPI32_M64(&x[j + 0]);
#20 51.94                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.94 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.94  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.94                                      ^~~~~~~~~~~~~~
#20 51.95 celt/x86/pitch_sse4_1.c:172:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.95         vecY0 = OP_CVTEPI16_EPI32_M64(&y[j + 0]);
#20 51.95                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.95 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.95  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.95                                      ^~~~~~~~~~~~~~
#20 51.95 celt/x86/pitch_sse4_1.c:173:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.95         vecY1 = OP_CVTEPI16_EPI32_M64(&y[j + 1]);
#20 51.95                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.95 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.95  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.95                                      ^~~~~~~~~~~~~~
#20 51.95 celt/x86/pitch_sse4_1.c:174:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.96         vecY2 = OP_CVTEPI16_EPI32_M64(&y[j + 2]);
#20 51.96                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.96 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.96  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.96                                      ^~~~~~~~~~~~~~
#20 51.96 celt/x86/pitch_sse4_1.c:175:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.96         vecY3 = OP_CVTEPI16_EPI32_M64(&y[j + 3]);
#20 51.96                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.96 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.96  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.96                                      ^~~~~~~~~~~~~~
#20 51.96 celt/x86/pitch_sse4_1.c:188:12: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.96     vecX = OP_CVTEPI16_EPI32_M64(&x[len - 4]);
#20 51.96            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.96 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.96  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.96                                      ^~~~~~~~~~~~~~
#20 51.96 celt/x86/pitch_sse4_1.c:195:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.96         vecY0 = OP_CVTEPI16_EPI32_M64(&y[j + 0]);
#20 51.96                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.96 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.96  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.96                                      ^~~~~~~~~~~~~~
#20 51.96 celt/x86/pitch_sse4_1.c:196:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.96         vecY1 = OP_CVTEPI16_EPI32_M64(&y[j + 1]);
#20 51.96                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.96 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.96  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.96                                      ^~~~~~~~~~~~~~
#20 51.96 celt/x86/pitch_sse4_1.c:197:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.96         vecY2 = OP_CVTEPI16_EPI32_M64(&y[j + 2]);
#20 51.96                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.96 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.96  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.96                                      ^~~~~~~~~~~~~~
#20 51.97 celt/x86/pitch_sse4_1.c:212:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.97         vecY0 = OP_CVTEPI16_EPI32_M64(&y[j + 0]);
#20 51.97                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.97 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.97  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.97                                      ^~~~~~~~~~~~~~
#20 51.97 celt/x86/pitch_sse4_1.c:213:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.97         vecY1 = OP_CVTEPI16_EPI32_M64(&y[j + 1]);
#20 51.97                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.97 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.97  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.97                                      ^~~~~~~~~~~~~~
#20 51.97 celt/x86/pitch_sse4_1.c:225:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.97         vecY0 = OP_CVTEPI16_EPI32_M64(&y[j + 0]);
#20 51.97                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.97 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.97  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.97                                      ^~~~~~~~~~~~~~
#20 51.97 celt/x86/pitch_sse4_1.c:232:31: warning: cast from 'opus_val32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 51.97     initSum = _mm_loadu_si128((__m128i *)(&sum[0]));
#20 51.97                               ^~~~~~~~~~~~~~~~~~~~
#20 51.97 celt/x86/pitch_sse4_1.c:234:22: warning: cast from 'opus_val32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 51.97     _mm_storeu_si128((__m128i *)sum, initSum);
#20 51.97                      ^~~~~~~~~~~~~~
#20 51.99 2 warnings generated.
#20 52.01   CC       celt/tests/test_unit_types.o
#20 52.01   CC       src/opus_demo.o
#20 52.02   CC       silk/CNG.lo
#20 52.02   CC       silk/code_signs.lo
#20 52.07   CC       silk/init_decoder.lo
#20 52.11 27 warnings generated.
#20 52.12   CC       silk/decode_core.lo
#20 52.28   CC       silk/decode_frame.lo
#20 52.34   CC       silk/decode_parameters.lo
#20 52.39   CC       silk/decode_indices.lo
#20 52.55   CC       silk/decode_pulses.lo
#20 52.56   CC       silk/decoder_set_fs.lo
#20 52.66   CC       silk/dec_API.lo
#20 52.71   CC       silk/enc_API.lo
#20 52.72   CC       silk/encode_indices.lo
#20 52.77   CC       silk/encode_pulses.lo
#20 52.85   CC       silk/gain_quant.lo
#20 52.85   CC       silk/interpolate.lo
#20 52.90   CC       silk/LP_variable_cutoff.lo
#20 53.07   CC       silk/NLSF_decode.lo
#20 53.14   CC       silk/NSQ.lo
#20 53.18   CC       silk/NSQ_del_dec.lo
#20 53.21   CC       silk/PLC.lo
#20 53.23   CC       silk/shell_coder.lo
#20 53.30   CC       silk/tables_gain.lo
#20 53.33   CC       silk/tables_LTP.lo
#20 53.37   CC       silk/tables_NLSF_CB_NB_MB.lo
#20 53.53   CC       silk/tables_NLSF_CB_WB.lo
#20 53.56   CC       silk/tables_other.lo
#20 53.59   CC       silk/tables_pitch_lag.lo
#20 53.59   CC       silk/tables_pulses_per_block.lo
#20 53.64   CC       silk/VAD.lo
#20 53.79   CC       silk/control_audio_bandwidth.lo
#20 53.82   CC       silk/quant_LTP_gains.lo
#20 53.85   CC       silk/VQ_WMat_EC.lo
#20 53.85   CC       silk/HP_variable_cutoff.lo
#20 53.87   CC       silk/NLSF_encode.lo
#20 53.89   CC       silk/NLSF_VQ.lo
#20 54.09   CC       silk/NLSF_unpack.lo
#20 54.16   CC       silk/NLSF_del_dec_quant.lo
#20 54.16   CC       silk/process_NLSFs.lo
#20 54.16   CC       silk/stereo_LR_to_MS.lo
#20 54.18   CC       silk/stereo_MS_to_LR.lo
#20 54.20   CC       silk/check_control_input.lo
#20 54.21   CC       silk/control_SNR.lo
#20 54.30   CC       silk/init_encoder.lo
#20 54.38   CC       silk/control_codec.lo
#20 54.48   CC       silk/A2NLSF.lo
#20 54.50   CC       silk/ana_filt_bank_1.lo
#20 54.51   CC       silk/biquad_alt.lo
#20 54.58   CC       silk/bwexpander_32.lo
#20 54.58   CC       silk/bwexpander.lo
#20 54.59   CC       silk/debug.lo
#20 54.72   CC       silk/decode_pitch.lo
#20 54.73   CC       silk/inner_prod_aligned.lo
#20 54.78   CC       silk/lin2log.lo
#20 54.79   CC       silk/log2lin.lo
#20 54.85   CC       silk/LPC_analysis_filter.lo
#20 54.86   CC       silk/LPC_inv_pred_gain.lo
#20 54.89   CC       silk/table_LSF_cos.lo
#20 55.00   CC       silk/NLSF2A.lo
#20 55.01   CC       silk/NLSF_stabilize.lo
#20 55.03   CC       silk/NLSF_VQ_weights_laroia.lo
#20 55.05   CC       silk/pitch_est_tables.lo
#20 55.07   CC       silk/resampler.lo
#20 55.16   CC       silk/resampler_down2_3.lo
#20 55.22   CC       silk/resampler_down2.lo
#20 55.29   CC       silk/resampler_private_AR2.lo
#20 55.32   CC       silk/resampler_private_down_FIR.lo
#20 55.32   CC       silk/resampler_private_IIR_FIR.lo
#20 55.39   CC       silk/resampler_private_up2_HQ.lo
#20 55.41   CC       silk/resampler_rom.lo
#20 55.41   CC       silk/sigm_Q15.lo
#20 55.45   CC       silk/sort.lo
#20 55.52   CC       silk/sum_sqr_shift.lo
#20 55.56   CC       silk/stereo_decode_pred.lo
#20 55.64   CC       silk/stereo_encode_pred.lo
#20 55.65   CC       silk/stereo_find_predictor.lo
#20 55.68   CC       silk/stereo_quant_pred.lo
#20 55.70   CC       silk/LPC_fit.lo
#20 55.82   CC       silk/fixed/LTP_analysis_filter_FIX.lo
#20 55.84   CC       silk/fixed/LTP_scale_ctrl_FIX.lo
#20 55.85   CC       silk/fixed/corrMatrix_FIX.lo
#20 55.87   CC       silk/fixed/encode_frame_FIX.lo
#20 55.92   CC       silk/fixed/find_LPC_FIX.lo
#20 55.99   CC       silk/fixed/find_LTP_FIX.lo
#20 56.00   CC       silk/fixed/find_pitch_lags_FIX.lo
#20 56.14   CC       silk/fixed/find_pred_coefs_FIX.lo
#20 56.15   CC       silk/fixed/noise_shape_analysis_FIX.lo
#20 56.17   CC       silk/fixed/process_gains_FIX.lo
#20 56.27   CC       silk/fixed/regularize_correlations_FIX.lo
#20 56.31   CC       silk/fixed/residual_energy16_FIX.lo
#20 56.37   CC       silk/fixed/residual_energy_FIX.lo
#20 56.37   CC       silk/fixed/warped_autocorrelation_FIX.lo
#20 56.41   CC       silk/fixed/apply_sine_window_FIX.lo
#20 56.54   CC       silk/fixed/autocorr_FIX.lo
#20 56.54   CC       silk/fixed/burg_modified_FIX.lo
#20 56.60   CC       silk/fixed/k2a_FIX.lo
#20 56.68   CC       silk/fixed/k2a_Q16_FIX.lo
#20 56.69   CC       silk/fixed/pitch_analysis_core_FIX.lo
#20 56.71   CC       silk/fixed/vector_ops_FIX.lo
#20 56.75   CC       silk/fixed/schur64_FIX.lo
#20 56.80   CC       silk/fixed/schur_FIX.lo
#20 56.88   CC       silk/x86/NSQ_sse4_1.lo
#20 56.98   CC       silk/x86/NSQ_del_dec_sse4_1.lo
#20 57.05   CC       silk/x86/x86_silk_map.lo
#20 57.07   CC       silk/x86/VAD_sse4_1.lo
#20 57.09   CC       silk/x86/VQ_WMat_EC_sse4_1.lo
#20 57.19   CC       silk/fixed/x86/vector_ops_FIX_sse4_1.lo
#20 57.25 silk/x86/NSQ_sse4_1.c:341:39: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.25     a_Q12_01234567 = _mm_loadu_si128( (__m128i *)(&a_Q12[ 0 ] ) );
#20 57.25                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.25 silk/x86/NSQ_sse4_1.c:343:39: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.25     a_Q12_89ABCDEF = _mm_loadu_si128( (__m128i *)(&a_Q12[ 8 ] ) );
#20 57.25                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.25 silk/x86/NSQ_sse4_1.c:349:44: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.25     AR_shp_Q13_76543210 = _mm_loadu_si128( (__m128i *)(&AR_shp_Q13[0] ) );
#20 57.25                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.25 silk/x86/NSQ_sse4_1.c:354:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.26     xmm_tempa = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[-16]) );
#20 57.26                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.26 silk/x86/NSQ_sse4_1.c:355:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.26     xmm_tempb = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[-12]) );
#20 57.26                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.26 silk/x86/NSQ_sse4_1.c:363:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.26     xmm_tempa = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -8 ]) );
#20 57.26                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.26 silk/x86/NSQ_sse4_1.c:364:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.26     xmm_tempb = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -4 ]) );
#20 57.26                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.26 silk/x86/NSQ_sse4_1.c:373:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.27     xmm_tempa = _mm_loadu_si128( (__m128i *)(&(NSQ->sAR2_Q14[ 0 ]) ) );
#20 57.27                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.27 silk/x86/NSQ_sse4_1.c:374:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.27     xmm_tempb = _mm_loadu_si128( (__m128i *)(&(NSQ->sAR2_Q14[ 4 ]) ) );
#20 57.27                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.27 silk/x86/NSQ_sse4_1.c:442:30: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.27                 b_Q14_3210 = OP_CVTEPI16_EPI32_M64( b_Q14 );
#20 57.27                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.27 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.27  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.27                                      ^~~~~~~~~~~~~~
#20 57.27 silk/x86/NSQ_sse4_1.c:446:54: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.27                 pred_lag_ptr_0123 = _mm_loadu_si128( (__m128i *)(&pred_lag_ptr[ -3 ] ) );
#20 57.27                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.28 silk/x86/NSQ_sse4_1.c:598:23: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.28     _mm_storeu_si128( (__m128i *)(&NSQ->sAR2_Q14[ 4 ]), xmm_tempa );
#20 57.28                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.28 silk/x86/NSQ_sse4_1.c:599:23: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.28     _mm_storeu_si128( (__m128i *)(&NSQ->sAR2_Q14[ 0 ]), xmm_tempb );
#20 57.28                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.28 silk/x86/NSQ_sse4_1.c:615:48: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.28             xmm_xq_Q14_3210 = _mm_loadu_si128( (__m128i *)(&(psLPC_Q14[ i + 0 ] ) ) );
#20 57.28                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.28 silk/x86/NSQ_sse4_1.c:616:48: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.28             xmm_xq_Q14_7654 = _mm_loadu_si128( (__m128i *)(&(psLPC_Q14[ i + 4 ] ) ) );
#20 57.28                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.28 silk/x86/NSQ_sse4_1.c:647:31: warning: cast from 'opus_int16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.28             _mm_storeu_si128( (__m128i *)(&xq[ i ] ), xmm_xq_Q14_3210 );
#20 57.28                               ^~~~~~~~~~~~~~~~~~~~~~
#20 57.29 silk/x86/NSQ_sse4_1.c:688:24: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.29         xmm_x16_x2x0 = OP_CVTEPI16_EPI32_M64( &(x16[ i ] ) );
#20 57.29                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.29 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.29  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.29                                      ^~~~~~~~~~~~~~
#20 57.29 silk/x86/NSQ_sse4_1.c:701:27: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.29         _mm_storeu_si128( (__m128i *)(&(x_sc_Q10[ i ] ) ), xmm_x16_x2x0 );
#20 57.29                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.29 silk/x86/NSQ_sse4_1.c:732:54: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.29             xmm_sLTP_shp_Q14_x2x0 = _mm_loadu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ) );
#20 57.29                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.30 silk/x86/NSQ_sse4_1.c:744:31: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.30             _mm_storeu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ), xmm_sLTP_shp_Q14_x2x0 );
#20 57.30                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.34   CC       silk/fixed/x86/burg_modified_FIX_sse4_1.lo
#20 57.36 silk/x86/NSQ_del_dec_sse4_1.c:408:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.36     a_Q12_0123 = OP_CVTEPI16_EPI32_M64( a_Q12 );
#20 57.36                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.36 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.37  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.37                                      ^~~~~~~~~~~~~~
#20 57.37 silk/x86/NSQ_del_dec_sse4_1.c:409:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.37     a_Q12_4567 = OP_CVTEPI16_EPI32_M64( a_Q12 + 4 );
#20 57.37                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.37 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.37  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.37                                      ^~~~~~~~~~~~~~
#20 57.37 silk/x86/NSQ_del_dec_sse4_1.c:412:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.37         a_Q12_89AB = OP_CVTEPI16_EPI32_M64( a_Q12 + 8 );
#20 57.37                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.37 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.37  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.37                                      ^~~~~~~~~~~~~~
#20 57.37 silk/x86/NSQ_del_dec_sse4_1.c:413:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.37         a_Q12_CDEF = OP_CVTEPI16_EPI32_M64( a_Q12 + 12 );
#20 57.37                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.37 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.37  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.37                                      ^~~~~~~~~~~~~~
#20 57.37 silk/x86/NSQ_del_dec_sse4_1.c:417:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.37         b_Q12_0123 = OP_CVTEPI16_EPI32_M64( b_Q14 );
#20 57.37                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.37 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.37  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.37                                      ^~~~~~~~~~~~~~
#20 57.37 silk/x86/NSQ_del_dec_sse4_1.c:430:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.37                 pred_lag_ptr_tmp    = _mm_loadu_si128( (__m128i *)(&pred_lag_ptr[ -3 ] ) );
#20 57.37                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.37 silk/x86/NSQ_del_dec_sse4_1.c:485:52: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.37                 psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -3 ] ) ); /* -3, -2 , -1, 0 */
#20 57.37                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.37 silk/x86/NSQ_del_dec_sse4_1.c:499:52: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.37                 psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -7 ] ) );
#20 57.37                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.38 silk/x86/NSQ_del_dec_sse4_1.c:514:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.38                     psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -11 ] ) );
#20 57.38                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.38 silk/x86/NSQ_del_dec_sse4_1.c:527:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.38                     psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -15 ] ) );
#20 57.38                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.39 silk/x86/NSQ_del_dec_sse4_1.c:819:24: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.39         xmm_x16_x2x0 = OP_CVTEPI16_EPI32_M64( &(x16[ i ] ) );
#20 57.39                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.39 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.39  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.39                                      ^~~~~~~~~~~~~~
#20 57.39 silk/x86/NSQ_del_dec_sse4_1.c:832:27: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.40         _mm_storeu_si128( (__m128i *)(&(x_sc_Q10[ i ] ) ), xmm_x16_x2x0 );
#20 57.40                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.40 silk/x86/NSQ_del_dec_sse4_1.c:864:58: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.40                 xmm_sLTP_shp_Q14_x2x0 = _mm_loadu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ) );
#20 57.40                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.40 silk/x86/NSQ_del_dec_sse4_1.c:876:35: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.40                 _mm_storeu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ), xmm_sLTP_shp_Q14_x2x0 );
#20 57.40                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.42   CCLD     celt/tests/test_unit_cwrs32
#20 57.42 silk/x86/VAD_sse4_1.c:147:44: warning: cast from 'opus_int16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.42                 xmm_X   = _mm_loadu_si128( (__m128i *)&(X[ X_offset[ b ] + i + dec_subframe_offset ] ) );
#20 57.42                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.48 silk/x86/VQ_WMat_EC_sse4_1.c:68:36: warning: cast from 'const opus_int32 *' (aka 'const int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.48     v_XX_31_Q17 = _mm_loadu_si128( (__m128i *)(&XX_Q17[ 1 ] ) );
#20 57.48                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.48 silk/x86/VQ_WMat_EC_sse4_1.c:88:26: warning: cast from 'const opus_int8 *' (aka 'const signed char *') to 'int *' increases required alignment from 1 to 4 [-Wcast-align]
#20 57.48         v_cb_row_31_Q7 = OP_CVTEPI8_EPI32_M32( &cb_row_Q7[ 1 ] );
#20 57.48                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.48 ./celt/x86/x86cpu.h:60:40: note: expanded from macro 'OP_CVTEPI8_EPI32_M32'
#20 57.48  (_mm_cvtepi8_epi32(_mm_cvtsi32_si128(*(int *)(x))))
#20 57.48                                        ^~~~~~~~~~
#20 57.56 2 warnings generated.
#20 57.56 silk/fixed/x86/vector_ops_FIX_sse4_1.c:60:23: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.56         inVec1_3210 = OP_CVTEPI16_EPI32_M64( &inVec1[i + 0] );
#20 57.56                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.56 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.56  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.56                                      ^~~~~~~~~~~~~~
#20 57.56 silk/fixed/x86/vector_ops_FIX_sse4_1.c:61:23: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.56         inVec2_3210 = OP_CVTEPI16_EPI32_M64( &inVec2[i + 0] );
#20 57.56                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.56 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.56  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.56                                      ^~~~~~~~~~~~~~
#20 57.56 silk/fixed/x86/vector_ops_FIX_sse4_1.c:78:23: warning: cast from 'opus_int64 *' (aka 'long *') to '__m128i *' increases required alignment from 8 to 16 [-Wcast-align]
#20 57.56     _mm_storel_epi64( (__m128i *)&sum, acc1 );
#20 57.56                       ^~~~~~~~~~~~~~~
#20 57.58   CCLD     celt/tests/test_unit_dft
#20 57.62 3 warnings generated.
#20 57.64   CCLD     celt/tests/test_unit_entropy
#20 57.71 silk/fixed/x86/burg_modified_FIX_sse4_1.c:163:34: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.71                     PTR_3210   = OP_CVTEPI16_EPI32_M64( &x_ptr[ n - k - 1 - 3 ] );
#20 57.71                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.71 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.71  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.71                                      ^~~~~~~~~~~~~~
#20 57.71 silk/fixed/x86/burg_modified_FIX_sse4_1.c:164:34: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.71                     SUBFR_3210 = OP_CVTEPI16_EPI32_M64( &x_ptr[ subfr_length - n + k ] );
#20 57.71                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.71 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.71  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.71                                      ^~~~~~~~~~~~~~
#20 57.71 silk/fixed/x86/burg_modified_FIX_sse4_1.c:165:51: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.72                     FIRST_3210 = _mm_loadu_si128( (__m128i *)&C_first_row[ k ] );
#20 57.72                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.72 silk/fixed/x86/burg_modified_FIX_sse4_1.c:167:51: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.72                     LAST_3210  = _mm_loadu_si128( (__m128i *)&C_last_row[ k ] );
#20 57.72                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.72 silk/fixed/x86/burg_modified_FIX_sse4_1.c:168:51: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.72                     ATMP_3210  = _mm_loadu_si128( (__m128i *)&Af_QA[ k ] );
#20 57.72                                                   ^~~~~~~~~~~~~~~~~~~~~~
#20 57.72 silk/fixed/x86/burg_modified_FIX_sse4_1.c:183:39: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.72                     _mm_storeu_si128( (__m128i *)&C_first_row[ k ], FIRST_3210 );
#20 57.72                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.72 silk/fixed/x86/burg_modified_FIX_sse4_1.c:184:39: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.72                     _mm_storeu_si128( (__m128i *)&C_last_row[ k ], LAST_3210 );
#20 57.72                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.72 silk/fixed/x86/burg_modified_FIX_sse4_1.c:221:46: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.72                         xmm_x_ptr_n_k_x2x0 = OP_CVTEPI16_EPI32_M64( &x_ptr[ n - k - 3 ] );
#20 57.72                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.72 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.72  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.72                                      ^~~~~~~~~~~~~~
#20 57.73 silk/fixed/x86/burg_modified_FIX_sse4_1.c:222:46: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.73                         xmm_x_ptr_sub_x2x0 = OP_CVTEPI16_EPI32_M64( &x_ptr[ subfr_length - n + k - 1 ] );
#20 57.73                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.73 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.73  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.73                                      ^~~~~~~~~~~~~~
#20 57.73 silk/fixed/x86/burg_modified_FIX_sse4_1.c:246:53: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.73                         X1_3210  = _mm_loadu_si128( (__m128i *)&CAf[ k ] );
#20 57.73                                                     ^~~~~~~~~~~~~~~~~~~~
#20 57.73 silk/fixed/x86/burg_modified_FIX_sse4_1.c:247:53: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.73                         PTR_3210 = _mm_loadu_si128( (__m128i *)&CAb[ k ] );
#20 57.73                                                     ^~~~~~~~~~~~~~~~~~~~
#20 57.73 silk/fixed/x86/burg_modified_FIX_sse4_1.c:252:43: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.73                         _mm_storeu_si128( (__m128i *)&CAf[ k ], X1_3210 );
#20 57.73                                           ^~~~~~~~~~~~~~~~~~~~
#20 57.73 silk/fixed/x86/burg_modified_FIX_sse4_1.c:253:43: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.73                         _mm_storeu_si128( (__m128i *)&CAb[ k ], PTR_3210 );
#20 57.73                                           ^~~~~~~~~~~~~~~~~~~~
#20 57.81   CCLD     celt/tests/test_unit_laplace
#20 57.83   CCLD     celt/tests/test_unit_mathops
#20 57.88 1 warning generated.
#20 57.90   CCLD     celt/tests/test_unit_mdct
#20 57.94 20 warnings generated.
#20 57.96   CCLD     celt/tests/test_unit_rotation
#20 58.03   CCLD     celt/tests/test_unit_types
#20 58.26 14 warnings generated.
#20 58.39 13 warnings generated.
#20 58.40   CCLD     libopus.la
#20 58.41   CCLD     silk/tests/test_unit_LPC_inv_pred_gain
#20 58.41   CCLD     tests/test_opus_projection
#20 58.84   CCLD     opus_demo
#20 58.84   CCLD     repacketizer_demo
#20 58.84   CCLD     tests/test_opus_api
#20 58.84   CCLD     tests/test_opus_decode
#20 58.84   CCLD     tests/test_opus_encode
#20 58.84   CCLD     tests/test_opus_padding
#20 58.88   CCLD     trivial_example
#20 59.32 make[2]: Leaving directory '/src/opus'
#20 59.32 make[1]: Leaving directory '/src/opus'
#20 59.32 + for fuzzer in $FUZZERS
#20 59.32 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -Iinclude tests/opus_decode_fuzzer.c -o opus_decode_fuzzer.o
#20 59.38 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard opus_decode_fuzzer.o -o /out/opus_decode_fuzzer_fixed /libAFL.a .libs/libopus.a
#20 59.65 + '[' -f tests/opus_decode_fuzzer.options ']'
#20 59.65 + cp tests/opus_decode_fuzzer.options /out/opus_decode_fuzzer_fixed.options
#20 59.65 + zip -r /out/opus_decode_fuzzer_fixed_seed_corpus.zip opus_testvectors/
#20 59.65   adding: opus_testvectors/ (stored 0%)
#20 59.65   adding: opus_testvectors/testvector03.bit (deflated 2%)
#20 59.66   adding: opus_testvectors/testvector01.bit (deflated 15%)
#20 59.69   adding: opus_testvectors/testvector07.bit (deflated 4%)
#20 59.70   adding: opus_testvectors/testvector02.bit (deflated 3%)
#20 59.71   adding: opus_testvectors/testvector12.bit (deflated 4%)
#20 59.71   adding: opus_testvectors/testvector03.dec (deflated 48%)
#20 59.96   adding: opus_testvectors/testvector06.dec (deflated 45%)
#20 60.26   adding: opus_testvectors/testvector11.dec (deflated 7%)
#20 60.55   adding: opus_testvectors/testvector11.bit (deflated 0%)
#20 60.56   adding: opus_testvectors/testvector06.bit (deflated 3%)
#20 60.57   adding: opus_testvectors/testvector08.dec (deflated 38%)
#20 60.90   adding: opus_testvectors/testvector02.dec (deflated 50%)
#20 61.17   adding: opus_testvectors/testvector01.dec (deflated 29%)
#20 61.58   adding: opus_testvectors/testvector05.bit (deflated 3%)
#20 61.59   adding: opus_testvectors/testvector08.bit (deflated 1%)
#20 61.60   adding: opus_testvectors/testvector09.bit (deflated 11%)
#20 61.63   adding: opus_testvectors/testvector10.dec (deflated 49%)
#20 61.94   adding: opus_testvectors/testvector07.dec (deflated 44%)
#20 62.20   adding: opus_testvectors/testvector04.dec (deflated 49%)
#20 62.51   adding: opus_testvectors/testvector09.dec (deflated 43%)
#20 62.84   adding: opus_testvectors/testvector05.dec (deflated 47%)
#20 63.18   adding: opus_testvectors/testvector12.dec (deflated 61%)
#20 63.48   adding: opus_testvectors/testvector10.bit (deflated 9%)
#20 63.52   adding: opus_testvectors/testvector04.bit (deflated 3%)
#20 63.52 + for fuzzer in $FUZZERS
#20 63.52 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -Iinclude tests/opus_multi_fuzzer.c -o opus_multi_fuzzer.o
#20 63.59 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard opus_multi_fuzzer.o -o /out/opus_multi_fuzzer_fixed /libAFL.a .libs/libopus.a
#20 63.86 + '[' -f tests/opus_multi_fuzzer.options ']'
#20 63.86 + zip -r /out/opus_multi_fuzzer_fixed_seed_corpus.zip opus_testvectors/
#20 63.86   adding: opus_testvectors/ (stored 0%)
#20 63.86   adding: opus_testvectors/testvector03.bit (deflated 2%)
#20 63.87   adding: opus_testvectors/testvector01.bit (deflated 15%)
#20 63.90   adding: opus_testvectors/testvector07.bit (deflated 4%)
#20 63.91   adding: opus_testvectors/testvector02.bit (deflated 3%)
#20 63.92   adding: opus_testvectors/testvector12.bit (deflated 4%)
#20 63.92   adding: opus_testvectors/testvector03.dec (deflated 48%)
#20 64.17   adding: opus_testvectors/testvector06.dec (deflated 45%)
#20 64.48   adding: opus_testvectors/testvector11.dec (deflated 7%)
#20 64.77   adding: opus_testvectors/testvector11.bit (deflated 0%)
#20 64.78   adding: opus_testvectors/testvector06.bit (deflated 3%)
#20 64.79   adding: opus_testvectors/testvector08.dec (deflated 38%)
#20 65.12   adding: opus_testvectors/testvector02.dec (deflated 50%)
#20 65.40   adding: opus_testvectors/testvector01.dec (deflated 29%)
#20 65.81   adding: opus_testvectors/testvector05.bit (deflated 3%)
#20 65.82   adding: opus_testvectors/testvector08.bit (deflated 1%)
#20 65.82   adding: opus_testvectors/testvector09.bit (deflated 11%)
#20 65.86   adding: opus_testvectors/testvector10.dec (deflated 49%)
#20 66.16   adding: opus_testvectors/testvector07.dec (deflated 44%)
#20 66.42   adding: opus_testvectors/testvector04.dec (deflated 49%)
#20 66.73   adding: opus_testvectors/testvector09.dec (deflated 43%)
#20 67.07   adding: opus_testvectors/testvector05.dec (deflated 47%)
#20 67.40   adding: opus_testvectors/testvector12.dec (deflated 61%)
#20 67.70   adding: opus_testvectors/testvector10.bit (deflated 9%)
#20 67.74   adding: opus_testvectors/testvector04.bit (deflated 3%)
#20 67.74 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 68.4s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:859d41214360a4063fdfc273c14e24b6fd147063b12d0278a7afa7bdb2ad7085 done
#21 naming to gcr.io/fuzzbench/builders/afl/opus_opus_projection_encoder_fuzzer done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus_projection_encoder_fuzzer:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:1114f1d9d798ae140b7f9821b47ff8ef09abfd758be99583e6fa7ca79ebb4ee3
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:df8a19bedcdbac4bd0530516c79f388f52448f489ed464ef9eb07200c0d01fee
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus_projection_encoder_fuzzer-intermediate
#4 sha256:e503da3ff7671abb81ce03d676a43ad322885c42206289868ed12461d519d019
#4 ERROR: gcr.io/fuzzbench/runners/afl/opus_opus_projection_encoder_fuzzer-intermediate:latest: not found

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:a75bb0b8a3d6ff10c4e4f0b01262d9c6b8d28fb7a48062d52ee04e8302c3dcb7 done
#6 naming to gcr.io/fuzzbench/runners/afl/opus_opus_projection_encoder_fuzzer-intermediate
#6 naming to gcr.io/fuzzbench/runners/afl/opus_opus_projection_encoder_fuzzer-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus_projection_encoder_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:d20feae585b1ae3f8712e62e1a6015fca44686bf22b4ee0fb59bbc71ffb72a56
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:5288775f5888890a951b19de06773551e44a7abdd7f43e9507fe780684b29879
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/opus_opus_projection_encoder_fuzzer-intermediate:latest
#3 sha256:07aea9d2941d7217142358891458079607965478c71f1f1dee49105ccd837721
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/opus_opus_projection_encoder_fuzzer:latest
#4 sha256:99d8655a6e57807518c6a506179f8531555ffd3bed01c16c2e5e33067c8771d1
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:d538be0f61a4446a2c1ba85831fe38a789f128473f3606bbacc5a471c9a3c3bc
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/opus_opus_projection_encoder_fuzzer-intermediate
#6 sha256:5caf3f6360e4129fc46ecd1b9e9600aa7c8a4c9b00235ad864444efe09ea520a
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/opus_opus_projection_encoder_fuzzer
#10 sha256:9305b455ee319e494c7da2dc0654397b1ecf078d6c6afd9857cae9952c0be5eb
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus_projection_encoder_fuzzer
#5 sha256:c120efc26d7f916f6b3476101ccc8779da2035980ae431bcb0f5e114c9a7a9d3
#5 ERROR: gcr.io/fuzzbench/runners/afl/opus_opus_projection_encoder_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:d538be0f61a4446a2c1ba85831fe38a789f128473f3606bbacc5a471c9a3c3bc
#12 transferring context: 9.05MB 0.2s done
#12 DONE 0.2s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/opus_opus_projection_encoder_fuzzer
#10 sha256:9305b455ee319e494c7da2dc0654397b1ecf078d6c6afd9857cae9952c0be5eb
#10 DONE 0.4s

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:98f7e86c3b82864476dec54019a791015ab8bf1b91340e38d5f8d1b8ab110c3e
#8 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:2a512f0a718e260c8b47ef8d7e8b50e4e532bfc736aa95b6f883216bc089b90c
#7 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:dc9f1403b5320a9b079c6c5cebc93097a407ae01ca3c460a07d1624d83891df5
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:790bca32cefe58728ab8c4b22ce025d2f67795c49a8d2e51b138a04e3d6291da
#11 DONE 0.9s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:755aef2dc7165d936cdeeb4ce51817de7a55ec46a5769b48e2b1fea9cfb989cb
#13 DONE 0.4s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:a980acbf9a9cc805a2b932c2dc86889be063cf789d894b45c2c3392744fdf1b1
#14 DONE 0.4s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:47f6219a85ce8bafa33e8c371f4acea279fe083b7466e46a27a3ee8c20e217c0
#15 DONE 0.7s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:f516b31c0a9858855431b845784293fa5f6473092ecc71a4a147293b390e0869
#16 DONE 0.8s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:fcfbcb24f03322e3ae105c6345ab0e50ca4e174da6387c002942097e738b710c
#17 DONE 0.3s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:6334f24a194f783b27e7b9fba4c6308f6d96f3104eb817d566a438648602a9c0
#18 DONE 0.2s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:f751611384ad081f95389b674faa86e706ee1e8279e7ba347baebf84d5c946c3
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:98899f98c1ae55e807d788f97e5855eec1420816cd42c41c1a74e08b0bcff6aa
#20 DONE 0.5s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:50c63ab8b530deae52678a3472463922091d20abda891083534d92d227dda6ce done
#21 naming to gcr.io/fuzzbench/runners/afl/opus_opus_projection_encoder_fuzzer done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus_projection_encoder_fuzzer:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f470eee2790> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
