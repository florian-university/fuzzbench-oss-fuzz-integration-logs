WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: opus_opus_multistream_encode_fuzzer.
INFO:root:Please run "make test-run-afl-opus_opus_multistream_encode_fuzzer" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:f501476e8fe0a3cc1f3ce032b34ed46f859ab7876c335ba73d980933829d75be
#1 transferring dockerfile: 1.30kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:0ef4b566fec112ce34d20f4a664444e97cb2cb3b931563fef8439594581dc491
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#12 [internal] load build context
#12 sha256:10a8ae74d1f75056aa3d1dc4051478ff8e9fc198781c217c6c965ba527a61552
#12 DONE 0.0s

#5 [1/9] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#5 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/opus_opus_multistream_encode_fuzzer
#4 sha256:9fa6b908c738480a50f02d91ac7c79a77e0705d63e5c2a62284f7f0e5e335635
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/opus_opus_multistream_encode_fuzzer:latest: not found

#5 [1/9] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#5 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#5 CACHED

#12 [internal] load build context
#12 sha256:10a8ae74d1f75056aa3d1dc4051478ff8e9fc198781c217c6c965ba527a61552
#12 transferring context: 4.69kB done
#12 DONE 0.0s

#6 [2/9] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#6 sha256:4a36570962698a9dd6707bba1ce7d1da85f2389d0ec6c6f4efe406fbfa0cedec
#6 0.557 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#6 0.557 Hit:2 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 0.564 Get:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#6 0.566 Get:4 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#6 0.659 Get:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#6 1.079 Get:6 http://archive.ubuntu.com/ubuntu focal-updates/restricted i386 Packages [29.5 kB]
#6 1.117 Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [791 kB]
#6 1.192 Get:8 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [1214 kB]
#6 1.281 Get:9 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1153 kB]
#6 1.291 Get:10 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [870 kB]
#6 1.380 Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [2185 kB]
#6 1.578 Get:12 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [839 kB]
#6 1.650 Get:13 http://archive.ubuntu.com/ubuntu focal-backports/universe i386 Packages [14.4 kB]
#6 1.650 Get:14 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [26.0 kB]
#6 1.702 Get:15 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [526 kB]
#6 1.883 Get:16 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [679 kB]
#6 1.994 Get:17 http://security.ubuntu.com/ubuntu focal-security/restricted i386 Packages [26.7 kB]
#6 1.996 Get:18 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1771 kB]
#6 2.145 Get:19 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [1139 kB]
#6 2.460 Fetched 11.6 MB in 2s (6046 kB/s)
#6 2.460 Reading package lists...
#6 4.151 Reading package lists...
#6 5.608 Building dependency tree...
#6 5.824 Reading state information...
#6 6.040 make is already the newest version (4.2.1-1.2).
#6 6.040 make set to manually installed.
#6 6.040 wget is already the newest version (1.20.3-1ubuntu2).
#6 6.040 The following additional packages will be installed:
#6 6.042   autotools-dev libltdl-dev libltdl7 libsigsegv2 m4
#6 6.044 Suggested packages:
#6 6.044   autoconf-archive gnu-standards autoconf-doc gettext libtool-doc gfortran
#6 6.044   | fortran95-compiler gcj-jdk m4-doc
#6 6.088 The following NEW packages will be installed:
#6 6.090   autoconf automake autotools-dev libltdl-dev libltdl7 libsigsegv2 libtool m4
#6 6.165 0 upgraded, 8 newly installed, 0 to remove and 2 not upgraded.
#6 6.165 Need to get 1457 kB of archives.
#6 6.165 After this operation, 6651 kB of additional disk space will be used.
#6 6.165 Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 libsigsegv2 amd64 2.12-2 [13.9 kB]
#6 6.190 Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 m4 amd64 1.4.18-4 [199 kB]
#6 6.268 Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 autoconf all 2.69-11.1 [321 kB]
#6 6.300 Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 autotools-dev all 20180224.1 [39.6 kB]
#6 6.303 Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 automake all 1:1.16.1-4ubuntu6 [522 kB]
#6 6.341 Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl7 amd64 2.4.6-14 [38.5 kB]
#6 6.344 Get:7 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl-dev amd64 2.4.6-14 [162 kB]
#6 6.356 Get:8 http://archive.ubuntu.com/ubuntu focal/main amd64 libtool all 2.4.6-14 [161 kB]
#6 6.579 debconf: delaying package configuration, since apt-utils is not installed
#6 6.635 Fetched 1457 kB in 0s (5481 kB/s)
#6 6.677 Selecting previously unselected package libsigsegv2:amd64.
#6 6.677 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21308 files and directories currently installed.)
#6 6.698 Preparing to unpack .../0-libsigsegv2_2.12-2_amd64.deb ...
#6 6.706 Unpacking libsigsegv2:amd64 (2.12-2) ...
#6 6.751 Selecting previously unselected package m4.
#6 6.754 Preparing to unpack .../1-m4_1.4.18-4_amd64.deb ...
#6 6.759 Unpacking m4 (1.4.18-4) ...
#6 6.821 Selecting previously unselected package autoconf.
#6 6.824 Preparing to unpack .../2-autoconf_2.69-11.1_all.deb ...
#6 6.828 Unpacking autoconf (2.69-11.1) ...
#6 6.899 Selecting previously unselected package autotools-dev.
#6 6.902 Preparing to unpack .../3-autotools-dev_20180224.1_all.deb ...
#6 6.906 Unpacking autotools-dev (20180224.1) ...
#6 6.950 Selecting previously unselected package automake.
#6 6.953 Preparing to unpack .../4-automake_1%3a1.16.1-4ubuntu6_all.deb ...
#6 6.959 Unpacking automake (1:1.16.1-4ubuntu6) ...
#6 7.053 Selecting previously unselected package libltdl7:amd64.
#6 7.056 Preparing to unpack .../5-libltdl7_2.4.6-14_amd64.deb ...
#6 7.060 Unpacking libltdl7:amd64 (2.4.6-14) ...
#6 7.097 Selecting previously unselected package libltdl-dev:amd64.
#6 7.100 Preparing to unpack .../6-libltdl-dev_2.4.6-14_amd64.deb ...
#6 7.104 Unpacking libltdl-dev:amd64 (2.4.6-14) ...
#6 7.160 Selecting previously unselected package libtool.
#6 7.163 Preparing to unpack .../7-libtool_2.4.6-14_all.deb ...
#6 7.167 Unpacking libtool (2.4.6-14) ...
#6 7.247 Setting up autotools-dev (20180224.1) ...
#6 7.259 Setting up libsigsegv2:amd64 (2.12-2) ...
#6 7.270 Setting up libltdl7:amd64 (2.4.6-14) ...
#6 7.281 Setting up libtool (2.4.6-14) ...
#6 7.292 Setting up m4 (1.4.18-4) ...
#6 7.303 Setting up autoconf (2.69-11.1) ...
#6 7.317 Setting up automake (1:1.16.1-4ubuntu6) ...
#6 7.331 update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
#6 7.331 update-alternatives: warning: skip creation of /usr/share/man/man1/automake.1.gz because associated file /usr/share/man/man1/automake-1.16.1.gz (of link group automake) doesn't exist
#6 7.331 update-alternatives: warning: skip creation of /usr/share/man/man1/aclocal.1.gz because associated file /usr/share/man/man1/aclocal-1.16.1.gz (of link group automake) doesn't exist
#6 7.339 Setting up libltdl-dev:amd64 (2.4.6-14) ...
#6 7.350 Processing triggers for libc-bin (2.31-0ubuntu9.7) ...
#6 DONE 7.6s

#7 [3/9] RUN git clone https://gitlab.xiph.org/xiph/opus.git
#7 sha256:eb94f818b8dc5b4189af35d254c1a8d2882550d13d902bcfac1ae60b8af398e6
#7 0.466 Cloning into 'opus'...
#7 DONE 4.1s

#8 [4/9] RUN sed -i -e 's/xenial/bionic/g' /etc/apt/sources.list
#8 sha256:ed90565ac39226fdb08275fd2580fdbb159c9629c0df13c71eddfd11130c7cc9
#8 DONE 0.6s

#9 [5/9] RUN apt-get update && apt-get install -y --reinstall wget
#9 sha256:bcad1c7781215707971594a4823963ebbe77c87a3490a635677366651d87ee4a
#9 0.647 Hit:1 http://security.ubuntu.com/ubuntu focal-security InRelease
#9 0.647 Hit:2 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#9 0.650 Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease
#9 0.675 Hit:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#9 0.698 Hit:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#9 1.520 Reading package lists...
#9 3.074 Reading package lists...
#9 4.524 Building dependency tree...
#9 4.740 Reading state information...
#9 5.078 0 upgraded, 0 newly installed, 1 reinstalled, 0 to remove and 2 not upgraded.
#9 5.078 Need to get 348 kB of archives.
#9 5.078 After this operation, 0 B of additional disk space will be used.
#9 5.078 Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 wget amd64 1.20.3-1ubuntu2 [348 kB]
#9 5.401 debconf: delaying package configuration, since apt-utils is not installed
#9 5.455 Fetched 348 kB in 0s (1905 kB/s)
#9 5.495 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21674 files and directories currently installed.)
#9 5.518 Preparing to unpack .../wget_1.20.3-1ubuntu2_amd64.deb ...
#9 5.534 Unpacking wget (1.20.3-1ubuntu2) over (1.20.3-1ubuntu2) ...
#9 5.648 Setting up wget (1.20.3-1ubuntu2) ...
#9 DONE 6.2s

#10 [6/9] RUN wget https://opus-codec.org/static/testvectors/opus_testvectors.tar.gz
#10 sha256:a64c8b1cf66ec0c7bf19004594b5f0373d8ad527ee5087dc9174fa412dcd8023
#10 0.534 --2022-04-23 11:41:02--  https://opus-codec.org/static/testvectors/opus_testvectors.tar.gz
#10 0.552 Resolving opus-codec.org (opus-codec.org)... 140.211.166.31, 2001:470:eb26:42::1
#10 0.753 Connecting to opus-codec.org (opus-codec.org)|140.211.166.31|:443... connected.
#10 1.105 HTTP request sent, awaiting response... 200 OK
#10 1.620 Length: 39001148 (37M) [application/octet-stream]
#10 1.620 Saving to: 'opus_testvectors.tar.gz'
#10 1.620 
#10 1.620      0K .......... .......... .......... .......... ..........  0%  290K 2m11s
#10 1.792     50K .......... .......... .......... .......... ..........  0%  293K 2m10s
#10 1.963    100K .......... .......... .......... .......... ..........  0% 13.6M 88s
#10 1.967    150K .......... .......... .......... .......... ..........  0% 12.6M 66s
#10 1.971    200K .......... .......... .......... .......... ..........  0%  302K 78s
#10 2.136    250K .......... .......... .......... .......... ..........  0% 13.6M 65s
#10 2.140    300K .......... .......... .......... .......... ..........  0% 13.5M 56s
#10 2.143    350K .......... .......... .......... .......... ..........  1% 10.5M 50s
#10 2.148    400K .......... .......... .......... .......... ..........  1%  316K 57s
#10 2.307    450K .......... .......... .......... .......... ..........  1% 13.5M 52s
#10 2.310    500K .......... .......... .......... .......... ..........  1% 13.9M 47s
#10 2.314    550K .......... .......... .......... .......... ..........  1% 13.2M 44s
#10 2.318    600K .......... .......... .......... .......... ..........  1% 14.0M 40s
#10 2.321    650K .......... .......... .......... .......... ..........  1% 12.9M 38s
#10 2.325    700K .......... .......... .......... .......... ..........  1% 14.5M 35s
#10 2.328    750K .......... .......... .......... .......... ..........  2% 9.05M 33s
#10 2.333    800K .......... .......... .......... .......... ..........  2% 13.7M 31s
#10 2.337    850K .......... .......... .......... .......... ..........  2%  356K 35s
#10 2.478    900K .......... .......... .......... .......... ..........  2% 12.8M 34s
#10 2.481    950K .......... .......... .......... .......... ..........  2% 13.8M 32s
#10 2.485   1000K .......... .......... .......... .......... ..........  2% 12.4M 31s
#10 2.489   1050K .......... .......... .......... .......... ..........  2% 13.6M 29s
#10 2.492   1100K .......... .......... .......... .......... ..........  3% 13.6M 28s
#10 2.496   1150K .......... .......... .......... .......... ..........  3% 11.0M 27s
#10 2.500   1200K .......... .......... .......... .......... ..........  3% 12.7M 26s
#10 2.504   1250K .......... .......... .......... .......... ..........  3% 13.6M 25s
#10 2.508   1300K .......... .......... .......... .......... ..........  3% 12.8M 24s
#10 2.512   1350K .......... .......... .......... .......... ..........  3% 9.95M 23s
#10 2.517   1400K .......... .......... .......... .......... ..........  3% 13.6M 23s
#10 2.520   1450K .......... .......... .......... .......... ..........  3% 14.3M 22s
#10 2.524   1500K .......... .......... .......... .......... ..........  4% 12.5M 21s
#10 2.528   1550K .......... .......... .......... .......... ..........  4% 10.4M 21s
#10 2.532   1600K .......... .......... .......... .......... ..........  4% 14.4M 20s
#10 2.536   1650K .......... .......... .......... .......... ..........  4% 12.2M 20s
#10 2.540   1700K .......... .......... .......... .......... ..........  4% 14.7M 19s
#10 2.543   1750K .......... .......... .......... .......... ..........  4%  472K 21s
#10 2.649   1800K .......... .......... .......... .......... ..........  4% 14.0M 20s
#10 2.652   1850K .......... .......... .......... .......... ..........  4% 11.2M 20s
#10 2.657   1900K .......... .......... .......... .......... ..........  5% 13.6M 19s
#10 2.660   1950K .......... .......... .......... .......... ..........  5% 10.1M 19s
#10 2.665   2000K .......... .......... .......... .......... ..........  5% 13.8M 18s
#10 2.669   2050K .......... .......... .......... .......... ..........  5% 13.6M 18s
#10 2.672   2100K .......... .......... .......... .......... ..........  5% 13.8M 18s
#10 2.676   2150K .......... .......... .......... .......... ..........  5% 11.6M 17s
#10 2.680   2200K .......... .......... .......... .......... ..........  5% 13.8M 17s
#10 2.683   2250K .......... .......... .......... .......... ..........  6% 13.2M 17s
#10 2.687   2300K .......... .......... .......... .......... ..........  6% 13.7M 16s
#10 2.691   2350K .......... .......... .......... .......... ..........  6% 10.6M 16s
#10 2.695   2400K .......... .......... .......... .......... ..........  6% 12.8M 16s
#10 2.699   2450K .......... .......... .......... .......... ..........  6% 13.5M 15s
#10 2.703   2500K .......... .......... .......... .......... ..........  6% 12.8M 15s
#10 2.707   2550K .......... .......... .......... .......... ..........  6% 13.5M 15s
#10 2.710   2600K .......... .......... .......... .......... ..........  6% 13.5M 15s
#10 2.714   2650K .......... .......... .......... .......... ..........  7% 13.3M 14s
#10 2.717   2700K .......... .......... .......... .......... ..........  7% 13.5M 14s
#10 2.721   2750K .......... .......... .......... .......... ..........  7% 9.67M 14s
#10 2.726   2800K .......... .......... .......... .......... ..........  7% 13.5M 14s
#10 2.730   2850K .......... .......... .......... .......... ..........  7% 13.3M 14s
#10 2.733   2900K .......... .......... .......... .......... ..........  7% 13.8M 13s
#10 2.737   2950K .......... .......... .......... .......... ..........  7% 12.4M 13s
#10 2.741   3000K .......... .......... .......... .......... ..........  8% 11.8M 13s
#10 2.745   3050K .......... .......... .......... .......... ..........  8% 14.8M 13s
#10 2.748   3100K .......... .......... .......... .......... ..........  8% 13.6M 13s
#10 2.752   3150K .......... .......... .......... .......... ..........  8% 9.57M 12s
#10 2.757   3200K .......... .......... .......... .......... ..........  8% 13.8M 12s
#10 2.761   3250K .......... .......... .......... .......... ..........  8% 13.7M 12s
#10 2.764   3300K .......... .......... .......... .......... ..........  8% 13.7M 12s
#10 2.768   3350K .......... .......... .......... .......... ..........  8% 13.3M 12s
#10 2.771   3400K .......... .......... .......... .......... ..........  9% 12.7M 12s
#10 2.775   3450K .......... .......... .......... .......... ..........  9% 13.5M 11s
#10 2.779   3500K .......... .......... .......... .......... ..........  9% 14.7M 11s
#10 2.782   3550K .......... .......... .......... .......... ..........  9% 1.24M 12s
#10 2.822   3600K .......... .......... .......... .......... ..........  9% 13.4M 11s
#10 2.825   3650K .......... .......... .......... .......... ..........  9% 12.7M 11s
#10 2.829   3700K .......... .......... .......... .......... ..........  9% 14.9M 11s
#10 2.832   3750K .......... .......... .......... .......... ..........  9% 11.9M 11s
#10 2.836   3800K .......... .......... .......... .......... .......... 10% 14.6M 11s
#10 2.840   3850K .......... .......... .......... .......... .......... 10% 12.8M 11s
#10 2.844   3900K .......... .......... .......... .......... .......... 10% 13.6M 11s
#10 2.847   3950K .......... .......... .......... .......... .......... 10% 10.7M 10s
#10 2.852   4000K .......... .......... .......... .......... .......... 10% 13.5M 10s
#10 2.855   4050K .......... .......... .......... .......... .......... 10% 5.67M 10s
#10 2.864   4100K .......... .......... .......... .......... .......... 10% 14.4M 10s
#10 2.868   4150K .......... .......... .......... .......... .......... 11% 12.7M 10s
#10 2.871   4200K .......... .......... .......... .......... .......... 11% 13.6M 10s
#10 2.875   4250K .......... .......... .......... .......... .......... 11% 13.5M 10s
#10 2.879   4300K .......... .......... .......... .......... .......... 11% 13.0M 10s
#10 2.882   4350K .......... .......... .......... .......... .......... 11% 10.2M 10s
#10 2.887   4400K .......... .......... .......... .......... .......... 11% 13.9M 10s
#10 2.891   4450K .......... .......... .......... .......... .......... 11% 14.6M 10s
#10 2.894   4500K .......... .......... .......... .......... .......... 11% 12.5M 9s
#10 2.898   4550K .......... .......... .......... .......... .......... 12% 13.5M 9s
#10 2.901   4600K .......... .......... .......... .......... .......... 12% 13.3M 9s
#10 2.905   4650K .......... .......... .......... .......... .......... 12% 13.7M 9s
#10 2.909   4700K .......... .......... .......... .......... .......... 12% 13.6M 9s
#10 2.912   4750K .......... .......... .......... .......... .......... 12% 9.55M 9s
#10 2.918   4800K .......... .......... .......... .......... .......... 12% 11.4M 9s
#10 2.922   4850K .......... .......... .......... .......... .......... 12% 12.7M 9s
#10 2.926   4900K .......... .......... .......... .......... .......... 12% 11.6M 9s
#10 2.930   4950K .......... .......... .......... .......... .......... 13% 12.4M 9s
#10 2.934   5000K .......... .......... .......... .......... .......... 13% 11.8M 9s
#10 2.938   5050K .......... .......... .......... .......... .......... 13% 14.6M 9s
#10 2.941   5100K .......... .......... .......... .......... .......... 13% 13.6M 8s
#10 2.945   5150K .......... .......... .......... .......... .......... 13% 10.0M 8s
#10 2.950   5200K .......... .......... .......... .......... .......... 13% 13.0M 8s
#10 2.953   5250K .......... .......... .......... .......... .......... 13% 13.5M 8s
#10 2.957   5300K .......... .......... .......... .......... .......... 14% 13.7M 8s
#10 2.961   5350K .......... .......... .......... .......... .......... 14% 13.3M 8s
#10 2.964   5400K .......... .......... .......... .......... .......... 14% 12.1M 8s
#10 2.968   5450K .......... .......... .......... .......... .......... 14% 12.7M 8s
#10 2.972   5500K .......... .......... .......... .......... .......... 14% 12.8M 8s
#10 2.976   5550K .......... .......... .......... .......... .......... 14% 8.22M 8s
#10 2.982   5600K .......... .......... .......... .......... .......... 14% 13.0M 8s
#10 2.986   5650K .......... .......... .......... .......... .......... 14% 13.4M 8s
#10 2.989   5700K .......... .......... .......... .......... .......... 15% 12.9M 8s
#10 2.993   5750K .......... .......... .......... .......... .......... 15% 13.1M 8s
#10 2.997   5800K .......... .......... .......... .......... .......... 15% 12.2M 8s
#10 3.001   5850K .......... .......... .......... .......... .......... 15% 14.9M 8s
#10 3.004   5900K .......... .......... .......... .......... .......... 15% 13.3M 7s
#10 3.008   5950K .......... .......... .......... .......... .......... 15% 10.3M 7s
#10 3.013   6000K .......... .......... .......... .......... .......... 15% 12.6M 7s
#10 3.016   6050K .......... .......... .......... .......... .......... 16% 14.5M 7s
#10 3.020   6100K .......... .......... .......... .......... .......... 16% 12.4M 7s
#10 3.024   6150K .......... .......... .......... .......... .......... 16% 13.5M 7s
#10 3.027   6200K .......... .......... .......... .......... .......... 16% 14.6M 7s
#10 3.031   6250K .......... .......... .......... .......... .......... 16% 11.8M 7s
#10 3.035   6300K .......... .......... .......... .......... .......... 16% 15.1M 7s
#10 3.038   6350K .......... .......... .......... .......... .......... 16% 9.69M 7s
#10 3.043   6400K .......... .......... .......... .......... .......... 16% 12.5M 7s
#10 3.047   6450K .......... .......... .......... .......... .......... 17% 12.6M 7s
#10 3.051   6500K .......... .......... .......... .......... .......... 17% 13.9M 7s
#10 3.054   6550K .......... .......... .......... .......... .......... 17% 13.4M 7s
#10 3.058   6600K .......... .......... .......... .......... .......... 17% 11.8M 7s
#10 3.062   6650K .......... .......... .......... .......... .......... 17% 12.7M 7s
#10 3.066   6700K .......... .......... .......... .......... .......... 17% 12.8M 7s
#10 3.070   6750K .......... .......... .......... .......... .......... 17% 10.7M 7s
#10 3.074   6800K .......... .......... .......... .......... .......... 17% 13.7M 7s
#10 3.078   6850K .......... .......... .......... .......... .......... 18% 12.5M 7s
#10 3.082   6900K .......... .......... .......... .......... .......... 18% 12.9M 7s
#10 3.086   6950K .......... .......... .......... .......... .......... 18% 10.5M 7s
#10 3.090   7000K .......... .......... .......... .......... .......... 18% 13.5M 6s
#10 3.094   7050K .......... .......... .......... .......... .......... 18% 13.5M 6s
#10 3.098   7100K .......... .......... .......... .......... .......... 18% 12.8M 6s
#10 3.101   7150K .......... .......... .......... .......... .......... 18% 10.1M 6s
#10 3.106   7200K .......... .......... .......... .......... .......... 19% 13.8M 6s
#10 3.110   7250K .......... .......... .......... .......... .......... 19% 13.6M 6s
#10 3.114   7300K .......... .......... .......... .......... .......... 19% 13.7M 6s
#10 3.117   7350K .......... .......... .......... .......... .......... 19% 12.6M 6s
#10 3.121   7400K .......... .......... .......... .......... .......... 19% 13.7M 6s
#10 3.124   7450K .......... .......... .......... .......... .......... 19% 12.2M 6s
#10 3.128   7500K .......... .......... .......... .......... .......... 19% 14.1M 6s
#10 3.132   7550K .......... .......... .......... .......... .......... 19% 9.61M 6s
#10 3.137   7600K .......... .......... .......... .......... .......... 20% 13.0M 6s
#10 3.141   7650K .......... .......... .......... .......... .......... 20% 14.3M 6s
#10 3.144   7700K .......... .......... .......... .......... .......... 20% 11.7M 6s
#10 3.148   7750K .......... .......... .......... .......... .......... 20% 13.5M 6s
#10 3.152   7800K .......... .......... .......... .......... .......... 20% 11.9M 6s
#10 3.156   7850K .......... .......... .......... .......... .......... 20% 13.4M 6s
#10 3.160   7900K .......... .......... .......... .......... .......... 20% 13.0M 6s
#10 3.163   7950K .......... .......... .......... .......... .......... 21% 9.70M 6s
#10 3.168   8000K .......... .......... .......... .......... .......... 21% 12.4M 6s
#10 3.172   8050K .......... .......... .......... .......... .......... 21% 11.0M 6s
#10 3.177   8100K .......... .......... .......... .......... .......... 21% 14.9M 6s
#10 3.180   8150K .......... .......... .......... .......... .......... 21% 12.4M 6s
#10 3.184   8200K .......... .......... .......... .......... .......... 21% 13.9M 6s
#10 3.187   8250K .......... .......... .......... .......... .......... 21% 13.1M 6s
#10 3.191   8300K .......... .......... .......... .......... .......... 21% 13.0M 6s
#10 3.195   8350K .......... .......... .......... .......... .......... 22% 9.46M 6s
#10 3.200   8400K .......... .......... .......... .......... .......... 22% 13.7M 6s
#10 3.204   8450K .......... .......... .......... .......... .......... 22% 12.5M 6s
#10 3.208   8500K .......... .......... .......... .......... .......... 22% 13.3M 5s
#10 3.211   8550K .......... .......... .......... .......... .......... 22% 13.2M 5s
#10 3.215   8600K .......... .......... .......... .......... .......... 22% 13.8M 5s
#10 3.218   8650K .......... .......... .......... .......... .......... 22% 13.7M 5s
#10 3.222   8700K .......... .......... .......... .......... .......... 22% 13.8M 5s
#10 3.226   8750K .......... .......... .......... .......... .......... 23% 9.57M 5s
#10 3.231   8800K .......... .......... .......... .......... .......... 23% 13.4M 5s
#10 3.235   8850K .......... .......... .......... .......... .......... 23% 13.8M 5s
#10 3.238   8900K .......... .......... .......... .......... .......... 23% 12.9M 5s
#10 3.242   8950K .......... .......... .......... .......... .......... 23% 13.4M 5s
#10 3.245   9000K .......... .......... .......... .......... .......... 23% 10.8M 5s
#10 3.250   9050K .......... .......... .......... .......... .......... 23% 13.4M 5s
#10 3.253   9100K .......... .......... .......... .......... .......... 24% 7.76M 5s
#10 3.260   9150K .......... .......... .......... .......... .......... 24% 10.2M 5s
#10 3.265   9200K .......... .......... .......... .......... .......... 24% 14.6M 5s
#10 3.268   9250K .......... .......... .......... .......... .......... 24% 13.7M 5s
#10 3.271   9300K .......... .......... .......... .......... .......... 24% 12.7M 5s
#10 3.275   9350K .......... .......... .......... .......... .......... 24% 14.4M 5s
#10 3.279   9400K .......... .......... .......... .......... .......... 24% 11.9M 5s
#10 3.283   9450K .......... .......... .......... .......... .......... 24% 13.4M 5s
#10 3.286   9500K .......... .......... .......... .......... .......... 25% 13.6M 5s
#10 3.290   9550K .......... .......... .......... .......... .......... 25% 9.86M 5s
#10 3.295   9600K .......... .......... .......... .......... .......... 25% 13.3M 5s
#10 3.299   9650K .......... .......... .......... .......... .......... 25% 13.3M 5s
#10 3.302   9700K .......... .......... .......... .......... .......... 25% 13.9M 5s
#10 3.306   9750K .......... .......... .......... .......... .......... 25% 12.3M 5s
#10 3.310   9800K .......... .......... .......... .......... .......... 25% 13.2M 5s
#10 3.314   9850K .......... .......... .......... .......... .......... 25% 14.2M 5s
#10 3.317   9900K .......... .......... .......... .......... .......... 26% 11.4M 5s
#10 3.321   9950K .......... .......... .......... .......... .......... 26% 10.9M 5s
#10 3.326  10000K .......... .......... .......... .......... .......... 26% 13.3M 5s
#10 3.329  10050K .......... .......... .......... .......... .......... 26% 12.9M 5s
#10 3.333  10100K .......... .......... .......... .......... .......... 26% 13.2M 5s
#10 3.337  10150K .......... .......... .......... .......... .......... 26% 13.6M 5s
#10 3.340  10200K .......... .......... .......... .......... .......... 26% 12.9M 5s
#10 3.344  10250K .......... .......... .......... .......... .......... 27% 13.4M 5s
#10 3.348  10300K .......... .......... .......... .......... .......... 27% 14.9M 5s
#10 3.351  10350K .......... .......... .......... .......... .......... 27% 9.65M 5s
#10 3.356  10400K .......... .......... .......... .......... .......... 27% 14.5M 5s
#10 3.360  10450K .......... .......... .......... .......... .......... 27% 11.9M 5s
#10 3.364  10500K .......... .......... .......... .......... .......... 27% 13.0M 5s
#10 3.368  10550K .......... .......... .......... .......... .......... 27% 13.3M 5s
#10 3.371  10600K .......... .......... .......... .......... .......... 27% 12.9M 5s
#10 3.375  10650K .......... .......... .......... .......... .......... 28% 12.3M 5s
#10 3.379  10700K .......... .......... .......... .......... .......... 28% 13.6M 4s
#10 3.383  10750K .......... .......... .......... .......... .......... 28% 10.1M 4s
#10 3.387  10800K .......... .......... .......... .......... .......... 28% 12.6M 4s
#10 3.391  10850K .......... .......... .......... .......... .......... 28% 14.1M 4s
#10 3.395  10900K .......... .......... .......... .......... .......... 28% 12.6M 4s
#10 3.399  10950K .......... .......... .......... .......... .......... 28% 10.9M 4s
#10 3.403  11000K .......... .......... .......... .......... .......... 29% 12.7M 4s
#10 3.407  11050K .......... .......... .......... .......... .......... 29% 15.0M 4s
#10 3.410  11100K .......... .......... .......... .......... .......... 29% 12.5M 4s
#10 3.414  11150K .......... .......... .......... .......... .......... 29% 10.5M 4s
#10 3.419  11200K .......... .......... .......... .......... .......... 29% 13.3M 4s
#10 3.422  11250K .......... .......... .......... .......... .......... 29% 14.7M 4s
#10 3.426  11300K .......... .......... .......... .......... .......... 29% 11.6M 4s
#10 3.430  11350K .......... .......... .......... .......... .......... 29% 14.1M 4s
#10 3.433  11400K .......... .......... .......... .......... .......... 30% 12.2M 4s
#10 3.437  11450K .......... .......... .......... .......... .......... 30% 13.6M 4s
#10 3.441  11500K .......... .......... .......... .......... .......... 30% 13.8M 4s
#10 3.445  11550K .......... .......... .......... .......... .......... 30% 7.76M 4s
#10 3.451  11600K .......... .......... .......... .......... .......... 30% 13.6M 4s
#10 3.455  11650K .......... .......... .......... .......... .......... 30% 13.1M 4s
#10 3.458  11700K .......... .......... .......... .......... .......... 30% 12.8M 4s
#10 3.462  11750K .......... .......... .......... .......... .......... 30% 13.1M 4s
#10 3.466  11800K .......... .......... .......... .......... .......... 31% 14.5M 4s
#10 3.469  11850K .......... .......... .......... .......... .......... 31% 12.9M 4s
#10 3.473  11900K .......... .......... .......... .......... .......... 31% 13.8M 4s
#10 3.476  11950K .......... .......... .......... .......... .......... 31% 6.92M 4s
#10 3.484  12000K .......... .......... .......... .......... .......... 31% 15.7M 4s
#10 3.487  12050K .......... .......... .......... .......... .......... 31% 11.7M 4s
#10 3.491  12100K .......... .......... .......... .......... .......... 31% 11.9M 4s
#10 3.495  12150K .......... .......... .......... .......... .......... 32% 14.3M 4s
#10 3.498  12200K .......... .......... .......... .......... .......... 32% 12.7M 4s
#10 3.502  12250K .......... .......... .......... .......... .......... 32% 13.7M 4s
#10 3.506  12300K .......... .......... .......... .......... .......... 32% 13.5M 4s
#10 3.509  12350K .......... .......... .......... .......... .......... 32% 9.33M 4s
#10 3.514  12400K .......... .......... .......... .......... .......... 32% 13.6M 4s
#10 3.518  12450K .......... .......... .......... .......... .......... 32% 13.5M 4s
#10 3.522  12500K .......... .......... .......... .......... .......... 32% 12.8M 4s
#10 3.526  12550K .......... .......... .......... .......... .......... 33% 14.6M 4s
#10 3.529  12600K .......... .......... .......... .......... .......... 33% 12.2M 4s
#10 3.533  12650K .......... .......... .......... .......... .......... 33% 12.9M 4s
#10 3.537  12700K .......... .......... .......... .......... .......... 33% 13.8M 4s
#10 3.540  12750K .......... .......... .......... .......... .......... 33% 10.8M 4s
#10 3.545  12800K .......... .......... .......... .......... .......... 33% 12.5M 4s
#10 3.549  12850K .......... .......... .......... .......... .......... 33% 14.7M 4s
#10 3.552  12900K .......... .......... .......... .......... .......... 34% 11.9M 4s
#10 3.556  12950K .......... .......... .......... .......... .......... 34% 13.4M 4s
#10 3.560  13000K .......... .......... .......... .......... .......... 34% 13.9M 4s
#10 3.563  13050K .......... .......... .......... .......... .......... 34% 12.3M 4s
#10 3.567  13100K .......... .......... .......... .......... .......... 34% 13.7M 4s
#10 3.571  13150K .......... .......... .......... .......... .......... 34% 10.8M 4s
#10 3.575  13200K .......... .......... .......... .......... .......... 34% 11.3M 4s
#10 3.580  13250K .......... .......... .......... .......... .......... 34% 14.8M 4s
#10 3.583  13300K .......... .......... .......... .......... .......... 35% 12.4M 4s
#10 3.587  13350K .......... .......... .......... .......... .......... 35% 14.7M 4s
#10 3.590  13400K .......... .......... .......... .......... .......... 35% 12.7M 4s
#10 3.594  13450K .......... .......... .......... .......... .......... 35% 13.4M 4s
#10 3.598  13500K .......... .......... .......... .......... .......... 35% 13.7M 4s
#10 3.601  13550K .......... .......... .......... .......... .......... 35% 10.1M 4s
#10 3.606  13600K .......... .......... .......... .......... .......... 35% 13.7M 4s
#10 3.610  13650K .......... .......... .......... .......... .......... 35% 11.9M 4s
#10 3.614  13700K .......... .......... .......... .......... .......... 36% 12.7M 4s
#10 3.618  13750K .......... .......... .......... .......... .......... 36% 14.5M 4s
#10 3.621  13800K .......... .......... .......... .......... .......... 36% 11.6M 4s
#10 3.625  13850K .......... .......... .......... .......... .......... 36% 14.9M 3s
#10 3.628  13900K .......... .......... .......... .......... .......... 36% 12.5M 3s
#10 3.632  13950K .......... .......... .......... .......... .......... 36% 9.74M 3s
#10 3.637  14000K .......... .......... .......... .......... .......... 36% 13.0M 3s
#10 3.641  14050K .......... .......... .......... .......... .......... 37% 7.66M 3s
#10 3.647  14100K .......... .......... .......... .......... .......... 37% 44.5M 3s
#10 3.649  14150K .......... .......... .......... .......... .......... 37% 13.0M 3s
#10 3.652  14200K .......... .......... .......... .......... .......... 37% 13.7M 3s
#10 3.656  14250K .......... .......... .......... .......... .......... 37% 12.8M 3s
#10 3.660  14300K .......... .......... .......... .......... .......... 37% 13.7M 3s
#10 3.663  14350K .......... .......... .......... .......... .......... 37% 10.1M 3s
#10 3.668  14400K .......... .......... .......... .......... .......... 37% 14.3M 3s
#10 3.672  14450K .......... .......... .......... .......... .......... 38% 12.8M 3s
#10 3.675  14500K .......... .......... .......... .......... .......... 38% 13.7M 3s
#10 3.679  14550K .......... .......... .......... .......... .......... 38% 12.4M 3s
#10 3.683  14600K .......... .......... .......... .......... .......... 38% 14.9M 3s
#10 3.686  14650K .......... .......... .......... .......... .......... 38% 11.8M 3s
#10 3.690  14700K .......... .......... .......... .......... .......... 38% 13.4M 3s
#10 3.694  14750K .......... .......... .......... .......... .......... 38% 10.7M 3s
#10 3.699  14800K .......... .......... .......... .......... .......... 38% 13.8M 3s
#10 3.702  14850K .......... .......... .......... .......... .......... 39% 11.3M 3s
#10 3.706  14900K .......... .......... .......... .......... .......... 39% 14.3M 3s
#10 3.710  14950K .......... .......... .......... .......... .......... 39% 4.98M 3s
#10 3.720  15000K .......... .......... .......... .......... .......... 39% 13.6M 3s
#10 3.723  15050K .......... .......... .......... .......... .......... 39% 13.1M 3s
#10 3.727  15100K .......... .......... .......... .......... .......... 39% 12.4M 3s
#10 3.731  15150K .......... .......... .......... .......... .......... 39% 9.86M 3s
#10 3.736  15200K .......... .......... .......... .......... .......... 40% 15.2M 3s
#10 3.739  15250K .......... .......... .......... .......... .......... 40% 13.4M 3s
#10 3.743  15300K .......... .......... .......... .......... .......... 40% 12.7M 3s
#10 3.747  15350K .......... .......... .......... .......... .......... 40% 9.25M 3s
#10 3.752  15400K .......... .......... .......... .......... .......... 40% 11.3M 3s
#10 3.756  15450K .......... .......... .......... .......... .......... 40% 13.6M 3s
#10 3.760  15500K .......... .......... .......... .......... .......... 40% 13.8M 3s
#10 3.763  15550K .......... .......... .......... .......... .......... 40% 10.1M 3s
#10 3.768  15600K .......... .......... .......... .......... .......... 41% 11.7M 3s
#10 3.772  15650K .......... .......... .......... .......... .......... 41% 13.6M 3s
#10 3.776  15700K .......... .......... .......... .......... .......... 41% 13.8M 3s
#10 3.779  15750K .......... .......... .......... .......... .......... 41% 12.9M 3s
#10 3.783  15800K .......... .......... .......... .......... .......... 41% 12.7M 3s
#10 3.787  15850K .......... .......... .......... .......... .......... 41% 14.7M 3s
#10 3.790  15900K .......... .......... .......... .......... .......... 41% 12.7M 3s
#10 3.794  15950K .......... .......... .......... .......... .......... 42% 10.8M 3s
#10 3.799  16000K .......... .......... .......... .......... .......... 42% 12.7M 3s
#10 3.802  16050K .......... .......... .......... .......... .......... 42% 13.7M 3s
#10 3.806  16100K .......... .......... .......... .......... .......... 42% 11.9M 3s
#10 3.810  16150K .......... .......... .......... .......... .......... 42% 14.4M 3s
#10 3.813  16200K .......... .......... .......... .......... .......... 42% 11.9M 3s
#10 3.818  16250K .......... .......... .......... .......... .......... 42% 13.1M 3s
#10 3.821  16300K .......... .......... .......... .......... .......... 42% 12.6M 3s
#10 3.825  16350K .......... .......... .......... .......... .......... 43% 9.57M 3s
#10 3.830  16400K .......... .......... .......... .......... .......... 43% 12.9M 3s
#10 3.834  16450K .......... .......... .......... .......... .......... 43% 12.5M 3s
#10 3.838  16500K .......... .......... .......... .......... .......... 43% 13.7M 3s
#10 3.842  16550K .......... .......... .......... .......... .......... 43% 13.4M 3s
#10 3.845  16600K .......... .......... .......... .......... .......... 43% 13.5M 3s
#10 3.849  16650K .......... .......... .......... .......... .......... 43% 13.0M 3s
#10 3.853  16700K .......... .......... .......... .......... .......... 43% 11.8M 3s
#10 3.857  16750K .......... .......... .......... .......... .......... 44% 9.43M 3s
#10 3.862  16800K .......... .......... .......... .......... .......... 44% 13.0M 3s
#10 3.866  16850K .......... .......... .......... .......... .......... 44% 13.9M 3s
#10 3.869  16900K .......... .......... .......... .......... .......... 44% 12.2M 3s
#10 3.873  16950K .......... .......... .......... .......... .......... 44% 13.3M 3s
#10 3.877  17000K .......... .......... .......... .......... .......... 44% 12.2M 3s
#10 3.881  17050K .......... .......... .......... .......... .......... 44% 14.1M 3s
#10 3.884  17100K .......... .......... .......... .......... .......... 45% 12.5M 3s
#10 3.888  17150K .......... .......... .......... .......... .......... 45% 10.7M 3s
#10 3.893  17200K .......... .......... .......... .......... .......... 45% 13.7M 3s
#10 3.896  17250K .......... .......... .......... .......... .......... 45% 11.9M 3s
#10 3.900  17300K .......... .......... .......... .......... .......... 45% 13.5M 3s
#10 3.904  17350K .......... .......... .......... .......... .......... 45% 12.4M 3s
#10 3.908  17400K .......... .......... .......... .......... .......... 45% 13.5M 3s
#10 3.912  17450K .......... .......... .......... .......... .......... 45% 13.9M 3s
#10 3.915  17500K .......... .......... .......... .......... .......... 46% 12.9M 3s
#10 3.919  17550K .......... .......... .......... .......... .......... 46% 9.61M 3s
#10 3.924  17600K .......... .......... .......... .......... .......... 46% 11.9M 3s
#10 3.928  17650K .......... .......... .......... .......... .......... 46% 13.5M 3s
#10 3.932  17700K .......... .......... .......... .......... .......... 46% 11.1M 3s
#10 3.936  17750K .......... .......... .......... .......... .......... 46% 13.0M 3s
#10 3.940  17800K .......... .......... .......... .......... .......... 46% 14.2M 3s
#10 3.943  17850K .......... .......... .......... .......... .......... 46% 12.7M 3s
#10 3.947  17900K .......... .......... .......... .......... .......... 47% 8.59M 3s
#10 3.953  17950K .......... .......... .......... .......... .......... 47% 9.12M 3s
#10 3.958  18000K .......... .......... .......... .......... .......... 47% 11.9M 3s
#10 3.962  18050K .......... .......... .......... .......... .......... 47% 11.8M 3s
#10 3.966  18100K .......... .......... .......... .......... .......... 47% 13.6M 3s
#10 3.970  18150K .......... .......... .......... .......... .......... 47% 7.25M 3s
#10 3.977  18200K .......... .......... .......... .......... .......... 47% 13.8M 3s
#10 3.980  18250K .......... .......... .......... .......... .......... 48% 12.7M 3s
#10 3.984  18300K .......... .......... .......... .......... .......... 48% 13.5M 3s
#10 3.988  18350K .......... .......... .......... .......... .......... 48% 9.81M 3s
#10 3.993  18400K .......... .......... .......... .......... .......... 48% 14.6M 3s
#10 3.996  18450K .......... .......... .......... .......... .......... 48% 12.5M 3s
#10 4.000  18500K .......... .......... .......... .......... .......... 48% 13.7M 3s
#10 4.004  18550K .......... .......... .......... .......... .......... 48% 12.3M 3s
#10 4.008  18600K .......... .......... .......... .......... .......... 48% 13.9M 2s
#10 4.011  18650K .......... .......... .......... .......... .......... 49% 12.5M 2s
#10 4.015  18700K .......... .......... .......... .......... .......... 49% 14.6M 2s
#10 4.018  18750K .......... .......... .......... .......... .......... 49% 9.73M 2s
#10 4.023  18800K .......... .......... .......... .......... .......... 49% 11.2M 2s
#10 4.028  18850K .......... .......... .......... .......... .......... 49% 12.7M 2s
#10 4.031  18900K .......... .......... .......... .......... .......... 49% 12.9M 2s
#10 4.035  18950K .......... .......... .......... .......... .......... 49% 13.2M 2s
#10 4.039  19000K .......... .......... .......... .......... .......... 50% 13.4M 2s
#10 4.043  19050K .......... .......... .......... .......... .......... 50% 13.3M 2s
#10 4.046  19100K .......... .......... .......... .......... .......... 50% 12.7M 2s
#10 4.050  19150K .......... .......... .......... .......... .......... 50% 10.3M 2s
#10 4.055  19200K .......... .......... .......... .......... .......... 50% 13.6M 2s
#10 4.058  19250K .......... .......... .......... .......... .......... 50% 13.8M 2s
#10 4.062  19300K .......... .......... .......... .......... .......... 50% 11.9M 2s
#10 4.066  19350K .......... .......... .......... .......... .......... 50% 11.7M 2s
#10 4.070  19400K .......... .......... .......... .......... .......... 51% 13.7M 2s
#10 4.074  19450K .......... .......... .......... .......... .......... 51% 14.4M 2s
#10 4.077  19500K .......... .......... .......... .......... .......... 51% 12.0M 2s
#10 4.081  19550K .......... .......... .......... .......... .......... 51% 10.2M 2s
#10 4.086  19600K .......... .......... .......... .......... .......... 51% 14.6M 2s
#10 4.090  19650K .......... .......... .......... .......... .......... 51% 11.9M 2s
#10 4.094  19700K .......... .......... .......... .......... .......... 51% 13.4M 2s
#10 4.097  19750K .......... .......... .......... .......... .......... 51% 13.5M 2s
#10 4.101  19800K .......... .......... .......... .......... .......... 52% 13.8M 2s
#10 4.104  19850K .......... .......... .......... .......... .......... 52% 12.5M 2s
#10 4.108  19900K .......... .......... .......... .......... .......... 52% 14.2M 2s
#10 4.112  19950K .......... .......... .......... .......... .......... 52% 9.92M 2s
#10 4.117  20000K .......... .......... .......... .......... .......... 52% 13.8M 2s
#10 4.120  20050K .......... .......... .......... .......... .......... 52% 13.6M 2s
#10 4.124  20100K .......... .......... .......... .......... .......... 52% 13.4M 2s
#10 4.127  20150K .......... .......... .......... .......... .......... 53% 12.8M 2s
#10 4.131  20200K .......... .......... .......... .......... .......... 53% 13.4M 2s
#10 4.135  20250K .......... .......... .......... .......... .......... 53% 12.8M 2s
#10 4.139  20300K .......... .......... .......... .......... .......... 53% 14.6M 2s
#10 4.142  20350K .......... .......... .......... .......... .......... 53% 9.63M 2s
#10 4.147  20400K .......... .......... .......... .......... .......... 53% 12.7M 2s
#10 4.151  20450K .......... .......... .......... .......... .......... 53% 13.6M 2s
#10 4.155  20500K .......... .......... .......... .......... .......... 53% 12.8M 2s
#10 4.158  20550K .......... .......... .......... .......... .......... 54% 13.2M 2s
#10 4.162  20600K .......... .......... .......... .......... .......... 54% 13.7M 2s
#10 4.166  20650K .......... .......... .......... .......... .......... 54% 10.0M 2s
#10 4.171  20700K .......... .......... .......... .......... .......... 54% 12.7M 2s
#10 4.174  20750K .......... .......... .......... .......... .......... 54% 9.68M 2s
#10 4.180  20800K .......... .......... .......... .......... .......... 54% 13.7M 2s
#10 4.183  20850K .......... .......... .......... .......... .......... 54% 12.0M 2s
#10 4.187  20900K .......... .......... .......... .......... .......... 55% 13.4M 2s
#10 4.191  20950K .......... .......... .......... .......... .......... 55% 12.4M 2s
#10 4.195  21000K .......... .......... .......... .......... .......... 55% 13.6M 2s
#10 4.198  21050K .......... .......... .......... .......... .......... 55% 11.9M 2s
#10 4.202  21100K .......... .......... .......... .......... .......... 55% 14.8M 2s
#10 4.206  21150K .......... .......... .......... .......... .......... 55% 10.2M 2s
#10 4.210  21200K .......... .......... .......... .......... .......... 55% 13.5M 2s
#10 4.214  21250K .......... .......... .......... .......... .......... 55% 13.0M 2s
#10 4.218  21300K .......... .......... .......... .......... .......... 56% 12.9M 2s
#10 4.222  21350K .......... .......... .......... .......... .......... 56% 13.0M 2s
#10 4.225  21400K .......... .......... .......... .......... .......... 56% 13.6M 2s
#10 4.229  21450K .......... .......... .......... .......... .......... 56% 13.8M 2s
#10 4.232  21500K .......... .......... .......... .......... .......... 56% 13.5M 2s
#10 4.236  21550K .......... .......... .......... .......... .......... 56% 10.2M 2s
#10 4.241  21600K .......... .......... .......... .......... .......... 56% 13.9M 2s
#10 4.244  21650K .......... .......... .......... .......... .......... 56% 12.6M 2s
#10 4.248  21700K .......... .......... .......... .......... .......... 57% 14.7M 2s
#10 4.252  21750K .......... .......... .......... .......... .......... 57% 12.4M 2s
#10 4.255  21800K .......... .......... .......... .......... .......... 57% 13.3M 2s
#10 4.259  21850K .......... .......... .......... .......... .......... 57% 12.7M 2s
#10 4.263  21900K .......... .......... .......... .......... .......... 57% 13.4M 2s
#10 4.267  21950K .......... .......... .......... .......... .......... 57% 10.9M 2s
#10 4.271  22000K .......... .......... .......... .......... .......... 57% 13.5M 2s
#10 4.275  22050K .......... .......... .......... .......... .......... 58% 12.0M 2s
#10 4.279  22100K .......... .......... .......... .......... .......... 58% 11.9M 2s
#10 4.283  22150K .......... .......... .......... .......... .......... 58% 13.1M 2s
#10 4.287  22200K .......... .......... .......... .......... .......... 58% 14.0M 2s
#10 4.290  22250K .......... .......... .......... .......... .......... 58% 13.6M 2s
#10 4.294  22300K .......... .......... .......... .......... .......... 58% 14.4M 2s
#10 4.297  22350K .......... .......... .......... .......... .......... 58% 9.79M 2s
#10 4.302  22400K .......... .......... .......... .......... .......... 58% 13.5M 2s
#10 4.306  22450K .......... .......... .......... .......... .......... 59% 12.6M 2s
#10 4.310  22500K .......... .......... .......... .......... .......... 59% 14.6M 2s
#10 4.313  22550K .......... .......... .......... .......... .......... 59% 12.6M 2s
#10 4.317  22600K .......... .......... .......... .......... .......... 59% 13.9M 2s
#10 4.320  22650K .......... .......... .......... .......... .......... 59% 12.4M 2s
#10 4.324  22700K .......... .......... .......... .......... .......... 59% 13.8M 2s
#10 4.328  22750K .......... .......... .......... .......... .......... 59% 10.1M 2s
#10 4.333  22800K .......... .......... .......... .......... .......... 59% 13.6M 2s
#10 4.336  22850K .......... .......... .......... .......... .......... 60% 13.4M 2s
#10 4.340  22900K .......... .......... .......... .......... .......... 60% 12.8M 2s
#10 4.344  22950K .......... .......... .......... .......... .......... 60% 13.3M 2s
#10 4.347  23000K .......... .......... .......... .......... .......... 60% 12.0M 2s
#10 4.351  23050K .......... .......... .......... .......... .......... 60% 13.4M 2s
#10 4.355  23100K .......... .......... .......... .......... .......... 60% 14.9M 2s
#10 4.358  23150K .......... .......... .......... .......... .......... 60% 10.0M 2s
#10 4.363  23200K .......... .......... .......... .......... .......... 61% 13.0M 2s
#10 4.367  23250K .......... .......... .......... .......... .......... 61% 12.3M 2s
#10 4.371  23300K .......... .......... .......... .......... .......... 61% 10.0M 2s
#10 4.376  23350K .......... .......... .......... .......... .......... 61% 11.5M 2s
#10 4.380  23400K .......... .......... .......... .......... .......... 61% 13.8M 2s
#10 4.383  23450K .......... .......... .......... .......... .......... 61% 13.6M 2s
#10 4.387  23500K .......... .......... .......... .......... .......... 61% 13.5M 2s
#10 4.391  23550K .......... .......... .......... .......... .......... 61% 9.72M 2s
#10 4.396  23600K .......... .......... .......... .......... .......... 62% 14.9M 2s
#10 4.399  23650K .......... .......... .......... .......... .......... 62% 12.6M 2s
#10 4.403  23700K .......... .......... .......... .......... .......... 62% 10.6M 2s
#10 4.408  23750K .......... .......... .......... .......... .......... 62% 14.5M 2s
#10 4.411  23800K .......... .......... .......... .......... .......... 62% 12.1M 2s
#10 4.415  23850K .......... .......... .......... .......... .......... 62% 13.2M 2s
#10 4.419  23900K .......... .......... .......... .......... .......... 62% 12.8M 2s
#10 4.422  23950K .......... .......... .......... .......... .......... 63% 10.7M 2s
#10 4.427  24000K .......... .......... .......... .......... .......... 63% 13.2M 2s
#10 4.431  24050K .......... .......... .......... .......... .......... 63% 13.9M 2s
#10 4.434  24100K .......... .......... .......... .......... .......... 63% 13.9M 2s
#10 4.438  24150K .......... .......... .......... .......... .......... 63% 13.0M 2s
#10 4.442  24200K .......... .......... .......... .......... .......... 63% 12.4M 2s
#10 4.445  24250K .......... .......... .......... .......... .......... 63% 13.6M 2s
#10 4.449  24300K .......... .......... .......... .......... .......... 63% 12.7M 2s
#10 4.453  24350K .......... .......... .......... .......... .......... 64% 11.1M 2s
#10 4.457  24400K .......... .......... .......... .......... .......... 64% 12.4M 2s
#10 4.461  24450K .......... .......... .......... .......... .......... 64% 13.9M 2s
#10 4.465  24500K .......... .......... .......... .......... .......... 64% 11.7M 2s
#10 4.469  24550K .......... .......... .......... .......... .......... 64% 11.7M 2s
#10 4.473  24600K .......... .......... .......... .......... .......... 64% 13.8M 2s
#10 4.477  24650K .......... .......... .......... .......... .......... 64% 13.9M 2s
#10 4.480  24700K .......... .......... .......... .......... .......... 64% 9.37M 2s
#10 4.485  24750K .......... .......... .......... .......... .......... 65% 10.8M 2s
#10 4.490  24800K .......... .......... .......... .......... .......... 65% 12.7M 2s
#10 4.494  24850K .......... .......... .......... .......... .......... 65% 13.4M 2s
#10 4.497  24900K .......... .......... .......... .......... .......... 65% 13.8M 2s
#10 4.501  24950K .......... .......... .......... .......... .......... 65% 12.4M 2s
#10 4.505  25000K .......... .......... .......... .......... .......... 65% 15.3M 2s
#10 4.508  25050K .......... .......... .......... .......... .......... 65% 12.4M 1s
#10 4.512  25100K .......... .......... .......... .......... .......... 66% 13.7M 1s
#10 4.516  25150K .......... .......... .......... .......... .......... 66% 9.63M 1s
#10 4.521  25200K .......... .......... .......... .......... .......... 66% 13.4M 1s
#10 4.524  25250K .......... .......... .......... .......... .......... 66% 13.5M 1s
#10 4.528  25300K .......... .......... .......... .......... .......... 66% 12.8M 1s
#10 4.532  25350K .......... .......... .......... .......... .......... 66% 13.4M 1s
#10 4.535  25400K .......... .......... .......... .......... .......... 66% 13.8M 1s
#10 4.539  25450K .......... .......... .......... .......... .......... 66% 12.4M 1s
#10 4.543  25500K .......... .......... .......... .......... .......... 67% 15.0M 1s
#10 4.546  25550K .......... .......... .......... .......... .......... 67% 9.74M 1s
#10 4.551  25600K .......... .......... .......... .......... .......... 67% 13.3M 1s
#10 4.555  25650K .......... .......... .......... .......... .......... 67% 13.9M 1s
#10 4.558  25700K .......... .......... .......... .......... .......... 67% 12.4M 1s
#10 4.562  25750K .......... .......... .......... .......... .......... 67% 13.4M 1s
#10 4.566  25800K .......... .......... .......... .......... .......... 67% 12.7M 1s
#10 4.570  25850K .......... .......... .......... .......... .......... 68% 13.4M 1s
#10 4.573  25900K .......... .......... .......... .......... .......... 68% 11.9M 1s
#10 4.577  25950K .......... .......... .......... .......... .......... 68% 6.64M 1s
#10 4.585  26000K .......... .......... .......... .......... .......... 68% 12.9M 1s
#10 4.589  26050K .......... .......... .......... .......... .......... 68% 13.8M 1s
#10 4.592  26100K .......... .......... .......... .......... .......... 68% 14.5M 1s
#10 4.595  26150K .......... .......... .......... .......... .......... 68% 12.6M 1s
#10 4.599  26200K .......... .......... .......... .......... .......... 68% 12.7M 1s
#10 4.603  26250K .......... .......... .......... .......... .......... 69% 13.4M 1s
#10 4.607  26300K .......... .......... .......... .......... .......... 69% 13.0M 1s
#10 4.611  26350K .......... .......... .......... .......... .......... 69% 9.91M 1s
#10 4.615  26400K .......... .......... .......... .......... .......... 69% 14.5M 1s
#10 4.619  26450K .......... .......... .......... .......... .......... 69% 12.7M 1s
#10 4.623  26500K .......... .......... .......... .......... .......... 69% 4.53M 1s
#10 4.634  26550K .......... .......... .......... .......... .......... 69% 12.5M 1s
#10 4.637  26600K .......... .......... .......... .......... .......... 69% 12.7M 1s
#10 4.641  26650K .......... .......... .......... .......... .......... 70% 13.9M 1s
#10 4.645  26700K .......... .......... .......... .......... .......... 70% 12.6M 1s
#10 4.649  26750K .......... .......... .......... .......... .......... 70% 10.5M 1s
#10 4.653  26800K .......... .......... .......... .......... .......... 70% 13.6M 1s
#10 4.657  26850K .......... .......... .......... .......... .......... 70% 13.0M 1s
#10 4.661  26900K .......... .......... .......... .......... .......... 70% 13.7M 1s
#10 4.664  26950K .......... .......... .......... .......... .......... 70% 13.3M 1s
#10 4.668  27000K .......... .......... .......... .......... .......... 71% 12.7M 1s
#10 4.672  27050K .......... .......... .......... .......... .......... 71% 13.6M 1s
#10 4.675  27100K .......... .......... .......... .......... .......... 71% 13.0M 1s
#10 4.679  27150K .......... .......... .......... .......... .......... 71% 10.0M 1s
#10 4.684  27200K .......... .......... .......... .......... .......... 71% 13.5M 1s
#10 4.687  27250K .......... .......... .......... .......... .......... 71% 13.4M 1s
#10 4.691  27300K .......... .......... .......... .......... .......... 71% 12.0M 1s
#10 4.695  27350K .......... .......... .......... .......... .......... 71% 12.3M 1s
#10 4.699  27400K .......... .......... .......... .......... .......... 72% 14.4M 1s
#10 4.703  27450K .......... .......... .......... .......... .......... 72% 12.8M 1s
#10 4.706  27500K .......... .......... .......... .......... .......... 72% 14.1M 1s
#10 4.710  27550K .......... .......... .......... .......... .......... 72% 3.38M 1s
#10 4.724  27600K .......... .......... .......... .......... .......... 72% 7.97M 1s
#10 4.730  27650K .......... .......... .......... .......... .......... 72% 11.9M 1s
#10 4.735  27700K .......... .......... .......... .......... .......... 72% 14.0M 1s
#10 4.738  27750K .......... .......... .......... .......... .......... 72% 11.0M 1s
#10 4.742  27800K .......... .......... .......... .......... .......... 73% 13.7M 1s
#10 4.746  27850K .......... .......... .......... .......... .......... 73% 12.4M 1s
#10 4.750  27900K .......... .......... .......... .......... .......... 73% 15.0M 1s
#10 4.753  27950K .......... .......... .......... .......... .......... 73% 7.73M 1s
#10 4.760  28000K .......... .......... .......... .......... .......... 73% 13.6M 1s
#10 4.763  28050K .......... .......... .......... .......... .......... 73% 12.8M 1s
#10 4.767  28100K .......... .......... .......... .......... .......... 73% 13.7M 1s
#10 4.771  28150K .......... .......... .......... .......... .......... 74% 13.3M 1s
#10 4.774  28200K .......... .......... .......... .......... .......... 74% 12.4M 1s
#10 4.778  28250K .......... .......... .......... .......... .......... 74% 14.8M 1s
#10 4.781  28300K .......... .......... .......... .......... .......... 74% 12.3M 1s
#10 4.785  28350K .......... .......... .......... .......... .......... 74% 10.3M 1s
#10 4.790  28400K .......... .......... .......... .......... .......... 74% 13.7M 1s
#10 4.794  28450K .......... .......... .......... .......... .......... 74% 12.9M 1s
#10 4.797  28500K .......... .......... .......... .......... .......... 74% 11.4M 1s
#10 4.802  28550K .......... .......... .......... .......... .......... 75% 14.4M 1s
#10 4.805  28600K .......... .......... .......... .......... .......... 75% 11.2M 1s
#10 4.809  28650K .......... .......... .......... .......... .......... 75% 6.85M 1s
#10 4.817  28700K .......... .......... .......... .......... .......... 75% 6.59M 1s
#10 4.824  28750K .......... .......... .......... .......... .......... 75% 7.13M 1s
#10 4.831  28800K .......... .......... .......... .......... .......... 75% 13.7M 1s
#10 4.834  28850K .......... .......... .......... .......... .......... 75% 12.7M 1s
#10 4.838  28900K .......... .......... .......... .......... .......... 76% 14.7M 1s
#10 4.842  28950K .......... .......... .......... .......... .......... 76% 11.6M 1s
#10 4.846  29000K .......... .......... .......... .......... .......... 76% 15.1M 1s
#10 4.849  29050K .......... .......... .......... .......... .......... 76% 12.6M 1s
#10 4.853  29100K .......... .......... .......... .......... .......... 76% 13.5M 1s
#10 4.857  29150K .......... .......... .......... .......... .......... 76% 10.0M 1s
#10 4.861  29200K .......... .......... .......... .......... .......... 76% 13.0M 1s
#10 4.865  29250K .......... .......... .......... .......... .......... 76% 13.4M 1s
#10 4.869  29300K .......... .......... .......... .......... .......... 77% 13.8M 1s
#10 4.873  29350K .......... .......... .......... .......... .......... 77% 12.5M 1s
#10 4.876  29400K .......... .......... .......... .......... .......... 77% 13.6M 1s
#10 4.880  29450K .......... .......... .......... .......... .......... 77% 12.4M 1s
#10 4.884  29500K .......... .......... .......... .......... .......... 77% 15.2M 1s
#10 4.887  29550K .......... .......... .......... .......... .......... 77% 9.65M 1s
#10 4.892  29600K .......... .......... .......... .......... .......... 77% 13.6M 1s
#10 4.896  29650K .......... .......... .......... .......... .......... 77% 12.6M 1s
#10 4.900  29700K .......... .......... .......... .......... .......... 78% 13.3M 1s
#10 4.903  29750K .......... .......... .......... .......... .......... 78% 13.5M 1s
#10 4.907  29800K .......... .......... .......... .......... .......... 78% 14.3M 1s
#10 4.910  29850K .......... .......... .......... .......... .......... 78% 12.9M 1s
#10 4.914  29900K .......... .......... .......... .......... .......... 78% 12.3M 1s
#10 4.918  29950K .......... .......... .......... .......... .......... 78% 10.4M 1s
#10 4.923  30000K .......... .......... .......... .......... .......... 78% 12.7M 1s
#10 4.927  30050K .......... .......... .......... .......... .......... 79% 12.9M 1s
#10 4.930  30100K .......... .......... .......... .......... .......... 79% 14.4M 1s
#10 4.934  30150K .......... .......... .......... .......... .......... 79% 12.6M 1s
#10 4.938  30200K .......... .......... .......... .......... .......... 79% 14.5M 1s
#10 4.941  30250K .......... .......... .......... .......... .......... 79% 11.8M 1s
#10 4.945  30300K .......... .......... .......... .......... .......... 79% 14.2M 1s
#10 4.949  30350K .......... .......... .......... .......... .......... 79% 10.1M 1s
#10 4.953  30400K .......... .......... .......... .......... .......... 79% 12.5M 1s
#10 4.957  30450K .......... .......... .......... .......... .......... 80% 13.6M 1s
#10 4.961  30500K .......... .......... .......... .......... .......... 80% 12.8M 1s
#10 4.965  30550K .......... .......... .......... .......... .......... 80% 11.7M 1s
#10 4.969  30600K .......... .......... .......... .......... .......... 80% 13.6M 1s
#10 4.972  30650K .......... .......... .......... .......... .......... 80% 13.7M 1s
#10 4.976  30700K .......... .......... .......... .......... .......... 80% 11.8M 1s
#10 4.980  30750K .......... .......... .......... .......... .......... 80% 7.19M 1s
#10 4.987  30800K .......... .......... .......... .......... .......... 80% 12.8M 1s
#10 4.991  30850K .......... .......... .......... .......... .......... 81% 13.5M 1s
#10 4.994  30900K .......... .......... .......... .......... .......... 81% 12.7M 1s
#10 4.998  30950K .......... .......... .......... .......... .......... 81% 13.2M 1s
#10 5.002  31000K .......... .......... .......... .......... .......... 81% 13.6M 1s
#10 5.006  31050K .......... .......... .......... .......... .......... 81% 13.5M 1s
#10 5.009  31100K .......... .......... .......... .......... .......... 81% 13.6M 1s
#10 5.013  31150K .......... .......... .......... .......... .......... 81% 9.62M 1s
#10 5.018  31200K .......... .......... .......... .......... .......... 82% 13.4M 1s
#10 5.022  31250K .......... .......... .......... .......... .......... 82% 14.7M 1s
#10 5.025  31300K .......... .......... .......... .......... .......... 82% 13.0M 1s
#10 5.029  31350K .......... .......... .......... .......... .......... 82% 13.5M 1s
#10 5.032  31400K .......... .......... .......... .......... .......... 82% 12.2M 1s
#10 5.036  31450K .......... .......... .......... .......... .......... 82% 13.6M 1s
#10 5.040  31500K .......... .......... .......... .......... .......... 82% 13.0M 1s
#10 5.043  31550K .......... .......... .......... .......... .......... 82% 10.3M 1s
#10 5.048  31600K .......... .......... .......... .......... .......... 83% 13.4M 1s
#10 5.052  31650K .......... .......... .......... .......... .......... 83% 11.9M 1s
#10 5.056  31700K .......... .......... .......... .......... .......... 83% 13.3M 1s
#10 5.060  31750K .......... .......... .......... .......... .......... 83% 13.7M 1s
#10 5.063  31800K .......... .......... .......... .......... .......... 83% 13.5M 1s
#10 5.067  31850K .......... .......... .......... .......... .......... 83% 12.6M 1s
#10 5.071  31900K .......... .......... .......... .......... .......... 83% 12.7M 1s
#10 5.075  31950K .......... .......... .......... .......... .......... 84% 10.3M 1s
#10 5.079  32000K .......... .......... .......... .......... .......... 84% 13.7M 1s
#10 5.083  32050K .......... .......... .......... .......... .......... 84% 12.5M 1s
#10 5.087  32100K .......... .......... .......... .......... .......... 84% 14.5M 1s
#10 5.090  32150K .......... .......... .......... .......... .......... 84% 12.7M 1s
#10 5.094  32200K .......... .......... .......... .......... .......... 84% 13.6M 1s
#10 5.097  32250K .......... .......... .......... .......... .......... 84% 13.6M 1s
#10 5.101  32300K .......... .......... .......... .......... .......... 84% 12.6M 1s
#10 5.105  32350K .......... .......... .......... .......... .......... 85% 10.3M 1s
#10 5.110  32400K .......... .......... .......... .......... .......... 85% 13.3M 1s
#10 5.113  32450K .......... .......... .......... .......... .......... 85% 12.5M 1s
#10 5.117  32500K .......... .......... .......... .......... .......... 85% 12.8M 1s
#10 5.121  32550K .......... .......... .......... .......... .......... 85% 13.2M 1s
#10 5.125  32600K .......... .......... .......... .......... .......... 85% 14.0M 1s
#10 5.128  32650K .......... .......... .......... .......... .......... 85% 12.8M 1s
#10 5.132  32700K .......... .......... .......... .......... .......... 85% 13.4M 1s
#10 5.136  32750K .......... .......... .......... .......... .......... 86% 10.1M 1s
#10 5.141  32800K .......... .......... .......... .......... .......... 86% 14.9M 1s
#10 5.144  32850K .......... .......... .......... .......... .......... 86% 12.6M 1s
#10 5.148  32900K .......... .......... .......... .......... .......... 86% 13.5M 1s
#10 5.151  32950K .......... .......... .......... .......... .......... 86% 12.6M 1s
#10 5.155  33000K .......... .......... .......... .......... .......... 86% 13.5M 1s
#10 5.159  33050K .......... .......... .......... .......... .......... 86% 13.2M 1s
#10 5.163  33100K .......... .......... .......... .......... .......... 87% 12.1M 1s
#10 5.167  33150K .......... .......... .......... .......... .......... 87% 10.4M 1s
#10 5.171  33200K .......... .......... .......... .......... .......... 87% 12.6M 1s
#10 5.175  33250K .......... .......... .......... .......... .......... 87% 13.8M 1s
#10 5.179  33300K .......... .......... .......... .......... .......... 87% 12.5M 1s
#10 5.183  33350K .......... .......... .......... .......... .......... 87% 12.6M 1s
#10 5.187  33400K .......... .......... .......... .......... .......... 87% 13.5M 0s
#10 5.190  33450K .......... .......... .......... .......... .......... 87% 13.7M 0s
#10 5.194  33500K .......... .......... .......... .......... .......... 88% 12.0M 0s
#10 5.198  33550K .......... .......... .......... .......... .......... 88% 7.94M 0s
#10 5.204  33600K .......... .......... .......... .......... .......... 88% 12.7M 0s
#10 5.208  33650K .......... .......... .......... .......... .......... 88% 13.4M 0s
#10 5.212  33700K .......... .......... .......... .......... .......... 88% 13.6M 0s
#10 5.215  33750K .......... .......... .......... .......... .......... 88% 12.5M 0s
#10 5.219  33800K .......... .......... .......... .......... .......... 88% 13.9M 0s
#10 5.222  33850K .......... .......... .......... .......... .......... 89% 12.5M 0s
#10 5.226  33900K .......... .......... .......... .......... .......... 89% 13.8M 0s
#10 5.230  33950K .......... .......... .......... .......... .......... 89% 9.97M 0s
#10 5.235  34000K .......... .......... .......... .......... .......... 89% 12.8M 0s
#10 5.239  34050K .......... .......... .......... .......... .......... 89% 14.4M 0s
#10 5.242  34100K .......... .......... .......... .......... .......... 89% 12.8M 0s
#10 5.246  34150K .......... .......... .......... .......... .......... 89% 12.5M 0s
#10 5.250  34200K .......... .......... .......... .......... .......... 89% 14.4M 0s
#10 5.253  34250K .......... .......... .......... .......... .......... 90% 12.3M 0s
#10 5.257  34300K .......... .......... .......... .......... .......... 90% 14.3M 0s
#10 5.260  34350K .......... .......... .......... .......... .......... 90% 10.1M 0s
#10 5.265  34400K .......... .......... .......... .......... .......... 90% 12.7M 0s
#10 5.269  34450K .......... .......... .......... .......... .......... 90% 14.5M 0s
#10 5.272  34500K .......... .......... .......... .......... .......... 90% 12.7M 0s
#10 5.276  34550K .......... .......... .......... .......... .......... 90% 13.5M 0s
#10 5.280  34600K .......... .......... .......... .......... .......... 90% 13.7M 0s
#10 5.284  34650K .......... .......... .......... .......... .......... 91% 12.8M 0s
#10 5.287  34700K .......... .......... .......... .......... .......... 91% 13.3M 0s
#10 5.291  34750K .......... .......... .......... .......... .......... 91% 10.1M 0s
#10 5.296  34800K .......... .......... .......... .......... .......... 91% 12.6M 0s
#10 5.300  34850K .......... .......... .......... .......... .......... 91% 14.0M 0s
#10 5.303  34900K .......... .......... .......... .......... .......... 91% 12.6M 0s
#10 5.307  34950K .......... .......... .......... .......... .......... 91% 13.1M 0s
#10 5.311  35000K .......... .......... .......... .......... .......... 92% 12.8M 0s
#10 5.315  35050K .......... .......... .......... .......... .......... 92% 13.6M 0s
#10 5.318  35100K .......... .......... .......... .......... .......... 92% 10.5M 0s
#10 5.323  35150K .......... .......... .......... .......... .......... 92% 10.1M 0s
#10 5.328  35200K .......... .......... .......... .......... .......... 92% 14.8M 0s
#10 5.331  35250K .......... .......... .......... .......... .......... 92% 12.6M 0s
#10 5.335  35300K .......... .......... .......... .......... .......... 92% 13.6M 0s
#10 5.339  35350K .......... .......... .......... .......... .......... 92% 12.8M 0s
#10 5.342  35400K .......... .......... .......... .......... .......... 93% 13.6M 0s
#10 5.346  35450K .......... .......... .......... .......... .......... 93% 13.6M 0s
#10 5.350  35500K .......... .......... .......... .......... .......... 93% 12.7M 0s
#10 5.353  35550K .......... .......... .......... .......... .......... 93% 10.1M 0s
#10 5.358  35600K .......... .......... .......... .......... .......... 93% 14.6M 0s
#10 5.361  35650K .......... .......... .......... .......... .......... 93% 12.8M 0s
#10 5.365  35700K .......... .......... .......... .......... .......... 93% 12.8M 0s
#10 5.369  35750K .......... .......... .......... .......... .......... 93% 12.4M 0s
#10 5.373  35800K .......... .......... .......... .......... .......... 94% 12.7M 0s
#10 5.377  35850K .......... .......... .......... .......... .......... 94% 12.8M 0s
#10 5.381  35900K .......... .......... .......... .......... .......... 94% 13.6M 0s
#10 5.384  35950K .......... .......... .......... .......... .......... 94% 10.2M 0s
#10 5.389  36000K .......... .......... .......... .......... .......... 94% 14.5M 0s
#10 5.393  36050K .......... .......... .......... .......... .......... 94% 13.0M 0s
#10 5.396  36100K .......... .......... .......... .......... .......... 94% 14.7M 0s
#10 5.400  36150K .......... .......... .......... .......... .......... 95% 11.6M 0s
#10 5.404  36200K .......... .......... .......... .......... .......... 95% 11.2M 0s
#10 5.408  36250K .......... .......... .......... .......... .......... 95% 13.4M 0s
#10 5.412  36300K .......... .......... .......... .......... .......... 95% 14.0M 0s
#10 5.415  36350K .......... .......... .......... .......... .......... 95% 9.68M 0s
#10 5.420  36400K .......... .......... .......... .......... .......... 95% 12.7M 0s
#10 5.424  36450K .......... .......... .......... .......... .......... 95% 13.8M 0s
#10 5.428  36500K .......... .......... .......... .......... .......... 95% 12.7M 0s
#10 5.432  36550K .......... .......... .......... .......... .......... 96% 13.8M 0s
#10 5.435  36600K .......... .......... .......... .......... .......... 96% 12.2M 0s
#10 5.439  36650K .......... .......... .......... .......... .......... 96% 13.7M 0s
#10 5.443  36700K .......... .......... .......... .......... .......... 96% 12.4M 0s
#10 5.447  36750K .......... .......... .......... .......... .......... 96% 10.4M 0s
#10 5.451  36800K .......... .......... .......... .......... .......... 96% 13.3M 0s
#10 5.455  36850K .......... .......... .......... .......... .......... 96% 13.8M 0s
#10 5.459  36900K .......... .......... .......... .......... .......... 97% 13.5M 0s
#10 5.462  36950K .......... .......... .......... .......... .......... 97% 12.9M 0s
#10 5.466  37000K .......... .......... .......... .......... .......... 97% 13.9M 0s
#10 5.469  37050K .......... .......... .......... .......... .......... 97% 12.9M 0s
#10 5.473  37100K .......... .......... .......... .......... .......... 97% 12.7M 0s
#10 5.477  37150K .......... .......... .......... .......... .......... 97% 10.1M 0s
#10 5.482  37200K .......... .......... .......... .......... .......... 97% 14.7M 0s
#10 5.485  37250K .......... .......... .......... .......... .......... 97% 13.3M 0s
#10 5.489  37300K .......... .......... .......... .......... .......... 98% 12.1M 0s
#10 5.493  37350K .......... .......... .......... .......... .......... 98% 10.3M 0s
#10 5.498  37400K .......... .......... .......... .......... .......... 98% 6.00M 0s
#10 5.506  37450K .......... .......... .......... .......... .......... 98% 13.3M 0s
#10 5.509  37500K .......... .......... .......... .......... .......... 98% 13.2M 0s
#10 5.513  37550K .......... .......... .......... .......... .......... 98% 10.2M 0s
#10 5.518  37600K .......... .......... .......... .......... .......... 98% 11.0M 0s
#10 5.522  37650K .......... .......... .......... .......... .......... 98% 14.7M 0s
#10 5.526  37700K .......... .......... .......... .......... .......... 99% 13.7M 0s
#10 5.529  37750K .......... .......... .......... .......... .......... 99% 12.7M 0s
#10 5.533  37800K .......... .......... .......... .......... .......... 99% 7.60M 0s
#10 5.540  37850K .......... .......... .......... .......... .......... 99% 13.4M 0s
#10 5.543  37900K .......... .......... .......... .......... .......... 99% 14.9M 0s
#10 5.546  37950K .......... .......... .......... .......... .......... 99% 9.40M 0s
#10 5.552  38000K .......... .......... .......... .......... .......... 99% 12.8M 0s
#10 5.555  38050K .......... .......... .......... .......              100% 31.7M=3.9s
#10 5.557 
#10 5.557 2022-04-23 11:41:07 (9.45 MB/s) - 'opus_testvectors.tar.gz' saved [39001148/39001148]
#10 5.557 
#10 DONE 5.8s

#11 [7/9] WORKDIR opus
#11 sha256:59d8c77354e07fb423f55dc0b9110ef739a40010ee1a5f6ed2d1e22a23ee8688
#11 DONE 0.1s

#13 [8/9] COPY build.sh /src/
#13 sha256:ee233dc78a428f7e9f0303843a0f4645dfcda80b50e355dc33a37e4416c6078c
#13 DONE 0.1s

#14 [9/9] COPY *.c tests/
#14 sha256:281502412c975da39055cde05f9aa295799cd07526304dd752d6246d8ac8d51e
#14 DONE 0.1s

#15 exporting to image
#15 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#15 exporting layers done
#15 writing image sha256:e0ce0083e47f5211d2f8421c09a10ae1cd6f2eb62057af770795ea2c14770b4e done
#15 naming to gcr.io/fuzzbench/builders/benchmark/opus_opus_multistream_encode_fuzzer done
#15 DONE 0.1s

#16 exporting cache
#16 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#16 preparing build cache for export done
#16 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/opus_opus_multistream_encode_fuzzer:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:a6d9a29b412a1f2bdf77231407db13ded9547a400622098a998af62d96c6462b
#1 transferring dockerfile: 46B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:3a34a0e93e4c5327d73767f4cba42b79ce18e7a5ddaf46d14efb762cb6d20ddc
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/opus_opus_multistream_encode_fuzzer:latest
#3 sha256:5ca903528b8be2e0020e62c39c2dc62d4ef047fb98007daeba6469cdce7e36c8
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/opus_opus_multistream_encode_fuzzer
#5 sha256:55510db65b1cfbfc9b9f04109fefedcf16d6b64d72dfcc38e409c8204d860247
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus_multistream_encode_fuzzer-intermediate
#4 sha256:9bad785d2e769dfbe04490accd7df30085e88edc6aeba2bc787a5612f2d24ceb
#4 ERROR: gcr.io/fuzzbench/builders/afl/opus_opus_multistream_encode_fuzzer-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/opus_opus_multistream_encode_fuzzer
#5 sha256:55510db65b1cfbfc9b9f04109fefedcf16d6b64d72dfcc38e409c8204d860247
#5 DONE 0.4s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:8404a14fd7f37872f5be45d041df2ebe0ba30facb42a6204ce05f8b31fbd16a9
#6 0.343 Cloning into '/afl'...
#6 1.048 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.048 
#6 1.048 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.048 changes and commit them, and you can discard any commits you make in this
#6 1.048 state without impacting any branches by switching back to a branch.
#6 1.048 
#6 1.048 If you want to create a new branch to retain commits you create, you may
#6 1.048 do so (now or later) by using -c with the switch command. Example:
#6 1.048 
#6 1.048   git switch -c <new-branch-name>
#6 1.048 
#6 1.048 Or undo this operation with:
#6 1.048 
#6 1.048   git switch -
#6 1.048 
#6 1.048 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.048 
#6 1.048 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.071 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.071 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.255 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.260 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.656 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 3.993 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.436 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.598 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.008 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.255 ln -sf afl-as as
#6 5.257 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.260 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.261 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 5.4s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:5e84735e9fab0dadb325f037e66503e2ed6cf3c9d6de38a2655ffca161c5a09a
#7 0.577 Hit:1 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 0.577 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.577 Hit:3 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.585 Hit:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.607 Hit:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 1.432 Reading package lists...
#7 2.966 Reading package lists...
#7 4.466 Building dependency tree...
#7 4.693 Reading state information...
#7 4.945 wget is already the newest version (1.20.3-1ubuntu2).
#7 4.945 0 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.
#7 4.949 --2022-04-23 11:41:20--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 4.950 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...
#7 4.963 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.
#7 4.987 HTTP request sent, awaiting response... 200 OK
#7 5.162 Length: 9177 (9.0K) [text/plain]
#7 5.162 Saving to: '/afl/afl_driver.cpp'
#7 5.163 
#7 5.163      0K ........                                              100% 7.67M=0.001s
#7 5.164 
#7 5.164 2022-04-23 11:41:20 (7.67 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.164 
#7 7.195 ar: creating /libAFL.a
#7 DONE 7.3s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:fe9b7fafc65cc8515203f90b7922e772fee32b23aacc48abac64be680bba8bfe done
#8 naming to gcr.io/fuzzbench/builders/afl/opus_opus_multistream_encode_fuzzer-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus_multistream_encode_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:5fc91a9704689a67ab54e0d0ee16f1078d55cc121095a837b8e220baf7a0fd26
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:45418ba6518e233d644e0bfac04d9f89d16878307059fe5baa6d780d991e056e
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:5b87526bac2fc56d59254b584d812b6e4c54b4a09e7aad1c7a337895d0d86a17
#8 transferring context: 591B 0.0s done
#8 DONE 0.0s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:1df3abc105f06eee5f65b329b8b6fac019c40aee0e388643b42470a60b26383a
#10 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:51d84fc559c3b16a2234c1a0a9630a35bdfebde3a2d7d582553457aee95b4e8f
#9 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:677a508a4b850b729d2031956349b927c4731ea77f9362916c63e84ebb2b6d29
#11 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:fef1a1da3df91ada2985d96a86178fb8380f3856af0d4d1aac5871be234dd641
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:5fb2f80ccab2180926bb2bc5ede0619da567b589e8773822348f5143b515f16f done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:bb2d28c25ca8b0e45acc9a20145042adc0e7d60a155ee31f5a8e687979a2a012
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:a8b741e1f9f44d705a4ce70d0171a7c6d81384daebcecb8c26ef5e3b0d705d91
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/opus_opus_multistream_encode_fuzzer-intermediate:latest
#3 sha256:59136a5d3d536b0e97d6bbe55c3683c94dc58127392d57d95fa92c747216b6d5
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:94460020aa0e9c7ff39e835bc80980ff7cfc36d74eea071a93561b7baf1b2d99
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/opus_opus_multistream_encode_fuzzer-intermediate
#6 sha256:87bba289157d808ed629ddd01d09c925a2163961c207762eb2094624ca0728e3
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus_multistream_encode_fuzzer
#5 sha256:1a0dd1a2a43fe365755fe9d5b19ecb2de9ea6ab985990099c7123865f129e450
#5 ERROR: gcr.io/fuzzbench/builders/afl/opus_opus_multistream_encode_fuzzer:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:94460020aa0e9c7ff39e835bc80980ff7cfc36d74eea071a93561b7baf1b2d99
#12 transferring context: 742.44kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/opus_opus_multistream_encode_fuzzer-intermediate
#6 sha256:87bba289157d808ed629ddd01d09c925a2163961c207762eb2094624ca0728e3
#6 DONE 0.2s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:7be301145f575aacd2d7feaf1fe70d86bbf24b321fbd9fd78723d3bf58407e3c
#8 DONE 0.3s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:5d62b550ea287e6cc21fc46e66dfa4e58319a38120fec1e41a420e9e560d1436
#9 DONE 11.6s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:9e89c67ef0a4bb6ac962a538abea0d7695ae4cd671bc73829a115cf8e86c668a
#10 DONE 0.2s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:9c567993b2081b46141357ba6b56d87fa77149cc95044e3152eb7201b3c4a7ed
#11 DONE 13.6s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:91158abd38040fde7c943da19d4db5a5937fb6526074f9d1341c730c13d49a01
#13 DONE 0.3s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:ddccfc9bf0a36f72b94baa31ed11df76b957f36aa1644bf3e6548aaba8794f03
#14 DONE 0.7s

#15 [stage-1  8/13] COPY benchmarks/opus_opus_multistream_encode_fuzzer/benchmark.yaml /
#15 sha256:275215a3f7ba4df09ec6cfb871b2fe96ff9f9917217c982ae31b7f8fa47a4495
#15 DONE 0.4s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:73473c7bdce1d5ea827fd297676a5f83baf3e19a33d99b836090459caf8cbf26
#16 DONE 0.7s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:748c37e213402f31ca0f5f90d79814c2e47245fb6f0fc7c89a317da350ade3a5
#17 DONE 0.5s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:8948b0d18ecf2fe52577433f5d26bc0cfb3c67cce3bb6197d84a1f1c4ac880ac
#18 0.552 Checking out commit 02ff730a
#18 0.561 error: pathspec '02ff730a' did not match any file(s) known to git
#18 0.566 error: pathspec '02ff730a' did not match any file(s) known to git
#18 0.574 error: pathspec '02ff730a' did not match any file(s) known to git
#18 0.623 Checkout unsuccessful.
#18 DONE 0.8s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:3a4f5ecd6d4023b7ca2f59265cd426f7f36e0c168c5602df702664144133bb55
#19 DONE 0.7s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:4b0371f176805be5fa5c73333f4b0630c1884823e3469008999bcb445d797a0d
#20 0.690 Run fuzzer_build to build the target
#20 0.811 FUZZ_TARGET = opus_multistream_encode_fuzzer
#20 0.811 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.811 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.817 Building benchmark opus_opus_multistream_encode_fuzzer with fuzzer afl
#20 0.821 + set -eu
#20 0.821 + FUZZERS='opus_decode_fuzzer opus_multi_fuzzer'
#20 0.821 + BUILDS=(floating fixed)
#20 0.821 + tar xvf /src/opus_testvectors.tar.gz
#20 0.833 opus_testvectors/
#20 0.833 opus_testvectors/testvector11.bit
#20 0.837 opus_testvectors/testvector05.dec
#20 0.908 opus_testvectors/testvector01.bit
#20 0.915 opus_testvectors/testvector07.dec
#20 0.974 opus_testvectors/testvector09.dec
#20 1.043 opus_testvectors/testvector12.bit
#20 1.043 opus_testvectors/testvector03.dec
#20 1.094 opus_testvectors/testvector01.dec
#20 1.150 opus_testvectors/testvector10.bit
#20 1.157 opus_testvectors/testvector03.bit
#20 1.157 opus_testvectors/testvector09.bit
#20 1.164 opus_testvectors/testvector11.dec
#20 1.219 opus_testvectors/testvector10.dec
#20 1.283 opus_testvectors/testvector04.bit
#20 1.283 opus_testvectors/testvector02.bit
#20 1.284 opus_testvectors/testvector06.bit
#20 1.285 opus_testvectors/testvector08.dec
#20 1.342 opus_testvectors/testvector12.dec
#20 1.395 opus_testvectors/testvector08.bit
#20 1.396 opus_testvectors/testvector07.bit
#20 1.398 opus_testvectors/testvector02.dec
#20 1.450 opus_testvectors/testvector06.dec
#20 1.500 opus_testvectors/testvector04.dec
#20 1.551 opus_testvectors/testvector05.bit
#20 1.553 + [[ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard = *sanitize=memory* ]]
#20 1.553 + ./autogen.sh
#20 1.634 Updating build configuration files, please wait....
#20 6.555 libtoolize: putting auxiliary files in '.'.
#20 6.555 libtoolize: linking file './ltmain.sh'
#20 6.641 libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
#20 6.641 libtoolize: linking file 'm4/libtool.m4'
#20 6.689 libtoolize: linking file 'm4/ltoptions.m4'
#20 6.741 libtoolize: linking file 'm4/ltsugar.m4'
#20 6.792 libtoolize: linking file 'm4/ltversion.m4'
#20 6.843 libtoolize: linking file 'm4/lt~obsolete.m4'
#20 11.45 configure.ac:38: installing './compile'
#20 11.45 configure.ac:36: installing './config.guess'
#20 11.45 configure.ac:36: installing './config.sub'
#20 11.45 configure.ac:33: installing './install-sh'
#20 11.45 configure.ac:33: installing './missing'
#20 11.49 Makefile.am:337: warning: '%'-style pattern rules are a GNU make extension
#20 11.49 Makefile.am:340: warning: '%'-style pattern rules are a GNU make extension
#20 11.49 Makefile.am: installing './INSTALL'
#20 11.61 Makefile.am: installing './depcomp'
#20 11.66 parallel-tests: installing './test-driver'
#20 11.77 + for build in "${BUILDS[@]}"
#20 11.77 + case "$build" in
#20 11.77 + extra_args=
#20 11.77 + ./configure --enable-static --disable-shared --disable-doc --enable-assertions
#20 12.01 checking whether make supports nested variables... yes
#20 12.02 checking for a BSD-compatible install... /usr/bin/install -c
#20 12.03 checking whether build environment is sane... yes
#20 12.05 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 12.05 checking for gawk... no
#20 12.05 checking for mawk... mawk
#20 12.05 checking whether make sets $(MAKE)... yes
#20 12.08 checking whether to enable maintainer-specific portions of Makefiles... yes
#20 12.10 checking build system type... x86_64-pc-linux-gnu
#20 12.19 checking host system type... x86_64-pc-linux-gnu
#20 12.19 checking how to print strings... printf
#20 12.25 checking whether make supports the include directive... yes (GNU style)
#20 12.27 checking for gcc... clang
#20 12.36 checking whether the C compiler works... yes
#20 12.50 checking for C compiler default output file name... a.out
#20 12.50 checking for suffix of executables... 
#20 12.65 checking whether we are cross compiling... no
#20 12.81 checking for suffix of object files... o
#20 12.84 checking whether we are using the GNU C compiler... yes
#20 12.87 checking whether clang accepts -g... yes
#20 12.90 checking for clang option to accept ISO C89... none needed
#20 12.95 checking whether clang understands -c and -o together... yes
#20 13.00 checking dependency style of clang... gcc3
#20 13.07 checking for a sed that does not truncate output... /usr/bin/sed
#20 13.07 checking for grep that handles long lines and -e... /usr/bin/grep
#20 13.08 checking for egrep... /usr/bin/grep -E
#20 13.08 checking for fgrep... /usr/bin/grep -F
#20 13.08 checking for ld used by clang... /usr/bin/ld
#20 13.11 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 13.11 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 13.12 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 13.16 checking whether ln -s works... yes
#20 13.16 checking the maximum length of command line arguments... 1572864
#20 13.17 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 13.17 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 13.17 checking for /usr/bin/ld option to reload object files... -r
#20 13.18 checking for objdump... objdump
#20 13.18 checking how to recognize dependent libraries... pass_all
#20 13.18 checking for dlltool... no
#20 13.18 checking how to associate runtime and link libraries... printf %s\n
#20 13.18 checking for ar... ar
#20 13.18 checking for archiver @FILE support... @
#20 13.23 checking for strip... strip
#20 13.23 checking for ranlib... ranlib
#20 13.23 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 13.42 checking for sysroot... no
#20 13.42 checking for a working dd... /usr/bin/dd
#20 13.43 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 13.47 checking for mt... no
#20 13.47 checking if : is a manifest tool... no
#20 13.48 checking how to run the C preprocessor... clang -E
#20 13.77 checking for ANSI C header files... yes
#20 14.03 checking for sys/types.h... yes
#20 14.09 checking for sys/stat.h... yes
#20 14.15 checking for stdlib.h... yes
#20 14.21 checking for string.h... yes
#20 14.28 checking for memory.h... yes
#20 14.34 checking for strings.h... yes
#20 14.41 checking for inttypes.h... yes
#20 14.48 checking for stdint.h... yes
#20 14.54 checking for unistd.h... yes
#20 14.62 checking for dlfcn.h... yes
#20 14.68 checking for objdir... .libs
#20 14.87 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 14.90 checking for clang option to produce PIC... -fPIC -DPIC
#20 14.90 checking if clang PIC flag -fPIC -DPIC works... yes
#20 14.94 checking if clang static flag -static works... yes
#20 15.13 checking if clang supports -c -o file.o... yes
#20 15.19 checking if clang supports -c -o file.o... (cached) yes
#20 15.19 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 15.22 checking dynamic linker characteristics... GNU/Linux ld.so
#20 15.41 checking how to hardcode library paths into programs... immediate
#20 15.41 checking whether stripping libraries is possible... yes
#20 15.42 checking if libtool supports shared libraries... yes
#20 15.42 checking whether to build shared libraries... no
#20 15.42 checking whether to build static libraries... yes
#20 15.42 checking for clang option to accept ISO C99... none needed
#20 15.50 checking for an ANSI C-conforming const... yes
#20 15.53 checking for inline... inline
#20 15.56 checking dependency style of clang... gcc3
#20 15.63 checking for C/C++ restrict keyword... __restrict
#20 15.66 checking for C99 variable-size arrays... yes
#20 15.70 checking for cos in -lm... yes
#20 15.86 checking if compiler supports SSE intrinsics... yes
#20 16.07 checking if compiler supports SSE2 intrinsics... yes
#20 16.29 checking if compiler supports SSE4.1 intrinsics... no
#20 16.43 checking if compiler supports SSE4.1 intrinsics with -msse4.1... yes
#20 16.64 checking if compiler supports AVX intrinsics... no
#20 17.29 checking if compiler supports AVX intrinsics with -mavx... yes
#20 17.94 checking How to get X86 CPU Info... Inline Assembly
#20 18.08 checking if clang supports -fvisibility=hidden... yes
#20 18.11 checking if clang supports -fstack-protector-strong... yes
#20 18.25 checking whether to add -D_FORTIFY_SOURCE=2 to CFLAGS... yes
#20 18.38 checking if clang supports -Wall -Wextra -Wcast-align -Wnested-externs -Wshadow -Wstrict-prototypes... yes
#20 18.42 checking for lrintf... yes
#20 18.56 checking for lrint... yes
#20 18.71 checking for __malloc_hook... yes
#20 18.89 checking that generated files are newer than configure... done
#20 18.89 configure: creating ./config.status
#20 19.69 config.status: creating Makefile
#20 19.72 config.status: creating opus.pc
#20 19.74 config.status: creating opus-uninstalled.pc
#20 19.76 config.status: creating celt/arm/armopts.s
#20 19.79 config.status: creating doc/Makefile
#20 19.81 config.status: creating doc/Doxyfile
#20 19.84 config.status: creating config.h
#20 19.86 config.status: executing depfiles commands
#20 21.19 config.status: executing libtool commands
#20 21.21 configure:
#20 21.21 ------------------------------------------------------------------------
#20 21.21   opus 1.3.1-107-gccaaffa9:  Automatic configuration OK.
#20 21.21 
#20 21.21     Compiler support:
#20 21.21 
#20 21.21       C99 var arrays: ................ yes
#20 21.21       C99 lrintf: .................... yes
#20 21.21       Use alloca: .................... no (using var arrays)
#20 21.21 
#20 21.21     General configuration:
#20 21.21 
#20 21.21       Floating point support: ........ yes
#20 21.21       Fast float approximations: ..... no
#20 21.21       Fixed point debugging: ......... no
#20 21.21       Inline Assembly Optimizations: . No inline ASM for your platform, please send patches
#20 21.21       External Assembly Optimizations: 
#20 21.21       Intrinsics Optimizations: ...... x86 SSE SSE2 SSE4.1 AVX
#20 21.21       Run-time CPU detection: ........ x86 SSE4.1 AVX
#20 21.21       Custom modes: .................. no
#20 21.21       Assertion checking: ............ yes
#20 21.21       Hardening: ..................... yes
#20 21.21       Fuzzing: ....................... no
#20 21.21       Check ASM: ..................... no
#20 21.21 
#20 21.21       API documentation: ............. no
#20 21.21       Extra programs: ................ yes
#20 21.21 ------------------------------------------------------------------------
#20 21.21 
#20 21.21  Type "make; make install" to compile and install
#20 21.21  Type "make check" to run the test suite
#20 21.21 
#20 21.30 ++ nproc
#20 21.30 + make -j8
#20 21.35 make  all-recursive
#20 21.37 make[1]: Entering directory '/src/opus'
#20 21.41 make[2]: Entering directory '/src/opus'
#20 21.46   CC       src/opus.lo
#20 21.46   CC       src/opus_decoder.lo
#20 21.46   CC       src/opus_encoder.lo
#20 21.46   CC       src/opus_multistream.lo
#20 21.46   CC       src/opus_multistream_encoder.lo
#20 21.46   CC       src/opus_multistream_decoder.lo
#20 21.46   CC       src/repacketizer.lo
#20 21.47   CC       src/opus_projection_encoder.lo
#20 21.79   CC       src/opus_projection_decoder.lo
#20 21.84   CC       src/mapping_matrix.lo
#20 21.89   CC       src/analysis.lo
#20 21.90   CC       src/mlp.lo
#20 22.01   CC       src/mlp_data.lo
#20 22.13   CC       src/repacketizer_demo.o
#20 22.24 make[3]: Entering directory '/src/opus/doc'
#20 22.24 make[3]: Nothing to be done for 'all'.
#20 22.24 make[3]: Leaving directory '/src/opus/doc'
#20 22.24   CC       celt/tests/test_unit_cwrs32.o
#20 22.32   CC       celt/tests/test_unit_dft.o
#20 22.36   CC       celt/bands.lo
#20 22.38   CC       celt/celt.lo
#20 22.43   CC       celt/celt_encoder.lo
#20 22.55   CC       celt/celt_decoder.lo
#20 22.71   CC       celt/cwrs.lo
#20 22.76   CC       celt/entcode.lo
#20 22.95   CC       celt/entdec.lo
#20 22.98   CC       celt/entenc.lo
#20 23.00   CC       celt/kiss_fft.lo
#20 23.03   CC       celt/laplace.lo
#20 23.31   CC       celt/mathops.lo
#20 23.31   CC       celt/mdct.lo
#20 23.31   CC       celt/modes.lo
#20 23.43   CC       celt/pitch.lo
#20 23.54   CC       celt/celt_lpc.lo
#20 23.55   CC       celt/quant_bands.lo
#20 23.61   CC       celt/rate.lo
#20 23.68   CC       celt/vq.lo
#20 23.69 celt/pitch.c:252:41: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction]
#20 23.69    celt_sig_assert((((unsigned char *)_x-(unsigned char *)NULL)&3)==0);
#20 23.69    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 23.69 ./celt/arch.h:93:38: note: expanded from macro 'celt_sig_assert'
#20 23.70 #define celt_sig_assert(cond) {if (!(cond)) {CELT_FATAL("signal assertion failed: " #cond);}}
#20 23.70                                      ^~~~
#20 23.96   CC       celt/x86/x86cpu.lo
#20 23.98 1 warning generated.
#20 23.99   CC       celt/x86/x86_celt_map.lo
#20 24.11   CC       celt/x86/pitch_sse.lo
#20 24.13   CC       celt/x86/pitch_sse2.lo
#20 24.20   CC       celt/x86/vq_sse2.lo
#20 24.23   CC       celt/x86/celt_lpc_sse4_1.lo
#20 24.25   CC       celt/x86/pitch_sse4_1.lo
#20 24.36   CC       celt/tests/test_unit_entropy.o
#20 24.41   CC       celt/tests/test_unit_laplace.o
#20 24.45   CC       celt/tests/test_unit_mathops.o
#20 24.46 celt/x86/vq_sse2.c:78:24: warning: cast from 'int *' to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 24.46       _mm_storeu_si128((__m128i*)&iy[j], _mm_setzero_si128());
#20 24.46                        ^~~~~~~~~~~~~~~~
#20 24.46 celt/x86/vq_sse2.c:119:27: warning: cast from 'int *' to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 24.46          _mm_storeu_si128((__m128i*)&iy[j], iy4);
#20 24.46                           ^~~~~~~~~~~~~~~~
#20 24.47 celt/x86/vq_sse2.c:208:28: warning: cast from 'int *' to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 24.47       y4 = _mm_loadu_si128((__m128i*)&iy[j]);
#20 24.47                            ^~~~~~~~~~~~~~~~
#20 24.47 celt/x86/vq_sse2.c:211:24: warning: cast from 'int *' to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 24.47       _mm_storeu_si128((__m128i*)&iy[j], y4);
#20 24.47                        ^~~~~~~~~~~~~~~~
#20 24.51   CC       celt/tests/test_unit_mdct.o
#20 24.54   CC       celt/tests/test_unit_rotation.o
#20 24.55   CC       celt/tests/test_unit_types.o
#20 24.60 4 warnings generated.
#20 24.61   CC       src/opus_compare.o
#20 24.62   CC       src/opus_demo.o
#20 24.71   CC       silk/CNG.lo
#20 24.71   CC       silk/code_signs.lo
#20 24.78   CC       silk/init_decoder.lo
#20 25.04   CC       silk/decode_core.lo
#20 25.04   CC       silk/decode_frame.lo
#20 25.05   CC       silk/decode_parameters.lo
#20 25.15   CC       silk/decode_indices.lo
#20 25.19   CC       silk/decode_pulses.lo
#20 25.20   CC       silk/decoder_set_fs.lo
#20 25.31   CC       silk/dec_API.lo
#20 25.35   CC       silk/enc_API.lo
#20 25.36   CC       silk/encode_indices.lo
#20 25.45   CC       silk/encode_pulses.lo
#20 25.51   CC       silk/gain_quant.lo
#20 25.54   CC       silk/interpolate.lo
#20 25.61   CC       silk/LP_variable_cutoff.lo
#20 25.70   CC       silk/NLSF_decode.lo
#20 25.83   CC       silk/NSQ.lo
#20 25.83   CC       silk/NSQ_del_dec.lo
#20 25.86   CC       silk/PLC.lo
#20 25.92   CC       silk/shell_coder.lo
#20 25.96   CC       silk/tables_gain.lo
#20 25.97   CC       silk/tables_LTP.lo
#20 26.08   CC       silk/tables_NLSF_CB_NB_MB.lo
#20 26.18   CC       silk/tables_NLSF_CB_WB.lo
#20 26.20   CC       silk/tables_other.lo
#20 26.26   CC       silk/tables_pitch_lag.lo
#20 26.29   CC       silk/tables_pulses_per_block.lo
#20 26.33   CC       silk/VAD.lo
#20 26.42   CC       silk/control_audio_bandwidth.lo
#20 26.44   CC       silk/quant_LTP_gains.lo
#20 26.47   CC       silk/VQ_WMat_EC.lo
#20 26.49   CC       silk/HP_variable_cutoff.lo
#20 26.51   CC       silk/NLSF_encode.lo
#20 26.54   CC       silk/NLSF_VQ.lo
#20 26.71   CC       silk/NLSF_unpack.lo
#20 26.76   CC       silk/NLSF_del_dec_quant.lo
#20 26.76   CC       silk/process_NLSFs.lo
#20 26.82   CC       silk/stereo_LR_to_MS.lo
#20 26.82   CC       silk/stereo_MS_to_LR.lo
#20 26.82   CC       silk/check_control_input.lo
#20 26.83   CC       silk/control_SNR.lo
#20 26.92   CC       silk/init_encoder.lo
#20 26.98   CC       silk/control_codec.lo
#20 27.05   CC       silk/A2NLSF.lo
#20 27.10   CC       silk/ana_filt_bank_1.lo
#20 27.12   CC       silk/biquad_alt.lo
#20 27.13   CC       silk/bwexpander_32.lo
#20 27.20   CC       silk/bwexpander.lo
#20 27.26   CC       silk/debug.lo
#20 27.33   CC       silk/decode_pitch.lo
#20 27.36   CC       silk/inner_prod_aligned.lo
#20 27.38   CC       silk/lin2log.lo
#20 27.40   CC       silk/log2lin.lo
#20 27.42   CC       silk/LPC_analysis_filter.lo
#20 27.46   CC       silk/LPC_inv_pred_gain.lo
#20 27.48   CC       silk/table_LSF_cos.lo
#20 27.60   CC       silk/NLSF2A.lo
#20 27.62   CC       silk/NLSF_stabilize.lo
#20 27.63   CC       silk/NLSF_VQ_weights_laroia.lo
#20 27.63   CC       silk/pitch_est_tables.lo
#20 27.66   CC       silk/resampler.lo
#20 27.73   CC       silk/resampler_down2_3.lo
#20 27.77   CC       silk/resampler_down2.lo
#20 27.86   CC       silk/resampler_private_AR2.lo
#20 27.89   CC       silk/resampler_private_down_FIR.lo
#20 27.89   CC       silk/resampler_private_IIR_FIR.lo
#20 27.96   CC       silk/resampler_private_up2_HQ.lo
#20 27.96   CC       silk/resampler_rom.lo
#20 27.98   CC       silk/sigm_Q15.lo
#20 28.00   CC       silk/sort.lo
#20 28.01   CC       silk/sum_sqr_shift.lo
#20 28.11   CC       silk/stereo_decode_pred.lo
#20 28.18   CC       silk/stereo_encode_pred.lo
#20 28.21   CC       silk/stereo_find_predictor.lo
#20 28.22   CC       silk/stereo_quant_pred.lo
#20 28.23   CC       silk/LPC_fit.lo
#20 28.29   CC       silk/float/apply_sine_window_FLP.lo
#20 28.31   CC       silk/float/corrMatrix_FLP.lo
#20 28.38   CC       silk/float/encode_frame_FLP.lo
#20 28.38   CC       silk/float/find_LPC_FLP.lo
#20 28.45   CC       silk/float/find_LTP_FLP.lo
#20 28.51   CC       silk/float/find_pitch_lags_FLP.lo
#20 28.53   CC       silk/float/find_pred_coefs_FLP.lo
#20 28.60   CC       silk/float/LPC_analysis_filter_FLP.lo
#20 28.64   CC       silk/float/LTP_analysis_filter_FLP.lo
#20 28.69   CC       silk/float/LTP_scale_ctrl_FLP.lo
#20 28.72   CC       silk/float/noise_shape_analysis_FLP.lo
#20 28.82   CC       silk/float/process_gains_FLP.lo
#20 28.86   CC       silk/float/regularize_correlations_FLP.lo
#20 28.89   CC       silk/float/residual_energy_FLP.lo
#20 28.99   CC       silk/float/warped_autocorrelation_FLP.lo
#20 29.01   CC       silk/float/wrappers_FLP.lo
#20 29.03   CC       silk/float/autocorrelation_FLP.lo
#20 29.09   CC       silk/float/burg_modified_FLP.lo
#20 29.19   CC       silk/float/bwexpander_FLP.lo
#20 29.23   CC       silk/float/energy_FLP.lo
#20 29.29   CC       silk/float/inner_product_FLP.lo
#20 29.36   CC       silk/float/k2a_FLP.lo
#20 29.38   CC       silk/float/LPC_inv_pred_gain_FLP.lo
#20 29.42   CC       silk/float/pitch_analysis_core_FLP.lo
#20 29.52   CC       silk/float/scale_copy_vector_FLP.lo
#20 29.56   CC       silk/float/scale_vector_FLP.lo
#20 29.61   CC       silk/float/schur_FLP.lo
#20 29.63   CC       silk/float/sort_FLP.lo
#20 29.63   CC       silk/x86/NSQ_sse4_1.lo
#20 29.69   CC       silk/x86/NSQ_del_dec_sse4_1.lo
#20 29.71   CC       silk/x86/x86_silk_map.lo
#20 29.88   CC       silk/x86/VAD_sse4_1.lo
#20 29.94   CC       silk/x86/VQ_WMat_EC_sse4_1.lo
#20 29.95 silk/x86/NSQ_sse4_1.c:341:39: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.95     a_Q12_01234567 = _mm_loadu_si128( (__m128i *)(&a_Q12[ 0 ] ) );
#20 29.95                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.95 silk/x86/NSQ_sse4_1.c:343:39: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.95     a_Q12_89ABCDEF = _mm_loadu_si128( (__m128i *)(&a_Q12[ 8 ] ) );
#20 29.95                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.95 silk/x86/NSQ_sse4_1.c:349:44: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.95     AR_shp_Q13_76543210 = _mm_loadu_si128( (__m128i *)(&AR_shp_Q13[0] ) );
#20 29.95                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.95 silk/x86/NSQ_sse4_1.c:354:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.95     xmm_tempa = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[-16]) );
#20 29.95                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.95 silk/x86/NSQ_sse4_1.c:355:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.95     xmm_tempb = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[-12]) );
#20 29.95                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.95 silk/x86/NSQ_sse4_1.c:363:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.95     xmm_tempa = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -8 ]) );
#20 29.95                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.95 silk/x86/NSQ_sse4_1.c:364:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.95     xmm_tempb = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -4 ]) );
#20 29.96                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.96 silk/x86/NSQ_sse4_1.c:373:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.96     xmm_tempa = _mm_loadu_si128( (__m128i *)(&(NSQ->sAR2_Q14[ 0 ]) ) );
#20 29.96                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.96 silk/x86/NSQ_sse4_1.c:374:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.96     xmm_tempb = _mm_loadu_si128( (__m128i *)(&(NSQ->sAR2_Q14[ 4 ]) ) );
#20 29.96                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.96 silk/x86/NSQ_sse4_1.c:442:30: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.96                 b_Q14_3210 = OP_CVTEPI16_EPI32_M64( b_Q14 );
#20 29.96                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.96 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.96  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.96                                      ^~~~~~~~~~~~~~
#20 29.96   CC       silk/tests/test_unit_LPC_inv_pred_gain.o
#20 29.96 silk/x86/NSQ_sse4_1.c:446:54: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.96                 pred_lag_ptr_0123 = _mm_loadu_si128( (__m128i *)(&pred_lag_ptr[ -3 ] ) );
#20 29.96                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.97 silk/x86/NSQ_sse4_1.c:598:23: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.97     _mm_storeu_si128( (__m128i *)(&NSQ->sAR2_Q14[ 4 ]), xmm_tempa );
#20 29.97                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.97 silk/x86/NSQ_sse4_1.c:599:23: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.97     _mm_storeu_si128( (__m128i *)(&NSQ->sAR2_Q14[ 0 ]), xmm_tempb );
#20 29.97                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.97 silk/x86/NSQ_sse4_1.c:615:48: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.97             xmm_xq_Q14_3210 = _mm_loadu_si128( (__m128i *)(&(psLPC_Q14[ i + 0 ] ) ) );
#20 29.97                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.97 silk/x86/NSQ_sse4_1.c:616:48: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.97             xmm_xq_Q14_7654 = _mm_loadu_si128( (__m128i *)(&(psLPC_Q14[ i + 4 ] ) ) );
#20 29.97                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.97 silk/x86/NSQ_sse4_1.c:647:31: warning: cast from 'opus_int16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.98             _mm_storeu_si128( (__m128i *)(&xq[ i ] ), xmm_xq_Q14_3210 );
#20 29.98                               ^~~~~~~~~~~~~~~~~~~~~~
#20 29.98 silk/x86/NSQ_sse4_1.c:688:24: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.98         xmm_x16_x2x0 = OP_CVTEPI16_EPI32_M64( &(x16[ i ] ) );
#20 29.98                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.98 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.98  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.98                                      ^~~~~~~~~~~~~~
#20 29.98 silk/x86/NSQ_sse4_1.c:701:27: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.98         _mm_storeu_si128( (__m128i *)(&(x_sc_Q10[ i ] ) ), xmm_x16_x2x0 );
#20 29.98                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.98 silk/x86/NSQ_sse4_1.c:732:54: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.99             xmm_sLTP_shp_Q14_x2x0 = _mm_loadu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ) );
#20 29.99                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.99 silk/x86/NSQ_sse4_1.c:744:31: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.99             _mm_storeu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ), xmm_sLTP_shp_Q14_x2x0 );
#20 29.99                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.99   CC       tests/test_opus_api.o
#20 30.00   CC       tests/test_opus_decode.o
#20 30.02 silk/x86/NSQ_del_dec_sse4_1.c:408:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 30.02     a_Q12_0123 = OP_CVTEPI16_EPI32_M64( a_Q12 );
#20 30.02                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 30.02 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 30.02  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 30.03                                      ^~~~~~~~~~~~~~
#20 30.03 silk/x86/NSQ_del_dec_sse4_1.c:409:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 30.03     a_Q12_4567 = OP_CVTEPI16_EPI32_M64( a_Q12 + 4 );
#20 30.03                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 30.03 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 30.03  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 30.03                                      ^~~~~~~~~~~~~~
#20 30.03 silk/x86/NSQ_del_dec_sse4_1.c:412:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 30.03         a_Q12_89AB = OP_CVTEPI16_EPI32_M64( a_Q12 + 8 );
#20 30.03                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 30.03 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 30.03  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 30.03                                      ^~~~~~~~~~~~~~
#20 30.03 silk/x86/NSQ_del_dec_sse4_1.c:413:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 30.03         a_Q12_CDEF = OP_CVTEPI16_EPI32_M64( a_Q12 + 12 );
#20 30.03                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 30.03 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 30.03  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 30.03                                      ^~~~~~~~~~~~~~
#20 30.03 silk/x86/NSQ_del_dec_sse4_1.c:417:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 30.03         b_Q12_0123 = OP_CVTEPI16_EPI32_M64( b_Q14 );
#20 30.03                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 30.03 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 30.03  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 30.03                                      ^~~~~~~~~~~~~~
#20 30.03 silk/x86/NSQ_del_dec_sse4_1.c:430:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 30.03                 pred_lag_ptr_tmp    = _mm_loadu_si128( (__m128i *)(&pred_lag_ptr[ -3 ] ) );
#20 30.03                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 30.04 silk/x86/NSQ_del_dec_sse4_1.c:485:52: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 30.04                 psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -3 ] ) ); /* -3, -2 , -1, 0 */
#20 30.04                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 30.04 silk/x86/NSQ_del_dec_sse4_1.c:499:52: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 30.04                 psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -7 ] ) );
#20 30.04                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 30.04 silk/x86/NSQ_del_dec_sse4_1.c:514:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 30.04                     psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -11 ] ) );
#20 30.04                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 30.04 silk/x86/NSQ_del_dec_sse4_1.c:527:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 30.05                     psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -15 ] ) );
#20 30.05                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 30.06 silk/x86/NSQ_del_dec_sse4_1.c:819:24: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 30.06         xmm_x16_x2x0 = OP_CVTEPI16_EPI32_M64( &(x16[ i ] ) );
#20 30.06                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 30.06 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 30.06  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 30.06                                      ^~~~~~~~~~~~~~
#20 30.07 silk/x86/NSQ_del_dec_sse4_1.c:832:27: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 30.07         _mm_storeu_si128( (__m128i *)(&(x_sc_Q10[ i ] ) ), xmm_x16_x2x0 );
#20 30.07                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 30.07 silk/x86/NSQ_del_dec_sse4_1.c:864:58: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 30.07                 xmm_sLTP_shp_Q14_x2x0 = _mm_loadu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ) );
#20 30.07                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 30.07 silk/x86/NSQ_del_dec_sse4_1.c:876:35: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 30.07                 _mm_storeu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ), xmm_sLTP_shp_Q14_x2x0 );
#20 30.07                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 30.20 silk/x86/VAD_sse4_1.c:147:44: warning: cast from 'opus_int16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 30.20                 xmm_X   = _mm_loadu_si128( (__m128i *)&(X[ X_offset[ b ] + i + dec_subframe_offset ] ) );
#20 30.20                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 30.27 silk/x86/VQ_WMat_EC_sse4_1.c:68:36: warning: cast from 'const opus_int32 *' (aka 'const int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 30.27     v_XX_31_Q17 = _mm_loadu_si128( (__m128i *)(&XX_Q17[ 1 ] ) );
#20 30.27                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 30.27 silk/x86/VQ_WMat_EC_sse4_1.c:88:26: warning: cast from 'const opus_int8 *' (aka 'const signed char *') to 'int *' increases required alignment from 1 to 4 [-Wcast-align]
#20 30.27         v_cb_row_31_Q7 = OP_CVTEPI8_EPI32_M32( &cb_row_Q7[ 1 ] );
#20 30.27                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 30.27 ./celt/x86/x86cpu.h:60:40: note: expanded from macro 'OP_CVTEPI8_EPI32_M32'
#20 30.27  (_mm_cvtepi8_epi32(_mm_cvtsi32_si128(*(int *)(x))))
#20 30.27                                        ^~~~~~~~~~
#20 30.33 2 warnings generated.
#20 30.34   CC       tests/test_opus_encode.o
#20 30.35   CC       tests/opus_encode_regressions.o
#20 30.52   CC       tests/test_opus_padding.o
#20 30.55 20 warnings generated.
#20 30.56   CC       tests/test_opus_projection.o
#20 30.58 1 warning generated.
#20 30.60   CC       doc/trivial_example.o
#20 30.61 tests/test_opus_padding.c:81:7: warning: variable 'tests' set but not used [-Wunused-but-set-variable]
#20 30.61   int tests = 0;;
#20 30.61       ^
#20 30.61   CCLD     celt/tests/test_unit_cwrs32
#20 30.63 1 warning generated.
#20 30.65   CCLD     celt/tests/test_unit_dft
#20 30.75   CCLD     celt/tests/test_unit_entropy
#20 30.81   CCLD     celt/tests/test_unit_laplace
#20 30.81 14 warnings generated.
#20 30.83   CCLD     celt/tests/test_unit_mathops
#20 30.99   CCLD     celt/tests/test_unit_mdct
#20 31.00   CCLD     celt/tests/test_unit_rotation
#20 31.06   CCLD     celt/tests/test_unit_types
#20 31.10   CCLD     opus_compare
#20 31.15   CCLD     libopus.la
#20 31.25   CCLD     silk/tests/test_unit_LPC_inv_pred_gain
#20 31.34   CCLD     tests/test_opus_projection
#20 31.75   CCLD     opus_demo
#20 31.75   CCLD     repacketizer_demo
#20 31.76   CCLD     tests/test_opus_decode
#20 31.76   CCLD     tests/test_opus_api
#20 31.76   CCLD     tests/test_opus_encode
#20 31.76   CCLD     tests/test_opus_padding
#20 31.91   CCLD     trivial_example
#20 32.28 make[2]: Leaving directory '/src/opus'
#20 32.28 make[1]: Leaving directory '/src/opus'
#20 32.28 + for fuzzer in $FUZZERS
#20 32.28 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -Iinclude tests/opus_decode_fuzzer.c -o opus_decode_fuzzer.o
#20 32.34 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard opus_decode_fuzzer.o -o /out/opus_decode_fuzzer_floating /libAFL.a .libs/libopus.a
#20 32.64 + '[' -f tests/opus_decode_fuzzer.options ']'
#20 32.64 + cp tests/opus_decode_fuzzer.options /out/opus_decode_fuzzer_floating.options
#20 32.64 + zip -r /out/opus_decode_fuzzer_floating_seed_corpus.zip opus_testvectors/
#20 32.65   adding: opus_testvectors/ (stored 0%)
#20 32.65   adding: opus_testvectors/testvector03.bit (deflated 2%)
#20 32.65   adding: opus_testvectors/testvector01.bit (deflated 15%)
#20 32.68   adding: opus_testvectors/testvector07.bit (deflated 4%)
#20 32.70   adding: opus_testvectors/testvector02.bit (deflated 3%)
#20 32.70   adding: opus_testvectors/testvector12.bit (deflated 4%)
#20 32.71   adding: opus_testvectors/testvector03.dec (deflated 48%)
#20 32.96   adding: opus_testvectors/testvector06.dec (deflated 45%)
#20 33.27   adding: opus_testvectors/testvector11.dec (deflated 7%)
#20 33.55   adding: opus_testvectors/testvector11.bit (deflated 0%)
#20 33.57   adding: opus_testvectors/testvector06.bit (deflated 3%)
#20 33.57   adding: opus_testvectors/testvector08.dec (deflated 38%)
#20 33.90   adding: opus_testvectors/testvector02.dec (deflated 50%)
#20 34.17   adding: opus_testvectors/testvector01.dec (deflated 29%)
#20 34.58   adding: opus_testvectors/testvector05.bit (deflated 3%)
#20 34.58   adding: opus_testvectors/testvector08.bit (deflated 1%)
#20 34.59   adding: opus_testvectors/testvector09.bit (deflated 11%)
#20 34.63   adding: opus_testvectors/testvector10.dec (deflated 49%)
#20 34.93   adding: opus_testvectors/testvector07.dec (deflated 44%)
#20 35.19   adding: opus_testvectors/testvector04.dec (deflated 49%)
#20 35.50   adding: opus_testvectors/testvector09.dec (deflated 43%)
#20 35.83   adding: opus_testvectors/testvector05.dec (deflated 47%)
#20 36.16   adding: opus_testvectors/testvector12.dec (deflated 61%)
#20 36.46   adding: opus_testvectors/testvector10.bit (deflated 9%)
#20 36.49   adding: opus_testvectors/testvector04.bit (deflated 3%)
#20 36.50 + for fuzzer in $FUZZERS
#20 36.50 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -Iinclude tests/opus_multi_fuzzer.c -o opus_multi_fuzzer.o
#20 36.57 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard opus_multi_fuzzer.o -o /out/opus_multi_fuzzer_floating /libAFL.a .libs/libopus.a
#20 36.83 + '[' -f tests/opus_multi_fuzzer.options ']'
#20 36.83 + zip -r /out/opus_multi_fuzzer_floating_seed_corpus.zip opus_testvectors/
#20 36.83   adding: opus_testvectors/ (stored 0%)
#20 36.83   adding: opus_testvectors/testvector03.bit (deflated 2%)
#20 36.84   adding: opus_testvectors/testvector01.bit (deflated 15%)
#20 36.87   adding: opus_testvectors/testvector07.bit (deflated 4%)
#20 36.88   adding: opus_testvectors/testvector02.bit (deflated 3%)
#20 36.89   adding: opus_testvectors/testvector12.bit (deflated 4%)
#20 36.89   adding: opus_testvectors/testvector03.dec (deflated 48%)
#20 37.13   adding: opus_testvectors/testvector06.dec (deflated 45%)
#20 37.44   adding: opus_testvectors/testvector11.dec (deflated 7%)
#20 37.72   adding: opus_testvectors/testvector11.bit (deflated 0%)
#20 37.74   adding: opus_testvectors/testvector06.bit (deflated 3%)
#20 37.75   adding: opus_testvectors/testvector08.dec (deflated 38%)
#20 38.08   adding: opus_testvectors/testvector02.dec (deflated 50%)
#20 38.35   adding: opus_testvectors/testvector01.dec (deflated 29%)
#20 38.75   adding: opus_testvectors/testvector05.bit (deflated 3%)
#20 38.76   adding: opus_testvectors/testvector08.bit (deflated 1%)
#20 38.77   adding: opus_testvectors/testvector09.bit (deflated 11%)
#20 38.80   adding: opus_testvectors/testvector10.dec (deflated 49%)
#20 39.10   adding: opus_testvectors/testvector07.dec (deflated 44%)
#20 39.36   adding: opus_testvectors/testvector04.dec (deflated 49%)
#20 39.67   adding: opus_testvectors/testvector09.dec (deflated 43%)
#20 40.00   adding: opus_testvectors/testvector05.dec (deflated 47%)
#20 40.33   adding: opus_testvectors/testvector12.dec (deflated 61%)
#20 40.63   adding: opus_testvectors/testvector10.bit (deflated 9%)
#20 40.66   adding: opus_testvectors/testvector04.bit (deflated 3%)
#20 40.67 + for build in "${BUILDS[@]}"
#20 40.67 + case "$build" in
#20 40.67 + extra_args=' --enable-fixed-point --enable-check-asm'
#20 40.67 + ./configure --enable-fixed-point --enable-check-asm --enable-static --disable-shared --disable-doc --enable-assertions
#20 40.91 checking whether make supports nested variables... yes
#20 40.91 checking for a BSD-compatible install... /usr/bin/install -c
#20 40.93 checking whether build environment is sane... yes
#20 40.94 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 40.95 checking for gawk... no
#20 40.95 checking for mawk... mawk
#20 40.95 checking whether make sets $(MAKE)... yes
#20 40.97 checking whether to enable maintainer-specific portions of Makefiles... yes
#20 40.99 checking build system type... x86_64-pc-linux-gnu
#20 41.07 checking host system type... x86_64-pc-linux-gnu
#20 41.08 checking how to print strings... printf
#20 41.13 checking whether make supports the include directive... yes (GNU style)
#20 41.15 checking for gcc... clang
#20 41.24 checking whether the C compiler works... yes
#20 41.38 checking for C compiler default output file name... a.out
#20 41.38 checking for suffix of executables... 
#20 41.51 checking whether we are cross compiling... no
#20 41.66 checking for suffix of object files... o
#20 41.69 checking whether we are using the GNU C compiler... yes
#20 41.73 checking whether clang accepts -g... yes
#20 41.76 checking for clang option to accept ISO C89... none needed
#20 41.81 checking whether clang understands -c and -o together... yes
#20 41.86 checking dependency style of clang... gcc3
#20 41.92 checking for a sed that does not truncate output... /usr/bin/sed
#20 41.92 checking for grep that handles long lines and -e... /usr/bin/grep
#20 41.93 checking for egrep... /usr/bin/grep -E
#20 41.93 checking for fgrep... /usr/bin/grep -F
#20 41.94 checking for ld used by clang... /usr/bin/ld
#20 41.96 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 41.96 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 41.97 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 42.01 checking whether ln -s works... yes
#20 42.01 checking the maximum length of command line arguments... 1572864
#20 42.02 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 42.02 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 42.02 checking for /usr/bin/ld option to reload object files... -r
#20 42.02 checking for objdump... objdump
#20 42.02 checking how to recognize dependent libraries... pass_all
#20 42.03 checking for dlltool... no
#20 42.03 checking how to associate runtime and link libraries... printf %s\n
#20 42.03 checking for ar... ar
#20 42.03 checking for archiver @FILE support... @
#20 42.07 checking for strip... strip
#20 42.08 checking for ranlib... ranlib
#20 42.08 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 42.27 checking for sysroot... no
#20 42.27 checking for a working dd... /usr/bin/dd
#20 42.27 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 42.31 checking for mt... no
#20 42.31 checking if : is a manifest tool... no
#20 42.32 checking how to run the C preprocessor... clang -E
#20 42.44 checking for ANSI C header files... yes
#20 42.71 checking for sys/types.h... yes
#20 42.77 checking for sys/stat.h... yes
#20 42.83 checking for stdlib.h... yes
#20 42.89 checking for string.h... yes
#20 42.95 checking for memory.h... yes
#20 43.02 checking for strings.h... yes
#20 43.08 checking for inttypes.h... yes
#20 43.15 checking for stdint.h... yes
#20 43.22 checking for unistd.h... yes
#20 43.29 checking for dlfcn.h... yes
#20 43.36 checking for objdir... .libs
#20 43.55 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 43.59 checking for clang option to produce PIC... -fPIC -DPIC
#20 43.59 checking if clang PIC flag -fPIC -DPIC works... yes
#20 43.62 checking if clang static flag -static works... yes
#20 43.81 checking if clang supports -c -o file.o... yes
#20 43.86 checking if clang supports -c -o file.o... (cached) yes
#20 43.86 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 43.88 checking dynamic linker characteristics... GNU/Linux ld.so
#20 44.08 checking how to hardcode library paths into programs... immediate
#20 44.08 checking whether stripping libraries is possible... yes
#20 44.08 checking if libtool supports shared libraries... yes
#20 44.08 checking whether to build shared libraries... no
#20 44.08 checking whether to build static libraries... yes
#20 44.09 checking for clang option to accept ISO C99... none needed
#20 44.16 checking for an ANSI C-conforming const... yes
#20 44.20 checking for inline... inline
#20 44.23 checking dependency style of clang... gcc3
#20 44.29 checking for C/C++ restrict keyword... __restrict
#20 44.32 checking for C99 variable-size arrays... yes
#20 44.36 checking for cos in -lm... yes
#20 44.51 checking if compiler supports SSE intrinsics... yes
#20 44.70 checking if compiler supports SSE2 intrinsics... yes
#20 44.89 checking if compiler supports SSE4.1 intrinsics... no
#20 45.02 checking if compiler supports SSE4.1 intrinsics with -msse4.1... yes
#20 45.23 checking if compiler supports AVX intrinsics... no
#20 45.78 checking if compiler supports AVX intrinsics with -mavx... yes
#20 46.42 checking How to get X86 CPU Info... Inline Assembly
#20 46.57 checking if clang supports -fvisibility=hidden... yes
#20 46.60 checking if clang supports -fstack-protector-strong... yes
#20 46.73 checking whether to add -D_FORTIFY_SOURCE=2 to CFLAGS... yes
#20 46.87 checking if clang supports -Wall -Wextra -Wcast-align -Wnested-externs -Wshadow -Wstrict-prototypes... yes
#20 46.90 checking for lrintf... yes
#20 47.04 checking for lrint... yes
#20 47.19 checking for __malloc_hook... yes
#20 47.38 checking that generated files are newer than configure... done
#20 47.38 configure: creating ./config.status
#20 48.19 config.status: creating Makefile
#20 48.22 config.status: creating opus.pc
#20 48.24 config.status: creating opus-uninstalled.pc
#20 48.26 config.status: creating celt/arm/armopts.s
#20 48.28 config.status: creating doc/Makefile
#20 48.31 config.status: creating doc/Doxyfile
#20 48.34 config.status: creating config.h
#20 48.35 config.status: executing depfiles commands
#20 48.41 config.status: executing libtool commands
#20 48.43 configure:
#20 48.43 ------------------------------------------------------------------------
#20 48.43   opus 1.3.1-107-gccaaffa9:  Automatic configuration OK.
#20 48.43 
#20 48.43     Compiler support:
#20 48.43 
#20 48.43       C99 var arrays: ................ yes
#20 48.43       C99 lrintf: .................... yes
#20 48.43       Use alloca: .................... no (using var arrays)
#20 48.43 
#20 48.43     General configuration:
#20 48.43 
#20 48.43       Floating point support: ........ no
#20 48.43       Fast float approximations: ..... no
#20 48.43       Fixed point debugging: ......... no
#20 48.43       Inline Assembly Optimizations: . No inline ASM for your platform, please send patches
#20 48.43       External Assembly Optimizations: 
#20 48.43       Intrinsics Optimizations: ...... x86 SSE SSE2 SSE4.1 AVX
#20 48.43       Run-time CPU detection: ........ x86 SSE4.1 AVX
#20 48.43       Custom modes: .................. no
#20 48.43       Assertion checking: ............ yes
#20 48.43       Hardening: ..................... yes
#20 48.43       Fuzzing: ....................... no
#20 48.43       Check ASM: ..................... yes
#20 48.43 
#20 48.43       API documentation: ............. no
#20 48.43       Extra programs: ................ yes
#20 48.43 ------------------------------------------------------------------------
#20 48.43 
#20 48.43  Type "make; make install" to compile and install
#20 48.43  Type "make check" to run the test suite
#20 48.43 
#20 48.51 ++ nproc
#20 48.51 + make -j8
#20 48.61 make  all-recursive
#20 48.67 make[1]: Entering directory '/src/opus'
#20 48.77 make[2]: Entering directory '/src/opus'
#20 48.82   CC       src/opus.lo
#20 48.83   CC       src/opus_decoder.lo
#20 48.83   CC       src/opus_encoder.lo
#20 48.83   CC       src/opus_multistream.lo
#20 48.83   CC       src/opus_multistream_encoder.lo
#20 48.83   CC       src/opus_multistream_decoder.lo
#20 48.83   CC       src/repacketizer.lo
#20 48.83   CC       src/opus_projection_encoder.lo
#20 49.16   CC       src/opus_projection_decoder.lo
#20 49.20   CC       src/mapping_matrix.lo
#20 49.25   CC       src/analysis.lo
#20 49.27   CC       src/mlp.lo
#20 49.38   CC       src/mlp_data.lo
#20 49.49   CC       src/repacketizer_demo.o
#20 49.56   CC       silk/tests/test_unit_LPC_inv_pred_gain.o
#20 49.69   CC       tests/test_opus_api.o
#20 49.74   CC       tests/test_opus_decode.o
#20 49.77   CC       tests/test_opus_encode.o
#20 49.79   CC       tests/opus_encode_regressions.o
#20 49.93   CC       tests/test_opus_projection.o
#20 50.06 make[3]: Entering directory '/src/opus/doc'
#20 50.06 make[3]: Nothing to be done for 'all'.
#20 50.06 make[3]: Leaving directory '/src/opus/doc'
#20 50.06   CC       celt/tests/test_unit_cwrs32.o
#20 50.11   CC       celt/tests/test_unit_dft.o
#20 50.32   CC       celt/bands.lo
#20 50.33   CC       celt/celt.lo
#20 50.37   CC       celt/celt_encoder.lo
#20 50.55   CC       celt/celt_decoder.lo
#20 50.77   CC       celt/cwrs.lo
#20 50.77   CC       celt/entcode.lo
#20 50.84   CC       celt/entdec.lo
#20 50.93   CC       celt/entenc.lo
#20 50.96   CC       celt/kiss_fft.lo
#20 51.08   CC       celt/laplace.lo
#20 51.18   CC       celt/mathops.lo
#20 51.20   CC       celt/mdct.lo
#20 51.35   CC       celt/modes.lo
#20 51.40   CC       celt/pitch.lo
#20 51.49   CC       celt/celt_lpc.lo
#20 51.54   CC       celt/quant_bands.lo
#20 51.61 celt/pitch.c:252:41: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction]
#20 51.61    celt_sig_assert((((unsigned char *)_x-(unsigned char *)NULL)&3)==0);
#20 51.61    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.61 ./celt/arch.h:93:38: note: expanded from macro 'celt_sig_assert'
#20 51.61 #define celt_sig_assert(cond) {if (!(cond)) {CELT_FATAL("signal assertion failed: " #cond);}}
#20 51.61                                      ^~~~
#20 51.62   CC       celt/rate.lo
#20 51.64   CC       celt/vq.lo
#20 52.15   CC       celt/x86/x86cpu.lo
#20 52.19 1 warning generated.
#20 52.19   CC       celt/x86/x86_celt_map.lo
#20 52.20   CC       celt/x86/pitch_sse.lo
#20 52.25   CC       celt/x86/pitch_sse2.lo
#20 52.28   CC       celt/x86/vq_sse2.lo
#20 52.43   CC       celt/x86/celt_lpc_sse4_1.lo
#20 52.43   CC       celt/x86/pitch_sse4_1.lo
#20 52.43   CC       celt/tests/test_unit_entropy.o
#20 52.47   CC       celt/tests/test_unit_laplace.o
#20 52.52 celt/x86/pitch_sse2.c:59:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.52         inVec1_76543210 = _mm_loadu_si128((__m128i *)(&x[i + 0]));
#20 52.52                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.52 celt/x86/pitch_sse2.c:60:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.52         inVec2_76543210 = _mm_loadu_si128((__m128i *)(&y[i + 0]));
#20 52.52                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.52 celt/x86/pitch_sse2.c:62:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.52         inVec1_FEDCBA98 = _mm_loadu_si128((__m128i *)(&x[i + 8]));
#20 52.52                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.52 celt/x86/pitch_sse2.c:63:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.52         inVec2_FEDCBA98 = _mm_loadu_si128((__m128i *)(&y[i + 8]));
#20 52.52                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.52 celt/x86/pitch_sse2.c:76:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.53         inVec1_76543210 = _mm_loadu_si128((__m128i *)(&x[i + 0]));
#20 52.53                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.53 celt/x86/pitch_sse2.c:77:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.53         inVec2_76543210 = _mm_loadu_si128((__m128i *)(&y[i + 0]));
#20 52.53                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.57 6 warnings generated.
#20 52.58   CC       celt/tests/test_unit_mathops.o
#20 52.59   CC       celt/tests/test_unit_mdct.o
#20 52.73 celt/x86/celt_lpc_sse4_1.c:73:14: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.73       vecX = OP_CVTEPI16_EPI32_M64(x + i);
#20 52.73              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.73 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.73  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.73                                      ^~~~~~~~~~~~~~
#20 52.73 celt/x86/celt_lpc_sse4_1.c:76:24: warning: cast from 'opus_val16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.73       _mm_storel_epi64((__m128i *)(y + i), vecSum);
#20 52.73                        ^~~~~~~~~~~~~~~~~~
#20 52.74   CC       celt/tests/test_unit_rotation.o
#20 52.76 celt/x86/pitch_sse4_1.c:61:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.76         inVec1_76543210 = _mm_loadu_si128((__m128i *)(&x[i + 0]));
#20 52.76                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.76 celt/x86/pitch_sse4_1.c:62:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.76         inVec2_76543210 = _mm_loadu_si128((__m128i *)(&y[i + 0]));
#20 52.76                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.76 celt/x86/pitch_sse4_1.c:64:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.76         inVec1_FEDCBA98 = _mm_loadu_si128((__m128i *)(&x[i + 8]));
#20 52.76                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.76 celt/x86/pitch_sse4_1.c:65:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.76         inVec2_FEDCBA98 = _mm_loadu_si128((__m128i *)(&y[i + 8]));
#20 52.76                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.76 celt/x86/pitch_sse4_1.c:78:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.76         inVec1_76543210 = _mm_loadu_si128((__m128i *)(&x[i + 0]));
#20 52.76                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.76 celt/x86/pitch_sse4_1.c:79:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.76         inVec2_76543210 = _mm_loadu_si128((__m128i *)(&y[i + 0]));
#20 52.76                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.76 celt/x86/pitch_sse4_1.c:89:23: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.76         inVec1_3210 = OP_CVTEPI16_EPI32_M64(&x[i + 0]);
#20 52.76                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.76 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.76  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.77                                      ^~~~~~~~~~~~~~
#20 52.77 celt/x86/pitch_sse4_1.c:90:23: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.77         inVec2_3210 = OP_CVTEPI16_EPI32_M64(&y[i + 0]);
#20 52.77                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.77 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.77  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.77                                      ^~~~~~~~~~~~~~
#20 52.77 celt/x86/pitch_sse4_1.c:137:32: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.77         vecX = _mm_loadu_si128((__m128i *)(&x[j + 0]));
#20 52.77                                ^~~~~~~~~~~~~~~~~~~~~~
#20 52.77 celt/x86/pitch_sse4_1.c:138:33: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.77         vecY0 = _mm_loadu_si128((__m128i *)(&y[j + 0]));
#20 52.77                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 52.77 celt/x86/pitch_sse4_1.c:139:33: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.77         vecY1 = _mm_loadu_si128((__m128i *)(&y[j + 1]));
#20 52.77                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 52.77 celt/x86/pitch_sse4_1.c:140:33: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.77         vecY2 = _mm_loadu_si128((__m128i *)(&y[j + 2]));
#20 52.77                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 52.77 celt/x86/pitch_sse4_1.c:141:33: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.77         vecY3 = _mm_loadu_si128((__m128i *)(&y[j + 3]));
#20 52.77                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 52.78 celt/x86/pitch_sse4_1.c:166:16: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.78         vecX = OP_CVTEPI16_EPI32_M64(&x[j + 0]);
#20 52.78                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.78 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.78  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.78                                      ^~~~~~~~~~~~~~
#20 52.78 celt/x86/pitch_sse4_1.c:172:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.78         vecY0 = OP_CVTEPI16_EPI32_M64(&y[j + 0]);
#20 52.78                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.78 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.78  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.78                                      ^~~~~~~~~~~~~~
#20 52.78 celt/x86/pitch_sse4_1.c:173:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.78         vecY1 = OP_CVTEPI16_EPI32_M64(&y[j + 1]);
#20 52.78                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.78 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.78  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.78                                      ^~~~~~~~~~~~~~
#20 52.78 celt/x86/pitch_sse4_1.c:174:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.78         vecY2 = OP_CVTEPI16_EPI32_M64(&y[j + 2]);
#20 52.78                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.78 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.78  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.78                                      ^~~~~~~~~~~~~~
#20 52.78 celt/x86/pitch_sse4_1.c:175:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.78         vecY3 = OP_CVTEPI16_EPI32_M64(&y[j + 3]);
#20 52.78                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.78 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.78  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.79                                      ^~~~~~~~~~~~~~
#20 52.79 celt/x86/pitch_sse4_1.c:188:12: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.79     vecX = OP_CVTEPI16_EPI32_M64(&x[len - 4]);
#20 52.79            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.79 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.79  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.79                                      ^~~~~~~~~~~~~~
#20 52.79 celt/x86/pitch_sse4_1.c:195:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.79         vecY0 = OP_CVTEPI16_EPI32_M64(&y[j + 0]);
#20 52.79                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.79 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.79  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.79                                      ^~~~~~~~~~~~~~
#20 52.79 celt/x86/pitch_sse4_1.c:196:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.79         vecY1 = OP_CVTEPI16_EPI32_M64(&y[j + 1]);
#20 52.79                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.79 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.79  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.79                                      ^~~~~~~~~~~~~~
#20 52.79 celt/x86/pitch_sse4_1.c:197:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.79         vecY2 = OP_CVTEPI16_EPI32_M64(&y[j + 2]);
#20 52.79                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.79 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.79  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.79                                      ^~~~~~~~~~~~~~
#20 52.79 celt/x86/pitch_sse4_1.c:212:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.79         vecY0 = OP_CVTEPI16_EPI32_M64(&y[j + 0]);
#20 52.79                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.79 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.79  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.79                                      ^~~~~~~~~~~~~~
#20 52.79 celt/x86/pitch_sse4_1.c:213:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.79         vecY1 = OP_CVTEPI16_EPI32_M64(&y[j + 1]);
#20 52.79                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.79 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.79  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.79                                      ^~~~~~~~~~~~~~
#20 52.79 celt/x86/pitch_sse4_1.c:225:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.79         vecY0 = OP_CVTEPI16_EPI32_M64(&y[j + 0]);
#20 52.79                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.79 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.79  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.79                                      ^~~~~~~~~~~~~~
#20 52.79 celt/x86/pitch_sse4_1.c:232:31: warning: cast from 'opus_val32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 52.79     initSum = _mm_loadu_si128((__m128i *)(&sum[0]));
#20 52.79                               ^~~~~~~~~~~~~~~~~~~~
#20 52.79 celt/x86/pitch_sse4_1.c:234:22: warning: cast from 'opus_val32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 52.79     _mm_storeu_si128((__m128i *)sum, initSum);
#20 52.79                      ^~~~~~~~~~~~~~
#20 52.86   CC       celt/tests/test_unit_types.o
#20 52.88 2 warnings generated.
#20 52.90   CC       src/opus_demo.o
#20 52.90   CC       silk/CNG.lo
#20 52.91   CC       silk/code_signs.lo
#20 52.93   CC       silk/init_decoder.lo
#20 52.94 27 warnings generated.
#20 52.96   CC       silk/decode_core.lo
#20 53.13   CC       silk/decode_frame.lo
#20 53.18   CC       silk/decode_parameters.lo
#20 53.25   CC       silk/decode_indices.lo
#20 53.40   CC       silk/decode_pulses.lo
#20 53.40   CC       silk/decoder_set_fs.lo
#20 53.50   CC       silk/dec_API.lo
#20 53.54   CC       silk/enc_API.lo
#20 53.56   CC       silk/encode_indices.lo
#20 53.66   CC       silk/encode_pulses.lo
#20 53.68   CC       silk/gain_quant.lo
#20 53.71   CC       silk/interpolate.lo
#20 53.73   CC       silk/LP_variable_cutoff.lo
#20 53.90   CC       silk/NLSF_decode.lo
#20 54.02   CC       silk/NSQ.lo
#20 54.02   CC       silk/NSQ_del_dec.lo
#20 54.03   CC       silk/PLC.lo
#20 54.04   CC       silk/shell_coder.lo
#20 54.16   CC       silk/tables_gain.lo
#20 54.19   CC       silk/tables_LTP.lo
#20 54.20   CC       silk/tables_NLSF_CB_NB_MB.lo
#20 54.31   CC       silk/tables_NLSF_CB_WB.lo
#20 54.40   CC       silk/tables_other.lo
#20 54.41   CC       silk/tables_pitch_lag.lo
#20 54.43   CC       silk/tables_pulses_per_block.lo
#20 54.44   CC       silk/VAD.lo
#20 54.56   CC       silk/control_audio_bandwidth.lo
#20 54.64   CC       silk/quant_LTP_gains.lo
#20 54.64   CC       silk/VQ_WMat_EC.lo
#20 54.65   CC       silk/HP_variable_cutoff.lo
#20 54.67   CC       silk/NLSF_encode.lo
#20 54.67   CC       silk/NLSF_VQ.lo
#20 54.81   CC       silk/NLSF_unpack.lo
#20 54.94   CC       silk/NLSF_del_dec_quant.lo
#20 54.96   CC       silk/process_NLSFs.lo
#20 54.97   CC       silk/stereo_LR_to_MS.lo
#20 54.99   CC       silk/stereo_MS_to_LR.lo
#20 54.99   CC       silk/check_control_input.lo
#20 54.99   CC       silk/control_SNR.lo
#20 55.01   CC       silk/init_encoder.lo
#20 55.07   CC       silk/control_codec.lo
#20 55.24   CC       silk/A2NLSF.lo
#20 55.26   CC       silk/ana_filt_bank_1.lo
#20 55.28   CC       silk/biquad_alt.lo
#20 55.30   CC       silk/bwexpander_32.lo
#20 55.33   CC       silk/bwexpander.lo
#20 55.40   CC       silk/debug.lo
#20 55.46   CC       silk/decode_pitch.lo
#20 55.49   CC       silk/inner_prod_aligned.lo
#20 55.50   CC       silk/lin2log.lo
#20 55.53   CC       silk/log2lin.lo
#20 55.55   CC       silk/LPC_analysis_filter.lo
#20 55.57   CC       silk/LPC_inv_pred_gain.lo
#20 55.58   CC       silk/table_LSF_cos.lo
#20 55.73   CC       silk/NLSF2A.lo
#20 55.73   CC       silk/NLSF_stabilize.lo
#20 55.78   CC       silk/NLSF_VQ_weights_laroia.lo
#20 55.79   CC       silk/pitch_est_tables.lo
#20 55.81   CC       silk/resampler.lo
#20 55.82   CC       silk/resampler_down2_3.lo
#20 55.89   CC       silk/resampler_down2.lo
#20 55.96   CC       silk/resampler_private_AR2.lo
#20 56.04   CC       silk/resampler_private_down_FIR.lo
#20 56.05   CC       silk/resampler_private_IIR_FIR.lo
#20 56.08   CC       silk/resampler_private_up2_HQ.lo
#20 56.10   CC       silk/resampler_rom.lo
#20 56.11   CC       silk/sigm_Q15.lo
#20 56.12   CC       silk/sort.lo
#20 56.15   CC       silk/sum_sqr_shift.lo
#20 56.21   CC       silk/stereo_decode_pred.lo
#20 56.33   CC       silk/stereo_encode_pred.lo
#20 56.33   CC       silk/stereo_find_predictor.lo
#20 56.34   CC       silk/stereo_quant_pred.lo
#20 56.35   CC       silk/LPC_fit.lo
#20 56.46   CC       silk/fixed/LTP_analysis_filter_FIX.lo
#20 56.48   CC       silk/fixed/LTP_scale_ctrl_FIX.lo
#20 56.48   CC       silk/fixed/corrMatrix_FIX.lo
#20 56.51   CC       silk/fixed/encode_frame_FIX.lo
#20 56.60   CC       silk/fixed/find_LPC_FIX.lo
#20 56.63   CC       silk/fixed/find_LTP_FIX.lo
#20 56.64   CC       silk/fixed/find_pitch_lags_FIX.lo
#20 56.73   CC       silk/fixed/find_pred_coefs_FIX.lo
#20 56.75   CC       silk/fixed/noise_shape_analysis_FIX.lo
#20 56.79   CC       silk/fixed/process_gains_FIX.lo
#20 56.90   CC       silk/fixed/regularize_correlations_FIX.lo
#20 56.91   CC       silk/fixed/residual_energy16_FIX.lo
#20 56.96   CC       silk/fixed/residual_energy_FIX.lo
#20 56.97   CC       silk/fixed/warped_autocorrelation_FIX.lo
#20 56.99   CC       silk/fixed/apply_sine_window_FIX.lo
#20 57.06   CC       silk/fixed/autocorr_FIX.lo
#20 57.14   CC       silk/fixed/burg_modified_FIX.lo
#20 57.17   CC       silk/fixed/k2a_FIX.lo
#20 57.25   CC       silk/fixed/k2a_Q16_FIX.lo
#20 57.25   CC       silk/fixed/pitch_analysis_core_FIX.lo
#20 57.27   CC       silk/fixed/vector_ops_FIX.lo
#20 57.31   CC       silk/fixed/schur64_FIX.lo
#20 57.36   CC       silk/fixed/schur_FIX.lo
#20 57.43   CC       silk/x86/NSQ_sse4_1.lo
#20 57.50   CC       silk/x86/NSQ_del_dec_sse4_1.lo
#20 57.56   CC       silk/x86/x86_silk_map.lo
#20 57.58   CC       silk/x86/VAD_sse4_1.lo
#20 57.62   CC       silk/x86/VQ_WMat_EC_sse4_1.lo
#20 57.68   CC       silk/fixed/x86/vector_ops_FIX_sse4_1.lo
#20 57.76 silk/x86/NSQ_sse4_1.c:341:39: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.76     a_Q12_01234567 = _mm_loadu_si128( (__m128i *)(&a_Q12[ 0 ] ) );
#20 57.76                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.76 silk/x86/NSQ_sse4_1.c:343:39: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.76     a_Q12_89ABCDEF = _mm_loadu_si128( (__m128i *)(&a_Q12[ 8 ] ) );
#20 57.76                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.76 silk/x86/NSQ_sse4_1.c:349:44: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.76     AR_shp_Q13_76543210 = _mm_loadu_si128( (__m128i *)(&AR_shp_Q13[0] ) );
#20 57.76                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.76 silk/x86/NSQ_sse4_1.c:354:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.76     xmm_tempa = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[-16]) );
#20 57.76                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.76 silk/x86/NSQ_sse4_1.c:355:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.76     xmm_tempb = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[-12]) );
#20 57.76                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.76 silk/x86/NSQ_sse4_1.c:363:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.76     xmm_tempa = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -8 ]) );
#20 57.76                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.77 silk/x86/NSQ_sse4_1.c:364:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.77     xmm_tempb = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -4 ]) );
#20 57.77                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.77 silk/x86/NSQ_sse4_1.c:373:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.77     xmm_tempa = _mm_loadu_si128( (__m128i *)(&(NSQ->sAR2_Q14[ 0 ]) ) );
#20 57.77                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.77 silk/x86/NSQ_sse4_1.c:374:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.77     xmm_tempb = _mm_loadu_si128( (__m128i *)(&(NSQ->sAR2_Q14[ 4 ]) ) );
#20 57.77                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.77 silk/x86/NSQ_sse4_1.c:442:30: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.77                 b_Q14_3210 = OP_CVTEPI16_EPI32_M64( b_Q14 );
#20 57.77                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.77 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.77  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.77                                      ^~~~~~~~~~~~~~
#20 57.77 silk/x86/NSQ_sse4_1.c:446:54: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.78                 pred_lag_ptr_0123 = _mm_loadu_si128( (__m128i *)(&pred_lag_ptr[ -3 ] ) );
#20 57.78                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.78 silk/x86/NSQ_sse4_1.c:598:23: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.78     _mm_storeu_si128( (__m128i *)(&NSQ->sAR2_Q14[ 4 ]), xmm_tempa );
#20 57.78                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.78 silk/x86/NSQ_sse4_1.c:599:23: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.78     _mm_storeu_si128( (__m128i *)(&NSQ->sAR2_Q14[ 0 ]), xmm_tempb );
#20 57.78                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.79 silk/x86/NSQ_sse4_1.c:615:48: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.79             xmm_xq_Q14_3210 = _mm_loadu_si128( (__m128i *)(&(psLPC_Q14[ i + 0 ] ) ) );
#20 57.79                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.79 silk/x86/NSQ_sse4_1.c:616:48: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.79             xmm_xq_Q14_7654 = _mm_loadu_si128( (__m128i *)(&(psLPC_Q14[ i + 4 ] ) ) );
#20 57.79                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.79 silk/x86/NSQ_sse4_1.c:647:31: warning: cast from 'opus_int16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.79             _mm_storeu_si128( (__m128i *)(&xq[ i ] ), xmm_xq_Q14_3210 );
#20 57.79                               ^~~~~~~~~~~~~~~~~~~~~~
#20 57.80 silk/x86/NSQ_sse4_1.c:688:24: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.80         xmm_x16_x2x0 = OP_CVTEPI16_EPI32_M64( &(x16[ i ] ) );
#20 57.80                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.80 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.80  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.80                                      ^~~~~~~~~~~~~~
#20 57.80 silk/x86/NSQ_sse4_1.c:701:27: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.80         _mm_storeu_si128( (__m128i *)(&(x_sc_Q10[ i ] ) ), xmm_x16_x2x0 );
#20 57.80                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.80 silk/x86/NSQ_sse4_1.c:732:54: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.81             xmm_sLTP_shp_Q14_x2x0 = _mm_loadu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ) );
#20 57.81                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.81 silk/x86/NSQ_sse4_1.c:744:31: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.81             _mm_storeu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ), xmm_sLTP_shp_Q14_x2x0 );
#20 57.81                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.82   CC       silk/fixed/x86/burg_modified_FIX_sse4_1.lo
#20 57.84 silk/x86/NSQ_del_dec_sse4_1.c:408:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.84     a_Q12_0123 = OP_CVTEPI16_EPI32_M64( a_Q12 );
#20 57.84                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.84 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.84  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.84                                      ^~~~~~~~~~~~~~
#20 57.84 silk/x86/NSQ_del_dec_sse4_1.c:409:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.84     a_Q12_4567 = OP_CVTEPI16_EPI32_M64( a_Q12 + 4 );
#20 57.84                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.84 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.84  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.84                                      ^~~~~~~~~~~~~~
#20 57.84 silk/x86/NSQ_del_dec_sse4_1.c:412:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.84         a_Q12_89AB = OP_CVTEPI16_EPI32_M64( a_Q12 + 8 );
#20 57.84                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.84 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.84  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.84                                      ^~~~~~~~~~~~~~
#20 57.84 silk/x86/NSQ_del_dec_sse4_1.c:413:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.84         a_Q12_CDEF = OP_CVTEPI16_EPI32_M64( a_Q12 + 12 );
#20 57.84                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.84 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.84  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.84                                      ^~~~~~~~~~~~~~
#20 57.84 silk/x86/NSQ_del_dec_sse4_1.c:417:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.84         b_Q12_0123 = OP_CVTEPI16_EPI32_M64( b_Q14 );
#20 57.84                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.85 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.85  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.85                                      ^~~~~~~~~~~~~~
#20 57.85 silk/x86/NSQ_del_dec_sse4_1.c:430:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.85                 pred_lag_ptr_tmp    = _mm_loadu_si128( (__m128i *)(&pred_lag_ptr[ -3 ] ) );
#20 57.85                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.85 silk/x86/NSQ_del_dec_sse4_1.c:485:52: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.85                 psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -3 ] ) ); /* -3, -2 , -1, 0 */
#20 57.85                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.85 silk/x86/NSQ_del_dec_sse4_1.c:499:52: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.85                 psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -7 ] ) );
#20 57.85                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.85 silk/x86/NSQ_del_dec_sse4_1.c:514:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.85                     psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -11 ] ) );
#20 57.85                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.86 silk/x86/NSQ_del_dec_sse4_1.c:527:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.86                     psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -15 ] ) );
#20 57.86                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.87 silk/x86/NSQ_del_dec_sse4_1.c:819:24: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.87         xmm_x16_x2x0 = OP_CVTEPI16_EPI32_M64( &(x16[ i ] ) );
#20 57.87                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.87 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.87  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.87                                      ^~~~~~~~~~~~~~
#20 57.87 silk/x86/NSQ_del_dec_sse4_1.c:832:27: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.87         _mm_storeu_si128( (__m128i *)(&(x_sc_Q10[ i ] ) ), xmm_x16_x2x0 );
#20 57.87                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.88 silk/x86/NSQ_del_dec_sse4_1.c:864:58: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.88                 xmm_sLTP_shp_Q14_x2x0 = _mm_loadu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ) );
#20 57.88                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.88 silk/x86/NSQ_del_dec_sse4_1.c:876:35: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.88                 _mm_storeu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ), xmm_sLTP_shp_Q14_x2x0 );
#20 57.88                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.93 silk/x86/VAD_sse4_1.c:147:44: warning: cast from 'opus_int16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.93                 xmm_X   = _mm_loadu_si128( (__m128i *)&(X[ X_offset[ b ] + i + dec_subframe_offset ] ) );
#20 57.93                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.95   CCLD     celt/tests/test_unit_cwrs32
#20 57.96 silk/x86/VQ_WMat_EC_sse4_1.c:68:36: warning: cast from 'const opus_int32 *' (aka 'const int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.96     v_XX_31_Q17 = _mm_loadu_si128( (__m128i *)(&XX_Q17[ 1 ] ) );
#20 57.96                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.97 silk/x86/VQ_WMat_EC_sse4_1.c:88:26: warning: cast from 'const opus_int8 *' (aka 'const signed char *') to 'int *' increases required alignment from 1 to 4 [-Wcast-align]
#20 57.97         v_cb_row_31_Q7 = OP_CVTEPI8_EPI32_M32( &cb_row_Q7[ 1 ] );
#20 57.97                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.97 ./celt/x86/x86cpu.h:60:40: note: expanded from macro 'OP_CVTEPI8_EPI32_M32'
#20 57.97  (_mm_cvtepi8_epi32(_mm_cvtsi32_si128(*(int *)(x))))
#20 57.97                                        ^~~~~~~~~~
#20 58.00 silk/fixed/x86/vector_ops_FIX_sse4_1.c:60:23: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.00         inVec1_3210 = OP_CVTEPI16_EPI32_M64( &inVec1[i + 0] );
#20 58.00                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.00 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 58.00  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 58.00                                      ^~~~~~~~~~~~~~
#20 58.00 silk/fixed/x86/vector_ops_FIX_sse4_1.c:61:23: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.00         inVec2_3210 = OP_CVTEPI16_EPI32_M64( &inVec2[i + 0] );
#20 58.00                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.00 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 58.00  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 58.00                                      ^~~~~~~~~~~~~~
#20 58.00 silk/fixed/x86/vector_ops_FIX_sse4_1.c:78:23: warning: cast from 'opus_int64 *' (aka 'long *') to '__m128i *' increases required alignment from 8 to 16 [-Wcast-align]
#20 58.00     _mm_storel_epi64( (__m128i *)&sum, acc1 );
#20 58.00                       ^~~~~~~~~~~~~~~
#20 58.04 2 warnings generated.
#20 58.05 3 warnings generated.
#20 58.06   CCLD     celt/tests/test_unit_dft
#20 58.07   CCLD     celt/tests/test_unit_entropy
#20 58.21 silk/fixed/x86/burg_modified_FIX_sse4_1.c:163:34: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.21                     PTR_3210   = OP_CVTEPI16_EPI32_M64( &x_ptr[ n - k - 1 - 3 ] );
#20 58.21                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.21 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 58.21  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 58.21                                      ^~~~~~~~~~~~~~
#20 58.21 silk/fixed/x86/burg_modified_FIX_sse4_1.c:164:34: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.21                     SUBFR_3210 = OP_CVTEPI16_EPI32_M64( &x_ptr[ subfr_length - n + k ] );
#20 58.21                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.21 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 58.21  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 58.21                                      ^~~~~~~~~~~~~~
#20 58.21 silk/fixed/x86/burg_modified_FIX_sse4_1.c:165:51: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.22                     FIRST_3210 = _mm_loadu_si128( (__m128i *)&C_first_row[ k ] );
#20 58.22                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.22 silk/fixed/x86/burg_modified_FIX_sse4_1.c:167:51: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.22                     LAST_3210  = _mm_loadu_si128( (__m128i *)&C_last_row[ k ] );
#20 58.22                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.22 silk/fixed/x86/burg_modified_FIX_sse4_1.c:168:51: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.22                     ATMP_3210  = _mm_loadu_si128( (__m128i *)&Af_QA[ k ] );
#20 58.22                                                   ^~~~~~~~~~~~~~~~~~~~~~
#20 58.22 silk/fixed/x86/burg_modified_FIX_sse4_1.c:183:39: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.22                     _mm_storeu_si128( (__m128i *)&C_first_row[ k ], FIRST_3210 );
#20 58.22                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.22 silk/fixed/x86/burg_modified_FIX_sse4_1.c:184:39: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.22                     _mm_storeu_si128( (__m128i *)&C_last_row[ k ], LAST_3210 );
#20 58.22                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.23 silk/fixed/x86/burg_modified_FIX_sse4_1.c:221:46: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.23                         xmm_x_ptr_n_k_x2x0 = OP_CVTEPI16_EPI32_M64( &x_ptr[ n - k - 3 ] );
#20 58.23                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.23 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 58.23  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 58.23                                      ^~~~~~~~~~~~~~
#20 58.23 silk/fixed/x86/burg_modified_FIX_sse4_1.c:222:46: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.23                         xmm_x_ptr_sub_x2x0 = OP_CVTEPI16_EPI32_M64( &x_ptr[ subfr_length - n + k - 1 ] );
#20 58.23                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.23 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 58.23  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 58.23                                      ^~~~~~~~~~~~~~
#20 58.23 silk/fixed/x86/burg_modified_FIX_sse4_1.c:246:53: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.23                         X1_3210  = _mm_loadu_si128( (__m128i *)&CAf[ k ] );
#20 58.23                                                     ^~~~~~~~~~~~~~~~~~~~
#20 58.23 silk/fixed/x86/burg_modified_FIX_sse4_1.c:247:53: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.23                         PTR_3210 = _mm_loadu_si128( (__m128i *)&CAb[ k ] );
#20 58.23                                                     ^~~~~~~~~~~~~~~~~~~~
#20 58.23 silk/fixed/x86/burg_modified_FIX_sse4_1.c:252:43: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.23                         _mm_storeu_si128( (__m128i *)&CAf[ k ], X1_3210 );
#20 58.23                                           ^~~~~~~~~~~~~~~~~~~~
#20 58.23 silk/fixed/x86/burg_modified_FIX_sse4_1.c:253:43: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.23                         _mm_storeu_si128( (__m128i *)&CAb[ k ], PTR_3210 );
#20 58.23                                           ^~~~~~~~~~~~~~~~~~~~
#20 58.31   CCLD     celt/tests/test_unit_laplace
#20 58.32   CCLD     celt/tests/test_unit_mathops
#20 58.33 1 warning generated.
#20 58.35   CCLD     celt/tests/test_unit_mdct
#20 58.38 20 warnings generated.
#20 58.40   CCLD     celt/tests/test_unit_rotation
#20 58.44   CCLD     celt/tests/test_unit_types
#20 58.63 14 warnings generated.
#20 58.82 13 warnings generated.
#20 58.84   CCLD     libopus.la
#20 58.84   CCLD     silk/tests/test_unit_LPC_inv_pred_gain
#20 58.84   CCLD     tests/test_opus_projection
#20 59.27   CCLD     repacketizer_demo
#20 59.27   CCLD     opus_demo
#20 59.27   CCLD     tests/test_opus_api
#20 59.27   CCLD     tests/test_opus_decode
#20 59.27   CCLD     tests/test_opus_encode
#20 59.27   CCLD     tests/test_opus_padding
#20 59.30   CCLD     trivial_example
#20 59.75 make[2]: Leaving directory '/src/opus'
#20 59.75 make[1]: Leaving directory '/src/opus'
#20 59.75 + for fuzzer in $FUZZERS
#20 59.75 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -Iinclude tests/opus_decode_fuzzer.c -o opus_decode_fuzzer.o
#20 59.81 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard opus_decode_fuzzer.o -o /out/opus_decode_fuzzer_fixed /libAFL.a .libs/libopus.a
#20 60.08 + '[' -f tests/opus_decode_fuzzer.options ']'
#20 60.08 + cp tests/opus_decode_fuzzer.options /out/opus_decode_fuzzer_fixed.options
#20 60.08 + zip -r /out/opus_decode_fuzzer_fixed_seed_corpus.zip opus_testvectors/
#20 60.08   adding: opus_testvectors/ (stored 0%)
#20 60.08   adding: opus_testvectors/testvector03.bit (deflated 2%)
#20 60.09   adding: opus_testvectors/testvector01.bit (deflated 15%)
#20 60.12   adding: opus_testvectors/testvector07.bit (deflated 4%)
#20 60.13   adding: opus_testvectors/testvector02.bit (deflated 3%)
#20 60.14   adding: opus_testvectors/testvector12.bit (deflated 4%)
#20 60.14   adding: opus_testvectors/testvector03.dec (deflated 48%)
#20 60.39   adding: opus_testvectors/testvector06.dec (deflated 45%)
#20 60.69   adding: opus_testvectors/testvector11.dec (deflated 7%)
#20 60.97   adding: opus_testvectors/testvector11.bit (deflated 0%)
#20 60.98   adding: opus_testvectors/testvector06.bit (deflated 3%)
#20 60.99   adding: opus_testvectors/testvector08.dec (deflated 38%)
#20 61.32   adding: opus_testvectors/testvector02.dec (deflated 50%)
#20 61.59   adding: opus_testvectors/testvector01.dec (deflated 29%)
#20 61.99   adding: opus_testvectors/testvector05.bit (deflated 3%)
#20 62.00   adding: opus_testvectors/testvector08.bit (deflated 1%)
#20 62.01   adding: opus_testvectors/testvector09.bit (deflated 11%)
#20 62.04   adding: opus_testvectors/testvector10.dec (deflated 49%)
#20 62.34   adding: opus_testvectors/testvector07.dec (deflated 44%)
#20 62.60   adding: opus_testvectors/testvector04.dec (deflated 49%)
#20 62.91   adding: opus_testvectors/testvector09.dec (deflated 43%)
#20 63.24   adding: opus_testvectors/testvector05.dec (deflated 47%)
#20 63.57   adding: opus_testvectors/testvector12.dec (deflated 61%)
#20 63.87   adding: opus_testvectors/testvector10.bit (deflated 9%)
#20 63.90   adding: opus_testvectors/testvector04.bit (deflated 3%)
#20 63.91 + for fuzzer in $FUZZERS
#20 63.91 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -Iinclude tests/opus_multi_fuzzer.c -o opus_multi_fuzzer.o
#20 63.98 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard opus_multi_fuzzer.o -o /out/opus_multi_fuzzer_fixed /libAFL.a .libs/libopus.a
#20 64.26 + '[' -f tests/opus_multi_fuzzer.options ']'
#20 64.26 + zip -r /out/opus_multi_fuzzer_fixed_seed_corpus.zip opus_testvectors/
#20 64.26   adding: opus_testvectors/ (stored 0%)
#20 64.26   adding: opus_testvectors/testvector03.bit (deflated 2%)
#20 64.27   adding: opus_testvectors/testvector01.bit (deflated 15%)
#20 64.31   adding: opus_testvectors/testvector07.bit (deflated 4%)
#20 64.32   adding: opus_testvectors/testvector02.bit (deflated 3%)
#20 64.32   adding: opus_testvectors/testvector12.bit (deflated 4%)
#20 64.33   adding: opus_testvectors/testvector03.dec (deflated 48%)
#20 64.58   adding: opus_testvectors/testvector06.dec (deflated 45%)
#20 64.89   adding: opus_testvectors/testvector11.dec (deflated 7%)
#20 65.17   adding: opus_testvectors/testvector11.bit (deflated 0%)
#20 65.19   adding: opus_testvectors/testvector06.bit (deflated 3%)
#20 65.19   adding: opus_testvectors/testvector08.dec (deflated 38%)
#20 65.53   adding: opus_testvectors/testvector02.dec (deflated 50%)
#20 65.80   adding: opus_testvectors/testvector01.dec (deflated 29%)
#20 66.21   adding: opus_testvectors/testvector05.bit (deflated 3%)
#20 66.22   adding: opus_testvectors/testvector08.bit (deflated 1%)
#20 66.23   adding: opus_testvectors/testvector09.bit (deflated 11%)
#20 66.26   adding: opus_testvectors/testvector10.dec (deflated 49%)
#20 66.57   adding: opus_testvectors/testvector07.dec (deflated 44%)
#20 66.83   adding: opus_testvectors/testvector04.dec (deflated 49%)
#20 67.15   adding: opus_testvectors/testvector09.dec (deflated 43%)
#20 67.48   adding: opus_testvectors/testvector05.dec (deflated 47%)
#20 67.82   adding: opus_testvectors/testvector12.dec (deflated 61%)
#20 68.13   adding: opus_testvectors/testvector10.bit (deflated 9%)
#20 68.17   adding: opus_testvectors/testvector04.bit (deflated 3%)
#20 68.17 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 68.9s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:624aa1271206592d671a4c549846b161478d2a1d9520469b58497a03a180feb8 done
#21 naming to gcr.io/fuzzbench/builders/afl/opus_opus_multistream_encode_fuzzer
#21 naming to gcr.io/fuzzbench/builders/afl/opus_opus_multistream_encode_fuzzer done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus_multistream_encode_fuzzer:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:574607447ce42ffe60a8e0da8724a143542cad2473a2b138e2215d2376638703
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:992490b439dcf5270a1d25302dada18d7813b3a923e48f0bbec9c58914b79649
#2 transferring context:
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus_multistream_encode_fuzzer-intermediate
#5 sha256:8e3423e555dc87677d5553dd46e38291b7688013b9910d62736d9b0c9e7ef266
#5 ERROR: gcr.io/fuzzbench/runners/afl/opus_opus_multistream_encode_fuzzer-intermediate:latest: not found

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:a75bb0b8a3d6ff10c4e4f0b01262d9c6b8d28fb7a48062d52ee04e8302c3dcb7 done
#6 naming to gcr.io/fuzzbench/runners/afl/opus_opus_multistream_encode_fuzzer-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus_multistream_encode_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:231115511bdf571e3d8a6106badb4e479eb8eed2bb962590ece4f382d8f8b919
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:cc0f8c74f4a7f4cbaf9288b6bda534c2ab18093e331868c811fd004f7bd6a0be
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/opus_opus_multistream_encode_fuzzer-intermediate:latest
#3 sha256:ca37b5ca483a3d2d4b1a8d65f6576c780afeaf9c907f1519885706ec82a24979
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/opus_opus_multistream_encode_fuzzer:latest
#4 sha256:6f511b284f689ec42785bc7a43e9d710b066cb56798d6e986a186e5db9e5244a
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:04fc1e42f5db041fe756c780482a13aeffd9e77965d8294e8f1e5796a87f4b08
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/opus_opus_multistream_encode_fuzzer-intermediate
#6 sha256:2ae1d280f5e80669f5be4f0bd6cfee9052e7f0f39e7d9dba865dcb9fd5881dd1
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/opus_opus_multistream_encode_fuzzer
#10 sha256:980ec59c4f3cfd5b6f16cd77f9857532a4dc777c46449179fae53644da041556
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus_multistream_encode_fuzzer
#5 sha256:8ad0692e5a35a0658b47981924899dfddb1a2f0f3bf569e8f00aa08537616784
#5 ERROR: gcr.io/fuzzbench/runners/afl/opus_opus_multistream_encode_fuzzer:latest: not found

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/opus_opus_multistream_encode_fuzzer-intermediate
#6 sha256:2ae1d280f5e80669f5be4f0bd6cfee9052e7f0f39e7d9dba865dcb9fd5881dd1
#6 CACHED

#12 [internal] load build context
#12 sha256:04fc1e42f5db041fe756c780482a13aeffd9e77965d8294e8f1e5796a87f4b08
#12 transferring context: 9.05MB 0.2s done
#12 DONE 0.2s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:a5650409f1c0a1f6282e2c61c7d204fcd962ada454a645bcdf5c463712f0fd88
#7 ...

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/opus_opus_multistream_encode_fuzzer
#10 sha256:980ec59c4f3cfd5b6f16cd77f9857532a4dc777c46449179fae53644da041556
#10 DONE 0.6s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:a5650409f1c0a1f6282e2c61c7d204fcd962ada454a645bcdf5c463712f0fd88
#7 0.538 Hit:1 http://archive.ubuntu.com/ubuntu xenial InRelease
#7 0.538 Get:2 http://security.ubuntu.com/ubuntu xenial-security InRelease [99.8 kB]
#7 0.545 Get:3 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [99.8 kB]
#7 0.642 Get:4 http://archive.ubuntu.com/ubuntu xenial-backports InRelease [97.4 kB]
#7 1.204 Hit:5 https://packages.cloud.google.com/apt cloud-sdk-xenial InRelease
#7 1.296 Fetched 297 kB in 0s (356 kB/s)
#7 1.296 Reading package lists...
#7 2.840 Reading package lists...
#7 4.197 Building dependency tree...
#7 4.358 Reading state information...
#7 4.489 The following additional packages will be installed:
#7 4.489   libglib2.0-data libgmp-dev libgmpxx4ldbl libgnutls-dev libgnutls-openssl27
#7 4.489   libgnutls28-dev libgnutlsxx28 libicu55 libidn11-dev liblzo2-2 libp11-kit-dev
#7 4.489   libshishi-dev libshishi0 libtasn1-6-dev libtasn1-doc nettle-dev pkg-config
#7 4.489   sgml-base shared-mime-info shishi-common xdg-user-dirs xml-core
#7 4.491 Suggested packages:
#7 4.491   lrzip gmp-doc libgmp10-doc libmpfr-dev gnutls-doc gnutls-bin guile-gnutls
#7 4.491   shishi sgml-base-doc debhelper
#7 4.492 The following NEW packages will be installed:
#7 4.492   libarchive13 libglib2.0-0 libglib2.0-data libgmp-dev libgmpxx4ldbl
#7 4.492   libgnutls-dev libgnutls-openssl27 libgnutls28-dev libgnutlsxx28 libgss3
#7 4.492   libicu55 libidn11-dev liblzo2-2 libp11-kit-dev libshishi-dev libshishi0
#7 4.493   libtasn1-6-dev libtasn1-doc libxml2 nettle-dev pkg-config sgml-base
#7 4.493   shared-mime-info shishi-common xdg-user-dirs xml-core
#7 4.718 0 upgraded, 26 newly installed, 0 to remove and 0 not upgraded.
#7 4.718 Need to get 13.7 MB of archives.
#7 4.718 After this operation, 52.9 MB of additional disk space will be used.
#7 4.718 Get:1 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libglib2.0-0 amd64 2.48.2-0ubuntu4.8 [1120 kB]
#7 4.942 Get:2 http://archive.ubuntu.com/ubuntu xenial/main amd64 sgml-base all 1.26+nmu4ubuntu1 [12.5 kB]
#7 4.943 Get:3 http://archive.ubuntu.com/ubuntu xenial/main amd64 liblzo2-2 amd64 2.08-1.2 [48.7 kB]
#7 4.946 Get:4 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libgnutls-openssl27 amd64 3.4.10-4ubuntu1.9 [21.9 kB]
#7 4.948 Get:5 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libglib2.0-data all 2.48.2-0ubuntu4.8 [131 kB]
#7 4.958 Get:6 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libicu55 amd64 55.1-7ubuntu0.5 [7650 kB]
#7 5.626 Get:7 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libxml2 amd64 2.9.3+dfsg1-1ubuntu0.7 [698 kB]
#7 5.684 Get:8 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 shared-mime-info amd64 1.5-2ubuntu0.2 [405 kB]
#7 5.715 Get:9 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 xdg-user-dirs amd64 0.15-2ubuntu6.16.04.1 [61.8 kB]
#7 5.719 Get:10 http://archive.ubuntu.com/ubuntu xenial/main amd64 xml-core all 0.13+nmu2 [23.3 kB]
#7 5.721 Get:11 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libarchive13 amd64 3.1.2-11ubuntu0.16.04.8 [262 kB]
#7 5.741 Get:12 http://archive.ubuntu.com/ubuntu xenial/main amd64 libgmpxx4ldbl amd64 2:6.1.0+dfsg-2 [8948 B]
#7 5.741 Get:13 http://archive.ubuntu.com/ubuntu xenial/main amd64 libgmp-dev amd64 2:6.1.0+dfsg-2 [314 kB]
#7 5.765 Get:14 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libgnutlsxx28 amd64 3.4.10-4ubuntu1.9 [13.8 kB]
#7 5.766 Get:15 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 nettle-dev amd64 3.2-1ubuntu0.16.04.2 [938 kB]
#7 5.836 Get:16 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libtasn1-6-dev amd64 4.7-3ubuntu0.16.04.3 [85.9 kB]
#7 5.842 Get:17 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libp11-kit-dev amd64 0.23.2-5~ubuntu16.04.2 [56.6 kB]
#7 5.846 Get:18 http://archive.ubuntu.com/ubuntu xenial/main amd64 pkg-config amd64 0.29.1-0ubuntu1 [45.0 kB]
#7 5.850 Get:19 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libidn11-dev amd64 1.32-3ubuntu1.2 [518 kB]
#7 5.888 Get:20 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libgnutls-dev amd64 3.4.10-4ubuntu1.9 [553 kB]
#7 5.929 Get:21 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libgnutls28-dev amd64 3.4.10-4ubuntu1.9 [8156 B]
#7 5.930 Get:22 http://archive.ubuntu.com/ubuntu xenial/universe amd64 shishi-common all 1.0.2-6build1 [60.6 kB]
#7 5.935 Get:23 http://archive.ubuntu.com/ubuntu xenial/universe amd64 libshishi0 amd64 1.0.2-6build1 [159 kB]
#7 5.947 Get:24 http://archive.ubuntu.com/ubuntu xenial/universe amd64 libshishi-dev amd64 1.0.2-6build1 [157 kB]
#7 5.958 Get:25 http://archive.ubuntu.com/ubuntu xenial/universe amd64 libgss3 amd64 1.0.3-2 [65.2 kB]
#7 5.963 Get:26 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libtasn1-doc all 4.7-3ubuntu0.16.04.3 [299 kB]
#7 6.115 debconf: delaying package configuration, since apt-utils is not installed
#7 6.152 Fetched 13.7 MB in 1s (10.4 MB/s)
#7 6.197 Selecting previously unselected package libglib2.0-0:amd64.
#7 6.197 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 51525 files and directories currently installed.)
#7 6.228 Preparing to unpack .../libglib2.0-0_2.48.2-0ubuntu4.8_amd64.deb ...
#7 6.236 Unpacking libglib2.0-0:amd64 (2.48.2-0ubuntu4.8) ...
#7 6.406 Selecting previously unselected package sgml-base.
#7 6.411 Preparing to unpack .../sgml-base_1.26+nmu4ubuntu1_all.deb ...
#7 6.424 Unpacking sgml-base (1.26+nmu4ubuntu1) ...
#7 6.486 Selecting previously unselected package liblzo2-2:amd64.
#7 6.490 Preparing to unpack .../liblzo2-2_2.08-1.2_amd64.deb ...
#7 6.496 Unpacking liblzo2-2:amd64 (2.08-1.2) ...
#7 6.552 Selecting previously unselected package libgnutls-openssl27:amd64.
#7 6.557 Preparing to unpack .../libgnutls-openssl27_3.4.10-4ubuntu1.9_amd64.deb ...
#7 6.563 Unpacking libgnutls-openssl27:amd64 (3.4.10-4ubuntu1.9) ...
#7 6.603 Selecting previously unselected package libglib2.0-data.
#7 6.608 Preparing to unpack .../libglib2.0-data_2.48.2-0ubuntu4.8_all.deb ...
#7 6.612 Unpacking libglib2.0-data (2.48.2-0ubuntu4.8) ...
#7 6.658 Selecting previously unselected package libicu55:amd64.
#7 6.663 Preparing to unpack .../libicu55_55.1-7ubuntu0.5_amd64.deb ...
#7 6.666 Unpacking libicu55:amd64 (55.1-7ubuntu0.5) ...
#7 7.512 Selecting previously unselected package libxml2:amd64.
#7 7.517 Preparing to unpack .../libxml2_2.9.3+dfsg1-1ubuntu0.7_amd64.deb ...
#7 7.522 Unpacking libxml2:amd64 (2.9.3+dfsg1-1ubuntu0.7) ...
#7 7.646 Selecting previously unselected package shared-mime-info.
#7 7.651 Preparing to unpack .../shared-mime-info_1.5-2ubuntu0.2_amd64.deb ...
#7 7.657 Unpacking shared-mime-info (1.5-2ubuntu0.2) ...
#7 7.744 Selecting previously unselected package xdg-user-dirs.
#7 7.749 Preparing to unpack .../xdg-user-dirs_0.15-2ubuntu6.16.04.1_amd64.deb ...
#7 7.753 Unpacking xdg-user-dirs (0.15-2ubuntu6.16.04.1) ...
#7 7.873 Selecting previously unselected package xml-core.
#7 7.878 Preparing to unpack .../xml-core_0.13+nmu2_all.deb ...
#7 7.886 Unpacking xml-core (0.13+nmu2) ...
#7 7.943 Selecting previously unselected package libarchive13:amd64.
#7 7.948 Preparing to unpack .../libarchive13_3.1.2-11ubuntu0.16.04.8_amd64.deb ...
#7 7.953 Unpacking libarchive13:amd64 (3.1.2-11ubuntu0.16.04.8) ...
#7 8.034 Selecting previously unselected package libgmpxx4ldbl:amd64.
#7 8.039 Preparing to unpack .../libgmpxx4ldbl_2%3a6.1.0+dfsg-2_amd64.deb ...
#7 8.044 Unpacking libgmpxx4ldbl:amd64 (2:6.1.0+dfsg-2) ...
#7 8.086 Selecting previously unselected package libgmp-dev:amd64.
#7 8.090 Preparing to unpack .../libgmp-dev_2%3a6.1.0+dfsg-2_amd64.deb ...
#7 8.096 Unpacking libgmp-dev:amd64 (2:6.1.0+dfsg-2) ...
#7 8.178 Selecting previously unselected package libgnutlsxx28:amd64.
#7 8.182 Preparing to unpack .../libgnutlsxx28_3.4.10-4ubuntu1.9_amd64.deb ...
#7 8.188 Unpacking libgnutlsxx28:amd64 (3.4.10-4ubuntu1.9) ...
#7 8.229 Selecting previously unselected package nettle-dev.
#7 8.233 Preparing to unpack .../nettle-dev_3.2-1ubuntu0.16.04.2_amd64.deb ...
#7 8.237 Unpacking nettle-dev (3.2-1ubuntu0.16.04.2) ...
#7 8.381 Selecting previously unselected package libtasn1-6-dev:amd64.
#7 8.385 Preparing to unpack .../libtasn1-6-dev_4.7-3ubuntu0.16.04.3_amd64.deb ...
#7 8.391 Unpacking libtasn1-6-dev:amd64 (4.7-3ubuntu0.16.04.3) ...
#7 8.451 Selecting previously unselected package libp11-kit-dev:amd64.
#7 8.456 Preparing to unpack .../libp11-kit-dev_0.23.2-5~ubuntu16.04.2_amd64.deb ...
#7 8.461 Unpacking libp11-kit-dev:amd64 (0.23.2-5~ubuntu16.04.2) ...
#7 8.526 Selecting previously unselected package pkg-config.
#7 8.531 Preparing to unpack .../pkg-config_0.29.1-0ubuntu1_amd64.deb ...
#7 8.536 Unpacking pkg-config (0.29.1-0ubuntu1) ...
#7 8.581 Selecting previously unselected package libidn11-dev.
#7 8.586 Preparing to unpack .../libidn11-dev_1.32-3ubuntu1.2_amd64.deb ...
#7 8.590 Unpacking libidn11-dev (1.32-3ubuntu1.2) ...
#7 8.663 Selecting previously unselected package libgnutls-dev:amd64.
#7 8.667 Preparing to unpack .../libgnutls-dev_3.4.10-4ubuntu1.9_amd64.deb ...
#7 8.673 Unpacking libgnutls-dev:amd64 (3.4.10-4ubuntu1.9) ...
#7 8.777 Selecting previously unselected package libgnutls28-dev:amd64.
#7 8.782 Preparing to unpack .../libgnutls28-dev_3.4.10-4ubuntu1.9_amd64.deb ...
#7 8.787 Unpacking libgnutls28-dev:amd64 (3.4.10-4ubuntu1.9) ...
#7 8.829 Selecting previously unselected package shishi-common.
#7 8.834 Preparing to unpack .../shishi-common_1.0.2-6build1_all.deb ...
#7 8.838 Unpacking shishi-common (1.0.2-6build1) ...
#7 8.893 Selecting previously unselected package libshishi0.
#7 8.898 Preparing to unpack .../libshishi0_1.0.2-6build1_amd64.deb ...
#7 8.902 Unpacking libshishi0 (1.0.2-6build1) ...
#7 8.962 Selecting previously unselected package libshishi-dev.
#7 8.966 Preparing to unpack .../libshishi-dev_1.0.2-6build1_amd64.deb ...
#7 8.972 Unpacking libshishi-dev (1.0.2-6build1) ...
#7 9.036 Selecting previously unselected package libgss3.
#7 9.041 Preparing to unpack .../libgss3_1.0.3-2_amd64.deb ...
#7 9.045 Unpacking libgss3 (1.0.3-2) ...
#7 9.099 Selecting previously unselected package libtasn1-doc.
#7 9.104 Preparing to unpack .../libtasn1-doc_4.7-3ubuntu0.16.04.3_all.deb ...
#7 9.110 Unpacking libtasn1-doc (4.7-3ubuntu0.16.04.3) ...
#7 9.162 Processing triggers for libc-bin (2.23-0ubuntu11.3) ...
#7 9.276 Setting up libglib2.0-0:amd64 (2.48.2-0ubuntu4.8) ...
#7 9.295 No schema files found: doing nothing.
#7 9.303 Setting up sgml-base (1.26+nmu4ubuntu1) ...
#7 9.362 Setting up liblzo2-2:amd64 (2.08-1.2) ...
#7 9.387 Setting up libgnutls-openssl27:amd64 (3.4.10-4ubuntu1.9) ...
#7 9.406 Setting up libglib2.0-data (2.48.2-0ubuntu4.8) ...
#7 9.422 Setting up libicu55:amd64 (55.1-7ubuntu0.5) ...
#7 9.438 Setting up libxml2:amd64 (2.9.3+dfsg1-1ubuntu0.7) ...
#7 9.454 Setting up shared-mime-info (1.5-2ubuntu0.2) ...
#7 11.70 Setting up xdg-user-dirs (0.15-2ubuntu6.16.04.1) ...
#7 11.73 Setting up xml-core (0.13+nmu2) ...
#7 12.06 Setting up libarchive13:amd64 (3.1.2-11ubuntu0.16.04.8) ...
#7 12.08 Setting up libgmpxx4ldbl:amd64 (2:6.1.0+dfsg-2) ...
#7 12.10 Setting up libgmp-dev:amd64 (2:6.1.0+dfsg-2) ...
#7 12.11 Setting up libgnutlsxx28:amd64 (3.4.10-4ubuntu1.9) ...
#7 12.14 Setting up nettle-dev (3.2-1ubuntu0.16.04.2) ...
#7 12.16 Setting up libtasn1-6-dev:amd64 (4.7-3ubuntu0.16.04.3) ...
#7 12.19 Setting up libp11-kit-dev:amd64 (0.23.2-5~ubuntu16.04.2) ...
#7 12.21 Setting up pkg-config (0.29.1-0ubuntu1) ...
#7 12.29 Setting up libidn11-dev (1.32-3ubuntu1.2) ...
#7 12.32 Setting up libgnutls-dev:amd64 (3.4.10-4ubuntu1.9) ...
#7 12.35 Setting up libgnutls28-dev:amd64 (3.4.10-4ubuntu1.9) ...
#7 12.37 Setting up shishi-common (1.0.2-6build1) ...
#7 12.43 Setting up libshishi0 (1.0.2-6build1) ...
#7 12.45 Setting up libshishi-dev (1.0.2-6build1) ...
#7 12.47 Setting up libgss3 (1.0.3-2) ...
#7 12.51 Setting up libtasn1-doc (4.7-3ubuntu0.16.04.3) ...
#7 12.53 Processing triggers for libc-bin (2.23-0ubuntu11.3) ...
#7 12.57 Processing triggers for sgml-base (1.26+nmu4ubuntu1) ...
#7 DONE 13.3s

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:4a53154ea777e200a0aac9c0674707ab1410ed41592b0680b4e50f3ea8e6e009
#8 DONE 0.6s

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:03d286bc2d1997b52acdafd1ce22c7a77f0b4d16b599fb98811a79bd28912d59
#9 DONE 0.1s

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:8f82aae15d96c4677539ad12ffbbb74fea8515c91699b8adbe6e91735a23e564
#11 DONE 1.0s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:c91cc3fe51c952b5b9cb7eb5123e293ddae1e9a7b5f4b530962b1a8b032aca88
#13 DONE 0.4s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:8f260f0dd763cdedc0ec439f2585140db7b2c151881764b223ed49adbe9d0015
#14 DONE 0.3s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:0b77ecbdeae817226583e87731a2caa1fd751a83162f76d181619bd12e165e60
#15 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:b6c65d40abeb5910f33cb8a8aec6c8c3fd87a3ff2ca218b6185f2b9d5b7b905b
#16 DONE 0.7s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:9233f84d53cb8ad2918a9f5a73b9991bf98881b70422c54d35f8b3b0b03d44e0
#17 DONE 0.2s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:539e9bb099ab89ec4cb2a80b43d26b5bba37001d03807e002043d628c1024e91
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:0d89c0b61496ed2aaac5e7e0542f8ba20d270dfe1b1eff616f0dc9cde6db9a37
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:5a7fbc5e20e9120fa977f14cb7a498f6b7e10a3e8e444d2143834eae202309d7
#20 DONE 0.4s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:d36fab827e1bc43d120d79d1c2c11b0b87fe93ff0e430fee74df363c57b6da19 done
#21 naming to gcr.io/fuzzbench/runners/afl/opus_opus_multistream_encode_fuzzer 0.0s done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus_multistream_encode_fuzzer:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7fa07c3cd790> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
