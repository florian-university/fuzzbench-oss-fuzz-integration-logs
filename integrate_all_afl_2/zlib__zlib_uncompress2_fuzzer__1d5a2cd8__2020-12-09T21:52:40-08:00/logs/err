WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: zlib_zlib_uncompress2_fuzzer.
INFO:root:Please run "make test-run-afl-zlib_zlib_uncompress2_fuzzer" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:322539efc95ff38217cf1bd83f9f9156f91dddbc43c7a98f5cf231b44711cca4
#1 transferring dockerfile: 925B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:69ee6efc3ee7521e1c02ed8ccafdbe8e17795bcdfa8d4c95cb3f00a6ee389d66
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#9 [internal] load build context
#9 sha256:76769bc5ea33babb1c0459514b7ca6486b73fa91aab5abc0d19bf4f2b826d7ae
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#5 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/zlib_zlib_uncompress2_fuzzer
#4 sha256:6d77e834d737aacd7a06e74605d8732b6da869d7b06e434dde9cfeaae219776f
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/zlib_zlib_uncompress2_fuzzer:latest: not found

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:425dc7a252565eeea60f3de4c59c779438ad25f6692cfd7941a8ec9fc7a73f78
#6 CACHED

#9 [internal] load build context
#9 sha256:76769bc5ea33babb1c0459514b7ca6486b73fa91aab5abc0d19bf4f2b826d7ae
#9 transferring context: 34.45kB done
#9 DONE 0.0s

#7 [3/5] RUN git clone --depth 1 -b develop https://github.com/madler/zlib.git
#7 sha256:2db80f1acb4ec415ea6aff45b9903fcdbf63fe7be6dd577e99489178db800722
#7 0.348 Cloning into 'zlib'...
#7 DONE 1.3s

#8 [4/5] WORKDIR zlib
#8 sha256:305dacf35f7191abfcbb2e67237640cbb20138484e70dff50d1fc662a0772ce2
#8 DONE 0.1s

#10 [5/5] COPY build.sh *_fuzzer.c* /src/
#10 sha256:ea7c1d58e553e6e334d2f5c02d0f260ac6d52cbec1bf259a95fa4defd92ce9a7
#10 DONE 0.1s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:385f0799292aa8bb79a294af498f9b511a0481156fdbfe0fed3de6035ff240e0
#11 writing image sha256:385f0799292aa8bb79a294af498f9b511a0481156fdbfe0fed3de6035ff240e0 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/zlib_zlib_uncompress2_fuzzer done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/zlib_zlib_uncompress2_fuzzer:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:41328ef35a16145bf9dfb352c622f5a692189091e9c0c2717b5e3d091646a77a
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:5f7fa101c4167c3a3c470037f89f8e0697af12a6113d12fd2e79d90697719ee0
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/zlib_zlib_uncompress2_fuzzer:latest
#3 sha256:d3913a2bead9026ca7b4977d204fec29a168c6c5a6c34489b2f247a87e78c935
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/zlib_zlib_uncompress2_fuzzer
#5 sha256:918847c76e96b3cdd32ea98b7eb5906a0e9d0510b6d22169de29c117a86e7fe8
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress2_fuzzer-intermediate
#4 sha256:e807008ad2a563955a1b74f6bb4590e83e56522e9a96296ca5a67c459df3c653
#4 ERROR: gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress2_fuzzer-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/zlib_zlib_uncompress2_fuzzer
#5 sha256:918847c76e96b3cdd32ea98b7eb5906a0e9d0510b6d22169de29c117a86e7fe8
#5 DONE 0.2s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:252555a745459f553164f85430af7cc7d6d3a8d8281122e2c515584d225d5559
#6 0.329 Cloning into '/afl'...
#6 1.025 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.025 
#6 1.025 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.025 changes and commit them, and you can discard any commits you make in this
#6 1.025 state without impacting any branches by switching back to a branch.
#6 1.025 
#6 1.025 If you want to create a new branch to retain commits you create, you may
#6 1.025 do so (now or later) by using -c with the switch command. Example:
#6 1.025 
#6 1.025   git switch -c <new-branch-name>
#6 1.025 
#6 1.025 Or undo this operation with:
#6 1.025 
#6 1.025   git switch -
#6 1.025 
#6 1.025 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.025 
#6 1.025 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.045 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.045 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.241 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.246 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.710 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.063 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.512 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.671 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.093 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.347 ln -sf afl-as as
#6 5.349 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.352 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.353 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 5.5s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:760ca547bec664e5628fc79a8987621724eb2c815828611b0cc69c05ba8f6c18
#7 0.777 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.891 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.916 Hit:3 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 0.987 Hit:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 1.083 Hit:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 1.650 Reading package lists...
#7 3.525 Reading package lists...
#7 5.037 Building dependency tree...
#7 5.262 Reading state information...
#7 5.513 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.513 0 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.
#7 5.518 --2022-04-23 10:37:18--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.521 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.109.133, 185.199.110.133, 185.199.111.133, ...
#7 5.522 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.109.133|:443... connected.
#7 5.546 HTTP request sent, awaiting response... 200 OK
#7 5.731 Length: 9177 (9.0K) [text/plain]
#7 5.731 Saving to: '/afl/afl_driver.cpp'
#7 5.731 
#7 5.731      0K ........                                              100% 9.25M=0.001s
#7 5.732 
#7 5.732 2022-04-23 10:37:19 (9.25 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.732 
#7 7.452 ar: creating /libAFL.a
#7 DONE 7.5s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:e507d2de6cab8b4b5a1d88dc6368b1c9956770946881bf5a1dc07c01b0e6df63
#8 writing image sha256:e507d2de6cab8b4b5a1d88dc6368b1c9956770946881bf5a1dc07c01b0e6df63 done
#8 naming to gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress2_fuzzer-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress2_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:b9fbf89770f99f9b306c526f357bb2f59d0ba062e47e10503d03986e52c00fd5
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:684675197d000d293719fe075a4ef6455d4c9fa56e208ec8b43712272b7de1fb
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:daa3a8c165d98d99e5d0e8ac9e816b40a7afcf84c8cd371b3cdfdacc48276ab5
#8 transferring context: 591B 0.0s done
#8 DONE 0.1s

#9 [4/7] COPY ./requirements.txt /
#9 sha256:3f063ec96f2acc004b517e9765aaef1e9401a0a31881a9fb24c607e2e55951d1
#9 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:c6109305b6b92108f8b77f8eeda85503850eca1510c85d3c2e882cb0c57ecb8e
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:bf3ac6373978124ef9f914e31acab145becf69c3e2abfed1eb9f5b9cbb3fabcd
#10 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:c0e36d92d859767d14e18ce4ac008e025c540509be39b18d51c2fa079c9b1ef4
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:4f3dd76512df28a9318832178fc76739758c784ed8f6f0bb7d2f9fdfb54ec807 done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:e05189b5c9d026be8800d138c4c414e8beaf3aad75903e0b83c5f12ffe527f33
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:acc40165e0ce7ee96a09472d98fafe2c5c7e1282af70e294bfb2224a0be4819e
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress2_fuzzer-intermediate:latest
#3 sha256:aacf60489bb945837f3e9a6be4fbeede15c1f3fa31fd0688e15d8730b19e97f1
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:8cb392a7c49bcd3b4505d124a87b262cdf3c3122f607a863253f95bd95f56ac3
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress2_fuzzer-intermediate
#6 sha256:ca991f7784e9f94abce95d4ca3382cace8a37f4fb9b60afaaf443b827a2b4766
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress2_fuzzer
#5 sha256:66f6769f3039bdf1f47b80fcf620dc85375246d1b57f5c2fdc8c00c136359b98
#5 ERROR: gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress2_fuzzer:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:8cb392a7c49bcd3b4505d124a87b262cdf3c3122f607a863253f95bd95f56ac3
#12 transferring context: 742.42kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress2_fuzzer-intermediate
#6 sha256:ca991f7784e9f94abce95d4ca3382cace8a37f4fb9b60afaaf443b827a2b4766
#6 DONE 0.2s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:38335183538faba42948ba1c9cc892c3a2e3d19f56e9caf4a4bd49403e04e759
#8 DONE 0.4s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:147bd2dd3901da1169e08dc01f905dad26e0f397c98f3e050cc38e6c3ec131e0
#9 DONE 10.7s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:40e7ea6e35caac500bde7b5afdeca0e7439278869bd7414956c1ecf7f8b20b00
#10 DONE 0.3s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:29a684b6b423b4983f4aa3abdc6a9e024ba03fc59f4ba2acc192d6d2cb36b91c
#11 DONE 17.2s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:c6351334253e4b03fd58d52b0782d0ab2baa0a674048c4e098741194519e4318
#13 DONE 0.3s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:827bc5335e54a99f0ea15912fc2faa7806e29fadd39175dc16de901cd5b42124
#14 DONE 2.6s

#15 [stage-1  8/13] COPY benchmarks/zlib_zlib_uncompress2_fuzzer/benchmark.yaml /
#15 sha256:d98d6aa1e7439e97dd9c1a82a7a8d9659da355636a84fefcc00b226f1ea29d24
#15 DONE 0.4s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:d738d7fb50109de2c95a3382a1a3d27a950d49aecb0c591e27353e147a3f7afe
#16 DONE 0.7s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:a6cee72f52f34eeb2f507e340cb6ff85ccaadf2e95a3fb8765537f354224c65e
#17 DONE 0.3s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:6012a3473df38ff7ee8f106414dade2f2ae6eb99641df29b11eb6d62d357ea3e
#18 0.543 Checking out commit 1d5a2cd8
#18 2.603 From https://github.com/madler/zlib
#18 2.603  * [new tag]         v0.71       -> v0.71
#18 2.603  * [new tag]         v0.79       -> v0.79
#18 2.604  * [new tag]         v0.8        -> v0.8
#18 2.604  * [new tag]         v0.9        -> v0.9
#18 2.604  * [new tag]         v0.91       -> v0.91
#18 2.604  * [new tag]         v0.92       -> v0.92
#18 2.605  * [new tag]         v0.93       -> v0.93
#18 2.605  * [new tag]         v0.94       -> v0.94
#18 2.605  * [new tag]         v0.95       -> v0.95
#18 2.606  * [new tag]         v0.99       -> v0.99
#18 2.606  * [new tag]         v1.0-pre    -> v1.0-pre
#18 2.606  * [new tag]         v1.0.1      -> v1.0.1
#18 2.607  * [new tag]         v1.0.2      -> v1.0.2
#18 2.607  * [new tag]         v1.0.4      -> v1.0.4
#18 2.607  * [new tag]         v1.0.5      -> v1.0.5
#18 2.608  * [new tag]         v1.0.7      -> v1.0.7
#18 2.608  * [new tag]         v1.0.8      -> v1.0.8
#18 2.608  * [new tag]         v1.0.9      -> v1.0.9
#18 2.608  * [new tag]         v1.1.0      -> v1.1.0
#18 2.609  * [new tag]         v1.1.1      -> v1.1.1
#18 2.609  * [new tag]         v1.1.2      -> v1.1.2
#18 2.609  * [new tag]         v1.1.3      -> v1.1.3
#18 2.610  * [new tag]         v1.1.4      -> v1.1.4
#18 2.610  * [new tag]         v1.2.0      -> v1.2.0
#18 2.610  * [new tag]         v1.2.0.1    -> v1.2.0.1
#18 2.611  * [new tag]         v1.2.0.2    -> v1.2.0.2
#18 2.611  * [new tag]         v1.2.0.3    -> v1.2.0.3
#18 2.611  * [new tag]         v1.2.0.4    -> v1.2.0.4
#18 2.612  * [new tag]         v1.2.0.5    -> v1.2.0.5
#18 2.612  * [new tag]         v1.2.0.6    -> v1.2.0.6
#18 2.612  * [new tag]         v1.2.0.7    -> v1.2.0.7
#18 2.613  * [new tag]         v1.2.0.8    -> v1.2.0.8
#18 2.613  * [new tag]         v1.2.1      -> v1.2.1
#18 2.613  * [new tag]         v1.2.1.1    -> v1.2.1.1
#18 2.614  * [new tag]         v1.2.1.2    -> v1.2.1.2
#18 2.614  * [new tag]         v1.2.10     -> v1.2.10
#18 2.614  * [new tag]         v1.2.11     -> v1.2.11
#18 2.615  * [new tag]         v1.2.12     -> v1.2.12
#18 2.615  * [new tag]         v1.2.2      -> v1.2.2
#18 2.615  * [new tag]         v1.2.2.1    -> v1.2.2.1
#18 2.615  * [new tag]         v1.2.2.2    -> v1.2.2.2
#18 2.616  * [new tag]         v1.2.2.3    -> v1.2.2.3
#18 2.616  * [new tag]         v1.2.2.4    -> v1.2.2.4
#18 2.616  * [new tag]         v1.2.3      -> v1.2.3
#18 2.616  * [new tag]         v1.2.3.1    -> v1.2.3.1
#18 2.616  * [new tag]         v1.2.3.2    -> v1.2.3.2
#18 2.617  * [new tag]         v1.2.3.3    -> v1.2.3.3
#18 2.617  * [new tag]         v1.2.3.4    -> v1.2.3.4
#18 2.617  * [new tag]         v1.2.3.5    -> v1.2.3.5
#18 2.617  * [new tag]         v1.2.3.6    -> v1.2.3.6
#18 2.618  * [new tag]         v1.2.3.7    -> v1.2.3.7
#18 2.618  * [new tag]         v1.2.3.8    -> v1.2.3.8
#18 2.618  * [new tag]         v1.2.3.9    -> v1.2.3.9
#18 2.618  * [new tag]         v1.2.4      -> v1.2.4
#18 2.618  * [new tag]         v1.2.4-pre1 -> v1.2.4-pre1
#18 2.619  * [new tag]         v1.2.4-pre2 -> v1.2.4-pre2
#18 2.619  * [new tag]         v1.2.4.1    -> v1.2.4.1
#18 2.619  * [new tag]         v1.2.4.2    -> v1.2.4.2
#18 2.619  * [new tag]         v1.2.4.3    -> v1.2.4.3
#18 2.620  * [new tag]         v1.2.4.4    -> v1.2.4.4
#18 2.620  * [new tag]         v1.2.4.5    -> v1.2.4.5
#18 2.620  * [new tag]         v1.2.5      -> v1.2.5
#18 2.620  * [new tag]         v1.2.5.1    -> v1.2.5.1
#18 2.620  * [new tag]         v1.2.5.2    -> v1.2.5.2
#18 2.621  * [new tag]         v1.2.5.3    -> v1.2.5.3
#18 2.621  * [new tag]         v1.2.6      -> v1.2.6
#18 2.621  * [new tag]         v1.2.6.1    -> v1.2.6.1
#18 2.621  * [new tag]         v1.2.7      -> v1.2.7
#18 2.621  * [new tag]         v1.2.7.1    -> v1.2.7.1
#18 2.622  * [new tag]         v1.2.7.2    -> v1.2.7.2
#18 2.622  * [new tag]         v1.2.7.3    -> v1.2.7.3
#18 2.622  * [new tag]         v1.2.8      -> v1.2.8
#18 2.622  * [new tag]         v1.2.9      -> v1.2.9
#18 2.629 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 2.634 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 2.641 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 2.709 Checkout unsuccessful.
#18 DONE 3.0s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:2436e08088ab0b24dc79f6f7a11810e1f5bfabbab4f49245372289b34f1b3870
#19 DONE 0.9s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:07be0390ce5b7da2071d0c8dfb6d9a15901431684a2b27fd498c7c7324b2dae3
#20 0.531 Run fuzzer_build to build the target
#20 0.663 FUZZ_TARGET = zlib_uncompress2_fuzzer
#20 0.663 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.663 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.672 Building benchmark zlib_zlib_uncompress2_fuzzer with fuzzer afl
#20 0.675 + ./configure
#20 0.873 Checking for shared library support...
#20 0.958 Building shared library libz.so.1.2.12.1-motley with clang.
#20 1.000 Checking for size_t... Yes.
#20 1.028 Checking for off64_t... Yes.
#20 1.030 Checking for fseeko... Yes.
#20 1.229 Checking for strerror... Yes.
#20 1.273 Checking for unistd.h... Yes.
#20 1.306 Checking for stdarg.h... Yes.
#20 1.352 Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().
#20 1.723 Checking for vsnprintf() in stdio.h... Yes.
#20 1.766 Checking for return value of vsnprintf()... Yes.
#20 1.797 Checking for attribute(visibility) support... Yes.
#20 1.841 ++ nproc
#20 1.842 + make -j8 clean
#20 1.846 rm -f *.o *.lo *~ \
#20 1.846    example minigzip examplesh minigzipsh \
#20 1.846    example64 minigzip64 \
#20 1.846    infcover \
#20 1.846    libz.* foo.gz so_locations \
#20 1.846    _match.s maketree contrib/infback9/*.o
#20 1.849 rm -rf objs
#20 1.850 rm -f *.gcda *.gcno *.gcov
#20 1.852 rm -f contrib/infback9/*.gcda contrib/infback9/*.gcno contrib/infback9/*.gcov
#20 1.855 ++ nproc
#20 1.856 + make -j8 all
#20 1.860 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -c -o example.o test/example.c
#20 1.860 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o adler32.o adler32.c
#20 1.861 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o crc32.o crc32.c
#20 1.862 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o deflate.o deflate.c
#20 1.862 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o infback.o infback.c
#20 1.863 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o inffast.o inffast.c
#20 1.863 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o inflate.o inflate.c
#20 1.863 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o inftrees.o inftrees.c
#20 2.084 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o trees.o trees.c
#20 2.099 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o zutil.o zutil.c
#20 2.114 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o compress.o compress.c
#20 2.185 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o uncompr.o uncompr.c
#20 2.194 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzclose.o gzclose.c
#20 2.208 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzlib.o gzlib.c
#20 2.227 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzread.o gzread.c
#20 2.268 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzwrite.o gzwrite.c
#20 2.282 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -c -o minigzip.o test/minigzip.c
#20 2.462 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/adler32.o adler32.c
#20 2.473 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/crc32.o crc32.c
#20 2.475 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/deflate.o deflate.c
#20 2.566 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/infback.o infback.c
#20 2.618 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/inffast.o inffast.c
#20 2.672 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/inflate.o inflate.c
#20 2.796 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/inftrees.o inftrees.c
#20 2.881 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/trees.o trees.c
#20 2.985 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/zutil.o zutil.c
#20 3.029 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/compress.o compress.c
#20 3.074 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/uncompr.o uncompr.c
#20 3.109 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzclose.o gzclose.c
#20 3.122 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzlib.o gzlib.c
#20 3.160 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzread.o gzread.c
#20 3.202 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzwrite.o gzwrite.c
#20 3.224 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -D_FILE_OFFSET_BITS=64 -c -o example64.o test/example.c
#20 3.313 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -D_FILE_OFFSET_BITS=64 -c -o minigzip64.o test/minigzip.c
#20 3.378 ar rc libz.a adler32.o crc32.o deflate.o infback.o inffast.o inflate.o inftrees.o trees.o zutil.o compress.o uncompr.o gzclose.o gzlib.o gzread.o gzwrite.o 
#20 3.402 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o example example.o -L. libz.a
#20 3.483 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o minigzip minigzip.o -L. libz.a
#20 3.497 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o example64 example64.o -L. libz.a
#20 3.516 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o minigzip64 minigzip64.o -L. libz.a
#20 3.966 clang -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o libz.so.1.2.12.1-motley adler32.lo crc32.lo deflate.lo infback.lo inffast.lo inflate.lo inftrees.lo trees.lo zutil.lo compress.lo uncompr.lo gzclose.lo gzlib.lo gzread.lo gzwrite.lo  -lc 
#20 4.032 rm -f libz.so libz.so.1
#20 4.047 ln -s libz.so.1.2.12.1-motley libz.so
#20 4.048 ln -s libz.so.1.2.12.1-motley libz.so.1
#20 4.052 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o examplesh example.o -L. libz.so.1.2.12.1-motley
#20 4.052 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o minigzipsh minigzip.o -L. libz.so.1.2.12.1-motley
#20 4.184 ++ find /src -name '*_fuzzer.cc'
#20 4.209 + for f in $(find $SRC -name '*_fuzzer.cc')
#20 4.210 ++ basename -s .cc /src/zlib_uncompress2_fuzzer.cc
#20 4.217 + b=zlib_uncompress2_fuzzer
#20 4.217 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I. /src/zlib_uncompress2_fuzzer.cc -o /out/zlib_uncompress2_fuzzer /libAFL.a ./libz.a
#20 4.575 + for f in $(find $SRC -name '*_fuzzer.cc')
#20 4.576 ++ basename -s .cc /src/zlib_uncompress_fuzzer.cc
#20 4.577 + b=zlib_uncompress_fuzzer
#20 4.577 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I. /src/zlib_uncompress_fuzzer.cc -o /out/zlib_uncompress_fuzzer /libAFL.a ./libz.a
#20 4.865 + zip /out/seed_corpus.zip CMakeLists.txt Makefile.in adler32.c adler32.lo adler32.o compress.c compress.lo compress.o configure.log crc32.c crc32.h crc32.lo crc32.o deflate.c deflate.h deflate.lo deflate.o example.o example64.o gzclose.c gzclose.lo gzclose.o gzguts.h gzlib.c gzlib.lo gzlib.o gzread.c gzread.lo gzread.o gzwrite.c gzwrite.lo gzwrite.o infback.c infback.lo infback.o inffast.c inffast.h inffast.lo inffast.o inffixed.h inflate.c inflate.h inflate.lo inflate.o inftrees.c inftrees.h inftrees.lo inftrees.o libz.a libz.so libz.so.1 libz.so.1.2.12.1-motley make_vms.com minigzip.o minigzip64.o treebuild.xml trees.c trees.h trees.lo trees.o uncompr.c uncompr.lo uncompr.o zconf.h zconf.h.cmakein zconf.h.in zlib.3 zlib.3.pdf zlib.h zlib.map zlib.pc zlib.pc.cmakein zlib.pc.in zutil.c zutil.h zutil.lo zutil.o
#20 4.877   adding: CMakeLists.txt (deflated 68%)
#20 4.878   adding: Makefile.in (deflated 77%)
#20 4.878   adding: adler32.c (deflated 69%)
#20 4.879   adding: adler32.lo (deflated 70%)
#20 4.879   adding: adler32.o (deflated 70%)
#20 4.880   adding: compress.c (deflated 63%)
#20 4.880   adding: compress.lo (deflated 71%)
#20 4.880   adding: compress.o (deflated 71%)
#20 4.881   adding: configure.log (deflated 79%)
#20 4.881   adding: crc32.c (deflated 75%)
#20 4.882   adding: crc32.h (deflated 61%)
#20 4.920   adding: crc32.lo (deflated 43%)
#20 4.921   adding: crc32.o (deflated 47%)
#20 4.922   adding: deflate.c (deflated 76%)
#20 4.926   adding: deflate.h (deflated 64%)
#20 4.926   adding: deflate.lo (deflated 77%)
#20 4.931   adding: deflate.o (deflated 79%)
#20 4.936   adding: example.o (deflated 77%)
#20 4.937   adding: example64.o (deflated 77%)
#20 4.938   adding: gzclose.c (deflated 41%)
#20 4.938   adding: gzclose.lo (deflated 67%)
#20 4.939   adding: gzclose.o (deflated 67%)
#20 4.939   adding: gzguts.h (deflated 63%)
#20 4.939   adding: gzlib.c (deflated 73%)
#20 4.940   adding: gzlib.lo (deflated 77%)
#20 4.941   adding: gzlib.o (deflated 78%)
#20 4.942   adding: gzread.c (deflated 74%)
#20 4.943   adding: gzread.lo (deflated 74%)
#20 4.944   adding: gzread.o (deflated 74%)
#20 4.946   adding: gzwrite.c (deflated 79%)
#20 4.946   adding: gzwrite.lo (deflated 75%)
#20 4.947   adding: gzwrite.o (deflated 75%)
#20 4.949   adding: infback.c (deflated 76%)
#20 4.950   adding: infback.lo (deflated 69%)
#20 4.951   adding: infback.o (deflated 69%)
#20 4.953   adding: inffast.c (deflated 75%)
#20 4.953   adding: inffast.h (deflated 32%)
#20 4.953   adding: inffast.lo (deflated 69%)
#20 4.954   adding: inffast.o (deflated 66%)
#20 4.954   adding: inffixed.h (deflated 75%)
#20 4.955   adding: inflate.c (deflated 77%)
#20 4.957   adding: inflate.h (deflated 67%)
#20 4.957   adding: inflate.lo (deflated 73%)
#20 4.961   adding: inflate.o (deflated 73%)
#20 4.964   adding: inftrees.c (deflated 67%)
#20 4.965   adding: inftrees.h (deflated 58%)
#20 4.965   adding: inftrees.lo (deflated 67%)
#20 4.965   adding: inftrees.o (deflated 66%)
#20 4.966   adding: libz.a (deflated 73%)
#20 4.986   adding: libz.so (deflated 55%)
#20 4.998   adding: libz.so.1 (deflated 55%)
#20 5.010   adding: libz.so.1.2.12.1-motley (deflated 55%)
#20 5.027   adding: make_vms.com (deflated 72%)
#20 5.028   adding: minigzip.o (deflated 74%)
#20 5.029   adding: minigzip64.o (deflated 74%)
#20 5.030   adding: treebuild.xml (deflated 80%)
#20 5.031   adding: trees.c (deflated 73%)
#20 5.032   adding: trees.h (deflated 83%)
#20 5.033   adding: trees.lo (deflated 72%)
#20 5.035   adding: trees.o (deflated 71%)
#20 5.037   adding: uncompr.c (deflated 62%)
#20 5.037   adding: uncompr.lo (deflated 66%)
#20 5.038   adding: uncompr.o (deflated 66%)
#20 5.038   adding: zconf.h (deflated 73%)
#20 5.039   adding: zconf.h.cmakein (deflated 73%)
#20 5.040   adding: zconf.h.in (deflated 73%)
#20 5.041   adding: zlib.3 (deflated 54%)
#20 5.042   adding: zlib.3.pdf (deflated 20%)
#20 5.042   adding: zlib.h (deflated 73%)
#20 5.048   adding: zlib.map (deflated 69%)
#20 5.048   adding: zlib.pc (deflated 38%)
#20 5.048   adding: zlib.pc.cmakein (deflated 39%)
#20 5.049   adding: zlib.pc.in (deflated 38%)
#20 5.049   adding: zutil.c (deflated 65%)
#20 5.049   adding: zutil.h (deflated 63%)
#20 5.049   adding: zutil.lo (deflated 72%)
#20 5.050   adding: zutil.o (deflated 73%)
#20 5.051 ++ find /src -name '*_fuzzer.c'
#20 5.070 + for f in $(find $SRC -name '*_fuzzer.c')
#20 5.070 ++ basename -s .c /src/checksum_fuzzer.c
#20 5.072 + b=checksum_fuzzer
#20 5.072 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/checksum_fuzzer.c -c -o /tmp/checksum_fuzzer.o
#20 5.155 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/checksum_fuzzer /tmp/checksum_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 5.396 + rm -f /tmp/checksum_fuzzer.o
#20 5.398 + ln -sf /out/seed_corpus.zip /out/checksum_fuzzer_seed_corpus.zip
#20 5.399 + for f in $(find $SRC -name '*_fuzzer.c')
#20 5.400 ++ basename -s .c /src/compress_fuzzer.c
#20 5.401 + b=compress_fuzzer
#20 5.401 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/compress_fuzzer.c -c -o /tmp/compress_fuzzer.o
#20 5.473 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/compress_fuzzer /tmp/compress_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 5.721 + rm -f /tmp/compress_fuzzer.o
#20 5.722 + ln -sf /out/seed_corpus.zip /out/compress_fuzzer_seed_corpus.zip
#20 5.724 + for f in $(find $SRC -name '*_fuzzer.c')
#20 5.724 ++ basename -s .c /src/example_small_fuzzer.c
#20 5.725 + b=example_small_fuzzer
#20 5.725 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/example_small_fuzzer.c -c -o /tmp/example_small_fuzzer.o
#20 5.802 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/example_small_fuzzer /tmp/example_small_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 6.049 + rm -f /tmp/example_small_fuzzer.o
#20 6.050 + ln -sf /out/seed_corpus.zip /out/example_small_fuzzer_seed_corpus.zip
#20 6.051 + for f in $(find $SRC -name '*_fuzzer.c')
#20 6.052 ++ basename -s .c /src/example_large_fuzzer.c
#20 6.053 + b=example_large_fuzzer
#20 6.053 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/example_large_fuzzer.c -c -o /tmp/example_large_fuzzer.o
#20 6.129 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/example_large_fuzzer /tmp/example_large_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 6.372 + rm -f /tmp/example_large_fuzzer.o
#20 6.374 + ln -sf /out/seed_corpus.zip /out/example_large_fuzzer_seed_corpus.zip
#20 6.375 + for f in $(find $SRC -name '*_fuzzer.c')
#20 6.375 ++ basename -s .c /src/example_flush_fuzzer.c
#20 6.376 + b=example_flush_fuzzer
#20 6.376 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/example_flush_fuzzer.c -c -o /tmp/example_flush_fuzzer.o
#20 6.452 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/example_flush_fuzzer /tmp/example_flush_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 6.699 + rm -f /tmp/example_flush_fuzzer.o
#20 6.700 + ln -sf /out/seed_corpus.zip /out/example_flush_fuzzer_seed_corpus.zip
#20 6.701 + for f in $(find $SRC -name '*_fuzzer.c')
#20 6.702 ++ basename -s .c /src/example_dict_fuzzer.c
#20 6.702 + b=example_dict_fuzzer
#20 6.702 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/example_dict_fuzzer.c -c -o /tmp/example_dict_fuzzer.o
#20 6.783 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/example_dict_fuzzer /tmp/example_dict_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 7.028 + rm -f /tmp/example_dict_fuzzer.o
#20 7.029 + ln -sf /out/seed_corpus.zip /out/example_dict_fuzzer_seed_corpus.zip
#20 7.031 + for f in $(find $SRC -name '*_fuzzer.c')
#20 7.031 ++ basename -s .c /src/minigzip_fuzzer.c
#20 7.032 + b=minigzip_fuzzer
#20 7.032 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/minigzip_fuzzer.c -c -o /tmp/minigzip_fuzzer.o
#20 7.136 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/minigzip_fuzzer /tmp/minigzip_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 7.390 + rm -f /tmp/minigzip_fuzzer.o
#20 7.392 + ln -sf /out/seed_corpus.zip /out/minigzip_fuzzer_seed_corpus.zip
#20 7.394 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 7.8s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:787ded31e2bcf070b7e3ff3e805789ebe3252199328144ac2ffe652ec67651ec done
#21 naming to gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress2_fuzzer done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress2_fuzzer:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:c9d30c92a274ead45dca5d5123e913115ee616cb3b6060bf4aa5cc1ff1dd4f91
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:d1d87f568a64546557b9dad17592d5154dd17d840561f1896c6032f0d147e522
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress2_fuzzer-intermediate
#4 sha256:643013d089029a30cf2a25ea212672361e78fccd88876bf49d5c05e6d5884977
#4 ERROR: gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress2_fuzzer-intermediate:latest: not found

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:2c1a4fdee9c5d94984aa494cbb6ed2d2c3af173ad21b30731bc92c7eb4e30e66
#6 writing image sha256:2c1a4fdee9c5d94984aa494cbb6ed2d2c3af173ad21b30731bc92c7eb4e30e66 done
#6 naming to gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress2_fuzzer-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress2_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:ce23a28a224815fde1538bdbf74c01334fa00a390688052b71bd4ee7610c9770
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:83778c74dbdb21c6d4129778bec42ee439976161b1b693bb75a293580156ad19
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress2_fuzzer:latest
#4 sha256:96a804606466cdcbd5260abd87aa0f8b997e7ae7e1ca81b9f63c69043ac7b8c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress2_fuzzer-intermediate:latest
#3 sha256:b25ad76ac31a293db5341de884fb635f48c45f29d87ae4265058b1037a821a34
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:a2fdf70a0f0c1944c61074c992f8e12f1383c67b590f93633bfff4c1aed29eb8
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress2_fuzzer-intermediate
#6 sha256:268c8df460b1f8ff09381225947c493a2154a2cf99038323a939a56ba726713c
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress2_fuzzer
#10 sha256:33d46da8e5691161e95551ed3f0d832c7a39122bb34c89559c87f2b2ac93b0d5
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress2_fuzzer
#5 sha256:a8abf652444cd892abdf8e14e243d5fe7868f098c4c88155070c43c1e1d2e90b
#5 ERROR: gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress2_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:a2fdf70a0f0c1944c61074c992f8e12f1383c67b590f93633bfff4c1aed29eb8
#12 transferring context: 9.06MB 0.2s done
#12 DONE 0.3s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress2_fuzzer
#10 sha256:33d46da8e5691161e95551ed3f0d832c7a39122bb34c89559c87f2b2ac93b0d5
#10 DONE 0.9s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:eed8a2b3399dac54542a0d6bd8fe5fbf7475195da6e8e2a583277b1c76c20cfc
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:0a7af4aaa955aa2b94603a80cb0b2430d9c53165186b86e1a88c63cd79d820d5
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:788ecf140c54ab7bd62ce3943221abe5ef48a39ba00152a2fd936ee9ca9c095e
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:5f6ca9088a31b5ffc902ecb365b3a31ad12747382455b3c8dc37ace100b4aefb
#11 DONE 0.2s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:f7e9d340bf7cb4b178443489a519b44f7ebb681cb5c3a06e2eb01b0632239d14
#13 DONE 0.2s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:278e26a2c961ccda8d8d485ff65a7e215cc030751afbc5a785ff33ebb25ea0d8
#14 DONE 0.2s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:c2f57744af0519cf6313474148554ba7b1da0a9588fc631299ea69cf9b2e8994
#15 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:9ab668e0ff1f9a944bc6e51c58a9ec4f16051fb98ead4dd571f22d8f1447ed54
#16 DONE 0.8s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:34258810360cd5a27be205ee94f1c1b894947da22892b12b4f413f8c51f9c09b
#17 DONE 0.4s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:de1aa1579008e46c77f8cdcddd21f5d9b0fd6b027181fdba91a6931c0998db08
#18 DONE 0.3s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:2122ddff9acb230cbf6b6b1a896d8fdeded962f004c12d8bc5d3428555da9a04
#19 DONE 0.3s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:47e0beedd9ba09edc0e64377d3f2e4caf14733507cfeeadcbb48f4dc57fef1e1
#20 DONE 0.6s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:1d293ba6aa76ed550be3ee02a405adbb00e2be64c48d125289790f8b7dd8e0a8 done
#21 naming to gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress2_fuzzer done
#21 DONE 0.0s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress2_fuzzer:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Doing final sync.
