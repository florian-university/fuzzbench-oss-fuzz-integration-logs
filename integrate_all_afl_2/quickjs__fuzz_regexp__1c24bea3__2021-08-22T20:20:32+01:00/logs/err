WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: quickjs_fuzz_regexp.
INFO:root:Please run "make test-run-afl-quickjs_fuzz_regexp" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:b6b5806c61d3474499b3ff4e235eaab9f324c2c8460dbb8448a1f89480ff1e49
#1 transferring dockerfile: 911B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:5985c0865b1c5009f5f923c6cbb5fbdcd5a585740d2fe73c94478268d5c5b79a
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#9 [internal] load build context
#9 sha256:178c32c0405b2d8ed57b73e49ae4282c24310b43e961529525f9c522c9d18d83
#9 DONE 0.0s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#5 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/quickjs_fuzz_regexp
#4 sha256:8373489ae102148b8f4e2770b06f8cbce2636def19dbb74ccf0c862243ea6007
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/quickjs_fuzz_regexp:latest: not found

#9 [internal] load build context
#9 sha256:178c32c0405b2d8ed57b73e49ae4282c24310b43e961529525f9c522c9d18d83
#9 transferring context: 9.12kB done
#9 DONE 0.1s

#8 [4/6] WORKDIR /src/quickjs
#8 sha256:0c860717a535c3fde7bffa2b570d947629620ad5c570141874dc89e015b24be9
#8 CACHED

#10 [5/6] COPY build.sh /src/
#10 sha256:47a7009475acf66dae83920a0a1a9ac2debe96814e40e17cdedc37fd63be0532
#10 CACHED

#6 [2/6] RUN apt-get update && apt-get install -y make
#6 sha256:3f1d6a55af806298c1b6951fbf76321c67d198023e00277385a4beaf410c5a65
#6 CACHED

#7 [3/6] RUN git clone --depth 1 https://github.com/bellard/quickjs quickjs
#7 sha256:88f522f90b013723f70505f5d4af897031e44471578be124b8e62b59bc4da1d6
#7 CACHED

#11 [6/6] COPY fuzz*.c /src/
#11 sha256:e621028641d3f9efb933b547c17fcd3becfa4b2fe6e8ca254b605f9288d3b52e
#11 CACHED

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:764346d30ee93e94bf52c138c34e30bc01760fa88ce2c98f3b78663eedcce204 done
#12 naming to gcr.io/fuzzbench/builders/benchmark/quickjs_fuzz_regexp done
#12 DONE 0.2s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/quickjs_fuzz_regexp:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:0b18c1c90342fa07b01b7c96a522c3c9e61cd199d1b3c5ac3ea97d77590d49a8
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:1a45068d5272c97fadea15c7dbd1b209d09427a649762a17b431879a6b6de449
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/quickjs_fuzz_regexp:latest
#3 sha256:f0fbca1eb9b67cd8de78155db8ddf2b903de228a5fc45f1d9710fb872b3d515e
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/quickjs_fuzz_regexp
#5 sha256:5857561b2a55eced0c76522081917d070064b56baa4aa0b585f7c2118788ea38
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/quickjs_fuzz_regexp-intermediate
#4 sha256:a0a6b75e1e8fbf164971a337f9bedcc4eb25abb72238c4a965397e154deb1fc2
#4 ERROR: gcr.io/fuzzbench/builders/afl/quickjs_fuzz_regexp-intermediate:latest: not found

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:3734e76483001603b6bf6cc02d05822fa227585e167a85224a33880cf8f09157
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:c2f584629c4b145a3e21ee5713e328b20b7cba6a475b00053fc1a40015b10385
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:032110ed81bc9370d8692d6c2697b88fa172fc83cb73127c62de037f13ef1df7
#8 writing image sha256:032110ed81bc9370d8692d6c2697b88fa172fc83cb73127c62de037f13ef1df7 done
#8 naming to gcr.io/fuzzbench/builders/afl/quickjs_fuzz_regexp-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/quickjs_fuzz_regexp-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:919ac6dca71861190e73471d59f8b67437c6ced7dbc054af1790dae2a1c3f2e7
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:66c345d5517e052b788f7faf8583a525a7020392185aa5234c6f13b984f4d15d
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:b297d2220854d3822f39e69e5380147db784d3872a076ac5e413ee213c13d6a3
#8 transferring context: 591B 0.0s done
#8 DONE 0.1s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:dc955bcabb06e096bceb90fb0621e1dd4b9c8f898ce4f388507bb59fa4af4d40
#10 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:e04e0cac42a5c51c35e88e170ed7b2303b612a05fecd94fde96450dd933a0154
#9 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:649ef576dc7c1dfb796de6834893a7ee9614e6171c73ff7b2287747823adae17
#11 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:6007d6b3ee47be5300ef424ea7bb4692cc5b3ad82fa90e18429f92d5d5456505
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:06cefeb620ef0a12ea1bcad2e9d41606970bfe3e730adc09f2f646fe13a3a162 done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:49c13909c424db52573396e3caa6fc413dfcfc567776bb959d567fc32bab57b9
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:a21ac7c5cc34d8b893c5419c3ed2c66808b45930d6db347b820a8fd93a800370
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/quickjs_fuzz_regexp-intermediate:latest
#3 sha256:d13961fdf65665d4858d9b7dede557258ff4b53a94755bee2fa4a8f74b76d04a
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:b91f0923518ee792679884525dacacd255233835d5d1c8f6ceb4373e6c5ef64a
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/quickjs_fuzz_regexp-intermediate
#6 sha256:398c4f288dea34ce484a88c16577dbbb582af5dedd08f71a8f6e5981ca969607
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/quickjs_fuzz_regexp
#5 sha256:2afaa101dd73bf5a8a5ba3cfef0007411fc2c10ef59f8df54459b22038396ea5
#5 ERROR: gcr.io/fuzzbench/builders/afl/quickjs_fuzz_regexp:latest: not found

#12 [internal] load build context
#12 sha256:b91f0923518ee792679884525dacacd255233835d5d1c8f6ceb4373e6c5ef64a
#12 transferring context: 742.39kB 0.1s done
#12 DONE 0.1s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:ed5d6b1dcd417af8beb9902b613380f76a20a93b1f2807173a49cb8873d95348
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:6951389bb8e287b031e6c8f21ad503f9260b8cf4e09b67a2aabf5aee3629a2e8
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:c54923f6a7069d213a047ab1fb1d9de71730ccd39f895ce4f5fccd25b8a8efeb
#11 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:bc7135880308225cab31254e83026bc86646f5ca4209904b98a12d554a47436f
#8 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:48088c4c7ca3bc528752e5ad72eb22f131276007178c888ff24e91f4cc73f0ea
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:2d766e77307c2d4aa3c6737eb3056e0b5734271a7d57aa6231950888e6793f34
#14 DONE 0.5s

#15 [stage-1  8/13] COPY benchmarks/quickjs_fuzz_regexp/benchmark.yaml /
#15 sha256:5148c1663969dc621f9e69b0c5423d0be0c20bad8529da8e2a2a9f28960e50b0
#15 DONE 0.1s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:aa7e456b1edb3fe1ee42f92c73b48b85e1b5e5f378fb0f33afb1801220f71866
#16 DONE 0.5s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:6ca16cedccbfc0a94a6dce4d1a8f376ecce0f1dac09846d321e9b0927dfbd8db
#17 DONE 0.1s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:d6416a4b2219ff165bc2808d61965579b68b1c0df75664ce304f2204601ccf57
#18 0.475 Checking out commit 1c24bea3
#18 1.386 error: pathspec '1c24bea3' did not match any file(s) known to git
#18 1.391 error: pathspec '1c24bea3' did not match any file(s) known to git
#18 1.398 error: pathspec '1c24bea3' did not match any file(s) known to git
#18 1.439 Checkout unsuccessful.
#18 DONE 1.5s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:efe255a9be51c7ad19ce1ab4082fb6a7d53359bb07703d69ba20998f5cfedc16
#19 DONE 0.5s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:333339f68f3c5caafd3eaae3b58b40f3270c69111bad0033983ad69936c7de32
#20 0.425 Run fuzzer_build to build the target
#20 0.548 FUZZ_TARGET = fuzz_regexp
#20 0.548 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.548 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.553 Building benchmark quickjs_fuzz_regexp with fuzzer afl
#20 0.556 + sed -i -e s/CFLAGS=/CFLAGS+=/ Makefile
#20 0.559 + CONFIG_CLANG=y
#20 0.559 + make libquickjs.a
#20 0.565 mkdir -p .obj .obj/examples .obj/tests
#20 0.566 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -g -Wall -MMD -MF .obj/.d -Wextra -Wno-sign-compare -Wno-missing-field-initializers -Wundef -Wuninitialized -Wunused -Wno-unused-parameter -Wwrite-strings -Wchar-subscripts -funsigned-char -MMD -MF .obj/.d -D_GNU_SOURCE -DCONFIG_VERSION=\"2021-03-27\" -DCONFIG_BIGNUM -O2 -c -o .obj/quickjs.nolto.o quickjs.c
#20 0.923 quickjs.c:10741:30: warning: implicit conversion from 'long' to 'double' changes value from 9223372036854775807 to 9223372036854775808 [-Wimplicit-const-int-float-conversion]
#20 0.923                 else if (d > INT64_MAX)
#20 0.923                            ~ ^~~~~~~~~
#20 0.923 /usr/include/stdint.h:124:22: note: expanded from macro 'INT64_MAX'
#20 0.923 # define INT64_MAX              (__INT64_C(9223372036854775807))
#20 0.923                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 0.923 /usr/include/stdint.h:106:24: note: expanded from macro '__INT64_C'
#20 0.923 #  define __INT64_C(c)  c ## L
#20 0.923                         ^~~~~~
#20 0.924 <scratch space>:26:1: note: expanded from here
#20 0.924 9223372036854775807L
#20 0.924 ^~~~~~~~~~~~~~~~~~~~
#20 1.797 quickjs.c:53847:25: warning: implicit conversion from 'long' to 'double' changes value from 9223372036854775807 to 9223372036854775808 [-Wimplicit-const-int-float-conversion]
#20 1.797     if (isnan(d) || d > INT64_MAX)
#20 1.797                       ~ ^~~~~~~~~
#20 1.797 /usr/include/stdint.h:124:22: note: expanded from macro 'INT64_MAX'
#20 1.797 # define INT64_MAX              (__INT64_C(9223372036854775807))
#20 1.797                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 1.797 /usr/include/stdint.h:106:24: note: expanded from macro '__INT64_C'
#20 1.797 #  define __INT64_C(c)  c ## L
#20 1.797                         ^~~~~~
#20 1.797 <scratch space>:78:1: note: expanded from here
#20 1.797 9223372036854775807L
#20 1.797 ^~~~~~~~~~~~~~~~~~~~
#20 36.32 2 warnings generated.
#20 36.33 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -g -Wall -MMD -MF .obj/.d -Wextra -Wno-sign-compare -Wno-missing-field-initializers -Wundef -Wuninitialized -Wunused -Wno-unused-parameter -Wwrite-strings -Wchar-subscripts -funsigned-char -MMD -MF .obj/.d -D_GNU_SOURCE -DCONFIG_VERSION=\"2021-03-27\" -DCONFIG_BIGNUM -O2 -c -o .obj/libregexp.nolto.o libregexp.c
#20 37.45 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -g -Wall -MMD -MF .obj/.d -Wextra -Wno-sign-compare -Wno-missing-field-initializers -Wundef -Wuninitialized -Wunused -Wno-unused-parameter -Wwrite-strings -Wchar-subscripts -funsigned-char -MMD -MF .obj/.d -D_GNU_SOURCE -DCONFIG_VERSION=\"2021-03-27\" -DCONFIG_BIGNUM -O2 -c -o .obj/libunicode.nolto.o libunicode.c
#20 38.16 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -g -Wall -MMD -MF .obj/.d -Wextra -Wno-sign-compare -Wno-missing-field-initializers -Wundef -Wuninitialized -Wunused -Wno-unused-parameter -Wwrite-strings -Wchar-subscripts -funsigned-char -MMD -MF .obj/.d -D_GNU_SOURCE -DCONFIG_VERSION=\"2021-03-27\" -DCONFIG_BIGNUM -O2 -c -o .obj/cutils.nolto.o cutils.c
#20 38.49 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -g -Wall -MMD -MF .obj/.d -Wextra -Wno-sign-compare -Wno-missing-field-initializers -Wundef -Wuninitialized -Wunused -Wno-unused-parameter -Wwrite-strings -Wchar-subscripts -funsigned-char -MMD -MF .obj/.d -D_GNU_SOURCE -DCONFIG_VERSION=\"2021-03-27\" -DCONFIG_BIGNUM -O2 -c -o .obj/quickjs-libc.nolto.o quickjs-libc.c
#20 39.83 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -g -Wall -MMD -MF .obj/.d -Wextra -Wno-sign-compare -Wno-missing-field-initializers -Wundef -Wuninitialized -Wunused -Wno-unused-parameter -Wwrite-strings -Wchar-subscripts -funsigned-char -MMD -MF .obj/.d -D_GNU_SOURCE -DCONFIG_VERSION=\"2021-03-27\" -DCONFIG_BIGNUM -O2 -c -o .obj/libbf.nolto.o libbf.c
#20 44.86 llvm-ar rcs libquickjs.a .obj/quickjs.nolto.o .obj/libregexp.nolto.o .obj/libunicode.nolto.o .obj/cutils.nolto.o .obj/quickjs-libc.nolto.o .obj/libbf.nolto.o
#20 44.89 + zip -r /out/fuzz_eval_seed_corpus.zip tests/microbench.js tests/test_bignum.js tests/test_bjson.js tests/test_builtin.js tests/test_closure.js tests/test_language.js tests/test_loop.js tests/test_op_overloading.js tests/test_qjscalc.js tests/test_std.js tests/test_worker.js tests/test_worker_module.js
#20 44.89   adding: tests/microbench.js (deflated 78%)
#20 44.90   adding: tests/test_bignum.js (deflated 75%)
#20 44.90   adding: tests/test_bjson.js (deflated 70%)
#20 44.90   adding: tests/test_builtin.js (deflated 75%)
#20 44.90   adding: tests/test_closure.js (deflated 71%)
#20 44.90   adding: tests/test_language.js (deflated 75%)
#20 44.90   adding: tests/test_loop.js (deflated 79%)
#20 44.90   adding: tests/test_op_overloading.js (deflated 80%)
#20 44.90   adding: tests/test_qjscalc.js (deflated 63%)
#20 44.90   adding: tests/test_std.js (deflated 68%)
#20 44.90   adding: tests/test_worker.js (deflated 61%)
#20 44.90   adding: tests/test_worker_module.js (deflated 49%)
#20 44.90 + zip -r /out/fuzz_eval_seed_corpus.zip examples/fib_module.js examples/hello.js examples/hello_module.js examples/pi_bigdecimal.js examples/pi_bigfloat.js examples/pi_bigint.js examples/test_fib.js examples/test_point.js
#20 44.90   adding: examples/fib_module.js (deflated 39%)
#20 44.90   adding: examples/hello.js (stored 0%)
#20 44.90   adding: examples/hello_module.js (deflated 19%)
#20 44.90   adding: examples/pi_bigdecimal.js (deflated 58%)
#20 44.90   adding: examples/pi_bigfloat.js (deflated 57%)
#20 44.90   adding: examples/pi_bigint.js (deflated 59%)
#20 44.90   adding: examples/test_fib.js (deflated 21%)
#20 44.90   adding: examples/test_point.js (deflated 56%)
#20 44.90 + zip -r /out/fuzz_compile_seed_corpus.zip tests/microbench.js tests/test_bignum.js tests/test_bjson.js tests/test_builtin.js tests/test_closure.js tests/test_language.js tests/test_loop.js tests/test_op_overloading.js tests/test_qjscalc.js tests/test_std.js tests/test_worker.js tests/test_worker_module.js
#20 44.90   adding: tests/microbench.js (deflated 78%)
#20 44.91   adding: tests/test_bignum.js (deflated 75%)
#20 44.91   adding: tests/test_bjson.js (deflated 70%)
#20 44.91   adding: tests/test_builtin.js (deflated 75%)
#20 44.91   adding: tests/test_closure.js (deflated 71%)
#20 44.91   adding: tests/test_language.js (deflated 75%)
#20 44.91   adding: tests/test_loop.js (deflated 79%)
#20 44.91   adding: tests/test_op_overloading.js (deflated 80%)
#20 44.91   adding: tests/test_qjscalc.js (deflated 63%)
#20 44.91   adding: tests/test_std.js (deflated 68%)
#20 44.91   adding: tests/test_worker.js (deflated 61%)
#20 44.91   adding: tests/test_worker_module.js (deflated 49%)
#20 44.91 + zip -r /out/fuzz_compile_seed_corpus.zip examples/fib_module.js examples/hello.js examples/hello_module.js examples/pi_bigdecimal.js examples/pi_bigfloat.js examples/pi_bigint.js examples/test_fib.js examples/test_point.js
#20 44.91   adding: examples/fib_module.js (deflated 39%)
#20 44.91   adding: examples/hello.js (stored 0%)
#20 44.91   adding: examples/hello_module.js (deflated 19%)
#20 44.91   adding: examples/pi_bigdecimal.js (deflated 58%)
#20 44.91   adding: examples/pi_bigfloat.js (deflated 57%)
#20 44.91   adding: examples/pi_bigint.js (deflated 59%)
#20 44.91   adding: examples/test_fib.js (deflated 21%)
#20 44.91   adding: examples/test_point.js (deflated 56%)
#20 44.91 + cd ..
#20 44.91 + FUZZ_TARGETS='fuzz_eval fuzz_compile fuzz_regexp'
#20 44.91 + for f in $FUZZ_TARGETS
#20 44.91 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -Iquickjs -c fuzz_eval.c -o fuzz_eval.o
#20 44.98 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard fuzz_eval.o -o /out/fuzz_eval quickjs/libquickjs.a /libAFL.a
#20 45.34 + for f in $FUZZ_TARGETS
#20 45.34 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -Iquickjs -c fuzz_compile.c -o fuzz_compile.o
#20 45.42 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard fuzz_compile.o -o /out/fuzz_compile quickjs/libquickjs.a /libAFL.a
#20 45.78 + for f in $FUZZ_TARGETS
#20 45.78 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -Iquickjs -c fuzz_regexp.c -o fuzz_regexp.o
#20 45.85 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard fuzz_regexp.o -o /out/fuzz_regexp quickjs/libquickjs.a /libAFL.a
#20 46.20 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 46.6s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:a245333699ed3f2f4ec47ad1ab1afbe2bbbdeb2b3afe7c61612f4ceecd65653f done
#21 naming to gcr.io/fuzzbench/builders/afl/quickjs_fuzz_regexp done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/quickjs_fuzz_regexp:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:fb0b921559b3b7c80d5779a9140731b3c35c684b0cf44229fafa465f54da3b67
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:eca669eb5ec7cda81389669d3840c6250c1f9b8e4a5ac93b3f08b0de14872b72
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/quickjs_fuzz_regexp-intermediate
#4 sha256:9d4196636204102b4c5298691acc5ded6ab7fac8e5bf05ad4c0b4a14b8971437
#4 ERROR: gcr.io/fuzzbench/runners/afl/quickjs_fuzz_regexp-intermediate:latest: not found

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:559804d64fdb09848e27ac6aa062a59b9bde70e4fee70f67b96f8abeb802c389 done
#6 naming to gcr.io/fuzzbench/runners/afl/quickjs_fuzz_regexp-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/quickjs_fuzz_regexp-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:3b68355fdd48a0f9fa44a733d01bc6a4c8c7ac1943b51ceaa50fb767bf5c70ea
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:6460b438a7d795bac9bd6d6ad3e5b3de6234e65e59523799d4f58a35de8d896c
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/quickjs_fuzz_regexp-intermediate:latest
#3 sha256:81d4087850c632ddcec1efc70f2a077e9c278ca360c93d823b464a41db360692
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/quickjs_fuzz_regexp:latest
#4 sha256:6582b5be479d5607d6bac639f91505e79ed3ffffaf71f5e1aec49162f858bd9c
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:291e86995edd689cd15c905691535985cac9b29ee655979d51cb6647cdff7c56
#12 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/quickjs_fuzz_regexp
#10 sha256:da559cdc595861904954a2097f15587f512aea213a96ee97059d082fb220e9e0
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/quickjs_fuzz_regexp
#5 sha256:7428344e649baa5483d0ac104d425cc221c288573247a975a69d2cc15d00f5a1
#5 ERROR: gcr.io/fuzzbench/runners/afl/quickjs_fuzz_regexp:latest: not found

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/quickjs_fuzz_regexp-intermediate
#6 sha256:c11a15ba2d0bd1230b40621d5a647d1dc03e228d39f55e8918bcf02dfbb10395
#6 DONE 0.0s

#12 [internal] load build context
#12 sha256:291e86995edd689cd15c905691535985cac9b29ee655979d51cb6647cdff7c56
#12 transferring context: 9.03MB 0.2s done
#12 DONE 0.2s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/quickjs_fuzz_regexp
#10 sha256:da559cdc595861904954a2097f15587f512aea213a96ee97059d082fb220e9e0
#10 DONE 0.4s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:e41141a0de9cbbd7689fa4d15244c34d076790c822e74deebfbfa18466ac9058
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:30020080ccf7c3cb2d0d99353df5b50c60ba98e6ff1f3eab25054b4197c2948a
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:940e664a2e6ae76db9c34804dd9f5c454fdb9674411b07f370e7840798da144b
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:09293eaabadec10d06ecf1ca6d4dec4191c1c63ec17ec614d8e3b9e009a07469
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:e9655ccf12dc682ad143f8758342b6f2faf82adfa24cecd218c536add2e4c4ea
#13 DONE 0.2s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:cc542180a9fa62bd95582abb440a7b00b380c5925aab5679727bd7984f164f6f
#14 DONE 0.2s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:c5811c49406e163d443e25f599a46198adf6b4be06b1e79ec18e56ef7554585f
#15 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:4aece2d58cc6d77abda794f13c16ea4297e9995cf4c30a66e150073f24db4105
#16 DONE 0.8s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:7de9f37dbc48ec670586902d3a7ec989dd24a58c844d4241522754b1bc868b49
#17 DONE 0.3s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:6bc9e2d1502ae2206024d427e5f0b17ea0d91de436684f915bad6963d2ba6e30
#18 DONE 0.3s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:17fcf334bb9f4d60f238c62451c9554e40b40b8f412d1aca2d78b63c6facd1d9
#19 DONE 0.3s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:a1b5bdd5ab4cdbbb7b1dfa2de64db47e653638eeffbef7b8c3f37065c270e21d
#20 DONE 0.6s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:90c82ec961dcd2d619ab2fe02938a7c92fef3d529fbf676977085565b2ce948a
#21 writing image sha256:90c82ec961dcd2d619ab2fe02938a7c92fef3d529fbf676977085565b2ce948a done
#21 naming to gcr.io/fuzzbench/runners/afl/quickjs_fuzz_regexp done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/quickjs_fuzz_regexp:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Executed command: "nice -n 5 python3 -u -c from fuzzers.afl import fuzzer; fuzzer.fuzz('/out/seeds', '/out/corpus', '/out/fuzz_regexp')" returned: 1.
ERROR:root:Fuzz process returned nonzero. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 209, in run_fuzzer\n    new_process.execute(command,\n  File "/src/common/new_process.py", line 124, in execute\n    raise subprocess.CalledProcessError(retcode, command)\nsubprocess.CalledProcessError: Command \'[\'nice\', \'-n\', \'5\', \'python3\', \'-u\', \'-c\', "from fuzzers.afl import fuzzer; fuzzer.fuzz(\'/out/seeds\', \'/out/corpus\', \'/out/fuzz_regexp\')"]\' returned non-zero exit status 1.\n'}
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7fd9750e9ee0> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
make: *** [docker/generated.mk:282364: test-run-afl-quickjs_fuzz_regexp] Error 1
