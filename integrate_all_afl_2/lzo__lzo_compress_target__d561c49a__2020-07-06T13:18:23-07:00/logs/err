WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: lzo_lzo_compress_target.
INFO:root:Please run "make test-run-afl-lzo_lzo_compress_target" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:6782c9ede00a806d9af0ed148d1d705fcb5929099c0ccafc832a056f03fa6af4
#1 transferring dockerfile: 1.01kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:6baebf94001a91982c5df7854bcb033ec115ee129494958717e3fa92c7b6eade
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#5 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:f77687c151b5d22ef3dceb586f762654a06ca90358251dc32308403568865a11
#8 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lzo_lzo_compress_target
#4 sha256:276fd8f0620ec45df579251a6bddd529674f0fe3edd7a9274abdd10af97797c3
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/lzo_lzo_compress_target:latest: not found

#8 [internal] load build context
#8 sha256:f77687c151b5d22ef3dceb586f762654a06ca90358251dc32308403568865a11
#8 transferring context: 17.83kB done
#8 DONE 0.0s

#9 [4/5] COPY *.c *.cc *.options build.sh /src/
#9 sha256:8d02c418f0c6a5b635e676f5d8e65ecb79691c25d2bb0df4eb4ff8d603b4b57c
#9 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#6 sha256:4a36570962698a9dd6707bba1ce7d1da85f2389d0ec6c6f4efe406fbfa0cedec
#6 CACHED

#7 [3/5] RUN wget -O lzo.tar.gz     http://www.oberhumer.com/opensource/lzo/download/lzo-2.10.tar.gz
#7 sha256:62a7f7a8616630c22ea04b03bd566fb72ba3b36ca7a89ccbae802bfb168a3ab7
#7 CACHED

#10 [5/5] COPY lzo_decompress_target_seeds /src/lzo_decompress_target_seeds
#10 sha256:72038366963648ba56a17edd15f5043f3026631c945fdfbf563fe8130dc87c1a
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:93f5be9e910ab6d92f5861f87f2ff32eef1934433a1a8434d632323bcec0f2f1 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/lzo_lzo_compress_target done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lzo_lzo_compress_target:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:39b43ba7eb659a4eb162a8b84ca39af764b9c545dfc66df05e9fd676dbd8b30d
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:691f00018970e887ab924fe0c2eacc2c999a447fcd5b3daf714c24b122060fce
#2 transferring context:
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/lzo_lzo_compress_target:latest
#3 sha256:f5ec9e9359a442a727946f3234dbfb899ed5b34bc9f541ece787396431ef4a09
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/lzo_lzo_compress_target
#5 sha256:5a0b540267164f01412c68661ee673b3502a28b875dc82df0f28757504417cb3
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target-intermediate
#4 sha256:0533b6d2c0d8819eeae0f115054effff180491b8dab752588b4f3559b76d007f
#4 ERROR: gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target-intermediate:latest: not found

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:1448b336a1eca593895ffb28bffe3df04d4cb71a223a4671ee25a1e536d6480f
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:36b7fc1eef00ef4d44bc410d8d04aba12fc5a2a87db7ce9f7ad1aa73f734e695
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:9aa7b88734264d39c6bbb6110199c4e9640b6e3ee91d3d6028b8b8f496ec1263 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:245eb6b9cec801cacf018249f5733b513907fdfbd08b47a42f98550f34f0d1ec
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:503ca8942c0e67b1157ff95a50486c90b9377714060999519b32d1ce4a74c807
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 [1/7] FROM docker.io/library/ubuntu:xenial
#4 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#4 DONE 0.0s

#12 importing cache manifest from gcr.io/fuzzbench/base-image
#12 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#12 DONE 0.0s

#7 [internal] load build context
#7 sha256:66f84c10d99674975438fa36cc81e5f8ddc5515bcf99febe3a2a8e945a81abf6
#7 transferring context: 591B 0.1s done
#7 DONE 0.1s

#8 [4/7] COPY ./requirements.txt /
#8 sha256:8709b26f9838f5ad569ef30d935670755d0ae94a8b1b6625e6311f793d7720fb
#8 CACHED

#9 [5/7] RUN pip3 install -r /requirements.txt
#9 sha256:a373f28a948f9853d149399a041ab3f8995794066f7987a175caf777a03b8734
#9 CACHED

#10 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#10 sha256:fa52b965f41393478f895653f625fb4c3391a5a97c6728ab765193ffcca9f8c3
#10 CACHED

#5 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#5 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#5 CACHED

#6 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#6 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#6 CACHED

#11 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#11 sha256:124c00987f3d7317b1326e2482aa22689226a53e5ede178cc111e475a89096aa
#11 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:421fd4bc2fd3686d2d38fb2dd0ae32aea018ff1219ecd7c9dbfcb1172525f564
#13 writing image sha256:421fd4bc2fd3686d2d38fb2dd0ae32aea018ff1219ecd7c9dbfcb1172525f564 done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:84541ac9571c18fc64cb0e57242ace601824225a9de6e99092d195e044c6d862
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:0be4526251a370b5a56d0aa6467a70917d17659f935525d9651c9c932527defe
#2 transferring context: 34B done
#2 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target-intermediate:latest
#4 sha256:5b354102f9d5380fb85d8ba845e889176a82bfa2d1f5d6d962a6834fb5f2cb24
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:3a334ecf8e1a4b891e151960bc429aab48b6084893d79d2f979f817afd026a7e
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target-intermediate
#6 sha256:727babeddead958b31f63abd0b42ca9d6747b6f38c12a2997c1d3fcacd73fca6
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target
#5 sha256:e623f8feb5c1d5fcad8c18f4b4cdd912880b962ac9b31b70cc56dc1f1913934a
#5 ERROR: gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target:latest: not found

#12 [internal] load build context
#12 sha256:3a334ecf8e1a4b891e151960bc429aab48b6084893d79d2f979f817afd026a7e
#12 transferring context: 742.40kB 0.2s done
#12 DONE 0.2s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:63aac8e984f0fffa57d1f946a38c876d1e5bca6333f6f8961643c4dc2734b1c6
#11 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:b9276b00dc7f5f9c077b8d983d4cfefa98cffe470e558323c92ca74e8414a744
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:04f93d97e5ff833527f258b02953b459f2be482540faf490d5684d484700d69b
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:8bfebcbdab8cbdfe718501416c25412cb66610f50b388d8c83a31a8f6211f4ab
#10 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:7252d291b6c2d9a4e24ecbf48b1eecf16085b7e68413694fd2e8b322886a7b2b
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:b68a8817de0feaf1b0766347cca5fe72a968c246d34aa2c7a7ee357edc4c9901
#14 DONE 1.6s

#15 [stage-1  8/13] COPY benchmarks/lzo_lzo_compress_target/benchmark.yaml /
#15 sha256:e5055151d3aafab84c627d12db400a3209f901ad762eef03560fbd6526960b9a
#15 DONE 0.2s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:4d9ff97eb19df62bbc9abbf525a7b7520e9d7a17df499993b78fed6ca6025e9b
#16 DONE 1.7s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:4eb15e181a6e44e376149d5db26ac9745a82d2e5c2b92787c219a79200d56f6f
#17 DONE 0.1s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:1b5dc6151114cd112aef0d5b8f4a1caf3523af57efb573ed404574308368339b
#18 1.340 Checking out commit d561c49a
#18 1.351 error: pathspec 'd561c49a' did not match any file(s) known to git
#18 1.368 error: pathspec 'd561c49a' did not match any file(s) known to git
#18 1.466 Checkout unsuccessful.
#18 DONE 1.6s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:643fb53fd2b4d379f8902548d9c5bfd0b55f5e671be5bf241ed497ff2e954606
#19 DONE 1.1s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:cfb670363913a4088afc8249f0765dde3cd91adf8950fed9da96fe335c2ff342
#20 1.096 Run fuzzer_build to build the target
#20 1.340 FUZZ_TARGET = lzo_compress_target
#20 1.340 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 1.340 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 1.352 Building benchmark lzo_lzo_compress_target with fuzzer afl
#20 1.357 + cd /src
#20 1.357 + tar xzf lzo.tar.gz
#20 1.465 + cd lzo-2.10
#20 1.465 + ./configure
#20 2.053 configure: Configuring LZO 2.10
#20 2.116 checking build system type... x86_64-pc-linux-gnu
#20 2.358 checking host system type... x86_64-pc-linux-gnu
#20 2.360 checking target system type... x86_64-pc-linux-gnu
#20 2.361 checking whether to enable maintainer-specific portions of Makefiles... no
#20 2.363 checking for gcc... clang
#20 2.594 checking whether the C compiler works... yes
#20 2.949 checking for C compiler default output file name... a.out
#20 2.953 checking for suffix of executables... 
#20 3.232 checking whether we are cross compiling... no
#20 3.606 checking for suffix of object files... o
#20 3.672 checking whether we are using the GNU C compiler... yes
#20 3.754 checking whether clang accepts -g... yes
#20 3.825 checking for clang option to accept ISO C89... none needed
#20 3.950 checking whether clang understands -c and -o together... yes
#20 4.076 checking for ar... ar
#20 4.079 checking the archiver (ar) interface... ar
#20 4.177 checking for style of include used by make... GNU
#20 4.206 checking dependency style of clang... gcc3
#20 4.347 checking how to run the C preprocessor... clang -E
#20 4.628 checking whether the C preprocessor needs special flags... none needed
#20 4.738 checking for an ANSI C-conforming const... yes
#20 4.834 checking for grep that handles long lines and -e... /usr/bin/grep
#20 4.848 checking for egrep... /usr/bin/grep -E
#20 4.856 checking for ANSI C header files... yes
#20 5.566 checking for sys/types.h... yes
#20 5.689 checking for sys/stat.h... yes
#20 5.838 checking for stdlib.h... yes
#20 5.978 checking for string.h... yes
#20 6.127 checking for memory.h... yes
#20 6.273 checking for strings.h... yes
#20 6.421 checking for inttypes.h... yes
#20 6.610 checking for stdint.h... yes
#20 6.752 checking for unistd.h... yes
#20 6.911 checking whether byte ordering is bigendian... no
#20 7.165 checking for special C compiler options needed for large files... no
#20 7.166 checking for _FILE_OFFSET_BITS value needed for large files... no
#20 7.261 checking for a BSD-compatible install... /usr/bin/install -c
#20 7.297 checking whether build environment is sane... yes
#20 7.323 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 7.331 checking for gawk... no
#20 7.333 checking for mawk... mawk
#20 7.335 checking whether make sets $(MAKE)... yes
#20 7.359 checking whether make supports nested variables... yes
#20 7.391 checking dependency style of clang... gcc3
#20 7.551 checking whether make supports nested variables... (cached) yes
#20 7.556 checking how to print strings... printf
#20 7.708 checking for a sed that does not truncate output... /usr/bin/sed
#20 7.737 checking for fgrep... /usr/bin/grep -F
#20 7.747 checking for ld used by clang... /usr/bin/ld
#20 7.793 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 7.800 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 7.824 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 7.922 checking whether ln -s works... yes
#20 7.924 checking the maximum length of command line arguments... 1572864
#20 7.966 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 7.967 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 7.969 checking for /usr/bin/ld option to reload object files... -r
#20 7.971 checking for objdump... objdump
#20 7.976 checking how to recognize dependent libraries... pass_all
#20 7.983 checking for dlltool... no
#20 7.994 checking how to associate runtime and link libraries... printf %s\n
#20 7.996 checking for archiver @FILE support... @
#20 8.105 checking for strip... strip
#20 8.107 checking for ranlib... ranlib
#20 8.114 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 8.567 checking for sysroot... no
#20 8.641 checking for mt... no
#20 8.644 checking if : is a manifest tool... no
#20 8.669 checking for dlfcn.h... yes
#20 8.868 checking for objdir... .libs
#20 9.302 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 9.383 checking for clang option to produce PIC... -fPIC -DPIC
#20 9.383 checking if clang PIC flag -fPIC -DPIC works... yes
#20 9.472 checking if clang static flag -static works... yes
#20 9.980 checking if clang supports -c -o file.o... yes
#20 10.09 checking if clang supports -c -o file.o... (cached) yes
#20 10.09 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 10.17 checking dynamic linker characteristics... GNU/Linux ld.so
#20 10.60 checking how to hardcode library paths into programs... immediate
#20 10.60 checking whether stripping libraries is possible... yes
#20 10.62 checking if libtool supports shared libraries... yes
#20 10.62 checking whether to build shared libraries... no
#20 10.62 checking whether to build static libraries... yes
#20 10.63 checking whether time.h and sys/time.h may both be included... yes
#20 10.77 checking assert.h usability... yes
#20 10.96 checking assert.h presence... yes
#20 11.05 checking for assert.h... yes
#20 11.08 checking ctype.h usability... yes
#20 11.25 checking ctype.h presence... yes
#20 11.32 checking for ctype.h... yes
#20 11.35 checking dirent.h usability... yes
#20 11.50 checking dirent.h presence... yes
#20 11.56 checking for dirent.h... yes
#20 11.59 checking errno.h usability... yes
#20 11.79 checking errno.h presence... yes
#20 11.86 checking for errno.h... yes
#20 11.90 checking fcntl.h usability... yes
#20 12.05 checking fcntl.h presence... yes
#20 12.12 checking for fcntl.h... yes
#20 12.15 checking float.h usability... yes
#20 12.32 checking float.h presence... yes
#20 12.40 checking for float.h... yes
#20 12.44 checking limits.h usability... yes
#20 12.60 checking limits.h presence... yes
#20 12.65 checking for limits.h... yes
#20 12.69 checking malloc.h usability... yes
#20 12.84 checking malloc.h presence... yes
#20 12.90 checking for malloc.h... yes
#20 12.93 checking for memory.h... (cached) yes
#20 12.97 checking setjmp.h usability... yes
#20 13.12 checking setjmp.h presence... yes
#20 13.20 checking for setjmp.h... yes
#20 13.23 checking signal.h usability... yes
#20 13.36 checking signal.h presence... yes
#20 13.44 checking for signal.h... yes
#20 13.46 checking stdarg.h usability... yes
#20 13.58 checking stdarg.h presence... yes
#20 13.62 checking for stdarg.h... yes
#20 13.65 checking stddef.h usability... yes
#20 13.80 checking stddef.h presence... yes
#20 13.86 checking for stddef.h... yes
#20 13.89 checking for stdint.h... (cached) yes
#20 13.94 checking stdio.h usability... yes
#20 14.09 checking stdio.h presence... yes
#20 14.15 checking for stdio.h... yes
#20 14.18 checking for stdlib.h... (cached) yes
#20 14.21 checking for string.h... (cached) yes
#20 14.23 checking for strings.h... (cached) yes
#20 14.27 checking time.h usability... yes
#20 14.42 checking time.h presence... yes
#20 14.50 checking for time.h... yes
#20 14.53 checking for unistd.h... (cached) yes
#20 14.57 checking utime.h usability... yes
#20 14.73 checking utime.h presence... yes
#20 14.77 checking for utime.h... yes
#20 14.81 checking sys/mman.h usability... yes
#20 14.95 checking sys/mman.h presence... yes
#20 15.01 checking for sys/mman.h... yes
#20 15.04 checking sys/resource.h usability... yes
#20 15.18 checking sys/resource.h presence... yes
#20 15.26 checking for sys/resource.h... yes
#20 15.29 checking for sys/stat.h... (cached) yes
#20 15.33 checking sys/time.h usability... yes
#20 15.48 checking sys/time.h presence... yes
#20 15.53 checking for sys/time.h... yes
#20 15.57 checking for sys/types.h... (cached) yes
#20 15.60 checking sys/wait.h usability... yes
#20 15.78 checking sys/wait.h presence... yes
#20 15.84 checking for sys/wait.h... yes
#20 15.85 checking whether limits.h is sane... yes
#20 15.95 checking for off_t... yes
#20 16.67 checking for ptrdiff_t... yes
#20 16.99 checking for size_t... yes
#20 17.29 checking return type of signal handlers... void
#20 17.40 checking size of short... 2
#20 17.88 checking size of int... 4
#20 18.36 checking size of long... 8
#20 18.76 checking size of long long... 8
#20 19.15 checking size of __int16... 0
#20 19.30 checking size of __int32... 0
#20 19.45 checking size of __int64... 0
#20 19.67 checking size of void *... 8
#20 20.04 checking size of size_t... 8
#20 20.50 checking size of ptrdiff_t... 8
#20 21.01 checking size of __int32... (cached) 0
#20 21.02 checking size of intmax_t... 8
#20 21.48 checking size of uintmax_t... 8
#20 21.85 checking size of intptr_t... 8
#20 22.18 checking size of uintptr_t... 8
#20 22.53 checking size of float... 4
#20 22.96 checking size of double... 8
#20 23.32 checking size of long double... 16
#20 23.70 checking size of dev_t... 8
#20 24.07 checking size of fpos_t... 16
#20 24.55 checking size of mode_t... 4
#20 24.99 checking size of off_t... 8
#20 25.41 checking size of ssize_t... 8
#20 25.85 checking size of time_t... 8
#20 26.32 checking for access... yes
#20 26.70 checking for alloca... no
#20 27.01 checking for atexit... yes
#20 27.34 checking for atoi... yes
#20 27.73 checking for atol... yes
#20 28.08 checking for chmod... yes
#20 28.41 checking for chown... yes
#20 28.75 checking for clock_getcpuclockid... yes
#20 29.17 checking for clock_getres... yes
#20 29.55 checking for clock_gettime... yes
#20 29.93 checking for ctime... yes
#20 30.28 checking for difftime... yes
#20 30.68 checking for fstat... yes
#20 31.09 checking for getenv... yes
#20 31.42 checking for getpagesize... yes
#20 31.77 checking for getrusage... yes
#20 32.13 checking for gettimeofday... yes
#20 32.52 checking for gmtime... yes
#20 32.87 checking for isatty... yes
#20 33.19 checking for localtime... yes
#20 33.52 checking for longjmp... yes
#20 33.94 checking for lstat... yes
#20 34.29 checking for memcmp... yes
#20 34.65 checking for memcpy... yes
#20 34.99 checking for memmove... yes
#20 35.31 checking for memset... yes
#20 35.61 checking for mkdir... yes
#20 35.93 checking for mktime... yes
#20 36.29 checking for mmap... yes
#20 36.64 checking for mprotect... yes
#20 37.01 checking for munmap... yes
#20 37.33 checking for qsort... yes
#20 37.65 checking for raise... yes
#20 37.98 checking for rmdir... yes
#20 38.40 checking for setjmp... yes
#20 38.81 checking for signal... yes
#20 39.24 checking for snprintf... yes
#20 39.56 checking for strcasecmp... yes
#20 39.94 checking for strchr... yes
#20 40.33 checking for strdup... yes
#20 40.77 checking for strerror... yes
#20 41.16 checking for strftime... yes
#20 41.52 checking for stricmp... no
#20 41.83 checking for strncasecmp... yes
#20 42.20 checking for strnicmp... no
#20 42.55 checking for strrchr... yes
#20 42.95 checking for strstr... yes
#20 43.38 checking for time... yes
#20 43.73 checking for umask... yes
#20 44.07 checking for utime... yes
#20 44.49 checking for vsnprintf... yes
#20 44.88 checking whether to build assembly versions... no
#20 44.98 checking whether your compiler passes the LZO conformance test... yes
#20 45.44 checking that generated files are newer than configure... done
#20 45.44 configure: creating ./config.status
#20 48.32 config.status: creating Makefile
#20 48.41 config.status: creating lzo2.pc
#20 48.48 config.status: creating config.h
#20 48.53 config.status: executing depfiles commands
#20 49.52 config.status: executing libtool commands
#20 49.59 
#20 49.59    LZO configuration summary
#20 49.59    -------------------------
#20 49.59    LZO version                : 2.10
#20 49.59    configured for host        : x86_64-pc-linux-gnu
#20 49.59    source code location       : .
#20 49.59    compiler                   : clang
#20 49.59    preprocessor definitions   : -DLZO_HAVE_CONFIG_H=1
#20 49.59    preprocessor flags         : 
#20 49.59    compiler flags             : -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard
#20 49.59    build static library       : yes
#20 49.59    build shared library       : no
#20 49.59    enable i386 assembly code  : no
#20 49.59 
#20 49.59 
#20 49.59    LZO 2.10 configured.
#20 49.59 
#20 49.59    Copyright (C) 1996-2017 Markus Franz Xaver Johannes Oberhumer
#20 49.59    All Rights Reserved.
#20 49.59 
#20 49.59    The LZO library is free software; you can redistribute it and/or
#20 49.59    modify it under the terms of the GNU General Public License as
#20 49.59    published by the Free Software Foundation; either version 2 of
#20 49.59    the License, or (at your option) any later version.
#20 49.59 
#20 49.59    The LZO library is distributed in the hope that it will be useful,
#20 49.59    but WITHOUT ANY WARRANTY; without even the implied warranty of
#20 49.59    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#20 49.59    GNU General Public License for more details.
#20 49.59 
#20 49.59    Markus F.X.J. Oberhumer
#20 49.59    <markus@oberhumer.com>
#20 49.59    http://www.oberhumer.com/opensource/lzo/
#20 49.59 
#20 49.59 
#20 49.59 Type 'make' to build LZO.
#20 49.59 Type 'make check' and 'make test' to test LZO.
#20 49.59 Type 'make install' to install LZO.
#20 49.59 After installing LZO, please have a look at 'examples/simple.c'.
#20 49.59 
#20 49.77 ++ nproc
#20 49.78 + make -j8
#20 49.81 make  all-am
#20 49.86 make[1]: Entering directory '/src/lzo-2.10'
#20 49.99   CC       src/lzo1.lo
#20 49.99   CC       src/lzo1_99.lo
#20 50.01   CC       src/lzo1a.lo
#20 50.02   CC       src/lzo1a_99.lo
#20 50.02   CC       src/lzo1b_1.lo
#20 50.05   CC       src/lzo1b_2.lo
#20 50.06   CC       src/lzo1b_3.lo
#20 50.08   CC       src/lzo1b_4.lo
#20 54.77   CC       src/lzo1b_5.lo
#20 54.89   CC       src/lzo1b_6.lo
#20 55.49   CC       src/lzo1b_7.lo
#20 55.77   CC       src/lzo1b_8.lo
#20 55.98   CC       src/lzo1b_9.lo
#20 56.48   CC       src/lzo1b_99.lo
#20 56.85   CC       src/lzo1b_9x.lo
#20 57.45   CC       src/lzo1b_cc.lo
#20 60.15   CC       src/lzo1b_d1.lo
#20 60.48   CC       src/lzo1b_d2.lo
#20 61.11   CC       src/lzo1b_rr.lo
#20 61.57   CC       src/lzo1b_xx.lo
#20 61.75   CC       src/lzo1c_1.lo
#20 61.77   CC       src/lzo1c_2.lo
#20 62.95   CC       src/lzo1c_3.lo
#20 63.49   CC       src/lzo1c_4.lo
#20 65.30   CC       src/lzo1c_5.lo
#20 65.90   CC       src/lzo1c_6.lo
#20 66.08   CC       src/lzo1c_7.lo
#20 66.51   CC       src/lzo1c_8.lo
#20 67.37   CC       src/lzo1c_9.lo
#20 67.54   CC       src/lzo1c_99.lo
#20 68.15   CC       src/lzo1c_9x.lo
#20 69.02   CC       src/lzo1c_cc.lo
#20 71.87   CC       src/lzo1c_d1.lo
#20 72.27   CC       src/lzo1c_d2.lo
#20 72.44   CC       src/lzo1c_rr.lo
#20 72.75   CC       src/lzo1c_xx.lo
#20 73.11   CC       src/lzo1f_1.lo
#20 73.63   CC       src/lzo1f_9x.lo
#20 73.79   CC       src/lzo1f_d1.lo
#20 74.45   CC       src/lzo1f_d2.lo
#20 77.32   CC       src/lzo1x_1.lo
#20 77.52   CC       src/lzo1x_1k.lo
#20 77.66   CC       src/lzo1x_1l.lo
#20 78.91   CC       src/lzo1x_1o.lo
#20 78.96   CC       src/lzo1x_9x.lo
#20 79.26   CC       src/lzo1x_d1.lo
#20 80.97   CC       src/lzo1x_d2.lo
#20 81.06   CC       src/lzo1x_d3.lo
#20 83.15   CC       src/lzo1x_o.lo
#20 83.57   CC       src/lzo1y_1.lo
#20 83.72   CC       src/lzo1y_9x.lo
#20 84.53   CC       src/lzo1y_d1.lo
#20 84.72   CC       src/lzo1y_d2.lo
#20 86.57   CC       src/lzo1y_d3.lo
#20 87.81   CC       src/lzo1y_o.lo
#20 88.82   CC       src/lzo1z_9x.lo
#20 89.48   CC       src/lzo1z_d1.lo
#20 89.84   CC       src/lzo1z_d2.lo
#20 90.14   CC       src/lzo1z_d3.lo
#20 90.23   CC       src/lzo2a_9x.lo
#20 93.00   CC       src/lzo2a_d1.lo
#20 93.52   CC       src/lzo2a_d2.lo
#20 93.58   CC       src/lzo_crc.lo
#20 94.66   CC       src/lzo_init.lo
#20 95.49   CC       src/lzo_ptr.lo
#20 96.44   CC       src/lzo_str.lo
#20 97.29   CC       src/lzo_util.lo
#20 98.08   CC       examples/dict.o
#20 98.10   CC       examples/lzopack.o
#20 98.36   CC       examples/overlap.o
#20 99.06   CC       examples/precomp.o
#20 99.72   CC       examples/precomp2.o
#20 99.77   CC       examples/simple.o
#20 99.80   CC       lzotest/lzotest.o
#20 99.88   CC       tests/align.o
#20 100.4   CC       tests/chksum.o
#20 100.8   CC       tests/promote.o
#20 101.0   CC       tests/sizes.o
#20 101.3   CC       minilzo/t-testmini.o
#20 101.3   CC       minilzo/t-minilzo.o
#20 101.4   CCLD     tests/promote
#20 101.5   CCLD     tests/sizes
#20 102.1   CCLD     src/liblzo2.la
#20 105.3   CCLD     minilzo/testmini
#20 106.2 ar: `u' modifier ignored since `D' is the default (see `U')
#20 106.5   CCLD     examples/dict
#20 106.5   CCLD     examples/overlap
#20 106.5   CCLD     examples/lzopack
#20 106.5   CCLD     examples/precomp
#20 106.5   CCLD     examples/precomp2
#20 106.5   CCLD     examples/simple
#20 108.5   CCLD     tests/align
#20 109.9   CCLD     tests/chksum
#20 111.7   CCLD     lzotest/lzotest
#20 114.1 make[1]: Leaving directory '/src/lzo-2.10'
#20 114.1 + for file in $SRC/*.c
#20 114.1 ++ basename /src/lzo_compress_target.c .c
#20 114.1 + name=lzo_compress_target
#20 114.1 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -I include -I minilzo -I include/lzo /src/lzo_compress_target.c -o lzo_compress_target.o
#20 114.2 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I include -I minilzo -I include/lzo lzo_compress_target.o -o /out/lzo_compress_target /libAFL.a src/.libs/liblzo2.a
#20 114.8 + for file in $SRC/*.c
#20 114.8 ++ basename /src/lzo_decompress_target.c .c
#20 114.8 + name=lzo_decompress_target
#20 114.8 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -I include -I minilzo -I include/lzo /src/lzo_decompress_target.c -o lzo_decompress_target.o
#20 114.9 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I include -I minilzo -I include/lzo lzo_decompress_target.o -o /out/lzo_decompress_target /libAFL.a src/.libs/liblzo2.a
#20 115.5 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I include -I minilzo -I include/lzo /src/all_lzo_compress.cc -o /out/all_lzo_compress /libAFL.a src/.libs/liblzo2.a
#20 118.4 + cp /src/lzo_compress_target.options /src/lzo_decompress_target.options /out/
#20 118.4 + zip -j /out/lzo_decompress_target_seed_corpus.zip /src/lzo_decompress_target_seeds/seed.lzo
#20 118.4   adding: seed.lzo (deflated 6%)
#20 118.4 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 119.1s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:2f0f5155665241429d341ffc26e53b48941401e96fdb9da0fa9385554108ac7b done
#21 naming to gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:ceea56e7232a14b483a3a4f1252789661f849b52e7bc9219ff7332204ef746a8
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:3a055a65d428dbbf9cf2a8aabee339f95cf79dcc1ed8a073b87ff2dfa7850d1f
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:2d70b12f7febc4bbdb90c915fe725c67a492af7bfbaab726410d4db571339d67 done
#6 naming to gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target-intermediate
#5 sha256:984b8733a3f35ce35176e1ce91a09a5f427a5b9fe8ca96b7ce6c1186d62c7580
#5 ERROR: gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target-intermediate:latest: not found
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:04b5456aeba169674ee410bccd472fe99cc6fd4faeb8a4d93f3a669041b46983
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:81845ba9775e7f33ee84177792a8f99c8b14d76ba08a7891ded41a62e08ba1d2
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target-intermediate:latest
#3 sha256:97a36ef8d19d92615cc79cb6ac74ba707dd146f6388c452ffc1ff91cd0a8d3d8
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target:latest
#4 sha256:84a9e25f2b5b36df5f3ff113346521dd60880e2132124c5a01bd556f50a4a486
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:9d12139f66835d31b459615c728a151457e64496d95d00aebb061e67a7d593cb
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target-intermediate
#6 sha256:0437d568ce64fc268441b04623bc639bff417f46529de3b41c185553b25c0f8c
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target
#10 sha256:387dbceced38672d6a9002362988778094031314ff004ddf11344cc91db4e80e
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target
#5 sha256:93da7dfefbae7c843951b953fb16a242ba95d46bf039ced3eaedb5ce466f0784
#5 ERROR: gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target:latest: not found

#12 [internal] load build context
#12 sha256:9d12139f66835d31b459615c728a151457e64496d95d00aebb061e67a7d593cb
#12 transferring context: 9.04MB 0.5s done
#12 DONE 0.6s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target
#10 sha256:387dbceced38672d6a9002362988778094031314ff004ddf11344cc91db4e80e
#10 DONE 0.8s

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:b5148ee283555d98ff60be89d37cf6ef87e377a6782ca773ff9f61d814d94391
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:403847561eb2f5388ecbceeb9828c7be277cb93ee5dc6a74a783f6098dba69b7
#9 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:eec26aa3a06a9d73a3679fe088d803b45fdb0f2e5bf9131d30dbd57a01daf0d1
#7 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:e87fcb9a37f42638bcb37e5e009373ec74d1bc169a1e5c40a555c4998c7a14a7
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:867969ae6feb347672f3ec445a2656cbd1b02add226ff6133a5831959ac2d5d5
#13 DONE 0.4s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:74f6758825d0f4b44ba6ceaa5253642aceb06aea8a042fc47943ff290f43c7d8
#14 DONE 0.3s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:d1e69442a29dffccc3f3ab74287f4a7d35f5fcd6010435cacb1d62ae91b4d023
#15 DONE 1.3s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:7f68216d8441e392eabdf0ba8644c29858a181e247acdea2ceb6f1a2931a1d24
#16 DONE 1.7s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:3a5d27d4f55fa3f91430cc3299d36edcbc34c0a6e6e1749e6d0e2ff47d6d1d15
#17 DONE 0.2s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:89f19271c3ecfbd4ee1ebccd42073c4db0eeda36ad1a180eb603ef1a004ae0d2
#18 DONE 0.2s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:e21adc36f56fe5ac6fc6a1ed54a355106c849aa79e6bf0c26006c6642c3b0ac7
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:76b70173180f3d29ab91300df2fc88e10d4718c11416fd8e52ae60dca09896bd
#20 DONE 1.2s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:9566944c06f33dbe278485f1467d95d855c3c3fe7bf7b75cf2615c39d8caec04 done
#21 naming to gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target done
#21 DONE 0.0s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Doing final sync.
