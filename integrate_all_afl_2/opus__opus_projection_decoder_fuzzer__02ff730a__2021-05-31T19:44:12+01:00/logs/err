WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: opus_opus_projection_decoder_fuzzer.
INFO:root:Please run "make test-run-afl-opus_opus_projection_decoder_fuzzer" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:71b4739064615246ad416105922079973287b5b8579c6044c0d636536ff9d722
#1 transferring dockerfile: 1.30kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:8243965122732c5f88806255564e48bf3b586e6488e3f171579ca82d4de1d305
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#12 [internal] load build context
#12 sha256:a69a21417644885bd76ca9499b3efa1f82f3307b3f0423ca1e8ec9bd7f72203a
#12 DONE 0.0s

#5 [1/9] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#5 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/opus_opus_projection_decoder_fuzzer
#4 sha256:fa9f17f3c083efd226ddf5038f27ba3fddf4ad64110d98c4a0c7a7814d9d4ca0
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/opus_opus_projection_decoder_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:a69a21417644885bd76ca9499b3efa1f82f3307b3f0423ca1e8ec9bd7f72203a
#12 transferring context: 4.69kB done
#12 DONE 0.1s

#8 [4/9] RUN sed -i -e 's/xenial/bionic/g' /etc/apt/sources.list
#8 sha256:ed90565ac39226fdb08275fd2580fdbb159c9629c0df13c71eddfd11130c7cc9
#8 CACHED

#6 [2/9] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#6 sha256:4a36570962698a9dd6707bba1ce7d1da85f2389d0ec6c6f4efe406fbfa0cedec
#6 CACHED

#11 [7/9] WORKDIR opus
#11 sha256:59d8c77354e07fb423f55dc0b9110ef739a40010ee1a5f6ed2d1e22a23ee8688
#11 CACHED

#13 [8/9] COPY build.sh /src/
#13 sha256:9452ddcd9e87083fb1b84b212b83a173ea0fc3f2ecc821e9736ab3ec3a1ed437
#13 CACHED

#10 [6/9] RUN wget https://opus-codec.org/static/testvectors/opus_testvectors.tar.gz
#10 sha256:a64c8b1cf66ec0c7bf19004594b5f0373d8ad527ee5087dc9174fa412dcd8023
#10 CACHED

#7 [3/9] RUN git clone https://gitlab.xiph.org/xiph/opus.git
#7 sha256:eb94f818b8dc5b4189af35d254c1a8d2882550d13d902bcfac1ae60b8af398e6
#7 CACHED

#9 [5/9] RUN apt-get update && apt-get install -y --reinstall wget
#9 sha256:bcad1c7781215707971594a4823963ebbe77c87a3490a635677366651d87ee4a
#9 CACHED

#14 [9/9] COPY *.c tests/
#14 sha256:72bb1b95fcf319c53e35003f419b6153f328f8128e919178ca883c010e585a14
#14 CACHED

#15 exporting to image
#15 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#15 exporting layers done
#15 writing image sha256:08d9a51d37e37c7549100657ca63d0280c8a7a5cbd025cd87e146c0e735f20fd done
#15 naming to gcr.io/fuzzbench/builders/benchmark/opus_opus_projection_decoder_fuzzer
#15 naming to gcr.io/fuzzbench/builders/benchmark/opus_opus_projection_decoder_fuzzer done
#15 DONE 0.2s

#16 exporting cache
#16 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#16 preparing build cache for export done
#16 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/opus_opus_projection_decoder_fuzzer:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:91beab7e47ca18f2b174f88f60f64c3034e8b42515f1f4c76aae905316311e16
#1 DONE 0.0s

#1 [internal] load build definition from builder.Dockerfile
#1 sha256:91beab7e47ca18f2b174f88f60f64c3034e8b42515f1f4c76aae905316311e16
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:7b9037e8ce6d184b1e028072d30b66810192c71d904226004b568f2b5a1b5207
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/opus_opus_projection_decoder_fuzzer:latest
#3 sha256:eff5b139ddbc7633439117a558f2ff51f4937e93eeedb7e4dd1b4c801d1af20e
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/opus_opus_projection_decoder_fuzzer
#5 sha256:bdbde5ead31d041d5da129340070c68db8216f2fbc1d6e7a39d5abeb38b7260d
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus_projection_decoder_fuzzer-intermediate
#4 sha256:373b65db108d3d8624a8b72a6691430880cc75affac2ea9380df617eeb649aca
#4 ERROR: gcr.io/fuzzbench/builders/afl/opus_opus_projection_decoder_fuzzer-intermediate:latest: not found

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:34049c3d74c9f9d87482423cc5095a0da9882b5e2e0197318dbdb7b04c4970f9
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:abe2d1224d0eea4b9a1d4fcc97cd7186deed83bc9a36a34ca36dfc25420f9aac
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:fe9b7fafc65cc8515203f90b7922e772fee32b23aacc48abac64be680bba8bfe done
#8 naming to gcr.io/fuzzbench/builders/afl/opus_opus_projection_decoder_fuzzer-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus_projection_decoder_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:b3a482773888edb30c5730282f323e2de67cbbcdf89252f05e228c50187ec8af
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:9ff750ce7cc85725ac5aa1ceaa47e27055bc27e35c7bac869c920e16a9c8c599
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:a6a4ab82c22ea529b31a52e9e6d7d928c0bc38a160fbbab6e2451a2cdab556a5
#8 transferring context: 591B 0.0s done
#8 DONE 0.1s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:23bc9d7d8082bed31d59d350ca1381f91daf806b3a70691f5dc6416e4a28d329
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:c7e3ae0f419b63057dd155c100d331cf02e39374c2858cae71f895a8c012eb22
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:6fe4ee055bf363fd23e9fd3ccff96e64c8ea5003559e279b1d64c7e09a809147
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:8ee5dc9fb048d3dd1a08bf23d7ec431faa13fce8e5ccc1a42737e393154e81d9
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:5fb2f80ccab2180926bb2bc5ede0619da567b589e8773822348f5143b515f16f done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:2a5d814507e0e3115775ce0a837c0c614aa8da90340af82421f71a54af4a0917
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:0b4f3d0c15d0d1e80bfd20835c612622799171028d11a487de025bd54fdf6aa2
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/opus_opus_projection_decoder_fuzzer-intermediate:latest
#3 sha256:8dbe21538cd07e8105dc31e9dc9f9b08c919f01233d224b80a0cd675fc7f9612
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:e17670ca06494da16e43d82d61abe1257c294cfacd0a2605f5b12e09798fa897
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/opus_opus_projection_decoder_fuzzer-intermediate
#6 sha256:0756077d779e00064f2fa9292807112585d8ba6c54df99540a218b4b4a171753
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus_projection_decoder_fuzzer
#5 sha256:1b55d99360d149c481bf7bee8c706ff0b7d795cb0d4cfff24399c814d344a842
#5 ERROR: gcr.io/fuzzbench/builders/afl/opus_opus_projection_decoder_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:e17670ca06494da16e43d82d61abe1257c294cfacd0a2605f5b12e09798fa897
#12 transferring context: 742.44kB 0.1s done
#12 DONE 0.1s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:42c971bfa1810cc455104903c15039a5aee521cd04e2fa69f1ed18ff2a2283c7
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:751253d32f7542c11364c4e406416a3da75147ffe61dc835db9a0045b9a3bd0b
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:0721b93cfcd73e38c44a7f1ce4a6696988cb66ee6e42babef3e67fc0d2ff9174
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:df7d8f562bb47c6f1c8302f6217199821f031c2a5ba408cdf8ee9d9b011b5683
#11 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:89789a2c2fae8e9ac72b344e904ad91468513ba0a463d83fa273ede629e5708c
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:f7c5679db4fa7ce2f0fdb455d752d930b3c110e28c2be98b8374d302311a3a9b
#14 DONE 0.6s

#15 [stage-1  8/13] COPY benchmarks/opus_opus_projection_decoder_fuzzer/benchmark.yaml /
#15 sha256:0f5ec54f45166ae6266a64fb5e1b373085b2f071be619a4c0b1c3d1eb04011d0
#15 DONE 0.3s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:9995c72417bde16371b760bfd3cc114ecd74c07aa82ddf55baf4be9af8a87681
#16 DONE 0.5s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:3b84f87cebd79eb7f6da1602c75749e9e5129c713673db942fe3b7faa0c0788c
#17 DONE 0.2s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:3cd193b5cb49cd27242f15bb871ebcb33ac9957eb50bdb7abb093a35e21df37a
#18 0.432 Checking out commit 02ff730a
#18 0.437 error: pathspec '02ff730a' did not match any file(s) known to git
#18 0.441 error: pathspec '02ff730a' did not match any file(s) known to git
#18 0.450 error: pathspec '02ff730a' did not match any file(s) known to git
#18 0.505 Checkout unsuccessful.
#18 DONE 0.6s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:139280fd94c83dd0c66124472ad5e3acfeb74538ba30f70197f1828b2a3682d9
#19 DONE 0.5s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:cd600260dfb1da9206c494fde0cc48a980b4fa9ecc123f03e84620552d142c88
#20 0.384 Run fuzzer_build to build the target
#20 0.516 FUZZ_TARGET = opus_projection_decoder_fuzzer
#20 0.516 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.516 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.521 Building benchmark opus_opus_projection_decoder_fuzzer with fuzzer afl
#20 0.524 + set -eu
#20 0.524 + FUZZERS='opus_decode_fuzzer opus_multi_fuzzer'
#20 0.524 + BUILDS=(floating fixed)
#20 0.524 + tar xvf /src/opus_testvectors.tar.gz
#20 0.532 opus_testvectors/
#20 0.532 opus_testvectors/testvector11.bit
#20 0.537 opus_testvectors/testvector05.dec
#20 0.640 opus_testvectors/testvector01.bit
#20 0.651 opus_testvectors/testvector07.dec
#20 0.709 opus_testvectors/testvector09.dec
#20 0.785 opus_testvectors/testvector12.bit
#20 0.786 opus_testvectors/testvector03.dec
#20 0.841 opus_testvectors/testvector01.dec
#20 0.900 opus_testvectors/testvector10.bit
#20 0.910 opus_testvectors/testvector03.bit
#20 0.911 opus_testvectors/testvector09.bit
#20 0.919 opus_testvectors/testvector11.dec
#20 0.984 opus_testvectors/testvector10.dec
#20 1.053 opus_testvectors/testvector04.bit
#20 1.054 opus_testvectors/testvector02.bit
#20 1.055 opus_testvectors/testvector06.bit
#20 1.056 opus_testvectors/testvector08.dec
#20 1.116 opus_testvectors/testvector12.dec
#20 1.166 opus_testvectors/testvector08.bit
#20 1.167 opus_testvectors/testvector07.bit
#20 1.170 opus_testvectors/testvector02.dec
#20 1.222 opus_testvectors/testvector06.dec
#20 1.274 opus_testvectors/testvector04.dec
#20 1.326 opus_testvectors/testvector05.bit
#20 1.328 + [[ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard = *sanitize=memory* ]]
#20 1.328 + ./autogen.sh
#20 1.331 Updating build configuration files, please wait....
#20 5.906 libtoolize: putting auxiliary files in '.'.
#20 5.906 libtoolize: linking file './ltmain.sh'
#20 5.992 libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
#20 5.992 libtoolize: linking file 'm4/libtool.m4'
#20 6.040 libtoolize: linking file 'm4/ltoptions.m4'
#20 6.090 libtoolize: linking file 'm4/ltsugar.m4'
#20 6.142 libtoolize: linking file 'm4/ltversion.m4'
#20 6.192 libtoolize: linking file 'm4/lt~obsolete.m4'
#20 10.91 configure.ac:38: installing './compile'
#20 10.91 configure.ac:36: installing './config.guess'
#20 10.91 configure.ac:36: installing './config.sub'
#20 10.91 configure.ac:33: installing './install-sh'
#20 10.91 configure.ac:33: installing './missing'
#20 10.95 Makefile.am:337: warning: '%'-style pattern rules are a GNU make extension
#20 10.95 Makefile.am:340: warning: '%'-style pattern rules are a GNU make extension
#20 10.95 Makefile.am: installing './INSTALL'
#20 11.05 Makefile.am: installing './depcomp'
#20 11.10 parallel-tests: installing './test-driver'
#20 11.20 + for build in "${BUILDS[@]}"
#20 11.20 + case "$build" in
#20 11.20 + extra_args=
#20 11.20 + ./configure --enable-static --disable-shared --disable-doc --enable-assertions
#20 11.44 checking whether make supports nested variables... yes
#20 11.44 checking for a BSD-compatible install... /usr/bin/install -c
#20 11.46 checking whether build environment is sane... yes
#20 11.47 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 11.48 checking for gawk... no
#20 11.48 checking for mawk... mawk
#20 11.48 checking whether make sets $(MAKE)... yes
#20 11.50 checking whether to enable maintainer-specific portions of Makefiles... yes
#20 11.52 checking build system type... x86_64-pc-linux-gnu
#20 11.60 checking host system type... x86_64-pc-linux-gnu
#20 11.61 checking how to print strings... printf
#20 11.66 checking whether make supports the include directive... yes (GNU style)
#20 11.68 checking for gcc... clang
#20 11.77 checking whether the C compiler works... yes
#20 11.92 checking for C compiler default output file name... a.out
#20 11.92 checking for suffix of executables... 
#20 12.06 checking whether we are cross compiling... no
#20 12.22 checking for suffix of object files... o
#20 12.25 checking whether we are using the GNU C compiler... yes
#20 12.28 checking whether clang accepts -g... yes
#20 12.31 checking for clang option to accept ISO C89... none needed
#20 12.37 checking whether clang understands -c and -o together... yes
#20 12.42 checking dependency style of clang... gcc3
#20 12.48 checking for a sed that does not truncate output... /usr/bin/sed
#20 12.49 checking for grep that handles long lines and -e... /usr/bin/grep
#20 12.49 checking for egrep... /usr/bin/grep -E
#20 12.50 checking for fgrep... /usr/bin/grep -F
#20 12.50 checking for ld used by clang... /usr/bin/ld
#20 12.53 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 12.53 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 12.54 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 12.57 checking whether ln -s works... yes
#20 12.57 checking the maximum length of command line arguments... 1572864
#20 12.59 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 12.59 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 12.59 checking for /usr/bin/ld option to reload object files... -r
#20 12.59 checking for objdump... objdump
#20 12.59 checking how to recognize dependent libraries... pass_all
#20 12.59 checking for dlltool... no
#20 12.59 checking how to associate runtime and link libraries... printf %s\n
#20 12.59 checking for ar... ar
#20 12.60 checking for archiver @FILE support... @
#20 12.64 checking for strip... strip
#20 12.64 checking for ranlib... ranlib
#20 12.64 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 12.84 checking for sysroot... no
#20 12.84 checking for a working dd... /usr/bin/dd
#20 12.84 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 12.88 checking for mt... no
#20 12.88 checking if : is a manifest tool... no
#20 12.89 checking how to run the C preprocessor... clang -E
#20 13.01 checking for ANSI C header files... yes
#20 13.28 checking for sys/types.h... yes
#20 13.34 checking for sys/stat.h... yes
#20 13.40 checking for stdlib.h... yes
#20 13.46 checking for string.h... yes
#20 13.52 checking for memory.h... yes
#20 13.58 checking for strings.h... yes
#20 13.65 checking for inttypes.h... yes
#20 13.71 checking for stdint.h... yes
#20 13.78 checking for unistd.h... yes
#20 13.85 checking for dlfcn.h... yes
#20 13.91 checking for objdir... .libs
#20 14.11 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 14.15 checking for clang option to produce PIC... -fPIC -DPIC
#20 14.15 checking if clang PIC flag -fPIC -DPIC works... yes
#20 14.18 checking if clang static flag -static works... yes
#20 14.37 checking if clang supports -c -o file.o... yes
#20 14.42 checking if clang supports -c -o file.o... (cached) yes
#20 14.42 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 14.45 checking dynamic linker characteristics... GNU/Linux ld.so
#20 14.65 checking how to hardcode library paths into programs... immediate
#20 14.65 checking whether stripping libraries is possible... yes
#20 14.66 checking if libtool supports shared libraries... yes
#20 14.66 checking whether to build shared libraries... no
#20 14.66 checking whether to build static libraries... yes
#20 14.66 checking for clang option to accept ISO C99... none needed
#20 14.74 checking for an ANSI C-conforming const... yes
#20 14.77 checking for inline... inline
#20 14.80 checking dependency style of clang... gcc3
#20 14.86 checking for C/C++ restrict keyword... __restrict
#20 14.90 checking for C99 variable-size arrays... yes
#20 14.93 checking for cos in -lm... yes
#20 15.09 checking if compiler supports SSE intrinsics... yes
#20 15.28 checking if compiler supports SSE2 intrinsics... yes
#20 15.48 checking if compiler supports SSE4.1 intrinsics... no
#20 15.60 checking if compiler supports SSE4.1 intrinsics with -msse4.1... yes
#20 15.81 checking if compiler supports AVX intrinsics... no
#20 16.36 checking if compiler supports AVX intrinsics with -mavx... yes
#20 17.00 checking How to get X86 CPU Info... Inline Assembly
#20 17.15 checking if clang supports -fvisibility=hidden... yes
#20 17.18 checking if clang supports -fstack-protector-strong... yes
#20 17.31 checking whether to add -D_FORTIFY_SOURCE=2 to CFLAGS... yes
#20 17.45 checking if clang supports -Wall -Wextra -Wcast-align -Wnested-externs -Wshadow -Wstrict-prototypes... yes
#20 17.48 checking for lrintf... yes
#20 17.63 checking for lrint... yes
#20 17.78 checking for __malloc_hook... yes
#20 17.98 checking that generated files are newer than configure... done
#20 17.98 configure: creating ./config.status
#20 18.78 config.status: creating Makefile
#20 18.81 config.status: creating opus.pc
#20 18.83 config.status: creating opus-uninstalled.pc
#20 18.85 config.status: creating celt/arm/armopts.s
#20 18.87 config.status: creating doc/Makefile
#20 18.90 config.status: creating doc/Doxyfile
#20 18.93 config.status: creating config.h
#20 18.94 config.status: executing depfiles commands
#20 20.28 config.status: executing libtool commands
#20 20.30 configure:
#20 20.30 ------------------------------------------------------------------------
#20 20.30   opus 1.3.1-107-gccaaffa9:  Automatic configuration OK.
#20 20.30 
#20 20.30     Compiler support:
#20 20.30 
#20 20.30       C99 var arrays: ................ yes
#20 20.30       C99 lrintf: .................... yes
#20 20.30       Use alloca: .................... no (using var arrays)
#20 20.30 
#20 20.30     General configuration:
#20 20.30 
#20 20.30       Floating point support: ........ yes
#20 20.30       Fast float approximations: ..... no
#20 20.30       Fixed point debugging: ......... no
#20 20.30       Inline Assembly Optimizations: . No inline ASM for your platform, please send patches
#20 20.30       External Assembly Optimizations: 
#20 20.30       Intrinsics Optimizations: ...... x86 SSE SSE2 SSE4.1 AVX
#20 20.30       Run-time CPU detection: ........ x86 SSE4.1 AVX
#20 20.30       Custom modes: .................. no
#20 20.30       Assertion checking: ............ yes
#20 20.30       Hardening: ..................... yes
#20 20.30       Fuzzing: ....................... no
#20 20.30       Check ASM: ..................... no
#20 20.30 
#20 20.30       API documentation: ............. no
#20 20.30       Extra programs: ................ yes
#20 20.30 ------------------------------------------------------------------------
#20 20.30 
#20 20.30  Type "make; make install" to compile and install
#20 20.30  Type "make check" to run the test suite
#20 20.30 
#20 20.38 ++ nproc
#20 20.38 + make -j8
#20 20.42 make  all-recursive
#20 20.44 make[1]: Entering directory '/src/opus'
#20 20.49 make[2]: Entering directory '/src/opus'
#20 20.53   CC       src/opus.lo
#20 20.53   CC       src/opus_decoder.lo
#20 20.53   CC       src/opus_encoder.lo
#20 20.53   CC       src/opus_multistream.lo
#20 20.53   CC       src/opus_multistream_encoder.lo
#20 20.53   CC       src/opus_multistream_decoder.lo
#20 20.53   CC       src/repacketizer.lo
#20 20.54   CC       src/opus_projection_encoder.lo
#20 20.87   CC       src/opus_projection_decoder.lo
#20 20.91   CC       src/mapping_matrix.lo
#20 20.95   CC       src/analysis.lo
#20 20.98   CC       src/mlp.lo
#20 21.09   CC       src/mlp_data.lo
#20 21.20   CC       src/repacketizer_demo.o
#20 21.31 make[3]: Entering directory '/src/opus/doc'
#20 21.31 make[3]: Nothing to be done for 'all'.
#20 21.31 make[3]: Leaving directory '/src/opus/doc'
#20 21.32   CC       celt/tests/test_unit_cwrs32.o
#20 21.39   CC       celt/tests/test_unit_dft.o
#20 21.41   CC       celt/bands.lo
#20 21.46   CC       celt/celt.lo
#20 21.49   CC       celt/celt_encoder.lo
#20 21.62   CC       celt/celt_decoder.lo
#20 21.78   CC       celt/cwrs.lo
#20 21.84   CC       celt/entcode.lo
#20 22.03   CC       celt/entdec.lo
#20 22.03   CC       celt/entenc.lo
#20 22.07   CC       celt/kiss_fft.lo
#20 22.09   CC       celt/laplace.lo
#20 22.35   CC       celt/mathops.lo
#20 22.36   CC       celt/mdct.lo
#20 22.39   CC       celt/modes.lo
#20 22.48   CC       celt/pitch.lo
#20 22.58   CC       celt/celt_lpc.lo
#20 22.59   CC       celt/quant_bands.lo
#20 22.65   CC       celt/rate.lo
#20 22.71 celt/pitch.c:252:41: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction]
#20 22.72    celt_sig_assert((((unsigned char *)_x-(unsigned char *)NULL)&3)==0);
#20 22.72    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 22.72 ./celt/arch.h:93:38: note: expanded from macro 'celt_sig_assert'
#20 22.72 #define celt_sig_assert(cond) {if (!(cond)) {CELT_FATAL("signal assertion failed: " #cond);}}
#20 22.72                                      ^~~~
#20 22.74   CC       celt/vq.lo
#20 23.00 1 warning generated.
#20 23.02   CC       celt/x86/x86cpu.lo
#20 23.03   CC       celt/x86/x86_celt_map.lo
#20 23.16   CC       celt/x86/pitch_sse.lo
#20 23.17   CC       celt/x86/pitch_sse2.lo
#20 23.26   CC       celt/x86/vq_sse2.lo
#20 23.28   CC       celt/x86/celt_lpc_sse4_1.lo
#20 23.30   CC       celt/x86/pitch_sse4_1.lo
#20 23.44   CC       celt/tests/test_unit_entropy.o
#20 23.46   CC       celt/tests/test_unit_laplace.o
#20 23.53 celt/x86/vq_sse2.c:78:24:   CC       celt/tests/test_unit_mathops.o
#20 23.54 warning: cast from 'int *' to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 23.54       _mm_storeu_si128((__m128i*)&iy[j], _mm_setzero_si128());
#20 23.54                        ^~~~~~~~~~~~~~~~
#20 23.54 celt/x86/vq_sse2.c:119:27: warning: cast from 'int *' to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 23.54          _mm_storeu_si128((__m128i*)&iy[j], iy4);
#20 23.54                           ^~~~~~~~~~~~~~~~
#20 23.54 celt/x86/vq_sse2.c:208:28: warning: cast from 'int *' to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]  CC       celt/tests/test_unit_mdct.o
#20 23.55 
#20 23.55       y4 = _mm_loadu_si128((__m128i*)&iy[j]);
#20 23.55                            ^~~~~~~~~~~~~~~~
#20 23.55 celt/x86/vq_sse2.c:211:24: warning: cast from 'int *' to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 23.55       _mm_storeu_si128((__m128i*)&iy[j], y4);
#20 23.55                        ^~~~~~~~~~~~~~~~
#20 23.58   CC       celt/tests/test_unit_rotation.o
#20 23.61   CC       celt/tests/test_unit_types.o
#20 23.67   CC       src/opus_compare.o
#20 23.68 4 warnings generated.
#20 23.70   CC       src/opus_demo.o
#20 23.75   CC       silk/CNG.lo
#20 23.78   CC       silk/code_signs.lo
#20 23.83   CC       silk/init_decoder.lo
#20 24.09   CC       silk/decode_core.lo
#20 24.09   CC       silk/decode_frame.lo
#20 24.13   CC       silk/decode_parameters.lo
#20 24.26   CC       silk/decode_indices.lo
#20 24.26   CC       silk/decode_pulses.lo
#20 24.29   CC       silk/decoder_set_fs.lo
#20 24.35   CC       silk/dec_API.lo
#20 24.44   CC       silk/enc_API.lo
#20 24.45   CC       silk/encode_indices.lo
#20 24.57   CC       silk/encode_pulses.lo
#20 24.58   CC       silk/gain_quant.lo
#20 24.63   CC       silk/interpolate.lo
#20 24.67   CC       silk/LP_variable_cutoff.lo
#20 24.81   CC       silk/NLSF_decode.lo
#20 24.90   CC       silk/NSQ.lo
#20 24.90   CC       silk/NSQ_del_dec.lo
#20 24.92   CC       silk/PLC.lo
#20 24.97   CC       silk/shell_coder.lo
#20 25.08   CC       silk/tables_gain.lo
#20 25.10   CC       silk/tables_LTP.lo
#20 25.15   CC       silk/tables_NLSF_CB_NB_MB.lo
#20 25.30   CC       silk/tables_NLSF_CB_WB.lo
#20 25.31   CC       silk/tables_other.lo
#20 25.32   CC       silk/tables_pitch_lag.lo
#20 25.34   CC       silk/tables_pulses_per_block.lo
#20 25.39   CC       silk/VAD.lo
#20 25.54   CC       silk/control_audio_bandwidth.lo
#20 25.55   CC       silk/quant_LTP_gains.lo
#20 25.56   CC       silk/VQ_WMat_EC.lo
#20 25.56   CC       silk/HP_variable_cutoff.lo
#20 25.57   CC       silk/NLSF_encode.lo
#20 25.59   CC       silk/NLSF_VQ.lo
#20 25.82   CC       silk/NLSF_unpack.lo
#20 25.85   CC       silk/NLSF_del_dec_quant.lo
#20 25.86   CC       silk/process_NLSFs.lo
#20 25.87   CC       silk/stereo_LR_to_MS.lo
#20 25.88   CC       silk/stereo_MS_to_LR.lo
#20 25.89   CC       silk/check_control_input.lo
#20 25.90   CC       silk/control_SNR.lo
#20 25.98   CC       silk/init_encoder.lo
#20 26.07   CC       silk/control_codec.lo
#20 26.16   CC       silk/A2NLSF.lo
#20 26.16   CC       silk/ana_filt_bank_1.lo
#20 26.20   CC       silk/biquad_alt.lo
#20 26.25   CC       silk/bwexpander_32.lo
#20 26.28   CC       silk/bwexpander.lo
#20 26.32   CC       silk/debug.lo
#20 26.40   CC       silk/decode_pitch.lo
#20 26.43   CC       silk/inner_prod_aligned.lo
#20 26.46   CC       silk/lin2log.lo
#20 26.51   CC       silk/log2lin.lo
#20 26.52   CC       silk/LPC_analysis_filter.lo
#20 26.53   CC       silk/LPC_inv_pred_gain.lo
#20 26.56   CC       silk/table_LSF_cos.lo
#20 26.67   CC       silk/NLSF2A.lo
#20 26.69   CC       silk/NLSF_stabilize.lo
#20 26.71   CC       silk/NLSF_VQ_weights_laroia.lo
#20 26.75   CC       silk/pitch_est_tables.lo
#20 26.76   CC       silk/resampler.lo
#20 26.81   CC       silk/resampler_down2_3.lo
#20 26.89   CC       silk/resampler_down2.lo
#20 26.95   CC       silk/resampler_private_AR2.lo
#20 26.97   CC       silk/resampler_private_down_FIR.lo
#20 26.98   CC       silk/resampler_private_IIR_FIR.lo
#20 27.02   CC       silk/resampler_private_up2_HQ.lo
#20 27.07   CC       silk/resampler_rom.lo
#20 27.08   CC       silk/sigm_Q15.lo
#20 27.11   CC       silk/sort.lo
#20 27.15   CC       silk/sum_sqr_shift.lo
#20 27.21   CC       silk/stereo_decode_pred.lo
#20 27.26   CC       silk/stereo_encode_pred.lo
#20 27.31   CC       silk/stereo_find_predictor.lo
#20 27.31   CC       silk/stereo_quant_pred.lo
#20 27.33   CC       silk/LPC_fit.lo
#20 27.43   CC       silk/float/apply_sine_window_FLP.lo
#20 27.45   CC       silk/float/corrMatrix_FLP.lo
#20 27.48   CC       silk/float/encode_frame_FLP.lo
#20 27.49   CC       silk/float/find_LPC_FLP.lo
#20 27.55   CC       silk/float/find_LTP_FLP.lo
#20 27.62   CC       silk/float/find_pitch_lags_FLP.lo
#20 27.64   CC       silk/float/find_pred_coefs_FLP.lo
#20 27.72   CC       silk/float/LPC_analysis_filter_FLP.lo
#20 27.78   CC       silk/float/LTP_analysis_filter_FLP.lo
#20 27.83   CC       silk/float/LTP_scale_ctrl_FLP.lo
#20 27.88   CC       silk/float/noise_shape_analysis_FLP.lo
#20 27.92   CC       silk/float/process_gains_FLP.lo
#20 27.99   CC       silk/float/regularize_correlations_FLP.lo
#20 28.02   CC       silk/float/residual_energy_FLP.lo
#20 28.11   CC       silk/float/warped_autocorrelation_FLP.lo
#20 28.18   CC       silk/float/wrappers_FLP.lo
#20 28.18   CC       silk/float/autocorrelation_FLP.lo
#20 28.24   CC       silk/float/burg_modified_FLP.lo
#20 28.33   CC       silk/float/bwexpander_FLP.lo
#20 28.36   CC       silk/float/energy_FLP.lo
#20 28.44   CC       silk/float/inner_product_FLP.lo
#20 28.51   CC       silk/float/k2a_FLP.lo
#20 28.52   CC       silk/float/LPC_inv_pred_gain_FLP.lo
#20 28.60   CC       silk/float/pitch_analysis_core_FLP.lo
#20 28.69   CC       silk/float/scale_copy_vector_FLP.lo
#20 28.71   CC       silk/float/scale_vector_FLP.lo
#20 28.79   CC       silk/float/schur_FLP.lo
#20 28.80   CC       silk/float/sort_FLP.lo
#20 28.81   CC       silk/x86/NSQ_sse4_1.lo
#20 28.87   CC       silk/x86/NSQ_del_dec_sse4_1.lo
#20 28.87   CC       silk/x86/x86_silk_map.lo
#20 29.08   CC       silk/x86/VAD_sse4_1.lo
#20 29.08   CC       silk/x86/VQ_WMat_EC_sse4_1.lo
#20 29.15 silk/x86/NSQ_sse4_1.c:341:39: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.15     a_Q12_01234567 = _mm_loadu_si128( (__m128i *)(&a_Q12[ 0 ] ) );
#20 29.15                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.15 silk/x86/NSQ_sse4_1.c:343:39: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.15     a_Q12_89ABCDEF = _mm_loadu_si128( (__m128i *)(&a_Q12[ 8 ] ) );
#20 29.15                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.15 silk/x86/NSQ_sse4_1.c:349:44: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.15     AR_shp_Q13_76543210 = _mm_loadu_si128( (__m128i *)(&AR_shp_Q13[0] ) );
#20 29.15                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.15 silk/x86/NSQ_sse4_1.c:354:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.15     xmm_tempa = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[-16]) );
#20 29.15                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.15 silk/x86/NSQ_sse4_1.c:355:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.15     xmm_tempb = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[-12]) );
#20 29.15                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.15 silk/x86/NSQ_sse4_1.c:363:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.15     xmm_tempa = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -8 ]) );
#20 29.15                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.15 silk/x86/NSQ_sse4_1.c:364:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.15     xmm_tempb = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -4 ]) );
#20 29.15                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.16 silk/x86/NSQ_sse4_1.c:373:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.16     xmm_tempa = _mm_loadu_si128( (__m128i *)(&(NSQ->sAR2_Q14[ 0 ]) ) );
#20 29.16                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.16 silk/x86/NSQ_sse4_1.c:374:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.16     xmm_tempb = _mm_loadu_si128( (__m128i *)(&(NSQ->sAR2_Q14[ 4 ]) ) );
#20 29.16                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.16 silk/x86/NSQ_sse4_1.c:442:30: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.16                 b_Q14_3210 = OP_CVTEPI16_EPI32_M64( b_Q14 );
#20 29.16                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.16 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.16  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.16                                      ^~~~~~~~~~~~~~
#20 29.16 silk/x86/NSQ_sse4_1.c:446:54: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.16                 pred_lag_ptr_0123 = _mm_loadu_si128( (__m128i *)(&pred_lag_ptr[ -3 ] ) );
#20 29.16                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.17 silk/x86/NSQ_sse4_1.c:598:23: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.17     _mm_storeu_si128( (__m128i *)(&NSQ->sAR2_Q14[ 4 ]), xmm_tempa );
#20 29.17                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.17 silk/x86/NSQ_sse4_1.c:599:23: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.17     _mm_storeu_si128( (__m128i *)(&NSQ->sAR2_Q14[ 0 ]), xmm_tempb );
#20 29.17                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.17   CC       silk/tests/test_unit_LPC_inv_pred_gain.o
#20 29.17 silk/x86/NSQ_sse4_1.c:615:48: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.17             xmm_xq_Q14_3210 = _mm_loadu_si128( (__m128i *)(&(psLPC_Q14[ i + 0 ] ) ) );
#20 29.17                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.17 silk/x86/NSQ_sse4_1.c:616:48: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.17             xmm_xq_Q14_7654 = _mm_loadu_si128( (__m128i *)(&(psLPC_Q14[ i + 4 ] ) ) );
#20 29.17                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.17   CC       tests/test_opus_api.o
#20 29.17 silk/x86/NSQ_sse4_1.c:647:31: warning: cast from 'opus_int16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.17             _mm_storeu_si128( (__m128i *)(&xq[ i ] ), xmm_xq_Q14_3210 );
#20 29.17                               ^~~~~~~~~~~~~~~~~~~~~~
#20 29.18 silk/x86/NSQ_sse4_1.c:688:24: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.18         xmm_x16_x2x0 = OP_CVTEPI16_EPI32_M64( &(x16[ i ] ) );
#20 29.18                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.18 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.18  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.18                                      ^~~~~~~~~~~~~~
#20 29.18 silk/x86/NSQ_sse4_1.c:701:27: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.18         _mm_storeu_si128( (__m128i *)(&(x_sc_Q10[ i ] ) ), xmm_x16_x2x0 );
#20 29.18                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.18 silk/x86/NSQ_sse4_1.c:732:54: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.18             xmm_sLTP_shp_Q14_x2x0 = _mm_loadu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ) );
#20 29.18                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.18 silk/x86/NSQ_sse4_1.c:744:31: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.18             _mm_storeu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ), xmm_sLTP_shp_Q14_x2x0 );
#20 29.18                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.21   CC       tests/test_opus_decode.o
#20 29.22 silk/x86/NSQ_del_dec_sse4_1.c:408:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.22     a_Q12_0123 = OP_CVTEPI16_EPI32_M64( a_Q12 );
#20 29.22                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.22 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.22  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.22                                      ^~~~~~~~~~~~~~
#20 29.23 silk/x86/NSQ_del_dec_sse4_1.c:409:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.23     a_Q12_4567 = OP_CVTEPI16_EPI32_M64( a_Q12 + 4 );
#20 29.23                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.23 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.23  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.23                                      ^~~~~~~~~~~~~~
#20 29.23 silk/x86/NSQ_del_dec_sse4_1.c:412:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.23         a_Q12_89AB = OP_CVTEPI16_EPI32_M64( a_Q12 + 8 );
#20 29.23                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.23 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.23  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.23                                      ^~~~~~~~~~~~~~
#20 29.23 silk/x86/NSQ_del_dec_sse4_1.c:413:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.23         a_Q12_CDEF = OP_CVTEPI16_EPI32_M64( a_Q12 + 12 );
#20 29.23                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.23 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.23  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.23                                      ^~~~~~~~~~~~~~
#20 29.23 silk/x86/NSQ_del_dec_sse4_1.c:417:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.23         b_Q12_0123 = OP_CVTEPI16_EPI32_M64( b_Q14 );
#20 29.23                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.23 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.23  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.23                                      ^~~~~~~~~~~~~~
#20 29.23 silk/x86/NSQ_del_dec_sse4_1.c:430:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.23                 pred_lag_ptr_tmp    = _mm_loadu_si128( (__m128i *)(&pred_lag_ptr[ -3 ] ) );
#20 29.23                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.23 silk/x86/NSQ_del_dec_sse4_1.c:485:52: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.23                 psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -3 ] ) ); /* -3, -2 , -1, 0 */
#20 29.23                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.24 silk/x86/NSQ_del_dec_sse4_1.c:499:52: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.24                 psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -7 ] ) );
#20 29.24                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.24 silk/x86/NSQ_del_dec_sse4_1.c:514:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.24                     psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -11 ] ) );
#20 29.24                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.24 silk/x86/NSQ_del_dec_sse4_1.c:527:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.24                     psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -15 ] ) );
#20 29.24                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.26 silk/x86/NSQ_del_dec_sse4_1.c:819:24: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.26         xmm_x16_x2x0 = OP_CVTEPI16_EPI32_M64( &(x16[ i ] ) );
#20 29.26                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.26 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.26  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.26                                      ^~~~~~~~~~~~~~
#20 29.26 silk/x86/NSQ_del_dec_sse4_1.c:832:27: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.26         _mm_storeu_si128( (__m128i *)(&(x_sc_Q10[ i ] ) ), xmm_x16_x2x0 );
#20 29.26                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.26 silk/x86/NSQ_del_dec_sse4_1.c:864:58: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.26                 xmm_sLTP_shp_Q14_x2x0 = _mm_loadu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ) );
#20 29.26                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.26 silk/x86/NSQ_del_dec_sse4_1.c:876:35: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.26                 _mm_storeu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ), xmm_sLTP_shp_Q14_x2x0 );
#20 29.26                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.43 silk/x86/VAD_sse4_1.c:147:44: warning: cast from 'opus_int16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.43                 xmm_X   = _mm_loadu_si128( (__m128i *)&(X[ X_offset[ b ] + i + dec_subframe_offset ] ) );
#20 29.43                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.46 silk/x86/VQ_WMat_EC_sse4_1.c:68:36: warning: cast from 'const opus_int32 *' (aka 'const int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.46     v_XX_31_Q17 = _mm_loadu_si128( (__m128i *)(&XX_Q17[ 1 ] ) );
#20 29.46                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.46 silk/x86/VQ_WMat_EC_sse4_1.c:88:26: warning: cast from 'const opus_int8 *' (aka 'const signed char *') to 'int *' increases required alignment from 1 to 4 [-Wcast-align]
#20 29.46         v_cb_row_31_Q7 = OP_CVTEPI8_EPI32_M32( &cb_row_Q7[ 1 ] );
#20 29.46                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.46 ./celt/x86/x86cpu.h:60:40: note: expanded from macro 'OP_CVTEPI8_EPI32_M32'
#20 29.46  (_mm_cvtepi8_epi32(_mm_cvtsi32_si128(*(int *)(x))))
#20 29.46                                        ^~~~~~~~~~
#20 29.52 2 warnings generated.
#20 29.54   CC       tests/test_opus_encode.o
#20 29.56   CC       tests/opus_encode_regressions.o
#20 29.77 20 warnings generated.
#20 29.77   CC       tests/test_opus_padding.o
#20 29.79   CC       tests/test_opus_projection.o
#20 29.85 1 warning generated.
#20 29.86   CC       doc/trivial_example.o
#20 29.86 tests/test_opus_padding.c:81:7: warning: variable 'tests' set but not used [-Wunused-but-set-variable]
#20 29.86   int tests = 0;;
#20 29.86       ^
#20 29.87   CCLD     celt/tests/test_unit_cwrs32
#20 29.89 1 warning generated.
#20 29.91   CCLD     celt/tests/test_unit_dft
#20 30.02   CCLD     celt/tests/test_unit_entropy
#20 30.06 14 warnings generated.
#20 30.08   CCLD     celt/tests/test_unit_laplace
#20 30.11   CCLD     celt/tests/test_unit_mathops
#20 30.25   CCLD     celt/tests/test_unit_mdct
#20 30.26   CCLD     celt/tests/test_unit_rotation
#20 30.38   CCLD     celt/tests/test_unit_types
#20 30.41   CCLD     opus_compare
#20 30.46   CCLD     libopus.la
#20 30.57   CCLD     silk/tests/test_unit_LPC_inv_pred_gain
#20 30.69   CCLD     tests/test_opus_projection
#20 31.03   CCLD     opus_demo
#20 31.03   CCLD     repacketizer_demo
#20 31.03   CCLD     tests/test_opus_decode
#20 31.03   CCLD     tests/test_opus_api
#20 31.03   CCLD     tests/test_opus_encode
#20 31.03   CCLD     tests/test_opus_padding
#20 31.20   CCLD     trivial_example
#20 31.61 make[2]: Leaving directory '/src/opus'
#20 31.61 make[1]: Leaving directory '/src/opus'
#20 31.61 + for fuzzer in $FUZZERS
#20 31.61 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -Iinclude tests/opus_decode_fuzzer.c -o opus_decode_fuzzer.o
#20 31.67 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard opus_decode_fuzzer.o -o /out/opus_decode_fuzzer_floating /libAFL.a .libs/libopus.a
#20 31.93 + '[' -f tests/opus_decode_fuzzer.options ']'
#20 31.93 + cp tests/opus_decode_fuzzer.options /out/opus_decode_fuzzer_floating.options
#20 31.93 + zip -r /out/opus_decode_fuzzer_floating_seed_corpus.zip opus_testvectors/
#20 31.94   adding: opus_testvectors/ (stored 0%)
#20 31.94   adding: opus_testvectors/testvector03.bit (deflated 2%)
#20 31.94   adding: opus_testvectors/testvector01.bit (deflated 15%)
#20 31.97   adding: opus_testvectors/testvector07.bit (deflated 4%)
#20 31.99   adding: opus_testvectors/testvector02.bit (deflated 3%)
#20 31.99   adding: opus_testvectors/testvector12.bit (deflated 4%)
#20 31.99   adding: opus_testvectors/testvector03.dec (deflated 48%)
#20 32.24   adding: opus_testvectors/testvector06.dec (deflated 45%)
#20 32.55   adding: opus_testvectors/testvector11.dec (deflated 7%)
#20 32.83   adding: opus_testvectors/testvector11.bit (deflated 0%)
#20 32.85   adding: opus_testvectors/testvector06.bit (deflated 3%)
#20 32.86   adding: opus_testvectors/testvector08.dec (deflated 38%)
#20 33.19   adding: opus_testvectors/testvector02.dec (deflated 50%)
#20 33.46   adding: opus_testvectors/testvector01.dec (deflated 29%)
#20 33.86   adding: opus_testvectors/testvector05.bit (deflated 3%)
#20 33.87   adding: opus_testvectors/testvector08.bit (deflated 1%)
#20 33.88   adding: opus_testvectors/testvector09.bit (deflated 11%)
#20 33.92   adding: opus_testvectors/testvector10.dec (deflated 49%)
#20 34.22   adding: opus_testvectors/testvector07.dec (deflated 44%)
#20 34.48   adding: opus_testvectors/testvector04.dec (deflated 49%)
#20 34.79   adding: opus_testvectors/testvector09.dec (deflated 43%)
#20 35.12   adding: opus_testvectors/testvector05.dec (deflated 47%)
#20 35.46   adding: opus_testvectors/testvector12.dec (deflated 61%)
#20 35.76   adding: opus_testvectors/testvector10.bit (deflated 9%)
#20 35.79   adding: opus_testvectors/testvector04.bit (deflated 3%)
#20 35.79 + for fuzzer in $FUZZERS
#20 35.79 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -Iinclude tests/opus_multi_fuzzer.c -o opus_multi_fuzzer.o
#20 35.87 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard opus_multi_fuzzer.o -o /out/opus_multi_fuzzer_floating /libAFL.a .libs/libopus.a
#20 36.14 + '[' -f tests/opus_multi_fuzzer.options ']'
#20 36.14 + zip -r /out/opus_multi_fuzzer_floating_seed_corpus.zip opus_testvectors/
#20 36.14   adding: opus_testvectors/ (stored 0%)
#20 36.14   adding: opus_testvectors/testvector03.bit (deflated 2%)
#20 36.14   adding: opus_testvectors/testvector01.bit (deflated 15%)
#20 36.17   adding: opus_testvectors/testvector07.bit (deflated 4%)
#20 36.19   adding: opus_testvectors/testvector02.bit (deflated 3%)
#20 36.19   adding: opus_testvectors/testvector12.bit (deflated 4%)
#20 36.19   adding: opus_testvectors/testvector03.dec (deflated 48%)
#20 36.44   adding: opus_testvectors/testvector06.dec (deflated 45%)
#20 36.75   adding: opus_testvectors/testvector11.dec (deflated 7%)
#20 37.04   adding: opus_testvectors/testvector11.bit (deflated 0%)
#20 37.06   adding: opus_testvectors/testvector06.bit (deflated 3%)
#20 37.06   adding: opus_testvectors/testvector08.dec (deflated 38%)
#20 37.40   adding: opus_testvectors/testvector02.dec (deflated 50%)
#20 37.68   adding: opus_testvectors/testvector01.dec (deflated 29%)
#20 38.09   adding: opus_testvectors/testvector05.bit (deflated 3%)
#20 38.10   adding: opus_testvectors/testvector08.bit (deflated 1%)
#20 38.10   adding: opus_testvectors/testvector09.bit (deflated 11%)
#20 38.14   adding: opus_testvectors/testvector10.dec (deflated 49%)
#20 38.45   adding: opus_testvectors/testvector07.dec (deflated 44%)
#20 38.71   adding: opus_testvectors/testvector04.dec (deflated 49%)
#20 39.02   adding: opus_testvectors/testvector09.dec (deflated 43%)
#20 39.36   adding: opus_testvectors/testvector05.dec (deflated 47%)
#20 39.70   adding: opus_testvectors/testvector12.dec (deflated 61%)
#20 40.00   adding: opus_testvectors/testvector10.bit (deflated 9%)
#20 40.03   adding: opus_testvectors/testvector04.bit (deflated 3%)
#20 40.04 + for build in "${BUILDS[@]}"
#20 40.04 + case "$build" in
#20 40.04 + extra_args=' --enable-fixed-point --enable-check-asm'
#20 40.04 + ./configure --enable-fixed-point --enable-check-asm --enable-static --disable-shared --disable-doc --enable-assertions
#20 40.28 checking whether make supports nested variables... yes
#20 40.29 checking for a BSD-compatible install... /usr/bin/install -c
#20 40.30 checking whether build environment is sane... yes
#20 40.32 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 40.32 checking for gawk... no
#20 40.32 checking for mawk... mawk
#20 40.33 checking whether make sets $(MAKE)... yes
#20 40.35 checking whether to enable maintainer-specific portions of Makefiles... yes
#20 40.37 checking build system type... x86_64-pc-linux-gnu
#20 40.45 checking host system type... x86_64-pc-linux-gnu
#20 40.45 checking how to print strings... printf
#20 40.51 checking whether make supports the include directive... yes (GNU style)
#20 40.52 checking for gcc... clang
#20 40.61 checking whether the C compiler works... yes
#20 40.75 checking for C compiler default output file name... a.out
#20 40.75 checking for suffix of executables... 
#20 40.88 checking whether we are cross compiling... no
#20 41.03 checking for suffix of object files... o
#20 41.06 checking whether we are using the GNU C compiler... yes
#20 41.10 checking whether clang accepts -g... yes
#20 41.12 checking for clang option to accept ISO C89... none needed
#20 41.17 checking whether clang understands -c and -o together... yes
#20 41.23 checking dependency style of clang... gcc3
#20 41.29 checking for a sed that does not truncate output... /usr/bin/sed
#20 41.30 checking for grep that handles long lines and -e... /usr/bin/grep
#20 41.30 checking for egrep... /usr/bin/grep -E
#20 41.31 checking for fgrep... /usr/bin/grep -F
#20 41.31 checking for ld used by clang... /usr/bin/ld
#20 41.33 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 41.34 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 41.34 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 41.38 checking whether ln -s works... yes
#20 41.38 checking the maximum length of command line arguments... 1572864
#20 41.39 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 41.39 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 41.39 checking for /usr/bin/ld option to reload object files... -r
#20 41.39 checking for objdump... objdump
#20 41.39 checking how to recognize dependent libraries... pass_all
#20 41.40 checking for dlltool... no
#20 41.40 checking how to associate runtime and link libraries... printf %s\n
#20 41.40 checking for ar... ar
#20 41.40 checking for archiver @FILE support... @
#20 41.45 checking for strip... strip
#20 41.45 checking for ranlib... ranlib
#20 41.45 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 41.64 checking for sysroot... no
#20 41.64 checking for a working dd... /usr/bin/dd
#20 41.65 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 41.69 checking for mt... no
#20 41.69 checking if : is a manifest tool... no
#20 41.70 checking how to run the C preprocessor... clang -E
#20 41.81 checking for ANSI C header files... yes
#20 42.09 checking for sys/types.h... yes
#20 42.15 checking for sys/stat.h... yes
#20 42.21 checking for stdlib.h... yes
#20 42.27 checking for string.h... yes
#20 42.33 checking for memory.h... yes
#20 42.39 checking for strings.h... yes
#20 42.46 checking for inttypes.h... yes
#20 42.53 checking for stdint.h... yes
#20 42.60 checking for unistd.h... yes
#20 42.66 checking for dlfcn.h... yes
#20 42.72 checking for objdir... .libs
#20 42.92 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 42.95 checking for clang option to produce PIC... -fPIC -DPIC
#20 42.95 checking if clang PIC flag -fPIC -DPIC works... yes
#20 42.99 checking if clang static flag -static works... yes
#20 43.17 checking if clang supports -c -o file.o... yes
#20 43.22 checking if clang supports -c -o file.o... (cached) yes
#20 43.22 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 43.25 checking dynamic linker characteristics... GNU/Linux ld.so
#20 43.44 checking how to hardcode library paths into programs... immediate
#20 43.44 checking whether stripping libraries is possible... yes
#20 43.45 checking if libtool supports shared libraries... yes
#20 43.45 checking whether to build shared libraries... no
#20 43.45 checking whether to build static libraries... yes
#20 43.45 checking for clang option to accept ISO C99... none needed
#20 43.52 checking for an ANSI C-conforming const... yes
#20 43.56 checking for inline... inline
#20 43.59 checking dependency style of clang... gcc3
#20 43.65 checking for C/C++ restrict keyword... __restrict
#20 43.68 checking for C99 variable-size arrays... yes
#20 43.72 checking for cos in -lm... yes
#20 43.87 checking if compiler supports SSE intrinsics... yes
#20 44.06 checking if compiler supports SSE2 intrinsics... yes
#20 44.26 checking if compiler supports SSE4.1 intrinsics... no
#20 44.38 checking if compiler supports SSE4.1 intrinsics with -msse4.1... yes
#20 44.59 checking if compiler supports AVX intrinsics... no
#20 45.15 checking if compiler supports AVX intrinsics with -mavx... yes
#20 45.79 checking How to get X86 CPU Info... Inline Assembly
#20 45.94 checking if clang supports -fvisibility=hidden... yes
#20 45.97 checking if clang supports -fstack-protector-strong... yes
#20 46.10 checking whether to add -D_FORTIFY_SOURCE=2 to CFLAGS... yes
#20 46.24 checking if clang supports -Wall -Wextra -Wcast-align -Wnested-externs -Wshadow -Wstrict-prototypes... yes
#20 46.27 checking for lrintf... yes
#20 46.42 checking for lrint... yes
#20 46.57 checking for __malloc_hook... yes
#20 46.76 checking that generated files are newer than configure... done
#20 46.76 configure: creating ./config.status
#20 47.56 config.status: creating Makefile
#20 47.59 config.status: creating opus.pc
#20 47.61 config.status: creating opus-uninstalled.pc
#20 47.63 config.status: creating celt/arm/armopts.s
#20 47.66 config.status: creating doc/Makefile
#20 47.68 config.status: creating doc/Doxyfile
#20 47.71 config.status: creating config.h
#20 47.72 config.status: executing depfiles commands
#20 47.78 config.status: executing libtool commands
#20 47.80 configure:
#20 47.80 ------------------------------------------------------------------------
#20 47.80   opus 1.3.1-107-gccaaffa9:  Automatic configuration OK.
#20 47.80 
#20 47.80     Compiler support:
#20 47.80 
#20 47.80       C99 var arrays: ................ yes
#20 47.80       C99 lrintf: .................... yes
#20 47.80       Use alloca: .................... no (using var arrays)
#20 47.80 
#20 47.80     General configuration:
#20 47.80 
#20 47.80       Floating point support: ........ no
#20 47.80       Fast float approximations: ..... no
#20 47.80       Fixed point debugging: ......... no
#20 47.80       Inline Assembly Optimizations: . No inline ASM for your platform, please send patches
#20 47.80       External Assembly Optimizations: 
#20 47.80       Intrinsics Optimizations: ...... x86 SSE SSE2 SSE4.1 AVX
#20 47.80       Run-time CPU detection: ........ x86 SSE4.1 AVX
#20 47.80       Custom modes: .................. no
#20 47.80       Assertion checking: ............ yes
#20 47.80       Hardening: ..................... yes
#20 47.80       Fuzzing: ....................... no
#20 47.80       Check ASM: ..................... yes
#20 47.80 
#20 47.80       API documentation: ............. no
#20 47.80       Extra programs: ................ yes
#20 47.80 ------------------------------------------------------------------------
#20 47.80 
#20 47.80  Type "make; make install" to compile and install
#20 47.80  Type "make check" to run the test suite
#20 47.80 
#20 47.87 ++ nproc
#20 47.88 + make -j8
#20 47.97 make  all-recursive
#20 48.03 make[1]: Entering directory '/src/opus'
#20 48.13 make[2]: Entering directory '/src/opus'
#20 48.18   CC       src/opus.lo
#20 48.18   CC       src/opus_decoder.lo
#20 48.18   CC       src/opus_encoder.lo
#20 48.18   CC       src/opus_multistream_encoder.lo
#20 48.18   CC       src/opus_multistream.lo
#20 48.19   CC       src/opus_multistream_decoder.lo
#20 48.19   CC       src/repacketizer.lo
#20 48.19   CC       src/opus_projection_encoder.lo
#20 48.51   CC       src/opus_projection_decoder.lo
#20 48.57   CC       src/mapping_matrix.lo
#20 48.60   CC       src/analysis.lo
#20 48.63   CC       src/mlp.lo
#20 48.74   CC       src/mlp_data.lo
#20 48.85   CC       src/repacketizer_demo.o
#20 48.92   CC       silk/tests/test_unit_LPC_inv_pred_gain.o
#20 49.05   CC       tests/test_opus_api.o
#20 49.08   CC       tests/test_opus_decode.o
#20 49.13   CC       tests/test_opus_encode.o
#20 49.15   CC       tests/opus_encode_regressions.o
#20 49.29   CC       tests/test_opus_projection.o
#20 49.42 make[3]: Entering directory '/src/opus/doc'
#20 49.42 make[3]: Nothing to be done for 'all'.
#20 49.42 make[3]: Leaving directory '/src/opus/doc'
#20 49.42   CC       celt/tests/test_unit_cwrs32.o
#20 49.48   CC       celt/tests/test_unit_dft.o
#20 49.67   CC       celt/bands.lo
#20 49.70   CC       celt/celt.lo
#20 49.71   CC       celt/celt_encoder.lo
#20 49.90   CC       celt/celt_decoder.lo
#20 50.12   CC       celt/cwrs.lo
#20 50.14   CC       celt/entcode.lo
#20 50.20   CC       celt/entdec.lo
#20 50.27   CC       celt/entenc.lo
#20 50.33   CC       celt/kiss_fft.lo
#20 50.44   CC       celt/laplace.lo
#20 50.55   CC       celt/mathops.lo
#20 50.57   CC       celt/mdct.lo
#20 50.70   CC       celt/modes.lo
#20 50.73   CC       celt/pitch.lo
#20 50.87   CC       celt/celt_lpc.lo
#20 50.91   CC       celt/quant_bands.lo
#20 50.95 celt/pitch.c:252:41: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction]
#20 50.95    celt_sig_assert((((unsigned char *)_x-(unsigned char *)NULL)&3)==0);
#20 50.95    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 50.95 ./celt/arch.h:93:38: note: expanded from macro 'celt_sig_assert'
#20 50.96 #define celt_sig_assert(cond) {if (!(cond)) {CELT_FATAL("signal assertion failed: " #cond);}}
#20 50.96                                      ^~~~
#20 50.97   CC       celt/rate.lo
#20 50.97   CC       celt/vq.lo
#20 51.53   CC       celt/x86/x86cpu.lo
#20 51.54   CC       celt/x86/x86_celt_map.lo
#20 51.55 1 warning generated.
#20 51.56   CC       celt/x86/pitch_sse.lo
#20 51.61   CC       celt/x86/pitch_sse2.lo
#20 51.67   CC       celt/x86/vq_sse2.lo
#20 51.72   CC       celt/x86/celt_lpc_sse4_1.lo
#20 51.79   CC       celt/x86/pitch_sse4_1.lo
#20 51.80   CC       celt/tests/test_unit_entropy.o
#20 51.82   CC       celt/tests/test_unit_laplace.o
#20 51.89 celt/x86/pitch_sse2.c:59:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.90         inVec1_76543210 = _mm_loadu_si128((__m128i *)(&x[i + 0]));
#20 51.90                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.90 celt/x86/pitch_sse2.c:60:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.90         inVec2_76543210 = _mm_loadu_si128((__m128i *)(&y[i + 0]));
#20 51.90                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.90 celt/x86/pitch_sse2.c:62:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.91         inVec1_FEDCBA98 = _mm_loadu_si128((__m128i *)(&x[i + 8]));
#20 51.91                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.91 celt/x86/pitch_sse2.c:63:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.91         inVec2_FEDCBA98 = _mm_loadu_si128((__m128i *)(&y[i + 8]));
#20 51.91                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.91 celt/x86/pitch_sse2.c:76:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.92         inVec1_76543210 = _mm_loadu_si128((__m128i *)(&x[i + 0]));
#20 51.92                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.92 celt/x86/pitch_sse2.c:77:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.92         inVec2_76543210 = _mm_loadu_si128((__m128i *)(&y[i + 0]));
#20 51.92                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.96   CC       celt/tests/test_unit_mathops.o
#20 51.97 6 warnings generated.
#20 51.98   CC       celt/tests/test_unit_mdct.o
#20 52.03 celt/x86/celt_lpc_sse4_1.c:73:14: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.03       vecX = OP_CVTEPI16_EPI32_M64(x + i);
#20 52.03              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.03 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.03  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.03                                      ^~~~~~~~~~~~~~
#20 52.03 celt/x86/celt_lpc_sse4_1.c:76:24: warning: cast from 'opus_val16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.03       _mm_storel_epi64((__m128i *)(y + i), vecSum);
#20 52.03                        ^~~~~~~~~~~~~~~~~~
#20 52.08 celt/x86/pitch_sse4_1.c:61:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.09         inVec1_76543210 = _mm_loadu_si128((__m128i *)(&x[i + 0]));
#20 52.09                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.09 celt/x86/pitch_sse4_1.c:62:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.09         inVec2_76543210 = _mm_loadu_si128((__m128i *)(&y[i + 0]));
#20 52.09                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.09 celt/x86/pitch_sse4_1.c:64:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.09         inVec1_FEDCBA98 = _mm_loadu_si128((__m128i *)(&x[i + 8]));
#20 52.09                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.09 celt/x86/pitch_sse4_1.c:65:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.09         inVec2_FEDCBA98 = _mm_loadu_si128((__m128i *)(&y[i + 8]));
#20 52.09                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.09 celt/x86/pitch_sse4_1.c:78:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.09         inVec1_76543210 = _mm_loadu_si128((__m128i *)(&x[i + 0]));
#20 52.09                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.09 celt/x86/pitch_sse4_1.c:79:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.09         inVec2_76543210 = _mm_loadu_si128((__m128i *)(&y[i + 0]));
#20 52.09                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.09 celt/x86/pitch_sse4_1.c:89:23: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.09         inVec1_3210 = OP_CVTEPI16_EPI32_M64(&x[i + 0]);
#20 52.09                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.09 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.09  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.09                                      ^~~~~~~~~~~~~~
#20 52.09 celt/x86/pitch_sse4_1.c:90:23: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.09         inVec2_3210 = OP_CVTEPI16_EPI32_M64(&y[i + 0]);
#20 52.09                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.09 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.09  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.09                                      ^~~~~~~~~~~~~~
#20 52.10 celt/x86/pitch_sse4_1.c:137:32: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.10         vecX = _mm_loadu_si128((__m128i *)(&x[j + 0]));
#20 52.10                                ^~~~~~~~~~~~~~~~~~~~~~
#20 52.10 celt/x86/pitch_sse4_1.c:138:33: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.10         vecY0 = _mm_loadu_si128((__m128i *)(&y[j + 0]));
#20 52.10                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 52.10 celt/x86/pitch_sse4_1.c:139:33: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.10         vecY1 = _mm_loadu_si128((__m128i *)(&y[j + 1]));
#20 52.10                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 52.10 celt/x86/pitch_sse4_1.c:140:33: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.10         vecY2 = _mm_loadu_si128((__m128i *)(&y[j + 2]));
#20 52.10                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 52.10 celt/x86/pitch_sse4_1.c:141:33: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.10         vecY3 = _mm_loadu_si128((__m128i *)(&y[j + 3]));
#20 52.10                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 52.10   CC       celt/tests/test_unit_rotation.o
#20 52.10 celt/x86/pitch_sse4_1.c:166:16: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.10         vecX = OP_CVTEPI16_EPI32_M64(&x[j + 0]);
#20 52.10                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.10 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.10  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.10                                      ^~~~~~~~~~~~~~
#20 52.10 celt/x86/pitch_sse4_1.c:172:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.10         vecY0 = OP_CVTEPI16_EPI32_M64(&y[j + 0]);
#20 52.10                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.10 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.10  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.10                                      ^~~~~~~~~~~~~~
#20 52.10 celt/x86/pitch_sse4_1.c:173:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.10         vecY1 = OP_CVTEPI16_EPI32_M64(&y[j + 1]);
#20 52.10                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.10 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.10  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.10                                      ^~~~~~~~~~~~~~
#20 52.10 celt/x86/pitch_sse4_1.c:174:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.10         vecY2 = OP_CVTEPI16_EPI32_M64(&y[j + 2]);
#20 52.10                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.10 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.10  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.10                                      ^~~~~~~~~~~~~~
#20 52.10 celt/x86/pitch_sse4_1.c:175:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.10         vecY3 = OP_CVTEPI16_EPI32_M64(&y[j + 3]);
#20 52.10                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.10 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.10  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.10                                      ^~~~~~~~~~~~~~
#20 52.11 celt/x86/pitch_sse4_1.c:188:12: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.11     vecX = OP_CVTEPI16_EPI32_M64(&x[len - 4]);
#20 52.11            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.11 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.11  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.11                                      ^~~~~~~~~~~~~~
#20 52.11 celt/x86/pitch_sse4_1.c:195:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.11         vecY0 = OP_CVTEPI16_EPI32_M64(&y[j + 0]);
#20 52.11                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.11 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.11  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.11                                      ^~~~~~~~~~~~~~
#20 52.11 celt/x86/pitch_sse4_1.c:196:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.11         vecY1 = OP_CVTEPI16_EPI32_M64(&y[j + 1]);
#20 52.11                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.11 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.11  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.11                                      ^~~~~~~~~~~~~~
#20 52.11 celt/x86/pitch_sse4_1.c:197:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.11         vecY2 = OP_CVTEPI16_EPI32_M64(&y[j + 2]);
#20 52.11                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.11 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.11  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.11                                      ^~~~~~~~~~~~~~
#20 52.11 celt/x86/pitch_sse4_1.c:212:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.11         vecY0 = OP_CVTEPI16_EPI32_M64(&y[j + 0]);
#20 52.11                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.11 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.11  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.11                                      ^~~~~~~~~~~~~~
#20 52.11 celt/x86/pitch_sse4_1.c:213:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.11         vecY1 = OP_CVTEPI16_EPI32_M64(&y[j + 1]);
#20 52.11                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.11 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.11  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.11                                      ^~~~~~~~~~~~~~
#20 52.11 celt/x86/pitch_sse4_1.c:225:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.11         vecY0 = OP_CVTEPI16_EPI32_M64(&y[j + 0]);
#20 52.11                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.11 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.11  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.11                                      ^~~~~~~~~~~~~~
#20 52.11 celt/x86/pitch_sse4_1.c:232:31: warning: cast from 'opus_val32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 52.11     initSum = _mm_loadu_si128((__m128i *)(&sum[0]));
#20 52.11                               ^~~~~~~~~~~~~~~~~~~~
#20 52.11 celt/x86/pitch_sse4_1.c:234:22: warning: cast from 'opus_val32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 52.11     _mm_storeu_si128((__m128i *)sum, initSum);
#20 52.11                      ^~~~~~~~~~~~~~
#20 52.15 2 warnings generated.
#20 52.17   CC       celt/tests/test_unit_types.o
#20 52.24   CC       src/opus_demo.o
#20 52.26   CC       silk/CNG.lo
#20 52.27 27 warnings generated.
#20 52.27   CC       silk/code_signs.lo
#20 52.28   CC       silk/init_decoder.lo
#20 52.29   CC       silk/decode_core.lo
#20 52.47   CC       silk/decode_frame.lo
#20 52.58   CC       silk/decode_parameters.lo
#20 52.62   CC       silk/decode_indices.lo
#20 52.76   CC       silk/decode_pulses.lo
#20 52.77   CC       silk/decoder_set_fs.lo
#20 52.87   CC       silk/dec_API.lo
#20 52.91   CC       silk/enc_API.lo
#20 52.93   CC       silk/encode_indices.lo
#20 52.99   CC       silk/encode_pulses.lo
#20 53.05   CC       silk/gain_quant.lo
#20 53.05   CC       silk/interpolate.lo
#20 53.11   CC       silk/LP_variable_cutoff.lo
#20 53.30   CC       silk/NLSF_decode.lo
#20 53.35   CC       silk/NSQ.lo
#20 53.41   CC       silk/NSQ_del_dec.lo
#20 53.43   CC       silk/PLC.lo
#20 53.44   CC       silk/shell_coder.lo
#20 53.54   CC       silk/tables_gain.lo
#20 53.57   CC       silk/tables_LTP.lo
#20 53.60   CC       silk/tables_NLSF_CB_NB_MB.lo
#20 53.72   CC       silk/tables_NLSF_CB_WB.lo
#20 53.79   CC       silk/tables_other.lo
#20 53.79   CC       silk/tables_pitch_lag.lo
#20 53.82   CC       silk/tables_pulses_per_block.lo
#20 53.86   CC       silk/VAD.lo
#20 53.98   CC       silk/control_audio_bandwidth.lo
#20 54.04   CC       silk/quant_LTP_gains.lo
#20 54.05   CC       silk/VQ_WMat_EC.lo
#20 54.05   CC       silk/HP_variable_cutoff.lo
#20 54.09   CC       silk/NLSF_encode.lo
#20 54.09   CC       silk/NLSF_VQ.lo
#20 54.26   CC       silk/NLSF_unpack.lo
#20 54.34   CC       silk/NLSF_del_dec_quant.lo
#20 54.37   CC       silk/process_NLSFs.lo
#20 54.41   CC       silk/stereo_LR_to_MS.lo
#20 54.41   CC       silk/stereo_MS_to_LR.lo
#20 54.44   CC       silk/check_control_input.lo
#20 54.46   CC       silk/control_SNR.lo
#20 54.49   CC       silk/init_encoder.lo
#20 54.54   CC       silk/control_codec.lo
#20 54.68   CC       silk/A2NLSF.lo
#20 54.74   CC       silk/ana_filt_bank_1.lo
#20 54.75   CC       silk/biquad_alt.lo
#20 54.77   CC       silk/bwexpander_32.lo
#20 54.78   CC       silk/bwexpander.lo
#20 54.82   CC       silk/debug.lo
#20 54.95   CC       silk/decode_pitch.lo
#20 54.97   CC       silk/inner_prod_aligned.lo
#20 55.01   CC       silk/lin2log.lo
#20 55.02   CC       silk/log2lin.lo
#20 55.06   CC       silk/LPC_analysis_filter.lo
#20 55.06   CC       silk/LPC_inv_pred_gain.lo
#20 55.07   CC       silk/table_LSF_cos.lo
#20 55.22   CC       silk/NLSF2A.lo
#20 55.24   CC       silk/NLSF_stabilize.lo
#20 55.29   CC       silk/NLSF_VQ_weights_laroia.lo
#20 55.30   CC       silk/pitch_est_tables.lo
#20 55.31   CC       silk/resampler.lo
#20 55.35   CC       silk/resampler_down2_3.lo
#20 55.43   CC       silk/resampler_down2.lo
#20 55.49   CC       silk/resampler_private_AR2.lo
#20 55.58   CC       silk/resampler_private_down_FIR.lo
#20 55.59   CC       silk/resampler_private_IIR_FIR.lo
#20 55.62   CC       silk/resampler_private_up2_HQ.lo
#20 55.65   CC       silk/resampler_rom.lo
#20 55.65   CC       silk/sigm_Q15.lo
#20 55.66   CC       silk/sort.lo
#20 55.75   CC       silk/sum_sqr_shift.lo
#20 55.77   CC       silk/stereo_decode_pred.lo
#20 55.89   CC       silk/stereo_encode_pred.lo
#20 55.92   CC       silk/stereo_find_predictor.lo
#20 55.93   CC       silk/stereo_quant_pred.lo
#20 55.93   CC       silk/LPC_fit.lo
#20 56.07   CC       silk/fixed/LTP_analysis_filter_FIX.lo
#20 56.07   CC       silk/fixed/LTP_scale_ctrl_FIX.lo
#20 56.09   CC       silk/fixed/corrMatrix_FIX.lo
#20 56.09   CC       silk/fixed/encode_frame_FIX.lo
#20 56.17   CC       silk/fixed/find_LPC_FIX.lo
#20 56.25   CC       silk/fixed/find_LTP_FIX.lo
#20 56.27   CC       silk/fixed/find_pitch_lags_FIX.lo
#20 56.33   CC       silk/fixed/find_pred_coefs_FIX.lo
#20 56.39   CC       silk/fixed/noise_shape_analysis_FIX.lo
#20 56.43   CC       silk/fixed/process_gains_FIX.lo
#20 56.52   CC       silk/fixed/regularize_correlations_FIX.lo
#20 56.52   CC       silk/fixed/residual_energy16_FIX.lo
#20 56.59   CC       silk/fixed/residual_energy_FIX.lo
#20 56.62   CC       silk/fixed/warped_autocorrelation_FIX.lo
#20 56.63   CC       silk/fixed/apply_sine_window_FIX.lo
#20 56.73   CC       silk/fixed/autocorr_FIX.lo
#20 56.80   CC       silk/fixed/burg_modified_FIX.lo
#20 56.83   CC       silk/fixed/k2a_FIX.lo
#20 56.90   CC       silk/fixed/k2a_Q16_FIX.lo
#20 56.91   CC       silk/fixed/pitch_analysis_core_FIX.lo
#20 56.93   CC       silk/fixed/vector_ops_FIX.lo
#20 56.99   CC       silk/fixed/schur64_FIX.lo
#20 57.03   CC       silk/fixed/schur_FIX.lo
#20 57.11   CC       silk/x86/NSQ_sse4_1.lo
#20 57.18   CC       silk/x86/NSQ_del_dec_sse4_1.lo
#20 57.29   CC       silk/x86/x86_silk_map.lo
#20 57.31   CC       silk/x86/VAD_sse4_1.lo
#20 57.36   CC       silk/x86/VQ_WMat_EC_sse4_1.lo
#20 57.43   CC       silk/fixed/x86/vector_ops_FIX_sse4_1.lo
#20 57.48 silk/x86/NSQ_sse4_1.c:341:39: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.48     a_Q12_01234567 = _mm_loadu_si128( (__m128i *)(&a_Q12[ 0 ] ) );
#20 57.48                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.48 silk/x86/NSQ_sse4_1.c:343:39: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.48     a_Q12_89ABCDEF = _mm_loadu_si128( (__m128i *)(&a_Q12[ 8 ] ) );
#20 57.48                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.48 silk/x86/NSQ_sse4_1.c:349:44: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.48     AR_shp_Q13_76543210 = _mm_loadu_si128( (__m128i *)(&AR_shp_Q13[0] ) );
#20 57.48                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.48 silk/x86/NSQ_sse4_1.c:354:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.48     xmm_tempa = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[-16]) );
#20 57.48                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.48 silk/x86/NSQ_sse4_1.c:355:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.48     xmm_tempb = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[-12]) );
#20 57.48                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.48 silk/x86/NSQ_sse4_1.c:363:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.48     xmm_tempa = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -8 ]) );
#20 57.48                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.48 silk/x86/NSQ_sse4_1.c:364:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.48     xmm_tempb = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -4 ]) );
#20 57.48                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.48 silk/x86/NSQ_sse4_1.c:373:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.48     xmm_tempa = _mm_loadu_si128( (__m128i *)(&(NSQ->sAR2_Q14[ 0 ]) ) );
#20 57.49                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.49 silk/x86/NSQ_sse4_1.c:374:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.49     xmm_tempb = _mm_loadu_si128( (__m128i *)(&(NSQ->sAR2_Q14[ 4 ]) ) );
#20 57.49                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.49 silk/x86/NSQ_sse4_1.c:442:30: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.49                 b_Q14_3210 = OP_CVTEPI16_EPI32_M64( b_Q14 );
#20 57.49                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.49 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.49  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.49                                      ^~~~~~~~~~~~~~
#20 57.49 silk/x86/NSQ_sse4_1.c:446:54: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.50                 pred_lag_ptr_0123 = _mm_loadu_si128( (__m128i *)(&pred_lag_ptr[ -3 ] ) );
#20 57.50                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.50 silk/x86/NSQ_sse4_1.c:598:23: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.50     _mm_storeu_si128( (__m128i *)(&NSQ->sAR2_Q14[ 4 ]), xmm_tempa );
#20 57.50                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.51 silk/x86/NSQ_sse4_1.c:599:23: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.51     _mm_storeu_si128( (__m128i *)(&NSQ->sAR2_Q14[ 0 ]), xmm_tempb );
#20 57.51                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.51 silk/x86/NSQ_sse4_1.c:615:48: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.51             xmm_xq_Q14_3210 = _mm_loadu_si128( (__m128i *)(&(psLPC_Q14[ i + 0 ] ) ) );
#20 57.51                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.51 silk/x86/NSQ_sse4_1.c:616:48: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.51             xmm_xq_Q14_7654 = _mm_loadu_si128( (__m128i *)(&(psLPC_Q14[ i + 4 ] ) ) );
#20 57.51                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.51 silk/x86/NSQ_sse4_1.c:647:31: warning: cast from 'opus_int16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.51             _mm_storeu_si128( (__m128i *)(&xq[ i ] ), xmm_xq_Q14_3210 );
#20 57.51                               ^~~~~~~~~~~~~~~~~~~~~~
#20 57.52 silk/x86/NSQ_sse4_1.c:688:24: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.52         xmm_x16_x2x0 = OP_CVTEPI16_EPI32_M64( &(x16[ i ] ) );
#20 57.52                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.52 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.52  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.52                                      ^~~~~~~~~~~~~~
#20 57.52 silk/x86/NSQ_sse4_1.c:701:27: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.53         _mm_storeu_si128( (__m128i *)(&(x_sc_Q10[ i ] ) ), xmm_x16_x2x0 );
#20 57.53                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.53 silk/x86/NSQ_sse4_1.c:732:54: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.53             xmm_sLTP_shp_Q14_x2x0 = _mm_loadu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ) );
#20 57.53                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.53 silk/x86/NSQ_sse4_1.c:744:31: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.53             _mm_storeu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ), xmm_sLTP_shp_Q14_x2x0 );
#20 57.53                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.57 silk/x86/NSQ_del_dec_sse4_1.c:408:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.57     a_Q12_0123 = OP_CVTEPI16_EPI32_M64( a_Q12 );
#20 57.57                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.57 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.57  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.57                                      ^~~~~~~~~~~~~~
#20 57.57 silk/x86/NSQ_del_dec_sse4_1.c:409:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.57     a_Q12_4567 = OP_CVTEPI16_EPI32_M64( a_Q12 + 4 );
#20 57.57                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.57 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.57  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.57                                      ^~~~~~~~~~~~~~
#20 57.57 silk/x86/NSQ_del_dec_sse4_1.c:412:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.57         a_Q12_89AB = OP_CVTEPI16_EPI32_M64( a_Q12 + 8 );
#20 57.57                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.57 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.57  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.57                                      ^~~~~~~~~~~~~~
#20 57.57 silk/x86/NSQ_del_dec_sse4_1.c:413:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.57         a_Q12_CDEF = OP_CVTEPI16_EPI32_M64( a_Q12 + 12 );
#20 57.57                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.57 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.57  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.57                                      ^~~~~~~~~~~~~~
#20 57.57 silk/x86/NSQ_del_dec_sse4_1.c:417:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.57         b_Q12_0123 = OP_CVTEPI16_EPI32_M64( b_Q14 );
#20 57.57                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.57 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.57  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.57                                      ^~~~~~~~~~~~~~
#20 57.57 silk/x86/NSQ_del_dec_sse4_1.c:430:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.57                 pred_lag_ptr_tmp    = _mm_loadu_si128( (__m128i *)(&pred_lag_ptr[ -3 ] ) );
#20 57.57                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.58 silk/x86/NSQ_del_dec_sse4_1.c:485:52: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.58                 psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -3 ] ) ); /* -3, -2 , -1, 0 */
#20 57.58                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.58 silk/x86/NSQ_del_dec_sse4_1.c:499:52: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.58                 psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -7 ] ) );
#20 57.58                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.58 silk/x86/NSQ_del_dec_sse4_1.c:514:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.58                     psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -11 ] ) );
#20 57.58                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.58 silk/x86/NSQ_del_dec_sse4_1.c:527:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.58                     psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -15 ] ) );
#20 57.58                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.60   CC       silk/fixed/x86/burg_modified_FIX_sse4_1.lo
#20 57.60 silk/x86/NSQ_del_dec_sse4_1.c:819:24: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.60         xmm_x16_x2x0 = OP_CVTEPI16_EPI32_M64( &(x16[ i ] ) );
#20 57.60                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.60 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.60  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.60                                      ^~~~~~~~~~~~~~
#20 57.60 silk/x86/NSQ_del_dec_sse4_1.c:832:27: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.60         _mm_storeu_si128( (__m128i *)(&(x_sc_Q10[ i ] ) ), xmm_x16_x2x0 );
#20 57.60                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.60 silk/x86/NSQ_del_dec_sse4_1.c:864:58: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.60                 xmm_sLTP_shp_Q14_x2x0 = _mm_loadu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ) );
#20 57.60                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.61 silk/x86/NSQ_del_dec_sse4_1.c:876:35: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.61                 _mm_storeu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ), xmm_sLTP_shp_Q14_x2x0 );
#20 57.61                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.66   CCLD     celt/tests/test_unit_cwrs32
#20 57.68 silk/x86/VAD_sse4_1.c:147:44: warning: cast from 'opus_int16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.68                 xmm_X   = _mm_loadu_si128( (__m128i *)&(X[ X_offset[ b ] + i + dec_subframe_offset ] ) );
#20 57.68                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.73 silk/x86/VQ_WMat_EC_sse4_1.c:68:36: warning: cast from 'const opus_int32 *' (aka 'const int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.73     v_XX_31_Q17 = _mm_loadu_si128( (__m128i *)(&XX_Q17[ 1 ] ) );
#20 57.73                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.73 silk/x86/VQ_WMat_EC_sse4_1.c:88:26: warning: cast from 'const opus_int8 *' (aka 'const signed char *') to 'int *' increases required alignment from 1 to 4 [-Wcast-align]
#20 57.73         v_cb_row_31_Q7 = OP_CVTEPI8_EPI32_M32( &cb_row_Q7[ 1 ] );
#20 57.73                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.73 ./celt/x86/x86cpu.h:60:40: note: expanded from macro 'OP_CVTEPI8_EPI32_M32'
#20 57.73  (_mm_cvtepi8_epi32(_mm_cvtsi32_si128(*(int *)(x))))
#20 57.73                                        ^~~~~~~~~~
#20 57.79 silk/fixed/x86/vector_ops_FIX_sse4_1.c:60:23: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.79         inVec1_3210 = OP_CVTEPI16_EPI32_M64( &inVec1[i + 0] );
#20 57.79                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.79 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.79  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.79                                      ^~~~~~~~~~~~~~
#20 57.79 silk/fixed/x86/vector_ops_FIX_sse4_1.c:61:23: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.79         inVec2_3210 = OP_CVTEPI16_EPI32_M64( &inVec2[i + 0] );
#20 57.79                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.79 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.79  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.79                                      ^~~~~~~~~~~~~~
#20 57.79 silk/fixed/x86/vector_ops_FIX_sse4_1.c:78:23: warning: cast from 'opus_int64 *' (aka 'long *') to '__m128i *' increases required alignment from 8 to 16 [-Wcast-align]
#20 57.79     _mm_storel_epi64( (__m128i *)&sum, acc1 );
#20 57.79                       ^~~~~~~~~~~~~~~
#20 57.81 2 warnings generated.
#20 57.84   CCLD     celt/tests/test_unit_dft
#20 57.85 3 warnings generated.
#20 57.87   CCLD     celt/tests/test_unit_entropy
#20 57.97 silk/fixed/x86/burg_modified_FIX_sse4_1.c:163:34: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.97                     PTR_3210   = OP_CVTEPI16_EPI32_M64( &x_ptr[ n - k - 1 - 3 ] );
#20 57.97                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.97 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.97  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.97                                      ^~~~~~~~~~~~~~
#20 57.97 silk/fixed/x86/burg_modified_FIX_sse4_1.c:164:34: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.97                     SUBFR_3210 = OP_CVTEPI16_EPI32_M64( &x_ptr[ subfr_length - n + k ] );
#20 57.97                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.97 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.97  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.97                                      ^~~~~~~~~~~~~~
#20 57.97 silk/fixed/x86/burg_modified_FIX_sse4_1.c:165:51: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.97                     FIRST_3210 = _mm_loadu_si128( (__m128i *)&C_first_row[ k ] );
#20 57.97                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.97 silk/fixed/x86/burg_modified_FIX_sse4_1.c:167:51: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.97                     LAST_3210  = _mm_loadu_si128( (__m128i *)&C_last_row[ k ] );
#20 57.97                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.97 silk/fixed/x86/burg_modified_FIX_sse4_1.c:168:51: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.97                     ATMP_3210  = _mm_loadu_si128( (__m128i *)&Af_QA[ k ] );
#20 57.97                                                   ^~~~~~~~~~~~~~~~~~~~~~
#20 57.97 silk/fixed/x86/burg_modified_FIX_sse4_1.c:183:39: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.97                     _mm_storeu_si128( (__m128i *)&C_first_row[ k ], FIRST_3210 );
#20 57.97                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.97 silk/fixed/x86/burg_modified_FIX_sse4_1.c:184:39: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.97                     _mm_storeu_si128( (__m128i *)&C_last_row[ k ], LAST_3210 );
#20 57.97                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.97 silk/fixed/x86/burg_modified_FIX_sse4_1.c:221:46: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.97                         xmm_x_ptr_n_k_x2x0 = OP_CVTEPI16_EPI32_M64( &x_ptr[ n - k - 3 ] );
#20 57.97                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.97 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.97  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.97                                      ^~~~~~~~~~~~~~
#20 57.98 silk/fixed/x86/burg_modified_FIX_sse4_1.c:222:46: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.98                         xmm_x_ptr_sub_x2x0 = OP_CVTEPI16_EPI32_M64( &x_ptr[ subfr_length - n + k - 1 ] );
#20 57.98                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.98 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 57.98  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 57.98                                      ^~~~~~~~~~~~~~
#20 57.98 silk/fixed/x86/burg_modified_FIX_sse4_1.c:246:53: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.98                         X1_3210  = _mm_loadu_si128( (__m128i *)&CAf[ k ] );
#20 57.98                                                     ^~~~~~~~~~~~~~~~~~~~
#20 57.98 silk/fixed/x86/burg_modified_FIX_sse4_1.c:247:53: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.98                         PTR_3210 = _mm_loadu_si128( (__m128i *)&CAb[ k ] );
#20 57.98                                                     ^~~~~~~~~~~~~~~~~~~~
#20 57.98 silk/fixed/x86/burg_modified_FIX_sse4_1.c:252:43: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.98                         _mm_storeu_si128( (__m128i *)&CAf[ k ], X1_3210 );
#20 57.98                                           ^~~~~~~~~~~~~~~~~~~~
#20 57.98 silk/fixed/x86/burg_modified_FIX_sse4_1.c:253:43: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 57.98                         _mm_storeu_si128( (__m128i *)&CAb[ k ], PTR_3210 );
#20 57.98                                           ^~~~~~~~~~~~~~~~~~~~
#20 58.05   CCLD     celt/tests/test_unit_laplace
#20 58.12   CCLD     celt/tests/test_unit_mathops
#20 58.13 1 warning generated.
#20 58.15   CCLD     celt/tests/test_unit_mdct
#20 58.20 20 warnings generated.
#20 58.22   CCLD     celt/tests/test_unit_rotation
#20 58.27   CCLD     celt/tests/test_unit_types
#20 58.46 14 warnings generated.
#20 58.65 13 warnings generated.
#20 58.66   CCLD     libopus.la
#20 58.67   CCLD     silk/tests/test_unit_LPC_inv_pred_gain
#20 58.67   CCLD     tests/test_opus_projection
#20 59.11   CCLD     opus_demo
#20 59.11   CCLD     repacketizer_demo
#20 59.11   CCLD     tests/test_opus_api
#20 59.11   CCLD     tests/test_opus_decode
#20 59.11   CCLD     tests/test_opus_encode
#20 59.11   CCLD     tests/test_opus_padding
#20 59.43   CCLD     trivial_example
#20 59.77 make[2]: Leaving directory '/src/opus'
#20 59.77 make[1]: Leaving directory '/src/opus'
#20 59.77 + for fuzzer in $FUZZERS
#20 59.77 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -Iinclude tests/opus_decode_fuzzer.c -o opus_decode_fuzzer.o
#20 59.84 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard opus_decode_fuzzer.o -o /out/opus_decode_fuzzer_fixed /libAFL.a .libs/libopus.a
#20 60.10 + '[' -f tests/opus_decode_fuzzer.options ']'
#20 60.10 + cp tests/opus_decode_fuzzer.options /out/opus_decode_fuzzer_fixed.options
#20 60.10 + zip -r /out/opus_decode_fuzzer_fixed_seed_corpus.zip opus_testvectors/
#20 60.11   adding: opus_testvectors/ (stored 0%)
#20 60.11   adding: opus_testvectors/testvector03.bit (deflated 2%)
#20 60.11   adding: opus_testvectors/testvector01.bit (deflated 15%)
#20 60.14   adding: opus_testvectors/testvector07.bit (deflated 4%)
#20 60.16   adding: opus_testvectors/testvector02.bit (deflated 3%)
#20 60.16   adding: opus_testvectors/testvector12.bit (deflated 4%)
#20 60.16   adding: opus_testvectors/testvector03.dec (deflated 48%)
#20 60.41   adding: opus_testvectors/testvector06.dec (deflated 45%)
#20 60.72   adding: opus_testvectors/testvector11.dec (deflated 7%)
#20 61.00   adding: opus_testvectors/testvector11.bit (deflated 0%)
#20 61.02   adding: opus_testvectors/testvector06.bit (deflated 3%)
#20 61.03   adding: opus_testvectors/testvector08.dec (deflated 38%)
#20 61.35   adding: opus_testvectors/testvector02.dec (deflated 50%)
#20 61.63   adding: opus_testvectors/testvector01.dec (deflated 29%)
#20 62.03   adding: opus_testvectors/testvector05.bit (deflated 3%)
#20 62.04   adding: opus_testvectors/testvector08.bit (deflated 1%)
#20 62.04   adding: opus_testvectors/testvector09.bit (deflated 11%)
#20 62.08   adding: opus_testvectors/testvector10.dec (deflated 49%)
#20 62.38   adding: opus_testvectors/testvector07.dec (deflated 44%)
#20 62.64   adding: opus_testvectors/testvector04.dec (deflated 49%)
#20 62.95   adding: opus_testvectors/testvector09.dec (deflated 43%)
#20 63.28   adding: opus_testvectors/testvector05.dec (deflated 47%)
#20 63.61   adding: opus_testvectors/testvector12.dec (deflated 61%)
#20 63.91   adding: opus_testvectors/testvector10.bit (deflated 9%)
#20 63.94   adding: opus_testvectors/testvector04.bit (deflated 3%)
#20 63.95 + for fuzzer in $FUZZERS
#20 63.95 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -Iinclude tests/opus_multi_fuzzer.c -o opus_multi_fuzzer.o
#20 64.02 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard opus_multi_fuzzer.o -o /out/opus_multi_fuzzer_fixed /libAFL.a .libs/libopus.a
#20 64.29 + '[' -f tests/opus_multi_fuzzer.options ']'
#20 64.29 + zip -r /out/opus_multi_fuzzer_fixed_seed_corpus.zip opus_testvectors/
#20 64.29   adding: opus_testvectors/ (stored 0%)
#20 64.29   adding: opus_testvectors/testvector03.bit (deflated 2%)
#20 64.29   adding: opus_testvectors/testvector01.bit (deflated 15%)
#20 64.32   adding: opus_testvectors/testvector07.bit (deflated 4%)
#20 64.34   adding: opus_testvectors/testvector02.bit (deflated 3%)
#20 64.34   adding: opus_testvectors/testvector12.bit (deflated 4%)
#20 64.34   adding: opus_testvectors/testvector03.dec (deflated 48%)
#20 64.59   adding: opus_testvectors/testvector06.dec (deflated 45%)
#20 64.89   adding: opus_testvectors/testvector11.dec (deflated 7%)
#20 65.17   adding: opus_testvectors/testvector11.bit (deflated 0%)
#20 65.19   adding: opus_testvectors/testvector06.bit (deflated 3%)
#20 65.20   adding: opus_testvectors/testvector08.dec (deflated 38%)
#20 65.52   adding: opus_testvectors/testvector02.dec (deflated 50%)
#20 65.80   adding: opus_testvectors/testvector01.dec (deflated 29%)
#20 66.20   adding: opus_testvectors/testvector05.bit (deflated 3%)
#20 66.21   adding: opus_testvectors/testvector08.bit (deflated 1%)
#20 66.21   adding: opus_testvectors/testvector09.bit (deflated 11%)
#20 66.25   adding: opus_testvectors/testvector10.dec (deflated 49%)
#20 66.55   adding: opus_testvectors/testvector07.dec (deflated 44%)
#20 66.81   adding: opus_testvectors/testvector04.dec (deflated 49%)
#20 67.11   adding: opus_testvectors/testvector09.dec (deflated 43%)
#20 67.44   adding: opus_testvectors/testvector05.dec (deflated 47%)
#20 67.77   adding: opus_testvectors/testvector12.dec (deflated 61%)
#20 68.07   adding: opus_testvectors/testvector10.bit (deflated 9%)
#20 68.11   adding: opus_testvectors/testvector04.bit (deflated 3%)
#20 68.11 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 68.6s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:c78ce3ebb3fb412d31ae48d2a000551eb9450ffd5664f2b38a5729d8d9788fe9 done
#21 naming to gcr.io/fuzzbench/builders/afl/opus_opus_projection_decoder_fuzzer done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus_projection_decoder_fuzzer:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:e6dfc7b6c62e482ceea8924960101c30eec07bf1510ae7288a90c950d29ab54e
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:5872de2b6d32dbd780000965fe84e151f87aec3b240e3e00bffd5a315c0fa6ac
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus_projection_decoder_fuzzer-intermediate
#5 sha256:41bac63719501aaf79d45cceaa47b5d395b4f05ad8dc8c6773f7dab1ab0831cd
#5 ERROR: gcr.io/fuzzbench/runners/afl/opus_opus_projection_decoder_fuzzer-intermediate:latest: not found

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:a75bb0b8a3d6ff10c4e4f0b01262d9c6b8d28fb7a48062d52ee04e8302c3dcb7 done
#6 naming to gcr.io/fuzzbench/runners/afl/opus_opus_projection_decoder_fuzzer-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus_projection_decoder_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:e9187017ab1e16ca28096568861459d0e4f7f965726ec5d93ea3aa2ceb048685
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:bf760876eb72958f66fddc451cb9bb719a153c64d6e06624f6d9ce85d28de985
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/opus_opus_projection_decoder_fuzzer-intermediate:latest
#3 sha256:41a411a56094d6c1a27371b49e205f1f87c234164bd180199cb6a7e5b0dbe6cb
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/opus_opus_projection_decoder_fuzzer:latest
#4 sha256:91f54da031ba86df897fd0cf3f182f743bf4e4320f9a843051608032bfe0c5a3
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:85b0d1fb7df8fbc3b3b619eb8dc9429aef85c0cb0238bf6066e5b492d791b08a
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/opus_opus_projection_decoder_fuzzer-intermediate
#6 sha256:c63f327f1fd48f8476506eeb26b7e37760c964f50e8f3c272080863caa48e7f9
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/opus_opus_projection_decoder_fuzzer
#10 sha256:35fe64af91c661be1ff986355b8b065e9d343c8da34cd6667eac046b076ac2dd
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus_projection_decoder_fuzzer
#5 sha256:3e2f7bf2521def6ebc807256611bb1cf0aeed63d6628d9521c330631176bf41f
#5 ERROR: gcr.io/fuzzbench/runners/afl/opus_opus_projection_decoder_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:85b0d1fb7df8fbc3b3b619eb8dc9429aef85c0cb0238bf6066e5b492d791b08a
#12 transferring context: 9.05MB 0.2s done
#12 DONE 0.2s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/opus_opus_projection_decoder_fuzzer
#10 sha256:35fe64af91c661be1ff986355b8b065e9d343c8da34cd6667eac046b076ac2dd
#10 DONE 0.4s

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:03c49b3094df4dec3bfd1835be9ef5af1286776f46692ce724bb2a32e95f48f5
#8 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:f7f334facf6f59efb219e00ff57633dda8344b965189f26bd2af6c4caa4f0ab8
#7 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:6b45aa863f01c2315fe375306891050d59c0146a81b18f8a78a12e557f3a5f83
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:eec924ef19861777f3b1e896a13e1e4324df5ea089cc1edd2eb356483d3cb4ad
#11 DONE 0.9s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:70b56335a23b3b69b6697bf966c0ff83ac89d2fea23913fd5e7f7da05d5c81b0
#13 DONE 0.5s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:836a3088f2672ea2a8143f2d5a2b06c348cd06275ea5d7d956f1c4afef5c6310
#14 DONE 0.4s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:f021d3ac99a2e613d02ce3cb6383486357307469ae6b63bbf2422a2dd8ff4fd4
#15 DONE 0.7s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:3ecc4d5d8e5e77ff08196bbf4690a041fa252b3a5516af1d97bbd5036e0142d4
#16 DONE 0.7s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:e6d499430390ca8aac8e5ce3713efb19cf3423f058ebb616639e93ca06cda378
#17 DONE 0.3s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:c935852064cdf2f3ed03f554f66b95f83ee9fc042709a160dd98bee46b52b825
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:728474207ea37868222a44577a87054f507d38037e489b048a191d38f7fbb4a9
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:6e9a8b126e207d58fb0ae44542b196c124d48ad346a08f6926015508abe767cb
#20 DONE 0.5s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:037a93999f3c0e4e1455229da6d1b344bfd0685c08b4e50141dd553c35eaf852 done
#21 naming to gcr.io/fuzzbench/runners/afl/opus_opus_projection_decoder_fuzzer done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus_projection_decoder_fuzzer:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f726eb5c790> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
