WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: lzo_all_lzo_compress.
INFO:root:Please run "make test-run-afl-lzo_all_lzo_compress" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:66c2a6844e51fe66fffa1b5c8549323719b14a31f86597c3dc35661e20fdcfe9
#1 transferring dockerfile: 1.01kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:e6243c5d80f88409cb59fa6bdece2827178cfda8b13e9a78c1e465b2462e18af
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#4 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#4 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#4 DONE 0.0s

#7 [internal] load build context
#7 sha256:cd44db5a4d779f23c48efb13ac558941a7b56d71177e75d87b3ebc1ea8ced564
#7 DONE 0.0s

#10 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lzo_all_lzo_compress
#10 sha256:cb56da3b6f02263eafa434dd1566810b9cf0d4349e58297b5088efdb425f6040
#10 ERROR: gcr.io/fuzzbench/builders/benchmark/lzo_all_lzo_compress:latest: not found

#4 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#4 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#4 CACHED

#7 [internal] load build context
#7 sha256:cd44db5a4d779f23c48efb13ac558941a7b56d71177e75d87b3ebc1ea8ced564
#7 transferring context: 17.83kB done
#7 DONE 0.1s

#5 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#5 sha256:4a36570962698a9dd6707bba1ce7d1da85f2389d0ec6c6f4efe406fbfa0cedec
#5 1.906 Get:1 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#5 1.935 Hit:2 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#5 2.037 Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease
#5 2.138 Get:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#5 2.526 Get:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#5 2.816 Get:6 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [870 kB]
#5 2.998 Get:7 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [679 kB]
#5 3.073 Get:8 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [1139 kB]
#5 3.218 Get:9 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1771 kB]
#5 3.362 Get:10 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [526 kB]
#5 3.430 Get:11 http://security.ubuntu.com/ubuntu focal-security/restricted i386 Packages [26.7 kB]
#5 4.170 Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [2185 kB]
#5 4.666 Get:13 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1153 kB]
#5 4.760 Get:14 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [839 kB]
#5 4.818 Get:15 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [791 kB]
#5 4.878 Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted i386 Packages [29.5 kB]
#5 4.880 Get:17 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [1214 kB]
#5 4.974 Get:18 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [26.0 kB]
#5 4.976 Get:19 http://archive.ubuntu.com/ubuntu focal-backports/universe i386 Packages [14.4 kB]
#5 5.953 Fetched 11.6 MB in 4s (2850 kB/s)
#5 5.953 Reading package lists...
#5 9.795 Reading package lists...
#5 13.23 Building dependency tree...
#5 13.71 Reading state information...
#5 14.29 make is already the newest version (4.2.1-1.2).
#5 14.29 make set to manually installed.
#5 14.29 wget is already the newest version (1.20.3-1ubuntu2).
#5 14.29 The following additional packages will be installed:
#5 14.29   autotools-dev libltdl-dev libltdl7 libsigsegv2 m4
#5 14.30 Suggested packages:
#5 14.30   autoconf-archive gnu-standards autoconf-doc gettext libtool-doc gfortran
#5 14.30   | fortran95-compiler gcj-jdk m4-doc
#5 14.37 The following NEW packages will be installed:
#5 14.38   autoconf automake autotools-dev libltdl-dev libltdl7 libsigsegv2 libtool m4
#5 14.65 0 upgraded, 8 newly installed, 0 to remove and 2 not upgraded.
#5 14.65 Need to get 1457 kB of archives.
#5 14.65 After this operation, 6651 kB of additional disk space will be used.
#5 14.65 Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 libsigsegv2 amd64 2.12-2 [13.9 kB]
#5 14.75 Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 m4 amd64 1.4.18-4 [199 kB]
#5 15.07 Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 autoconf all 2.69-11.1 [321 kB]
#5 15.20 Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 autotools-dev all 20180224.1 [39.6 kB]
#5 15.20 Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 automake all 1:1.16.1-4ubuntu6 [522 kB]
#5 15.30 Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl7 amd64 2.4.6-14 [38.5 kB]
#5 15.30 Get:7 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl-dev amd64 2.4.6-14 [162 kB]
#5 15.32 Get:8 http://archive.ubuntu.com/ubuntu focal/main amd64 libtool all 2.4.6-14 [161 kB]
#5 15.93 debconf: delaying package configuration, since apt-utils is not installed
#5 16.07 Fetched 1457 kB in 1s (1563 kB/s)
#5 16.16 Selecting previously unselected package libsigsegv2:amd64.
#5 16.16 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21308 files and directories currently installed.)
#5 16.22 Preparing to unpack .../0-libsigsegv2_2.12-2_amd64.deb ...
#5 16.22 Unpacking libsigsegv2:amd64 (2.12-2) ...
#5 16.30 Selecting previously unselected package m4.
#5 16.31 Preparing to unpack .../1-m4_1.4.18-4_amd64.deb ...
#5 16.31 Unpacking m4 (1.4.18-4) ...
#5 16.44 Selecting previously unselected package autoconf.
#5 16.44 Preparing to unpack .../2-autoconf_2.69-11.1_all.deb ...
#5 16.45 Unpacking autoconf (2.69-11.1) ...
#5 16.62 Selecting previously unselected package autotools-dev.
#5 16.63 Preparing to unpack .../3-autotools-dev_20180224.1_all.deb ...
#5 16.64 Unpacking autotools-dev (20180224.1) ...
#5 16.74 Selecting previously unselected package automake.
#5 16.75 Preparing to unpack .../4-automake_1%3a1.16.1-4ubuntu6_all.deb ...
#5 16.75 Unpacking automake (1:1.16.1-4ubuntu6) ...
#5 16.97 Selecting previously unselected package libltdl7:amd64.
#5 16.97 Preparing to unpack .../5-libltdl7_2.4.6-14_amd64.deb ...
#5 16.98 Unpacking libltdl7:amd64 (2.4.6-14) ...
#5 17.05 Selecting previously unselected package libltdl-dev:amd64.
#5 17.05 Preparing to unpack .../6-libltdl-dev_2.4.6-14_amd64.deb ...
#5 17.05 Unpacking libltdl-dev:amd64 (2.4.6-14) ...
#5 17.17 Selecting previously unselected package libtool.
#5 17.19 Preparing to unpack .../7-libtool_2.4.6-14_all.deb ...
#5 17.19 Unpacking libtool (2.4.6-14) ...
#5 17.38 Setting up autotools-dev (20180224.1) ...
#5 17.40 Setting up libsigsegv2:amd64 (2.12-2) ...
#5 17.41 Setting up libltdl7:amd64 (2.4.6-14) ...
#5 17.43 Setting up libtool (2.4.6-14) ...
#5 17.44 Setting up m4 (1.4.18-4) ...
#5 17.46 Setting up autoconf (2.69-11.1) ...
#5 17.49 Setting up automake (1:1.16.1-4ubuntu6) ...
#5 17.51 update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
#5 17.51 update-alternatives: warning: skip creation of /usr/share/man/man1/automake.1.gz because associated file /usr/share/man/man1/automake-1.16.1.gz (of link group automake) doesn't exist
#5 17.51 update-alternatives: warning: skip creation of /usr/share/man/man1/aclocal.1.gz because associated file /usr/share/man/man1/aclocal-1.16.1.gz (of link group automake) doesn't exist
#5 17.52 Setting up libltdl-dev:amd64 (2.4.6-14) ...
#5 17.54 Processing triggers for libc-bin (2.31-0ubuntu9.7) ...
#5 DONE 18.0s

#6 [3/5] RUN wget -O lzo.tar.gz     http://www.oberhumer.com/opensource/lzo/download/lzo-2.10.tar.gz
#6 sha256:62a7f7a8616630c22ea04b03bd566fb72ba3b36ca7a89ccbae802bfb168a3ab7
#6 1.450 --2022-04-23 22:40:11--  http://www.oberhumer.com/opensource/lzo/download/lzo-2.10.tar.gz
#6 1.450 Resolving www.oberhumer.com (www.oberhumer.com)... 193.170.194.40
#6 1.504 Connecting to www.oberhumer.com (www.oberhumer.com)|193.170.194.40|:80... connected.
#6 1.530 HTTP request sent, awaiting response... 200 OK
#6 1.561 Length: 600622 (587K) [application/x-gzip]
#6 1.561 Saving to: 'lzo.tar.gz'
#6 1.561 
#6 1.561      0K .......... .......... .......... .......... ..........  8%  936K 1s
#6 1.615     50K .......... .......... .......... .......... .......... 17% 1.94M 0s
#6 1.641    100K .......... .......... .......... .......... .......... 25% 10.4M 0s
#6 1.645    150K .......... .......... .......... .......... .......... 34% 10.3M 0s
#6 1.649    200K .......... .......... .......... .......... .......... 42% 2.30M 0s
#6 1.671    250K .......... .......... .......... .......... .......... 51% 14.2M 0s
#6 1.674    300K .......... .......... .......... .......... .......... 59% 12.7M 0s
#6 1.678    350K .......... .......... .......... .......... .......... 68% 11.8M 0s
#6 1.682    400K .......... .......... .......... .......... .......... 76% 3.50M 0s
#6 1.696    450K .......... .......... .......... .......... .......... 85% 14.5M 0s
#6 1.699    500K .......... .......... .......... .......... .......... 93% 11.5M 0s
#6 1.703    550K .......... .......... .......... ......               100% 13.5M=0.1s
#6 1.706 
#6 1.707 2022-04-23 22:40:11 (3.95 MB/s) - 'lzo.tar.gz' saved [600622/600622]
#6 1.707 
#6 DONE 1.8s

#8 [4/5] COPY *.c *.cc *.options build.sh /src/
#8 sha256:ec67611fcab4e9aef336aba486acf333c20d632e42a5f1337ec62a59c0b9634f
#8 DONE 0.3s

#9 [5/5] COPY lzo_decompress_target_seeds /src/lzo_decompress_target_seeds
#9 sha256:8b3dca61ebd2a0cefacf76045472d71c56a0020889a019edc762a3b205b83980
#9 DONE 0.2s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:171b052e0d358a37411a6ef9615105f7e9cdbb4b159ae6cf63cf6ad1f856d538 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/lzo_all_lzo_compress done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lzo_all_lzo_compress:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:22ec7cceebbb020ff36105d3ed225ab3d36c3ec841be604d989628b1c427ca30
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:0db75a8ea540161d8e8efaca445bfcbabc33cc1b3d5ec211ae5d0d97a3b56ab8
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/lzo_all_lzo_compress:latest
#3 sha256:763ff559ecac3f5594abdee76ab6ba4e0b731764b9f713212c02702eaaba1b81
#3 DONE 0.0s

#7 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/lzo_all_lzo_compress
#7 sha256:d17a4b0fad4521d043247c497e7eb581b03f67402f1cd018d64732d04b1368bf
#7 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_all_lzo_compress-intermediate
#4 sha256:d73a4d2307a1df140a98c7affccb1d257aefa632f950d595c014789b070daec6
#4 ERROR: gcr.io/fuzzbench/builders/afl/lzo_all_lzo_compress-intermediate:latest: not found

#7 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/lzo_all_lzo_compress
#7 sha256:d17a4b0fad4521d043247c497e7eb581b03f67402f1cd018d64732d04b1368bf
#7 DONE 0.2s

#5 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#5 sha256:88d9bd8c7dd02c82102eb843e2f71e02171c8adf353ab85d5f66a85b794926c6
#5 0.994 Cloning into '/afl'...
#5 2.035 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#5 2.035 
#5 2.035 You are in 'detached HEAD' state. You can look around, make experimental
#5 2.035 changes and commit them, and you can discard any commits you make in this
#5 2.035 state without impacting any branches by switching back to a branch.
#5 2.035 
#5 2.035 If you want to create a new branch to retain commits you create, you may
#5 2.035 do so (now or later) by using -c with the switch command. Example:
#5 2.035 
#5 2.035   git switch -c <new-branch-name>
#5 2.035 
#5 2.035 Or undo this operation with:
#5 2.035 
#5 2.035   git switch -
#5 2.035 
#5 2.035 Turn off this advice by setting config variable advice.detachedHead to false
#5 2.035 
#5 2.035 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#5 2.090 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#5 2.090 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#5 2.547 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#5 2.562 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#5 8.109 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#5 8.852 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#5 9.829 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#5 10.18 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#5 11.06 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#5 11.64 ln -sf afl-as as
#5 11.64 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#5 11.65 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#5 11.65 [+] All done! Be sure to review README - it's pretty short and useful.
#5 DONE 11.9s

#6 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#6 sha256:2ba2020882448a18b66466d3ff5227211a57077bc952eff4a48b5770f680b8fe
#6 1.334 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 1.334 Hit:2 http://security.ubuntu.com/ubuntu focal-security InRelease
#6 1.447 Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease
#6 1.544 Hit:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#6 1.643 Hit:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#6 3.332 Reading package lists...
#6 6.897 Reading package lists...
#6 10.38 Building dependency tree...
#6 10.86 Reading state information...
#6 11.51 wget is already the newest version (1.20.3-1ubuntu2).
#6 11.51 0 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.
#6 11.52 --2022-04-23 22:40:38--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#6 11.52 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.110.133, 185.199.111.133, 185.199.108.133, ...
#6 11.53 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.110.133|:443... connected.
#6 11.56 HTTP request sent, awaiting response... 200 OK
#6 11.75 Length: 9177 (9.0K) [text/plain]
#6 11.75 Saving to: '/afl/afl_driver.cpp'
#6 11.75 
#6 11.75      0K ........                                              100% 9.76M=0.001s
#6 11.75 
#6 11.75 2022-04-23 22:40:38 (9.76 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#6 11.75 
#6 15.28 ar: creating /libAFL.a
#6 DONE 15.4s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:9aa7b88734264d39c6bbb6110199c4e9640b6e3ee91d3d6028b8b8f496ec1263 done
#8 naming to gcr.io/fuzzbench/builders/afl/lzo_all_lzo_compress-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_all_lzo_compress-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:30d29e58dabc97db124059fdd7b9761446e3584e1926dba4ec45bf8f4d217c78
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:d2cb159ab66b46d7cf356d6453efe48c15e5112d826e41764958b096a1ce52b9
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:3a781910184efee6d4def7afac5e7ea80299f08e9c7bb732a530a5cb6b67c154
#8 transferring context: 591B 0.1s done
#8 DONE 0.1s

#9 [4/7] COPY ./requirements.txt /
#9 sha256:4566ac900252e58b9375f65229fe819fefb15a42aa98414af0a97887cd6c912e
#9 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:c951bd69a5819de52dbf5223968957336cc60f618304b05e0ea56696c226207a
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:7a61d2df2e2bf1f0df843dd93f87540a14fe54f45d61bed83dbc23ba3b2d1b5d
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:9e79452cde56b25884d7da5063450b43da09aeb408bd8d68c5c741fa4ba85302
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:421fd4bc2fd3686d2d38fb2dd0ae32aea018ff1219ecd7c9dbfcb1172525f564 done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:4fe21de75c7a883cd37dd5cb5e8471e4cc9a538aef6a5e9ada53d702ed48c36c
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:7f1219f7fea2ad2a5991e6b257199ba633902bc82c7b72aa6c71794ce9a24ea2
#2 transferring context: 34B done
#2 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_all_lzo_compress-intermediate:latest
#3 sha256:a773787aa6d64f5d94e6bd45712eee7fd80065a043e9946a0a8a6e56216eb5d1
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:b8cd88a6f9c86b4e84db4d0ac42c71dc2ed569c656f72cf242fd0153f60df129
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/lzo_all_lzo_compress-intermediate
#6 sha256:7a166bbd28fe117dad0de6426afa6fbf3685fff05c33d4d91fc4e10cf62aa412
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_all_lzo_compress
#5 sha256:38812a30064a14840b8f6201a5c50d04c0bbef08087b00d33b1dfc737a2847c5
#5 ERROR: gcr.io/fuzzbench/builders/afl/lzo_all_lzo_compress:latest: not found

#12 [internal] load build context
#12 sha256:b8cd88a6f9c86b4e84db4d0ac42c71dc2ed569c656f72cf242fd0153f60df129
#12 transferring context: 742.39kB 0.2s done
#12 DONE 0.4s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/lzo_all_lzo_compress-intermediate
#6 sha256:7a166bbd28fe117dad0de6426afa6fbf3685fff05c33d4d91fc4e10cf62aa412
#6 DONE 0.5s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:c35e7eec553ba92afb26bdb3a7bb498e8a3e4dff5c5b4274f49ba0af68d42bea
#8 DONE 0.5s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:26efb1384dcc8bea1d773d6f1e44f51793ad71f9989c4d5c19a0ac76bf47c8b8
#9 DONE 36.4s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:cbfd4e6a38366a5cb029a3ee88af4472bc291214c7bf92094a79336464554f90
#10 DONE 0.2s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:2902364f03990a4e1e4e3b4057df23d91c50ce632beee14a99526a22b998176a
#11 DONE 21.5s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:0f4e71e430bc9fb1abccdd90a58ea22f70aa7be3dc3470bee084cf738c3069cb
#13 DONE 0.3s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:e75f17c699b256b4dae9c2e399214c92b676d34dc7f06923ebabb9fbd0df4ae3
#14 DONE 1.8s

#15 [stage-1  8/13] COPY benchmarks/lzo_all_lzo_compress/benchmark.yaml /
#15 sha256:200c96c563bca0683767d94d79fbfd0718d7889a63e97deda549201e57be658b
#15 DONE 0.1s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:fc68e4a6ccc92eef8e24187c79f375a89b3c2e6cdc79d2dd82f384b16512ba36
#16 DONE 1.8s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:7230c950827e8a48754a6a6ad071b4aa037e3f4aaea7e2c4ac34128b37e1ec59
#17 DONE 0.3s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:c7c0c4b9814946a9d99d619d73fc2653962ff5e47f34fdecd94c3c399468823d
#18 1.480 Checking out commit d561c49a
#18 1.492 error: pathspec 'd561c49a' did not match any file(s) known to git
#18 1.512 error: pathspec 'd561c49a' did not match any file(s) known to git
#18 1.620 Checkout unsuccessful.
#18 DONE 2.3s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:605a720afad9c028c49a56676e34c4cc4addd28c7e707bfde6d763802ae508ec
#19 DONE 1.7s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:bca1dbbeb7a038a4c21b9c7612434a9e7e4fc5acfeee0a05a6e418cedd148e1e
#20 1.488 Run fuzzer_build to build the target
#20 1.843 FUZZ_TARGET = all_lzo_compress
#20 1.843 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 1.843 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 1.870 Building benchmark lzo_all_lzo_compress with fuzzer afl
#20 1.875 + cd /src
#20 1.875 + tar xzf lzo.tar.gz
#20 1.996 + cd lzo-2.10
#20 1.996 + ./configure
#20 2.779 configure: Configuring LZO 2.10
#20 2.855 checking build system type... x86_64-pc-linux-gnu
#20 3.069 checking host system type... x86_64-pc-linux-gnu
#20 3.070 checking target system type... x86_64-pc-linux-gnu
#20 3.071 checking whether to enable maintainer-specific portions of Makefiles... no
#20 3.073 checking for gcc... clang
#20 3.275 checking whether the C compiler works... yes
#20 3.668 checking for C compiler default output file name... a.out
#20 3.672 checking for suffix of executables... 
#20 4.028 checking whether we are cross compiling... no
#20 4.372 checking for suffix of object files... o
#20 4.439 checking whether we are using the GNU C compiler... yes
#20 4.496 checking whether clang accepts -g... yes
#20 4.553 checking for clang option to accept ISO C89... none needed
#20 4.718 checking whether clang understands -c and -o together... yes
#20 4.828 checking for ar... ar
#20 4.829 checking the archiver (ar) interface... ar
#20 4.926 checking for style of include used by make... GNU
#20 4.955 checking dependency style of clang... gcc3
#20 5.091 checking how to run the C preprocessor... clang -E
#20 5.366 checking whether the C preprocessor needs special flags... none needed
#20 5.450 checking for an ANSI C-conforming const... yes
#20 5.522 checking for grep that handles long lines and -e... /usr/bin/grep
#20 5.533 checking for egrep... /usr/bin/grep -E
#20 5.539 checking for ANSI C header files... yes
#20 6.151 checking for sys/types.h... yes
#20 6.302 checking for sys/stat.h... yes
#20 6.418 checking for stdlib.h... yes
#20 6.573 checking for string.h... yes
#20 6.734 checking for memory.h... yes
#20 6.894 checking for strings.h... yes
#20 7.094 checking for inttypes.h... yes
#20 7.274 checking for stdint.h... yes
#20 7.458 checking for unistd.h... yes
#20 7.647 checking whether byte ordering is bigendian... no
#20 7.977 checking for special C compiler options needed for large files... no
#20 7.977 checking for _FILE_OFFSET_BITS value needed for large files... no
#20 8.048 checking for a BSD-compatible install... /usr/bin/install -c
#20 8.107 checking whether build environment is sane... yes
#20 8.144 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 8.167 checking for gawk... no
#20 8.169 checking for mawk... mawk
#20 8.182 checking whether make sets $(MAKE)... yes
#20 8.232 checking whether make supports nested variables... yes
#20 8.275 checking dependency style of clang... gcc3
#20 8.458 checking whether make supports nested variables... (cached) yes
#20 8.466 checking how to print strings... printf
#20 8.639 checking for a sed that does not truncate output... /usr/bin/sed
#20 8.659 checking for fgrep... /usr/bin/grep -F
#20 8.671 checking for ld used by clang... /usr/bin/ld
#20 8.742 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 8.758 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 8.798 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 8.938 checking whether ln -s works... yes
#20 8.939 checking the maximum length of command line arguments... 1572864
#20 8.994 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 8.995 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 8.996 checking for /usr/bin/ld option to reload object files... -r
#20 8.998 checking for objdump... objdump
#20 8.999 checking how to recognize dependent libraries... pass_all
#20 9.011 checking for dlltool... no
#20 9.012 checking how to associate runtime and link libraries... printf %s\n
#20 9.014 checking for archiver @FILE support... @
#20 9.185 checking for strip... strip
#20 9.187 checking for ranlib... ranlib
#20 9.195 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 9.654 checking for sysroot... no
#20 9.748 checking for mt... no
#20 9.750 checking if : is a manifest tool... no
#20 9.769 checking for dlfcn.h... yes
#20 9.922 checking for objdir... .libs
#20 10.37 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 10.44 checking for clang option to produce PIC... -fPIC -DPIC
#20 10.44 checking if clang PIC flag -fPIC -DPIC works... yes
#20 10.51 checking if clang static flag -static works... yes
#20 11.03 checking if clang supports -c -o file.o... yes
#20 11.12 checking if clang supports -c -o file.o... (cached) yes
#20 11.13 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 11.20 checking dynamic linker characteristics... GNU/Linux ld.so
#20 11.74 checking how to hardcode library paths into programs... immediate
#20 11.74 checking whether stripping libraries is possible... yes
#20 11.76 checking if libtool supports shared libraries... yes
#20 11.76 checking whether to build shared libraries... no
#20 11.76 checking whether to build static libraries... yes
#20 11.76 checking whether time.h and sys/time.h may both be included... yes
#20 11.92 checking assert.h usability... yes
#20 12.07 checking assert.h presence... yes
#20 12.11 checking for assert.h... yes
#20 12.14 checking ctype.h usability... yes
#20 12.32 checking ctype.h presence... yes
#20 12.39 checking for ctype.h... yes
#20 12.44 checking dirent.h usability... yes
#20 12.60 checking dirent.h presence... yes
#20 12.68 checking for dirent.h... yes
#20 12.72 checking errno.h usability... yes
#20 12.89 checking errno.h presence... yes
#20 12.95 checking for errno.h... yes
#20 12.99 checking fcntl.h usability... yes
#20 13.17 checking fcntl.h presence... yes
#20 13.21 checking for fcntl.h... yes
#20 13.25 checking float.h usability... yes
#20 13.42 checking float.h presence... yes
#20 13.48 checking for float.h... yes
#20 13.50 checking limits.h usability... yes
#20 13.63 checking limits.h presence... yes
#20 13.68 checking for limits.h... yes
#20 13.71 checking malloc.h usability... yes
#20 13.89 checking malloc.h presence... yes
#20 13.96 checking for malloc.h... yes
#20 13.99 checking for memory.h... (cached) yes
#20 14.01 checking setjmp.h usability... yes
#20 14.14 checking setjmp.h presence... yes
#20 14.21 checking for setjmp.h... yes
#20 14.23 checking signal.h usability... yes
#20 14.39 checking signal.h presence... yes
#20 14.47 checking for signal.h... yes
#20 14.51 checking stdarg.h usability... yes
#20 14.64 checking stdarg.h presence... yes
#20 14.71 checking for stdarg.h... yes
#20 14.74 checking stddef.h usability... yes
#20 14.88 checking stddef.h presence... yes
#20 14.94 checking for stddef.h... yes
#20 14.98 checking for stdint.h... (cached) yes
#20 15.02 checking stdio.h usability... yes
#20 15.20 checking stdio.h presence... yes
#20 15.27 checking for stdio.h... yes
#20 15.31 checking for stdlib.h... (cached) yes
#20 15.35 checking for string.h... (cached) yes
#20 15.39 checking for strings.h... (cached) yes
#20 15.43 checking time.h usability... yes
#20 15.60 checking time.h presence... yes
#20 15.69 checking for time.h... yes
#20 15.73 checking for unistd.h... (cached) yes
#20 15.78 checking utime.h usability... yes
#20 15.96 checking utime.h presence... yes
#20 16.04 checking for utime.h... yes
#20 16.07 checking sys/mman.h usability... yes
#20 16.22 checking sys/mman.h presence... yes
#20 16.29 checking for sys/mman.h... yes
#20 16.33 checking sys/resource.h usability... yes
#20 16.51 checking sys/resource.h presence... yes
#20 16.57 checking for sys/resource.h... yes
#20 16.61 checking for sys/stat.h... (cached) yes
#20 16.66 checking sys/time.h usability... yes
#20 16.83 checking sys/time.h presence... yes
#20 16.88 checking for sys/time.h... yes
#20 16.92 checking for sys/types.h... (cached) yes
#20 16.96 checking sys/wait.h usability... yes
#20 17.13 checking sys/wait.h presence... yes
#20 17.22 checking for sys/wait.h... yes
#20 17.25 checking whether limits.h is sane... yes
#20 17.34 checking for off_t... yes
#20 17.70 checking for ptrdiff_t... yes
#20 18.04 checking for size_t... yes
#20 18.36 checking return type of signal handlers... void
#20 18.49 checking size of short... 2
#20 18.94 checking size of int... 4
#20 19.29 checking size of long... 8
#20 19.72 checking size of long long... 8
#20 20.09 checking size of __int16... 0
#20 20.22 checking size of __int32... 0
#20 20.35 checking size of __int64... 0
#20 20.50 checking size of void *... 8
#20 20.87 checking size of size_t... 8
#20 21.23 checking size of ptrdiff_t... 8
#20 21.58 checking size of __int32... (cached) 0
#20 21.59 checking size of intmax_t... 8
#20 21.93 checking size of uintmax_t... 8
#20 22.31 checking size of intptr_t... 8
#20 22.66 checking size of uintptr_t... 8
#20 23.01 checking size of float... 4
#20 23.37 checking size of double... 8
#20 23.74 checking size of long double... 16
#20 24.12 checking size of dev_t... 8
#20 24.54 checking size of fpos_t... 16
#20 24.95 checking size of mode_t... 4
#20 25.52 checking size of off_t... 8
#20 25.93 checking size of ssize_t... 8
#20 26.28 checking size of time_t... 8
#20 26.67 checking for access... yes
#20 27.04 checking for alloca... no
#20 27.38 checking for atexit... yes
#20 27.75 checking for atoi... yes
#20 28.10 checking for atol... yes
#20 28.43 checking for chmod... yes
#20 28.83 checking for chown... yes
#20 29.17 checking for clock_getcpuclockid... yes
#20 29.55 checking for clock_getres... yes
#20 29.87 checking for clock_gettime... yes
#20 30.22 checking for ctime... yes
#20 30.58 checking for difftime... yes
#20 30.90 checking for fstat... yes
#20 31.32 checking for getenv... yes
#20 31.62 checking for getpagesize... yes
#20 32.03 checking for getrusage... yes
#20 32.38 checking for gettimeofday... yes
#20 32.78 checking for gmtime... yes
#20 33.17 checking for isatty... yes
#20 33.55 checking for localtime... yes
#20 33.91 checking for longjmp... yes
#20 34.32 checking for lstat... yes
#20 34.61 checking for memcmp... yes
#20 34.99 checking for memcpy... yes
#20 35.35 checking for memmove... yes
#20 35.66 checking for memset... yes
#20 36.01 checking for mkdir... yes
#20 36.30 checking for mktime... yes
#20 36.65 checking for mmap... yes
#20 37.04 checking for mprotect... yes
#20 37.45 checking for munmap... yes
#20 37.77 checking for qsort... yes
#20 38.15 checking for raise... yes
#20 39.59 checking for rmdir... yes
#20 40.21 checking for setjmp... yes
#20 40.71 checking for signal... yes
#20 41.11 checking for snprintf... yes
#20 41.49 checking for strcasecmp... yes
#20 41.85 checking for strchr... yes
#20 42.24 checking for strdup... yes
#20 42.63 checking for strerror... yes
#20 43.02 checking for strftime... yes
#20 43.37 checking for stricmp... no
#20 43.70 checking for strncasecmp... yes
#20 43.99 checking for strnicmp... no
#20 44.37 checking for strrchr... yes
#20 44.66 checking for strstr... yes
#20 45.05 checking for time... yes
#20 45.45 checking for umask... yes
#20 45.80 checking for utime... yes
#20 46.13 checking for vsnprintf... yes
#20 46.43 checking whether to build assembly versions... no
#20 46.50 checking whether your compiler passes the LZO conformance test... yes
#20 46.97 checking that generated files are newer than configure... done
#20 46.98 configure: creating ./config.status
#20 49.61 config.status: creating Makefile
#20 49.69 config.status: creating lzo2.pc
#20 49.73 config.status: creating config.h
#20 49.81 config.status: executing depfiles commands
#20 50.83 config.status: executing libtool commands
#20 50.90 
#20 50.90    LZO configuration summary
#20 50.90    -------------------------
#20 50.90    LZO version                : 2.10
#20 50.90    configured for host        : x86_64-pc-linux-gnu
#20 50.90    source code location       : .
#20 50.90    compiler                   : clang
#20 50.90    preprocessor definitions   : -DLZO_HAVE_CONFIG_H=1
#20 50.90    preprocessor flags         : 
#20 50.90    compiler flags             : -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard
#20 50.90    build static library       : yes
#20 50.90    build shared library       : no
#20 50.90    enable i386 assembly code  : no
#20 50.90 
#20 50.90 
#20 50.90    LZO 2.10 configured.
#20 50.90 
#20 50.90    Copyright (C) 1996-2017 Markus Franz Xaver Johannes Oberhumer
#20 50.90    All Rights Reserved.
#20 50.90 
#20 50.90    The LZO library is free software; you can redistribute it and/or
#20 50.90    modify it under the terms of the GNU General Public License as
#20 50.90    published by the Free Software Foundation; either version 2 of
#20 50.90    the License, or (at your option) any later version.
#20 50.90 
#20 50.90    The LZO library is distributed in the hope that it will be useful,
#20 50.90    but WITHOUT ANY WARRANTY; without even the implied warranty of
#20 50.90    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#20 50.90    GNU General Public License for more details.
#20 50.90 
#20 50.90    Markus F.X.J. Oberhumer
#20 50.90    <markus@oberhumer.com>
#20 50.90    http://www.oberhumer.com/opensource/lzo/
#20 50.90 
#20 50.90 
#20 50.90 Type 'make' to build LZO.
#20 50.90 Type 'make check' and 'make test' to test LZO.
#20 50.90 Type 'make install' to install LZO.
#20 50.90 After installing LZO, please have a look at 'examples/simple.c'.
#20 50.90 
#20 51.09 ++ nproc
#20 51.10 + make -j8
#20 51.13 make  all-am
#20 51.16 make[1]: Entering directory '/src/lzo-2.10'
#20 51.28   CC       src/lzo1.lo
#20 51.28   CC       src/lzo1_99.lo
#20 51.29   CC       src/lzo1a_99.lo
#20 51.29   CC       src/lzo1a.lo
#20 51.29   CC       src/lzo1b_1.lo
#20 51.31   CC       src/lzo1b_2.lo
#20 51.31   CC       src/lzo1b_3.lo
#20 51.35   CC       src/lzo1b_4.lo
#20 56.93   CC       src/lzo1b_5.lo
#20 56.95   CC       src/lzo1b_6.lo
#20 56.97   CC       src/lzo1b_7.lo
#20 57.02   CC       src/lzo1b_8.lo
#20 57.06   CC       src/lzo1b_9.lo
#20 57.41   CC       src/lzo1b_99.lo
#20 57.75   CC       src/lzo1b_9x.lo
#20 57.76   CC       src/lzo1b_cc.lo
#20 62.04   CC       src/lzo1b_d1.lo
#20 62.06   CC       src/lzo1b_d2.lo
#20 62.40   CC       src/lzo1b_rr.lo
#20 62.46   CC       src/lzo1b_xx.lo
#20 62.83   CC       src/lzo1c_1.lo
#20 62.92   CC       src/lzo1c_2.lo
#20 63.04   CC       src/lzo1c_3.lo
#20 64.77   CC       src/lzo1c_4.lo
#20 66.04   CC       src/lzo1c_5.lo
#20 66.68   CC       src/lzo1c_6.lo
#20 67.73   CC       src/lzo1c_7.lo
#20 67.78   CC       src/lzo1c_8.lo
#20 69.06   CC       src/lzo1c_9.lo
#20 69.18   CC       src/lzo1c_99.lo
#20 69.31   CC       src/lzo1c_9x.lo
#20 69.88   CC       src/lzo1c_cc.lo
#20 71.92   CC       src/lzo1c_d1.lo
#20 72.71   CC       src/lzo1c_d2.lo
#20 73.40   CC       src/lzo1c_rr.lo
#20 73.97   CC       src/lzo1c_xx.lo
#20 74.40   CC       src/lzo1f_1.lo
#20 74.52   CC       src/lzo1f_9x.lo
#20 75.08   CC       src/lzo1f_d1.lo
#20 75.55   CC       src/lzo1f_d2.lo
#20 78.36   CC       src/lzo1x_1.lo
#20 78.73   CC       src/lzo1x_1k.lo
#20 78.79   CC       src/lzo1x_1l.lo
#20 79.01   CC       src/lzo1x_1o.lo
#20 79.91   CC       src/lzo1x_9x.lo
#20 79.93   CC       src/lzo1x_d1.lo
#20 79.96   CC       src/lzo1x_d2.lo
#20 82.31   CC       src/lzo1x_d3.lo
#20 84.16   CC       src/lzo1x_o.lo
#20 84.35   CC       src/lzo1y_1.lo
#20 84.90   CC       src/lzo1y_9x.lo
#20 84.96   CC       src/lzo1y_d1.lo
#20 85.16   CC       src/lzo1y_d2.lo
#20 85.26   CC       src/lzo1y_d3.lo
#20 88.72   CC       src/lzo1y_o.lo
#20 89.16   CC       src/lzo1z_9x.lo
#20 90.20   CC       src/lzo1z_d1.lo
#20 90.33   CC       src/lzo1z_d2.lo
#20 90.62   CC       src/lzo1z_d3.lo
#20 90.93   CC       src/lzo2a_9x.lo
#20 92.10   CC       src/lzo2a_d1.lo
#20 93.09   CC       src/lzo2a_d2.lo
#20 94.74   CC       src/lzo_crc.lo
#20 95.23   CC       src/lzo_init.lo
#20 96.31   CC       src/lzo_ptr.lo
#20 97.14   CC       src/lzo_str.lo
#20 97.24   CC       src/lzo_util.lo
#20 97.71   CC       examples/dict.o
#20 98.35   CC       examples/lzopack.o
#20 98.63   CC       examples/overlap.o
#20 99.13   CC       examples/precomp.o
#20 99.58   CC       examples/precomp2.o
#20 100.1   CC       examples/simple.o
#20 100.3   CC       lzotest/lzotest.o
#20 100.3   CC       tests/align.o
#20 100.6   CC       tests/chksum.o
#20 101.1   CC       tests/promote.o
#20 101.4   CC       tests/sizes.o
#20 101.5   CC       minilzo/t-testmini.o
#20 101.5   CC       minilzo/t-minilzo.o
#20 101.6   CCLD     tests/promote
#20 102.0   CCLD     tests/sizes
#20 102.2   CCLD     src/liblzo2.la
#20 105.6   CCLD     minilzo/testmini
#20 106.7 ar: `u' modifier ignored since `D' is the default (see `U')
#20 107.1   CCLD     examples/dict
#20 107.1   CCLD     examples/lzopack
#20 107.1   CCLD     examples/overlap
#20 107.2   CCLD     examples/precomp
#20 107.2   CCLD     examples/precomp2
#20 107.3   CCLD     examples/simple
#20 108.5   CCLD     tests/align
#20 110.3   CCLD     tests/chksum
#20 112.0   CCLD     lzotest/lzotest
#20 114.7 make[1]: Leaving directory '/src/lzo-2.10'
#20 114.7 + for file in $SRC/*.c
#20 114.7 ++ basename /src/lzo_compress_target.c .c
#20 114.7 + name=lzo_compress_target
#20 114.7 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -I include -I minilzo -I include/lzo /src/lzo_compress_target.c -o lzo_compress_target.o
#20 114.8 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I include -I minilzo -I include/lzo lzo_compress_target.o -o /out/lzo_compress_target /libAFL.a src/.libs/liblzo2.a
#20 115.5 + for file in $SRC/*.c
#20 115.5 ++ basename /src/lzo_decompress_target.c .c
#20 115.5 + name=lzo_decompress_target
#20 115.5 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -I include -I minilzo -I include/lzo /src/lzo_decompress_target.c -o lzo_decompress_target.o
#20 115.6 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I include -I minilzo -I include/lzo lzo_decompress_target.o -o /out/lzo_decompress_target /libAFL.a src/.libs/liblzo2.a
#20 116.1 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I include -I minilzo -I include/lzo /src/all_lzo_compress.cc -o /out/all_lzo_compress /libAFL.a src/.libs/liblzo2.a
#20 119.0 + cp /src/lzo_compress_target.options /src/lzo_decompress_target.options /out/
#20 119.0 + zip -j /out/lzo_decompress_target_seed_corpus.zip /src/lzo_decompress_target_seeds/seed.lzo
#20 119.0   adding: seed.lzo (deflated 6%)
#20 119.0 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 119.1s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:5b31ab000120bcb18f500522d50cc5ebe5b420aa1d56ec30a6a5a1adeb974dc9 done
#21 naming to gcr.io/fuzzbench/builders/afl/lzo_all_lzo_compress done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_all_lzo_compress:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:98f2e9eee493addc22f5c6d253de64e12b5c90b5388dd71c153c8d902fee73b7
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#4 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#2 [internal] load .dockerignore
#2 sha256:8ba609f945f388b8b8c1fe7ef3b3e6374531c0069132a4137e56fc6e4606996e
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:2d70b12f7febc4bbdb90c915fe725c67a492af7bfbaab726410d4db571339d67 done
#6 naming to gcr.io/fuzzbench/runners/afl/lzo_all_lzo_compress-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_all_lzo_compress-intermediate
#5 sha256:61edf27fec25f46c0a5dd49590c35fb5847a25365b744e08329ab6efaa714883
#5 ERROR: gcr.io/fuzzbench/runners/afl/lzo_all_lzo_compress-intermediate:latest: not found
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_all_lzo_compress-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:ff9b2288477dac9324f20ba62ba071e69aea2c57b3659eb9e476c40325e52999
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:8a27f5fbcf664d848ee16032728900c0eb297aa9f5f2c08310f0936b46e13f85
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/lzo_all_lzo_compress-intermediate:latest
#3 sha256:d1bc0f065bcbeebb5c1393c54e53057d437a19d7cb7c3cb7c4a8d20c851c6125
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_all_lzo_compress:latest
#4 sha256:08627f5fa362c97ab6e1f39cba462c34efa6678bb75474f761269a3c43baf84c
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:56001fd290d573a7700dee47effbebeed965a5adef9698a789f5f192ca32a821
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/lzo_all_lzo_compress-intermediate
#6 sha256:94d02d33d15b0b683999bc19ef166ed569a3ec22eb52ec2e2513ebc52c0ef216
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lzo_all_lzo_compress
#10 sha256:034b84d250ef06725c552efe698bd3b7449cf8c162bf34c7102310d0dba5753c
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_all_lzo_compress
#5 sha256:6131a43eaa48f82e1f7021dd3a18d6032166f67105c1124e101de095a619dd01
#5 ERROR: gcr.io/fuzzbench/runners/afl/lzo_all_lzo_compress:latest: not found

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lzo_all_lzo_compress
#10 sha256:034b84d250ef06725c552efe698bd3b7449cf8c162bf34c7102310d0dba5753c
#10 ...

#12 [internal] load build context
#12 sha256:56001fd290d573a7700dee47effbebeed965a5adef9698a789f5f192ca32a821
#12 transferring context: 9.04MB 0.5s done
#12 DONE 0.6s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lzo_all_lzo_compress
#10 sha256:034b84d250ef06725c552efe698bd3b7449cf8c162bf34c7102310d0dba5753c
#10 DONE 0.8s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:aa65b5bd8d9694b6ad9f545efc4ab919644df0f498eb96ab39bd6030980aca64
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:98c28a421d3e31ed2b6094420a845503848bca8ce5d607c992528dbf0ac79378
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:31b27abaa0d44d928691411dab1e9c68ffeb79f3518040c3bf6252b973079bee
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:7ca1afef7ce89cc77cacafffab0888001824307cdcc48204018b6bef1cf95dcf
#11 DONE 0.1s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:187eb4f98662ebd5f079b55fc838cc2a7be16aedc9eedb44933f59da2d687309
#13 DONE 0.4s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:20761f1b9f4a30a0c299a04b483c2007ad1d226db955d5b9d83b4ab0ee2ccb50
#14 DONE 0.4s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:b8162bf21864ef023fa79ef64c0b207b56a096c532f8c0394a876f0baf57a5a0
#15 DONE 1.7s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:7c03976fbd9cd1cd0131ec3311a2fc88c97d532f1fe5cc20503adbdb02d40184
#16 DONE 2.0s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:e38ce5e8e1aceb70f01caec953bd2be06ccf34e9ea1141818000b938026f1fab
#17 DONE 0.2s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:495210c964293f85c2b1e9ae71aa7e3169ad162b8bac2920b991386c70044ce9
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:bd23363dfb724921a361689d46c9e30d9e0aa863e8f2c145bb536939dce827b1
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:23db3221520bfd3feb3703f075fcaae1ab42944200af9ce9f208bdf630e09f9f
#20 DONE 1.2s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:e99f84aa724e0b448962c0678afe3ce7489d55613224207cb725a52e23bf3eaf done
#21 naming to gcr.io/fuzzbench/runners/afl/lzo_all_lzo_compress done
#21 DONE 0.0s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_all_lzo_compress:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Doing final sync.
