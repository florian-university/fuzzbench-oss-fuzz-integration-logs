source .venv/bin/activate && PYTHONPATH=. python3 docker/generate_makefile.py docker/generated.mk
docker build \
--tag gcr.io/fuzzbench/builders/benchmark/double-conversion_string_to_double_fuzzer \
--build-arg BUILDKIT_INLINE_CACHE=1 \
--cache-from gcr.io/fuzzbench/builders/benchmark/double-conversion_string_to_double_fuzzer \
--file benchmarks/double-conversion_string_to_double_fuzzer/Dockerfile \
benchmarks/double-conversion_string_to_double_fuzzer
docker build \
--tag gcr.io/fuzzbench/builders/afl/double-conversion_string_to_double_fuzzer-intermediate \
--build-arg BUILDKIT_INLINE_CACHE=1 \
--cache-from gcr.io/fuzzbench/builders/afl/double-conversion_string_to_double_fuzzer-intermediate \
--build-arg parent_image=gcr.io/fuzzbench/builders/benchmark/double-conversion_string_to_double_fuzzer \
--file fuzzers/afl/builder.Dockerfile \
fuzzers/afl
docker pull ubuntu:xenial
xenial: Pulling from library/ubuntu
Digest: sha256:20858ebbc96215d6c3c574f781133ebffdc7c18d98af4f294cc4c04871a6fe61
Status: Image is up to date for ubuntu:xenial
docker.io/library/ubuntu:xenial
docker build \
--tag gcr.io/fuzzbench/base-image \
--build-arg BUILDKIT_INLINE_CACHE=1 \
--cache-from gcr.io/fuzzbench/base-image \
--file docker/base-image/Dockerfile \
.
docker build \
--tag gcr.io/fuzzbench/builders/afl/double-conversion_string_to_double_fuzzer \
--build-arg BUILDKIT_INLINE_CACHE=1 \
--cache-from gcr.io/fuzzbench/builders/afl/double-conversion_string_to_double_fuzzer \
--build-arg benchmark=double-conversion_string_to_double_fuzzer \
--build-arg fuzzer=afl \
--build-arg parent_image=gcr.io/fuzzbench/builders/afl/double-conversion_string_to_double_fuzzer-intermediate \
--file docker/benchmark-builder/Dockerfile \
.
docker build \
--tag gcr.io/fuzzbench/runners/afl/double-conversion_string_to_double_fuzzer-intermediate \
--build-arg BUILDKIT_INLINE_CACHE=1 \
--cache-from gcr.io/fuzzbench/runners/afl/double-conversion_string_to_double_fuzzer-intermediate \
--file fuzzers/afl/runner.Dockerfile \
fuzzers/afl
docker build \
--tag gcr.io/fuzzbench/runners/afl/double-conversion_string_to_double_fuzzer \
--build-arg BUILDKIT_INLINE_CACHE=1 \
--cache-from gcr.io/fuzzbench/runners/afl/double-conversion_string_to_double_fuzzer \
--build-arg benchmark=double-conversion_string_to_double_fuzzer \
--build-arg fuzzer=afl \
--file docker/benchmark-runner/Dockerfile \
.
docker run \
--cpus=1 \
--cap-add SYS_NICE \
--cap-add SYS_PTRACE \
-e FUZZ_OUTSIDE_EXPERIMENT=1 \
-e FORCE_LOCAL=1 \
-e TRIAL_ID=1 \
-e FUZZER=afl \
-e BENCHMARK=double-conversion_string_to_double_fuzzer \
-e FUZZ_TARGET=string_to_double_fuzzer \
-e MAX_TOTAL_TIME=20 \
-e SNAPSHOT_PERIOD=10 \
gcr.io/fuzzbench/runners/afl/double-conversion_string_to_double_fuzzer
Creating a fake seed file in empty corpus directory.
[run_afl_fuzz] Running target with afl-fuzz
[run_afl_fuzz] Running command: ./afl-fuzz -i /out/seeds -o /out/corpus -m none -t 1000+ -d -- /out/string_to_double_fuzzer 2147483647
[0;36mafl-fuzz [1;97m2.57b[0m by <lcamtuf@google.com>
[1;92m[+] [0mDisabling the UI because AFL_NO_UI is set.[0m
[1;92m[+] [0mYou have 8 CPU cores and 44 runnable tasks (utilization: 550%).[0m
[1;93m[!] [1;97mWARNING: [0mSystem under apparent load, performance may be spotty.[0m
[1;93m[!] [1;97mWARNING: [0mNot binding to a CPU core (AFL_NO_AFFINITY set).[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;92m[+] [0mOutput directory exists but deemed OK to reuse.[0m
[1;94m[*] [0mDeleting old session data...[0m
[1;92m[+] [0mOutput dir cleanup successful.[0m
[1;94m[*] [0mScanning '/out/seeds'...[0m
[1;94m[*] [0mShuffling queue...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;92m[+] [0m[1;95mPersistent mode binary detected.[0m
[1;92m[+] [0m[1;95mDeferred forkserver binary detected.[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:default_seed'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 2, map size = 16, exec speed = 5535 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m16 to 16 bits (average: 16.00 bits)
[1;90m        Exec timing : [0m5535 to 5535 us (average: 5535 us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (38 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (41 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #5 (73 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #6 (82 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #7 (83 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #8 (83 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #12 (83 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #13 (83 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #14 (83 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #15 (83 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #17 (96 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #21 (96 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #27 (96 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #33 (100 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #39 (121 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #40 (121 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #41 (122 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #43 (123 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #57 (123 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #61 (131 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #67 (132 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #69 (133 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #77 (137 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #81 (138 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #83 (139 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #84 (139 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #85 (139 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #90 (139 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #91 (141 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #92 (147 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #93 (147 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #96 (148 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #97 (196 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #98 (196 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #99 (196 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #100 (198 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #110 (198 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #115 (198 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #117 (198 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #120 (199 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #123 (199 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #132 (199 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #137 (202 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #138 (214 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #141 (216 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #146 (217 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #148 (223 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #150 (223 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #152 (230 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #153 (230 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #154 (235 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #164 (235 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #173 (242 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #174 (243 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #182 (244 total, 0 uniq crashes found)...[0m
