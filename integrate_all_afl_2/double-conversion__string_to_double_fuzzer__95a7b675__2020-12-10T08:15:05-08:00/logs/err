WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: double-conversion_string_to_double_fuzzer.
INFO:root:Please run "make test-run-afl-double-conversion_string_to_double_fuzzer" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:7eca062525b37e5833ba24d730bb9f675d7c9e49ea8648e6fd29f98f71e09252
#1 transferring dockerfile: 1.02kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:ad84f95796448df299ad50943fc514cce5e09a0dc9326e3db08af8c73c0f21a4
#2 transferring context:
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#4 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#4 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:afbdc4ab7a879c9f51f2f0579be4e02dfcf9f5ceff3729d6c9862b9738f67605
#8 DONE 0.0s

#11 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/double-conversion_string_to_double_fuzzer
#11 sha256:fc8b0064a0399c77c211fd5947a0310e0e2ab19cd3f80207ae3aaa9d94e40632
#11 ERROR: gcr.io/fuzzbench/builders/benchmark/double-conversion_string_to_double_fuzzer:latest: not found

#4 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#4 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#4 CACHED

#8 [internal] load build context
#8 sha256:afbdc4ab7a879c9f51f2f0579be4e02dfcf9f5ceff3729d6c9862b9738f67605
#8 transferring context: 2.68kB done
#8 DONE 0.1s

#5 [2/6] RUN apt-get update &&     apt-get install -y --no-install-recommends         cmake ninja-build &&     apt-get clean
#5 sha256:b7790875872711eed7e0937e103cf36e4eed6792f0186be997460f5af7a6a9aa
#5 1.771 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#5 1.771 Get:2 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#5 1.911 Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease
#5 2.008 Get:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#5 2.398 Get:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#5 2.612 Get:6 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [870 kB]
#5 2.772 Get:7 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [679 kB]
#5 2.850 Get:8 http://security.ubuntu.com/ubuntu focal-security/restricted i386 Packages [26.7 kB]
#5 2.853 Get:9 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [526 kB]
#5 2.898 Get:10 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [1139 kB]
#5 3.004 Get:11 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1771 kB]
#5 4.197 Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [791 kB]
#5 4.629 Get:13 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1153 kB]
#5 4.740 Get:14 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [2185 kB]
#5 4.898 Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted i386 Packages [29.5 kB]
#5 4.900 Get:16 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [839 kB]
#5 4.962 Get:17 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [1214 kB]
#5 5.053 Get:18 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [26.0 kB]
#5 5.055 Get:19 http://archive.ubuntu.com/ubuntu focal-backports/universe i386 Packages [14.4 kB]
#5 5.918 Fetched 11.6 MB in 4s (2763 kB/s)
#5 5.918 Reading package lists...
#5 9.718 Reading package lists...
#5 13.17 Building dependency tree...
#5 13.64 Reading state information...
#5 14.22 The following additional packages will be installed:
#5 14.22   cmake-data libarchive13 libjsoncpp1 librhash0 libuv1
#5 14.22 Suggested packages:
#5 14.22   cmake-doc lrzip
#5 14.34 The following NEW packages will be installed:
#5 14.35   cmake cmake-data libarchive13 libjsoncpp1 librhash0 libuv1 ninja-build
#5 14.93 0 upgraded, 7 newly installed, 0 to remove and 2 not upgraded.
#5 14.93 Need to get 5984 kB of archives.
#5 14.93 After this operation, 29.8 MB of additional disk space will be used.
#5 14.93 Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libuv1 amd64 1.34.2-1ubuntu1.3 [80.8 kB]
#5 15.27 Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 cmake-data all 3.16.3-1ubuntu1 [1612 kB]
#5 15.72 Get:3 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libarchive13 amd64 3.4.0-2ubuntu1.2 [327 kB]
#5 15.75 Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 libjsoncpp1 amd64 1.7.4-3.1ubuntu2 [75.6 kB]
#5 15.75 Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 librhash0 amd64 1.3.9-1 [113 kB]
#5 15.76 Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 cmake amd64 3.16.3-1ubuntu1 [3669 kB]
#5 16.04 Get:7 http://archive.ubuntu.com/ubuntu focal/universe amd64 ninja-build amd64 1.10.0-1build1 [107 kB]
#5 16.61 debconf: delaying package configuration, since apt-utils is not installed
#5 16.71 Fetched 5984 kB in 2s (3578 kB/s)
#5 16.78 Selecting previously unselected package libuv1:amd64.
#5 16.78 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21308 files and directories currently installed.)
#5 16.88 Preparing to unpack .../0-libuv1_1.34.2-1ubuntu1.3_amd64.deb ...
#5 16.89 Unpacking libuv1:amd64 (1.34.2-1ubuntu1.3) ...
#5 17.04 Selecting previously unselected package cmake-data.
#5 17.04 Preparing to unpack .../1-cmake-data_3.16.3-1ubuntu1_all.deb ...
#5 17.05 Unpacking cmake-data (3.16.3-1ubuntu1) ...
#5 18.49 Selecting previously unselected package libarchive13:amd64.
#5 18.50 Preparing to unpack .../2-libarchive13_3.4.0-2ubuntu1.2_amd64.deb ...
#5 18.50 Unpacking libarchive13:amd64 (3.4.0-2ubuntu1.2) ...
#5 18.64 Selecting previously unselected package libjsoncpp1:amd64.
#5 18.65 Preparing to unpack .../3-libjsoncpp1_1.7.4-3.1ubuntu2_amd64.deb ...
#5 18.65 Unpacking libjsoncpp1:amd64 (1.7.4-3.1ubuntu2) ...
#5 18.72 Selecting previously unselected package librhash0:amd64.
#5 18.73 Preparing to unpack .../4-librhash0_1.3.9-1_amd64.deb ...
#5 18.74 Unpacking librhash0:amd64 (1.3.9-1) ...
#5 18.82 Selecting previously unselected package cmake.
#5 18.82 Preparing to unpack .../5-cmake_3.16.3-1ubuntu1_amd64.deb ...
#5 18.82 Unpacking cmake (3.16.3-1ubuntu1) ...
#5 19.77 Selecting previously unselected package ninja-build.
#5 19.78 Preparing to unpack .../6-ninja-build_1.10.0-1build1_amd64.deb ...
#5 19.78 Unpacking ninja-build (1.10.0-1build1) ...
#5 19.93 Setting up libarchive13:amd64 (3.4.0-2ubuntu1.2) ...
#5 19.94 Setting up ninja-build (1.10.0-1build1) ...
#5 19.96 Setting up libuv1:amd64 (1.34.2-1ubuntu1.3) ...
#5 19.97 Setting up librhash0:amd64 (1.3.9-1) ...
#5 19.99 Setting up cmake-data (3.16.3-1ubuntu1) ...
#5 20.01 Setting up libjsoncpp1:amd64 (1.7.4-3.1ubuntu2) ...
#5 20.03 Setting up cmake (3.16.3-1ubuntu1) ...
#5 20.05 Processing triggers for libc-bin (2.31-0ubuntu9.7) ...
#5 DONE 20.7s

#6 [3/6] RUN git clone --single-branch     https://github.com/google/double-conversion.git double-conversion
#6 sha256:73869cb6eb983b571daaeab3e55354885463aa8fc9494e4750b9212d440693b6
#6 1.118 Cloning into 'double-conversion'...
#6 DONE 5.2s

#7 [4/6] WORKDIR double-conversion
#7 sha256:5802ce80b450701d6c8f2bdcece560c4385e6c5a98ef5bb73cbf6bed22bba6b6
#7 DONE 0.1s

#9 [5/6] COPY build.sh /src/
#9 sha256:4c9383edcd1a588df520a5ab9c975a381d2f40d7c93a07e822f491760c9c5484
#9 DONE 0.2s

#10 [6/6] COPY *.cc /src/
#10 sha256:2fb21983bbd0983875421eec62f392e998f1f1bb737c6c1bd1997e91c8ec394d
#10 DONE 0.1s

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:bf49dfcbe85afceeb5d17db1acd09c193bf40f95c308852c3abd7296356a206e
#12 writing image sha256:bf49dfcbe85afceeb5d17db1acd09c193bf40f95c308852c3abd7296356a206e done
#12 naming to gcr.io/fuzzbench/builders/benchmark/double-conversion_string_to_double_fuzzer done
#12 DONE 0.1s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/double-conversion_string_to_double_fuzzer:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:18189dcb5a3cc5c578946c228cdfaca2fa352c29cc1a2e9e4c85abd20d328c4b
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:bf46c5a3351a876a906a9598a214aab10685630495934abee12d9287d3512c5e
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/double-conversion_string_to_double_fuzzer:latest
#3 sha256:343496cbe7bd5abda0b94dfa5c81bdfb3ba4cc22124ae282073d508ba69f0cee
#3 DONE 0.0s

#7 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/double-conversion_string_to_double_fuzzer
#7 sha256:f2f9892552a98953c965f0497b8019d8107c91c44a78dc1331b16481714aa198
#7 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/double-conversion_string_to_double_fuzzer-intermediate
#4 sha256:8cba29bb53fc4e144f7d747bf46cbe09afee2eb283873508bc1dd1c1fd7d6da6
#4 ERROR: gcr.io/fuzzbench/builders/afl/double-conversion_string_to_double_fuzzer-intermediate:latest: not found

#7 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/double-conversion_string_to_double_fuzzer
#7 sha256:f2f9892552a98953c965f0497b8019d8107c91c44a78dc1331b16481714aa198
#7 DONE 0.3s

#5 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#5 sha256:d65b26665c9869915850a59a4ffbc63297f0cb1638f7023340297ef8f90588f9
#5 1.131 Cloning into '/afl'...
#5 2.046 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#5 2.046 
#5 2.046 You are in 'detached HEAD' state. You can look around, make experimental
#5 2.046 changes and commit them, and you can discard any commits you make in this
#5 2.046 state without impacting any branches by switching back to a branch.
#5 2.046 
#5 2.046 If you want to create a new branch to retain commits you create, you may
#5 2.046 do so (now or later) by using -c with the switch command. Example:
#5 2.046 
#5 2.046   git switch -c <new-branch-name>
#5 2.046 
#5 2.046 Or undo this operation with:
#5 2.046 
#5 2.046   git switch -
#5 2.046 
#5 2.046 Turn off this advice by setting config variable advice.detachedHead to false
#5 2.046 
#5 2.050 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#5 2.084 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#5 2.085 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#5 2.476 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#5 2.486 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#5 8.011 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#5 8.754 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#5 9.733 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#5 10.16 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#5 11.08 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#5 11.63 ln -sf afl-as as
#5 11.64 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#5 11.64 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#5 11.64 [+] All done! Be sure to review README - it's pretty short and useful.
#5 DONE 11.8s

#6 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#6 sha256:f403455c8b643593061166fbcaf73e214a63e2ecaa4d3edab75b7a5a16d3af86
#6 1.416 Hit:1 http://security.ubuntu.com/ubuntu focal-security InRelease
#6 1.416 Hit:2 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 1.538 Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease
#6 1.635 Hit:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#6 1.731 Hit:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#6 3.618 Reading package lists...
#6 7.105 Reading package lists...
#6 10.31 Building dependency tree...
#6 10.77 Reading state information...
#6 11.41 wget is already the newest version (1.20.3-1ubuntu2).
#6 11.41 0 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.
#6 11.42 --2022-04-23 22:53:08--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#6 11.43 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.110.133, 185.199.111.133, 185.199.108.133, ...
#6 11.43 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.110.133|:443... connected.
#6 11.47 HTTP request sent, awaiting response... 200 OK
#6 11.63 Length: 9177 (9.0K) [text/plain]
#6 11.63 Saving to: '/afl/afl_driver.cpp'
#6 11.63 
#6 11.63      0K ........                                              100% 6.55M=0.001s
#6 11.63 
#6 11.63 2022-04-23 22:53:09 (6.55 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#6 11.63 
#6 15.24 ar: creating /libAFL.a
#6 DONE 15.4s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:15ab4653acfe694dc77d6c4158e06e17088fe1f409cd69029f9ffefd7fc33ef8 done
#8 naming to gcr.io/fuzzbench/builders/afl/double-conversion_string_to_double_fuzzer-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/double-conversion_string_to_double_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:d7e66c1a001bfc52f5e50765ccb1efc0e9c9d9cb2ccd91a502eea9938a566861
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:57b2aa187dae599f0ad912bd79eed8bf8a53fbdab547c20b0b6ce2778c728c6c
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/base-image
#5 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#5 DONE 0.0s

#4 [1/7] FROM docker.io/library/ubuntu:xenial
#4 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:94d1d83404dd7118bd6b11dead527beeb2be536cffa04128393f095d765b0f96
#8 transferring context: 591B 0.1s done
#8 DONE 0.1s

#9 [4/7] COPY ./requirements.txt /
#9 sha256:b3979e3a17acf2f4afa5d65fba2f212be82727adb8e36ac5a5c3d14801f2596f
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:c4619e93e5a601779cd692419033429dfac981b554ec9fa6a2d537e87a6d940c
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:1b7ffbc606df67197d014af2b74f3bb10444314e143159486b03670eefd6b89b
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:9de3523168725db31eacc759b0ac7f8a9e9bf48bfb235c91b4182846a77e05e8
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:421fd4bc2fd3686d2d38fb2dd0ae32aea018ff1219ecd7c9dbfcb1172525f564 done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:05e6eb3100eb4f6768198f1b5ee5605edf37bc0aa87e5bdc46095666dc57b9f9
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:09a2031b9bec4dfe211e9885fcabbe257a0010b53ad249d5a091f188b3f27b4d
#2 transferring context: 34B done
#2 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/double-conversion_string_to_double_fuzzer-intermediate:latest
#3 sha256:d0917a3fffebf3be519c8cfcba282c432ce20768c232b85606fa9513c94390a3
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:edb3162c48226acc0b6d23a428514967a7fffd78d81da7cbb3431039a7aa0194
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/double-conversion_string_to_double_fuzzer-intermediate
#6 sha256:dd63efb5fd67d52d345d8de6354ea5b55240bed0e3d663198369c3adb4a7cf33
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/double-conversion_string_to_double_fuzzer
#5 sha256:2744dd6c8363c26570be63d82a36de828bd7d5969a7bc4b53a22738bde0e4a8f
#5 ERROR: gcr.io/fuzzbench/builders/afl/double-conversion_string_to_double_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:edb3162c48226acc0b6d23a428514967a7fffd78d81da7cbb3431039a7aa0194
#12 transferring context: 742.46kB 0.2s done
#12 DONE 0.3s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/double-conversion_string_to_double_fuzzer-intermediate
#6 sha256:dd63efb5fd67d52d345d8de6354ea5b55240bed0e3d663198369c3adb4a7cf33
#6 DONE 0.4s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:5d864212f5a8fedf6d946e3354df086f5b661f948759f7821b3bd1568e80ea55
#8 DONE 0.4s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:b9fb9d9e55304e2b60d3b1d0f6943e14c894a1cf6feeab255d51a2f3d976fcba
#9 DONE 30.0s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:f8db745cb85c85deaf6ae1bc02ec30a86ed260804289a2e90e7d36513f9f5d34
#10 DONE 0.2s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:23e512562c1de48fbb3b09945905a3855812f92adc24923e2c694a75b1b8d5b6
#11 DONE 21.1s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:530b3e7051e9cebff71b1d3c5e412b155cc0b55aa967c1bcbd844ecfcb81bb80
#13 DONE 0.4s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:9c6379e5027c817343b6bb93a06e0af996b92bbbd67858e22a49a1733c21e29b
#14 DONE 2.0s

#15 [stage-1  8/13] COPY benchmarks/double-conversion_string_to_double_fuzzer/benchmark.yaml /
#15 sha256:d8b907970546b37725ec4cc8ea8a85ce0d3f3fbf32e42761cf758e42ba9d9846
#15 DONE 0.4s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:d3a90436d913a69f1322711fdb91d8d9784436374952d78191c1b4e1862e80f0
#16 DONE 1.6s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:a2fd675845590e69904813f657518815993e3002817696b5fb8130d867e73425
#17 DONE 0.5s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:8e5cc8e3cc8610e7b9e182f5387d8d3bb296af2061136b907047f5e4ff41723d
#18 1.652 Checking out commit 95a7b675
#18 1.664 error: pathspec '95a7b675' did not match any file(s) known to git
#18 1.675 error: pathspec '95a7b675' did not match any file(s) known to git
#18 1.686 error: pathspec '95a7b675' did not match any file(s) known to git
#18 1.734 error: pathspec '95a7b675' did not match any file(s) known to git
#18 1.795 Checkout unsuccessful.
#18 DONE 2.2s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:b5b6a286c24c65a76d68e83a1e0d1fc5e3acbf44f246a8dff716f165455403e4
#19 DONE 1.5s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:e7c97526681970516d21ce7f0a0101950c40c7a48ad52c9fe424bad40272755c
#20 1.578 Run fuzzer_build to build the target
#20 1.903 FUZZ_TARGET = string_to_double_fuzzer
#20 1.903 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 1.903 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 1.921 Building benchmark double-conversion_string_to_double_fuzzer with fuzzer afl
#20 1.926 + mkdir -p /work/double-conversion
#20 1.929 + cd /work/double-conversion
#20 1.929 + cmake -GNinja /src/double-conversion/
#20 2.477 -- The C compiler identification is Clang 14.0.0
#20 3.164 -- The CXX compiler identification is Clang 14.0.0
#20 3.215 -- Detecting C compiler ABI info
#20 3.651 -- Detecting C compiler ABI info - done
#20 3.758 -- Check for working C compiler: /usr/local/bin/clang - skipped
#20 3.759 -- Detecting C compile features
#20 3.761 -- Detecting C compile features - done
#20 3.788 -- Detecting CXX compiler ABI info
#20 4.249 -- Detecting CXX compiler ABI info - done
#20 4.415 -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
#20 4.417 -- Detecting CXX compile features
#20 4.419 -- Detecting CXX compile features - done
#20 4.441 -- Configuring done
#20 4.451 -- Generating done
#20 4.466 -- Build files have been written to: /work/double-conversion
#20 4.473 + ninja
#20 6.859 [1/9] Building CXX object CMakeFiles/double-conversion.dir/double-conversion/cached-powers.cc.o
#20 7.897 [2/9] Building CXX object CMakeFiles/double-conversion.dir/double-conversion/bignum-dtoa.cc.o
#20 8.109 [3/9] Building CXX object CMakeFiles/double-conversion.dir/double-conversion/strtod.cc.o
#20 8.727 [4/9] Building CXX object CMakeFiles/double-conversion.dir/double-conversion/fixed-dtoa.cc.o
#20 9.001 [5/9] Building CXX object CMakeFiles/double-conversion.dir/double-conversion/fast-dtoa.cc.o
#20 11.15 [6/9] Building CXX object CMakeFiles/double-conversion.dir/double-conversion/double-to-string.cc.o
#20 11.84 [7/9] Building CXX object CMakeFiles/double-conversion.dir/double-conversion/bignum.cc.o
#20 13.94 [8/9] Building CXX object CMakeFiles/double-conversion.dir/double-conversion/string-to-double.cc.o
#20 13.96 [9/9] Linking CXX static library libdouble-conversion.a
#20 13.96 + fuzzer=string_to_double_fuzzer
#20 13.96 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I/src/double-conversion/double-conversion -c /src/string_to_double_fuzzer.cc -o string_to_double_fuzzer.o
#20 14.15 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 string_to_double_fuzzer.o -o /out/string_to_double_fuzzer /libAFL.a libdouble-conversion.a
#20 14.82 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 15.5s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:10c43b74d6df4a472390e8fe8dbd669d813f84973be92fdb43c23bb01753fcd4 done
#21 naming to gcr.io/fuzzbench/builders/afl/double-conversion_string_to_double_fuzzer done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/double-conversion_string_to_double_fuzzer:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:1f47666d8b438f6eb6686410824c499b2e6164c10b728e639e40c8fb0ed9c3d3
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:e1683b9c45713628bac83f7e2dbfa00959e5462cf474039612e4c424050cb2a1
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:2d70b12f7febc4bbdb90c915fe725c67a492af7bfbaab726410d4db571339d67 done
#6 naming to gcr.io/fuzzbench/runners/afl/double-conversion_string_to_double_fuzzer-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/double-conversion_string_to_double_fuzzer-intermediate
#4 sha256:94a34f17468b56ae3a17849dcd103293c8a153f13ddf07f28d13a725a28b6157
#4 ERROR: gcr.io/fuzzbench/runners/afl/double-conversion_string_to_double_fuzzer-intermediate:latest: not found
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/double-conversion_string_to_double_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:564b68afb626236a252a6a02bbfcb6481ce504e1417c575ae0614a15dea58684
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:1d56f3868c04e858de6a61b74f2244af5ed5205c09394f6fe691a1ffe0ace86e
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/double-conversion_string_to_double_fuzzer-intermediate:latest
#3 sha256:a138f503d6d90d23e7df625d9bb0727469589328de52a47fdd1b4fd4e0ae536c
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/double-conversion_string_to_double_fuzzer:latest
#4 sha256:aecffdac984bed3618bf57a616d194ebc0729a94ee51288d080173595ed6960b
#4 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/double-conversion_string_to_double_fuzzer-intermediate
#6 sha256:738498426d83d3025a514d6e8a69faff288f0496c1fb551bb9aa5212da761b37
#6 DONE 0.0s

#12 [internal] load build context
#12 sha256:1d2b2aaf48e6f94d329f68c0b4a9a375ae90586fed16ca612ef9313eee2c9f40
#12 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/double-conversion_string_to_double_fuzzer
#10 sha256:430464b5a19d5e096a4b34b443252c43cdaee87187cda3301310651316b599f8
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/double-conversion_string_to_double_fuzzer
#5 sha256:a6b63c4166cf76dbc786949ef51457b9cb2d582c4c7adbc5208da03cf24a931f
#5 ERROR: gcr.io/fuzzbench/runners/afl/double-conversion_string_to_double_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:1d2b2aaf48e6f94d329f68c0b4a9a375ae90586fed16ca612ef9313eee2c9f40
#12 transferring context: 9.03MB 0.5s done
#12 DONE 0.6s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/double-conversion_string_to_double_fuzzer
#10 sha256:430464b5a19d5e096a4b34b443252c43cdaee87187cda3301310651316b599f8
#10 DONE 0.9s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:94241f4cf3e220704fc154fb40786578a9c10a613ead5f83e6fefa807f58d7c4
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:f6f7f3944b2e1c3f95dcb3751c3cef499819ddc21ce4e4fd78cca0f50192fb26
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:cbbfe9f804ff9b1c30f33f13b4e3d52500aeb3df286e5f424a8fa65e5bb3fb57
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:13d8918b7433a5078e1969735bba6e9304e865bfff74e2f66a076e70ca78580b
#11 DONE 0.1s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:777f91735994d6c9e2738f6d62cf9e7fdb1a0ca2e5e664fe74430e3b74979ba1
#13 DONE 0.4s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:a5dd63610e8f0827180ae089c451229dba2d543d49975304d9d0bdd1c75db710
#14 DONE 0.3s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:687eb9a59255d3480130f0d4c1811c5b9284332ffd22486d698252eb11fb8f78
#15 DONE 1.2s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:c3153af2a817f3f36cf77bfb86b3ead5795cec64b40b2528ff043420e0aab486
#16 DONE 1.6s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:d648b7d7b616a334f66f11806947f1a161e44733e13b591fa16366885bb928c1
#17 DONE 0.2s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:045afc2b3e33a12ba7b18d00cad53d2e45eeab3751f9558a25333471a6aa6a27
#18 DONE 0.2s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:3bc7c5bb4499841bf3e092d8122e06ab086c0e4f5bb98f46b719a725a4388db8
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:e095d70d170216ef91344791d25e5ea71dde5439b06d178c0b71aa690495711f
#20 DONE 1.4s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:64020108974ad529b4858c6fd235479ca012828b62aacc534b30eb84518b3b7f done
#21 naming to gcr.io/fuzzbench/runners/afl/double-conversion_string_to_double_fuzzer done
#21 DONE 0.0s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/double-conversion_string_to_double_fuzzer:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Doing final sync.
