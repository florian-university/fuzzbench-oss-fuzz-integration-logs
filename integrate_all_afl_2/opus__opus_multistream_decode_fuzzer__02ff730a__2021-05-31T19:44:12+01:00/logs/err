WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: opus_opus_multistream_decode_fuzzer.
INFO:root:Please run "make test-run-afl-opus_opus_multistream_decode_fuzzer" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:2bcc3df4c5eb57d73b21adce43e11ff4302627bc4674caee251b8673c0db3683
#1 transferring dockerfile: 1.30kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:21d7d8c8054f3b7f99f8788cd7149a95cbb9c7f7119df43cd2ba7676a64f2aa3
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#12 [internal] load build context
#12 sha256:79b6a1899d7b146fb2d70235e30d24b233c70a10598bb789109c716fd12a69f7
#12 DONE 0.0s

#5 [1/9] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#5 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/opus_opus_multistream_decode_fuzzer
#4 sha256:04f80ccf052670563caf415fba020f6d01d034317c5e14b9c0e3ea534c063218
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/opus_opus_multistream_decode_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:79b6a1899d7b146fb2d70235e30d24b233c70a10598bb789109c716fd12a69f7
#12 transferring context: 4.69kB done
#12 DONE 0.0s

#7 [3/9] RUN git clone https://gitlab.xiph.org/xiph/opus.git
#7 sha256:eb94f818b8dc5b4189af35d254c1a8d2882550d13d902bcfac1ae60b8af398e6
#7 CACHED

#13 [8/9] COPY build.sh /src/
#13 sha256:95d4c3b6565c28211b98c7d444083279b87ff86e60f33d240e2a27997e9ea0bc
#13 CACHED

#10 [6/9] RUN wget https://opus-codec.org/static/testvectors/opus_testvectors.tar.gz
#10 sha256:a64c8b1cf66ec0c7bf19004594b5f0373d8ad527ee5087dc9174fa412dcd8023
#10 CACHED

#11 [7/9] WORKDIR opus
#11 sha256:59d8c77354e07fb423f55dc0b9110ef739a40010ee1a5f6ed2d1e22a23ee8688
#11 CACHED

#6 [2/9] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#6 sha256:4a36570962698a9dd6707bba1ce7d1da85f2389d0ec6c6f4efe406fbfa0cedec
#6 CACHED

#9 [5/9] RUN apt-get update && apt-get install -y --reinstall wget
#9 sha256:bcad1c7781215707971594a4823963ebbe77c87a3490a635677366651d87ee4a
#9 CACHED

#8 [4/9] RUN sed -i -e 's/xenial/bionic/g' /etc/apt/sources.list
#8 sha256:ed90565ac39226fdb08275fd2580fdbb159c9629c0df13c71eddfd11130c7cc9
#8 CACHED

#14 [9/9] COPY *.c tests/
#14 sha256:33874509a9df5353ac6e019e83902c700b360ad45ea318ec76b886af67b6c06e
#14 CACHED

#15 exporting to image
#15 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#15 exporting layers done
#15 writing image sha256:08d9a51d37e37c7549100657ca63d0280c8a7a5cbd025cd87e146c0e735f20fd done
#15 naming to gcr.io/fuzzbench/builders/benchmark/opus_opus_multistream_decode_fuzzer done
#15 DONE 0.2s

#16 exporting cache
#16 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#16 preparing build cache for export done
#16 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/opus_opus_multistream_decode_fuzzer:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:008ec992dbfb021cba3b3abfccafd8795f69481b59daa592c51eda67a93dd184
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:b293d39a2df350d0b96a381ba243525d3ffa7e032e3ca4e8f1ab3bd479f827f0
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/opus_opus_multistream_decode_fuzzer:latest
#3 sha256:6012087d77eaf0a62ad77a69bf7aa0ee080d83127eb466b44607e5f2e1f3fb3b
#3 DONE 0.0s

#7 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/opus_opus_multistream_decode_fuzzer
#7 sha256:18834c91181255b54e21f405319d96ee5d5c73dc3af565dcc695565871db58df
#7 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus_multistream_decode_fuzzer-intermediate
#4 sha256:2f022a65e24c4ee6d4139455c93e047f30f90dfa23170d457941fadf92eead1b
#4 ERROR: gcr.io/fuzzbench/builders/afl/opus_opus_multistream_decode_fuzzer-intermediate:latest: not found

#5 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#5 sha256:6a5e5cb22d7179098e374b919430976aad17f66805489463e0bf3c687d3b02b2
#5 CACHED

#6 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#6 sha256:23ab967e943546f538c2638e80e98e85379a84c42de24ed4301764daadd6178d
#6 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:fe9b7fafc65cc8515203f90b7922e772fee32b23aacc48abac64be680bba8bfe done
#8 naming to gcr.io/fuzzbench/builders/afl/opus_opus_multistream_decode_fuzzer-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus_multistream_decode_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:be1d37b45fd3f85becbdac5f397855ff95968a81b166c6d73ae83e58aa507815
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:fdb9bdfa9cad6fd1e2e2e5aab27006d6eb8239567489a1aaf464a0bfb9ab3fed
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:fd7b09a144124462b7eaba3ae08935614b5be2c0d63bc7f46abe2086775b9cab
#8 transferring context: 591B 0.0s done
#8 DONE 0.1s

#9 [4/7] COPY ./requirements.txt /
#9 sha256:e34e8591089a3caaa9b617316df66ae83061557502873ff28b59e798be1d3ce0
#9 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:8d45a670d71e6a876a543bf725f5320e23969283f8490714cdd6c464f29114c8
#11 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:5a49a66662493a17b156b83bb74894decced79119b288860dfb3fd1a6182f22e
#10 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:b462212ae55e93a7626dafd2090295658be166b312839c649aa3fe1dab74a414
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:5fb2f80ccab2180926bb2bc5ede0619da567b589e8773822348f5143b515f16f done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:eb3320ffda472ac51dd752f101f43bea5538098aa2ed0c039b4b084f3492854a
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:37904f8a7f9fd7250ef66ec700f0fb160a7458eb0dbc4da2ca0d240422c8c7ec
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/opus_opus_multistream_decode_fuzzer-intermediate:latest
#4 sha256:588c8483543f26c2fc9217c0c98e30c7d8f59bee602dccfb1a8dc49d1e59f63b
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:a615f7f448369c2e7cd5a614c99706f521e23fe594ad72675629cb9140b06095
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/opus_opus_multistream_decode_fuzzer-intermediate
#6 sha256:f1893f563753bc0662117ce3eebb7536866b8abc3c6bee7f76223b2d52eb2747
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus_multistream_decode_fuzzer
#5 sha256:d777dd5990e7f5694c0eac80c7d1a89b8384c71fcd8fcd768790e1507597e95d
#5 ERROR: gcr.io/fuzzbench/builders/afl/opus_opus_multistream_decode_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:a615f7f448369c2e7cd5a614c99706f521e23fe594ad72675629cb9140b06095
#12 transferring context: 742.44kB 0.1s done
#12 DONE 0.1s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:eaf30ab8bbaec6d3e4b949b45059df99f7423787dca5f662c7df793124c8776d
#11 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:9adabd6cc245615561764e1dcf7b6331ee38ce645aad1b9b2bf00cba3a0492da
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:b16f0e9a9e8031607b936acfa0c6b2f924d9ccb0b4893281ab1182586f765b90
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:a74413aed5c98d1a54f115b44c14a7e7b0a107443468fde74abfe7771252358a
#10 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:0d5805a64704fc23765614dec558763c7e3419b3ee1c77e36b6d8fbb61e47482
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:0495d5737f9d955df4abd650168fae7fbdd461c7ca06b1040cbe0add1e6d7412
#14 DONE 0.5s

#15 [stage-1  8/13] COPY benchmarks/opus_opus_multistream_decode_fuzzer/benchmark.yaml /
#15 sha256:5dbd44c26c2409a2983a7f6837a70d98c70191fd225d3f08e68279ca0a067c01
#15 DONE 0.1s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:16616a0b508bd05fcd7bf2fcdf999a59df2f722f6f84841b02835c7aa9cab84f
#16 DONE 0.5s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:27b71b82e27f3b0d9566e89b4ed2b0d4d3ebc06c0f2bafaa472f3872e7c7f562
#17 DONE 0.1s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:26f221def46ba91b64fc9442bba534821ad024dd20ccaf188c7d99865227e752
#18 0.465 Checking out commit 02ff730a
#18 0.470 error: pathspec '02ff730a' did not match any file(s) known to git
#18 0.474 error: pathspec '02ff730a' did not match any file(s) known to git
#18 0.483 error: pathspec '02ff730a' did not match any file(s) known to git
#18 0.533 Checkout unsuccessful.
#18 DONE 0.6s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:0215d86744ea2fddef9f8a215e7c338a5633ece81382d15f384f5cb31755a521
#19 DONE 0.5s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:6a5df70dc5440873e74af9bad3f923f9f095163a4088a149a856794eefb0906b
#20 0.468 Run fuzzer_build to build the target
#20 0.582 FUZZ_TARGET = opus_multistream_decode_fuzzer
#20 0.582 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.582 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.587 Building benchmark opus_opus_multistream_decode_fuzzer with fuzzer afl
#20 0.590 + set -eu
#20 0.590 + FUZZERS='opus_decode_fuzzer opus_multi_fuzzer'
#20 0.590 + BUILDS=(floating fixed)
#20 0.591 + tar xvf /src/opus_testvectors.tar.gz
#20 0.599 opus_testvectors/
#20 0.599 opus_testvectors/testvector11.bit
#20 0.604 opus_testvectors/testvector05.dec
#20 0.720 opus_testvectors/testvector01.bit
#20 0.725 opus_testvectors/testvector07.dec
#20 0.775 opus_testvectors/testvector09.dec
#20 0.841 opus_testvectors/testvector12.bit
#20 0.841 opus_testvectors/testvector03.dec
#20 0.884 opus_testvectors/testvector01.dec
#20 0.947 opus_testvectors/testvector10.bit
#20 0.955 opus_testvectors/testvector03.bit
#20 0.956 opus_testvectors/testvector09.bit
#20 0.966 opus_testvectors/testvector11.dec
#20 1.102 opus_testvectors/testvector10.dec
#20 1.228 opus_testvectors/testvector04.bit
#20 1.230 opus_testvectors/testvector02.bit
#20 1.234 opus_testvectors/testvector06.bit
#20 1.236 opus_testvectors/testvector08.dec
#20 1.359 opus_testvectors/testvector12.dec
#20 1.443 opus_testvectors/testvector08.bit
#20 1.444 opus_testvectors/testvector07.bit
#20 1.447 opus_testvectors/testvector02.dec
#20 1.925 opus_testvectors/testvector06.dec
#20 2.015 opus_testvectors/testvector04.dec
#20 2.177 opus_testvectors/testvector05.bit
#20 2.179 + [[ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard = *sanitize=memory* ]]
#20 2.179 + ./autogen.sh
#20 2.182 Updating build configuration files, please wait....
#20 6.614 libtoolize: putting auxiliary files in '.'.
#20 6.614 libtoolize: linking file './ltmain.sh'
#20 6.700 libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
#20 6.700 libtoolize: linking file 'm4/libtool.m4'
#20 6.749 libtoolize: linking file 'm4/ltoptions.m4'
#20 6.799 libtoolize: linking file 'm4/ltsugar.m4'
#20 6.851 libtoolize: linking file 'm4/ltversion.m4'
#20 6.901 libtoolize: linking file 'm4/lt~obsolete.m4'
#20 11.47 configure.ac:38: installing './compile'
#20 11.47 configure.ac:36: installing './config.guess'
#20 11.47 configure.ac:36: installing './config.sub'
#20 11.47 configure.ac:33: installing './install-sh'
#20 11.47 configure.ac:33: installing './missing'
#20 11.50 Makefile.am:337: warning: '%'-style pattern rules are a GNU make extension
#20 11.50 Makefile.am:340: warning: '%'-style pattern rules are a GNU make extension
#20 11.50 Makefile.am: installing './INSTALL'
#20 11.60 Makefile.am: installing './depcomp'
#20 11.64 parallel-tests: installing './test-driver'
#20 11.74 + for build in "${BUILDS[@]}"
#20 11.74 + case "$build" in
#20 11.74 + extra_args=
#20 11.74 + ./configure --enable-static --disable-shared --disable-doc --enable-assertions
#20 11.99 checking whether make supports nested variables... yes
#20 11.99 checking for a BSD-compatible install... /usr/bin/install -c
#20 12.01 checking whether build environment is sane... yes
#20 12.02 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 12.03 checking for gawk... no
#20 12.03 checking for mawk... mawk
#20 12.03 checking whether make sets $(MAKE)... yes
#20 12.05 checking whether to enable maintainer-specific portions of Makefiles... yes
#20 12.07 checking build system type... x86_64-pc-linux-gnu
#20 12.16 checking host system type... x86_64-pc-linux-gnu
#20 12.16 checking how to print strings... printf
#20 12.22 checking whether make supports the include directive... yes (GNU style)
#20 12.23 checking for gcc... clang
#20 12.33 checking whether the C compiler works... yes
#20 12.46 checking for C compiler default output file name... a.out
#20 12.47 checking for suffix of executables... 
#20 12.60 checking whether we are cross compiling... no
#20 12.75 checking for suffix of object files... o
#20 12.79 checking whether we are using the GNU C compiler... yes
#20 12.82 checking whether clang accepts -g... yes
#20 12.84 checking for clang option to accept ISO C89... none needed
#20 12.89 checking whether clang understands -c and -o together... yes
#20 12.94 checking dependency style of clang... gcc3
#20 13.00 checking for a sed that does not truncate output... /usr/bin/sed
#20 13.01 checking for grep that handles long lines and -e... /usr/bin/grep
#20 13.01 checking for egrep... /usr/bin/grep -E
#20 13.02 checking for fgrep... /usr/bin/grep -F
#20 13.02 checking for ld used by clang... /usr/bin/ld
#20 13.04 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 13.05 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 13.05 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 13.09 checking whether ln -s works... yes
#20 13.09 checking the maximum length of command line arguments... 1572864
#20 13.11 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 13.11 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 13.11 checking for /usr/bin/ld option to reload object files... -r
#20 13.11 checking for objdump... objdump
#20 13.11 checking how to recognize dependent libraries... pass_all
#20 13.11 checking for dlltool... no
#20 13.11 checking how to associate runtime and link libraries... printf %s\n
#20 13.12 checking for ar... ar
#20 13.12 checking for archiver @FILE support... @
#20 13.16 checking for strip... strip
#20 13.16 checking for ranlib... ranlib
#20 13.16 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 13.36 checking for sysroot... no
#20 13.36 checking for a working dd... /usr/bin/dd
#20 13.37 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 13.41 checking for mt... no
#20 13.41 checking if : is a manifest tool... no
#20 13.42 checking how to run the C preprocessor... clang -E
#20 13.54 checking for ANSI C header files... yes
#20 13.81 checking for sys/types.h... yes
#20 13.87 checking for sys/stat.h... yes
#20 13.93 checking for stdlib.h... yes
#20 13.99 checking for string.h... yes
#20 14.05 checking for memory.h... yes
#20 14.12 checking for strings.h... yes
#20 14.18 checking for inttypes.h... yes
#20 14.24 checking for stdint.h... yes
#20 14.31 checking for unistd.h... yes
#20 14.38 checking for dlfcn.h... yes
#20 14.44 checking for objdir... .libs
#20 14.63 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 14.67 checking for clang option to produce PIC... -fPIC -DPIC
#20 14.67 checking if clang PIC flag -fPIC -DPIC works... yes
#20 14.71 checking if clang static flag -static works... yes
#20 14.89 checking if clang supports -c -o file.o... yes
#20 14.95 checking if clang supports -c -o file.o... (cached) yes
#20 14.95 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 14.97 checking dynamic linker characteristics... GNU/Linux ld.so
#20 15.17 checking how to hardcode library paths into programs... immediate
#20 15.17 checking whether stripping libraries is possible... yes
#20 15.17 checking if libtool supports shared libraries... yes
#20 15.17 checking whether to build shared libraries... no
#20 15.17 checking whether to build static libraries... yes
#20 15.18 checking for clang option to accept ISO C99... none needed
#20 15.25 checking for an ANSI C-conforming const... yes
#20 15.28 checking for inline... inline
#20 15.31 checking dependency style of clang... gcc3
#20 15.37 checking for C/C++ restrict keyword... __restrict
#20 15.41 checking for C99 variable-size arrays... yes
#20 15.45 checking for cos in -lm... yes
#20 15.60 checking if compiler supports SSE intrinsics... yes
#20 15.79 checking if compiler supports SSE2 intrinsics... yes
#20 16.00 checking if compiler supports SSE4.1 intrinsics... no
#20 16.13 checking if compiler supports SSE4.1 intrinsics with -msse4.1... yes
#20 16.34 checking if compiler supports AVX intrinsics... no
#20 16.88 checking if compiler supports AVX intrinsics with -mavx... yes
#20 17.52 checking How to get X86 CPU Info... Inline Assembly
#20 17.67 checking if clang supports -fvisibility=hidden... yes
#20 17.70 checking if clang supports -fstack-protector-strong... yes
#20 17.84 checking whether to add -D_FORTIFY_SOURCE=2 to CFLAGS... yes
#20 17.98 checking if clang supports -Wall -Wextra -Wcast-align -Wnested-externs -Wshadow -Wstrict-prototypes... yes
#20 18.01 checking for lrintf... yes
#20 18.15 checking for lrint... yes
#20 18.30 checking for __malloc_hook... yes
#20 18.49 checking that generated files are newer than configure... done
#20 18.49 configure: creating ./config.status
#20 19.28 config.status: creating Makefile
#20 19.31 config.status: creating opus.pc
#20 19.33 config.status: creating opus-uninstalled.pc
#20 19.35 config.status: creating celt/arm/armopts.s
#20 19.38 config.status: creating doc/Makefile
#20 19.41 config.status: creating doc/Doxyfile
#20 19.43 config.status: creating config.h
#20 19.45 config.status: executing depfiles commands
#20 20.78 config.status: executing libtool commands
#20 20.80 configure:
#20 20.80 ------------------------------------------------------------------------
#20 20.80   opus 1.3.1-107-gccaaffa9:  Automatic configuration OK.
#20 20.80 
#20 20.80     Compiler support:
#20 20.80 
#20 20.80       C99 var arrays: ................ yes
#20 20.80       C99 lrintf: .................... yes
#20 20.80       Use alloca: .................... no (using var arrays)
#20 20.80 
#20 20.80     General configuration:
#20 20.80 
#20 20.80       Floating point support: ........ yes
#20 20.80       Fast float approximations: ..... no
#20 20.80       Fixed point debugging: ......... no
#20 20.80       Inline Assembly Optimizations: . No inline ASM for your platform, please send patches
#20 20.80       External Assembly Optimizations: 
#20 20.80       Intrinsics Optimizations: ...... x86 SSE SSE2 SSE4.1 AVX
#20 20.80       Run-time CPU detection: ........ x86 SSE4.1 AVX
#20 20.80       Custom modes: .................. no
#20 20.80       Assertion checking: ............ yes
#20 20.80       Hardening: ..................... yes
#20 20.80       Fuzzing: ....................... no
#20 20.80       Check ASM: ..................... no
#20 20.80 
#20 20.80       API documentation: ............. no
#20 20.80       Extra programs: ................ yes
#20 20.80 ------------------------------------------------------------------------
#20 20.80 
#20 20.80  Type "make; make install" to compile and install
#20 20.80  Type "make check" to run the test suite
#20 20.80 
#20 20.88 ++ nproc
#20 20.88 + make -j8
#20 20.93 make  all-recursive
#20 20.95 make[1]: Entering directory '/src/opus'
#20 21.00 make[2]: Entering directory '/src/opus'
#20 21.04   CC       src/opus.lo
#20 21.04   CC       src/opus_decoder.lo
#20 21.04   CC       src/opus_encoder.lo
#20 21.04   CC       src/opus_multistream.lo
#20 21.04   CC       src/opus_multistream_encoder.lo
#20 21.04   CC       src/opus_multistream_decoder.lo
#20 21.05   CC       src/repacketizer.lo
#20 21.05   CC       src/opus_projection_encoder.lo
#20 21.38   CC       src/opus_projection_decoder.lo
#20 21.41   CC       src/mapping_matrix.lo
#20 21.48   CC       src/analysis.lo
#20 21.49   CC       src/mlp.lo
#20 21.61   CC       src/mlp_data.lo
#20 21.72   CC       src/repacketizer_demo.o
#20 21.84 make[3]: Entering directory '/src/opus/doc'
#20 21.84 make[3]: Nothing to be done for 'all'.
#20 21.84 make[3]: Leaving directory '/src/opus/doc'
#20 21.84   CC       celt/tests/test_unit_cwrs32.o
#20 21.91   CC       celt/tests/test_unit_dft.o
#20 21.92   CC       celt/bands.lo
#20 21.96   CC       celt/celt.lo
#20 22.03   CC       celt/celt_encoder.lo
#20 22.14   CC       celt/celt_decoder.lo
#20 22.26   CC       celt/cwrs.lo
#20 22.34   CC       celt/entcode.lo
#20 22.53   CC       celt/entdec.lo
#20 22.56   CC       celt/entenc.lo
#20 22.57   CC       celt/kiss_fft.lo
#20 22.59   CC       celt/laplace.lo
#20 22.87   CC       celt/mathops.lo
#20 22.89   CC       celt/mdct.lo
#20 22.90   CC       celt/modes.lo
#20 23.05   CC       celt/pitch.lo
#20 23.08   CC       celt/celt_lpc.lo
#20 23.09   CC       celt/quant_bands.lo
#20 23.18   CC       celt/rate.lo
#20 23.26   CC       celt/vq.lo
#20 23.26 celt/pitch.c:252:41: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction]
#20 23.27    celt_sig_assert((((unsigned char *)_x-(unsigned char *)NULL)&3)==0);
#20 23.27    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 23.27 ./celt/arch.h:93:38: note: expanded from macro 'celt_sig_assert'
#20 23.27 #define celt_sig_assert(cond) {if (!(cond)) {CELT_FATAL("signal assertion failed: " #cond);}}
#20 23.27                                      ^~~~
#20 23.51   CC       celt/x86/x86cpu.lo
#20 23.55 1 warning generated.
#20 23.56   CC       celt/x86/x86_celt_map.lo
#20 23.63   CC       celt/x86/pitch_sse.lo
#20 23.70   CC       celt/x86/pitch_sse2.lo
#20 23.77   CC       celt/x86/vq_sse2.lo
#20 23.78   CC       celt/x86/celt_lpc_sse4_1.lo
#20 23.81   CC       celt/x86/pitch_sse4_1.lo
#20 23.96   CC       celt/tests/test_unit_entropy.o
#20 23.97   CC       celt/tests/test_unit_laplace.o
#20 24.02   CC       celt/tests/test_unit_mathops.o
#20 24.05 celt/x86/vq_sse2.c:78:24  CC       celt/tests/test_unit_mdct.o
#20 24.05 : warning: cast from 'int *' to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 24.05       _mm_storeu_si128((__m128i*)&iy[j], _mm_setzero_si128());
#20 24.05                        ^~~~~~~~~~~~~~~~
#20 24.05 celt/x86/vq_sse2.c:119:27: warning: cast from 'int *' to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 24.05          _mm_storeu_si128((__m128i*)&iy[j], iy4);
#20 24.05                           ^~~~~~~~~~~~~~~~
#20 24.05 celt/x86/vq_sse2.c:208:28: warning: cast from 'int *' to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 24.06       y4 = _mm_loadu_si128((__m128i*)&iy[j]);
#20 24.06                            ^~~~~~~~~~~~~~~~
#20 24.06 celt/x86/vq_sse2.c:211:24: warning: cast from 'int *' to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 24.06       _mm_storeu_si128((__m128i*)&iy[j], y4);
#20 24.06                        ^~~~~~~~~~~~~~~~
#20 24.10   CC       celt/tests/test_unit_rotation.o
#20 24.13   CC       celt/tests/test_unit_types.o
#20 24.19 4 warnings generated.
#20 24.20   CC       src/opus_compare.o
#20 24.21   CC       src/opus_demo.o
#20 24.26   CC       silk/CNG.lo
#20 24.27   CC       silk/code_signs.lo
#20 24.34   CC       silk/init_decoder.lo
#20 24.59   CC       silk/decode_core.lo
#20 24.61   CC       silk/decode_frame.lo
#20 24.61   CC       silk/decode_parameters.lo
#20 24.77   CC       silk/decode_indices.lo
#20 24.78   CC       silk/decode_pulses.lo
#20 24.79   CC       silk/decoder_set_fs.lo
#20 24.90   CC       silk/dec_API.lo
#20 24.93   CC       silk/enc_API.lo
#20 24.95   CC       silk/encode_indices.lo
#20 25.06   CC       silk/encode_pulses.lo
#20 25.08   CC       silk/gain_quant.lo
#20 25.13   CC       silk/interpolate.lo
#20 25.19   CC       silk/LP_variable_cutoff.lo
#20 25.28   CC       silk/NLSF_decode.lo
#20 25.39   CC       silk/NSQ.lo
#20 25.42   CC       silk/NSQ_del_dec.lo
#20 25.46   CC       silk/PLC.lo
#20 25.51   CC       silk/shell_coder.lo
#20 25.56   CC       silk/tables_gain.lo
#20 25.57   CC       silk/tables_LTP.lo
#20 25.68   CC       silk/tables_NLSF_CB_NB_MB.lo
#20 25.80   CC       silk/tables_NLSF_CB_WB.lo
#20 25.80   CC       silk/tables_other.lo
#20 25.82   CC       silk/tables_pitch_lag.lo
#20 25.84   CC       silk/tables_pulses_per_block.lo
#20 25.93   CC       silk/VAD.lo
#20 26.04   CC       silk/control_audio_bandwidth.lo
#20 26.04   CC       silk/quant_LTP_gains.lo
#20 26.06   CC       silk/VQ_WMat_EC.lo
#20 26.07   CC       silk/HP_variable_cutoff.lo
#20 26.08   CC       silk/NLSF_encode.lo
#20 26.09   CC       silk/NLSF_VQ.lo
#20 26.33   CC       silk/NLSF_unpack.lo
#20 26.35   CC       silk/NLSF_del_dec_quant.lo
#20 26.36   CC       silk/process_NLSFs.lo
#20 26.36   CC       silk/stereo_LR_to_MS.lo
#20 26.39   CC       silk/stereo_MS_to_LR.lo
#20 26.41   CC       silk/check_control_input.lo
#20 26.42   CC       silk/control_SNR.lo
#20 26.52   CC       silk/init_encoder.lo
#20 26.59   CC       silk/control_codec.lo
#20 26.66   CC       silk/A2NLSF.lo
#20 26.69   CC       silk/ana_filt_bank_1.lo
#20 26.70   CC       silk/biquad_alt.lo
#20 26.76   CC       silk/bwexpander_32.lo
#20 26.77   CC       silk/bwexpander.lo
#20 26.85   CC       silk/debug.lo
#20 26.87   CC       silk/decode_pitch.lo
#20 26.96   CC       silk/inner_prod_aligned.lo
#20 26.98   CC       silk/lin2log.lo
#20 27.00   CC       silk/log2lin.lo
#20 27.01   CC       silk/LPC_analysis_filter.lo
#20 27.03   CC       silk/LPC_inv_pred_gain.lo
#20 27.08   CC       silk/table_LSF_cos.lo
#20 27.16   CC       silk/NLSF2A.lo
#20 27.21   CC       silk/NLSF_stabilize.lo
#20 27.24   CC       silk/NLSF_VQ_weights_laroia.lo
#20 27.25   CC       silk/pitch_est_tables.lo
#20 27.26   CC       silk/resampler.lo
#20 27.32   CC       silk/resampler_down2_3.lo
#20 27.38   CC       silk/resampler_down2.lo
#20 27.45   CC       silk/resampler_private_AR2.lo
#20 27.49   CC       silk/resampler_private_down_FIR.lo
#20 27.51   CC       silk/resampler_private_IIR_FIR.lo
#20 27.52   CC       silk/resampler_private_up2_HQ.lo
#20 27.56   CC       silk/resampler_rom.lo
#20 27.58   CC       silk/sigm_Q15.lo
#20 27.61   CC       silk/sort.lo
#20 27.68   CC       silk/sum_sqr_shift.lo
#20 27.72   CC       silk/stereo_decode_pred.lo
#20 27.79   CC       silk/stereo_encode_pred.lo
#20 27.81   CC       silk/stereo_find_predictor.lo
#20 27.82   CC       silk/stereo_quant_pred.lo
#20 27.82   CC       silk/LPC_fit.lo
#20 27.96   CC       silk/float/apply_sine_window_FLP.lo
#20 27.98   CC       silk/float/corrMatrix_FLP.lo
#20 27.98   CC       silk/float/encode_frame_FLP.lo
#20 27.99   CC       silk/float/find_LPC_FLP.lo
#20 28.07   CC       silk/float/find_LTP_FLP.lo
#20 28.14   CC       silk/float/find_pitch_lags_FLP.lo
#20 28.15   CC       silk/float/find_pred_coefs_FLP.lo
#20 28.21   CC       silk/float/LPC_analysis_filter_FLP.lo
#20 28.30   CC       silk/float/LTP_analysis_filter_FLP.lo
#20 28.36   CC       silk/float/LTP_scale_ctrl_FLP.lo
#20 28.37   CC       silk/float/noise_shape_analysis_FLP.lo
#20 28.42   CC       silk/float/process_gains_FLP.lo
#20 28.51   CC       silk/float/regularize_correlations_FLP.lo
#20 28.55   CC       silk/float/residual_energy_FLP.lo
#20 28.62   CC       silk/float/warped_autocorrelation_FLP.lo
#20 28.70   CC       silk/float/wrappers_FLP.lo
#20 28.71   CC       silk/float/autocorrelation_FLP.lo
#20 28.73   CC       silk/float/burg_modified_FLP.lo
#20 28.85   CC       silk/float/bwexpander_FLP.lo
#20 28.85   CC       silk/float/energy_FLP.lo
#20 28.96   CC       silk/float/inner_product_FLP.lo
#20 29.02   CC       silk/float/k2a_FLP.lo
#20 29.05   CC       silk/float/LPC_inv_pred_gain_FLP.lo
#20 29.11   CC       silk/float/pitch_analysis_core_FLP.lo
#20 29.20   CC       silk/float/scale_copy_vector_FLP.lo
#20 29.21   CC       silk/float/scale_vector_FLP.lo
#20 29.32   CC       silk/float/schur_FLP.lo
#20 29.32   CC       silk/float/sort_FLP.lo
#20 29.35   CC       silk/x86/NSQ_sse4_1.lo
#20 29.39   CC       silk/x86/NSQ_del_dec_sse4_1.lo
#20 29.41   CC       silk/x86/x86_silk_map.lo
#20 29.59   CC       silk/x86/VAD_sse4_1.lo
#20 29.59   CC       silk/x86/VQ_WMat_EC_sse4_1.lo
#20 29.68 silk/x86/NSQ_sse4_1.c:341:39: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.68     a_Q12_01234567 = _mm_loadu_si128( (__m128i *)(&a_Q12[ 0 ] ) );
#20 29.68                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.68 silk/x86/NSQ_sse4_1.c:343:39: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.68     a_Q12_89ABCDEF = _mm_loadu_si128( (__m128i *)(&a_Q12[ 8 ] ) );
#20 29.68                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.68 silk/x86/NSQ_sse4_1.c:349:44: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.68     AR_shp_Q13_76543210 = _mm_loadu_si128( (__m128i *)(&AR_shp_Q13[0] ) );
#20 29.68                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.68 silk/x86/NSQ_sse4_1.c:354:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.68     xmm_tempa = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[-16]) );
#20 29.68                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.68 silk/x86/NSQ_sse4_1.c:355:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.68     xmm_tempb = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[-12]) );
#20 29.68                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.68 silk/x86/NSQ_sse4_1.c:363:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.68     xmm_tempa = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -8 ]) );
#20 29.68                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.68 silk/x86/NSQ_sse4_1.c:364:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.68     xmm_tempb = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -4 ]) );
#20 29.68                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.69 silk/x86/NSQ_sse4_1.c:373:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.69     xmm_tempa = _mm_loadu_si128( (__m128i *)(&(NSQ->sAR2_Q14[ 0 ]) ) );
#20 29.69                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.69 silk/x86/NSQ_sse4_1.c:374:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.69     xmm_tempb = _mm_loadu_si128( (__m128i *)(&(NSQ->sAR2_Q14[ 4 ]) ) );
#20 29.69                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.69 silk/x86/NSQ_sse4_1.c:442:30: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.69                 b_Q14_3210 = OP_CVTEPI16_EPI32_M64( b_Q14 );
#20 29.69                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.69 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.69  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.69                                      ^~~~~~~~~~~~~~
#20 29.69 silk/x86/NSQ_sse4_1.c:446:54: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.69                 pred_lag_ptr_0123 = _mm_loadu_si128( (__m128i *)(&pred_lag_ptr[ -3 ] ) );
#20 29.69                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.70   CC       silk/tests/test_unit_LPC_inv_pred_gain.o
#20 29.70 silk/x86/NSQ_sse4_1.c:598:23: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.70     _mm_storeu_si128( (__m128i *)(&NSQ->sAR2_Q14[ 4 ]), xmm_tempa );
#20 29.70                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.70 silk/x86/NSQ_sse4_1.c:599:23: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.70     _mm_storeu_si128( (__m128i *)(&NSQ->sAR2_Q14[ 0 ]), xmm_tempb );
#20 29.70                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.70 silk/x86/NSQ_sse4_1.c:615:48: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.70             xmm_xq_Q14_3210 = _mm_loadu_si128( (__m128i *)(&(psLPC_Q14[ i + 0 ] ) ) );
#20 29.70                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.70 silk/x86/NSQ_sse4_1.c:616:48: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.70             xmm_xq_Q14_7654 = _mm_loadu_si128( (__m128i *)(&(psLPC_Q14[ i + 4 ] ) ) );
#20 29.70                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.70 silk/x86/NSQ_sse4_1.c:647:31: warning: cast from 'opus_int16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.70             _mm_storeu_si128( (__m128i *)(&xq[ i ] ), xmm_xq_Q14_3210 );
#20 29.70                               ^~~~~~~~~~~~~~~~~~~~~~
#20 29.71 silk/x86/NSQ_sse4_1.c:688:24: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.71         xmm_x16_x2x0 = OP_CVTEPI16_EPI32_M64( &(x16[ i ] ) );
#20 29.71                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.71 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.71  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.71                                      ^~~~~~~~~~~~~~
#20 29.71 silk/x86/NSQ_sse4_1.c:701:27: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.71         _mm_storeu_si128( (__m128i *)(&(x_sc_Q10[ i ] ) ), xmm_x16_x2x0 );
#20 29.71                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.71 silk/x86/NSQ_sse4_1.c:732:54: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.71             xmm_sLTP_shp_Q14_x2x0 = _mm_loadu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ) );
#20 29.71                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.72 silk/x86/NSQ_sse4_1.c  CC       tests/test_opus_api.o
#20 29.72 :744:31: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.72             _mm_storeu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ), xmm_sLTP_shp_Q14_x2x0 );
#20 29.72                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.72   CC       tests/test_opus_decode.o
#20 29.73 silk/x86/NSQ_del_dec_sse4_1.c:408:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.73     a_Q12_0123 = OP_CVTEPI16_EPI32_M64( a_Q12 );
#20 29.73                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.73 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.73  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.73                                      ^~~~~~~~~~~~~~
#20 29.73 silk/x86/NSQ_del_dec_sse4_1.c:409:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.73     a_Q12_4567 = OP_CVTEPI16_EPI32_M64( a_Q12 + 4 );
#20 29.73                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.73 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.73  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.73                                      ^~~~~~~~~~~~~~
#20 29.73 silk/x86/NSQ_del_dec_sse4_1.c:412:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.74         a_Q12_89AB = OP_CVTEPI16_EPI32_M64( a_Q12 + 8 );
#20 29.74                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.74 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.74  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.74                                      ^~~~~~~~~~~~~~
#20 29.74 silk/x86/NSQ_del_dec_sse4_1.c:413:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.74         a_Q12_CDEF = OP_CVTEPI16_EPI32_M64( a_Q12 + 12 );
#20 29.74                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.74 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.74  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.74                                      ^~~~~~~~~~~~~~
#20 29.74 silk/x86/NSQ_del_dec_sse4_1.c:417:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.74         b_Q12_0123 = OP_CVTEPI16_EPI32_M64( b_Q14 );
#20 29.74                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.74 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.74  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.74                                      ^~~~~~~~~~~~~~
#20 29.74 silk/x86/NSQ_del_dec_sse4_1.c:430:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.74                 pred_lag_ptr_tmp    = _mm_loadu_si128( (__m128i *)(&pred_lag_ptr[ -3 ] ) );
#20 29.74                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.75 silk/x86/NSQ_del_dec_sse4_1.c:485:52: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.75                 psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -3 ] ) ); /* -3, -2 , -1, 0 */
#20 29.75                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.75 silk/x86/NSQ_del_dec_sse4_1.c:499:52: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.75                 psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -7 ] ) );
#20 29.75                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.75 silk/x86/NSQ_del_dec_sse4_1.c:514:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.75                     psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -11 ] ) );
#20 29.75                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.75 silk/x86/NSQ_del_dec_sse4_1.c:527:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.75                     psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -15 ] ) );
#20 29.75                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.77 silk/x86/NSQ_del_dec_sse4_1.c:819:24: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.77         xmm_x16_x2x0 = OP_CVTEPI16_EPI32_M64( &(x16[ i ] ) );
#20 29.77                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.77 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.77  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.77                                      ^~~~~~~~~~~~~~
#20 29.78 silk/x86/NSQ_del_dec_sse4_1.c:832:27: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.78         _mm_storeu_si128( (__m128i *)(&(x_sc_Q10[ i ] ) ), xmm_x16_x2x0 );
#20 29.78                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.78 silk/x86/NSQ_del_dec_sse4_1.c:864:58: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.78                 xmm_sLTP_shp_Q14_x2x0 = _mm_loadu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ) );
#20 29.78                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.78 silk/x86/NSQ_del_dec_sse4_1.c:876:35: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.78                 _mm_storeu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ), xmm_sLTP_shp_Q14_x2x0 );
#20 29.78                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.94 silk/x86/VAD_sse4_1.c:147:44: warning: cast from 'opus_int16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.94                 xmm_X   = _mm_loadu_si128( (__m128i *)&(X[ X_offset[ b ] + i + dec_subframe_offset ] ) );
#20 29.94                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.94 silk/x86/VQ_WMat_EC_sse4_1.c:68:36: warning: cast from 'const opus_int32 *' (aka 'const int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.94     v_XX_31_Q17 = _mm_loadu_si128( (__m128i *)(&XX_Q17[ 1 ] ) );
#20 29.94                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.94 silk/x86/VQ_WMat_EC_sse4_1.c:88:26: warning: cast from 'const opus_int8 *' (aka 'const signed char *') to 'int *' increases required alignment from 1 to 4 [-Wcast-align]
#20 29.94         v_cb_row_31_Q7 = OP_CVTEPI8_EPI32_M32( &cb_row_Q7[ 1 ] );
#20 29.94                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.94 ./celt/x86/x86cpu.h:60:40: note: expanded from macro 'OP_CVTEPI8_EPI32_M32'
#20 29.94  (_mm_cvtepi8_epi32(_mm_cvtsi32_si128(*(int *)(x))))
#20 29.94                                        ^~~~~~~~~~
#20 30.01 2 warnings generated.
#20 30.02   CC       tests/test_opus_encode.o
#20 30.11   CC       tests/opus_encode_regressions.o
#20 30.29   CC       tests/test_opus_padding.o
#20 30.33 20 warnings generated.
#20 30.35   CC       tests/test_opus_projection.o
#20 30.35 1 warning generated.
#20 30.37   CC       doc/trivial_example.o
#20 30.39 tests/test_opus_padding.c:81:7: warning: variable 'tests' set but not used [-Wunused-but-set-variable]
#20 30.39   int tests = 0;;
#20 30.39       ^
#20 30.41   CCLD     celt/tests/test_unit_cwrs32
#20 30.42 1 warning generated.
#20 30.43   CCLD     celt/tests/test_unit_dft
#20 30.54   CCLD     celt/tests/test_unit_entropy
#20 30.59 14 warnings generated.
#20 30.61   CCLD     celt/tests/test_unit_laplace
#20 30.62   CCLD     celt/tests/test_unit_mathops
#20 30.80   CCLD     celt/tests/test_unit_mdct
#20 30.83   CCLD     celt/tests/test_unit_rotation
#20 30.91   CCLD     celt/tests/test_unit_types
#20 30.93   CCLD     opus_compare
#20 30.97   CCLD     libopus.la
#20 31.06   CCLD     silk/tests/test_unit_LPC_inv_pred_gain
#20 31.13   CCLD     tests/test_opus_projection
#20 31.57   CCLD     opus_demo
#20 31.57   CCLD     repacketizer_demo
#20 31.57   CCLD     tests/test_opus_api
#20 31.57   CCLD     tests/test_opus_encode
#20 31.57   CCLD     tests/test_opus_decode
#20 31.57   CCLD     tests/test_opus_padding
#20 31.68   CCLD     trivial_example
#20 32.12 make[2]: Leaving directory '/src/opus'
#20 32.13 make[1]: Leaving directory '/src/opus'
#20 32.13 + for fuzzer in $FUZZERS
#20 32.13 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -Iinclude tests/opus_decode_fuzzer.c -o opus_decode_fuzzer.o
#20 32.19 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard opus_decode_fuzzer.o -o /out/opus_decode_fuzzer_floating /libAFL.a .libs/libopus.a
#20 32.46 + '[' -f tests/opus_decode_fuzzer.options ']'
#20 32.46 + cp tests/opus_decode_fuzzer.options /out/opus_decode_fuzzer_floating.options
#20 32.46 + zip -r /out/opus_decode_fuzzer_floating_seed_corpus.zip opus_testvectors/
#20 32.47   adding: opus_testvectors/ (stored 0%)
#20 32.47   adding: opus_testvectors/testvector03.bit (deflated 2%)
#20 32.47   adding: opus_testvectors/testvector01.bit (deflated 15%)
#20 32.50   adding: opus_testvectors/testvector07.bit (deflated 4%)
#20 32.52   adding: opus_testvectors/testvector02.bit (deflated 3%)
#20 32.52   adding: opus_testvectors/testvector12.bit (deflated 4%)
#20 32.52   adding: opus_testvectors/testvector03.dec (deflated 48%)
#20 32.77   adding: opus_testvectors/testvector06.dec (deflated 45%)
#20 33.07   adding: opus_testvectors/testvector11.dec (deflated 7%)
#20 33.36   adding: opus_testvectors/testvector11.bit (deflated 0%)
#20 33.38   adding: opus_testvectors/testvector06.bit (deflated 3%)
#20 33.39   adding: opus_testvectors/testvector08.dec (deflated 38%)
#20 33.71   adding: opus_testvectors/testvector02.dec (deflated 50%)
#20 33.98   adding: opus_testvectors/testvector01.dec (deflated 29%)
#20 34.39   adding: opus_testvectors/testvector05.bit (deflated 3%)
#20 34.40   adding: opus_testvectors/testvector08.bit (deflated 1%)
#20 34.41   adding: opus_testvectors/testvector09.bit (deflated 11%)
#20 34.44   adding: opus_testvectors/testvector10.dec (deflated 49%)
#20 34.75   adding: opus_testvectors/testvector07.dec (deflated 44%)
#20 35.00   adding: opus_testvectors/testvector04.dec (deflated 49%)
#20 35.32   adding: opus_testvectors/testvector09.dec (deflated 43%)
#20 35.64   adding: opus_testvectors/testvector05.dec (deflated 47%)
#20 35.98   adding: opus_testvectors/testvector12.dec (deflated 61%)
#20 36.28   adding: opus_testvectors/testvector10.bit (deflated 9%)
#20 36.31   adding: opus_testvectors/testvector04.bit (deflated 3%)
#20 36.32 + for fuzzer in $FUZZERS
#20 36.32 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -Iinclude tests/opus_multi_fuzzer.c -o opus_multi_fuzzer.o
#20 36.39 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard opus_multi_fuzzer.o -o /out/opus_multi_fuzzer_floating /libAFL.a .libs/libopus.a
#20 36.66 + '[' -f tests/opus_multi_fuzzer.options ']'
#20 36.66 + zip -r /out/opus_multi_fuzzer_floating_seed_corpus.zip opus_testvectors/
#20 36.66   adding: opus_testvectors/ (stored 0%)
#20 36.66   adding: opus_testvectors/testvector03.bit (deflated 2%)
#20 36.67   adding: opus_testvectors/testvector01.bit (deflated 15%)
#20 36.70   adding: opus_testvectors/testvector07.bit (deflated 4%)
#20 36.71   adding: opus_testvectors/testvector02.bit (deflated 3%)
#20 36.71   adding: opus_testvectors/testvector12.bit (deflated 4%)
#20 36.71   adding: opus_testvectors/testvector03.dec (deflated 48%)
#20 36.97   adding: opus_testvectors/testvector06.dec (deflated 45%)
#20 37.28   adding: opus_testvectors/testvector11.dec (deflated 7%)
#20 37.56   adding: opus_testvectors/testvector11.bit (deflated 0%)
#20 37.57   adding: opus_testvectors/testvector06.bit (deflated 3%)
#20 37.58   adding: opus_testvectors/testvector08.dec (deflated 38%)
#20 37.91   adding: opus_testvectors/testvector02.dec (deflated 50%)
#20 38.18   adding: opus_testvectors/testvector01.dec (deflated 29%)
#20 38.58   adding: opus_testvectors/testvector05.bit (deflated 3%)
#20 38.59   adding: opus_testvectors/testvector08.bit (deflated 1%)
#20 38.60   adding: opus_testvectors/testvector09.bit (deflated 11%)
#20 38.63   adding: opus_testvectors/testvector10.dec (deflated 49%)
#20 38.93   adding: opus_testvectors/testvector07.dec (deflated 44%)
#20 39.19   adding: opus_testvectors/testvector04.dec (deflated 49%)
#20 39.50   adding: opus_testvectors/testvector09.dec (deflated 43%)
#20 39.83   adding: opus_testvectors/testvector05.dec (deflated 47%)
#20 40.16   adding: opus_testvectors/testvector12.dec (deflated 61%)
#20 40.46   adding: opus_testvectors/testvector10.bit (deflated 9%)
#20 40.50   adding: opus_testvectors/testvector04.bit (deflated 3%)
#20 40.51 + for build in "${BUILDS[@]}"
#20 40.51 + case "$build" in
#20 40.51 + extra_args=' --enable-fixed-point --enable-check-asm'
#20 40.51 + ./configure --enable-fixed-point --enable-check-asm --enable-static --disable-shared --disable-doc --enable-assertions
#20 40.75 checking whether make supports nested variables... yes
#20 40.76 checking for a BSD-compatible install... /usr/bin/install -c
#20 40.77 checking whether build environment is sane... yes
#20 40.79 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 40.79 checking for gawk... no
#20 40.79 checking for mawk... mawk
#20 40.79 checking whether make sets $(MAKE)... yes
#20 40.82 checking whether to enable maintainer-specific portions of Makefiles... yes
#20 40.84 checking build system type... x86_64-pc-linux-gnu
#20 40.92 checking host system type... x86_64-pc-linux-gnu
#20 40.92 checking how to print strings... printf
#20 40.97 checking whether make supports the include directive... yes (GNU style)
#20 40.99 checking for gcc... clang
#20 41.08 checking whether the C compiler works... yes
#20 41.22 checking for C compiler default output file name... a.out
#20 41.22 checking for suffix of executables... 
#20 41.35 checking whether we are cross compiling... no
#20 41.50 checking for suffix of object files... o
#20 41.53 checking whether we are using the GNU C compiler... yes
#20 41.57 checking whether clang accepts -g... yes
#20 41.59 checking for clang option to accept ISO C89... none needed
#20 41.64 checking whether clang understands -c and -o together... yes
#20 41.69 checking dependency style of clang... gcc3
#20 41.76 checking for a sed that does not truncate output... /usr/bin/sed
#20 41.76 checking for grep that handles long lines and -e... /usr/bin/grep
#20 41.77 checking for egrep... /usr/bin/grep -E
#20 41.77 checking for fgrep... /usr/bin/grep -F
#20 41.77 checking for ld used by clang... /usr/bin/ld
#20 41.80 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 41.80 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 41.81 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 41.85 checking whether ln -s works... yes
#20 41.85 checking the maximum length of command line arguments... 1572864
#20 41.86 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 41.86 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 41.86 checking for /usr/bin/ld option to reload object files... -r
#20 41.86 checking for objdump... objdump
#20 41.86 checking how to recognize dependent libraries... pass_all
#20 41.87 checking for dlltool... no
#20 41.87 checking how to associate runtime and link libraries... printf %s\n
#20 41.87 checking for ar... ar
#20 41.87 checking for archiver @FILE support... @
#20 41.91 checking for strip... strip
#20 41.92 checking for ranlib... ranlib
#20 41.92 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 42.12 checking for sysroot... no
#20 42.12 checking for a working dd... /usr/bin/dd
#20 42.12 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 42.16 checking for mt... no
#20 42.16 checking if : is a manifest tool... no
#20 42.17 checking how to run the C preprocessor... clang -E
#20 42.29 checking for ANSI C header files... yes
#20 42.57 checking for sys/types.h... yes
#20 42.62 checking for sys/stat.h... yes
#20 42.69 checking for stdlib.h... yes
#20 42.74 checking for string.h... yes
#20 42.81 checking for memory.h... yes
#20 42.87 checking for strings.h... yes
#20 42.94 checking for inttypes.h... yes
#20 43.00 checking for stdint.h... yes
#20 43.07 checking for unistd.h... yes
#20 43.14 checking for dlfcn.h... yes
#20 43.21 checking for objdir... .libs
#20 43.40 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 43.43 checking for clang option to produce PIC... -fPIC -DPIC
#20 43.43 checking if clang PIC flag -fPIC -DPIC works... yes
#20 43.47 checking if clang static flag -static works... yes
#20 43.66 checking if clang supports -c -o file.o... yes
#20 43.71 checking if clang supports -c -o file.o... (cached) yes
#20 43.71 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 43.74 checking dynamic linker characteristics... GNU/Linux ld.so
#20 43.93 checking how to hardcode library paths into programs... immediate
#20 43.93 checking whether stripping libraries is possible... yes
#20 43.94 checking if libtool supports shared libraries... yes
#20 43.94 checking whether to build shared libraries... no
#20 43.94 checking whether to build static libraries... yes
#20 43.94 checking for clang option to accept ISO C99... none needed
#20 44.01 checking for an ANSI C-conforming const... yes
#20 44.05 checking for inline... inline
#20 44.08 checking dependency style of clang... gcc3
#20 44.14 checking for C/C++ restrict keyword... __restrict
#20 44.18 checking for C99 variable-size arrays... yes
#20 44.22 checking for cos in -lm... yes
#20 44.37 checking if compiler supports SSE intrinsics... yes
#20 44.57 checking if compiler supports SSE2 intrinsics... yes
#20 44.76 checking if compiler supports SSE4.1 intrinsics... no
#20 44.88 checking if compiler supports SSE4.1 intrinsics with -msse4.1... yes
#20 45.09 checking if compiler supports AVX intrinsics... no
#20 45.64 checking if compiler supports AVX intrinsics with -mavx... yes
#20 46.27 checking How to get X86 CPU Info... Inline Assembly
#20 46.43 checking if clang supports -fvisibility=hidden... yes
#20 46.46 checking if clang supports -fstack-protector-strong... yes
#20 46.59 checking whether to add -D_FORTIFY_SOURCE=2 to CFLAGS... yes
#20 46.73 checking if clang supports -Wall -Wextra -Wcast-align -Wnested-externs -Wshadow -Wstrict-prototypes... yes
#20 46.77 checking for lrintf... yes
#20 46.91 checking for lrint... yes
#20 47.05 checking for __malloc_hook... yes
#20 47.25 checking that generated files are newer than configure... done
#20 47.25 configure: creating ./config.status
#20 48.05 config.status: creating Makefile
#20 48.08 config.status: creating opus.pc
#20 48.10 config.status: creating opus-uninstalled.pc
#20 48.12 config.status: creating celt/arm/armopts.s
#20 48.14 config.status: creating doc/Makefile
#20 48.17 config.status: creating doc/Doxyfile
#20 48.20 config.status: creating config.h
#20 48.21 config.status: executing depfiles commands
#20 48.27 config.status: executing libtool commands
#20 48.28 configure:
#20 48.28 ------------------------------------------------------------------------
#20 48.28   opus 1.3.1-107-gccaaffa9:  Automatic configuration OK.
#20 48.28 
#20 48.28     Compiler support:
#20 48.28 
#20 48.28       C99 var arrays: ................ yes
#20 48.28       C99 lrintf: .................... yes
#20 48.28       Use alloca: .................... no (using var arrays)
#20 48.28 
#20 48.28     General configuration:
#20 48.28 
#20 48.28       Floating point support: ........ no
#20 48.28       Fast float approximations: ..... no
#20 48.28       Fixed point debugging: ......... no
#20 48.28       Inline Assembly Optimizations: . No inline ASM for your platform, please send patches
#20 48.28       External Assembly Optimizations: 
#20 48.28       Intrinsics Optimizations: ...... x86 SSE SSE2 SSE4.1 AVX
#20 48.28       Run-time CPU detection: ........ x86 SSE4.1 AVX
#20 48.28       Custom modes: .................. no
#20 48.28       Assertion checking: ............ yes
#20 48.28       Hardening: ..................... yes
#20 48.28       Fuzzing: ....................... no
#20 48.28       Check ASM: ..................... yes
#20 48.28 
#20 48.28       API documentation: ............. no
#20 48.28       Extra programs: ................ yes
#20 48.28 ------------------------------------------------------------------------
#20 48.28 
#20 48.28  Type "make; make install" to compile and install
#20 48.28  Type "make check" to run the test suite
#20 48.28 
#20 48.36 ++ nproc
#20 48.36 + make -j8
#20 48.46 make  all-recursive
#20 48.52 make[1]: Entering directory '/src/opus'
#20 48.60 make[2]: Entering directory '/src/opus'
#20 48.64   CC       src/opus.lo
#20 48.64   CC       src/opus_decoder.lo
#20 48.64   CC       src/opus_encoder.lo
#20 48.64   CC       src/opus_multistream.lo
#20 48.64   CC       src/opus_multistream_encoder.lo
#20 48.65   CC       src/opus_multistream_decoder.lo
#20 48.65   CC       src/repacketizer.lo
#20 48.65   CC       src/opus_projection_encoder.lo
#20 48.98   CC       src/opus_projection_decoder.lo
#20 49.03   CC       src/mapping_matrix.lo
#20 49.08   CC       src/analysis.lo
#20 49.10   CC       src/mlp.lo
#20 49.22   CC       src/mlp_data.lo
#20 49.33   CC       src/repacketizer_demo.o
#20 49.42   CC       silk/tests/test_unit_LPC_inv_pred_gain.o
#20 49.53   CC       tests/test_opus_api.o
#20 49.57   CC       tests/test_opus_decode.o
#20 49.61   CC       tests/test_opus_encode.o
#20 49.64   CC       tests/opus_encode_regressions.o
#20 49.80   CC       tests/test_opus_projection.o
#20 49.91 make[3]: Entering directory '/src/opus/doc'
#20 49.91 make[3]: Nothing to be done for 'all'.
#20 49.91 make[3]: Leaving directory '/src/opus/doc'
#20 49.92   CC       celt/tests/test_unit_cwrs32.o
#20 49.99   CC       celt/tests/test_unit_dft.o
#20 50.19   CC       celt/bands.lo
#20 50.21   CC       celt/celt.lo
#20 50.21   CC       celt/celt_encoder.lo
#20 50.38   CC       celt/celt_decoder.lo
#20 50.60   CC       celt/cwrs.lo
#20 50.66   CC       celt/entcode.lo
#20 50.72   CC       celt/entdec.lo
#20 50.77   CC       celt/entenc.lo
#20 50.85   CC       celt/kiss_fft.lo
#20 50.92   CC       celt/laplace.lo
#20 51.06   CC       celt/mathops.lo
#20 51.08   CC       celt/mdct.lo
#20 51.19   CC       celt/modes.lo
#20 51.23   CC       celt/pitch.lo
#20 51.38   CC       celt/celt_lpc.lo
#20 51.44   CC       celt/quant_bands.lo
#20 51.45 celt/pitch.c:252:41: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction]
#20 51.45    celt_sig_assert((((unsigned char *)_x-(unsigned char *)NULL)&3)==0);
#20 51.45    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.45 ./celt/arch.h:93:38: note: expanded from macro 'celt_sig_assert'
#20 51.45 #define celt_sig_assert(cond) {if (!(cond)) {CELT_FATAL("signal assertion failed: " #cond);}}
#20 51.45                                      ^~~~
#20 51.47   CC       celt/rate.lo
#20 51.48   CC       celt/vq.lo
#20 52.03 1 warning generated.
#20 52.05   CC       celt/x86/x86cpu.lo
#20 52.05   CC       celt/x86/x86_celt_map.lo
#20 52.07   CC       celt/x86/pitch_sse.lo
#20 52.10   CC       celt/x86/pitch_sse2.lo
#20 52.16   CC       celt/x86/vq_sse2.lo
#20 52.23   CC       celt/x86/celt_lpc_sse4_1.lo
#20 52.30   CC       celt/x86/pitch_sse4_1.lo
#20 52.31   CC       celt/tests/test_unit_entropy.o
#20 52.34   CC       celt/tests/test_unit_laplace.o
#20 52.37 celt/x86/pitch_sse2.c:59:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.38         inVec1_76543210 = _mm_loadu_si128((__m128i *)(&x[i + 0]));
#20 52.38                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.38 celt/x86/pitch_sse2.c:60:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.38         inVec2_76543210 = _mm_loadu_si128((__m128i *)(&y[i + 0]));
#20 52.38                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.38 celt/x86/pitch_sse2.c:62:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.38         inVec1_FEDCBA98 = _mm_loadu_si128((__m128i *)(&x[i + 8]));
#20 52.38                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.38 celt/x86/pitch_sse2.c:63:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.38         inVec2_FEDCBA98 = _mm_loadu_si128((__m128i *)(&y[i + 8]));
#20 52.39                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.39 celt/x86/pitch_sse2.c:76:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.39         inVec1_76543210 = _mm_loadu_si128((__m128i *)(&x[i + 0]));
#20 52.39                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.39 celt/x86/pitch_sse2.c:77:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.39         inVec2_76543210 = _mm_loadu_si128((__m128i *)(&y[i + 0]));
#20 52.39                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.43 6 warnings generated.
#20 52.44   CC       celt/tests/test_unit_mathops.o
#20 52.46   CC       celt/tests/test_unit_mdct.o
#20 52.54 celt/x86/celt_lpc_sse4_1.c:73:14: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.54       vecX = OP_CVTEPI16_EPI32_M64(x + i);
#20 52.54              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.54 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.54  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.54                                      ^~~~~~~~~~~~~~
#20 52.54 celt/x86/celt_lpc_sse4_1.c:76:24: warning: cast from 'opus_val16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.54       _mm_storel_epi64((__m128i *)(y + i), vecSum);
#20 52.54                        ^~~~~~~~~~~~~~~~~~
#20 52.61   CC       celt/tests/test_unit_rotation.o
#20 52.61 celt/x86/pitch_sse4_1.c:61:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.61         inVec1_76543210 = _mm_loadu_si128((__m128i *)(&x[i + 0]));
#20 52.61                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.61 celt/x86/pitch_sse4_1.c:62:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.62         inVec2_76543210 = _mm_loadu_si128((__m128i *)(&y[i + 0]));
#20 52.62                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.62 celt/x86/pitch_sse4_1.c:64:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.62         inVec1_FEDCBA98 = _mm_loadu_si128((__m128i *)(&x[i + 8]));
#20 52.62                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.62 celt/x86/pitch_sse4_1.c:65:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.62         inVec2_FEDCBA98 = _mm_loadu_si128((__m128i *)(&y[i + 8]));
#20 52.62                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.62 celt/x86/pitch_sse4_1.c:78:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.62         inVec1_76543210 = _mm_loadu_si128((__m128i *)(&x[i + 0]));
#20 52.62                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.62 celt/x86/pitch_sse4_1.c:79:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.62         inVec2_76543210 = _mm_loadu_si128((__m128i *)(&y[i + 0]));
#20 52.62                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 52.62 celt/x86/pitch_sse4_1.c:89:23: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.62         inVec1_3210 = OP_CVTEPI16_EPI32_M64(&x[i + 0]);
#20 52.62                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.62 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.62  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.62                                      ^~~~~~~~~~~~~~
#20 52.62 celt/x86/pitch_sse4_1.c:90:23: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.62         inVec2_3210 = OP_CVTEPI16_EPI32_M64(&y[i + 0]);
#20 52.62                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.62 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.62  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.62                                      ^~~~~~~~~~~~~~
#20 52.63 celt/x86/pitch_sse4_1.c:137:32: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.63         vecX = _mm_loadu_si128((__m128i *)(&x[j + 0]));
#20 52.63                                ^~~~~~~~~~~~~~~~~~~~~~
#20 52.63 celt/x86/pitch_sse4_1.c:138:33: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.63         vecY0 = _mm_loadu_si128((__m128i *)(&y[j + 0]));
#20 52.63                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 52.63 celt/x86/pitch_sse4_1.c:139:33: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.63         vecY1 = _mm_loadu_si128((__m128i *)(&y[j + 1]));
#20 52.63                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 52.63 celt/x86/pitch_sse4_1.c:140:33: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.63         vecY2 = _mm_loadu_si128((__m128i *)(&y[j + 2]));
#20 52.63                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 52.63 celt/x86/pitch_sse4_1.c:141:33: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.63         vecY3 = _mm_loadu_si128((__m128i *)(&y[j + 3]));
#20 52.63                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 52.63 celt/x86/pitch_sse4_1.c:166:16: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.63         vecX = OP_CVTEPI16_EPI32_M64(&x[j + 0]);
#20 52.63                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.63 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.63  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.63                                      ^~~~~~~~~~~~~~
#20 52.63 celt/x86/pitch_sse4_1.c:172:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.63         vecY0 = OP_CVTEPI16_EPI32_M64(&y[j + 0]);
#20 52.63                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.63 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.64  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.64                                      ^~~~~~~~~~~~~~
#20 52.64 celt/x86/pitch_sse4_1.c:173:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.64         vecY1 = OP_CVTEPI16_EPI32_M64(&y[j + 1]);
#20 52.64                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.64 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.64  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.64                                      ^~~~~~~~~~~~~~
#20 52.64 celt/x86/pitch_sse4_1.c:174:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.64         vecY2 = OP_CVTEPI16_EPI32_M64(&y[j + 2]);
#20 52.64                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.64 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.64  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.64                                      ^~~~~~~~~~~~~~
#20 52.64 celt/x86/pitch_sse4_1.c:175:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.64         vecY3 = OP_CVTEPI16_EPI32_M64(&y[j + 3]);
#20 52.64                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.64 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.64  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.64                                      ^~~~~~~~~~~~~~
#20 52.64 celt/x86/pitch_sse4_1.c:188:12: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.64     vecX = OP_CVTEPI16_EPI32_M64(&x[len - 4]);
#20 52.64            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.64 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.64  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.64                                      ^~~~~~~~~~~~~~
#20 52.64 celt/x86/pitch_sse4_1.c:195:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.64         vecY0 = OP_CVTEPI16_EPI32_M64(&y[j + 0]);
#20 52.64                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.64 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.64  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.64                                      ^~~~~~~~~~~~~~
#20 52.64 celt/x86/pitch_sse4_1.c:196:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.65         vecY1 = OP_CVTEPI16_EPI32_M64(&y[j + 1]);
#20 52.65                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.65 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.65  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.65                                      ^~~~~~~~~~~~~~
#20 52.65 celt/x86/pitch_sse4_1.c:197:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.65         vecY2 = OP_CVTEPI16_EPI32_M64(&y[j + 2]);
#20 52.65                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.65 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.65  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.65                                      ^~~~~~~~~~~~~~
#20 52.65 celt/x86/pitch_sse4_1.c:212:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.65         vecY0 = OP_CVTEPI16_EPI32_M64(&y[j + 0]);
#20 52.65                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.65 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.65  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.65                                      ^~~~~~~~~~~~~~
#20 52.65 celt/x86/pitch_sse4_1.c:213:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.65         vecY1 = OP_CVTEPI16_EPI32_M64(&y[j + 1]);
#20 52.65                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.65 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.65  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.65                                      ^~~~~~~~~~~~~~
#20 52.65 celt/x86/pitch_sse4_1.c:225:172 warnings generated.
#20 52.65 : warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 52.65         vecY0 = OP_CVTEPI16_EPI32_M64(&y[j + 0]);
#20 52.66                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.66 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 52.66  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 52.66                                      ^~~~~~~~~~~~~~
#20 52.66 celt/x86/pitch_sse4_1.c:232:31: warning: cast from 'opus_val32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 52.66     initSum = _mm_loadu_si128((__m128i *)(&sum[0]));
#20 52.66                               ^~~~~~~~~~~~~~~~~~~~
#20 52.66 celt/x86/pitch_sse4_1.c:234:22: warning: cast from 'opus_val32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 52.66     _mm_storeu_si128((__m128i *)sum, initSum);
#20 52.66                      ^~~~~~~~~~~~~~
#20 52.67   CC       celt/tests/test_unit_types.o
#20 52.73   CC       src/opus_demo.o
#20 52.73   CC       silk/CNG.lo
#20 52.78   CC       silk/code_signs.lo
#20 52.78   CC       silk/init_decoder.lo
#20 52.81 27 warnings generated.
#20 52.83   CC       silk/decode_core.lo
#20 53.00   CC       silk/decode_frame.lo
#20 53.03   CC       silk/decode_parameters.lo
#20 53.11   CC       silk/decode_indices.lo
#20 53.24   CC       silk/decode_pulses.lo
#20 53.28   CC       silk/decoder_set_fs.lo
#20 53.38   CC       silk/dec_API.lo
#20 53.42   CC       silk/enc_API.lo
#20 53.43   CC       silk/encode_indices.lo
#20 53.49   CC       silk/encode_pulses.lo
#20 53.56   CC       silk/gain_quant.lo
#20 53.57   CC       silk/interpolate.lo
#20 53.60   CC       silk/LP_variable_cutoff.lo
#20 53.79   CC       silk/NLSF_decode.lo
#20 53.87   CC       silk/NSQ.lo
#20 53.90   CC       silk/NSQ_del_dec.lo
#20 53.91   CC       silk/PLC.lo
#20 53.95   CC       silk/shell_coder.lo
#20 54.01   CC       silk/tables_gain.lo
#20 54.10   CC       silk/tables_LTP.lo
#20 54.11   CC       silk/tables_NLSF_CB_NB_MB.lo
#20 54.25   CC       silk/tables_NLSF_CB_WB.lo
#20 54.26   CC       silk/tables_other.lo
#20 54.31   CC       silk/tables_pitch_lag.lo
#20 54.37   CC       silk/tables_pulses_per_block.lo
#20 54.37   CC       silk/VAD.lo
#20 54.51   CC       silk/control_audio_bandwidth.lo
#20 54.54   CC       silk/quant_LTP_gains.lo
#20 54.56   CC       silk/VQ_WMat_EC.lo
#20 54.57   CC       silk/HP_variable_cutoff.lo
#20 54.58   CC       silk/NLSF_encode.lo
#20 54.66   CC       silk/NLSF_VQ.lo
#20 54.81   CC       silk/NLSF_unpack.lo
#20 54.86   CC       silk/NLSF_del_dec_quant.lo
#20 54.87   CC       silk/process_NLSFs.lo
#20 54.91   CC       silk/stereo_LR_to_MS.lo
#20 54.92   CC       silk/stereo_MS_to_LR.lo
#20 54.94   CC       silk/check_control_input.lo
#20 54.97   CC       silk/control_SNR.lo
#20 55.00   CC       silk/init_encoder.lo
#20 55.07   CC       silk/control_codec.lo
#20 55.18   CC       silk/A2NLSF.lo
#20 55.27   CC       silk/ana_filt_bank_1.lo
#20 55.29   CC       silk/biquad_alt.lo
#20 55.29   CC       silk/bwexpander_32.lo
#20 55.29   CC       silk/bwexpander.lo
#20 55.32   CC       silk/debug.lo
#20 55.47   CC       silk/decode_pitch.lo
#20 55.47   CC       silk/inner_prod_aligned.lo
#20 55.50   CC       silk/lin2log.lo
#20 55.55   CC       silk/log2lin.lo
#20 55.55   CC       silk/LPC_analysis_filter.lo
#20 55.59   CC       silk/LPC_inv_pred_gain.lo
#20 55.63   CC       silk/table_LSF_cos.lo
#20 55.76   CC       silk/NLSF2A.lo
#20 55.77   CC       silk/NLSF_stabilize.lo
#20 55.79   CC       silk/NLSF_VQ_weights_laroia.lo
#20 55.81   CC       silk/pitch_est_tables.lo
#20 55.82   CC       silk/resampler.lo
#20 55.91   CC       silk/resampler_down2_3.lo
#20 55.91   CC       silk/resampler_down2.lo
#20 55.99   CC       silk/resampler_private_AR2.lo
#20 56.08   CC       silk/resampler_private_down_FIR.lo
#20 56.11   CC       silk/resampler_private_IIR_FIR.lo
#20 56.14   CC       silk/resampler_private_up2_HQ.lo
#20 56.14   CC       silk/resampler_rom.lo
#20 56.16   CC       silk/sigm_Q15.lo
#20 56.21   CC       silk/sort.lo
#20 56.22   CC       silk/sum_sqr_shift.lo
#20 56.27   CC       silk/stereo_decode_pred.lo
#20 56.39   CC       silk/stereo_encode_pred.lo
#20 56.42   CC       silk/stereo_find_predictor.lo
#20 56.44   CC       silk/stereo_quant_pred.lo
#20 56.45   CC       silk/LPC_fit.lo
#20 56.54   CC       silk/fixed/LTP_analysis_filter_FIX.lo
#20 56.57   CC       silk/fixed/LTP_scale_ctrl_FIX.lo
#20 56.59   CC       silk/fixed/corrMatrix_FIX.lo
#20 56.60   CC       silk/fixed/encode_frame_FIX.lo
#20 56.69   CC       silk/fixed/find_LPC_FIX.lo
#20 56.77   CC       silk/fixed/find_LTP_FIX.lo
#20 56.78   CC       silk/fixed/find_pitch_lags_FIX.lo
#20 56.86   CC       silk/fixed/find_pred_coefs_FIX.lo
#20 56.89   CC       silk/fixed/noise_shape_analysis_FIX.lo
#20 56.91   CC       silk/fixed/process_gains_FIX.lo
#20 57.03   CC       silk/fixed/regularize_correlations_FIX.lo
#20 57.05   CC       silk/fixed/residual_energy16_FIX.lo
#20 57.12   CC       silk/fixed/residual_energy_FIX.lo
#20 57.14   CC       silk/fixed/warped_autocorrelation_FIX.lo
#20 57.14   CC       silk/fixed/apply_sine_window_FIX.lo
#20 57.24   CC       silk/fixed/autocorr_FIX.lo
#20 57.28   CC       silk/fixed/burg_modified_FIX.lo
#20 57.34   CC       silk/fixed/k2a_FIX.lo
#20 57.43   CC       silk/fixed/k2a_Q16_FIX.lo
#20 57.43   CC       silk/fixed/pitch_analysis_core_FIX.lo
#20 57.44   CC       silk/fixed/vector_ops_FIX.lo
#20 57.50   CC       silk/fixed/schur64_FIX.lo
#20 57.53   CC       silk/fixed/schur_FIX.lo
#20 57.62   CC       silk/x86/NSQ_sse4_1.lo
#20 57.70   CC       silk/x86/NSQ_del_dec_sse4_1.lo
#20 57.79   CC       silk/x86/x86_silk_map.lo
#20 57.80   CC       silk/x86/VAD_sse4_1.lo
#20 57.85   CC       silk/x86/VQ_WMat_EC_sse4_1.lo
#20 57.90   CC       silk/fixed/x86/vector_ops_FIX_sse4_1.lo
#20 57.99 silk/x86/NSQ_sse4_1.c:341:39: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.99     a_Q12_01234567 = _mm_loadu_si128( (__m128i *)(&a_Q12[ 0 ] ) );
#20 57.99                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.99 silk/x86/NSQ_sse4_1.c:343:39: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.99     a_Q12_89ABCDEF = _mm_loadu_si128( (__m128i *)(&a_Q12[ 8 ] ) );
#20 57.99                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.99 silk/x86/NSQ_sse4_1.c:349:44: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 57.99     AR_shp_Q13_76543210 = _mm_loadu_si128( (__m128i *)(&AR_shp_Q13[0] ) );
#20 57.99                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 57.99 silk/x86/NSQ_sse4_1.c:354:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.00     xmm_tempa = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[-16]) );
#20 58.00                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.00 silk/x86/NSQ_sse4_1.c:355:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.00     xmm_tempb = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[-12]) );
#20 58.00                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.00 silk/x86/NSQ_sse4_1.c:363:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.00     xmm_tempa = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -8 ]) );
#20 58.00                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.00 silk/x86/NSQ_sse4_1.c:364:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.00     xmm_tempb = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -4 ]) );
#20 58.00                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.00 silk/x86/NSQ_sse4_1.c:373:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.00     xmm_tempa = _mm_loadu_si128( (__m128i *)(&(NSQ->sAR2_Q14[ 0 ]) ) );
#20 58.00                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.00 silk/x86/NSQ_sse4_1.c:374:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.01     xmm_tempb = _mm_loadu_si128( (__m128i *)(&(NSQ->sAR2_Q14[ 4 ]) ) );
#20 58.01                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.01 silk/x86/NSQ_sse4_1.c:442:30: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.01                 b_Q14_3210 = OP_CVTEPI16_EPI32_M64( b_Q14 );
#20 58.01                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.01 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 58.01  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 58.02                                      ^~~~~~~~~~~~~~
#20 58.02 silk/x86/NSQ_sse4_1.c:446:54: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.02                 pred_lag_ptr_0123 = _mm_loadu_si128( (__m128i *)(&pred_lag_ptr[ -3 ] ) );
#20 58.02                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.02 silk/x86/NSQ_sse4_1.c:598:23: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.03     _mm_storeu_si128( (__m128i *)(&NSQ->sAR2_Q14[ 4 ]), xmm_tempa );
#20 58.03                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.03 silk/x86/NSQ_sse4_1.c:599:23: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.03     _mm_storeu_si128( (__m128i *)(&NSQ->sAR2_Q14[ 0 ]), xmm_tempb );
#20 58.03                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.03 silk/x86/NSQ_sse4_1.c:615:48: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.03             xmm_xq_Q14_3210 = _mm_loadu_si128( (__m128i *)(&(psLPC_Q14[ i + 0 ] ) ) );
#20 58.03                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.03 silk/x86/NSQ_sse4_1.c:616:48: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.03             xmm_xq_Q14_7654 = _mm_loadu_si128( (__m128i *)(&(psLPC_Q14[ i + 4 ] ) ) );
#20 58.03                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.04 silk/x86/NSQ_sse4_1.c:647:31: warning: cast from 'opus_int16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.04             _mm_storeu_si128( (__m128i *)(&xq[ i ] ), xmm_xq_Q14_3210 );
#20 58.04                               ^~~~~~~~~~~~~~~~~~~~~~
#20 58.04 silk/x86/NSQ_sse4_1.c:688:24: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.04         xmm_x16_x2x0 = OP_CVTEPI16_EPI32_M64( &(x16[ i ] ) );
#20 58.04                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.04 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 58.04  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 58.04                                      ^~~~~~~~~~~~~~
#20 58.04 silk/x86/NSQ_sse4_1.c:701:27: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.04         _mm_storeu_si128( (__m128i *)(&(x_sc_Q10[ i ] ) ), xmm_x16_x2x0 );
#20 58.04                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.05 silk/x86/NSQ_sse4_1.c:732:54: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.05             xmm_sLTP_shp_Q14_x2x0 = _mm_loadu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ) );
#20 58.05                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.05 silk/x86/NSQ_sse4_1.c:744:31: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.05             _mm_storeu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ), xmm_sLTP_shp_Q14_x2x0 );
#20 58.05                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.08 silk/x86/NSQ_del_dec_sse4_1.c:408:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.08     a_Q12_0123 = OP_CVTEPI16_EPI32_M64( a_Q12 );
#20 58.08                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.08 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 58.08  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 58.08                                      ^~~~~~~~~~~~~~
#20 58.08 silk/x86/NSQ_del_dec_sse4_1.c:409:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.08     a_Q12_4567 = OP_CVTEPI16_EPI32_M64( a_Q12 + 4 );
#20 58.08                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.08 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 58.08  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 58.08                                      ^~~~~~~~~~~~~~
#20 58.08 silk/x86/NSQ_del_dec_sse4_1.c:412:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.08         a_Q12_89AB = OP_CVTEPI16_EPI32_M64( a_Q12 + 8 );
#20 58.08                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.08 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 58.08  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 58.08                                      ^~~~~~~~~~~~~~
#20 58.08 silk/x86/NSQ_del_dec_sse4_1.c:413:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.08         a_Q12_CDEF = OP_CVTEPI16_EPI32_M64( a_Q12 + 12 );
#20 58.08                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.08 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 58.08  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 58.08                                      ^~~~~~~~~~~~~~
#20 58.08 silk/x86/NSQ_del_dec_sse4_1.c:417:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.08         b_Q12_0123 = OP_CVTEPI16_EPI32_M64( b_Q14 );
#20 58.08                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.08 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 58.08  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 58.08                                      ^~~~~~~~~~~~~~
#20 58.09 silk/x86/NSQ_del_dec_sse4_1.c:430:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.09                 pred_lag_ptr_tmp    = _mm_loadu_si128( (__m128i *)(&pred_lag_ptr[ -3 ] ) );
#20 58.09                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.09 silk/x86/NSQ_del_dec_sse4_1.c:485:52: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.09                 psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -3 ] ) ); /* -3, -2 , -1, 0 */
#20 58.09                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.09 silk/x86/NSQ_del_dec_sse4_1.c:499:52: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.09                 psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -7 ] ) );
#20 58.09                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.09 silk/x86/NSQ_del_dec_sse4_1.c:514:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.09                     psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -11 ] ) );
#20 58.09                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.10 silk/x86/NSQ_del_dec_sse4_1.c:527:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.10                     psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -15 ] ) );
#20 58.10                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.11 silk/x86/NSQ_del_dec_sse4_1.c:819:24: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.11         xmm_x16_x2x0 = OP_CVTEPI16_EPI32_M64( &(x16[ i ] ) );
#20 58.11                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.11 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 58.11  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 58.11                                      ^~~~~~~~~~~~~~
#20 58.11 silk/x86/NSQ_del_dec_sse4_1.c:832:27: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.12         _mm_storeu_si128( (__m128i *)(&(x_sc_Q10[ i ] ) ), xmm_x16_x2x0 );
#20 58.12                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.12 silk/x86/NSQ_del_dec_sse4_1.c:864:58: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.12                 xmm_sLTP_shp_Q14_x2x0 = _mm_loadu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ) );
#20 58.12                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.12 silk/x86/NSQ_del_dec_sse4_1.c:876:35: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.12                 _mm_storeu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ), xmm_sLTP_shp_Q14_x2x0 );
#20 58.12                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.13   CC       silk/fixed/x86/burg_modified_FIX_sse4_1.lo
#20 58.16 silk/x86/VAD_sse4_1.c:147:44: warning: cast from 'opus_int16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.16                 xmm_X   = _mm_loadu_si128( (__m128i *)&(X[ X_offset[ b ] + i + dec_subframe_offset ] ) );
#20 58.16                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.17   CCLD     celt/tests/test_unit_cwrs32
#20 58.19 silk/x86/VQ_WMat_EC_sse4_1.c:68:36: warning: cast from 'const opus_int32 *' (aka 'const int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.19     v_XX_31_Q17 = _mm_loadu_si128( (__m128i *)(&XX_Q17[ 1 ] ) );
#20 58.19                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.19 silk/x86/VQ_WMat_EC_sse4_1.c:88:26: warning: cast from 'const opus_int8 *' (aka 'const signed char *') to 'int *' increases required alignment from 1 to 4 [-Wcast-align]
#20 58.19         v_cb_row_31_Q7 = OP_CVTEPI8_EPI32_M32( &cb_row_Q7[ 1 ] );
#20 58.19                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.19 ./celt/x86/x86cpu.h:60:40: note: expanded from macro 'OP_CVTEPI8_EPI32_M32'
#20 58.19  (_mm_cvtepi8_epi32(_mm_cvtsi32_si128(*(int *)(x))))
#20 58.19                                        ^~~~~~~~~~
#20 58.26 2 warnings generated.
#20 58.27 silk/fixed/x86/vector_ops_FIX_sse4_1.c:60:23: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.27         inVec1_3210 = OP_CVTEPI16_EPI32_M64( &inVec1[i + 0] );
#20 58.27                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.27 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 58.27  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 58.27                                      ^~~~~~~~~~~~~~
#20 58.27 silk/fixed/x86/vector_ops_FIX_sse4_1.c:61:23: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.27         inVec2_3210 = OP_CVTEPI16_EPI32_M64( &inVec2[i + 0] );
#20 58.27                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.27 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 58.27  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 58.27                                      ^~~~~~~~~~~~~~
#20 58.27 silk/fixed/x86/vector_ops_FIX_sse4_1.c:78:23: warning: cast from 'opus_int64 *' (aka 'long *') to '__m128i *' increases required alignment from 8 to 16 [-Wcast-align]
#20 58.27     _mm_storel_epi64( (__m128i *)&sum, acc1 );
#20 58.27                       ^~~~~~~~~~~~~~~
#20 58.29   CCLD     celt/tests/test_unit_dft
#20 58.32 3 warnings generated.
#20 58.34   CCLD     celt/tests/test_unit_entropy
#20 58.48 silk/fixed/x86/burg_modified_FIX_sse4_1.c:163:34: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.48                     PTR_3210   = OP_CVTEPI16_EPI32_M64( &x_ptr[ n - k - 1 - 3 ] );
#20 58.48                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.48 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 58.48  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 58.48                                      ^~~~~~~~~~~~~~
#20 58.48 silk/fixed/x86/burg_modified_FIX_sse4_1.c:164:34: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.48                     SUBFR_3210 = OP_CVTEPI16_EPI32_M64( &x_ptr[ subfr_length - n + k ] );
#20 58.48                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.48 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 58.48  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 58.48                                      ^~~~~~~~~~~~~~
#20 58.48 silk/fixed/x86/burg_modified_FIX_sse4_1.c:165:51: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.48                     FIRST_3210 = _mm_loadu_si128( (__m128i *)&C_first_row[ k ] );
#20 58.48                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.48 silk/fixed/x86/burg_modified_FIX_sse4_1.c:167:51: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.48                     LAST_3210  = _mm_loadu_si128( (__m128i *)&C_last_row[ k ] );
#20 58.48                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.48 silk/fixed/x86/burg_modified_FIX_sse4_1.c:168:51: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.48                     ATMP_3210  = _mm_loadu_si128( (__m128i *)&Af_QA[ k ] );
#20 58.48                                                   ^~~~~~~~~~~~~~~~~~~~~~
#20 58.48 silk/fixed/x86/burg_modified_FIX_sse4_1.c:183:39: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.48                     _mm_storeu_si128( (__m128i *)&C_first_row[ k ], FIRST_3210 );
#20 58.49                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.49 silk/fixed/x86/burg_modified_FIX_sse4_1.c:184:39: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.49                     _mm_storeu_si128( (__m128i *)&C_last_row[ k ], LAST_3210 );
#20 58.49                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.49 silk/fixed/x86/burg_modified_FIX_sse4_1.c:221:46: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.49                         xmm_x_ptr_n_k_x2x0 = OP_CVTEPI16_EPI32_M64( &x_ptr[ n - k - 3 ] );
#20 58.49                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.49 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 58.49  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 58.49                                      ^~~~~~~~~~~~~~
#20 58.49 silk/fixed/x86/burg_modified_FIX_sse4_1.c:222:46: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 58.49                         xmm_x_ptr_sub_x2x0 = OP_CVTEPI16_EPI32_M64( &x_ptr[ subfr_length - n + k - 1 ] );
#20 58.49                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 58.49 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 58.49  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 58.49                                      ^~~~~~~~~~~~~~
#20 58.49 silk/fixed/x86/burg_modified_FIX_sse4_1.c:246:53: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.49                         X1_3210  = _mm_loadu_si128( (__m128i *)&CAf[ k ] );
#20 58.49                                                     ^~~~~~~~~~~~~~~~~~~~
#20 58.49 silk/fixed/x86/burg_modified_FIX_sse4_1.c:247:53: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.49                         PTR_3210 = _mm_loadu_si128( (__m128i *)&CAb[ k ] );
#20 58.49                                                     ^~~~~~~~~~~~~~~~~~~~
#20 58.49 silk/fixed/x86/burg_modified_FIX_sse4_1.c:252:43: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.49                         _mm_storeu_si128( (__m128i *)&CAf[ k ], X1_3210 );
#20 58.49                                           ^~~~~~~~~~~~~~~~~~~~
#20 58.49 silk/fixed/x86/burg_modified_FIX_sse4_1.c:253:43: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 58.49                         _mm_storeu_si128( (__m128i *)&CAb[ k ], PTR_3210 );
#20 58.49                                           ^~~~~~~~~~~~~~~~~~~~
#20 58.59   CCLD     celt/tests/test_unit_laplace
#20 58.61 1 warning generated.
#20 58.63   CCLD     celt/tests/test_unit_mathops
#20 58.63   CCLD     celt/tests/test_unit_mdct
#20 58.71 20 warnings generated.
#20 58.73   CCLD     celt/tests/test_unit_rotation
#20 58.75   CCLD     celt/tests/test_unit_types
#20 58.96 14 warnings generated.
#20 59.12 13 warnings generated.
#20 59.14   CCLD     libopus.la
#20 59.14   CCLD     silk/tests/test_unit_LPC_inv_pred_gain
#20 59.14   CCLD     tests/test_opus_projection
#20 59.58   CCLD     opus_demo
#20 59.58   CCLD     repacketizer_demo
#20 59.58   CCLD     tests/test_opus_api
#20 59.58   CCLD     tests/test_opus_decode
#20 59.58   CCLD     tests/test_opus_encode
#20 59.58   CCLD     tests/test_opus_padding
#20 59.72   CCLD     trivial_example
#20 60.13 make[2]: Leaving directory '/src/opus'
#20 60.13 make[1]: Leaving directory '/src/opus'
#20 60.14 + for fuzzer in $FUZZERS
#20 60.14 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -Iinclude tests/opus_decode_fuzzer.c -o opus_decode_fuzzer.o
#20 60.20 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard opus_decode_fuzzer.o -o /out/opus_decode_fuzzer_fixed /libAFL.a .libs/libopus.a
#20 60.46 + '[' -f tests/opus_decode_fuzzer.options ']'
#20 60.46 + cp tests/opus_decode_fuzzer.options /out/opus_decode_fuzzer_fixed.options
#20 60.46 + zip -r /out/opus_decode_fuzzer_fixed_seed_corpus.zip opus_testvectors/
#20 60.47   adding: opus_testvectors/ (stored 0%)
#20 60.47   adding: opus_testvectors/testvector03.bit (deflated 2%)
#20 60.47   adding: opus_testvectors/testvector01.bit (deflated 15%)
#20 60.51   adding: opus_testvectors/testvector07.bit (deflated 4%)
#20 60.52   adding: opus_testvectors/testvector02.bit (deflated 3%)
#20 60.53   adding: opus_testvectors/testvector12.bit (deflated 4%)
#20 60.53   adding: opus_testvectors/testvector03.dec (deflated 48%)
#20 60.78   adding: opus_testvectors/testvector06.dec (deflated 45%)
#20 61.09   adding: opus_testvectors/testvector11.dec (deflated 7%)
#20 61.37   adding: opus_testvectors/testvector11.bit (deflated 0%)
#20 61.38   adding: opus_testvectors/testvector06.bit (deflated 3%)
#20 61.39   adding: opus_testvectors/testvector08.dec (deflated 38%)
#20 61.72   adding: opus_testvectors/testvector02.dec (deflated 50%)
#20 61.99   adding: opus_testvectors/testvector01.dec (deflated 29%)
#20 62.41   adding: opus_testvectors/testvector05.bit (deflated 3%)
#20 62.42   adding: opus_testvectors/testvector08.bit (deflated 1%)
#20 62.43   adding: opus_testvectors/testvector09.bit (deflated 11%)
#20 62.46   adding: opus_testvectors/testvector10.dec (deflated 49%)
#20 62.76   adding: opus_testvectors/testvector07.dec (deflated 44%)
#20 63.02   adding: opus_testvectors/testvector04.dec (deflated 49%)
#20 63.33   adding: opus_testvectors/testvector09.dec (deflated 43%)
#20 63.66   adding: opus_testvectors/testvector05.dec (deflated 47%)
#20 64.00   adding: opus_testvectors/testvector12.dec (deflated 61%)
#20 64.30   adding: opus_testvectors/testvector10.bit (deflated 9%)
#20 64.33   adding: opus_testvectors/testvector04.bit (deflated 3%)
#20 64.34 + for fuzzer in $FUZZERS
#20 64.34 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -Iinclude tests/opus_multi_fuzzer.c -o opus_multi_fuzzer.o
#20 64.41 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard opus_multi_fuzzer.o -o /out/opus_multi_fuzzer_fixed /libAFL.a .libs/libopus.a
#20 64.68 + '[' -f tests/opus_multi_fuzzer.options ']'
#20 64.68 + zip -r /out/opus_multi_fuzzer_fixed_seed_corpus.zip opus_testvectors/
#20 64.68   adding: opus_testvectors/ (stored 0%)
#20 64.68   adding: opus_testvectors/testvector03.bit (deflated 2%)
#20 64.69   adding: opus_testvectors/testvector01.bit (deflated 15%)
#20 64.72   adding: opus_testvectors/testvector07.bit (deflated 4%)
#20 64.73   adding: opus_testvectors/testvector02.bit (deflated 3%)
#20 64.73   adding: opus_testvectors/testvector12.bit (deflated 4%)
#20 64.74   adding: opus_testvectors/testvector03.dec (deflated 48%)
#20 64.99   adding: opus_testvectors/testvector06.dec (deflated 45%)
#20 65.31   adding: opus_testvectors/testvector11.dec (deflated 7%)
#20 65.60   adding: opus_testvectors/testvector11.bit (deflated 0%)
#20 65.62   adding: opus_testvectors/testvector06.bit (deflated 3%)
#20 65.63   adding: opus_testvectors/testvector08.dec (deflated 38%)
#20 65.96   adding: opus_testvectors/testvector02.dec (deflated 50%)
#20 66.25   adding: opus_testvectors/testvector01.dec (deflated 29%)
#20 66.67   adding: opus_testvectors/testvector05.bit (deflated 3%)
#20 66.67   adding: opus_testvectors/testvector08.bit (deflated 1%)
#20 66.68   adding: opus_testvectors/testvector09.bit (deflated 11%)
#20 66.72   adding: opus_testvectors/testvector10.dec (deflated 49%)
#20 67.04   adding: opus_testvectors/testvector07.dec (deflated 44%)
#20 67.30   adding: opus_testvectors/testvector04.dec (deflated 49%)
#20 67.62   adding: opus_testvectors/testvector09.dec (deflated 43%)
#20 67.96   adding: opus_testvectors/testvector05.dec (deflated 47%)
#20 68.30   adding: opus_testvectors/testvector12.dec (deflated 61%)
#20 68.61   adding: opus_testvectors/testvector10.bit (deflated 9%)
#20 68.65   adding: opus_testvectors/testvector04.bit (deflated 3%)
#20 68.65 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 69.3s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:5f27455dba3a11cd03a60f8d413dd19d88de91a35e6df6723035e6ea894cb9fc done
#21 naming to gcr.io/fuzzbench/builders/afl/opus_opus_multistream_decode_fuzzer done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus_multistream_decode_fuzzer:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:edcc3253959e6f5a1443a762cfef70391350ccc2087d04ec1207f1f32787a05b
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:fd2c8b335c2ffa9ff63aa258c8c8978c80655532cfa7deac149df1e261d44fad
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus_multistream_decode_fuzzer-intermediate
#4 sha256:046fc852f074c0baa4d01d23159a1c00febf622a75706cb8872f3efc8dc90268
#4 ERROR: gcr.io/fuzzbench/runners/afl/opus_opus_multistream_decode_fuzzer-intermediate:latest: not found

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:a75bb0b8a3d6ff10c4e4f0b01262d9c6b8d28fb7a48062d52ee04e8302c3dcb7 done
#6 naming to gcr.io/fuzzbench/runners/afl/opus_opus_multistream_decode_fuzzer-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus_multistream_decode_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:1f21f1fd33dc9403baf5ab34b5705a444aa75ccda4ea506abd83e12db373304e
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:63d90d3f1d038a9302217a735b1630caa408c30d603834d7d1f140c6d5c923ab
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/opus_opus_multistream_decode_fuzzer-intermediate:latest
#3 sha256:31d8753be08965699b40edbc45a64794f500df903bb98f9b9a01f3ba095fed57
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/opus_opus_multistream_decode_fuzzer:latest
#4 sha256:4822ea2c64b94274160e1711fdf8378e19ca9f42a1c3b9e91a088d9e0add2b19
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:1d431b6494033deb6df4123a36173eaed576038dd9caafe9cf54053109dc19eb
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/opus_opus_multistream_decode_fuzzer-intermediate
#6 sha256:b0d1d3bc905c6c9b5abc081a4425e955aa783e6c738ebcdf3d17e9c5aa0ebbbf
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/opus_opus_multistream_decode_fuzzer
#10 sha256:d92f90efe89b07f86e86475dce0943cfec3718dcd8312fba6721672a252103f6
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus_multistream_decode_fuzzer
#5 sha256:94584f57cdf345bd0067076a5add061e70484544f346c1ee01039330b3e3890a
#5 ERROR: gcr.io/fuzzbench/runners/afl/opus_opus_multistream_decode_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:1d431b6494033deb6df4123a36173eaed576038dd9caafe9cf54053109dc19eb
#12 transferring context: 9.05MB 0.2s done
#12 DONE 0.2s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/opus_opus_multistream_decode_fuzzer
#10 sha256:d92f90efe89b07f86e86475dce0943cfec3718dcd8312fba6721672a252103f6
#10 DONE 0.4s

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:d895970b97b8afcf234d26ed0e1e62d9750139b2ae581e4b8baa7a4533d3dc63
#8 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:3b20628dcabb84e42dfb57c3bbc735365f4bc5aaf200005dea5d4d74309b0474
#7 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:a75992f898f48c6ec0de3acd2a28ecfcba254299c542b69a3a72c40500b7c671
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:4ca96d3602b9954e9cbf14e362e9045458e6ea055b4840ff3d9bf049eb944ddb
#11 DONE 0.9s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:69cd82fb9f9f12aa1a108a6aebd162a3d8bd5a218dd92a6b717b5acffcde12ec
#13 DONE 0.5s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:437bb81b1465a09c929af160a218b12a38685ce0c2c1eb70011c83f30846cb88
#14 DONE 0.5s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:001b00f030e681176c43848dcbb8730c7bb04bd4e9c2e054c35e682820cd152c
#15 DONE 0.8s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:bba34a5530fae8561a8e2bcd0b7df799d7a76125e20780ea46b6e6de0afc891d
#16 DONE 0.8s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:b9469a6e34f40cd08245500a275750b6929269d9eb2d50e2c61a4ee9c7a77d29
#17 DONE 0.4s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:3570b64bf19cd178ddc03b79c101ebd180b2f58e973dc4b50cce059a68296d9e
#18 DONE 0.4s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:24f67f3b8b64a047b6ad2fe2c6eef822f466a18b1597aec68690851d3e9105c3
#19 DONE 0.3s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:db32ff602ee13b57eba2fc1f577ddbb925fca67e5f85ca9a0fb9d8976bc0b384
#20 DONE 0.5s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:8ef769309554775b29520dd4c9dfd025d8b34c0668b39de755dd7d42e53062ed
#21 writing image sha256:8ef769309554775b29520dd4c9dfd025d8b34c0668b39de755dd7d42e53062ed done
#21 naming to gcr.io/fuzzbench/runners/afl/opus_opus_multistream_decode_fuzzer 0.0s done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus_multistream_decode_fuzzer:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7fd91686b790> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
