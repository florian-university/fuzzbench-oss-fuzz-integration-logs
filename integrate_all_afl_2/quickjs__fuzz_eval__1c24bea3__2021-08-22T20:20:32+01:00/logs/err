WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: quickjs_fuzz_eval.
INFO:root:Please run "make test-run-afl-quickjs_fuzz_eval" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:10a3ad460ba43f753139bf1aac194f724d902aeba7df8a0ce00009dc3f075cd8
#1 transferring dockerfile: 911B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:3d13beba83a95deafa03de3b35d83073f1bb09be35491d87afbe11188208761c
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#9 [internal] load build context
#9 sha256:7ee3366ab7d44fa61722a714bc20dbfb04572eba57c647b3c051704756799e33
#9 DONE 0.0s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#5 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/quickjs_fuzz_eval
#4 sha256:89dbfc78524fc845ddb46719cc57ada53171b00f154abbc91725c5f84c8be9d3
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/quickjs_fuzz_eval:latest: not found

#6 [2/6] RUN apt-get update && apt-get install -y make
#6 sha256:3f1d6a55af806298c1b6951fbf76321c67d198023e00277385a4beaf410c5a65
#6 CACHED

#9 [internal] load build context
#9 sha256:7ee3366ab7d44fa61722a714bc20dbfb04572eba57c647b3c051704756799e33
#9 transferring context: 9.12kB done
#9 DONE 0.0s

#7 [3/6] RUN git clone --depth 1 https://github.com/bellard/quickjs quickjs
#7 sha256:88f522f90b013723f70505f5d4af897031e44471578be124b8e62b59bc4da1d6
#7 0.350 Cloning into 'quickjs'...
#7 DONE 1.5s

#8 [4/6] WORKDIR /src/quickjs
#8 sha256:0c860717a535c3fde7bffa2b570d947629620ad5c570141874dc89e015b24be9
#8 DONE 0.1s

#10 [5/6] COPY build.sh /src/
#10 sha256:72c1b5c9f2f4164283b8285791bd9f36927503d41ce44478d7bee006e4194640
#10 DONE 0.1s

#11 [6/6] COPY fuzz*.c /src/
#11 sha256:922064af07ea7881386cbc0fd3261095420574502a31f3b33246a5aa851bcb6f
#11 DONE 0.1s

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:764346d30ee93e94bf52c138c34e30bc01760fa88ce2c98f3b78663eedcce204 done
#12 naming to gcr.io/fuzzbench/builders/benchmark/quickjs_fuzz_eval done
#12 DONE 0.1s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/quickjs_fuzz_eval:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:7fda5ef96b05eb92b2a47379ca68a6f6a18f80e30f137ed57feeb3acaa801568
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:77d597b1403de60ea60ed1bcba4c446f96a3826679249367d3b45e5d611b5d50
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/quickjs_fuzz_eval:latest
#3 sha256:bf9e5e202570e27c305d3e5ef47d7d54620aba750732b74d660ca8f742500c21
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/quickjs_fuzz_eval-intermediate
#4 sha256:554fa03418cf9eef9eab400185d6b4dc00375cc68ab1f7aab51c13b88e92962c
#4 ...

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/quickjs_fuzz_eval
#5 sha256:a943249c0d7743aded2e03e120ca54d0b628bc100f79c91301f234ffc18e6056
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/quickjs_fuzz_eval-intermediate
#4 sha256:554fa03418cf9eef9eab400185d6b4dc00375cc68ab1f7aab51c13b88e92962c
#4 ERROR: gcr.io/fuzzbench/builders/afl/quickjs_fuzz_eval-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/quickjs_fuzz_eval
#5 sha256:a943249c0d7743aded2e03e120ca54d0b628bc100f79c91301f234ffc18e6056
#5 DONE 0.4s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:1e8e777faf6112bb4710a46546701b51236bd86c9e88bd4e332295e836bbd39f
#6 0.396 Cloning into '/afl'...
#6 1.094 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.094 
#6 1.094 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.094 changes and commit them, and you can discard any commits you make in this
#6 1.094 state without impacting any branches by switching back to a branch.
#6 1.094 
#6 1.094 If you want to create a new branch to retain commits you create, you may
#6 1.094 do so (now or later) by using -c with the switch command. Example:
#6 1.094 
#6 1.094   git switch -c <new-branch-name>
#6 1.094 
#6 1.094 Or undo this operation with:
#6 1.094 
#6 1.094   git switch -
#6 1.094 
#6 1.094 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.094 
#6 1.094 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.115 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.115 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.303 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.308 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.752 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.072 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.507 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.663 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.097 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.344 ln -sf afl-as as
#6 5.346 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.349 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.349 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 5.9s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:2dfa91498b386e67b7e93fb65b82e960e4b294bfa71cacdec62d68395f8c4c1c
#7 0.606 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.742 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.761 Hit:3 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 0.838 Hit:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.938 Hit:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 1.444 Reading package lists...
#7 3.116 Reading package lists...
#7 4.570 Building dependency tree...
#7 4.786 Reading state information...
#7 5.040 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.040 0 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.
#7 5.046 --2022-04-23 20:40:28--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.049 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.111.133, 185.199.108.133, 185.199.109.133, ...
#7 5.051 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.111.133|:443... connected.
#7 5.074 HTTP request sent, awaiting response... 200 OK
#7 5.258 Length: 9177 (9.0K) [text/plain]
#7 5.258 Saving to: '/afl/afl_driver.cpp'
#7 5.258 
#7 5.258      0K ........                                              100% 11.2M=0.001s
#7 5.258 
#7 5.259 2022-04-23 20:40:28 (11.2 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.259 
#7 6.973 ar: creating /libAFL.a
#7 DONE 7.1s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:032110ed81bc9370d8692d6c2697b88fa172fc83cb73127c62de037f13ef1df7
#8 writing image sha256:032110ed81bc9370d8692d6c2697b88fa172fc83cb73127c62de037f13ef1df7 done
#8 naming to gcr.io/fuzzbench/builders/afl/quickjs_fuzz_eval-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/quickjs_fuzz_eval-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:68354e8eefb4b73efa4518cc571df4cba8874b96495b96a3f6d7493c2f5e4d4e
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:48a7e1c6fd69059e5c9feec0a777150eade4f46e7380513701ec2974ed273a0e
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:a5f37a70e3a152754c7bd2f74c2dd0b0ee0a565a1b2049b27e522d63f5da1d20
#8 transferring context: 591B 0.0s done
#8 DONE 0.1s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:fca4367d5827a13dc6e48359c4e8cdd8eab54953f86d2000b362197128da1469
#11 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:53729d0865d741fc2acb2bef6e5f451ed15a703a72d14b8e17e3bc6df7027cb2
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:9b6a500dfc9287cdd17970924001bcdc6de08ac61d23a2736931db8677afdac0
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:6c0bcbe49d334bbd51e3cbff234c95de4b90a034f5894a20f2cd652df923cc15
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:06cefeb620ef0a12ea1bcad2e9d41606970bfe3e730adc09f2f646fe13a3a162 done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:f96e2768baa104b0b93e45f27ce2d820f484a669045bc795eb3471eaf3d1293b
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:85eecc1a4ee1e36df609a9c3c47f557d19638c7472f188e0c6fa5c74279cdcee
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/quickjs_fuzz_eval-intermediate:latest
#3 sha256:8b77a21d81f3500e96639797d4dcfd44ee43f8bff4096065eced5902d1762ce7
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:88aaa6ba2c727264e78348ab57aca2693b4b7c1b0604aaaaf16359e8351e90e1
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/quickjs_fuzz_eval-intermediate
#6 sha256:c6db197183d670db07df3821f0f5538c2b593ba2dbc21179b81b7f5120921e1e
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/quickjs_fuzz_eval
#5 sha256:64c5ca447e10913706168d1dc96e1aa843f84683240bf0ed7ddf1ebf75a50329
#5 ERROR: gcr.io/fuzzbench/builders/afl/quickjs_fuzz_eval:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:88aaa6ba2c727264e78348ab57aca2693b4b7c1b0604aaaaf16359e8351e90e1
#12 transferring context: 742.38kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/quickjs_fuzz_eval-intermediate
#6 sha256:c6db197183d670db07df3821f0f5538c2b593ba2dbc21179b81b7f5120921e1e
#6 DONE 0.2s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:c9579002501ac35947f92648def688b3e426315aa9e7960b9d77e26ca7f360db
#8 DONE 0.4s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:4118fbc965c4a98716c3c5aa6726508d44359d908e683718a6fac4255b79f27e
#9 DONE 16.7s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:0f5de414f522fc56f293e9996ab476ba48d809834ddc68817a04ccda2618d593
#10 DONE 0.2s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:25a6636f2070040fabe98b88525481eae4a3aeac76df368379f126197bbc6f01
#11 DONE 17.3s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:56475424a1388de852c0b589d99ab28468cc96c41289428016618e646c4bfea4
#13 DONE 0.2s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:236f0e310c19252266f8ef4a709f34253be68faf97696d01d66c8e7487657dec
#14 DONE 0.6s

#15 [stage-1  8/13] COPY benchmarks/quickjs_fuzz_eval/benchmark.yaml /
#15 sha256:7fe24e952d7a255bc1f0087c9a7abf91bd1d4968db1a58126e8701bc84fe0d6e
#15 DONE 0.1s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:20d33c74a0bbb4fe12100384a28a48f9a0e78af76d5cd601eb95deae46eec503
#16 DONE 0.9s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:10a941d6bece1d531f2881ccaefa589dbbf71b2a18d2bfa3f0e64efe78911f92
#17 DONE 0.3s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:58bbca55cb0a250774c527695a11e50830ebb07477ef93380e48bcb61cca6b29
#18 0.576 Checking out commit 1c24bea3
#18 2.046 error: pathspec '1c24bea3' did not match any file(s) known to git
#18 2.051 error: pathspec '1c24bea3' did not match any file(s) known to git
#18 2.058 error: pathspec '1c24bea3' did not match any file(s) known to git
#18 2.115 Checkout unsuccessful.
#18 DONE 2.4s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:82fedb19d4fd9b5edd42873d50f3a02a8cd9893f288369bdc561d9c19e8bb9b8
#19 DONE 0.9s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:ea6d061cb1dee7f4e047589abb3861d6ea54b3ad4e67df21857a527bd7465945
#20 0.527 Run fuzzer_build to build the target
#20 0.650 FUZZ_TARGET = fuzz_eval
#20 0.650 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.650 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.659 Building benchmark quickjs_fuzz_eval with fuzzer afl
#20 0.662 + sed -i -e s/CFLAGS=/CFLAGS+=/ Makefile
#20 0.665 + CONFIG_CLANG=y
#20 0.665 + make libquickjs.a
#20 0.671 mkdir -p .obj .obj/examples .obj/tests
#20 0.673 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -g -Wall -MMD -MF .obj/.d -Wextra -Wno-sign-compare -Wno-missing-field-initializers -Wundef -Wuninitialized -Wunused -Wno-unused-parameter -Wwrite-strings -Wchar-subscripts -funsigned-char -MMD -MF .obj/.d -D_GNU_SOURCE -DCONFIG_VERSION=\"2021-03-27\" -DCONFIG_BIGNUM -O2 -c -o .obj/quickjs.nolto.o quickjs.c
#20 1.065 quickjs.c:10741:30: warning: implicit conversion from 'long' to 'double' changes value from 9223372036854775807 to 9223372036854775808 [-Wimplicit-const-int-float-conversion]
#20 1.065                 else if (d > INT64_MAX)
#20 1.065                            ~ ^~~~~~~~~
#20 1.065 /usr/include/stdint.h:124:22: note: expanded from macro 'INT64_MAX'
#20 1.065 # define INT64_MAX              (__INT64_C(9223372036854775807))
#20 1.065                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 1.065 /usr/include/stdint.h:106:24: note: expanded from macro '__INT64_C'
#20 1.065 #  define __INT64_C(c)  c ## L
#20 1.065                         ^~~~~~
#20 1.065 <scratch space>:26:1: note: expanded from here
#20 1.065 9223372036854775807L
#20 1.065 ^~~~~~~~~~~~~~~~~~~~
#20 1.955 quickjs.c:53847:25: warning: implicit conversion from 'long' to 'double' changes value from 9223372036854775807 to 9223372036854775808 [-Wimplicit-const-int-float-conversion]
#20 1.955     if (isnan(d) || d > INT64_MAX)
#20 1.955                       ~ ^~~~~~~~~
#20 1.955 /usr/include/stdint.h:124:22: note: expanded from macro 'INT64_MAX'
#20 1.955 # define INT64_MAX              (__INT64_C(9223372036854775807))
#20 1.955                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 1.955 /usr/include/stdint.h:106:24: note: expanded from macro '__INT64_C'
#20 1.955 #  define __INT64_C(c)  c ## L
#20 1.955                         ^~~~~~
#20 1.955 <scratch space>:78:1: note: expanded from here
#20 1.955 9223372036854775807L
#20 1.955 ^~~~~~~~~~~~~~~~~~~~
#20 36.44 2 warnings generated.
#20 36.46 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -g -Wall -MMD -MF .obj/.d -Wextra -Wno-sign-compare -Wno-missing-field-initializers -Wundef -Wuninitialized -Wunused -Wno-unused-parameter -Wwrite-strings -Wchar-subscripts -funsigned-char -MMD -MF .obj/.d -D_GNU_SOURCE -DCONFIG_VERSION=\"2021-03-27\" -DCONFIG_BIGNUM -O2 -c -o .obj/libregexp.nolto.o libregexp.c
#20 38.01 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -g -Wall -MMD -MF .obj/.d -Wextra -Wno-sign-compare -Wno-missing-field-initializers -Wundef -Wuninitialized -Wunused -Wno-unused-parameter -Wwrite-strings -Wchar-subscripts -funsigned-char -MMD -MF .obj/.d -D_GNU_SOURCE -DCONFIG_VERSION=\"2021-03-27\" -DCONFIG_BIGNUM -O2 -c -o .obj/libunicode.nolto.o libunicode.c
#20 38.71 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -g -Wall -MMD -MF .obj/.d -Wextra -Wno-sign-compare -Wno-missing-field-initializers -Wundef -Wuninitialized -Wunused -Wno-unused-parameter -Wwrite-strings -Wchar-subscripts -funsigned-char -MMD -MF .obj/.d -D_GNU_SOURCE -DCONFIG_VERSION=\"2021-03-27\" -DCONFIG_BIGNUM -O2 -c -o .obj/cutils.nolto.o cutils.c
#20 39.04 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -g -Wall -MMD -MF .obj/.d -Wextra -Wno-sign-compare -Wno-missing-field-initializers -Wundef -Wuninitialized -Wunused -Wno-unused-parameter -Wwrite-strings -Wchar-subscripts -funsigned-char -MMD -MF .obj/.d -D_GNU_SOURCE -DCONFIG_VERSION=\"2021-03-27\" -DCONFIG_BIGNUM -O2 -c -o .obj/quickjs-libc.nolto.o quickjs-libc.c
#20 40.38 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -g -Wall -MMD -MF .obj/.d -Wextra -Wno-sign-compare -Wno-missing-field-initializers -Wundef -Wuninitialized -Wunused -Wno-unused-parameter -Wwrite-strings -Wchar-subscripts -funsigned-char -MMD -MF .obj/.d -D_GNU_SOURCE -DCONFIG_VERSION=\"2021-03-27\" -DCONFIG_BIGNUM -O2 -c -o .obj/libbf.nolto.o libbf.c
#20 45.39 llvm-ar rcs libquickjs.a .obj/quickjs.nolto.o .obj/libregexp.nolto.o .obj/libunicode.nolto.o .obj/cutils.nolto.o .obj/quickjs-libc.nolto.o .obj/libbf.nolto.o
#20 45.45 + zip -r /out/fuzz_eval_seed_corpus.zip tests/microbench.js tests/test_bignum.js tests/test_bjson.js tests/test_builtin.js tests/test_closure.js tests/test_language.js tests/test_loop.js tests/test_op_overloading.js tests/test_qjscalc.js tests/test_std.js tests/test_worker.js tests/test_worker_module.js
#20 45.45   adding: tests/microbench.js (deflated 78%)
#20 45.45   adding: tests/test_bignum.js (deflated 75%)
#20 45.45   adding: tests/test_bjson.js (deflated 70%)
#20 45.45   adding: tests/test_builtin.js (deflated 75%)
#20 45.46   adding: tests/test_closure.js (deflated 71%)
#20 45.46   adding: tests/test_language.js (deflated 75%)
#20 45.46   adding: tests/test_loop.js (deflated 79%)
#20 45.46   adding: tests/test_op_overloading.js (deflated 80%)
#20 45.46   adding: tests/test_qjscalc.js (deflated 63%)
#20 45.46   adding: tests/test_std.js (deflated 68%)
#20 45.46   adding: tests/test_worker.js (deflated 61%)
#20 45.46   adding: tests/test_worker_module.js (deflated 49%)
#20 45.46 + zip -r /out/fuzz_eval_seed_corpus.zip examples/fib_module.js examples/hello.js examples/hello_module.js examples/pi_bigdecimal.js examples/pi_bigfloat.js examples/pi_bigint.js examples/test_fib.js examples/test_point.js
#20 45.46   adding: examples/fib_module.js (deflated 39%)
#20 45.47   adding: examples/hello.js (stored 0%)
#20 45.47   adding: examples/hello_module.js (deflated 19%)
#20 45.48   adding: examples/pi_bigdecimal.js (deflated 58%)
#20 45.48   adding: examples/pi_bigfloat.js (deflated 57%)
#20 45.48   adding: examples/pi_bigint.js (deflated 59%)
#20 45.48   adding: examples/test_fib.js (deflated 21%)
#20 45.48   adding: examples/test_point.js (deflated 56%)
#20 45.49 + zip -r /out/fuzz_compile_seed_corpus.zip tests/microbench.js tests/test_bignum.js tests/test_bjson.js tests/test_builtin.js tests/test_closure.js tests/test_language.js tests/test_loop.js tests/test_op_overloading.js tests/test_qjscalc.js tests/test_std.js tests/test_worker.js tests/test_worker_module.js
#20 45.49   adding: tests/microbench.js (deflated 78%)
#20 45.49   adding: tests/test_bignum.js (deflated 75%)
#20 45.49   adding: tests/test_bjson.js (deflated 70%)
#20 45.49   adding: tests/test_builtin.js (deflated 75%)
#20 45.49   adding: tests/test_closure.js (deflated 71%)
#20 45.49   adding: tests/test_language.js (deflated 75%)
#20 45.49   adding: tests/test_loop.js (deflated 79%)
#20 45.49   adding: tests/test_op_overloading.js (deflated 80%)
#20 45.49   adding: tests/test_qjscalc.js (deflated 63%)
#20 45.49   adding: tests/test_std.js (deflated 68%)
#20 45.49   adding: tests/test_worker.js (deflated 61%)
#20 45.49   adding: tests/test_worker_module.js (deflated 49%)
#20 45.49 + zip -r /out/fuzz_compile_seed_corpus.zip examples/fib_module.js examples/hello.js examples/hello_module.js examples/pi_bigdecimal.js examples/pi_bigfloat.js examples/pi_bigint.js examples/test_fib.js examples/test_point.js
#20 45.50   adding: examples/fib_module.js (deflated 39%)
#20 45.50   adding: examples/hello.js (stored 0%)
#20 45.50   adding: examples/hello_module.js (deflated 19%)
#20 45.50   adding: examples/pi_bigdecimal.js (deflated 58%)
#20 45.50   adding: examples/pi_bigfloat.js (deflated 57%)
#20 45.50   adding: examples/pi_bigint.js (deflated 59%)
#20 45.50   adding: examples/test_fib.js (deflated 21%)
#20 45.50   adding: examples/test_point.js (deflated 56%)
#20 45.50 + cd ..
#20 45.50 + FUZZ_TARGETS='fuzz_eval fuzz_compile fuzz_regexp'
#20 45.50 + for f in $FUZZ_TARGETS
#20 45.50 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -Iquickjs -c fuzz_eval.c -o fuzz_eval.o
#20 45.57 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard fuzz_eval.o -o /out/fuzz_eval quickjs/libquickjs.a /libAFL.a
#20 45.94 + for f in $FUZZ_TARGETS
#20 45.94 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -Iquickjs -c fuzz_compile.c -o fuzz_compile.o
#20 46.02 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard fuzz_compile.o -o /out/fuzz_compile quickjs/libquickjs.a /libAFL.a
#20 46.39 + for f in $FUZZ_TARGETS
#20 46.39 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -Iquickjs -c fuzz_regexp.c -o fuzz_regexp.o
#20 46.46 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard fuzz_regexp.o -o /out/fuzz_regexp quickjs/libquickjs.a /libAFL.a
#20 46.81 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 49.0s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:57df582a780b9692e1d0d018a343246d464babd124ca2af3639a1a23e11ddba6 done
#21 naming to gcr.io/fuzzbench/builders/afl/quickjs_fuzz_eval done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/quickjs_fuzz_eval:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:e1762e527132e5e91c52869cfa935be815b78a51c0ceb2d773590c560b8a6bf6
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:60be3315d510b237578d928398d0788f00d6d91555aaa780a8ce805d585c2fac
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/quickjs_fuzz_eval-intermediate
#4 sha256:29d57f98739d11c4e93fee170d649c52463388a6398372d7f15a503cdfc233c4
#4 ERROR: gcr.io/fuzzbench/runners/afl/quickjs_fuzz_eval-intermediate:latest: not found

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:559804d64fdb09848e27ac6aa062a59b9bde70e4fee70f67b96f8abeb802c389 done
#6 naming to gcr.io/fuzzbench/runners/afl/quickjs_fuzz_eval-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/quickjs_fuzz_eval-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:7a9eb468fcdd72a05661605a6dbca18084a565c43735c97d303d9b31ae6cc25f
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:459120830347f47840ff095076a1f77b3b4e15654fdaecddaf2fe5f5754747c4
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/quickjs_fuzz_eval-intermediate:latest
#3 sha256:2c6885865f855fe817a81af4863fbed10b860b57511426c79b48dba5080fc904
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/quickjs_fuzz_eval:latest
#4 sha256:f87949b5a57b525d1d23ca0702b836c2b3d3bdebf4f0d280959a08ed3b5ff803
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:41ba38bcb843e840f44b2f81dea9627c74598b9ea3fe55078bc74be2a846abc4
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/quickjs_fuzz_eval-intermediate
#6 sha256:7c2bf97d72c6aa131218e754aa2e5f0cb8ef53e0c6b702e04439baa97fdec0ce
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/quickjs_fuzz_eval
#10 sha256:6729a2deae0f851053f7e5985c591a6f594dc5ac3d0c02477ae6f530c7b1e8f6
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/quickjs_fuzz_eval
#5 sha256:913af26dffca48c7c753238c16c5a36e67f8d5c08823fbc8960719297f870539
#5 ERROR: gcr.io/fuzzbench/runners/afl/quickjs_fuzz_eval:latest: not found

#12 [internal] load build context
#12 sha256:41ba38bcb843e840f44b2f81dea9627c74598b9ea3fe55078bc74be2a846abc4
#12 transferring context: 9.03MB 0.2s done
#12 DONE 0.3s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/quickjs_fuzz_eval
#10 sha256:6729a2deae0f851053f7e5985c591a6f594dc5ac3d0c02477ae6f530c7b1e8f6
#10 DONE 0.8s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:d2a4f61c21f155898cdf1e3f8a7b5c02deb52d047960d706273d45e163959bd9
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:5ccc3ac7e04af99c661a039661eee90671b208f89e234ad811b84bc0b8c25cd8
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:8eae3321e86eadf5765d46e5fb04adb060ed28a1c01cd86e3fd85073bccdd606
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:20d9930245787089f600e07650b5d152736c4b5fd58b5b9c666dc30bd3bd79b9
#11 DONE 0.4s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:49b1fba5937b888654ff96d7802b5bd0ddfdfb528d11e0a5d66bc7bf27783af1
#13 DONE 0.4s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:6a0385c966e8dd0bdd0813f81776b94c4fb47e83cfe55d898b2a2369a9b74cd4
#14 DONE 0.6s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:955a077d67a8fdc46d1b77dbe1cc0442264df8dfb9915f3fc36534f00205df0b
#15 DONE 0.7s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:e96e7dbc7f26b490b41cdb440caf9c177efa0eac726a2e94df15dcbe097b2452
#16 DONE 1.0s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:aa5416ee6641ad9d5a4cff6034823bc4e416218a1490445bbf0c063e2ae67e96
#17 DONE 0.3s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:ba988ad39283538803620f919f1000b406fe9aa16e9c52547d03c974eb36fb5d
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:4f27e9dbcb06357c0b67a4dc2877300c2bf9caf2236832c6cd8c7749ce1aa63c
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:f0aaeed4b17e0ac3939cef7fa4ee25f41f5ec23a3b3101617a253611234be201
#20 DONE 0.5s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:e785cb47c61a858bebc6834746b70b31a133918b5b608893073a8aa40de4983b done
#21 naming to gcr.io/fuzzbench/runners/afl/quickjs_fuzz_eval done
#21 DONE 0.0s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/quickjs_fuzz_eval:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Unarchived 20 files from seed corpus /out/fuzz_eval_seed_corpus.zip.
ERROR:root:Executed command: "nice -n 5 python3 -u -c from fuzzers.afl import fuzzer; fuzzer.fuzz('/out/seeds', '/out/corpus', '/out/fuzz_eval')" returned: 1.
ERROR:root:Fuzz process returned nonzero. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 209, in run_fuzzer\n    new_process.execute(command,\n  File "/src/common/new_process.py", line 124, in execute\n    raise subprocess.CalledProcessError(retcode, command)\nsubprocess.CalledProcessError: Command \'[\'nice\', \'-n\', \'5\', \'python3\', \'-u\', \'-c\', "from fuzzers.afl import fuzzer; fuzzer.fuzz(\'/out/seeds\', \'/out/corpus\', \'/out/fuzz_eval\')"]\' returned non-zero exit status 1.\n'}
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f1ff0af71f0> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
make: *** [docker/generated.mk:282364: test-run-afl-quickjs_fuzz_eval] Error 1
