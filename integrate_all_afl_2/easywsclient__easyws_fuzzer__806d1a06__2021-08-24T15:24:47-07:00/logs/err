WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: easywsclient_easyws_fuzzer.
INFO:root:Please run "make test-run-afl-easywsclient_easyws_fuzzer" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:947b93e391cd7f7bc625449834cce494f67bdfd2fb1cff966f1e9c5d31e766aa
#1 transferring dockerfile: 934B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:ec6e21d30dacde8867960c82e29c68d4433e97628058fb1ab02da4323d14ca92
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#9 [internal] load build context
#9 sha256:09e2f773d7f3a090e5f0b43756039dc5ffeafa234671e1b42110659ae4183f48
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#5 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/easywsclient_easyws_fuzzer
#4 sha256:b62cfd012d2ce9be5b2a5b4f4121254bdf0b896ac8a8d27b667b87c11df90bc6
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/easywsclient_easyws_fuzzer:latest: not found

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#5 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#5 CACHED

#9 [internal] load build context
#9 sha256:09e2f773d7f3a090e5f0b43756039dc5ffeafa234671e1b42110659ae4183f48
#9 transferring context: 1.85kB done
#9 DONE 0.1s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:425dc7a252565eeea60f3de4c59c779438ad25f6692cfd7941a8ec9fc7a73f78
#6 0.586 Get:1 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#6 0.636 Hit:2 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 0.731 Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease
#6 0.827 Get:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#6 0.978 Get:5 http://security.ubuntu.com/ubuntu focal-security/restricted i386 Packages [26.7 kB]
#6 1.017 Get:6 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1771 kB]
#6 1.172 Get:7 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [526 kB]
#6 1.211 Get:8 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [679 kB]
#6 1.261 Get:9 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [870 kB]
#6 1.299 Get:10 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#6 1.330 Get:11 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [1139 kB]
#6 1.458 Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [791 kB]
#6 1.747 Get:13 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [839 kB]
#6 1.839 Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted i386 Packages [29.5 kB]
#6 1.841 Get:15 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [2185 kB]
#6 2.008 Get:16 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1153 kB]
#6 2.093 Get:17 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [1214 kB]
#6 2.184 Get:18 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [26.0 kB]
#6 2.186 Get:19 http://archive.ubuntu.com/ubuntu focal-backports/universe i386 Packages [14.4 kB]
#6 2.436 Fetched 11.6 MB in 2s (6240 kB/s)
#6 2.436 Reading package lists...
#6 3.969 Reading package lists...
#6 5.419 Building dependency tree...
#6 5.634 Reading state information...
#6 5.852 make is already the newest version (4.2.1-1.2).
#6 5.852 make set to manually installed.
#6 5.852 The following additional packages will be installed:
#6 5.853   autotools-dev libltdl-dev libltdl7 libsigsegv2 m4
#6 5.855 Suggested packages:
#6 5.855   autoconf-archive gnu-standards autoconf-doc gettext libtool-doc gfortran
#6 5.855   | fortran95-compiler gcj-jdk m4-doc
#6 5.900 The following NEW packages will be installed:
#6 5.902   autoconf automake autotools-dev libltdl-dev libltdl7 libsigsegv2 libtool m4
#6 6.122 0 upgraded, 8 newly installed, 0 to remove and 2 not upgraded.
#6 6.122 Need to get 1457 kB of archives.
#6 6.122 After this operation, 6651 kB of additional disk space will be used.
#6 6.122 Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 libsigsegv2 amd64 2.12-2 [13.9 kB]
#6 6.220 Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 m4 amd64 1.4.18-4 [199 kB]
#6 6.513 Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 autoconf all 2.69-11.1 [321 kB]
#6 6.637 Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 autotools-dev all 20180224.1 [39.6 kB]
#6 6.645 Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 automake all 1:1.16.1-4ubuntu6 [522 kB]
#6 6.736 Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl7 amd64 2.4.6-14 [38.5 kB]
#6 6.740 Get:7 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl-dev amd64 2.4.6-14 [162 kB]
#6 6.757 Get:8 http://archive.ubuntu.com/ubuntu focal/main amd64 libtool all 2.4.6-14 [161 kB]
#6 7.003 debconf: delaying package configuration, since apt-utils is not installed
#6 7.071 Fetched 1457 kB in 1s (1695 kB/s)
#6 7.127 Selecting previously unselected package libsigsegv2:amd64.
#6 7.127 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21308 files and directories currently installed.)
#6 7.148 Preparing to unpack .../0-libsigsegv2_2.12-2_amd64.deb ...
#6 7.170 Unpacking libsigsegv2:amd64 (2.12-2) ...
#6 7.231 Selecting previously unselected package m4.
#6 7.234 Preparing to unpack .../1-m4_1.4.18-4_amd64.deb ...
#6 7.240 Unpacking m4 (1.4.18-4) ...
#6 7.320 Selecting previously unselected package autoconf.
#6 7.323 Preparing to unpack .../2-autoconf_2.69-11.1_all.deb ...
#6 7.327 Unpacking autoconf (2.69-11.1) ...
#6 7.449 Selecting previously unselected package autotools-dev.
#6 7.452 Preparing to unpack .../3-autotools-dev_20180224.1_all.deb ...
#6 7.460 Unpacking autotools-dev (20180224.1) ...
#6 7.573 Selecting previously unselected package automake.
#6 7.576 Preparing to unpack .../4-automake_1%3a1.16.1-4ubuntu6_all.deb ...
#6 7.584 Unpacking automake (1:1.16.1-4ubuntu6) ...
#6 7.732 Selecting previously unselected package libltdl7:amd64.
#6 7.735 Preparing to unpack .../5-libltdl7_2.4.6-14_amd64.deb ...
#6 7.744 Unpacking libltdl7:amd64 (2.4.6-14) ...
#6 7.817 Selecting previously unselected package libltdl-dev:amd64.
#6 7.820 Preparing to unpack .../6-libltdl-dev_2.4.6-14_amd64.deb ...
#6 7.828 Unpacking libltdl-dev:amd64 (2.4.6-14) ...
#6 7.915 Selecting previously unselected package libtool.
#6 7.919 Preparing to unpack .../7-libtool_2.4.6-14_all.deb ...
#6 7.934 Unpacking libtool (2.4.6-14) ...
#6 8.073 Setting up autotools-dev (20180224.1) ...
#6 8.120 Setting up libsigsegv2:amd64 (2.12-2) ...
#6 8.168 Setting up libltdl7:amd64 (2.4.6-14) ...
#6 8.223 Setting up libtool (2.4.6-14) ...
#6 8.275 Setting up m4 (1.4.18-4) ...
#6 8.330 Setting up autoconf (2.69-11.1) ...
#6 8.357 Setting up automake (1:1.16.1-4ubuntu6) ...
#6 8.371 update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
#6 8.371 update-alternatives: warning: skip creation of /usr/share/man/man1/automake.1.gz because associated file /usr/share/man/man1/automake-1.16.1.gz (of link group automake) doesn't exist
#6 8.371 update-alternatives: warning: skip creation of /usr/share/man/man1/aclocal.1.gz because associated file /usr/share/man/man1/aclocal-1.16.1.gz (of link group automake) doesn't exist
#6 8.379 Setting up libltdl-dev:amd64 (2.4.6-14) ...
#6 8.390 Processing triggers for libc-bin (2.31-0ubuntu9.7) ...
#6 DONE 8.7s

#7 [3/5] RUN git clone --depth 1 https://github.com/dhbaird/easywsclient easywsclient
#7 sha256:45811fe2d7098d712fd714f11b7d5217693070e540162f4d6577cf0415438957
#7 0.459 Cloning into 'easywsclient'...
#7 DONE 1.2s

#8 [4/5] WORKDIR easywsclient
#8 sha256:e7fc2ac062bca0d08b499da8f1f224746bea07ec3c48bd16d5ba73b993f36bda
#8 DONE 0.1s

#10 [5/5] COPY build.sh *.cpp /src/
#10 sha256:f44deb0ae54a160e27ab777714486b5b964152ab1463b3c2639d58f606a73a0a
#10 DONE 0.1s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:722fc058b98399491a45210e07968de5651786dd5f326293efd2f925a4276180 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/easywsclient_easyws_fuzzer done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/easywsclient_easyws_fuzzer:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:ed5d1dd6d27f3fec1e7842990182476bf545f44b156664ab5e5d8cde4b80be05
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:2f3c10984110f5767a5bd8d418a9b2db9baccf42b5930444f707c76a72297fab
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/easywsclient_easyws_fuzzer:latest
#3 sha256:7ed1bc231479c43fc9cb628bb3eb45c11924757ad30b18a5ae7a68b04091622e
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/easywsclient_easyws_fuzzer
#5 sha256:5f3dcc35b9b809b720ee10d7f242945ed3a1f2ebabaad2c8d5876ea452578db5
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer-intermediate
#4 sha256:38bc6ebf542e6fbeef3a663b7866f75bba602b20ecd943a404a722ccc1573200
#4 ERROR: gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/easywsclient_easyws_fuzzer
#5 sha256:5f3dcc35b9b809b720ee10d7f242945ed3a1f2ebabaad2c8d5876ea452578db5
#5 DONE 0.2s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:8c13a888989e057b53a38f27dce6ebf99005321521fe04b84a7d0549851f014e
#6 0.314 Cloning into '/afl'...
#6 0.994 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 0.994 
#6 0.994 You are in 'detached HEAD' state. You can look around, make experimental
#6 0.994 changes and commit them, and you can discard any commits you make in this
#6 0.994 state without impacting any branches by switching back to a branch.
#6 0.994 
#6 0.994 If you want to create a new branch to retain commits you create, you may
#6 0.994 do so (now or later) by using -c with the switch command. Example:
#6 0.994 
#6 0.994   git switch -c <new-branch-name>
#6 0.994 
#6 0.994 Or undo this operation with:
#6 0.994 
#6 0.994   git switch -
#6 0.994 
#6 0.994 Turn off this advice by setting config variable advice.detachedHead to false
#6 0.994 
#6 0.994 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.017 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.018 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.208 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.213 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.590 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 3.924 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.371 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.531 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 4.939 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.186 ln -sf afl-as as
#6 5.187 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.189 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.190 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 5.3s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:c44fa5cba6b3214768f45a25ab7561b015dc55c3e19be0d0c8ac379f3fa2bf40
#7 0.617 Hit:1 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 0.617 Hit:2 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.747 Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.843 Hit:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.939 Hit:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 1.471 Reading package lists...
#7 3.010 Reading package lists...
#7 4.484 Building dependency tree...
#7 4.703 Reading state information...
#7 4.961 wget is already the newest version (1.20.3-1ubuntu2).
#7 4.961 0 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.
#7 4.967 --2022-04-23 15:34:53--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 4.970 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.109.133, 185.199.108.133, 185.199.110.133, ...
#7 4.972 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.109.133|:443... connected.
#7 4.996 HTTP request sent, awaiting response... 200 OK
#7 5.015 Length: 9177 (9.0K) [text/plain]
#7 5.015 Saving to: '/afl/afl_driver.cpp'
#7 5.015 
#7 5.015      0K ........                                              100% 6.59M=0.001s
#7 5.016 
#7 5.016 2022-04-23 15:34:53 (6.59 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.016 
#7 6.721 ar: creating /libAFL.a
#7 DONE 6.8s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:4da832a95842ee8c9e8fd050b37f0bddd43032f731c83c43d39b035e05e69cc9 done
#8 naming to gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:4738b323e48ff43a8e948076084546040c8cfc3bc2e94c6af8f99101be7973a7
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:1ae9b27eb622dcb0685225c08aed6fad20ebcd93a66660334e40728e6db7022e
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:ec904d439f992e3f57be72b21bb53ceff06a1494b51b212718dae3c92784e5f3
#8 transferring context: 591B 0.0s done
#8 DONE 0.1s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:44aa67fbacf2eae63400f269a7752a186d77e1b8e283da487cf1f1dcb42e7bab
#11 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:75e550c3f416a370f79a9d2a502aaaa0041c3678cf258fb82494c523ebfc5ef7
#10 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:e55e1d05cab8cb996eb3985b82ce6e10e49d5753bd3a64f7fdaace3adc7c4554
#9 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:f07859a4b490f929bf38743a422c8a30a0316a2aab2c9afa34f357cde1a2f45b
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:dcdf917ef78ccd0654739c59f483e635ede83d9d5725ebf1cf71bebe3cfad474 done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:026c703f15f4c9b33167a21af9c22401bb94330f35969d9368eec678e50a7172
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:47516d32e816c2aa54de3beaff4b5d72520245a89c65e585598bc9abdda4b079
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer-intermediate:latest
#3 sha256:143c60c92e5d9e1c5de234501bec0fbb0d12883d4f3862af14964541f25dbb17
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:adc5ec8ed0ea077068304217847fbeecc8916844b3d53ebc1e7c4d5d934b443a
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer-intermediate
#6 sha256:ff827db7ed10be66272de60b7068365350d689c083511e02197be9ac3685f73e
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer
#5 sha256:cf2d2bae490a8bd7393ac4f15ba9b1e67526ec9a816b56a14163e7039f6b581d
#5 ERROR: gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:adc5ec8ed0ea077068304217847fbeecc8916844b3d53ebc1e7c4d5d934b443a
#12 transferring context: 742.41kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer-intermediate
#6 sha256:ff827db7ed10be66272de60b7068365350d689c083511e02197be9ac3685f73e
#6 DONE 0.2s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:22501b13b5e401942aa2508d988f5ece5dbadf5d631573ffa004873489b4f764
#8 DONE 0.4s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:fdcaf62f11171a7ce3b99079405a8be6770e7801c06bf5d48fbbc28d41defdcf
#9 DONE 14.2s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:a614e5c59265ea8845cd98a230c05b3aad914e190a9636ebe2b9f6efc43caad9
#10 DONE 0.5s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:fbe1eb37064f87ffcb126807031fdb635a5868c8824e5b64f55ec47cc05110af
#11 DONE 14.8s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:01e177ad6d0077617f1d76f2c6a020ef351e492a4795ee401cb3156fd74258e8
#13 DONE 0.2s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:7ba44fee4de92fd45ac0fd6adda44c9ad084466bb61c02d10ae3c91f8c4f8e1c
#14 DONE 1.0s

#15 [stage-1  8/13] COPY benchmarks/easywsclient_easyws_fuzzer/benchmark.yaml /
#15 sha256:0d37377be5beea2edcba1d03ee1210b2e8ae86dbef26bf514ca8612cda90d98c
#15 DONE 0.1s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:18535b48da072b407a4c3f6ca9aa008dcaaf1f3df0df8b71a85825d7ae1fbb86
#16 DONE 0.6s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:4ded7f5e89aadcd49587da4fa86a6f9f7a64b238f9e1537963502904cb59de4b
#17 DONE 0.2s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:04d8a03ec267f39d73d66e2a9d982edbe44e0a909e58cc53b335035b1c13e5d3
#18 0.690 Checking out commit 806d1a06
#18 1.542 error: pathspec '806d1a06' did not match any file(s) known to git
#18 1.572 error: pathspec '806d1a06' did not match any file(s) known to git
#18 1.581 error: pathspec '806d1a06' did not match any file(s) known to git
#18 1.638 Checkout unsuccessful.
#18 DONE 2.0s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:2eabbccee0817bdf128f88e62858b350f5d4dd2385067d725eb38a7b96b7e0cb
#19 DONE 1.5s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:af7ba512e8f24d44c5ef5cb3681bd35050d6d3eba7247ba2539d5eeff8ab7f3e
#20 0.580 Run fuzzer_build to build the target
#20 0.697 FUZZ_TARGET = easyws_fuzzer
#20 0.697 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.697 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.733 Building benchmark easywsclient_easyws_fuzzer with fuzzer afl
#20 0.737 ++ find /src -name '*_fuzzer.cpp'
#20 0.759 + for f in $(find $SRC -name '*_fuzzer.cpp')
#20 0.759 ++ basename -s .cpp /src/easyws_fuzzer.cpp
#20 0.760 + b=easyws_fuzzer
#20 0.760 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -g easywsclient.cpp -I. /src/easyws_fuzzer.cpp -o /out/easyws_fuzzer /libAFL.a
#20 4.155 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 9.3s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:d3e76279df4ba91754c88ddce68d094a85c076977da1768ac5a354676bd60311 done
#21 naming to gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:dbf0c05c7687b8ff9d8ad7b9d5756a4e1ea33ea299555625b2f1471e2230353b
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:2c957597dcc951c3708062e65a5287fd05e1a4324fcc88436a56a464fd278151
#2 transferring context: 2B done
#2 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer-intermediate
#5 sha256:79a66bc7441b9dcb3b39dd1e772b2a34ffb07f6102dd988c9e300236d122a410
#5 ERROR: gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer-intermediate:latest: not found

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3f7aa51dac32fbd604217d4910baf20707acd86a9059f840fbece7176fa38e4b 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer-intermediate 0.0s done
#6 DONE 0.8s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:87a6d1bd85689da3c79922ad6d94ea765486936b2cbef01f519a8d54e3b48b4e
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:4ef20139b229212f2aa532ce276e2a6f4a0c20248d8a97c76eee3c4e15725eef
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer-intermediate:latest
#3 sha256:da1dcbc6fc8cd12f84d06aa2f49da2e12e877d0c9361118e8865b818b3395489
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer:latest
#4 sha256:9bb1fb5acbb8641269b94a499d6ea3432ec8320b72f623f53fe4caa8ea2bfb33
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:e4c38bd9d519883d54217e03bc129a6450c3bd72954aef0832846e4572d3ef9b
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer-intermediate
#6 sha256:511e10928291dcaa68b4b199d2ea664303056340e4745802beaf5fd39591e347
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer
#10 sha256:c582c50547adee2c68596f1bc74a01288577450c96f4f13ff9e49d43a833a8bd
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer
#5 sha256:ae73779a6cee7918be92eb42c723fc58c25ef69b2b18d974a00ffd6ad1e43879
#5 ERROR: gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:e4c38bd9d519883d54217e03bc129a6450c3bd72954aef0832846e4572d3ef9b
#12 transferring context: 9.02MB 0.2s done
#12 DONE 0.4s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer
#10 sha256:c582c50547adee2c68596f1bc74a01288577450c96f4f13ff9e49d43a833a8bd
#10 DONE 1.7s

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:305a5e4836b160afeb236a482317a70e6971a10d957bcc3e53884187d33d9bd1
#8 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:4e78311b4099dd3af4a0b7af3654c6bd9d25c67ebfaae37d2a8767efa0f2d7a9
#7 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:7077dd499229edbe639fa305cd0599217ee69690482175f3bfa7c13844ea1f66
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:787dca3a618ef76afd3b834cb315e21116f92d44577e62f3cdecef9697509d30
#11 DONE 0.3s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:7a6fed2c8c0ba8ca88840e77c2bd940bdd1a45ec62f14aa12fb6ee4fded572e8
#13 DONE 0.4s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:c6cb1eaec5e6211d3b3d978390903361026fbbb8150c114f14072caf0f5bcaff
#14 DONE 0.3s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:2c1a3ff09f308d16e3ae6cfb1b2bb1427c2a750f202a83e33eafaa9d6b2002a2
#15 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:40981558709659aab6cdaac6201b68865b1db148ce9678ffdf71e0d54d3bc448
#16 DONE 1.0s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:f6fdfa376d20d1db5aadd85dda8a0261bef6ec2521866d68c5f44b33fc5c77eb
#17 DONE 0.3s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:af7b1562cc8d261f58f0f1c02e47ec04699558d01ae0621660ea423aff8f02b3
#18 DONE 0.2s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:2b5261943cdf0f7c456686c5545bd5fd58ec32b7f85bf2ded3235d74bd3fc3ba
#19 DONE 0.2s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:ea6b91d05a8e51008ad0d893fee12b4003d2e5468ab032c5d574dc682ddc88f2
#20 DONE 0.6s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:3cb7752dbed54a91e07c3561a2b23331e6f63befa0278ce68f96793854483ff4 done
#21 naming to gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Doing final sync.
