WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: libtsm_libtsm_fuzzer.
INFO:root:Please run "make test-run-afl-libtsm_libtsm_fuzzer" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:c8a5e61ac5752370d1d704eefbe2777a9db914a7b1de87010cd02f1f04afaf56
#1 transferring dockerfile: 941B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:a0cc07365c0731b3dc12558e20bb08c6da4db08d2ff43e3743e7991b7b71ad52
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#9 [internal] load build context
#9 sha256:3dbaa6b850d4f45a035a7ffe90b7311314659020112412b325db658c450e59dd
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#5 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libtsm_libtsm_fuzzer
#4 sha256:3e29c2d1963cd2ba3f70368e8041f23ef3b33303383097c6c7cfe0c02db71888
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/libtsm_libtsm_fuzzer:latest: not found

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool pkg-config
#6 sha256:a9f0a69260407c7cafc06b05a7c77d4af7b1876065e1f3dd2420409ba92b9096
#6 CACHED

#9 [internal] load build context
#9 sha256:3dbaa6b850d4f45a035a7ffe90b7311314659020112412b325db658c450e59dd
#9 transferring context: 2.49kB done
#9 DONE 0.0s

#7 [3/5] RUN git clone --depth 1 git://people.freedesktop.org/~dvdhrm/libtsm
#7 sha256:84a6758e420e78a5fb54267bd8a3b7d7d3f8c8045416bef9087845498c93fcda
#7 0.342 Cloning into 'libtsm'...
#7 DONE 3.9s

#8 [4/5] WORKDIR libtsm
#8 sha256:576d9970abbd616f725a0ea38185c45ff70e3b2f5231259101a26348b4f9fb05
#8 DONE 0.1s

#10 [5/5] COPY build.sh libtsm_fuzzer.c /src/
#10 sha256:5a837921e1c88e8f648aca7afaf5c084b03a0b2e207dfa3ff9429b2b5c8993a1
#10 DONE 0.1s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:d425c7e0d5b6206a79b8dccb3847faa2dae4b8444e73328b685477e48e2d34e2
#11 writing image sha256:d425c7e0d5b6206a79b8dccb3847faa2dae4b8444e73328b685477e48e2d34e2 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/libtsm_libtsm_fuzzer done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libtsm_libtsm_fuzzer:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:9f1a9ce4663176c900208781701cbe636ae510556e5314e6d167e993b17e5361
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:891eadb4328cbae1b41ec04a5945775410f741d017e18666bdcf15cb07b1ac2e
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/libtsm_libtsm_fuzzer:latest
#3 sha256:6f80b70b11bba136944088cd900231afb4181ee4144e8bbe80b08630cb6047f4
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libtsm_libtsm_fuzzer
#5 sha256:d206b8d3737b1007e773e7c178ccc381862592e6610d1072754f17dbb11b1dc3
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/libtsm_libtsm_fuzzer-intermediate
#4 sha256:71d2847cee287e1a35497d3c048c01e48713e71619ed52452f837f8309a77a72
#4 ERROR: gcr.io/fuzzbench/builders/afl/libtsm_libtsm_fuzzer-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libtsm_libtsm_fuzzer
#5 sha256:d206b8d3737b1007e773e7c178ccc381862592e6610d1072754f17dbb11b1dc3
#5 DONE 0.4s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:8e5ea2d58a744e6da16185862e6783f30b3b7d7b3c63d990e5a89d926e488820
#6 0.393 Cloning into '/afl'...
#6 1.626 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.626 
#6 1.626 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.626 changes and commit them, and you can discard any commits you make in this
#6 1.626 state without impacting any branches by switching back to a branch.
#6 1.626 
#6 1.626 If you want to create a new branch to retain commits you create, you may
#6 1.626 do so (now or later) by using -c with the switch command. Example:
#6 1.626 
#6 1.626   git switch -c <new-branch-name>
#6 1.626 
#6 1.626 Or undo this operation with:
#6 1.626 
#6 1.626   git switch -
#6 1.626 
#6 1.626 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.626 
#6 1.626 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.656 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.656 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.841 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.846 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 4.276 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.610 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 5.058 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 5.219 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.633 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.889 ln -sf afl-as as
#6 5.891 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.894 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.895 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.0s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:7290292d9ad483a618a7b2823bb15932d2280f85abefcb69020e29e142452c78
#7 0.525 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.532 Hit:2 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 0.541 Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.564 Hit:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.586 Hit:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 1.374 Reading package lists...
#7 3.167 Reading package lists...
#7 4.616 Building dependency tree...
#7 4.831 Reading state information...
#7 5.082 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.082 0 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.
#7 5.089 --2022-04-23 15:16:24--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.091 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.109.133, 185.199.111.133, 185.199.108.133, ...
#7 5.092 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.109.133|:443... connected.
#7 5.115 HTTP request sent, awaiting response... 200 OK
#7 5.134 Length: 9177 (9.0K) [text/plain]
#7 5.134 Saving to: '/afl/afl_driver.cpp'
#7 5.135 
#7 5.135      0K ........                                              100% 10.1M=0.001s
#7 5.135 
#7 5.135 2022-04-23 15:16:24 (10.1 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.135 
#7 6.870 ar: creating /libAFL.a
#7 DONE 7.0s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:8d6d548c125fcaef73ebbf2000ab4f7e69d21e437c0c9e72cb0fd2ea48423b3e done
#8 naming to gcr.io/fuzzbench/builders/afl/libtsm_libtsm_fuzzer-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libtsm_libtsm_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:f0aa98ea7f83ca827ad822db6dc8ad855b8ded9876082b1494ef883f70b85dd0
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:8dcff7b37e1b17ee87f33ce90168ceca8b69480f59f8246bf1af8f0e7304e385
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:f41265abe4c1054be701a7986900c4394367034a23764e52717cbcfd0ff66224
#8 transferring context: 591B 0.0s done
#8 DONE 0.1s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:7c930f4f11c20df6a7d5ab5bea5c60096b0b1a887082236d8d8e1778814bc2ac
#10 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:99eeb59783aad3b2a4b89c3e3bb2df5765d8d934172962cecf617e1ed0397c3f
#9 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:607ccaa7912d6118c9f48b98937e616ea6af29ba72a30066b550e7966d1dd56e
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:45dfe62c6adcb268f97345a3ff4787080152c5f963dd5bba2ca2183342612881
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:dcdf917ef78ccd0654739c59f483e635ede83d9d5725ebf1cf71bebe3cfad474 done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:22b5912546163cc97c32c4bca38d71015d7f6e33acde373d55f54a88fba86230
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:25e442e267ab61fe72106f610948886461590028adca9a470c0ac00af9c0e7f2
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libtsm_libtsm_fuzzer-intermediate:latest
#3 sha256:d15c33f19d88f67f8af66aa4c00b47a8a87d10ecd1f00e06711bd66bad031b46
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:89942db49f8eac48d1616c2ce5d8995b01ae6b8192a6da6416243e603f26c0c3
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libtsm_libtsm_fuzzer-intermediate
#6 sha256:0440cbd851af3799a1cb7649aeb7592da2b2d445420667f43f3af4a6bb2d6cac
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/libtsm_libtsm_fuzzer
#5 sha256:058b2566422153ec1bef3317e94fc08c728e653850d72b5a0b984ee29d925fac
#5 ERROR: gcr.io/fuzzbench/builders/afl/libtsm_libtsm_fuzzer:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:89942db49f8eac48d1616c2ce5d8995b01ae6b8192a6da6416243e603f26c0c3
#12 transferring context: 742.39kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libtsm_libtsm_fuzzer-intermediate
#6 sha256:0440cbd851af3799a1cb7649aeb7592da2b2d445420667f43f3af4a6bb2d6cac
#6 DONE 0.2s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:b376cc6ce2988582a688162aca23247ef7e80486051409a278bbc7326f767ffa
#8 DONE 0.3s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:a44d5cb8e0dfb24298875e19ee5d25dd43c7064c0430bdc30d70c35fea0ac191
#9 DONE 14.3s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:7e85b2c946ad05037a34c148193c710151575463eb6efe57d06a345d39124826
#10 DONE 0.4s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:299fe8c2f0f9b544d8bf9324c926fed4826e9785b413caaab5c3303ce4b15af6
#11 DONE 13.3s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:d4cf959d4e746eb19272dbedf0df07d5167eb989c0248345ae027eccc30e65db
#13 DONE 0.2s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:ce01176d801ce61eeb6821892f1bc6ba8ca3d384db639a9f5c0f9fd44912128b
#14 DONE 0.5s

#15 [stage-1  8/13] COPY benchmarks/libtsm_libtsm_fuzzer/benchmark.yaml /
#15 sha256:83b3a0b510c3333e9750e88703e4f79ba0fa6febef5a1d647a440869b8a5076c
#15 DONE 0.1s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:8b81dde8c55cf89cdb7d61ec8542cdadc72b64d2ff42364d320191b438e02bc9
#16 DONE 1.0s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:1b6630c94ecbd632cb4f7bc03e5e8cca0dfab9dd10f22748fb9cfa01c19f756a
#17 DONE 0.4s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:c3293e4fd5536f6fad87433e3edae7c5ff0ec29d955c516e4f9ddeed47b41b58
#18 0.586 Checking out commit 84faf557
#18 4.870 From git://people.freedesktop.org/~dvdhrm/libtsm
#18 4.870  * [new tag]         libtsm-3   -> libtsm-3
#18 4.878 error: pathspec '84faf557' did not match any file(s) known to git
#18 4.893 error: pathspec '84faf557' did not match any file(s) known to git
#18 4.901 error: pathspec '84faf557' did not match any file(s) known to git
#18 4.956 Checkout unsuccessful.
#18 DONE 5.2s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:4ae774f896d67322134945b988b2bad7a33a98e008f36880d7450b42fc578532
#19 DONE 1.0s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:4a204fd678ac0c769a16d6e213d11709948eb24566f8c48bafc18dbda73f37e3
#20 0.537 Run fuzzer_build to build the target
#20 0.653 FUZZ_TARGET = libtsm_fuzzer
#20 0.653 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.653 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.661 Building benchmark libtsm_libtsm_fuzzer with fuzzer afl
#20 0.665 + ./autogen.sh
#20 4.924 libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
#20 4.924 libtoolize: linking file 'build-aux/ltmain.sh'
#20 4.965 libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
#20 4.965 libtoolize: linking file 'm4/libtool.m4'
#20 5.000 libtoolize: linking file 'm4/ltoptions.m4'
#20 5.038 libtoolize: linking file 'm4/ltsugar.m4'
#20 5.075 libtoolize: linking file 'm4/ltversion.m4'
#20 5.114 libtoolize: linking file 'm4/lt~obsolete.m4'
#20 9.226 configure.ac:37: installing 'build-aux/ar-lib'
#20 9.226 configure.ac:17: installing 'build-aux/compile'
#20 9.226 configure.ac:19: installing 'build-aux/config.guess'
#20 9.227 configure.ac:19: installing 'build-aux/config.sub'
#20 9.227 configure.ac:21: installing 'build-aux/install-sh'
#20 9.227 configure.ac:21: installing 'build-aux/missing'
#20 9.291 Makefile.am: installing 'build-aux/depcomp'
#20 9.383 parallel-tests: installing 'build-aux/test-driver'
#20 9.655 checking for gcc... clang
#20 9.763 checking whether the C compiler works... yes
#20 9.896 checking for C compiler default output file name... a.out
#20 9.899 checking for suffix of executables... 
#20 10.03 checking whether we are cross compiling... no
#20 10.18 checking for suffix of object files... o
#20 10.21 checking whether we are using the GNU C compiler... yes
#20 10.24 checking whether clang accepts -g... yes
#20 10.27 checking for clang option to accept ISO C89... none needed
#20 10.32 checking whether clang understands -c and -o together... yes
#20 10.38 checking how to run the C preprocessor... clang -E
#20 10.50 checking for grep that handles long lines and -e... /usr/bin/grep
#20 10.50 checking for egrep... /usr/bin/grep -E
#20 10.50 checking for ANSI C header files... yes
#20 10.77 checking for sys/types.h... yes
#20 10.83 checking for sys/stat.h... yes
#20 10.88 checking for stdlib.h... yes
#20 10.95 checking for string.h... yes
#20 11.00 checking for memory.h... yes
#20 11.09 checking for strings.h... yes
#20 11.16 checking for inttypes.h... yes
#20 11.26 checking for stdint.h... yes
#20 11.33 checking for unistd.h... yes
#20 11.40 checking minix/config.h usability... no
#20 11.49 checking minix/config.h presence... no
#20 11.52 checking for minix/config.h... no
#20 11.52 checking whether it is safe to define __EXTENSIONS__... yes
#20 11.59 checking for special C compiler options needed for large files... no
#20 11.59 checking for _FILE_OFFSET_BITS value needed for large files... no
#20 11.65 checking build system type... x86_64-pc-linux-gnu
#20 11.75 checking host system type... x86_64-pc-linux-gnu
#20 11.75 checking for a BSD-compatible install... /usr/bin/install -c
#20 11.80 checking whether build environment is sane... yes
#20 11.81 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 11.82 checking for gawk... no
#20 11.82 checking for mawk... mawk
#20 11.82 checking whether make sets $(MAKE)... yes
#20 11.84 checking whether make supports the include directive... yes (GNU style)
#20 11.85 checking whether make supports nested variables... yes
#20 11.86 checking how to create a pax tar archive... gnutar
#20 11.89 checking dependency style of clang... gcc3
#20 11.96 checking whether make supports nested variables... (cached) yes
#20 11.96 checking for gcc... (cached) clang
#20 12.05 checking whether we are using the GNU C compiler... (cached) yes
#20 12.05 checking whether clang accepts -g... (cached) yes
#20 12.05 checking for clang option to accept ISO C89... (cached) none needed
#20 12.05 checking whether clang understands -c and -o together... (cached) yes
#20 12.05 checking for clang option to accept ISO C99... none needed
#20 12.14 checking for ar... ar
#20 12.14 checking the archiver (ar) interface... ar
#20 12.17 checking for a sed that does not truncate output... /usr/bin/sed
#20 12.18 checking whether ln -s works... yes
#20 12.18 checking for grep that handles long lines and -e... (cached) /usr/bin/grep
#20 12.18 checking for gawk... (cached) mawk
#20 12.18 checking how to print strings... printf
#20 12.24 checking for a sed that does not truncate output... (cached) /usr/bin/sed
#20 12.24 checking for fgrep... /usr/bin/grep -F
#20 12.24 checking for ld used by clang... /usr/bin/ld
#20 12.27 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 12.27 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 12.29 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 12.33 checking the maximum length of command line arguments... 1572864
#20 12.35 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 12.35 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 12.35 checking for /usr/bin/ld option to reload object files... -r
#20 12.35 checking for objdump... objdump
#20 12.35 checking how to recognize dependent libraries... pass_all
#20 12.35 checking for dlltool... no
#20 12.35 checking how to associate runtime and link libraries... printf %s\n
#20 12.35 checking for archiver @FILE support... @
#20 12.40 checking for strip... strip
#20 12.40 checking for ranlib... ranlib
#20 12.40 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 12.83 checking for sysroot... no
#20 12.83 checking for a working dd... /usr/bin/dd
#20 12.85 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 12.89 checking for mt... no
#20 12.90 checking if : is a manifest tool... no
#20 12.91 checking for dlfcn.h... yes
#20 12.97 checking for objdir... .libs
#20 13.17 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 13.21 checking for clang option to produce PIC... -fPIC -DPIC
#20 13.21 checking if clang PIC flag -fPIC -DPIC works... yes
#20 13.24 checking if clang static flag -static works... yes
#20 13.52 checking if clang supports -c -o file.o... yes
#20 13.58 checking if clang supports -c -o file.o... (cached) yes
#20 13.58 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 13.61 checking whether -lc should be explicitly linked in... no
#20 13.69 checking dynamic linker characteristics... GNU/Linux ld.so
#20 13.90 checking how to hardcode library paths into programs... immediate
#20 13.90 checking whether stripping libraries is possible... yes
#20 13.90 checking if libtool supports shared libraries... yes
#20 13.90 checking whether to build shared libraries... yes
#20 13.90 checking whether to build static libraries... yes
#20 13.90 checking for pkg-config... /usr/bin/pkg-config
#20 13.91 checking pkg-config is at least version 0.9.0... yes
#20 13.92 checking for XKBCOMMON... no
#20 13.93 checking for CHECK... no
#20 13.94 checking whether to build gtktsm... no (default)
#20 13.94 checking for GTKTSM... no
#20 13.95 checking whether to build with debugging on... yes (default)
#20 13.96 checking whether to enable code optimizations... yes (default)
#20 14.02 checking that generated files are newer than configure... done
#20 14.02 configure: creating ./config.status
#20 14.80 config.status: creating Makefile
#20 14.82 config.status: creating src/tsm/libtsm.pc
#20 14.85 config.status: creating config.h
#20 14.87 config.status: executing depfiles commands
#20 15.04 config.status: executing libtool commands
#20 15.06 configure: Build configuration:
#20 15.06 
#20 15.06                prefix: /usr/local
#20 15.06           exec-prefix: ${prefix}
#20 15.06                libdir: ${exec_prefix}/lib
#20 15.06            includedir: ${prefix}/include
#20 15.06               host-os: linux-gnu
#20 15.06 
#20 15.06   Miscellaneous Options:
#20 15.06                gtktsm: no
#20 15.06                 debug: yes
#20 15.06         optimizations: yes
#20 15.06        building tests: no
#20 15.06 
#20 15.06         Run "make" to start compilation process
#20 15.12 ++ nproc
#20 15.13 + make -j8 clean
#20 15.14 Making clean in .
#20 15.15 test -z "" || rm -f 
#20 15.15 test -z "libtsm.la" || rm -f libtsm.la
#20 15.15 rm -rf .libs _libs
#20 15.15 test -z "libshl.la libtsm-test.la" || rm -f libshl.la libtsm-test.la
#20 15.15 rm -f *.o
#20 15.15 test -z "" || rm -f 
#20 15.15 rm -f *.lo
#20 15.15 rm -rf external/.libs external/_libs
#20 15.16 test -z "" || rm -f 
#20 15.16 rm -f external/*.o
#20 15.16 rm -rf src/shared/.libs src/shared/_libs
#20 15.16 test -z "test-suite.log" || rm -f test-suite.log
#20 15.16 rm -f external/*.lo
#20 15.16 rm -f ./so_locations
#20 15.16 rm -f ./so_locations
#20 15.16 rm -rf src/tsm/.libs src/tsm/_libs
#20 15.16 rm -f src/gtktsm/*.o
#20 15.16 rm -f src/shared/*.o
#20 15.17 rm -f src/shared/*.lo
#20 15.17 rm -f src/tsm/*.o
#20 15.17 rm -f src/tsm/*.lo
#20 15.17 rm -f test/*.o
#20 15.18 ++ nproc
#20 15.18 + make -j8 all
#20 15.19 make --no-print-directory all-recursive
#20 15.20 Making all in .
#20 15.22   CC       src/tsm/libtsm_la-tsm-render.lo
#20 15.22   CC       src/tsm/libtsm_la-tsm-screen.lo
#20 15.22   CC       src/tsm/libtsm_la-tsm-selection.lo
#20 15.22   CC       src/tsm/libtsm_la-tsm-unicode.lo
#20 15.22   CC       src/tsm/libtsm_la-tsm-vte.lo
#20 15.22   CC       src/tsm/libtsm_la-tsm-vte-charsets.lo
#20 15.22   CC       external/libtsm_la-wcwidth.lo
#20 15.22   CC       src/shared/libshl_la-shl-htable.lo
#20 15.49   CC       src/shared/libshl_la-shl-ring.lo
#20 15.59   CC       src/tsm/libtsm_test_la-tsm-render.lo
#20 15.72   CC       src/tsm/libtsm_test_la-tsm-screen.lo
#20 15.92   CC       src/tsm/libtsm_test_la-tsm-selection.lo
#20 15.96   CC       src/tsm/libtsm_test_la-tsm-unicode.lo
#20 15.97   CC       src/tsm/libtsm_test_la-tsm-vte.lo
#20 15.99   CC       src/tsm/libtsm_test_la-tsm-vte-charsets.lo
#20 16.07   CC       external/libtsm_test_la-wcwidth.lo
#20 16.25   CCLD     libshl.la
#20 18.07   CCLD     libtsm.la
#20 18.63   CCLD     libtsm-test.la
#20 18.86 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c /src/libtsm_fuzzer.c -Isrc/tsm -o /src/libtsm_fuzzer.o
#20 18.91 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/libtsm_fuzzer /src/libtsm_fuzzer.o .libs/libtsm.a /libAFL.a
#20 19.19 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 19.6s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:8c3f76b99ad3884b1b029679adab79c0e79bce4d9d9b95d9dc892d954b717c3d
#21 writing image sha256:8c3f76b99ad3884b1b029679adab79c0e79bce4d9d9b95d9dc892d954b717c3d done
#21 naming to gcr.io/fuzzbench/builders/afl/libtsm_libtsm_fuzzer done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libtsm_libtsm_fuzzer:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:193cdd127809ddae59638dc4e3dc018a7f8eee66aeae6e87f4f809044b3a2b3a
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:a45bd6ec3e4ed8fdb8b1db7dc77c647f5c75947ab69aba57f258a28e345866a0
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/libtsm_libtsm_fuzzer-intermediate
#4 sha256:f107fdb4517e048867aeb0baa5427545092089d801af59cc82bf8ed6bbffad30
#4 ERROR: gcr.io/fuzzbench/runners/afl/libtsm_libtsm_fuzzer-intermediate:latest: not found

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3f7aa51dac32fbd604217d4910baf20707acd86a9059f840fbece7176fa38e4b
#6 writing image sha256:3f7aa51dac32fbd604217d4910baf20707acd86a9059f840fbece7176fa38e4b done
#6 naming to gcr.io/fuzzbench/runners/afl/libtsm_libtsm_fuzzer-intermediate 0.0s done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/libtsm_libtsm_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:32a5855a253f38117c6f9b908d1ecaa2c3ea690f8b0ea87ae51268666122ded9
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:86af12e7562a2a9d647cddf7089b553c58f883bf03bf551f96093ba6065fca7f
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libtsm_libtsm_fuzzer:latest
#4 sha256:4c4aeba4974eac14e03c41193f2aea615956c3485fdeda0bc5c43f31239ff7d2
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/libtsm_libtsm_fuzzer-intermediate:latest
#3 sha256:0dab54e595dbe6cd3b43b55c9a184b7b0b2b17ee705f5ee513a4bd7811e069ad
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:dfe792fb88642daa396d37513516b741979c152202ec6a1f1bf85254d4018e85
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/libtsm_libtsm_fuzzer-intermediate
#6 sha256:0ca817a8e2896eb16c45efb91eb984407ba04631326e115a50ac9b65d769cef8
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/libtsm_libtsm_fuzzer
#10 sha256:cfb96290bb6db1f7dae624a6d6798b881180d59821fd44bab8b8ba9a702a9e8b
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/libtsm_libtsm_fuzzer
#5 sha256:8d3bee84c2f8a132afb363b40ec215314257f3028a872cadb64b76130801aa96
#5 ERROR: gcr.io/fuzzbench/runners/afl/libtsm_libtsm_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:dfe792fb88642daa396d37513516b741979c152202ec6a1f1bf85254d4018e85
#12 transferring context: 9.02MB 0.2s done
#12 DONE 0.2s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/libtsm_libtsm_fuzzer
#10 sha256:cfb96290bb6db1f7dae624a6d6798b881180d59821fd44bab8b8ba9a702a9e8b
#10 DONE 1.1s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:d576a69d1ef14c7469fb4a72f9b705e95a460c26626077638b699c862eb63294
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:3e29cea3d9f70cca099393d6627873a4f253ad1a6bef289345015434b5ce184f
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:f70adaf4438ed139ef3cb07c1417edc749acef2e16a4683405b0438db4d339c4
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:9a5646b664f3be3cda44fb25719d9eae6d050b766ca6396381876117e4f62fba
#11 DONE 0.2s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:c5bf689baf88e255c0cca50ff95d189390c5c8c499555f1153536e4de7cb3ce7
#13 DONE 0.5s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:6eca359d4cc587a75b5d4ed9ef4502b90c821a4273fb1d131f8b39d5f523ac63
#14 DONE 0.5s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:94dea85c3ed2765d5a9d7d327bfa9ba305b438110883c3040b0f0fdf0761f646
#15 DONE 0.8s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:0d78015ef682a2260c26de297c830e07d31cfa012aa4a5ade2d888393ce9580e
#16 DONE 0.8s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:df4bb6b5c54d6f44901bde241e8164c320df075fea867b9257b6b661bc2ed1b4
#17 DONE 0.3s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:ac6a40b4beef22592d26e4b33b3204ac6e5130b07d6ec083de3b83d01fee421f
#18 DONE 0.2s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:8be220407e73f205b2c1919146b01c7823d5b9bac03a93abe825ff6c0437d408
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:e5e2fd621eae74f4a023298239d26ad3a169807424cbddd9dcabef227ba906ac
#20 DONE 0.6s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:47f9e90c53b9a42980e4c24848af7a588e4fea0197b88a751b015b8303237458 done
#21 naming to gcr.io/fuzzbench/runners/afl/libtsm_libtsm_fuzzer done
#21 DONE 0.0s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/libtsm_libtsm_fuzzer:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Doing final sync.
