WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: abseil-cpp_string_utilities_fuzzer.
INFO:root:Please run "make test-run-afl-abseil-cpp_string_utilities_fuzzer" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:5d7464252732d33904a6da4d9f2ba4f12bfd1f50cc2549c66218233a55e2318c
#1 transferring dockerfile: 1.40kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:ba5d2ed8501c4d6f3bc35eb1fcf1be7e7bc4662f2ea51eccf7fefbfdceec67b9
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#4 [1/8] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#4 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#4 DONE 0.0s

#11 [internal] load build context
#11 sha256:227d83335bdd8c32b029c063c96942736f7d8c29f80c726c70af8295ad4d3d77
#11 DONE 0.0s

#13 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/abseil-cpp_string_utilities_fuzzer
#13 sha256:b5bab8c08a9ca609a98062e3c694d7360610c55b5f9b52e2bbab0a2d7ac1ce4d
#13 ERROR: gcr.io/fuzzbench/builders/benchmark/abseil-cpp_string_utilities_fuzzer:latest: not found

#11 [internal] load build context
#11 sha256:227d83335bdd8c32b029c063c96942736f7d8c29f80c726c70af8295ad4d3d77
#11 transferring context: 8.18kB done
#11 DONE 0.1s

#5 [2/8] RUN apt-get update && apt-get --no-install-recommends install -y build-essential make curl wget rsync
#5 sha256:3596a07d5a5f28f27accf3df1abe58b80970ca1a82dda175aee220ce8c0c0c43
#5 CACHED

#9 [6/8] RUN curl -Lo /usr/bin/bazel         https://github.com/bazelbuild/bazelisk/releases/download/v1.1.0/bazelisk-linux-amd64         &&     chmod +x /usr/bin/bazel
#9 sha256:c454df4601150cda212324d249487a2364aae1615c57577533b03e17876a2403
#9 CACHED

#7 [4/8] RUN curl https://bazel.build/bazel-release.pub.gpg | apt-key add -
#7 sha256:5d0d139ce4776f82d416bebb125bfd7109da0842286c58eebe46fc6ddaf362c4
#7 CACHED

#8 [5/8] RUN apt-get update && apt-get install -y bazel
#8 sha256:a5c3c522a7c22c1c494bb20e655dfc46df2a4fe230374058cb305fa44fc5c040
#8 CACHED

#10 [7/8] RUN git clone --depth 1 https://github.com/abseil/abseil-cpp.git
#10 sha256:01f0161ace87169ebbc1bd6575b6fdf2935bdf880bac7454c3c5b1612fd7e384
#10 CACHED

#6 [3/8] RUN echo "deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8" | tee /etc/apt/sources.list.d/bazel.list
#6 sha256:a08dc586f2123c2c107522b524e33cd97caebc81d50e5a17855cc444aa254b10
#6 CACHED

#12 [8/8] COPY BUILD WORKSPACE build.sh string_escape_fuzzer.cc string_utilities_fuzzer.cc /src/
#12 sha256:b2a98c52f53d405ec3be36c7dce287e486f0b00e05ef6f11477165acb4af3e78
#12 CACHED

#14 exporting to image
#14 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#14 exporting layers done
#14 writing image sha256:463b5bf9e1b5f935ece33b11bccf54ba34c1ff317a3161b3c9da32cd650a1333 done
#14 naming to gcr.io/fuzzbench/builders/benchmark/abseil-cpp_string_utilities_fuzzer done
#14 DONE 0.2s

#15 exporting cache
#15 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#15 preparing build cache for export done
#15 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/abseil-cpp_string_utilities_fuzzer:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:eacaa334831a3fb93f81bd86306368dd2fae1fcd92e718ed34a2d9ee21d87cf6
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:e39504b3ccf93e1626938474240caf97ed9ad6f9ef995713dbc1e0f60d3b0032
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/abseil-cpp_string_utilities_fuzzer:latest
#3 sha256:5e14b6795c3f2e2a6827a2540d6e94f2434f7df65d7e59bad15e7058a9bcfa99
#3 DONE 0.0s

#7 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/abseil-cpp_string_utilities_fuzzer
#7 sha256:e8c84a37224add2d02aa252675a91c3b0af5ada93fde4a59308ea39484670e67
#7 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/abseil-cpp_string_utilities_fuzzer-intermediate
#4 sha256:e04fecbf271d5f033450fae08c6fd5582e74a3e8895114851e60d3bc776df7cd
#4 ERROR: gcr.io/fuzzbench/builders/afl/abseil-cpp_string_utilities_fuzzer-intermediate:latest: not found

#5 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#5 sha256:ac3ce733e3b9cfb279819bcc72c7601ef15331c33e5edb6a8e8b086dacf88444
#5 CACHED

#6 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#6 sha256:2e7d64fee69ab6f1485721308e30aa1f6ee1a14fb1925e4f4fe86b113ac8e654
#6 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:0bbb78774438bd86bb7913cfe32717483c81b3d6669597a5c3ed2f589a75a4ff done
#8 naming to gcr.io/fuzzbench/builders/afl/abseil-cpp_string_utilities_fuzzer-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/abseil-cpp_string_utilities_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:8a277448fd14a1a76fbd87353e2b2d382529079a15f62cd35cffcca412557212
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:7fd43c038326653cbdfeefd1cbef518c354cf4922950b40cf8825265490eeb0f
#2 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:7fd43c038326653cbdfeefd1cbef518c354cf4922950b40cf8825265490eeb0f
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:8228b7b892657b6bc507282ee463180345456340eb3c687408dc1b6fb61d8738
#8 transferring context: 591B 0.0s done
#8 DONE 0.1s

#9 [4/7] COPY ./requirements.txt /
#9 sha256:290aeb01a160695c0713d5f6413fcd24160c36b0bed253a4946ff7b6127d3f2b
#9 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:28877183fafcaf7766b5814a7498639b4a2247e622a39633abf3b84ff529c0ab
#11 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:561e35d1153733721a0de259257d5c4a04806271f36fb5f35938a32555aa36ad
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:5e032300c66a507620eea7220414db45a7707319285ad742fa8d903cc8c8d52b
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:05b2aa84fbb14d46a2428ada51f12a750d9a6a7322c0a63b3b82bda36d00b178
#13 writing image sha256:05b2aa84fbb14d46a2428ada51f12a750d9a6a7322c0a63b3b82bda36d00b178 done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:49be35c728b0f40d36f495c7beac321c3bae46a104b565dea777d0aa26a3e600
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:fdfa9367905197145d21a088a73af4bfcbef37a528cbfc54dba41a13b9e9909e
#2 transferring context: 34B done
#2 DONE 0.1s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/abseil-cpp_string_utilities_fuzzer-intermediate:latest
#3 sha256:379773820d8277593bb662a149af5a54f0db902065cb96db616882f25defe7d8
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:59d0f6de1c52832ba5a0bf382cba841574428b8bd543f43ba54518f88657ebb4
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/abseil-cpp_string_utilities_fuzzer-intermediate
#6 sha256:d16bf5eb0826c5a4bd58ca2e0266917a5bf041060b3bb8bd37170859ac65b105
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/abseil-cpp_string_utilities_fuzzer
#5 sha256:42053d6dd95dc9fdb179d78838ba465fc0f004fa950df487dc3a39240d75b2d9
#5 ERROR: gcr.io/fuzzbench/builders/afl/abseil-cpp_string_utilities_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:59d0f6de1c52832ba5a0bf382cba841574428b8bd543f43ba54518f88657ebb4
#12 transferring context: 742.43kB 0.2s done
#12 DONE 0.2s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:e3df7a635793a0d7794ccee406df3a514f6ece218049920c18efbde0cc9cc291
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:833173f8eba153b9cd8b75cf3f909729cdd4241ccf4c3ef68e429eb764b8797c
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:ffc513b07d5da382e055404500ca52d6be1c9fa9dca143aaf285ed6aa664b405
#11 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:2bcae363a6e5b1de045e1e0bec7d801d334af2452da1a7f7527ab8f6bdd581dc
#8 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:40f3ebaf0015cd3feda99e9f5fe0ce745aa06a00f85b28148063f92dfe642063
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:9a4b98b011e366eb5977d06a101601057ec5fa8b03a8e75fda406bd890a6f706
#14 DONE 1.5s

#15 [stage-1  8/13] COPY benchmarks/abseil-cpp_string_utilities_fuzzer/benchmark.yaml /
#15 sha256:10fb6752eb37c481ab36b9882b20bf2dc969d1f7eccec2bb29c28ce3c6d7ea69
#15 DONE 0.1s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:6aad92b704a644e19a331f0994654c8be61ca1fbe71514b0fd590c345043c129
#16 DONE 1.3s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:1bf543cf6a9c4da773a6c3d9aa06eac58ef37b2b881871de5a5ac4b5d657d76d
#17 DONE 0.1s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:7c3b2aa940ffca248dd0d4aa0b01fa97ae710726301ee72bef0ed6783f913f76
#18 1.396 Checking out commit 1d5a2cd8
#18 5.693 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 5.700 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 5.713 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 5.815 Checkout unsuccessful.
#18 DONE 6.0s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:1697ac360e208d4122338a05464b8e75c7ebaf918bde795172b0356941cada57
#19 DONE 1.3s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:91b7eb2045b5841ec696bac377e4bfe823e9c5c125c5f9771703b889a544a2c9
#20 1.333 Run fuzzer_build to build the target
#20 1.565 FUZZ_TARGET = string_utilities_fuzzer
#20 1.565 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 1.565 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 1.582 Building benchmark abseil-cpp_string_utilities_fuzzer with fuzzer afl
#20 1.590 ++ for f in ${CFLAGS}
#20 1.590 ++ echo --conlyopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION --linkopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION
#20 1.590 ++ for f in ${CFLAGS}
#20 1.590 ++ echo --conlyopt=-pthread --linkopt=-pthread
#20 1.590 ++ for f in ${CFLAGS}
#20 1.590 ++ echo --conlyopt=-Wl,--no-as-needed --linkopt=-Wl,--no-as-needed
#20 1.590 ++ for f in ${CFLAGS}
#20 1.590 ++ echo --conlyopt=-Wl,-ldl --linkopt=-Wl,-ldl
#20 1.590 ++ for f in ${CFLAGS}
#20 1.590 ++ echo --conlyopt=-Wl,-lm --linkopt=-Wl,-lm
#20 1.590 ++ for f in ${CFLAGS}
#20 1.590 ++ echo --conlyopt=-Wno-unused-command-line-argument --linkopt=-Wno-unused-command-line-argument
#20 1.590 ++ for f in ${CFLAGS}
#20 1.590 ++ echo --conlyopt=-O3 --linkopt=-O3
#20 1.590 ++ for f in ${CFLAGS}
#20 1.590 ++ echo --conlyopt=-fsanitize-coverage=trace-pc-guard --linkopt=-fsanitize-coverage=trace-pc-guard
#20 1.591 ++ for f in ${CXXFLAGS}
#20 1.591 ++ echo --cxxopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION --linkopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION
#20 1.591 ++ for f in ${CXXFLAGS}
#20 1.591 ++ echo --cxxopt=-pthread --linkopt=-pthread
#20 1.591 ++ for f in ${CXXFLAGS}
#20 1.591 ++ echo --cxxopt=-Wl,--no-as-needed --linkopt=-Wl,--no-as-needed
#20 1.591 ++ for f in ${CXXFLAGS}
#20 1.591 ++ echo --cxxopt=-Wl,-ldl --linkopt=-Wl,-ldl
#20 1.591 ++ for f in ${CXXFLAGS}
#20 1.591 ++ echo --cxxopt=-Wl,-lm --linkopt=-Wl,-lm
#20 1.591 ++ for f in ${CXXFLAGS}
#20 1.591 ++ echo --cxxopt=-Wno-unused-command-line-argument --linkopt=-Wno-unused-command-line-argument
#20 1.591 ++ for f in ${CXXFLAGS}
#20 1.591 ++ echo --cxxopt=-stdlib=libc++ --linkopt=-stdlib=libc++
#20 1.591 ++ for f in ${CXXFLAGS}
#20 1.591 ++ echo --cxxopt=-O3 --linkopt=-O3
#20 1.591 ++ for f in ${CXXFLAGS}
#20 1.592 ++ echo --cxxopt=-fsanitize-coverage=trace-pc-guard --linkopt=-fsanitize-coverage=trace-pc-guard
#20 1.592 ++ '[' address = undefined ']'
#20 1.593 + readonly 'EXTRA_BAZEL_FLAGS=--conlyopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION --linkopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION
#20 1.593 --conlyopt=-pthread --linkopt=-pthread
#20 1.593 --conlyopt=-Wl,--no-as-needed --linkopt=-Wl,--no-as-needed
#20 1.593 --conlyopt=-Wl,-ldl --linkopt=-Wl,-ldl
#20 1.593 --conlyopt=-Wl,-lm --linkopt=-Wl,-lm
#20 1.593 --conlyopt=-Wno-unused-command-line-argument --linkopt=-Wno-unused-command-line-argument
#20 1.593 --conlyopt=-O3 --linkopt=-O3
#20 1.593 --conlyopt=-fsanitize-coverage=trace-pc-guard --linkopt=-fsanitize-coverage=trace-pc-guard
#20 1.593 --cxxopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION --linkopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION
#20 1.593 --cxxopt=-pthread --linkopt=-pthread
#20 1.593 --cxxopt=-Wl,--no-as-needed --linkopt=-Wl,--no-as-needed
#20 1.593 --cxxopt=-Wl,-ldl --linkopt=-Wl,-ldl
#20 1.593 --cxxopt=-Wl,-lm --linkopt=-Wl,-lm
#20 1.593 --cxxopt=-Wno-unused-command-line-argument --linkopt=-Wno-unused-command-line-argument
#20 1.593 --cxxopt=-stdlib=libc++ --linkopt=-stdlib=libc++
#20 1.593 --cxxopt=-O3 --linkopt=-O3
#20 1.593 --cxxopt=-fsanitize-coverage=trace-pc-guard --linkopt=-fsanitize-coverage=trace-pc-guard'
#20 1.594 + EXTRA_BAZEL_FLAGS='--conlyopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION --linkopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION
#20 1.594 --conlyopt=-pthread --linkopt=-pthread
#20 1.594 --conlyopt=-Wl,--no-as-needed --linkopt=-Wl,--no-as-needed
#20 1.594 --conlyopt=-Wl,-ldl --linkopt=-Wl,-ldl
#20 1.594 --conlyopt=-Wl,-lm --linkopt=-Wl,-lm
#20 1.594 --conlyopt=-Wno-unused-command-line-argument --linkopt=-Wno-unused-command-line-argument
#20 1.594 --conlyopt=-O3 --linkopt=-O3
#20 1.594 --conlyopt=-fsanitize-coverage=trace-pc-guard --linkopt=-fsanitize-coverage=trace-pc-guard
#20 1.594 --cxxopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION --linkopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION
#20 1.594 --cxxopt=-pthread --linkopt=-pthread
#20 1.594 --cxxopt=-Wl,--no-as-needed --linkopt=-Wl,--no-as-needed
#20 1.594 --cxxopt=-Wl,-ldl --linkopt=-Wl,-ldl
#20 1.594 --cxxopt=-Wl,-lm --linkopt=-Wl,-lm
#20 1.594 --cxxopt=-Wno-unused-command-line-argument --linkopt=-Wno-unused-command-line-argument
#20 1.594 --cxxopt=-stdlib=libc++ --linkopt=-stdlib=libc++
#20 1.594 --cxxopt=-O3 --linkopt=-O3
#20 1.594 --cxxopt=-fsanitize-coverage=trace-pc-guard --linkopt=-fsanitize-coverage=trace-pc-guard'
#20 1.594 + FUZZ_TARGETS=("string_escape_fuzzer" "string_utilities_fuzzer")
#20 1.594 + declare FUZZ_TARGETS
#20 1.594 + bazel build --verbose_failures --dynamic_mode=off --spawn_strategy=standalone --genrule_strategy=standalone --strip=never --linkopt=-pthread --copt=/libAFL.a --linkopt=/libAFL.a --linkopt=-lc++ --conlyopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION --linkopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION --conlyopt=-pthread --linkopt=-pthread --conlyopt=-Wl,--no-as-needed --linkopt=-Wl,--no-as-needed --conlyopt=-Wl,-ldl --linkopt=-Wl,-ldl --conlyopt=-Wl,-lm --linkopt=-Wl,-lm --conlyopt=-Wno-unused-command-line-argument --linkopt=-Wno-unused-command-line-argument --conlyopt=-O3 --linkopt=-O3 --conlyopt=-fsanitize-coverage=trace-pc-guard --linkopt=-fsanitize-coverage=trace-pc-guard --cxxopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION --linkopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION --cxxopt=-pthread --linkopt=-pthread --cxxopt=-Wl,--no-as-needed --linkopt=-Wl,--no-as-needed --cxxopt=-Wl,-ldl --linkopt=-Wl,-ldl --cxxopt=-Wl,-lm --linkopt=-Wl,-lm --cxxopt=-Wno-unused-command-line-argument --linkopt=-Wno-unused-command-line-argument --cxxopt=-stdlib=libc++ --linkopt=-stdlib=libc++ --cxxopt=-O3 --linkopt=-O3 --cxxopt=-fsanitize-coverage=trace-pc-guard --linkopt=-fsanitize-coverage=trace-pc-guard string_escape_fuzzer string_utilities_fuzzer
#20 2.441 2022/04/23 13:56:59 Downloading https://releases.bazel.build/5.1.1/release/bazel-5.1.1-linux-x86_64...
#20 6.405 Extracting Bazel installation...
#20 9.826 Starting local Bazel server and connecting to it...
#20 17.00 Loading: 
#20 17.01 Loading: 0 packages loaded
#20 18.09 Loading: 0 packages loaded
#20 19.12 Loading: 0 packages loaded
#20 19.12     currently loading: 
#20 19.92 Analyzing: 2 targets (1 packages loaded, 0 targets configured)
#20 20.93 Analyzing: 2 targets (5 packages loaded, 6 targets configured)
#20 21.98 Analyzing: 2 targets (32 packages loaded, 125 targets configured)
#20 23.11 Analyzing: 2 targets (34 packages loaded, 125 targets configured)
#20 26.67 Analyzing: 2 targets (34 packages loaded, 125 targets configured)
#20 28.43 Analyzing: 2 targets (34 packages loaded, 125 targets configured)
#20 28.84 ERROR: Analysis of target '//:string_utilities_fuzzer' failed; build aborted: error loading package '@com_google_absl//absl': Unable to find package for @bazel_skylib//lib:selects.bzl: The repository '@bazel_skylib' could not be resolved: Repository '@bazel_skylib' is not defined.
#20 28.95 INFO: Elapsed time: 22.387s
#20 28.98 INFO: 0 processes.
#20 28.98 FAILED: Build did NOT complete successfully (37 packages loaded, 132 targets configured)
#20 29.02 FAILED: Build did NOT complete successfully (37 packages loaded, 132 targets configured)
#20 29.09 Traceback (most recent call last):
#20 29.09   File "<string>", line 1, in <module>
#20 29.09   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 29.09     utils.build_benchmark()
#20 29.09   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 29.09     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 29.09   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 29.09     raise CalledProcessError(retcode, cmd)
#20 29.09 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/abseil-cpp_string_utilities_fuzzer:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:278195: .afl-abseil-cpp_string_utilities_fuzzer-builder] Error 1
