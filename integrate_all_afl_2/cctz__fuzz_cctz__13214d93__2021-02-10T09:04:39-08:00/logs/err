WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: cctz_fuzz_cctz.
INFO:root:Please run "make test-run-afl-cctz_fuzz_cctz" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:5eb7b879393562f6ce3eac56ca4c6798f2b218254b2f533ac49a43937a268964
#1 transferring dockerfile: 918B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:f91464516af62cd5bb581607be769457432fabdfff8dd85e86f12103d1a0586e
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#4 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#4 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:e71064efa33f55b29b5c74dd83f79b4d8b647e20ac3d7037a51f6ba9177d034a
#8 DONE 0.0s

#11 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/cctz_fuzz_cctz
#11 sha256:ed5ba6f217bcdf622eff8740bb1d9c81f50ab4967fdcc5099b942bf4e3da2066
#11 ERROR: gcr.io/fuzzbench/builders/benchmark/cctz_fuzz_cctz:latest: not found

#4 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:7f76292abe20e3a09554cd7e52e4ba7f174e2726aa0615496ca232017535a443
#4 sha256:b785341069aff1aa420741f46c0341befe7652e19f60afc8069313b0e11f206e
#4 CACHED

#8 [internal] load build context
#8 sha256:e71064efa33f55b29b5c74dd83f79b4d8b647e20ac3d7037a51f6ba9177d034a
#8 transferring context: 2.54kB done
#8 DONE 0.0s

#5 [2/6] RUN apt-get update && apt-get install -y make autoconf libgtest-dev
#5 sha256:31973d901701f209653b6d2f255eb81ba2152268c20ba868e14288caa8b72de4
#5 1.139 Get:1 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#5 1.179 Hit:2 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#5 1.262 Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease
#5 1.363 Get:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#5 1.754 Get:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#5 2.117 Get:6 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [1139 kB]
#5 2.292 Get:7 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1771 kB]
#5 2.417 Get:8 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [526 kB]
#5 2.457 Get:9 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [870 kB]
#5 2.520 Get:10 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [679 kB]
#5 2.575 Get:11 http://security.ubuntu.com/ubuntu focal-security/restricted i386 Packages [26.7 kB]
#5 3.058 Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [791 kB]
#5 3.422 Get:13 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [1214 kB]
#5 3.539 Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted i386 Packages [29.5 kB]
#5 3.542 Get:15 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [2185 kB]
#5 3.704 Get:16 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1153 kB]
#5 3.789 Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [839 kB]
#5 3.852 Get:18 http://archive.ubuntu.com/ubuntu focal-backports/universe i386 Packages [14.4 kB]
#5 3.853 Get:19 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [26.0 kB]
#5 4.572 Fetched 11.6 MB in 3s (3422 kB/s)
#5 4.572 Reading package lists...
#5 8.047 Reading package lists...
#5 11.23 Building dependency tree...
#5 11.71 Reading state information...
#5 12.29 make is already the newest version (4.2.1-1.2).
#5 12.29 make set to manually installed.
#5 12.29 The following additional packages will be installed:
#5 12.29   automake autotools-dev googletest libsigsegv2 m4
#5 12.30 Suggested packages:
#5 12.30   autoconf-archive gnu-standards autoconf-doc libtool gettext m4-doc
#5 12.39 The following NEW packages will be installed:
#5 12.40   autoconf automake autotools-dev googletest libgtest-dev libsigsegv2 m4
#5 12.64 0 upgraded, 7 newly installed, 0 to remove and 2 not upgraded.
#5 12.64 Need to get 3303 kB of archives.
#5 12.64 After this operation, 25.6 MB of additional disk space will be used.
#5 12.64 Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 libsigsegv2 amd64 2.12-2 [13.9 kB]
#5 12.75 Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 m4 amd64 1.4.18-4 [199 kB]
#5 13.04 Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 autoconf all 2.69-11.1 [321 kB]
#5 13.17 Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 autotools-dev all 20180224.1 [39.6 kB]
#5 13.18 Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 automake all 1:1.16.1-4ubuntu6 [522 kB]
#5 13.27 Get:6 http://archive.ubuntu.com/ubuntu focal/universe amd64 googletest all 1.10.0-2 [623 kB]
#5 13.34 Get:7 http://archive.ubuntu.com/ubuntu focal/universe amd64 libgtest-dev amd64 1.10.0-2 [1583 kB]
#5 14.60 debconf: delaying package configuration, since apt-utils is not installed
#5 14.89 Fetched 3303 kB in 1s (3208 kB/s)
#5 15.43 Selecting previously unselected package libsigsegv2:amd64.
#5 15.43 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21308 files and directories currently installed.)
#5 15.47 Preparing to unpack .../0-libsigsegv2_2.12-2_amd64.deb ...
#5 15.69 Unpacking libsigsegv2:amd64 (2.12-2) ...
#5 16.45 Selecting previously unselected package m4.
#5 16.46 Preparing to unpack .../1-m4_1.4.18-4_amd64.deb ...
#5 16.46 Unpacking m4 (1.4.18-4) ...
#5 16.56 Selecting previously unselected package autoconf.
#5 16.56 Preparing to unpack .../2-autoconf_2.69-11.1_all.deb ...
#5 16.56 Unpacking autoconf (2.69-11.1) ...
#5 16.72 Selecting previously unselected package autotools-dev.
#5 16.73 Preparing to unpack .../3-autotools-dev_20180224.1_all.deb ...
#5 16.73 Unpacking autotools-dev (20180224.1) ...
#5 16.83 Selecting previously unselected package automake.
#5 16.83 Preparing to unpack .../4-automake_1%3a1.16.1-4ubuntu6_all.deb ...
#5 16.84 Unpacking automake (1:1.16.1-4ubuntu6) ...
#5 17.01 Selecting previously unselected package googletest.
#5 17.02 Preparing to unpack .../5-googletest_1.10.0-2_all.deb ...
#5 17.02 Unpacking googletest (1.10.0-2) ...
#5 17.34 Selecting previously unselected package libgtest-dev:amd64.
#5 17.35 Preparing to unpack .../6-libgtest-dev_1.10.0-2_amd64.deb ...
#5 17.36 Unpacking libgtest-dev:amd64 (1.10.0-2) ...
#5 18.11 Setting up googletest (1.10.0-2) ...
#5 18.16 Setting up autotools-dev (20180224.1) ...
#5 18.21 Setting up libsigsegv2:amd64 (2.12-2) ...
#5 18.26 Setting up libgtest-dev:amd64 (1.10.0-2) ...
#5 18.31 Setting up m4 (1.4.18-4) ...
#5 18.35 Setting up autoconf (2.69-11.1) ...
#5 18.40 Setting up automake (1:1.16.1-4ubuntu6) ...
#5 18.45 update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
#5 18.45 update-alternatives: warning: skip creation of /usr/share/man/man1/automake.1.gz because associated file /usr/share/man/man1/automake-1.16.1.gz (of link group automake) doesn't exist
#5 18.45 update-alternatives: warning: skip creation of /usr/share/man/man1/aclocal.1.gz because associated file /usr/share/man/man1/aclocal-1.16.1.gz (of link group automake) doesn't exist
#5 18.47 Processing triggers for libc-bin (2.31-0ubuntu9.7) ...
#5 DONE 19.2s

#6 [3/6] RUN git clone --depth 1 https://github.com/google/cctz
#6 sha256:9b260e30ae2cfd365f860c274a180003ac0b3587fb652ed206c8c017c4002c7d
#6 0.835 Cloning into 'cctz'...
#6 DONE 2.2s

#7 [4/6] WORKDIR /src/cctz
#7 sha256:8dafff3ff0108376bd811c7224cfd0a6284b3dbf050b7f0c128364ce68a06d2a
#7 DONE 0.1s

#9 [5/6] COPY build.sh /src/
#9 sha256:9ed01b9d548ded32bda7de5c2dc3ed852ec497f7bcdacdb2e1eaebd5ccf21976
#9 DONE 0.2s

#10 [6/6] COPY fuzz_* /src/
#10 sha256:af85860bdbd0d0be486b69d388df0b88c01c9465955816518751176261e1dd82
#10 DONE 0.1s

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:3adb0804fe3b55c25ad577224efdaa8bebd4c83da72fe6d3c66c960cf19be35c done
#12 naming to gcr.io/fuzzbench/builders/benchmark/cctz_fuzz_cctz done
#12 DONE 0.1s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export
#13 preparing build cache for export done
#13 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/cctz_fuzz_cctz:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:f9a9332689d39236c6c21f6ca4e28235c9ae34d63745f0dd12219313621c52e1
#1 transferring dockerfile: 46B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:cabdf7c5ec4b2a6acb7aaf74a1236759a0e29012d6433001b4a2391f16941086
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/cctz_fuzz_cctz:latest
#3 sha256:671f280c3eff9252c121d5993282a543579a23a987f1d118208d6e7c06e349ca
#3 DONE 0.0s

#4 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/cctz_fuzz_cctz
#4 sha256:8a5f62cd9071d7dfc344e823e207afd860751bb47ac55168cb9f5d6b96257110
#4 DONE 0.0s

#7 importing cache manifest from gcr.io/fuzzbench/builders/afl/cctz_fuzz_cctz-intermediate
#7 sha256:0e78aa4fbf3a030a63b539be2afeaeb3b30c7258416d322be81d48e25d39764a
#7 ERROR: gcr.io/fuzzbench/builders/afl/cctz_fuzz_cctz-intermediate:latest: not found

#4 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/cctz_fuzz_cctz
#4 sha256:8a5f62cd9071d7dfc344e823e207afd860751bb47ac55168cb9f5d6b96257110
#4 DONE 0.2s

#5 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#5 sha256:9b772d4fa1ad943d0ad636ca59c1456e9b5ffa9f86ef6fb5509b05cabf1a9f06
#5 1.045 Cloning into '/afl'...
#5 1.955 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#5 1.955 
#5 1.955 You are in 'detached HEAD' state. You can look around, make experimental
#5 1.955 changes and commit them, and you can discard any commits you make in this
#5 1.955 state without impacting any branches by switching back to a branch.
#5 1.955 
#5 1.955 If you want to create a new branch to retain commits you create, you may
#5 1.955 do so (now or later) by using -c with the switch command. Example:
#5 1.955 
#5 1.955   git switch -c <new-branch-name>
#5 1.955 
#5 1.955 Or undo this operation with:
#5 1.955 
#5 1.955   git switch -
#5 1.955 
#5 1.955 Turn off this advice by setting config variable advice.detachedHead to false
#5 1.955 
#5 1.955 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#5 1.998 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#5 2.001 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#5 2.364 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#5 2.370 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#5 7.473 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#5 8.120 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#5 9.014 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#5 9.310 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#5 10.14 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#5 10.64 ln -sf afl-as as
#5 10.64 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#5 10.64 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#5 10.64 [+] All done! Be sure to review README - it's pretty short and useful.
#5 DONE 10.9s

#6 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#6 sha256:c894112b53d0bf4270e352e3db7d061fd962685f470cecc4f8619873a8e004f7
#6 1.375 Hit:1 http://security.ubuntu.com/ubuntu focal-security InRelease
#6 1.376 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#6 1.376 Hit:3 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 1.384 Hit:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#6 1.412 Hit:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#6 2.998 Reading package lists...
#6 6.417 Reading package lists...
#6 9.660 Building dependency tree...
#6 10.10 Reading state information...
#6 10.74 wget is already the newest version (1.20.3-1ubuntu2).
#6 10.74 0 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.
#6 10.77 --2022-04-23 13:58:24--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#6 10.81 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.109.133, 185.199.110.133, 185.199.111.133, ...
#6 10.82 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.109.133|:443... connected.
#6 10.85 HTTP request sent, awaiting response... 200 OK
#6 10.87 Length: 9177 (9.0K) [text/plain]
#6 10.87 Saving to: '/afl/afl_driver.cpp'
#6 10.87 
#6 10.87      0K ........                                              100% 3.19M=0.003s
#6 10.87 
#6 10.87 2022-04-23 13:58:24 (3.19 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#6 10.87 
#6 14.32 ar: creating /libAFL.a
#6 DONE 14.4s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:1feff602e14bd4a13a4dc5bd697ea7cdd2c54dfcdbac0cc4acf605423c6df5b7 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/cctz_fuzz_cctz-intermediate done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/cctz_fuzz_cctz-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:58364d7f3ff676eb0fccfe34894fa406b32d64ab0b5a4405598df0145e6f598f
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:876b818ef572167a589264df61a7c6d8f4a29e55cf333bea82551d68f7aefc04
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#12 importing cache manifest from gcr.io/fuzzbench/base-image
#12 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#12 DONE 0.0s

#4 [1/7] FROM docker.io/library/ubuntu:xenial
#4 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#4 DONE 0.0s

#7 [internal] load build context
#7 sha256:8714a683284c33b5b03769dc9ea77dcf3c1cd9d2263bb5a3fdaab00fae6fc9c9
#7 transferring context: 591B 0.1s done
#7 DONE 0.2s

#6 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#6 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#6 CACHED

#8 [4/7] COPY ./requirements.txt /
#8 sha256:5dc636b7b7d53b02975b725cffedac9ddc6674197244fd15157c9065c127fc9f
#8 CACHED

#9 [5/7] RUN pip3 install -r /requirements.txt
#9 sha256:cfbb90b1632b15f99277945299556ea3cdd106d033a1d7cd1a69b3ccbaaf080f
#9 CACHED

#10 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#10 sha256:9188dc57a592f52de17953ba84e43a69811c1c6a399e3798632b0d84c8af42fc
#10 CACHED

#5 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#5 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#5 CACHED

#11 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#11 sha256:6dcdef849e942be7723ecc330d5046ae9d7df795da0c4d2eaa09090fae408ffb
#11 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:05b2aa84fbb14d46a2428ada51f12a750d9a6a7322c0a63b3b82bda36d00b178
#13 writing image sha256:05b2aa84fbb14d46a2428ada51f12a750d9a6a7322c0a63b3b82bda36d00b178 done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:d3aefb5dc6d4b4b44ed4522dbdda9fae1053165482b72be0ef53ab2a4ab2fc21
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:c6182521eafe5a172678b6d0479813e2e45888174b29cd6804fd43226a117e4b
#2 transferring context: 34B done
#2 DONE 0.1s

#6 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#6 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#6 CACHED

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/cctz_fuzz_cctz-intermediate:latest
#3 sha256:73f58d387f39ec8a578144c988c838d1b3fd54d8f633e1da45485f1d6e8d13b1
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#11 [internal] load build context
#11 sha256:740e07eceef98ded53629827dda07aa136575e316d628ff624cc5afcb1fa9666
#11 DONE 0.0s

#5 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/cctz_fuzz_cctz-intermediate
#5 sha256:251466240ba52e1af0b339b9b0ab793ba51900b39304422f3267bb6e0dc2d05b
#5 DONE 0.0s

#20 importing cache manifest from gcr.io/fuzzbench/builders/afl/cctz_fuzz_cctz
#20 sha256:ade22520d9a7b94ec716ff7446a5affaff976afc872667a0015148a175a2fde0
#20 ERROR: gcr.io/fuzzbench/builders/afl/cctz_fuzz_cctz:latest: not found

#11 [internal] load build context
#11 sha256:740e07eceef98ded53629827dda07aa136575e316d628ff624cc5afcb1fa9666
#11 transferring context: 742.38kB 0.2s done
#11 DONE 0.2s

#5 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/cctz_fuzz_cctz-intermediate
#5 sha256:251466240ba52e1af0b339b9b0ab793ba51900b39304422f3267bb6e0dc2d05b
#5 DONE 0.9s

#7 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#7 sha256:66898a0ded431c22dfa8f37d1f1b3182ef1c01d02ebecb254b640ed6669de8e7
#7 DONE 0.7s

#8 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#8 sha256:236d6fc528e48403184fdd52fe4fabd230ff9dcc21b50f6520d6554a110d0daa
#8 DONE 21.7s

#9 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#9 sha256:0c7cd29af86f8617890b5c7ab224d41ebb71c1d33e5cc92f89c9dc7ab327505f
#9 DONE 0.3s

#10 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#10 sha256:af830dd7f43d3f763ed34d01e643fb75b1d7b64d6ce2995eb658a6bd46c1aa1a
#10 DONE 32.0s

#12 [stage-1  6/13] COPY fuzzers /src/fuzzers
#12 sha256:f532ff7d2a9e59464d7b6cd27a1dc46de43388317282b79230c3498e69d7de7c
#12 DONE 0.5s

#13 [stage-1  7/13] RUN touch /src/__init__.py
#13 sha256:35ff81768ae0b692d982839e94e88e13ef3b32b24be5bf5e9f26be108f9bcb7f
#13 DONE 2.1s

#14 [stage-1  8/13] COPY benchmarks/cctz_fuzz_cctz/benchmark.yaml /
#14 sha256:e7a70e29c34385d331107f55090cb937536f251b8e89a49ddd1ecc8a40b2399a
#14 DONE 0.5s

#15 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#15 sha256:12aa5a68e35a659a06a91c690e6be7733555efc792f0352fe78877f7ae71b0bd
#15 DONE 1.6s

#16 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#16 sha256:badf3915909bc3147c42b019dd5c942ab37557e0a5d5fb80ac272551b259c9c5
#16 DONE 0.3s

#17 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#17 sha256:6e183477e8ab0806a7f9994cb9c353bfa0825ea3f1c832aa5d926e1a8d49eac2
#17 1.130 Checking out commit 13214d93
#17 3.128 From https://github.com/google/cctz
#17 3.128  * [new tag]         v1.0       -> v1.0
#17 3.128  * [new tag]         v2.0       -> v2.0
#17 3.128  * [new tag]         v2.1       -> v2.1
#17 3.129  * [new tag]         v2.2       -> v2.2
#17 3.129  * [new tag]         v2.3       -> v2.3
#17 3.138 error: pathspec '13214d93' did not match any file(s) known to git
#17 3.147 error: pathspec '13214d93' did not match any file(s) known to git
#17 3.161 error: pathspec '13214d93' did not match any file(s) known to git
#17 3.201 error: pathspec '13214d93' did not match any file(s) known to git
#17 3.331 Checkout unsuccessful.
#17 DONE 3.9s

#18 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#18 sha256:1ce3f87fc89214f71eaa5bb5abeb0b417d90440b199e3d80aa93765d8e062013
#18 DONE 1.4s

#19 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#19 sha256:6dc7a5a3cb1da3254d29debc267cf385820017470b538d69a3b5b54e9ae0b3d7
#19 1.312 Run fuzzer_build to build the target
#19 1.563 FUZZ_TARGET = fuzz_cctz
#19 1.563 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#19 1.563 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#19 1.577 Building benchmark cctz_fuzz_cctz with fuzzer afl
#19 1.580 + mkdir build
#19 1.583 + cd build
#19 1.583 + cmake -DBUILD_TESTING=OFF ../
#19 2.055 -- The C compiler identification is Clang 14.0.0
#19 2.587 -- The CXX compiler identification is Clang 14.0.0
#19 2.623 -- Detecting C compiler ABI info
#19 2.989 -- Detecting C compiler ABI info - done
#19 3.107 -- Check for working C compiler: /usr/local/bin/clang - skipped
#19 3.107 -- Detecting C compile features
#19 3.107 -- Detecting C compile features - done
#19 3.123 -- Detecting CXX compiler ABI info
#19 3.535 -- Detecting CXX compiler ABI info - done
#19 3.667 -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
#19 3.667 -- Detecting CXX compile features
#19 3.667 -- Detecting CXX compile features - done
#19 3.703 -- Configuring done
#19 3.759 -- Generating done
#19 3.759 -- Build files have been written to: /src/cctz/build
#19 3.767 + make
#19 3.821 [  3%] Building CXX object CMakeFiles/cctz.dir/src/civil_time_detail.cc.o
#19 6.800 [  7%] Building CXX object CMakeFiles/cctz.dir/src/time_zone_fixed.cc.o
#19 9.275 [ 11%] Building CXX object CMakeFiles/cctz.dir/src/time_zone_format.cc.o
#19 14.44 [ 14%] Building CXX object CMakeFiles/cctz.dir/src/time_zone_if.cc.o
#19 17.03 [ 18%] Building CXX object CMakeFiles/cctz.dir/src/time_zone_impl.cc.o
#19 21.60 [ 22%] Building CXX object CMakeFiles/cctz.dir/src/time_zone_info.cc.o
#19 29.39 [ 25%] Building CXX object CMakeFiles/cctz.dir/src/time_zone_libc.cc.o
#19 32.12 [ 29%] Building CXX object CMakeFiles/cctz.dir/src/time_zone_lookup.cc.o
#19 34.58 [ 33%] Building CXX object CMakeFiles/cctz.dir/src/time_zone_posix.cc.o
#19 36.44 [ 37%] Building CXX object CMakeFiles/cctz.dir/src/zone_info_source.cc.o
#19 38.15 [ 40%] Linking CXX static library libcctz.a
#19 38.24 [ 40%] Built target cctz
#19 38.27 [ 44%] Building CXX object CMakeFiles/time_tool.dir/src/time_tool.cc.o
#19 42.69 [ 48%] Linking CXX executable time_tool
#19 43.30 [ 48%] Built target time_tool
#19 43.34 [ 51%] Building CXX object examples/CMakeFiles/example1.dir/example1.cc.o
#19 45.84 [ 55%] Linking CXX executable example1
#19 46.41 [ 55%] Built target example1
#19 46.44 [ 59%] Building CXX object examples/CMakeFiles/epoch_shift.dir/epoch_shift.cc.o
#19 48.81 [ 62%] Linking CXX executable epoch_shift
#19 49.32 [ 62%] Built target epoch_shift
#19 49.34 [ 66%] Building CXX object examples/CMakeFiles/hello.dir/hello.cc.o
#19 51.80 [ 70%] Linking CXX executable hello
#19 52.33 [ 70%] Built target hello
#19 52.35 [ 74%] Building CXX object examples/CMakeFiles/example4.dir/example4.cc.o
#19 54.85 [ 77%] Linking CXX executable example4
#19 55.42 [ 77%] Built target example4
#19 55.47 [ 81%] Building CXX object examples/CMakeFiles/classic.dir/classic.cc.o
#19 57.80 [ 85%] Linking CXX executable classic
#19 58.30 [ 85%] Built target classic
#19 58.32 [ 88%] Building CXX object examples/CMakeFiles/example2.dir/example2.cc.o
#19 60.69 [ 92%] Linking CXX executable example2
#19 61.22 [ 92%] Built target example2
#19 61.24 [ 96%] Building CXX object examples/CMakeFiles/example3.dir/example3.cc.o
#19 63.82 [100%] Linking CXX executable example3
#19 64.36 [100%] Built target example3
#19 64.37 + cp /src/fuzz_cctz.cc /src/fuzzers .
#19 64.37 cp: -r not specified; omitting directory '/src/fuzzers'
#19 64.37 Traceback (most recent call last):
#19 64.37   File "<string>", line 1, in <module>
#19 64.37   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#19 64.37     utils.build_benchmark()
#19 64.37   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#19 64.37     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#19 64.37   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#19 64.38     raise CalledProcessError(retcode, cmd)
#19 64.38 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#19 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/cctz_fuzz_cctz:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:278530: .afl-cctz_fuzz_cctz-builder] Error 1
