WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: clamav_clamav.
INFO:root:Please run "make test-run-afl-clamav_clamav" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:eccae5c1f46db0058ea11f0a7bd0208989871a53c656259ed4890a1e34d0cc1b
#1 transferring dockerfile: 1.09kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:44453f9f553652638bafb8ba9842573bc7875da780cfb4bcfdcd0364aae60876
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#10 [internal] load build context
#10 sha256:a0a0269c7dff9b3fb7563845c5ebbe2b02702ff8defba25b488f820875f4b8b5
#10 DONE 0.0s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/clamav_clamav
#4 sha256:30a27a11861af4f3df9b5b2fde643ae0b3d0bd612435c6d657e7eb4864683c05
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/clamav_clamav:latest: not found

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 CACHED

#10 [internal] load build context
#10 sha256:a0a0269c7dff9b3fb7563845c5ebbe2b02702ff8defba25b488f820875f4b8b5
#10 transferring context: 2.85kB done
#10 DONE 0.0s

#6 [2/6] RUN apt-get update && apt-get install -y libssl-dev libcurl4-openssl-dev
#6 sha256:ba3c687e756e33a0abc69a7cdc0eb8afe46be2c9f7528dd709950af38ec0b047
#6 0.553 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#6 0.553 Hit:2 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 0.562 Get:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#6 0.662 Get:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#6 0.688 Get:5 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#6 1.087 Get:6 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1135 kB]
#6 1.229 Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1984 kB]
#6 1.376 Get:8 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [755 kB]
#6 1.431 Get:9 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [828 kB]
#6 1.492 Get:10 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [657 kB]
#6 1.493 Get:11 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [1042 kB]
#6 1.921 Get:12 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [467 kB]
#6 1.972 Get:13 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1557 kB]
#6 2.143 Get:14 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [974 kB]
#6 2.215 Get:15 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [841 kB]
#6 2.488 Fetched 10.6 MB in 2s (5367 kB/s)
#6 2.488 Reading package lists...
#6 4.222 Reading package lists...
#6 5.645 Building dependency tree...
#6 5.868 Reading state information...
#6 6.076 Suggested packages:
#6 6.076   libcurl4-doc libidn11-dev libkrb5-dev libldap2-dev librtmp-dev libssh2-1-dev
#6 6.076   pkg-config zlib1g-dev libssl-doc
#6 6.111 The following NEW packages will be installed:
#6 6.113   libcurl4-openssl-dev libssl-dev
#6 6.186 0 upgraded, 2 newly installed, 0 to remove and 1 not upgraded.
#6 6.186 Need to get 1905 kB of archives.
#6 6.186 After this operation, 9550 kB of additional disk space will be used.
#6 6.186 Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libcurl4-openssl-dev amd64 7.68.0-1ubuntu2.7 [321 kB]
#6 6.314 Get:2 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libssl-dev amd64 1.1.1f-1ubuntu2.10 [1584 kB]
#6 6.688 debconf: delaying package configuration, since apt-utils is not installed
#6 6.745 Fetched 1905 kB in 0s (6234 kB/s)
#6 6.784 Selecting previously unselected package libcurl4-openssl-dev:amd64.
#6 6.784 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21291 files and directories currently installed.)
#6 6.949 Preparing to unpack .../libcurl4-openssl-dev_7.68.0-1ubuntu2.7_amd64.deb ...
#6 6.954 Unpacking libcurl4-openssl-dev:amd64 (7.68.0-1ubuntu2.7) ...
#6 7.036 Selecting previously unselected package libssl-dev:amd64.
#6 7.038 Preparing to unpack .../libssl-dev_1.1.1f-1ubuntu2.10_amd64.deb ...
#6 7.042 Unpacking libssl-dev:amd64 (1.1.1f-1ubuntu2.10) ...
#6 7.258 Setting up libcurl4-openssl-dev:amd64 (7.68.0-1ubuntu2.7) ...
#6 7.275 Setting up libssl-dev:amd64 (1.1.1f-1ubuntu2.10) ...
#6 DONE 7.5s

#7 [3/6] RUN git clone --depth 1 https://github.com/Cisco-Talos/clamav-devel.git
#7 sha256:e02b6f64be7ab2bb3a3339077ebb47897f88e71dfb2febcab29c8afb32cfed95
#7 0.418 Cloning into 'clamav-devel'...
#7 DONE 3.1s

#8 [4/6] RUN git clone --depth 1 https://github.com/Cisco-Talos/clamav-fuzz-corpus.git
#8 sha256:545d4a9b2d062a8ab77b86d0d810da494ebe11c26afc24954f2c857e2eea85d1
#8 0.414 Cloning into 'clamav-fuzz-corpus'...
#8 DONE 1.2s

#9 [5/6] WORKDIR clamav-devel
#9 sha256:bc2aa21b32abcca84e668afc5430ef58d00cc0e5a982a2bc4d079ca48b34d3f0
#9 DONE 0.3s

#11 [6/6] COPY build.sh /src/
#11 sha256:ddb75e62b696a09ec95bd7e896a9ccc2b1014479d0328893d97d499ef5798ddf
#11 DONE 0.2s

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:4eed8b77076a955d0d155057ea3959167b0cc133677af87497e22841b2c60065 done
#12 naming to gcr.io/fuzzbench/builders/benchmark/clamav_clamav done
#12 DONE 0.1s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/clamav_clamav:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:5645086aeadbd37d937efb4ea0680114185414f0551608216c2454e96713d13d
#1 transferring dockerfile: 46B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:7a10577d0a270f6a0419a46802d6ad03c7c9a98c9244929ce48134f1ae871b36
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/clamav_clamav:latest
#3 sha256:4bf07f69de953fc73d256f154e7c5f2468382d727c0625c721bc57780acfb846
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/clamav_clamav
#5 sha256:ad8d4b93202e6aa61cf993bccdc559c407890a0ed1c6d29bf2913cb3064833a8
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate
#4 sha256:b1bb676cbc07742c476457fa231579edf78d42c3e57c26e7c764ba333e6c72db
#4 ERROR: gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/clamav_clamav
#5 sha256:ad8d4b93202e6aa61cf993bccdc559c407890a0ed1c6d29bf2913cb3064833a8
#5 DONE 1.1s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:f6b79b8501126047d97c8c613fd3dbbd1669f7b64852ca51f1342c5df8fb148c
#6 0.360 Cloning into '/afl'...
#6 1.190 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.190 
#6 1.190 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.190 changes and commit them, and you can discard any commits you make in this
#6 1.190 state without impacting any branches by switching back to a branch.
#6 1.190 
#6 1.190 If you want to create a new branch to retain commits you create, you may
#6 1.190 do so (now or later) by using -c with the switch command. Example:
#6 1.190 
#6 1.190   git switch -c <new-branch-name>
#6 1.190 
#6 1.190 Or undo this operation with:
#6 1.190 
#6 1.190   git switch -
#6 1.190 
#6 1.190 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.190 
#6 1.190 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.208 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.209 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.395 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.399 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.821 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.152 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.596 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.757 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.179 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.418 ln -sf afl-as as
#6 5.420 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.422 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.423 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 5.5s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:e4e202923246d7be9afa2740ea8ec669f7c4584271540378cd6c6a553c012e23
#7 0.603 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.603 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.626 Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.651 Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 0.735 Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 1.460 Reading package lists...
#7 3.051 Reading package lists...
#7 4.564 Building dependency tree...
#7 4.783 Reading state information...
#7 5.035 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.035 0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
#7 5.043 --2022-02-18 00:28:59--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.046 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.111.133, 185.199.108.133, 185.199.109.133, ...
#7 5.058 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.111.133|:443... connected.
#7 5.081 HTTP request sent, awaiting response... 200 OK
#7 5.253 Length: 9177 (9.0K) [text/plain]
#7 5.253 Saving to: '/afl/afl_driver.cpp'
#7 5.253 
#7 5.253      0K ........                                              100% 6.56M=0.001s
#7 5.255 
#7 5.255 2022-02-18 00:28:59 (6.56 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.255 
#7 7.103 ar: creating /libAFL.a
#7 DONE 7.1s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:4acc12f9ea060d36c94ac47d92a386ff77db30eb99194c8c9d1e3a9e94fb558c
#8 writing image sha256:4acc12f9ea060d36c94ac47d92a386ff77db30eb99194c8c9d1e3a9e94fb558c done
#8 naming to gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:fc765e9c8c7975cb4407ed4d85495c8cbd6d3001441cdb2ee968f2d93e65f352
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:4ff88dd05567cbe3696ae668631d504e1ec6f3b63c56525ec73725035269cb39
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:cddc013bebbed0f69fde49703a3cba14dc9d58b56a65d3006901bf95d4cb5661
#8 transferring context: 559B 0.0s done
#8 DONE 0.0s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:468cd188cfc02abc236bbdb8fbbf3362a579434e07f5ebc1ae1624a319a7ed23
#11 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:e1fd0d4f87adba68903ef5108a343898fe24e1bd56bb86d681f70feb6a788a86
#9 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:0e2490457e0e192cf78eb0d8321194aee3830b665f5ae38b76895df0763e724d
#10 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:bb71fa8fa28c008a5bc8a34fa9bf0242587a86c9567f2999885915296d369ec0
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:b63d9e35e1d27432ba62a0e358b3878140f549eb12be87f86addae674564f405 done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:a9a11df745e9284bf52fba132d0fd741384af61bef2334b82bbd34bc299bb607
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:f27532fb72a985ab130474eabe7aa43ebee169a8a0be54a44606b3fa2f5d4a3f
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate:latest
#3 sha256:55d3bb36fffc2ef7003eba480d7bc213e8acb7e1e917b235ced41417e556e2a2
#3 DONE 0.0s

#20 importing cache manifest from gcr.io/fuzzbench/builders/afl/clamav_clamav
#20 sha256:193645782439575c9f61216c5aa7383cc2cb0232175ed12d4baefba586e877c5
#20 ...

#11 [internal] load build context
#11 sha256:45656c0feb532ca95fa422053e60b277c28f5fe5f8caf498473b3503abaf2e6b
#11 DONE 0.0s

#5 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate
#5 sha256:4692dda96a0583f503a4ae12706763bc21032ec7a31a9ba71c654c98f5e15b6d
#5 DONE 0.0s

#6 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#6 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#6 DONE 0.0s

#20 importing cache manifest from gcr.io/fuzzbench/builders/afl/clamav_clamav
#20 sha256:193645782439575c9f61216c5aa7383cc2cb0232175ed12d4baefba586e877c5
#20 ERROR: gcr.io/fuzzbench/builders/afl/clamav_clamav:latest: not found

#6 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#6 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#6 CACHED

#11 [internal] load build context
#11 sha256:45656c0feb532ca95fa422053e60b277c28f5fe5f8caf498473b3503abaf2e6b
#11 transferring context: 669.86kB 0.1s done
#11 DONE 0.1s

#5 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate
#5 sha256:4692dda96a0583f503a4ae12706763bc21032ec7a31a9ba71c654c98f5e15b6d
#5 DONE 0.3s

#7 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#7 sha256:db550e26be46d3088308ac944a857a6c921e06fdb2ae192018853975f91ba91a
#7 DONE 0.3s

#8 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#8 sha256:3351525898aa7a894476159009e0a8295377ba08291a17b00ec86c3240b9225c
#8 DONE 13.7s

#9 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#9 sha256:65b5269cf793215ebb2dd918ac5f819ad05e146fc0fa606d8bf4d3ff40c0780d
#9 DONE 0.4s

#10 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#10 sha256:a651ba13d8e746ea44f2391a40b347f9c057bfe808d0aa0511ffddf2ca90c830
#10 DONE 20.7s

#12 [stage-1  6/13] COPY fuzzers /src/fuzzers
#12 sha256:55e9b10d8560ff6f3e695a9597c4921f5b5608df951a2fc1b431af0ab3f9e800
#12 DONE 0.4s

#13 [stage-1  7/13] RUN touch /src/__init__.py
#13 sha256:ff5825349685761e3c1a165850824e7b952ab8d6d6a187e373180997decf6da2
#13 DONE 1.1s

#14 [stage-1  8/13] COPY benchmarks/clamav_clamav/benchmark.yaml /
#14 sha256:1e7ecb545b7893d751d1cdb58b99619632058c23c42552b5751dfa4614bdb2a7
#14 DONE 0.4s

#15 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#15 sha256:05f39bd4eee7624521b0baddad997a0848c18e2730278923577ddc674beec307
#15 DONE 0.6s

#16 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#16 sha256:8f962abcfed4dba9de9027771bfb6f47a00899d856a4a8e64f38d3813dab5fa1
#16 DONE 0.3s

#17 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#17 sha256:f870803a10530a10db773e69fbef0c3ddb4f838c2763115b93ddba0411f0b341
#17 0.521 Checking out commit 606824ae
#17 23.45 From https://github.com/Cisco-Talos/clamav-devel
#17 23.45  * [new tag]             clamav-0.101.0     -> clamav-0.101.0
#17 23.45  * [new tag]             clamav-0.102.0     -> clamav-0.102.0
#17 23.45  * [new tag]             clamav-0.103.0     -> clamav-0.103.0
#17 23.45  * [new tag]             clamav-0.103.0-rc  -> clamav-0.103.0-rc
#17 23.45  * [new tag]             clamav-0.103.0-rc2 -> clamav-0.103.0-rc2
#17 23.45  * [new tag]             clamav-0.96        -> clamav-0.96
#17 23.45  * [new tag]             clamav-0.96.2      -> clamav-0.96.2
#17 23.45  * [new tag]             clamav-0.96.3      -> clamav-0.96.3
#17 23.45  * [new tag]             clamav-0.96.4      -> clamav-0.96.4
#17 23.45  * [new tag]             clamav-0.96.5      -> clamav-0.96.5
#17 23.45  * [new tag]             clamav-0.96rc1     -> clamav-0.96rc1
#17 23.45  * [new tag]             clamav-0.96rc2     -> clamav-0.96rc2
#17 23.45  * [new tag]             clamav-0.97        -> clamav-0.97
#17 23.45  * [new tag]             clamav-0.97rc      -> clamav-0.97rc
#17 23.45  * [new tag]             clamav-0.98-dmgxar -> clamav-0.98-dmgxar
#17 23.45  * [new tag]             clamav-0.99-beta1  -> clamav-0.99-beta1
#17 23.45  * [new tag]             merge-llvm-79908   -> merge-llvm-79908
#17 23.45  * [new tag]             merge-llvm-80601   -> merge-llvm-80601
#17 23.45  * [new tag]             merge-llvm-83242   -> merge-llvm-83242
#17 23.45  * [new tag]             merge-llvm-90002   -> merge-llvm-90002
#17 23.45  * [new tag]             merge-llvm-91214   -> merge-llvm-91214
#17 23.45  * [new tag]             merge-llvm-91428   -> merge-llvm-91428
#17 23.45  * [new tag]             merge-llvm-92222   -> merge-llvm-92222
#17 23.45  * [new tag]             merge-llvm-94539   -> merge-llvm-94539
#17 23.45  * [new tag]             merge-llvm-97877   -> merge-llvm-97877
#17 23.45  * [new tag]             r5076              -> r5076
#17 23.46 error: pathspec '606824ae' did not match any file(s) known to git
#17 23.99 error: pathspec '606824ae' did not match any file(s) known to git
#17 24.00 error: pathspec '606824ae' did not match any file(s) known to git
#17 24.01 error: pathspec '606824ae' did not match any file(s) known to git
#17 24.16 Checkout unsuccessful.
#17 DONE 24.5s

#18 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#18 sha256:e838d06df88b2ba0482e2e3faaf8a0658b91ff3f439d645cfb5c5f818de0b159
#18 DONE 1.0s

#19 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#19 sha256:02dbb83c626a636a69970cccb76c22b3fec022e1ebb440826dbc8217f155707f
#19 0.614 Run fuzzer_build to build the target
#19 0.744 FUZZ_TARGET = clamav
#19 0.744 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#19 0.744 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#19 0.757 Building benchmark clamav_clamav with fuzzer afl
#19 0.761 + rm -rf /work/build
#19 0.765 + mkdir -p /work/build
#19 0.768 + cd /work/build
#19 0.768 + ac_cv_c_mmap_anonymous=no
#19 0.768 + /src/clamav-devel/configure --disable-mempool --enable-fuzz=yes --with-libjson=no --with-pcre=no --enable-static=yes --enable-shared=no --disable-llvm --host=x86_64-unknown-linux-gnu
#19 0.769 /src/build.sh: line 24: /src/clamav-devel/configure: No such file or directory
#19 0.770 Traceback (most recent call last):
#19 0.770   File "<string>", line 1, in <module>
#19 0.770   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#19 0.770     utils.build_benchmark()
#19 0.770   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#19 0.770     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#19 0.770   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#19 0.770     raise CalledProcessError(retcode, cmd)
#19 0.770 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 127.
#19 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/clamav_clamav:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2791584: .afl-clamav_clamav-builder] Error 1
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:e18265d1d0310107da1b884ddea0b844c978becea1690a74aaadde4ac02c738c
#2 transferring context: 2B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:61faeaf139bda402e345b6f83fd09b5c2ec5f30d352e94ff10175b6391fea0e9
#1 transferring dockerfile: 32B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/clamav_clamav
#4 sha256:30a27a11861af4f3df9b5b2fde643ae0b3d0bd612435c6d657e7eb4864683c05
#4 DONE 0.0s

#10 [internal] load build context
#10 sha256:be989e68dd542a2b4fb9c8cf101572bdd28dd61bf3c4eee73c9fc027c0065831
#10 transferring context: 30B done
#10 DONE 0.1s

#8 [4/6] RUN git clone --depth 1 https://github.com/Cisco-Talos/clamav-fuzz-corpus.git
#8 sha256:545d4a9b2d062a8ab77b86d0d810da494ebe11c26afc24954f2c857e2eea85d1
#8 CACHED

#9 [5/6] WORKDIR clamav-devel
#9 sha256:bc2aa21b32abcca84e668afc5430ef58d00cc0e5a982a2bc4d079ca48b34d3f0
#9 CACHED

#7 [3/6] RUN git clone --depth 1 https://github.com/Cisco-Talos/clamav-devel.git
#7 sha256:e02b6f64be7ab2bb3a3339077ebb47897f88e71dfb2febcab29c8afb32cfed95
#7 CACHED

#6 [2/6] RUN apt-get update && apt-get install -y libssl-dev libcurl4-openssl-dev
#6 sha256:ba3c687e756e33a0abc69a7cdc0eb8afe46be2c9f7528dd709950af38ec0b047
#6 CACHED

#11 [6/6] COPY build.sh /src/
#11 sha256:bffe4b020d187d2239aad8fa14c85a5b156eb3dcec9d722ba193d886a3fe4501
#11 CACHED

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:4eed8b77076a955d0d155057ea3959167b0cc133677af87497e22841b2c60065 done
#12 naming to gcr.io/fuzzbench/builders/benchmark/clamav_clamav done
#12 DONE 0.3s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:b53eea3d51fd2ad783d7b5a3c0c5029bb8da7f71dc7a288253191d6fb7bb7dfc
#2 transferring context: 2B done
#2 DONE 0.1s

#1 [internal] load build definition from builder.Dockerfile
#1 sha256:6458559264b097dc31e41735fd214b8629240fc5d02c785e1db2104488ee957b
#1 transferring dockerfile: 46B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/clamav_clamav:latest
#3 sha256:4bf07f69de953fc73d256f154e7c5f2468382d727c0625c721bc57780acfb846
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate
#4 sha256:b1bb676cbc07742c476457fa231579edf78d42c3e57c26e7c764ba333e6c72db
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/clamav_clamav
#5 sha256:ad8d4b93202e6aa61cf993bccdc559c407890a0ed1c6d29bf2913cb3064833a8
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:f6b79b8501126047d97c8c613fd3dbbd1669f7b64852ca51f1342c5df8fb148c
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:e4e202923246d7be9afa2740ea8ec669f7c4584271540378cd6c6a553c012e23
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:4acc12f9ea060d36c94ac47d92a386ff77db30eb99194c8c9d1e3a9e94fb558c
#8 writing image sha256:4acc12f9ea060d36c94ac47d92a386ff77db30eb99194c8c9d1e3a9e94fb558c 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:5cbb8b0f1329c4c8f0fe4b054fca6569f8691bfb5f571b74fa349a6b77acbd6a
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:a80f4373f9de30a79b4993c4f37e5a5fa347d99bfa97586cd409cd50a002d258
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:21dd2731b69d633fa7e8fae45c61a52836dc3a0f172440594cfc3e2279e5392a
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#9 [4/7] COPY ./requirements.txt /
#9 sha256:3ee0b3c47828af339be53bf0896b068aa96577fed68df8d51881f5401a4e5d58
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:2c673111cc07a64454b5043498332c14a8eb8e876b47f61fd4ee4014bb6de004
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:a56e57e3c452bd4011ef546fc36b49f3f2d3e2540e467a0dbf23ac3643e603b9
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:b9a67e56bca2d234dbabf849da662f1ea3237479e032f71fdbb0f39f2b6eda6e
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:b63d9e35e1d27432ba62a0e358b3878140f549eb12be87f86addae674564f405 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:2177e3434f91e93d04cf25d642e5f8da22a5ab0ad4d17a29a714c2c6eda0c25c
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:f3567daa1cd45f6578d88004bce97d4b87052f2e8f739e34aa15ea2c636454a1
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate:latest
#3 sha256:55d3bb36fffc2ef7003eba480d7bc213e8acb7e1e917b235ced41417e556e2a2
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:7076fcb1add770b3ea395a8b5b4aec788fd2354625b1cdca696b1c9651689496
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate
#6 sha256:4692dda96a0583f503a4ae12706763bc21032ec7a31a9ba71c654c98f5e15b6d
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/clamav_clamav
#5 sha256:193645782439575c9f61216c5aa7383cc2cb0232175ed12d4baefba586e877c5
#5 ERROR: gcr.io/fuzzbench/builders/afl/clamav_clamav:latest: not found

#12 [internal] load build context
#12 sha256:7076fcb1add770b3ea395a8b5b4aec788fd2354625b1cdca696b1c9651689496
#12 transferring context: 669.86kB 0.1s done
#12 DONE 0.2s

#15 [stage-1  8/13] COPY benchmarks/clamav_clamav/benchmark.yaml /
#15 sha256:16b83548209c3b1a52f9da220faec8a732fcae34cc8f00bc7ccc00fbc4cb8596
#15 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:15c3a2f98a9476938c67cd1102087836c109da5b2c240c14c8317246cb0d5ba2
#16 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:cf11168e9ab68cc88d8421df0501a48b0b4ba8b43b89d9cc00b16cfeffa9e7c8
#17 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:0ce65fa69fe9f743350caa351ac1af0c147d57ab2c61f7651863d5096c5398c2
#13 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:3351525898aa7a894476159009e0a8295377ba08291a17b00ec86c3240b9225c
#9 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:db550e26be46d3088308ac944a857a6c921e06fdb2ae192018853975f91ba91a
#8 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:89e7644ef2d37a1509ce34065d13e53cac1f3fec4b4ad6defea588cc9bcde092
#14 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:65b5269cf793215ebb2dd918ac5f819ad05e146fc0fa606d8bf4d3ff40c0780d
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:a651ba13d8e746ea44f2391a40b347f9c057bfe808d0aa0511ffddf2ca90c830
#11 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:519b4db130a38fb371beec696f2c3b011dfa26a17ce91bbf38cd9915824cad66
#18 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:be2eccc71960983c1e212652291cec424f1672d913f0d21e6c8d83c2f616c268
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:e6b9e6e086acb29ce703b704bb264b1a28d47d8770e0f9e9449868f5ebbe768c
#20 0.436 Run fuzzer_build to build the target
#20 0.559 FUZZ_TARGET = clamav
#20 0.559 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.559 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.564 Building benchmark clamav_clamav with fuzzer afl
#20 0.567 + rm -rf /work/build
#20 0.569 + mkdir -p /work/build
#20 0.571 + cd /work/build
#20 0.571 + ac_cv_c_mmap_anonymous=no
#20 0.571 + /src/clamav-devel/configure --disable-mempool --enable-fuzz=yes --with-libjson=no --with-pcre=no --enable-static=yes --enable-shared=no --disable-llvm --host=x86_64-unknown-linux-gnu
#20 0.572 /src/build.sh: line 24: /src/clamav-devel/configure: No such file or directory
#20 0.572 Traceback (most recent call last):
#20 0.572   File "<string>", line 1, in <module>
#20 0.573   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 0.573     utils.build_benchmark()
#20 0.573   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 0.573     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 0.573   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 0.573     raise CalledProcessError(retcode, cmd)
#20 0.573 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 127.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/clamav_clamav:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2791584: .afl-clamav_clamav-builder] Error 1
