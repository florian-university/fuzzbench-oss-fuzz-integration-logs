WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: bzip2_bzip2_decompress_target.
INFO:root:Please run "make test-run-afl-bzip2_bzip2_decompress_target" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:1d6d9c1aa6b0eeac4cea10e46ed5eb295298b3a4ed3105d096e828335356c786
#1 transferring dockerfile: 956B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:e885bf4de076a3ee1ed42ae6a2926134b31daf5807e5f84a4dd398958ef57255
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.3s

#9 [internal] load build context
#9 sha256:b38d8bcf678476f22b8acb19941c4ed66e656e44b866536eb1229d2adf832b76
#9 DONE 0.0s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/bzip2_bzip2_decompress_target
#4 sha256:499b5963c4e61d31b5ac4b40d78814785e2a738ef8b8cb240754bc28b5c1836f
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/bzip2_bzip2_decompress_target:latest: not found

#6 [2/6] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#6 sha256:7405df8f6b96d6d4d700eabe5ab37674a5ce0a028510ebaf8e080d143e8faf91
#6 CACHED

#9 [internal] load build context
#9 sha256:b38d8bcf678476f22b8acb19941c4ed66e656e44b866536eb1229d2adf832b76
#9 transferring context: 6.36kB done
#9 DONE 0.0s

#7 [3/6] RUN git clone git://sourceware.org/git/bzip2.git
#7 sha256:120cc87724adbe604e729fbece8b6f8625dd7d17d8ae50d772e6aa1e49547a97
#7 0.359 Cloning into 'bzip2'...
#7 DONE 2.1s

#8 [4/6] RUN git clone git://sourceware.org/git/bzip2-tests.git
#8 sha256:fc1f1ec3a2603a8bc3a0ea6f023f8a2dc2edd0fb7ea5207a79be700f4bc500fa
#8 0.447 Cloning into 'bzip2-tests'...
#8 DONE 2.5s

#10 [5/6] COPY build.sh *.c /src/
#10 sha256:f85146a1675b39053e9444ec44f4e9e111b46d72d285fc568ba9be73a5c985b6
#10 DONE 0.1s

#11 [6/6] WORKDIR /src
#11 sha256:0dc7b63f60a30c3a5db30f1a1dacb3262395fe60b11fa4a009c6633012c16ae5
#11 DONE 0.1s

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:86f651c55dc58de3812dc0f3b75cdd13c41339e24fec3440eafffaef82da4b63 done
#12 naming to gcr.io/fuzzbench/builders/benchmark/bzip2_bzip2_decompress_target done
#12 DONE 0.1s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/bzip2_bzip2_decompress_target:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:6db0ea0ef0f978f81d07e9dc8254d29fa6f7d143158b5127e24f1c89d6b6d981
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:b0ace92be69ac04e31b81a4bc7f323e6837f7d17dcc8af1dbe16d6afc28a9723
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/bzip2_bzip2_decompress_target:latest
#3 sha256:56b0824e331cb3fe2acb4534df42f70b2fda5c584f08891492cf06f6b0ae8a02
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/bzip2_bzip2_decompress_target
#5 sha256:5379383fb0c33c03477ce01ee87cf637533e242596680b267beaef390aee33c3
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target-intermediate
#4 sha256:e225ac6d953d2759d73d72ff7842853ad87fdbbe24b219f8470cbd27d54f4053
#4 ERROR: gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/bzip2_bzip2_decompress_target
#5 sha256:5379383fb0c33c03477ce01ee87cf637533e242596680b267beaef390aee33c3
#5 DONE 0.2s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:50a18bb014cca6a50df5ab0e364c88db49c086242127598c582e1f0420d25fe9
#6 0.363 Cloning into '/afl'...
#6 1.818 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.818 
#6 1.818 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.818 changes and commit them, and you can discard any commits you make in this
#6 1.818 state without impacting any branches by switching back to a branch.
#6 1.818 
#6 1.818 If you want to create a new branch to retain commits you create, you may
#6 1.818 do so (now or later) by using -c with the switch command. Example:
#6 1.818 
#6 1.818   git switch -c <new-branch-name>
#6 1.818 
#6 1.818 Or undo this operation with:
#6 1.818 
#6 1.818   git switch -
#6 1.818 
#6 1.818 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.818 
#6 1.818 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.840 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.840 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 2.013 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 2.018 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 4.398 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.713 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 5.138 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 5.292 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.691 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.925 ln -sf afl-as as
#6 5.926 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.929 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.930 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.1s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:8a3ec193c5df761abd1e0cded808982cb08787cf67b0b2b5a247e3f55082aec0
#7 0.593 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.597 Hit:2 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.599 Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.622 Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 0.732 Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 1.438 Reading package lists...
#7 2.962 Reading package lists...
#7 4.379 Building dependency tree...
#7 4.590 Reading state information...
#7 4.837 wget is already the newest version (1.20.3-1ubuntu2).
#7 4.837 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 4.844 --2022-02-16 19:45:56--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 4.858 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.109.133, 185.199.110.133, 185.199.111.133, ...
#7 4.869 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.109.133|:443... connected.
#7 4.894 HTTP request sent, awaiting response... 200 OK
#7 5.065 Length: 9177 (9.0K) [text/plain]
#7 5.065 Saving to: '/afl/afl_driver.cpp'
#7 5.065 
#7 5.065      0K ........                                              100% 8.58M=0.001s
#7 5.066 
#7 5.066 2022-02-16 19:45:57 (8.58 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.066 
#7 6.793 ar: creating /libAFL.a
#7 DONE 6.9s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:ffb53ae0ecbe773cb018679be31d62d6978a271ff53c5506ca908a57ed1d235f done
#8 naming to gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:3f1783f27676799022c07faf55789252a902397f1e9344a0eeb04205b025ada1
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:7a10fae3b66ca3b7078eb7deee10ce215e04d836cc1509cae507506abd1ba0d0
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:d26d649c20f28e87fbb13413204320591b1309fd4554c654843a3da6200faafe
#8 transferring context: 559B 0.1s done
#8 DONE 0.2s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:278ee4b461333cc64eefd48bedee96ee6709e4e7d8f3d6eceb217a3df98a2bf0
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:2087eedda39c57ce13557c0dea2d4d14225152b2847264ee31869661a3f96d6c
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:072fbfb9accd0bdac70708b8d7c436522f838235f1f5348eaeb247ec30dc9f46
#9 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:faf7aff7b14f225fceb12a99ccdb77b1397b1637faab361f69b92d464fdcebe0
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:dcb2d88a6d325881a6328f3c76a05d6452c759042391fa49de04b4622089469a
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:e23e4d0ede430bc869fd0163aeda49f4d84f9e3e1ff2c2afcea20cd9754a9a5d
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target-intermediate:latest
#3 sha256:6f3977b73c9125b872de6259b08bd0d2dfdf3ce796cd45a52517f2fb64e4396c
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:0b7fc317d0547b71c3e920355057c0e2c81c77bc81a430e22fd4c69a5fefa87e
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target-intermediate
#6 sha256:00a8114983bb96aa8bbd4c7f3e08a1de146188ff9a91437031c0f31c82e5ccc5
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target
#5 sha256:a4f26f0923c14a54f8bed755771b6883592e70f36df59a0225003162c0496bd3
#5 ERROR: gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:0b7fc317d0547b71c3e920355057c0e2c81c77bc81a430e22fd4c69a5fefa87e
#12 transferring context: 669.91kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target-intermediate
#6 sha256:00a8114983bb96aa8bbd4c7f3e08a1de146188ff9a91437031c0f31c82e5ccc5
#6 DONE 0.2s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:58f75c39ac634abb4aad735bad05f15c384645b99eaa1acf7e3bb3ca53246fe7
#8 DONE 0.4s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:02ce4d0f5c8beab917da7d5958ed39cccdb86590a364c8514df7ce370a433dea
#9 DONE 29.7s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:77dca49fa3284f8fbf7e66faa4354b950aadde1d263fb7686e210e0420ebf310
#10 DONE 0.2s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:1c76abf53adca454dacb48644c2baed3c664012d86c2b11e043c129f1072c4b6
#11 DONE 18.1s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:2a2a45487efa7ea886890af7ff2dd9d1cd0a79a2d01b82c3a3fce493c717a2a7
#13 DONE 0.3s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:65beb6a9221c6d2762d0908303d0cd30318f5b429af187906fce450a41deef5b
#14 DONE 0.7s

#15 [stage-1  8/13] COPY benchmarks/bzip2_bzip2_decompress_target/benchmark.yaml /
#15 sha256:dcc41adb32d77e4d2e16ea8add4de10c156a0d44db01720e493bb0ccc71ccd32
#15 DONE 0.2s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:dffe3a3c49cb3cf2505fa310ea87a6a7de6439c2e09501390aa104041928d3bf
#16 DONE 0.5s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:30ea5c38aaa48aaa193d4264f2b459cf2d0be06e104457683eb508f3a9b0054b
#17 DONE 0.2s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:a577486a6bbb888a999fe8704cb09534bf567dacff28fdda0c330da15f6851d7
#18 0.487 Checking out commit d561c49a
#18 0.499 error: pathspec 'd561c49a' did not match any file(s) known to git
#18 0.506 error: pathspec 'd561c49a' did not match any file(s) known to git
#18 0.536 error: pathspec 'd561c49a' did not match any file(s) known to git
#18 0.544 error: pathspec 'd561c49a' did not match any file(s) known to git
#18 0.588 error: pathspec 'd561c49a' did not match any file(s) known to git
#18 0.596 Checkout unsuccessful.
#18 DONE 0.7s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:a70accf500772a925e9cd190d641533c2d790ef7e8af1d2d9b4ce5d5a91bbf7f
#19 DONE 0.6s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:f6519827099c125c1a8785e3aaf905fcec87f4896f60a0532c41a4db74525612
#20 0.482 Run fuzzer_build to build the target
#20 0.603 FUZZ_TARGET = bzip2_decompress_target
#20 0.603 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.603 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.613 Building benchmark bzip2_bzip2_decompress_target with fuzzer afl
#20 0.616 + cd bzip2
#20 0.616 + SRCL=(blocksort.o huffman.o crctable.o randtable.o compress.o decompress.o bzlib.o)
#20 0.617 + for source in ${SRCL[@]}
#20 0.617 ++ basename blocksort.o .o
#20 0.618 + name=blocksort
#20 0.618 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c blocksort.c
#20 1.336 + for source in ${SRCL[@]}
#20 1.336 ++ basename huffman.o .o
#20 1.337 + name=huffman
#20 1.337 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c huffman.c
#20 1.525 + for source in ${SRCL[@]}
#20 1.526 ++ basename crctable.o .o
#20 1.527 + name=crctable
#20 1.527 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c crctable.c
#20 1.584 + for source in ${SRCL[@]}
#20 1.584 ++ basename randtable.o .o
#20 1.585 + name=randtable
#20 1.585 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c randtable.c
#20 1.634 + for source in ${SRCL[@]}
#20 1.635 ++ basename compress.o .o
#20 1.636 + name=compress
#20 1.636 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c compress.c
#20 2.605 + for source in ${SRCL[@]}
#20 2.606 ++ basename decompress.o .o
#20 2.607 + name=decompress
#20 2.607 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c decompress.c
#20 4.109 + for source in ${SRCL[@]}
#20 4.109 ++ basename bzlib.o .o
#20 4.110 + name=bzlib
#20 4.110 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c bzlib.c
#20 4.755 + rm -f libbz2.a
#20 4.757 + ar cq libbz2.a blocksort.o huffman.o crctable.o randtable.o compress.o decompress.o bzlib.o
#20 4.775 + ranlib libbz2.a
#20 4.805 + for file in $SRC/*.c
#20 4.805 ++ basename /src/bzip2_compress_target.c .c
#20 4.807 + name=bzip2_compress_target
#20 4.807 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -I . /src/bzip2_compress_target.c -o /out/bzip2_compress_target.o
#20 4.861 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/bzip2_compress_target /out/bzip2_compress_target.o /libAFL.a libbz2.a
#20 5.387 + rm -f /out/bzip2_compress_target.o
#20 5.389 + for file in $SRC/*.c
#20 5.389 ++ basename /src/bzip2_decompress_target.c .c
#20 5.390 + name=bzip2_decompress_target
#20 5.390 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -I . /src/bzip2_decompress_target.c -o /out/bzip2_decompress_target.o
#20 5.438 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/bzip2_decompress_target /out/bzip2_decompress_target.o /libAFL.a libbz2.a
#20 5.672 + rm -f /out/bzip2_decompress_target.o
#20 5.674 + awk -F/ '{a[$NF]=$0}END{for(i in a)print a[i]}'
#20 5.674 + find /src/bzip2 /src/bzip2-tests /src/bzip2_compress_target.c /src/bzip2_decompress_target.c -type f -name '*.bz2' -size -100k
#20 5.674 + zip -j0r bzip2_decompress_target_seed_corpus.zip -@
#20 5.681   adding: trash.bz2 (stored 0%)
#20 5.682   adding: 510B.bz2 (stored 0%)
#20 5.682   adding: ch255.bz2 (stored 0%)
#20 5.682   adding: random.data.bz2 (stored 0%)
#20 5.683   adding: hello-world.bz2 (stored 0%)
#20 5.684   adding: 765B.bz2 (stored 0%)
#20 5.684   adding: repet.bz2 (stored 0%)
#20 5.684   adding: SigVer.rsp.bz2 (stored 0%)
#20 5.686   adding: pass-sawtooth.bz2 (stored 0%)
#20 5.686   adding: rand.bz2 (stored 0%)
#20 5.687   adding: bla.tar.bz2 (stored 0%)
#20 5.687   adding: aaa.bz2 (stored 0%)
#20 5.687   adding: sample1.bz2 (stored 0%)
#20 5.688   adding: sample3.bz2 (stored 0%)
#20 5.688   adding: codelen20.bz2 (stored 0%)
#20 5.689   adding: multiple.bz2 (stored 0%)
#20 5.689   adding: pass-random1.bz2 (stored 0%)
#20 5.690   adding: incomp-1.bz2 (stored 0%)
#20 5.690   adding: idx899999.bz2 (stored 0%)
#20 5.691   adding: gap.bz2 (stored 0%)
#20 5.691   adding: sample2.bz2 (stored 0%)
#20 5.693   adding: 45MB-fb.bz2 (stored 0%)
#20 5.693   adding: pss-vect.txt.bz2 (stored 0%)
#20 5.694   adding: empty.bz2 (stored 0%)
#20 5.694   adding: bla.txt.bz2 (stored 0%)
#20 5.695   adding: 32767.bz2 (stored 0%)
#20 5.695   adding: COMPRESS-131.bz2 (stored 0%)
#20 5.695   adding: concat.bz2 (stored 0%)
#20 5.696   adding: pass-random2.bz2 (stored 0%)
#20 5.696   adding: e.txt.bz2 (stored 0%)
#20 5.697   adding: fib.bz2 (stored 0%)
#20 5.698   adding: incomp-2.bz2 (stored 0%)
#20 5.698   adding: 45MB-00.bz2 (stored 0%)
#20 5.698   adding: bla.xml.bz2 (stored 0%)
#20 5.699 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 6.7s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:b71f74683ce49d7e0a05d6ab7426325acdf641b2e37655b3026c0dc26eae0b9e 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:a82edb53e9a5a09b2628e672c58637e126adc04c7640e895b85cda85c3c288f4
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:d4e6a2e0755f0cdaf708c460d92280edf905c17e0dc62354da2873c2ba2504d6
#2 transferring context: 2B done
#2 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/bzip2_bzip2_decompress_target-intermediate
#5 sha256:23163a63773cf9b8073c1a2b3b221bfe4470496342477ff9a275a552a8c24dac
#5 ERROR: gcr.io/fuzzbench/runners/afl/bzip2_bzip2_decompress_target-intermediate:latest: not found

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/bzip2_bzip2_decompress_target-intermediate done
#6 DONE 0.2s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/bzip2_bzip2_decompress_target-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:ca9b2da636fd070d3f346f9c062ad52d4bb6142a978408b02d33e232dd23af8f
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:f701ac9731bc49150aace939ca0b2f307363c1c61395ad717ea1bbe299bd3289
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target:latest
#4 sha256:759a24c5fd77c1c1ced5f4392198a81d58fffdc46770a1943bc6cd2240bcdf82
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/bzip2_bzip2_decompress_target-intermediate:latest
#3 sha256:e7b65d50eb2bfc5a76702a11498d210c7c6a7ad2d77001b34cfe4f7cac7b8189
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:5782332eda92baea1df73069db3be9b8bd8e4fc1c09e3a0aaa86228cc349e4dd
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/bzip2_bzip2_decompress_target-intermediate
#6 sha256:a3ae9f1e952a4782f6f0a9a172881f729405f86e66bc582e63463f9302d32d99
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target
#10 sha256:42b929590a63323c5230f7817ccd6373fbd331dc0ea05f33ef786771247bc6ea
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/bzip2_bzip2_decompress_target
#5 sha256:f785c4642d7ea3f267fdf46814e94a4c5c90558ff6af933228443ff0d11cc6be
#5 ERROR: gcr.io/fuzzbench/runners/afl/bzip2_bzip2_decompress_target:latest: not found

#12 [internal] load build context
#12 sha256:5782332eda92baea1df73069db3be9b8bd8e4fc1c09e3a0aaa86228cc349e4dd
#12 transferring context: 17.66MB 0.6s done
#12 DONE 0.7s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target
#10 sha256:42b929590a63323c5230f7817ccd6373fbd331dc0ea05f33ef786771247bc6ea
#10 DONE 1.1s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:c49a911a50a69e40fc5ca3d8cba14e2d1f131be997de2f1176c480325f42c688
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:2b04f8a1d399343571203f068b2fe181a67440fe9a64fc4230493679e9cef86c
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:dc0978e2e27656b684530966c7d9192857c7c2e7ff4338039512934a7cb26f26
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:81054c31e6f78fc12c1b6d279d5c732f1e19c3c0acf8fa8cd997919f94c8da72
#11 DONE 0.4s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:06260891be00ab56a75391ee2a1df5672122b99a09d715605550e30c2996e268
#13 DONE 1.3s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:06988ae74535180f3e30c952e2766891607f32f418c0eaab9d904fd36923ca62
#14 DONE 0.3s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:e6d51f13cf6eb59b1df24b210fbf6b2fb24ef71a64eb919b55b47912f0c3e8fd
#15 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:b564f33707135cd0555f16626c01e030d8e28113a7a78f9b475b1fc9cb8a355f
#16 DONE 0.5s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:81562586b188d7059d3c17f2dd8e5b038d60e0c8835af25606434047f8f03b30
#17 DONE 0.1s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:1b0f514fd75d3ba9e2df153a2693fa28a3916d3adcee82730c42cde1abcdb989
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:bd037f258db117e59f9880caf6a1be02788e1f32ceb4f770edf9e2b90d10902f
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:a6d9f56c192792ba3a3ab262ae93317379f69f4d098adc709c0fcb31062acc9b
#20 DONE 0.6s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:094d3a1044968429196f4cc96c3259fffba406fee21fc004173590890d2f68c4
#21 writing image sha256:094d3a1044968429196f4cc96c3259fffba406fee21fc004173590890d2f68c4 done
#21 naming to gcr.io/fuzzbench/runners/afl/bzip2_bzip2_decompress_target done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/bzip2_bzip2_decompress_target:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Doing final sync.
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:cf5650ea3645cdaad13d5f14ded4a0e71e0565ad56719213e6fec6e19093a435
#2 transferring context: 2B done
#2 DONE 0.3s

#1 [internal] load build definition from Dockerfile
#1 sha256:a13d1a4be89f635af97d89c19ddcdf4769794a3ac1cc86776c4fef73ee1c47f0
#1 transferring dockerfile: 32B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/bzip2_bzip2_decompress_target
#4 sha256:499b5963c4e61d31b5ac4b40d78814785e2a738ef8b8cb240754bc28b5c1836f
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:bd4d843d8721d1b4b840095336fc7daf120932f539883b69631c2f771e758e25
#9 transferring context: 118B done
#9 DONE 0.0s

#7 [3/6] RUN git clone git://sourceware.org/git/bzip2.git
#7 sha256:120cc87724adbe604e729fbece8b6f8625dd7d17d8ae50d772e6aa1e49547a97
#7 CACHED

#6 [2/6] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#6 sha256:7405df8f6b96d6d4d700eabe5ab37674a5ce0a028510ebaf8e080d143e8faf91
#6 CACHED

#8 [4/6] RUN git clone git://sourceware.org/git/bzip2-tests.git
#8 sha256:fc1f1ec3a2603a8bc3a0ea6f023f8a2dc2edd0fb7ea5207a79be700f4bc500fa
#8 CACHED

#10 [5/6] COPY build.sh *.c /src/
#10 sha256:73e89e445fe2461d11161d6f20be574e65616aa6fe2f8596cf162eb038d8145c
#10 CACHED

#11 [6/6] WORKDIR /src
#11 sha256:753535e7ee4954ddec5086b95aaf7ae7a43c052b91e70634bf8b7c9db3c7b04b
#11 CACHED

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:86f651c55dc58de3812dc0f3b75cdd13c41339e24fec3440eafffaef82da4b63 done
#12 naming to gcr.io/fuzzbench/builders/benchmark/bzip2_bzip2_decompress_target done
#12 DONE 0.1s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:bda520ad720569905a56b2c7035fa4f3c75f4f324fd84f83acf4335a5fd3e554
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:dc9bf053d9e8de5365635cd9423ad37cf0ae3a3c29934e0f1911cf57bfb765f0
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/bzip2_bzip2_decompress_target:latest
#3 sha256:56b0824e331cb3fe2acb4534df42f70b2fda5c584f08891492cf06f6b0ae8a02
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target-intermediate
#4 sha256:e225ac6d953d2759d73d72ff7842853ad87fdbbe24b219f8470cbd27d54f4053
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/bzip2_bzip2_decompress_target
#5 sha256:5379383fb0c33c03477ce01ee87cf637533e242596680b267beaef390aee33c3
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:50a18bb014cca6a50df5ab0e364c88db49c086242127598c582e1f0420d25fe9
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:8a3ec193c5df761abd1e0cded808982cb08787cf67b0b2b5a247e3f55082aec0
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:ffb53ae0ecbe773cb018679be31d62d6978a271ff53c5506ca908a57ed1d235f
#8 writing image sha256:ffb53ae0ecbe773cb018679be31d62d6978a271ff53c5506ca908a57ed1d235f 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:f828a400c17fbf8ecadea6f4a2674e6cbbe10caa0523897f0c456788ae4c9d47
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:dc490bc87f04323ac9c794b5823498596910521fef42b6dac964eb539601720c
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:b7d66ef37a6020c88b2df8a9efc211f5d1c856120f3276e5a9eac7f0f9159d0c
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:1356330f04dd9ee99a102e34b24de5a29ac318a6080fa6caf78d8423a2bab433
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:0cb1dc9ecf1ceb04dd266e0778299ffb4018721d9af5da1bc873eac04ec89cf0
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:58703b57f8d6cd8dd1de930607db2be53456ee1303eea4ef34a58be6a86d01f6
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:519defc09dd4a25ad5d5e313c87493b1505a2565f5392704a20dcab77e3069bf
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:95b6dc63f3bd069a72ece80c05186ae15879bfa4e8d7a60721601efba4f59c3e
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:b7420261cf4e593c1fd7c4c4e886235aa7f929a3b9a715706d219a3ca92b958a
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target-intermediate:latest
#3 sha256:6f3977b73c9125b872de6259b08bd0d2dfdf3ce796cd45a52517f2fb64e4396c
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target-intermediate
#6 sha256:00a8114983bb96aa8bbd4c7f3e08a1de146188ff9a91437031c0f31c82e5ccc5
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target
#5 sha256:a4f26f0923c14a54f8bed755771b6883592e70f36df59a0225003162c0496bd3
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:84d12f0026d6de772cbca3492668dea7c2fbd7cfa7abf573eaae460b33995ed9
#12 transferring context: 669.91kB 0.1s done
#12 DONE 0.1s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:d3ebbbf6b9258a92fd3c565dade50a64113fd8ee752b40197113a14a8d855990
#18 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:1412e42a5d726a63a5687e11e897330c8d8217619f66edd50a02ada7b887374a
#16 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:cfdcdee355d8cb9ac64faecea0ea98b9fda9d4e90afa091d8c3381722e13be19
#14 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:1c76abf53adca454dacb48644c2baed3c664012d86c2b11e043c129f1072c4b6
#11 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:8accc808874e4727a55034ef92f6c8509fed44fd8de245401626e5629a58113f
#19 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:ba813533a9faca97b83edf5235cb95f79bddcd6f8b1221ae619140118864b85f
#17 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:02ce4d0f5c8beab917da7d5958ed39cccdb86590a364c8514df7ce370a433dea
#9 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:58f75c39ac634abb4aad735bad05f15c384645b99eaa1acf7e3bb3ca53246fe7
#8 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:77dca49fa3284f8fbf7e66faa4354b950aadde1d263fb7686e210e0420ebf310
#10 CACHED

#15 [stage-1  8/13] COPY benchmarks/bzip2_bzip2_decompress_target/benchmark.yaml /
#15 sha256:7e56204cea942c5e56e82ee998bb9bcbe23ea6227da3991485416a4128bbaea1
#15 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:83ac2ab72484adcc6620fb773563b61798a43c6ec7be73b2caa5b75f214658a6
#13 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:df82a2bebff3bf8875921cb39d1d50b97ca0c54daa57da8e89b0134857c60501
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:b71f74683ce49d7e0a05d6ab7426325acdf641b2e37655b3026c0dc26eae0b9e
#21 writing image sha256:b71f74683ce49d7e0a05d6ab7426325acdf641b2e37655b3026c0dc26eae0b9e 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:7d2736a40c549a3837f1c2bfa387c5d4fb711568a22fbb6aa7465e6e9220b006
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:d9bc21394907f47a704e196e4152a20c4d35fa7014293f3b66a50572e2f80c9f
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/bzip2_bzip2_decompress_target-intermediate
#4 sha256:23163a63773cf9b8073c1a2b3b221bfe4470496342477ff9a275a552a8c24dac
#4 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f done
#6 naming to gcr.io/fuzzbench/runners/afl/bzip2_bzip2_decompress_target-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:17ef0f10389c543797913bcbc7032339449bd4b7878303f82633fb46d461c19f
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:c549a1db25bd770c35038cc9a7cbde726d470550bb9cfd18879ec6b6035ae4f9
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/bzip2_bzip2_decompress_target-intermediate:latest
#3 sha256:e7b65d50eb2bfc5a76702a11498d210c7c6a7ad2d77001b34cfe4f7cac7b8189
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target:latest
#4 sha256:759a24c5fd77c1c1ced5f4392198a81d58fffdc46770a1943bc6cd2240bcdf82
#4 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/bzip2_bzip2_decompress_target-intermediate
#6 sha256:a3ae9f1e952a4782f6f0a9a172881f729405f86e66bc582e63463f9302d32d99
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/bzip2_bzip2_decompress_target
#5 sha256:f785c4642d7ea3f267fdf46814e94a4c5c90558ff6af933228443ff0d11cc6be
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/bzip2_bzip2_decompress_target
#10 sha256:42b929590a63323c5230f7817ccd6373fbd331dc0ea05f33ef786771247bc6ea
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:68ab7203d040b0ed9857b40a39690b8263d4cca13cc7e440b495a55618952177
#12 transferring context: 17.66MB 0.6s done
#12 DONE 0.7s

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:81054c31e6f78fc12c1b6d279d5c732f1e19c3c0acf8fa8cd997919f94c8da72
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:c0cf6270642d970798c5beadff083071861ae21fb30b6af21e472840c6a7d6e5
#13 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:ba215bf449819c2aa60ed1d617334730ea706f2b2a1c94d0088b535b91bfac10
#17 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:6ea11be5d4839035ab78b37bab0e5160cc451f5c02e772faf146fd604cb1e91d
#18 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:a2a538bc9a917aabcd33ec004775c38585ebc70fee6ad15d345706439e383c60
#19 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:2b04f8a1d399343571203f068b2fe181a67440fe9a64fc4230493679e9cef86c
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:dc0978e2e27656b684530966c7d9192857c7c2e7ff4338039512934a7cb26f26
#9 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:a3399fba79225185cb20e8bd1a5f64ce9b6155a85158471eb6cd954bcbacbb58
#15 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:c49a911a50a69e40fc5ca3d8cba14e2d1f131be997de2f1176c480325f42c688
#7 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:1436d77f9c6375443c13624280e8e5b70ee84763611f4d89e8efd35dab27c713
#14 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:d6a0c261994564a271453e1d7a9702e55cee764dc583013caf95300e899cec09
#16 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:c4364316d8c26f51337c0d66a17402f122bc536123aed3ca4d737db695723c11
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:094d3a1044968429196f4cc96c3259fffba406fee21fc004173590890d2f68c4
#21 writing image sha256:094d3a1044968429196f4cc96c3259fffba406fee21fc004173590890d2f68c4 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/bzip2_bzip2_decompress_target done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Doing final sync.
