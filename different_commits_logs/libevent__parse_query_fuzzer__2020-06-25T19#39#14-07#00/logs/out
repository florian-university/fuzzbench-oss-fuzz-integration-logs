WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: libevent_parse_query_fuzzer.
INFO:root:Please run "make test-run-afl-libevent_parse_query_fuzzer" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:1888fea29c15feaa3958590c1b20a914ddb2996686e60ee82998588fd8f14e83
#1 transferring dockerfile: 963B done
#1 DONE 0.4s

#2 [internal] load .dockerignore
#2 sha256:8bf06bffe217c3fbadf12b7dff5867983c8dc94ce493bed041ae12f8498b00dc
#2 transferring context: 2B done
#2 DONE 0.5s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#9 [internal] load build context
#9 sha256:25821fddca20f228d66c0ca16f1eba044e6bf664c8eeaf6a14216b02f4d087fe
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer
#4 sha256:bfd30a4ae54d200a9222807841c872c7c1079cdee0279ffc9aca684e3bcf9117
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer:latest: not found

#9 [internal] load build context
#9 sha256:25821fddca20f228d66c0ca16f1eba044e6bf664c8eeaf6a14216b02f4d087fe
#9 transferring context: 71B done
#9 DONE 0.2s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool cmake
#6 sha256:0c734aecf1b283c063c3bbc6f7e827fdfd9889f2d9f9c17d96046a591ed89710
#6 CACHED

#7 [3/5] RUN git clone --depth 1 https://github.com/libevent/libevent.git libevent
#7 sha256:5a485873d14e202a033ff20358792225c52fe3a20280e98e6f13f40a041aedb7
#7 CACHED

#8 [4/5] WORKDIR libevent
#8 sha256:42b27e8a8e24d12a6937168ca01f24569abbab4eb08d9bd9b3d815fbb3abc9fe
#8 CACHED

#10 [5/5] COPY build.sh *.cc /src/
#10 sha256:f67c5974c7944fec24c7e09d5b886251c85a69baa8e426a84e6e5d7100ed9837
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:05da0a322a418ad0f9fbf0499a86a1b5ddce2494ce0c53f854bb56f1a2680c67 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer 0.0s done
#11 DONE 0.4s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:073e055deb7f3e135fc18d71a6ce5dbfb8fb06b8e00050ea557e682f9b9789c0
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:3f0e1c9ddef2284772720edb8bdbd2ddb34e77b40610c353863303376c1955f0
#2 transferring context: 2B done
#2 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer:latest
#3 sha256:b163c52b9548f0b2340240b849433145e8490d0093850d54af5034725abd4655
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer
#5 sha256:f9286c23a97fac91e5f2d3c8143371123af39681aea82b3314b5072d3adc9b4b
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate
#4 sha256:64ec8937106e49b2fe66e52f1df5b58c9b00d6bff0ea83c931b19dc85c8d9379
#4 ERROR: gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate:latest: not found

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:42eb49bff732a38dae54d8c2ff77c40564561db9eafc99b394f39f2b9596ca01
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:ee92ad13a8a2113bcc5771b4e17b037d6a31367540816a87d3c63b42c09a3304
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:82ce746a2d17270482730326bcfec1d8e0bfcf8c2afb62ce6cf3639aff7adfb1 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate 0.0s done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:c72c5632eddcde15ae9d40f92c2e904167c6d6ef8be03fa1e8872857c817cc50
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:a154bf6c096f45521d47d01bac2231239d83bfc9510becc6dd25cdec753db917
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:ec5d5f40525f5d9cc7fbef28c64f2b3fb2b400481b66acc1a3b2c5831339fdf6
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:0e5ae75d96e9c6e038c606156c0e18a95850408ad208278d51ab05745ce7f3f5
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:4c2c1c5fabf0b0f730c2c3001fbb235ca44b076c521134a150f112afa77bf5e2
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:33a0fd61940a7b93d5fbd272dc8e38263ef958e809e423783180f5086ddb37e0
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:ec76dd7eeeb87695b0b70ebc498ba8332977446257662180ff6943985b4dacde
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:d22c0bd101801931c6d6e62a988c4bfa3adad63664261e8d24ef6559eead7bbd
#13 writing image sha256:d22c0bd101801931c6d6e62a988c4bfa3adad63664261e8d24ef6559eead7bbd 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:5357c9a186c7585f916bff78529e2264192e337407b15c5fa09131939e63416a
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:d7ddce9fa00991e5e5cd4f8b37d7b3df384010abf4d895f768cf40918c084011
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate:latest
#3 sha256:62cfe1fd9e2baf6eb21c20bfd1cfee28c28e1bd615ec781735dc36ec728b75db
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:e2352c8d38da2936c41da66284f68675b5d4078a911441e4834f6b70c1dc5f23
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate
#6 sha256:75c576d9067b46761281fce3c730beee083dbd842d23351bc1674d19ef4c8047
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer
#5 sha256:2e7ef0d29939cb03d02ece1a69d373ff3c4a31ac5a8637daedfdf8662a890e82
#5 ERROR: gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:e2352c8d38da2936c41da66284f68675b5d4078a911441e4834f6b70c1dc5f23
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.2s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:80612a0d63f0a1872ad79fc497d8da7914c65a198cbe4c66733c054683e1bbba
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:1f5cfe2a965b1660ff299ae405bb7eb8567a55dfcd899ca45bca3127910d35b6
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:03237069e240b27604e41e0731d64c0ee601792e8b7f4034ede3088398613f58
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:9f7066c6dc551a6536a4c9ef7febd2e9d7966e78ce2aea310d313407dd1a62fe
#11 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:9d22425939da3a7f0b74a815edb6580241b90b764e6addc5b4e0e6be74251fe0
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:8df2dc9a266166c8dfeec1dfb441ad9dc16068abc36ce52b08f1aa76a4e9bfa4
#14 CACHED

#15 [stage-1  8/13] COPY benchmarks/libevent_parse_query_fuzzer/benchmark.yaml /
#15 sha256:0d1ab6bea76f6f7008e269da1e189ab2c7d0a68788fc57b323d158174a6e1862
#15 DONE 0.7s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:023be0cd03427492b5c741a79bdf3c4c4c8cb3a47423c76c7dbcdf2c47b034e0
#16 DONE 0.8s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:9da5a7ea083230322d5df634231254b0d897c07b03c759bc68e5bac019df978c
#17 DONE 0.5s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:457b5a6a57b449e5c68afb1a9895a3e630b8c110e0087b8f86d2ec1b6bf1cd34
#18 0.578 Checking out commit ff4f38e7
#18 5.657 From https://github.com/libevent/libevent
#18 5.657  * [new tag]           release-1.1b          -> release-1.1b
#18 5.658  * [new tag]           release-2.0.1-alpha   -> release-2.0.1-alpha
#18 5.658  * [new tag]           release-2.0.10-stable -> release-2.0.10-stable
#18 5.658  * [new tag]           release-2.0.11-stable -> release-2.0.11-stable
#18 5.658  * [new tag]           release-2.0.12-stable -> release-2.0.12-stable
#18 5.659  * [new tag]           release-2.0.13-stable -> release-2.0.13-stable
#18 5.659  * [new tag]           release-2.0.14-stable -> release-2.0.14-stable
#18 5.659  * [new tag]           release-2.0.15-stable -> release-2.0.15-stable
#18 5.660  * [new tag]           release-2.0.16-stable -> release-2.0.16-stable
#18 5.660  * [new tag]           release-2.0.17-stable -> release-2.0.17-stable
#18 5.660  * [new tag]           release-2.0.18-stable -> release-2.0.18-stable
#18 5.661  * [new tag]           release-2.0.19-stable -> release-2.0.19-stable
#18 5.661  * [new tag]           release-2.0.20-stable -> release-2.0.20-stable
#18 5.662  * [new tag]           release-2.0.21-stable -> release-2.0.21-stable
#18 5.662  * [new tag]           release-2.0.3-alpha   -> release-2.0.3-alpha
#18 5.662  * [new tag]           release-2.0.4-alpha   -> release-2.0.4-alpha
#18 5.662  * [new tag]           release-2.0.5-beta    -> release-2.0.5-beta
#18 5.663  * [new tag]           release-2.0.6-rc      -> release-2.0.6-rc
#18 5.663  * [new tag]           release-2.0.7-rc      -> release-2.0.7-rc
#18 5.664  * [new tag]           release-2.0.8-rc      -> release-2.0.8-rc
#18 5.664  * [new tag]           release-2.0.9-rc      -> release-2.0.9-rc
#18 5.664  * [new tag]           release-2.1.1-alpha   -> release-2.1.1-alpha
#18 5.665  * [new tag]           release-2.1.2-alpha   -> release-2.1.2-alpha
#18 5.665  * [new tag]           release-2.1.3-alpha   -> release-2.1.3-alpha
#18 5.665  * [new tag]           release-2.1.4-alpha   -> release-2.1.4-alpha
#18 5.666  * [new tag]           release-2.1.5-beta    -> release-2.1.5-beta
#18 5.666  * [new tag]           release-2.1.6-beta    -> release-2.1.6-beta
#18 5.666  * [new tag]           release-2.1.7-rc      -> release-2.1.7-rc
#18 5.667  * [new tag]           release-2.1.8-stable  -> release-2.1.8-stable
#18 5.673 error: pathspec 'ff4f38e7' did not match any file(s) known to git
#18 5.698 error: pathspec 'ff4f38e7' did not match any file(s) known to git
#18 5.705 error: pathspec 'ff4f38e7' did not match any file(s) known to git
#18 5.744 Checkout unsuccessful.
#18 DONE 6.1s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:63fecb5f738339240f93401124bc6ed3dee01ca7e55ac0310ff36d054d219b49
#19 DONE 0.9s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:bd6eaa63771d26228485f409e850aa63d7ce79ce16061e415f51fe4ae6394e5b
#20 0.603 Run fuzzer_build to build the target
#20 0.719 FUZZ_TARGET = parse_query_fuzzer
#20 0.719 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.719 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.727 Building benchmark libevent_parse_query_fuzzer with fuzzer afl
#20 0.730 + sh autogen.sh
#20 1.117 autoreconf: Entering directory `.'
#20 1.121 autoreconf: configure.ac: not using Gettext
#20 2.122 autoreconf: running: aclocal --force -I m4
#20 4.707 autoreconf: configure.ac: tracing
#20 5.517 autoreconf: configure.ac: creating directory build-aux
#20 5.517 autoreconf: running: libtoolize --copy --force
#20 5.836 libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
#20 5.836 libtoolize: copying file 'build-aux/ltmain.sh'
#20 5.880 libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
#20 5.880 libtoolize: copying file 'm4/libtool.m4'
#20 5.945 libtoolize: copying file 'm4/ltoptions.m4'
#20 6.013 libtoolize: copying file 'm4/ltsugar.m4'
#20 6.082 libtoolize: copying file 'm4/ltversion.m4'
#20 6.150 libtoolize: copying file 'm4/lt~obsolete.m4'
#20 8.788 autoreconf: running: /usr/bin/autoconf --force
#20 9.865 autoreconf: running: /usr/bin/autoheader --force
#20 10.66 autoreconf: running: automake --add-missing --copy --force-missing
#20 11.71 configure.ac:26: installing 'build-aux/compile'
#20 11.72 configure.ac:30: installing 'build-aux/config.guess'
#20 11.72 configure.ac:30: installing 'build-aux/config.sub'
#20 11.72 configure.ac:17: installing 'build-aux/install-sh'
#20 11.72 configure.ac:17: installing 'build-aux/missing'
#20 11.87 Makefile.am: installing 'build-aux/depcomp'
#20 12.01 parallel-tests: installing 'build-aux/test-driver'
#20 12.09 autoreconf: Leaving directory `.'
#20 12.10 + ./configure --disable-openssl
#20 12.33 checking for a BSD-compatible install... /usr/bin/install -c
#20 12.34 checking whether build environment is sane... yes
#20 12.36 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 12.36 checking for gawk... no
#20 12.36 checking for mawk... mawk
#20 12.37 checking whether make sets $(MAKE)... yes
#20 12.38 checking whether make supports nested variables... yes
#20 12.40 checking whether make supports nested variables... (cached) yes
#20 12.40 checking whether make supports the include directive... yes (GNU style)
#20 12.41 checking for gcc... clang
#20 12.48 checking whether the C compiler works... yes
#20 12.61 checking for C compiler default output file name... a.out
#20 12.61 checking for suffix of executables... 
#20 12.74 checking whether we are cross compiling... no
#20 12.87 checking for suffix of object files... o
#20 12.91 checking whether we are using the GNU C compiler... yes
#20 12.94 checking whether clang accepts -g... yes
#20 12.96 checking for clang option to accept ISO C89... none needed
#20 13.01 checking whether clang understands -c and -o together... yes
#20 13.05 checking dependency style of clang... gcc3
#20 13.11 checking how to run the C preprocessor... clang -E
#20 13.21 checking for grep that handles long lines and -e... /usr/bin/grep
#20 13.22 checking for egrep... /usr/bin/grep -E
#20 13.22 checking for ANSI C header files... yes
#20 13.48 checking for sys/types.h... yes
#20 13.53 checking for sys/stat.h... yes
#20 13.60 checking for stdlib.h... yes
#20 13.65 checking for string.h... yes
#20 13.71 checking for memory.h... yes
#20 13.78 checking for strings.h... yes
#20 13.84 checking for inttypes.h... yes
#20 13.90 checking for stdint.h... yes
#20 13.97 checking for unistd.h... yes
#20 14.03 checking minix/config.h usability... no
#20 14.10 checking minix/config.h presence... no
#20 14.13 checking for minix/config.h... no
#20 14.13 checking whether it is safe to define __EXTENSIONS__... yes
#20 14.21 checking build system type... x86_64-pc-linux-gnu
#20 14.28 checking host system type... x86_64-pc-linux-gnu
#20 14.28 checking whether ln -s works... yes
#20 14.28 checking for a sed that does not truncate output... /usr/bin/sed
#20 14.29 checking how to print strings... printf
#20 14.35 checking for a sed that does not truncate output... (cached) /usr/bin/sed
#20 14.35 checking for fgrep... /usr/bin/grep -F
#20 14.36 checking for ld used by clang... /usr/bin/ld
#20 14.38 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 14.38 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 14.39 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 14.42 checking the maximum length of command line arguments... 1572864
#20 14.52 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 14.52 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 14.52 checking for /usr/bin/ld option to reload object files... -r
#20 14.52 checking for objdump... objdump
#20 14.52 checking how to recognize dependent libraries... pass_all
#20 14.52 checking for dlltool... no
#20 14.52 checking how to associate runtime and link libraries... printf %s\n
#20 14.53 checking for ar... ar
#20 14.53 checking for archiver @FILE support... @
#20 14.58 checking for strip... strip
#20 14.59 checking for ranlib... ranlib
#20 14.59 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 14.77 checking for sysroot... no
#20 14.77 checking for a working dd... /usr/bin/dd
#20 14.77 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 14.80 checking for mt... no
#20 14.80 checking if : is a manifest tool... no
#20 14.81 checking for dlfcn.h... yes
#20 14.88 checking for objdir... .libs
#20 15.05 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 15.08 checking for clang option to produce PIC... -fPIC -DPIC
#20 15.08 checking if clang PIC flag -fPIC -DPIC works... yes
#20 15.12 checking if clang static flag -static works... yes
#20 15.29 checking if clang supports -c -o file.o... yes
#20 15.34 checking if clang supports -c -o file.o... (cached) yes
#20 15.34 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 15.36 checking whether -lc should be explicitly linked in... no
#20 15.42 checking dynamic linker characteristics... GNU/Linux ld.so
#20 15.60 checking how to hardcode library paths into programs... immediate
#20 15.60 checking whether stripping libraries is possible... yes
#20 15.60 checking if libtool supports shared libraries... yes
#20 15.60 checking whether to build shared libraries... yes
#20 15.60 checking whether to build static libraries... yes
#20 15.61 checking for library containing inet_ntoa... none required
#20 15.73 checking for library containing socket... none required
#20 15.85 checking for library containing inet_aton... none required
#20 15.98 checking for library containing clock_gettime... none required
#20 16.11 checking for clock_gettime... yes
#20 16.25 checking for library containing sendfile... none required
#20 16.37 checking for WIN32... no
#20 16.40 checking for MIDIPIX... no
#20 16.44 checking for CYGWIN... no
#20 16.47 checking zlib.h usability... no
#20 16.54 checking zlib.h presence... no
#20 16.57 checking for zlib.h... no
#20 16.57 checking for special C compiler options needed for large files... no
#20 16.57 checking for _FILE_OFFSET_BITS value needed for large files... no
#20 16.61 configure: error: PKG_PROG_PKG_CONFIG not found. Please install pkg-config and re-run autogen.sh
#20 16.69 Traceback (most recent call last):
#20 16.69   File "<string>", line 1, in <module>
#20 16.69   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 16.69     utils.build_benchmark()
#20 16.69   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 16.69     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 16.69   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 16.69     raise CalledProcessError(retcode, cmd)
#20 16.69 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2764378: .afl-libevent_parse_query_fuzzer-builder] Error 1
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:7c5306025463f088e1a5b96255fd3bff03e3aebf91df5a0f228fd4a9c11b32d3
#2 transferring context: 2B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:18567122f3cab08791ba6e5b8023cb917d131a82ada8a3bb380c00b2ca2fff55
#1 transferring dockerfile: 32B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer
#4 sha256:bfd30a4ae54d200a9222807841c872c7c1079cdee0279ffc9aca684e3bcf9117
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:e086eaaa5a42079adbd1effd5107d98c537d505d700cb5add0f50208574121b9
#9 transferring context: 71B done
#9 DONE 0.1s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool cmake
#6 sha256:0c734aecf1b283c063c3bbc6f7e827fdfd9889f2d9f9c17d96046a591ed89710
#6 CACHED

#7 [3/5] RUN git clone --depth 1 https://github.com/libevent/libevent.git libevent
#7 sha256:5a485873d14e202a033ff20358792225c52fe3a20280e98e6f13f40a041aedb7
#7 CACHED

#8 [4/5] WORKDIR libevent
#8 sha256:42b27e8a8e24d12a6937168ca01f24569abbab4eb08d9bd9b3d815fbb3abc9fe
#8 CACHED

#10 [5/5] COPY build.sh *.cc /src/
#10 sha256:edc10cb3b80e9c734d6b086271a348958bf1c8ac1b5f944029a04cdd0c3187b2
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:05da0a322a418ad0f9fbf0499a86a1b5ddce2494ce0c53f854bb56f1a2680c67 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:00df0b842383c3eb3a38611c94d2a26249d093c06b068cdef493c94f4d23f976
#1 transferring dockerfile: 46B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:d36fc2af271750f82e328d7b600844238e6b53976aac72ad2ba50889e45c5c8b
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer:latest
#3 sha256:b163c52b9548f0b2340240b849433145e8490d0093850d54af5034725abd4655
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer
#5 sha256:f9286c23a97fac91e5f2d3c8143371123af39681aea82b3314b5072d3adc9b4b
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate
#4 sha256:64ec8937106e49b2fe66e52f1df5b58c9b00d6bff0ea83c931b19dc85c8d9379
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:42eb49bff732a38dae54d8c2ff77c40564561db9eafc99b394f39f2b9596ca01
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:ee92ad13a8a2113bcc5771b4e17b037d6a31367540816a87d3c63b42c09a3304
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:82ce746a2d17270482730326bcfec1d8e0bfcf8c2afb62ce6cf3639aff7adfb1 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:68285a7135959d7669815a1d7540e68ef090b57040ee0635dc69b6dcc5ca1cc8
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:5cbedd84eb4525892747b07097db03d21724a5c220d7ab8aeefae8e189de814c
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:0ecc543b684f500fea32343a8ec93a1b85787909731286783e350bd08a57d238
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:365a0692e1bd3898101275cc33a898a64d80d115af45341153aa29a94d2842a3
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:aeee4c2e0158855c41555acdf3481eebfae60047490ada1df8cef908b242f658
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:f0e9f1e7e29c6ca009e4572855f391a0d718a0747f1b18b65ff125db2161d36e
#9 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:4168f636d14d51a99961bbec13faf36d1476b13ea68ad7eb448f1cbfeb50d324
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:d22c0bd101801931c6d6e62a988c4bfa3adad63664261e8d24ef6559eead7bbd 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:c42ebe2c59760e9e8b152581b3a078ffabb7145c448d42f9d7ae1172812def24
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:ea37697d9275fde3dded61f0b0632917be9a6773e743dcd8f07a3934d838bb68
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate:latest
#3 sha256:62cfe1fd9e2baf6eb21c20bfd1cfee28c28e1bd615ec781735dc36ec728b75db
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:f6e4e621e42750c4ea397fe25e4ced86d69af993ec94bdb8028bf962667fe9cb
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate
#6 sha256:75c576d9067b46761281fce3c730beee083dbd842d23351bc1674d19ef4c8047
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer
#5 sha256:2e7ef0d29939cb03d02ece1a69d373ff3c4a31ac5a8637daedfdf8662a890e82
#5 ERROR: gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:f6e4e621e42750c4ea397fe25e4ced86d69af993ec94bdb8028bf962667fe9cb
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.1s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:f16dd1d2ad82ae647901260a260ee0a475778f0e4aeb66eee2139a9f5afe9db1
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:8c4859ebca676192d85387e86f68c8a74d7c37f6bb02734ec29e53d0c55eaf73
#14 CACHED

#15 [stage-1  8/13] COPY benchmarks/libevent_parse_query_fuzzer/benchmark.yaml /
#15 sha256:66ffc142e2f9f2d795bd5c7d4f8bde00e44a4410ce4042d74da0eadc3428adab
#15 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:f8c14de9ab6cd3b1a34e5206e15fe1649e2d26a592123a0de0a652cb48b5c1ec
#18 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:1f5cfe2a965b1660ff299ae405bb7eb8567a55dfcd899ca45bca3127910d35b6
#9 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:80612a0d63f0a1872ad79fc497d8da7914c65a198cbe4c66733c054683e1bbba
#8 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:03237069e240b27604e41e0731d64c0ee601792e8b7f4034ede3088398613f58
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:9f7066c6dc551a6536a4c9ef7febd2e9d7966e78ce2aea310d313407dd1a62fe
#11 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:b4307a681324968f0aa73ae180cd2276d20f9ce1595d6adde9d772c0acc7c4a3
#16 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:2341a3d80c1ddd64703caf982567a07db4d444eaabac494e1500e68d524b0f9b
#17 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:16a20cb7df53be607d63b37d492a679d363a2299b45b142c14b9026291432232
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:f9f56ade2f5031436d4705d19846c9fd9450caaaa3e061ecd8e6bb0a3cd22711
#20 0.472 Run fuzzer_build to build the target
#20 0.588 FUZZ_TARGET = parse_query_fuzzer
#20 0.588 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.588 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.592 Building benchmark libevent_parse_query_fuzzer with fuzzer afl
#20 0.596 + sh autogen.sh
#20 0.947 autoreconf: Entering directory `.'
#20 0.950 autoreconf: configure.ac: not using Gettext
#20 1.950 autoreconf: running: aclocal --force -I m4
#20 4.591 autoreconf: configure.ac: tracing
#20 5.482 autoreconf: configure.ac: creating directory build-aux
#20 5.482 autoreconf: running: libtoolize --copy --force
#20 5.812 libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
#20 5.812 libtoolize: copying file 'build-aux/ltmain.sh'
#20 5.855 libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
#20 5.855 libtoolize: copying file 'm4/libtool.m4'
#20 5.922 libtoolize: copying file 'm4/ltoptions.m4'
#20 5.990 libtoolize: copying file 'm4/ltsugar.m4'
#20 6.058 libtoolize: copying file 'm4/ltversion.m4'
#20 6.126 libtoolize: copying file 'm4/lt~obsolete.m4'
#20 8.920 autoreconf: running: /usr/bin/autoconf --force
#20 10.00 autoreconf: running: /usr/bin/autoheader --force
#20 10.88 autoreconf: running: automake --add-missing --copy --force-missing
#20 12.02 configure.ac:26: installing 'build-aux/compile'
#20 12.02 configure.ac:30: installing 'build-aux/config.guess'
#20 12.03 configure.ac:30: installing 'build-aux/config.sub'
#20 12.03 configure.ac:17: installing 'build-aux/install-sh'
#20 12.03 configure.ac:17: installing 'build-aux/missing'
#20 12.18 Makefile.am: installing 'build-aux/depcomp'
#20 12.31 parallel-tests: installing 'build-aux/test-driver'
#20 12.38 autoreconf: Leaving directory `.'
#20 12.39 + ./configure --disable-openssl
#20 12.60 checking for a BSD-compatible install... /usr/bin/install -c
#20 12.62 checking whether build environment is sane... yes
#20 12.64 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 12.64 checking for gawk... no
#20 12.64 checking for mawk... mawk
#20 12.64 checking whether make sets $(MAKE)... yes
#20 12.66 checking whether make supports nested variables... yes
#20 12.67 checking whether make supports nested variables... (cached) yes
#20 12.68 checking whether make supports the include directive... yes (GNU style)
#20 12.69 checking for gcc... clang
#20 12.76 checking whether the C compiler works... yes
#20 12.88 checking for C compiler default output file name... a.out
#20 12.89 checking for suffix of executables... 
#20 13.01 checking whether we are cross compiling... no
#20 13.15 checking for suffix of object files... o
#20 13.18 checking whether we are using the GNU C compiler... yes
#20 13.21 checking whether clang accepts -g... yes
#20 13.23 checking for clang option to accept ISO C89... none needed
#20 13.28 checking whether clang understands -c and -o together... yes
#20 13.34 checking dependency style of clang... gcc3
#20 13.40 checking how to run the C preprocessor... clang -E
#20 13.51 checking for grep that handles long lines and -e... /usr/bin/grep
#20 13.51 checking for egrep... /usr/bin/grep -E
#20 13.52 checking for ANSI C header files... yes
#20 13.76 checking for sys/types.h... yes
#20 13.82 checking for sys/stat.h... yes
#20 13.88 checking for stdlib.h... yes
#20 13.93 checking for string.h... yes
#20 13.99 checking for memory.h... yes
#20 14.05 checking for strings.h... yes
#20 14.12 checking for inttypes.h... yes
#20 14.18 checking for stdint.h... yes
#20 14.24 checking for unistd.h... yes
#20 14.30 checking minix/config.h usability... no
#20 14.37 checking minix/config.h presence... no
#20 14.40 checking for minix/config.h... no
#20 14.40 checking whether it is safe to define __EXTENSIONS__... yes
#20 14.48 checking build system type... x86_64-pc-linux-gnu
#20 14.56 checking host system type... x86_64-pc-linux-gnu
#20 14.56 checking whether ln -s works... yes
#20 14.56 checking for a sed that does not truncate output... /usr/bin/sed
#20 14.57 checking how to print strings... printf
#20 14.62 checking for a sed that does not truncate output... (cached) /usr/bin/sed
#20 14.63 checking for fgrep... /usr/bin/grep -F
#20 14.63 checking for ld used by clang... /usr/bin/ld
#20 14.65 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 14.65 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 14.66 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 14.69 checking the maximum length of command line arguments... 1572864
#20 14.71 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 14.71 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 14.71 checking for /usr/bin/ld option to reload object files... -r
#20 14.71 checking for objdump... objdump
#20 14.71 checking how to recognize dependent libraries... pass_all
#20 14.71 checking for dlltool... no
#20 14.71 checking how to associate runtime and link libraries... printf %s\n
#20 14.71 checking for ar... ar
#20 14.72 checking for archiver @FILE support... @
#20 14.76 checking for strip... strip
#20 14.76 checking for ranlib... ranlib
#20 14.76 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 14.94 checking for sysroot... no
#20 14.94 checking for a working dd... /usr/bin/dd
#20 14.95 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 14.98 checking for mt... no
#20 14.98 checking if : is a manifest tool... no
#20 14.99 checking for dlfcn.h... yes
#20 15.06 checking for objdir... .libs
#20 15.24 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 15.27 checking for clang option to produce PIC... -fPIC -DPIC
#20 15.27 checking if clang PIC flag -fPIC -DPIC works... yes
#20 15.30 checking if clang static flag -static works... yes
#20 15.48 checking if clang supports -c -o file.o... yes
#20 15.53 checking if clang supports -c -o file.o... (cached) yes
#20 15.53 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 15.55 checking whether -lc should be explicitly linked in... no
#20 15.61 checking dynamic linker characteristics... GNU/Linux ld.so
#20 15.78 checking how to hardcode library paths into programs... immediate
#20 15.78 checking whether stripping libraries is possible... yes
#20 15.79 checking if libtool supports shared libraries... yes
#20 15.79 checking whether to build shared libraries... yes
#20 15.79 checking whether to build static libraries... yes
#20 15.79 checking for library containing inet_ntoa... none required
#20 15.92 checking for library containing socket... none required
#20 16.05 checking for library containing inet_aton... none required
#20 16.19 checking for library containing clock_gettime... none required
#20 16.31 checking for clock_gettime... yes
#20 16.45 checking for library containing sendfile... none required
#20 16.58 checking for WIN32... no
#20 16.62 checking for MIDIPIX... no
#20 16.65 checking for CYGWIN... no
#20 16.68 checking zlib.h usability... no
#20 16.76 checking zlib.h presence... no
#20 16.79 checking for zlib.h... no
#20 16.79 checking for special C compiler options needed for large files... no
#20 16.79 checking for _FILE_OFFSET_BITS value needed for large files... no
#20 16.82 configure: error: PKG_PROG_PKG_CONFIG not found. Please install pkg-config and re-run autogen.sh
#20 16.91 Traceback (most recent call last):
#20 16.91   File "<string>", line 1, in <module>
#20 16.91   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 16.91     utils.build_benchmark()
#20 16.91   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 16.91     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 16.91   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 16.91     raise CalledProcessError(retcode, cmd)
#20 16.91 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2764378: .afl-libevent_parse_query_fuzzer-builder] Error 1
