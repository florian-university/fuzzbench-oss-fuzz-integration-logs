WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: minizip_minizip.
INFO:root:Please run "make test-run-afl-minizip_minizip" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:600affae625b48167d43fadfa0360612f28096877f2cedbd7b444d192488955f
#1 transferring dockerfile: 934B done
#1 DONE 0.2s

#2 [internal] load .dockerignore
#2 sha256:47e7ca43437730685f553de365998289e8e7ef8688c57c25bebc50667446fdbf
#2 transferring context: 2B done
#2 DONE 0.3s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#9 [internal] load build context
#9 sha256:2147c293e32241535d9ddecd02c237a44505c1e2dd5c2bc77baa9612434cd081
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/minizip_minizip
#4 sha256:bf778af08b829b59afe78f59ae4058d05efb302174329521cab3088eac8a43c9
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/minizip_minizip:latest: not found

#9 [internal] load build context
#9 sha256:2147c293e32241535d9ddecd02c237a44505c1e2dd5c2bc77baa9612434cd081
#9 transferring context: 30B done
#9 DONE 0.1s

#8 [4/5] WORKDIR minizip
#8 sha256:6a16ff4c6af9be25fcb2af889624702a3ac877f398a97b01f392c1119d69513b
#8 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make cmake pkg-config
#6 sha256:4028807a9ce75095abb821d79984b15fe02b0f1c310dfb6d6dbdc3cfebf130ab
#6 CACHED

#7 [3/5] RUN git clone -b dev https://github.com/nmoinvaz/minizip
#7 sha256:4a3f9d25539ff8db2517c2452bf0454704e00f28dbe0011ce5bf5ea9b912b538
#7 CACHED

#10 [5/5] COPY build.sh /src/
#10 sha256:de63df14184d3a615577c63d178c4433bc4269f9ab84515645fff9485f970d55
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:33866932a3dcba1dbb0b598447a746e80e04a5e807e080b815ebe2a39db1d750 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/minizip_minizip 0.0s done
#11 DONE 0.4s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/minizip_minizip:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:fbfa472c1f401259e986472fbedc57cbcb96d7126c7244459ef69d85617d4936
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:1485c543f388470528a5dbdeb949f3c0216a5253767149180a6ebd72e5ef548b
#2 transferring context: 2B done
#2 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/minizip_minizip:latest
#3 sha256:d41528c9de382a97ea9b19ab179b8f24b17363c23ac929cd3da6c7679c1588de
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/minizip_minizip
#5 sha256:d27ad0c6de5706e7929164f92ca5018007dc8f978894cb78258ecd7c480bf805
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate
#4 sha256:bf2b3e354b0c523c6b197bdac0b3c3763948e9926732bd67cb0b030ea1e030f7
#4 ERROR: gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate:latest: not found

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:29ed736921e5d322abfbde4ff6f7b39a554f4bf78c0eb6bd99c25040613cbc60
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:cb6e470d74d7a184864e9b8fd911879aa82869acf43884a5293c412f4f16bb4b
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:46716f88e6a674348a7933ccd53e467a17eb51491fcc5e689ad56fd20dddfe9d
#8 writing image sha256:46716f88e6a674348a7933ccd53e467a17eb51491fcc5e689ad56fd20dddfe9d 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate 0.0s done
#8 DONE 0.5s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:9306973845bad8c4f1c4adcfca3d82db377af5bb1568d48e7de88f0a59cd4f88
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:d018c46570f96b14455859b2e89f7c2d44b6a5d4f2572b7b7aa0fbecb1fe2512
#2 transferring context: 34B done
#2 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:2a55a49998d64c9c2b4e9924128a81423ca39d09834fa6b90d656ac32975cace
#8 transferring context: 559B 0.1s done
#8 DONE 0.2s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:c7b1328b9d225495f89135a21426b679f5845a25f3176dd263c2c59332bde18c
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:8f0845ab27bea567c77acdf0a52d05c87184e74baa9f4ca5b8bf7d183d7ba843
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:968a0329c75224e9b53a1e2cdcf21d23fab1524cbcaaf5050e6e522bb3f46cbe
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:8679e5666e468e1e25b63d0fa7bd093c83dfabc5c7a3eae4ec072af8764f0021
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:d272f9025f9edd9eed18c2a04e28facf60aea0f2387c22c4b7bdce28fd38bb09
#2 transferring context: 34B done
#2 DONE 0.1s

#1 [internal] load build definition from Dockerfile
#1 sha256:51510533cfd00f386b1e8e29ee09d362528299c244ee453867a00b72c2bc97a1
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.2s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate:latest
#3 sha256:31db2fb3c876459eb2a506ae78f4eff0d411ead295df83d164db4270d9710608
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:9447b6c807b573edc1a760748f7ef7d283df723fb03c13deb6205461605cecb5
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate
#6 sha256:d6e154f2c7676fb90910e7a5ac16717891aaadbfa384ffc3661487d62bb35250
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/minizip_minizip
#5 sha256:fa87fce5b6593dc0dbc6d21c408afd0a15f9150091823decc9889f28923a604d
#5 ERROR: gcr.io/fuzzbench/builders/afl/minizip_minizip:latest: not found

#12 [internal] load build context
#12 sha256:9447b6c807b573edc1a760748f7ef7d283df723fb03c13deb6205461605cecb5
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.2s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:482ee2eabf14af246f7409a50e0ba877c599cd57caa8d98ea608f241a3560f24
#13 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:1a83175d91996f94009fef7826c1a197e912cc1b6ce4a36fce006eb397cb1511
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:0afc58f89ceee684a44f83a0cc08daec819b0798fb77712964dbdc62c70dbba8
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:9827b3eb04a37f610202ad67803cb41a7183f148597ac9ea3a30318e48281f2e
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:fd4f69eb0b756142c098597e1b441682fe1cf69db32eeda7bb671315cb9602f3
#11 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:3855fdf2e25e759aa646df72390f9fe1c421951e26de9bc3506d4ca4a2b43f5d
#14 CACHED

#15 [stage-1  8/13] COPY benchmarks/minizip_minizip/benchmark.yaml /
#15 sha256:391ff90fe1fd956ead1811f1d7e3c2cb62f3e4eaa595bea39648d47640e51ce3
#15 DONE 0.6s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:8130dfe9016ab1cd70dc1ad291ea5a59da2ec0cc0f8b0dafaaab40c5721f7890
#16 DONE 0.8s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:f19b0aaf08ca371f7fc135e541207698b2274dfeaa49750fddd3b50085b23998
#17 DONE 0.3s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:44e831a06b7d23de3e95784f9c7e5fb887de253ff5b7c8bc24699369ae4d3c63
#18 0.439 Checking out commit ea7c5506
#18 0.454 error: pathspec 'ea7c5506' did not match any file(s) known to git
#18 0.460 error: pathspec 'ea7c5506' did not match any file(s) known to git
#18 0.467 error: pathspec 'ea7c5506' did not match any file(s) known to git
#18 0.507 Checkout unsuccessful.
#18 DONE 0.6s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:fbf4397018c5ed1e82c54bb99f431529d6be0a0b8350f9ddd50ed8d4f67271e4
#19 DONE 1.8s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:6934b32428656a6ad4708c6abbc27fc90e9904ab53505b17cdeacfba6efa3b86
#20 0.575 Run fuzzer_build to build the target
#20 0.693 FUZZ_TARGET = minizip
#20 0.693 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.693 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.697 Building benchmark minizip_minizip with fuzzer afl
#20 0.701 + cmake . '-DCMAKE_C_FLAGS=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard' '-DCMAKE_CXX_FLAGS=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard' -DMZ_BUILD_FUZZ_TEST=ON
#20 0.719 -- Using CMake version 3.21.1
#20 0.916 -- The C compiler identification is Clang 14.0.0
#20 0.929 -- Detecting C compiler ABI info
#20 1.086 -- Detecting C compiler ABI info - done
#20 1.135 -- Check for working C compiler: /usr/local/bin/clang - skipped
#20 1.136 -- Detecting C compile features
#20 1.137 -- Detecting C compile features - done
#20 1.151 -- Looking for stdint.h
#20 1.312 -- Looking for stdint.h - found
#20 1.313 -- Looking for inttypes.h
#20 1.492 -- Looking for inttypes.h - found
#20 1.493 -- Looking for sys/types.h
#20 1.660 -- Looking for sys/types.h - found
#20 1.661 -- Looking for stddef.h
#20 1.818 -- Looking for stddef.h - found
#20 1.819 -- Check size of off64_t
#20 1.872 -- Check size of off64_t - failed
#20 1.872 -- Looking for fseeko
#20 2.036 -- Looking for fseeko - found
#20 2.054 -- ZLIB library not found
#20 2.080 -- BZip2 library not found
#20 2.087 -- Checking for module 'liblzma'
#20 2.090 --   No package 'liblzma' found
#20 2.097 -- LibLZMA library not found
#20 2.104 -- Checking for module 'libzstd'
#20 2.107 --   No package 'libzstd' found
#20 2.118 -- ZSTD library not found
#20 2.118 -- Compression not supported due to missing libraries
#20 2.124 -- Found PkgConfig: /usr/bin/pkg-config (found version "0.29.1") 
#20 2.126 -- Checking for module 'openssl'
#20 2.129 --   No package 'openssl' found
#20 2.150 -- Could NOT find OpenSSL, try to set the path to OpenSSL root folder in the system variable OPENSSL_ROOT_DIR (missing: OPENSSL_CRYPTO_LIBRARY OPENSSL_INCLUDE_DIR) (found version "")
#20 2.150 -- OpenSSL library not found
#20 2.150 -- WinZIP AES support requires OpenSSL
#20 2.150 -- Signing support requires OpenSSL
#20 2.151 -- Looking for getrandom
#20 2.319 -- Looking for getrandom - found
#20 2.320 -- Looking for arc4random_buf
#20 2.374 -- Looking for arc4random_buf - not found
#20 2.375 -- Looking for arc4random
#20 2.430 -- Looking for arc4random - not found
#20 2.440 -- Checking for module 'libbsd'
#20 2.443 --   No package 'libbsd' found
#20 2.453 -- Performing Test Iconv_IS_BUILT_IN
#20 2.614 -- Performing Test Iconv_IS_BUILT_IN - Success
#20 2.618 -- Using Iconv
#20 2.882 -- The CXX compiler identification is Clang 14.0.0
#20 2.892 -- Detecting CXX compiler ABI info
#20 3.078 -- Detecting CXX compiler ABI info - done
#20 3.144 -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
#20 3.144 -- Detecting CXX compile features
#20 3.145 -- Detecting CXX compile features - done
#20 3.164 -- The following features have been enabled:
#20 3.164 
#20 3.164  * MZ_COMPAT, Enables compatibility layer
#20 3.164  * MZ_PKCRYPT, Enables PKWARE traditional encryption
#20 3.164  * MZ_ICONV, Enables iconv string encoding conversion library
#20 3.164  * MZ_BUILD_FUZZ_TESTS, Builds minizip fuzzer executables
#20 3.164 
#20 3.164 -- The following features have been disabled:
#20 3.164 
#20 3.164  * MZ_ZLIB, Enables ZLIB compression
#20 3.164  * MZ_BZIP2, Enables BZIP2 compression
#20 3.164  * MZ_LZMA, Enables LZMA & XZ compression
#20 3.164  * MZ_ZSTD, Enables ZSTD compression
#20 3.164  * MZ_LIBCOMP, Enables Apple compression
#20 3.164  * MZ_FETCH_LIBS, Enables fetching third-party libraries if not found
#20 3.164  * MZ_FORCE_FETCH_LIBS, Enables fetching third-party libraries always
#20 3.164  * MZ_WZAES, Enables WinZIP AES encryption
#20 3.164  * MZ_OPENSSL, Enables OpenSSL for encryption
#20 3.164  * MZ_LIBBSD, Build with libbsd for crypto random
#20 3.164  * MZ_SIGNING, Enables zip signing support
#20 3.164  * MZ_COMPRESS_ONLY, Only support compression
#20 3.164  * MZ_DECOMPRESS_ONLY, Only support decompression
#20 3.164  * MZ_FILE32_API, Builds using posix 32-bit file api
#20 3.164  * MZ_BUILD_TESTS, Builds minizip test executable
#20 3.164  * MZ_BUILD_UNIT_TESTS, Builds minizip unit test project
#20 3.164  * MZ_CODE_COVERAGE, Builds with code coverage flags
#20 3.164 
#20 3.165 -- Configuring done
#20 3.177 -- Generating done
#20 3.179 -- Build files have been written to: /src/minizip
#20 3.185 + make clean
#20 3.208 ++ nproc
#20 3.209 + make -j8
#20 3.235 [  5%] Building C object CMakeFiles/minizip.dir/mz_crypt.c.o
#20 3.236 [ 17%] Building C object CMakeFiles/minizip.dir/mz_strm.c.o
#20 3.236 [ 23%] Building C object CMakeFiles/minizip.dir/mz_strm_buf.c.o
#20 3.237 [ 29%] Building C object CMakeFiles/minizip.dir/mz_strm_mem.c.o
#20 3.237 [ 35%] Building C object CMakeFiles/minizip.dir/mz_strm_split.c.o
#20 3.237 [ 41%] Building C object CMakeFiles/minizip.dir/mz_zip.c.o
#20 3.238 [ 47%] Building C object CMakeFiles/minizip.dir/mz_zip_rw.c.o
#20 3.238 [ 11%] Building C object CMakeFiles/minizip.dir/mz_os.c.o
#20 3.311 [ 52%] Building C object CMakeFiles/minizip.dir/mz_os_posix.c.o
#20 3.379 [ 58%] Building C object CMakeFiles/minizip.dir/mz_strm_os_posix.c.o
#20 3.418 [ 64%] Building C object CMakeFiles/minizip.dir/mz_strm_pkcrypt.c.o
#20 3.474 [ 70%] Building C object CMakeFiles/minizip.dir/mz_compat.c.o
#20 4.260 [ 76%] Linking C static library libminizip.a
#20 4.279 [ 76%] Built target minizip
#20 4.292 [ 82%] Building C object CMakeFiles/unzip_fuzzer.dir/test/fuzz/unzip_fuzzer.c.o
#20 4.292 [ 88%] Building C object CMakeFiles/zip_fuzzer.dir/test/fuzz/zip_fuzzer.c.o
#20 4.343 [ 94%] Linking CXX executable unzip_fuzzer
#20 4.346 [100%] Linking CXX executable zip_fuzzer
#20 4.612 [100%] Built target zip_fuzzer
#20 4.615 [100%] Built target unzip_fuzzer
#20 4.627 + zip -j /out/unzip_fuzzer_seed_corpus.zip test/fuzz/unzip_fuzzer_seed_corpus/as.zip test/fuzz/unzip_fuzzer_seed_corpus/bzip2.zip test/fuzz/unzip_fuzzer_seed_corpus/comments.zip test/fuzz/unzip_fuzzer_seed_corpus/corpus.zip test/fuzz/unzip_fuzzer_seed_corpus/encrypted_pkcrypt.zip test/fuzz/unzip_fuzzer_seed_corpus/encrypted_wzaes.zip test/fuzz/unzip_fuzzer_seed_corpus/gh.zip test/fuzz/unzip_fuzzer_seed_corpus/infozip_symlinks.zip test/fuzz/unzip_fuzzer_seed_corpus/large_cd_comment.zip test/fuzz/unzip_fuzzer_seed_corpus/license_zstd.zip test/fuzz/unzip_fuzzer_seed_corpus/lzma.zip test/fuzz/unzip_fuzzer_seed_corpus/permissions.zip test/fuzz/unzip_fuzzer_seed_corpus/signed.zip test/fuzz/unzip_fuzzer_seed_corpus/storeonly.zip test/fuzz/unzip_fuzzer_seed_corpus/tiny.zip test/fuzz/unzip_fuzzer_seed_corpus/unsupported_permissions.zip test/fuzz/unzip_fuzzer_seed_corpus/xz.zip test/fuzz/unzip_fuzzer_seed_corpus/zip64.zip
#20 4.630   adding: as.zip (stored 0%)
#20 4.630   adding: bzip2.zip (stored 0%)
#20 4.636   adding: comments.zip (stored 0%)
#20 4.636   adding: corpus.zip (stored 0%)
#20 4.638   adding: encrypted_pkcrypt.zip (stored 0%)
#20 4.638   adding: encrypted_wzaes.zip (stored 0%)
#20 4.638   adding: gh.zip (stored 0%)
#20 4.638   adding: infozip_symlinks.zip (stored 0%)
#20 4.638   adding: large_cd_comment.zip (stored 0%)
#20 4.640   adding: license_zstd.zip (stored 0%)
#20 4.640   adding: lzma.zip (stored 0%)
#20 4.640   adding: permissions.zip (stored 0%)
#20 4.640   adding: signed.zip (stored 0%)
#20 4.642   adding: storeonly.zip (stored 0%)
#20 4.643   adding: tiny.zip (stored 0%)
#20 4.643   adding: unsupported_permissions.zip (stored 0%)
#20 4.643   adding: xz.zip (stored 0%)
#20 4.645   adding: zip64.zip (stored 0%)
#20 4.645 + find . -name '*_fuzzer' -exec cp -v '{}' /out ';'
#20 4.654 './unzip_fuzzer' -> '/out/unzip_fuzzer'
#20 4.659 './zip_fuzzer' -> '/out/zip_fuzzer'
#20 4.661 + find . -name '*_fuzzer.dict' -exec cp -v '{}' /out ';'
#20 4.665 './test/fuzz/unzip_fuzzer.dict' -> '/out/unzip_fuzzer.dict'
#20 4.668 + find . -name '*_fuzzer_seed_corpus.zip' -exec cp -v '{}' /out ';'
#20 4.673 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 5.1s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:a2f487420d6c5bf0afe6ddb596819de882b0578a155cf50244a0665122ca659f done
#21 naming to gcr.io/fuzzbench/builders/afl/minizip_minizip done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/minizip_minizip:
------
#2 [internal] load .dockerignore
#2 sha256:0e391075c00d6e35083b893b53a30d42ba386a03e7d11bacdf59884166bb8e20
#2 transferring context: 2B done
#2 DONE 0.1s

#1 [internal] load build definition from runner.Dockerfile
#1 sha256:d209c84152139ad86284a45db0dc1babc55153acf50e305447844ffaaacd5eef
#1 transferring dockerfile: 656B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/minizip_minizip-intermediate
#5 sha256:09e91af7d5b691d78ddd20ca568dbd93050a72d8311def377490e4dea9c4858f
#5 ERROR: gcr.io/fuzzbench/runners/afl/minizip_minizip-intermediate:latest: not found

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f done
#6 naming to gcr.io/fuzzbench/runners/afl/minizip_minizip-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/minizip_minizip-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:b0fdd4d3e3756b89d5ae00da47bdd1cf58205734b81b3784895454e6d2a2bfa2
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:fc8c45d5548abffd8b9de71123c2ccc7a801a05153011c3498a58c3d181b0a42
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/minizip_minizip:latest
#3 sha256:f27d1d4c8179c01574d143da599549d975ad3e549e9b93ffcfde1f7a30546fbb
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/runners/afl/minizip_minizip-intermediate:latest
#4 sha256:2cccf6b56c4ffd92b6f64387b7b597b331ce592a61845277cdc72ce19bf9efad
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:18343c28fc680dd6bb0cdd62b591f3b9a217d24af89fe94168ed63e0cdfe609f
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/minizip_minizip-intermediate
#6 sha256:4e2ff5f56ee085f4f718bd1ab8351c5eceeb71a3247726e63d8d3ff6131889f9
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/minizip_minizip
#10 sha256:05b44d76060e5020141e0f2472c2888f6da8b2f0ee036da7eedaefa284759d29
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/minizip_minizip
#5 sha256:575d839f0d2406f42bff5fcfc59937ab3d4c91a9611b75a816997856d75263a5
#5 ERROR: gcr.io/fuzzbench/runners/afl/minizip_minizip:latest: not found

#12 [internal] load build context
#12 sha256:18343c28fc680dd6bb0cdd62b591f3b9a217d24af89fe94168ed63e0cdfe609f
#12 transferring context: 17.65MB 0.6s done
#12 DONE 0.8s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/minizip_minizip
#10 sha256:05b44d76060e5020141e0f2472c2888f6da8b2f0ee036da7eedaefa284759d29
#10 DONE 1.9s

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:1c3ddd8edd828d1cb8554f66ddd4cfd5bb0597b37822e341f362cea2bf65fcd2
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:d1b4d4d44bd8da1ac22e16d00e040c681b03134d7da0fe25916bd220633bc133
#9 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:1cd104e2635538fef045ac1b044bd4b23edc6a66d66561af242fa78cd0d0a0ab
#7 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:f0b7c1381860a02d3fa49930cfcfe81aad7e1d872625a7220070c09763168e31
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:1816822fe46c689028d8abc3cdf3ac07ce43c47f5748e267f7a657818c320629
#13 DONE 1.0s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:e20a7e0e377d17d954192e0ee264bc8ef0be19bdeb837a8c077702738e02f28b
#14 DONE 0.2s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:c51ddc28383452f66beebf0655a99ecbeacffa8672c7413ed394ca0ac259f331
#15 DONE 0.6s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:bc91bcdd323b643b0cdf5411da5e23172d2a9ed075d69d6446e0b274cdf1f34e
#16 DONE 0.6s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:1256fa95e43113d62ea5348fd11412d5407f4a9d25f1b5f4dfb0974a1636be91
#17 DONE 0.1s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:868138b54d0fdcc2cff037ee1c89582d37461c6547749c7f91d21d6951aed497
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:f31634209739f57e76709af8c9a9713e218fdd0cf6dd61d2d4cd3fe2dca73ebf
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:663d39c228e605bac18b504a9aa85b04b27bed2cd7ad8d128393b25c8bfde8fd
#20 DONE 0.7s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:23d038606909c9883bea42bb9db06179e281a9927c3e65b82339584324af543e 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/minizip_minizip 0.0s done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/minizip_minizip:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f2a4f9b3f70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:5d2ecd5b044d7eff841bd8056d8f6fd9cf49ddb595fdd728556f4d2ff137a63a
#2 transferring context: 2B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:ae3b0b0cd95e1ade3002574fdaac1d60294899bbfd471799412b3fce056f8fac
#1 transferring dockerfile: 32B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/minizip_minizip
#4 sha256:bf778af08b829b59afe78f59ae4058d05efb302174329521cab3088eac8a43c9
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:61a004d70aea72dc216602d9c977dd7acea263d4d9b96c97452d33cd603c4de9
#9 transferring context: 30B done
#9 DONE 0.1s

#6 [2/5] RUN apt-get update && apt-get install -y make cmake pkg-config
#6 sha256:4028807a9ce75095abb821d79984b15fe02b0f1c310dfb6d6dbdc3cfebf130ab
#6 CACHED

#7 [3/5] RUN git clone -b dev https://github.com/nmoinvaz/minizip
#7 sha256:4a3f9d25539ff8db2517c2452bf0454704e00f28dbe0011ce5bf5ea9b912b538
#7 CACHED

#8 [4/5] WORKDIR minizip
#8 sha256:6a16ff4c6af9be25fcb2af889624702a3ac877f398a97b01f392c1119d69513b
#8 CACHED

#10 [5/5] COPY build.sh /src/
#10 sha256:42916f666ecb87dd335b040da1299075602db564b3ff7b270ce8bb4db49aaf79
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:33866932a3dcba1dbb0b598447a746e80e04a5e807e080b815ebe2a39db1d750 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/minizip_minizip done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:cb153ef177826f91df50a0f0fd2845414e505da8211d59028a3c8f10648a1bd1
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:7d2d4e31187ad311a304665b630f657ab1628e322da49aced37703a5bc1ea3c1
#2 transferring context: 2B done
#2 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/minizip_minizip:latest
#3 sha256:d41528c9de382a97ea9b19ab179b8f24b17363c23ac929cd3da6c7679c1588de
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate
#4 sha256:bf2b3e354b0c523c6b197bdac0b3c3763948e9926732bd67cb0b030ea1e030f7
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/minizip_minizip
#5 sha256:d27ad0c6de5706e7929164f92ca5018007dc8f978894cb78258ecd7c480bf805
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:29ed736921e5d322abfbde4ff6f7b39a554f4bf78c0eb6bd99c25040613cbc60
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:cb6e470d74d7a184864e9b8fd911879aa82869acf43884a5293c412f4f16bb4b
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:46716f88e6a674348a7933ccd53e467a17eb51491fcc5e689ad56fd20dddfe9d 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:25598717f8d0b5fd5ffb7e999b19b18b7c87c6aa6431e8e5db5a6e2de2014ee1
#1 transferring dockerfile:
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.5s

#2 [internal] load .dockerignore
#2 sha256:de5ea8d269181f270017e1c5c050642eeea4c6f192ee1dd541cfb73e1250fc36
#2 transferring context: 34B done
#2 DONE 0.6s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:0bf3532fec6f32d4eb4a0c15212a6987cdcfec40e601c6d8035306128686200c
#8 transferring context: 559B 0.2s done
#8 DONE 0.4s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:98d69ee88f854af949d9c795348c5d13b15655b0c7cd209a059b4206965ee97c
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:a4adaaaf2989b38bd403806dd92ab7aa07d5325b5bafaffe320cff7d7ea3ed18
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:642cec3e5a7c1df22e9b6a2b6aca20f9549eca980b2e8e5a11d8a85fea6ec80f
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:50a7ac2b48a49017f346ef77b890b741d4437494276bfb93a449d1762e1d8102
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.1s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.7s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:2fa5986273285a3d80138e4d222be12a58759d14ba55f6c1b22f7567588e43e3
#2 transferring context: 34B done
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:8ee6c4d98aa143fa6b30dcf168f1066b2990e9e463688b0964e8671fa1a34294
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.7s

#2 [internal] load .dockerignore
#2 sha256:2fa5986273285a3d80138e4d222be12a58759d14ba55f6c1b22f7567588e43e3
#2 DONE 0.9s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate:latest
#3 sha256:31db2fb3c876459eb2a506ae78f4eff0d411ead295df83d164db4270d9710608
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate
#6 sha256:d6e154f2c7676fb90910e7a5ac16717891aaadbfa384ffc3661487d62bb35250
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/minizip_minizip
#5 sha256:fa87fce5b6593dc0dbc6d21c408afd0a15f9150091823decc9889f28923a604d
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:38b5748af7761031a1c7cdce23a92f4ad7f4fd7e32ce5b7363d945665e5394b4
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.1s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:fd4f69eb0b756142c098597e1b441682fe1cf69db32eeda7bb671315cb9602f3
#11 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:98f53af1d6240bde0b61d50b3a749072fad49c66aeead80825fa71bc37aba6b0
#14 CACHED

#15 [stage-1  8/13] COPY benchmarks/minizip_minizip/benchmark.yaml /
#15 sha256:c5e3c2825403cce11b9a5bbc9247ff8efa666e61a07d38528f939834336b6057
#15 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:0afc58f89ceee684a44f83a0cc08daec819b0798fb77712964dbdc62c70dbba8
#9 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:06978dcb95175433e6905c73c9132ffaa34ccc4d56f1fdd28db58775b007ee8a
#16 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:1a83175d91996f94009fef7826c1a197e912cc1b6ce4a36fce006eb397cb1511
#8 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:8cf25d29731c9ae5b96e4fe099a71a84ad6d014cc4a719fa70e4ddee4c53bd4f
#13 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:de6a63ac6c2ef01c367b1620c1b5b3bbba47ebd56aba7e9f1b647a4f705b22aa
#18 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:9827b3eb04a37f610202ad67803cb41a7183f148597ac9ea3a30318e48281f2e
#10 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:5909e96853ae00f4a63e1f0d8d71f4847e0cb3cbfc945d446134ae1a780516d8
#17 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:9aee46bef5e51e1d8af702462450fea2fffa9e29babf20d95ef13b26807c3b95
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:2ed21616cc31a582a1540b275866e5c07c43d421354aabad38193d7f00e5c42a
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:a2f487420d6c5bf0afe6ddb596819de882b0578a155cf50244a0665122ca659f 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/minizip_minizip done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:f85386800bbd5478245fc25e48a0c098d16296478c40de1b76717ba181141c56
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:a351c4dc1d2ba5e82e6b7ab6d7d909218077bb914c5032e74466f824a544b87c
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/minizip_minizip-intermediate
#5 sha256:09e91af7d5b691d78ddd20ca568dbd93050a72d8311def377490e4dea9c4858f
#5 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/minizip_minizip-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:7a4d7ccf51c9883069b6617a75d7933eb2f73a5b8b971415ea269ebd950778e6
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.7s

#2 [internal] load .dockerignore
#2 sha256:dbcda223f2e436b3b4a08c0b79750b2039132ca0842a0e624919964bed9c73ab
#2 transferring context: 34B done
#2 DONE 0.6s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/minizip_minizip-intermediate:latest
#3 sha256:2cccf6b56c4ffd92b6f64387b7b597b331ce592a61845277cdc72ce19bf9efad
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/minizip_minizip:latest
#4 sha256:f27d1d4c8179c01574d143da599549d975ad3e549e9b93ffcfde1f7a30546fbb
#4 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/minizip_minizip-intermediate
#6 sha256:4e2ff5f56ee085f4f718bd1ab8351c5eceeb71a3247726e63d8d3ff6131889f9
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/minizip_minizip
#5 sha256:575d839f0d2406f42bff5fcfc59937ab3d4c91a9611b75a816997856d75263a5
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/minizip_minizip
#10 sha256:05b44d76060e5020141e0f2472c2888f6da8b2f0ee036da7eedaefa284759d29
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:721d7ebe4103d3ae51b4ba56a948bacbfaae091c17701132f1f2c8b1693dc925
#12 transferring context: 17.65MB 0.7s done
#12 DONE 0.8s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:4dffafe06d421d1648a75f212be08211d02e9fde877c07b9bdac9121f70c0c9a
#14 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:d1b4d4d44bd8da1ac22e16d00e040c681b03134d7da0fe25916bd220633bc133
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:f0b7c1381860a02d3fa49930cfcfe81aad7e1d872625a7220070c09763168e31
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:98226122448e8f0e67606440f6feb31bdfdb00373e28b91773a2c64922790617
#13 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:1c3ddd8edd828d1cb8554f66ddd4cfd5bb0597b37822e341f362cea2bf65fcd2
#8 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:1cd104e2635538fef045ac1b044bd4b23edc6a66d66561af242fa78cd0d0a0ab
#7 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:b063130dd960b66fa5c64c23fb51ad5e5788ae821dab5a189ad82a4a6af93933
#15 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:695486bb3ab5488901cefd315a1837ecdbcb3ca8e90627f2831a30f8aa36f396
#16 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:9b26adbcf8d77623815ba2aa3b084186b69c97d9699b1582fb62ec6d4a1a8d87
#18 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:20f3f31248e9091b069eb68c082e061b338a3bafc5989190cf14b01ffad1d823
#17 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:8bb3d0ca7d230cd8672ced2eaf59fa9773060655fa4723f0b9a8336ddc0033dc
#19 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:23592090710708064199049ecb941cf6c056dd20ad46c7ef7d26f698dd6ebfe4
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:23d038606909c9883bea42bb9db06179e281a9927c3e65b82339584324af543e 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/minizip_minizip done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7fb84aa18f70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
