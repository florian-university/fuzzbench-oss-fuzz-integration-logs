WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: cppcheck_cppcheck.
INFO:root:Please run "make test-run-afl-cppcheck_cppcheck" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:867d4a0e8a4374b1380835d429855724b77bfff45a5c50494ce3d1b243f777dd
#1 transferring dockerfile:
#1 transferring dockerfile: 970B done
#1 DONE 1.3s

#2 [internal] load .dockerignore
#2 sha256:1f177ce7632e237098c426a2b2469f40244f08f071632b1211aefcacb00c8401
#2 transferring context: 2B done
#2 DONE 1.7s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 1.1s

#9 [internal] load build context
#9 sha256:8e309286c33da6c4e18a3fc7f8fbad735d0bd0550f1de12501cba02e31646b40
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/cppcheck_cppcheck
#4 sha256:196b5554b363b93a0ac4611df53c98f572462aec1516505cb0319658192eaf61
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/cppcheck_cppcheck:latest: not found

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 CACHED

#9 [internal] load build context
#9 sha256:8e309286c33da6c4e18a3fc7f8fbad735d0bd0550f1de12501cba02e31646b40
#9 transferring context: 791B 0.1s done
#9 DONE 1.3s

#6 [2/5] RUN git clone https://github.com/orbitcowboy/afl_cppcheck.git afl_cppcheck
#6 sha256:361e20c993fb1eabb4864fc906f7cd900e319176be8dfa0c9d7807e196183a8d
#6 1.236 Cloning into 'afl_cppcheck'...
#6 DONE 2.3s

#7 [3/5] RUN git clone https://github.com/danmar/cppcheck.git afl_cppcheck/cppcheck
#7 sha256:4f3dc2816dcd7699732176475f4391a06cbe208744310ca4bd09fd3d74c854e6
#7 0.494 Cloning into 'afl_cppcheck/cppcheck'...
#7 DONE 36.8s

#8 [4/5] WORKDIR afl_cppcheck
#8 sha256:dfdd25eb913b977e01021be6bf9b506acb77d394ff75f1d46d8a1e8c38e96e80
#8 DONE 0.1s

#10 [5/5] COPY build.sh /src/
#10 sha256:cbb3cf8b8122331f86b6558f110e020ae4fb3a76665980218f4c1690010f9cdc
#10 DONE 0.1s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:a154cb4eef4e681c59c24d6c8d9e64efc13153c656d21e740e612e0fca956285
#11 writing image sha256:a154cb4eef4e681c59c24d6c8d9e64efc13153c656d21e740e612e0fca956285 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/cppcheck_cppcheck done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/cppcheck_cppcheck:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:2723506f5851fa1494822589c84129bd33914f74e7b4b5877580ad10a29e4369
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:df02da9ccf3c14f1580b5d8b3603fb4f28684367da1cd3121adc232267bc02c4
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/cppcheck_cppcheck:latest
#3 sha256:12a20a27cd95d9adcbb204f688e14d13cae1735c575b442fd2265977dba8221d
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/cppcheck_cppcheck
#5 sha256:0a268b64686837cbab6df0aca2f84dd9c5d300c917b06dfed7bf6e07d20ab39d
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/cppcheck_cppcheck-intermediate
#4 sha256:49fbc53c68d0e1acfd8bad7654500f956aa13f0475f58d0df25931dea86ed47b
#4 ERROR: gcr.io/fuzzbench/builders/afl/cppcheck_cppcheck-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/cppcheck_cppcheck
#5 sha256:0a268b64686837cbab6df0aca2f84dd9c5d300c917b06dfed7bf6e07d20ab39d
#5 DONE 0.8s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:e67569681081b5132300a2a0e8f96ca75347daf874de9d9f6e5d4a4b68904945
#6 0.432 Cloning into '/afl'...
#6 1.162 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.162 
#6 1.162 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.162 changes and commit them, and you can discard any commits you make in this
#6 1.162 state without impacting any branches by switching back to a branch.
#6 1.162 
#6 1.162 If you want to create a new branch to retain commits you create, you may
#6 1.162 do so (now or later) by using -c with the switch command. Example:
#6 1.162 
#6 1.162   git switch -c <new-branch-name>
#6 1.162 
#6 1.162 Or undo this operation with:
#6 1.162 
#6 1.162   git switch -
#6 1.162 
#6 1.162 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.162 
#6 1.162 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.205 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.205 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.392 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.398 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.860 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.175 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.603 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.761 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.162 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.399 ln -sf afl-as as
#6 5.401 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.403 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.404 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 5.6s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:e34ca9a447cae9997e89c9a45a4ee5cb78313e0c06a4d988023d1af8f834e8e6
#7 1.289 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#7 1.289 Get:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#7 1.292 Get:3 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#7 1.295 Get:4 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#7 1.298 Hit:5 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 1.677 Get:6 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [827 kB]
#7 1.806 Get:7 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1134 kB]
#7 1.884 Get:8 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1984 kB]
#7 2.032 Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [755 kB]
#7 2.318 Fetched 5036 kB in 2s (3195 kB/s)
#7 2.318 Reading package lists...
#7 3.904 Reading package lists...
#7 5.316 Building dependency tree...
#7 5.527 Reading state information...
#7 5.768 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.768 0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
#7 5.778 --2022-02-19 01:24:45--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.782 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.111.133, 185.199.110.133, 185.199.108.133, ...
#7 5.794 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.111.133|:443... connected.
#7 5.818 HTTP request sent, awaiting response... 200 OK
#7 5.986 Length: 9177 (9.0K) [text/plain]
#7 5.986 Saving to: '/afl/afl_driver.cpp'
#7 5.986 
#7 5.986      0K ........                                              100% 12.4M=0.001s
#7 5.986 
#7 5.986 2022-02-19 01:24:45 (12.4 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.986 
#7 7.762 ar: creating /libAFL.a
#7 DONE 8.1s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:2faddea3b341764e33fcbe95f5221f1eb02a2bfea58687618f25f0e1da0211ea done
#8 naming to gcr.io/fuzzbench/builders/afl/cppcheck_cppcheck-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/cppcheck_cppcheck-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:171baf237babd1753362ea7edb46ccdd99bbef852ec3b171d11cff666e12a4a8
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:8c9dc2a2b546ac2c8a1c29142f35bcad92af9c6b9f64a2605240cba7cd36d46e
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:5c7e10503140511290dfc36b5cb86fe80b1816584d84c6fb13ad23df175d3a38
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:43447a1bee66b6362350ea3ee1c98419b3af75edc15d1029758a3bf249f8a338
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:3695c7871413224c868213a06c49d030ae6b95701a24866b43d479c88c35c9d7
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:2f7c69bc4c43e73c1021fff368b6b31c47e86f216b3a4925793f11091221e557
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:474f90c35b3d3a03f4bac952eebb0a3146a33df7644e707af83fc2ede09475f7
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:ccaab23fee99e2873558246c9af16a799fa9bb41f3c8ca1abfa401c679b4444f 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.6s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:7684ab52336dbe4b46a2eee154efdfc363e2cef9d4d11998c4bcb00a7e9a8886
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:452e590e9afe4b387943c327d2cb8d55fb94d74af6a817048806b8a441244353
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/cppcheck_cppcheck-intermediate:latest
#3 sha256:315cf9b0b843066517549cb9c004ceca57e35aac0e5fe0313ac8b97aee781f52
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:5cecc9bc6f1ed651bc4d8bd89e5441424999b9cd1a7ace4e108ba40954a83758
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/cppcheck_cppcheck-intermediate
#6 sha256:25350bf8cf8a3fad580125f14c60625b326a72e5a0455d6cceb744a36f3036f9
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/cppcheck_cppcheck
#5 sha256:61628613568250a1db9647b1187272953877da0a2650ca71e20c125dd488a39e
#5 ERROR: gcr.io/fuzzbench/builders/afl/cppcheck_cppcheck:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:5cecc9bc6f1ed651bc4d8bd89e5441424999b9cd1a7ace4e108ba40954a83758
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/cppcheck_cppcheck-intermediate
#6 sha256:25350bf8cf8a3fad580125f14c60625b326a72e5a0455d6cceb744a36f3036f9
#6 DONE 0.2s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:6d849de187ca09a04935814caed7855f8370143f8f29af4eb6088fd7bb2bd952
#8 DONE 0.4s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:f680eae051b86bb793c6bfb48cad99bad6a4a2d7d0954088063ccba8aa0f930a
#9 DONE 13.9s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:672b6532b887bbf149a9d5778983d120d12f006bd501ee28da942bc775e80b8b
#10 DONE 0.1s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:891c81bfaad55f25b4708c1c37a514cfe7b0ac950eb330c85cd5328d79f2c3f9
#11 DONE 20.0s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:b1714c1baa273bb528819c05dab39460241b35419d18a18561e1299e399bb106
#13 DONE 0.2s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:8f0a40701f3b0ce4dc5856bc82b105fbcbe2d8dcb916553a706962b50e731b05
#14 DONE 0.6s

#15 [stage-1  8/13] COPY benchmarks/cppcheck_cppcheck/benchmark.yaml /
#15 sha256:253371150f12042c140685fcb7a411a656797a8e118a4383e3bf5f05fb4de1f2
#15 DONE 0.1s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:a8b6f9a8d52417796947fe0fce1acab2536b716224418fb40600dc0d73c28494
#16 DONE 1.1s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:f7294362c1cc7607a0bf085a20c14fc346b6d91219c8fac6368989e20b6ae911
#17 DONE 0.3s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:15c550f056f40c3a070f8456dc13f1d7e79dcec74011e98d6a4d1a6807fea4d1
#18 0.511 Checking out commit acd79090
#18 0.529 error: pathspec 'acd79090' did not match any file(s) known to git
#18 0.536 error: pathspec 'acd79090' did not match any file(s) known to git
#18 0.543 error: pathspec 'acd79090' did not match any file(s) known to git
#18 0.611 Checkout unsuccessful.
#18 DONE 0.8s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:defe31f3789986ed975cad46169847cd36e5281bf52883ce6f9e543f1bced8f5
#19 DONE 0.7s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:44b8d0800861637d7c0831eedae4efee3476164878c86b64473f2fe4ebf0914f
#20 0.508 Run fuzzer_build to build the target
#20 0.635 FUZZ_TARGET = cppcheck
#20 0.635 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.635 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.644 Building benchmark cppcheck_cppcheck with fuzzer afl
#20 0.647 + cd fuzzer-cli
#20 0.647 + make oss-fuzz-client
#20 0.651 clang++ -std=c++11 -g -DNO_MAIN -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o oss-fuzz-client -I ../cppcheck/lib -I ../cppcheck/externals/simplecpp -I ../cppcheck/externals/tinyxml -I ../cppcheck/externals/ main.cpp ../cppcheck/externals/simplecpp/simplecpp.cpp ../cppcheck/externals/tinyxml/tinyxml2.cpp ../cppcheck/lib/*.cpp -lFuzzingEngine
#20 0.793 clang-14: error: no such file or directory: '../cppcheck/externals/tinyxml/tinyxml2.cpp'
#20 0.813 make: *** [Makefile:26: oss-fuzz-client] Error 1
#20 0.814 Traceback (most recent call last):
#20 0.814   File "<string>", line 1, in <module>
#20 0.814   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 0.814     utils.build_benchmark()
#20 0.814   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 0.814     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 0.814   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 0.815     raise CalledProcessError(retcode, cmd)
#20 0.815 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 2.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/cppcheck_cppcheck:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2821617: .afl-cppcheck_cppcheck-builder] Error 1
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:58b0c86bbaec809b503ab41d407a94031770b8e1f7f1e07ce4881dd223509c61
#1 transferring dockerfile:
#1 transferring dockerfile: 32B done
#1 DONE 0.5s

#2 [internal] load .dockerignore
#2 sha256:8134bd331fcc168c8e5f0ffe6a52c7300b2c74450bab0d79a537f19e7ef52879
#2 transferring context: 2B done
#2 DONE 0.6s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/cppcheck_cppcheck
#4 sha256:196b5554b363b93a0ac4611df53c98f572462aec1516505cb0319658192eaf61
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:5292e487f4ffd1ded58d35a018e96e3f113ca70e5bc81119a4e6f529991d0cdc
#9 transferring context: 30B done
#9 DONE 0.1s

#8 [4/5] WORKDIR afl_cppcheck
#8 sha256:dfdd25eb913b977e01021be6bf9b506acb77d394ff75f1d46d8a1e8c38e96e80
#8 CACHED

#6 [2/5] RUN git clone https://github.com/orbitcowboy/afl_cppcheck.git afl_cppcheck
#6 sha256:361e20c993fb1eabb4864fc906f7cd900e319176be8dfa0c9d7807e196183a8d
#6 CACHED

#7 [3/5] RUN git clone https://github.com/danmar/cppcheck.git afl_cppcheck/cppcheck
#7 sha256:4f3dc2816dcd7699732176475f4391a06cbe208744310ca4bd09fd3d74c854e6
#7 CACHED

#10 [5/5] COPY build.sh /src/
#10 sha256:776bcce9045910458946ef285458105bc629caf288fe58a80f25fc239b3e24ad
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:a154cb4eef4e681c59c24d6c8d9e64efc13153c656d21e740e612e0fca956285 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/cppcheck_cppcheck done
#11 DONE 0.3s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:31ec40fdf76ab184b4af430f71b4f3ae0214292e0f4e87ee90e3ecf9da94d22b
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:80e913784031aaa2563c20534b2bac0eeb28eafe9945790cc3537d56e428b62a
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/cppcheck_cppcheck:latest
#3 sha256:12a20a27cd95d9adcbb204f688e14d13cae1735c575b442fd2265977dba8221d
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/cppcheck_cppcheck-intermediate
#4 sha256:49fbc53c68d0e1acfd8bad7654500f956aa13f0475f58d0df25931dea86ed47b
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/cppcheck_cppcheck
#5 sha256:0a268b64686837cbab6df0aca2f84dd9c5d300c917b06dfed7bf6e07d20ab39d
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:e67569681081b5132300a2a0e8f96ca75347daf874de9d9f6e5d4a4b68904945
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:e34ca9a447cae9997e89c9a45a4ee5cb78313e0c06a4d988023d1af8f834e8e6
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:2faddea3b341764e33fcbe95f5221f1eb02a2bfea58687618f25f0e1da0211ea 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/cppcheck_cppcheck-intermediate done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:870fdf51cffd307bf3dd7bdba1dba70fae9c661c6cc1cf33b0da9f4da772b016
#2 transferring context: 34B done
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:60c8d2565c3c971a94bb79d9d892c1565c2fd78e9f190c31601cdb59b30fadc3
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:870fdf51cffd307bf3dd7bdba1dba70fae9c661c6cc1cf33b0da9f4da772b016
#2 DONE 0.3s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:c70c1d42d636a19807f7cffde1b4a582616041ca0e5641087c317ed540a277a3
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:2434c2490155f8de1c8ee27780d9290136f7aca987bd949f10abc1e62ef5e51b
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:482c9a2dda0e30a82d89adddd03c0cd7f376ed4ac94f64370ae677302404740e
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:b45509e2d98c0445cc7ed64a079bb29e7755b7397eee468567c38e26b06982d0
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:2c02ce12dca093f606e089ee27d6c882868a8fec7ed5b00ea6af043569b2d776
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:ccaab23fee99e2873558246c9af16a799fa9bb41f3c8ca1abfa401c679b4444f 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:09b6b4b370b954eb8821642c8933b130d3bed8206427418727417d3ef333ea9a
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:6b85739049f7775da0b42db2c345a02a14ced1ae92390f2ce19dd84c06a9143c
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/cppcheck_cppcheck-intermediate:latest
#3 sha256:315cf9b0b843066517549cb9c004ceca57e35aac0e5fe0313ac8b97aee781f52
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:34d2fc412a3b5a9f098c05b5f685689af45645d180ed4b550e8d566cf5560371
#12 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/cppcheck_cppcheck
#5 sha256:61628613568250a1db9647b1187272953877da0a2650ca71e20c125dd488a39e
#5 ERROR: gcr.io/fuzzbench/builders/afl/cppcheck_cppcheck:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/cppcheck_cppcheck-intermediate
#6 sha256:25350bf8cf8a3fad580125f14c60625b326a72e5a0455d6cceb744a36f3036f9
#6 DONE 0.0s

#12 [internal] load build context
#12 sha256:34d2fc412a3b5a9f098c05b5f685689af45645d180ed4b550e8d566cf5560371
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.2s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:672b6532b887bbf149a9d5778983d120d12f006bd501ee28da942bc775e80b8b
#10 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:af8463a7bc33467a6223e96b86d06b320fefb82b404f9c1ea27cb607adad5bf1
#14 CACHED

#15 [stage-1  8/13] COPY benchmarks/cppcheck_cppcheck/benchmark.yaml /
#15 sha256:4dc6c9e2c42128856ce1837036df59e34f50d964835e1c689fdb4572c417a0b7
#15 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:8a7506a24cf0fc9f9302c294f627f3113d31290817534e99c27f9ccfa7342fe3
#17 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:a376d80ee15aaf720b2e12a59714582a9103f29c9e115c9ec8842437bb43e8be
#18 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:6d849de187ca09a04935814caed7855f8370143f8f29af4eb6088fd7bb2bd952
#8 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:891c81bfaad55f25b4708c1c37a514cfe7b0ac950eb330c85cd5328d79f2c3f9
#11 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:f680eae051b86bb793c6bfb48cad99bad6a4a2d7d0954088063ccba8aa0f930a
#9 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:7192c9d5dfff718a0f6cd2b9ca76f3ffb67ed3a609aebd52db26816c44ac13e6
#13 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:b1b98a46b1473d5a03f460de51ffda502ded61e63ed578bdf756567747bff861
#16 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:268ff97a858dde459488e132354acc9c4c12c4a4409407607599fce4571c7b4a
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:0b21e92aaeb154d57410fcbc39b5aaa7c0068267cc409e7b0a64deba5cd0fd52
#20 0.518 Run fuzzer_build to build the target
#20 0.647 FUZZ_TARGET = cppcheck
#20 0.647 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.647 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.655 Building benchmark cppcheck_cppcheck with fuzzer afl
#20 0.658 + cd fuzzer-cli
#20 0.659 + make oss-fuzz-client
#20 0.660 clang++ -std=c++11 -g -DNO_MAIN -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o oss-fuzz-client -I ../cppcheck/lib -I ../cppcheck/externals/simplecpp -I ../cppcheck/externals/tinyxml -I ../cppcheck/externals/ main.cpp ../cppcheck/externals/simplecpp/simplecpp.cpp ../cppcheck/externals/tinyxml/tinyxml2.cpp ../cppcheck/lib/*.cpp -lFuzzingEngine
#20 0.680 clang-14: error: no such file or directory: '../cppcheck/externals/tinyxml/tinyxml2.cpp'
#20 0.697 make: *** [Makefile:26: oss-fuzz-client] Error 1
#20 0.698 Traceback (most recent call last):
#20 0.698   File "<string>", line 1, in <module>
#20 0.698   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 0.698     utils.build_benchmark()
#20 0.698   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 0.698     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 0.698   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 0.699     raise CalledProcessError(retcode, cmd)
#20 0.699 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 2.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/cppcheck_cppcheck:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2821617: .afl-cppcheck_cppcheck-builder] Error 1
