WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: flac_fuzzer_exo.
INFO:root:Please run "make test-run-afl-flac_fuzzer_exo" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:c12ae41d5e9d1d6dbfb197622bd696f57f1a27756f00443f27cadfe16e5f9972
#1 transferring dockerfile: 1.13kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:50aede610b4e8d69004333a5d70377ca6ce61507c882b98a15a662fde31d9c6d
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#11 [internal] load build context
#11 sha256:fc3616c2123330a9c4cea367bceae9bebf5a88be863974df1c0d38ef5186df98
#11 DONE 0.0s

#5 [1/7] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo
#4 sha256:a2fbe73c3833545b45b576c9992dfb705a0693cbfe0f8d0d14ecbbfb8e22a4c2
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo:latest: not found

#11 [internal] load build context
#11 sha256:fc3616c2123330a9c4cea367bceae9bebf5a88be863974df1c0d38ef5186df98
#11 transferring context: 2.12kB done
#11 DONE 0.2s

#9 [5/7] RUN git clone --depth 1 https://github.com/guidovranken/fuzzing-headers.git
#9 sha256:641642142aa1c88e89b9baff285f7dc74c7f0eceaff3b3500b12d3c6e6d86e21
#9 CACHED

#6 [2/7] RUN apt-get update && apt-get install -y make autoconf automake libtool libtool-bin pkg-config gettext sudo
#6 sha256:cf4cf36dc427e50cf8d862a59b23e8905d0bb90f0ee93db68bdcbc101414cae3
#6 CACHED

#7 [3/7] RUN git clone --depth 1 https://github.com/xiph/flac.git
#7 sha256:0ed5b13c40ae159e86af44a58886a684947b11a7b4fc444d79df5fd6b253ef5b
#7 CACHED

#8 [4/7] RUN git clone --depth 1 https://github.com/xiph/ogg.git
#8 sha256:281ada0474cd672602aba24eee565dcc2e8b66c1cf406288a01972070a0a5744
#8 CACHED

#10 [6/7] RUN git clone --depth 1 https://github.com/guidovranken/flac-fuzzers.git
#10 sha256:8340a5890971b05c713ee1c6e587a013fc8cb435330b99e5ea0c726f5c0d7681
#10 CACHED

#12 [7/7] COPY build.sh /src/
#12 sha256:32c5a10ec9bd78bca2384709868a9ed03e4eef4d5acfc220b98b499bb6ee32e3
#12 DONE 0.3s

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:8dfd7c3dde3ca34248b0d713fdf808aa1a9d86be28a7a0c59cebd338cb4ef9e7 done
#13 naming to gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:6ba45000cdb4c98ad53133e33be2d94004b03844742963964405c8282fecb197
#1 transferring dockerfile: 46B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:030fa1980109650cb7c7a15d2c5852b6324ce363425b7433bbee2c7b5ab8161e
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo:latest
#3 sha256:75851e499ee75ab0c843bda8ada84e920846da943fe81e9e508b8b4131a58852
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo
#5 sha256:90673f88336bbc1921494a0e989d3a05f86833fb50693e01e204a48f3faaa2a5
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate
#4 sha256:236679cb9d9e071be2329edd700fc5970b426d1521f4cecaed39bcffe88c4d18
#4 ERROR: gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo
#5 sha256:90673f88336bbc1921494a0e989d3a05f86833fb50693e01e204a48f3faaa2a5
#5 DONE 0.1s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:07c39a69203b6eeb52ba4c79eb515491df80c6877733b5daac806584e4f85a25
#6 0.344 Cloning into '/afl'...
#6 1.513 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.513 
#6 1.513 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.513 changes and commit them, and you can discard any commits you make in this
#6 1.513 state without impacting any branches by switching back to a branch.
#6 1.513 
#6 1.513 If you want to create a new branch to retain commits you create, you may
#6 1.513 do so (now or later) by using -c with the switch command. Example:
#6 1.513 
#6 1.513   git switch -c <new-branch-name>
#6 1.513 
#6 1.513 Or undo this operation with:
#6 1.513 
#6 1.513   git switch -
#6 1.513 
#6 1.513 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.513 
#6 1.513 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.530 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.531 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.714 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.718 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 4.098 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.411 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.837 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 5.096 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.493 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.738 ln -sf afl-as as
#6 5.741 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.743 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.744 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.0s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:2806afed7fd6e4d15ae611dde90a37ad06ee457e240feb73e87f2e34fd8a9824
#7 0.756 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.756 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.758 Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.780 Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 0.904 Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 1.694 Reading package lists...
#7 3.224 Reading package lists...
#7 4.634 Building dependency tree...
#7 4.845 Reading state information...
#7 5.094 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.094 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 5.105 --2022-02-16 14:46:13--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.108 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.109.133, 185.199.110.133, 185.199.111.133, ...
#7 5.110 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.109.133|:443... connected.
#7 5.142 HTTP request sent, awaiting response... 200 OK
#7 5.161 Length: 9177 (9.0K) [text/plain]
#7 5.161 Saving to: '/afl/afl_driver.cpp'
#7 5.162 
#7 5.162      0K ........                                              100% 10.5M=0.001s
#7 5.162 
#7 5.163 2022-02-16 14:46:13 (10.5 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.163 
#7 6.907 ar: creating /libAFL.a
#7 DONE 7.2s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:fc11a4dc7f02be88134e608aeb9562eb35a2a75b23a765dc90d052ac5bead01a done
#8 naming to gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:1d6d70955c317050f6070a6c582499017691d17add8b6ca037814f905ab55476
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:2e513d70cb484db44495202680510530d34956c295cf214369239f098c82ca57
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:b4bb0b1024573cfc6336ab1bef7e097a5a74ab9b9b3ed15896ef6fcd73113a57
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:fd3136a36e7d39ae04ecff07a973fa937e2743826accb759f4fe04f88dd74499
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:a1b41e7f2665e12ac637cbcaf507011834fee5de0b912e82f3fabffcd80e5a7c
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:a801541264d946a7b6c41e71655e86fd3033c5c53089ae9a0d13a84586381112
#11 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:74ccb07aa0ef924d36263057ea2e628fbe038fd66be383b819c402dd1557af08
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:fbb9f2fa13ae39281a066604d5301f43369d84d7e4f8f2eaf6c2aad67122161e
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:8e6e5cdcaa1310f16f6084b4d5e19efb224462277d5d060dfe8bfb3624e03bae
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate:latest
#3 sha256:65786f6db6a2c621e280d2502d33fa2ff2695d4b3e9de78d38de10034c4f2fc5
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:34ba93e7cf51ecd2e402d22e648b91e949cb0db95cc3ea3fd371f59369789d35
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate
#6 sha256:074800b24ebc8e3fa3f627e2d93118f682b8bad32b8b0e132c94655fdc5f71ab
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo
#5 sha256:56d3c0d9d52a62d251865c34d45bcc2bdc9b8031b30f17bbbbeb6d7fd9c0bcff
#5 ERROR: gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:34ba93e7cf51ecd2e402d22e648b91e949cb0db95cc3ea3fd371f59369789d35
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.2s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate
#6 sha256:074800b24ebc8e3fa3f627e2d93118f682b8bad32b8b0e132c94655fdc5f71ab
#6 DONE 0.4s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:06f8b4e46f269cc71b6828c8968ee529e7ce94107d90ee0323f2430c83790f88
#8 DONE 0.5s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:10bb0a3ca18f4d0d322ae7969514ed97d4b23c3c8a19a2ec4f246c0d0c495183
#9 DONE 15.3s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:527e5871f1898dc68f91f671505b9ac9fcb04ed7452b162a0d6c326ad4117613
#10 DONE 0.2s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:1aaf39dd1fc2e1332f6da1080f2d5cd5d80239e989daf5ca36d2240bca78a637
#11 DONE 17.1s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:0073c7f23232a51421514273dc276a9719b6ceb83a98342267ac7ee3c44a5783
#13 DONE 0.1s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:240ec0bb2d6dc74fa9709764b4fffe0f7e8d1cb80364961a0bc674b280c049df
#14 DONE 0.5s

#15 [stage-1  8/13] COPY benchmarks/flac_fuzzer_exo/benchmark.yaml /
#15 sha256:065c1e6a97f54b3d763b29ac9744e4e2b449210ec3f6d8c1499a31c94ccae15f
#15 DONE 0.1s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:0f3bd3661600c62c610058379e97949e9e2e6250c88edcd4db21dfa3439f3b62
#16 DONE 0.5s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:195cee056898ed70947f326f0c62b8db9c9a6e068e3164bf24fbd979ff0aedb8
#17 DONE 0.1s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:5eb5357c7af63fd0c9f19f487d8616c943a7fb30ceeb101b90db914077590720
#18 0.528 Checking out commit c9e50868
#18 1.166 error: pathspec 'c9e50868' did not match any file(s) known to git
#18 2.188 error: pathspec 'c9e50868' did not match any file(s) known to git
#18 5.023 From https://github.com/xiph/ogg
#18 5.023  * [new tag]         v1.1.1     -> v1.1.1
#18 5.023  * [new tag]         v1.1.2     -> v1.1.2
#18 5.023  * [new tag]         v1.1.3     -> v1.1.3
#18 5.023  * [new tag]         v1.1.4     -> v1.1.4
#18 5.024  * [new tag]         v1.2.0     -> v1.2.0
#18 5.024  * [new tag]         v1.2.1     -> v1.2.1
#18 5.024  * [new tag]         v1.2.2     -> v1.2.2
#18 5.024  * [new tag]         v1.3.0     -> v1.3.0
#18 5.025  * [new tag]         v1.3.1     -> v1.3.1
#18 5.025  * [new tag]         v1.3.2     -> v1.3.2
#18 5.025  * [new tag]         v1.3.3     -> v1.3.3
#18 5.025  * [new tag]         v1.3.4     -> v1.3.4
#18 5.025  * [new tag]         v1.3.5     -> v1.3.5
#18 5.032 error: pathspec 'c9e50868' did not match any file(s) known to git
#18 9.893 From https://github.com/xiph/flac
#18 9.893  * [new tag]           1.2.0      -> 1.2.0
#18 9.893  * [new tag]           1.2.1      -> 1.2.1
#18 9.894  * [new tag]           1.3.0      -> 1.3.0
#18 9.894  * [new tag]           1.3.0pre1  -> 1.3.0pre1
#18 9.894  * [new tag]           1.3.0pre2  -> 1.3.0pre2
#18 9.894  * [new tag]           1.3.0pre4  -> 1.3.0pre4
#18 9.894  * [new tag]           1.3.1      -> 1.3.1
#18 9.895  * [new tag]           1.3.1pre1  -> 1.3.1pre1
#18 9.895  * [new tag]           1.3.2      -> 1.3.2
#18 9.895  * [new tag]           1.3.3      -> 1.3.3
#18 9.903 error: pathspec 'c9e50868' did not match any file(s) known to git
#18 9.910 error: pathspec 'c9e50868' did not match any file(s) known to git
#18 9.918 error: pathspec 'c9e50868' did not match any file(s) known to git
#18 9.952 error: pathspec 'c9e50868' did not match any file(s) known to git
#18 9.976 error: pathspec 'c9e50868' did not match any file(s) known to git
#18 10.06 Checkout unsuccessful.
#18 DONE 12.1s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:69a560cd01ad2760de38a7c45e1bd7ded15b86cfa1bc4b08ec729448cb5511c6
#19 DONE 2.4s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:c1ed7eb72a83054cd83cb2753e4974b38bcc4e8ce405cba92780b7ac82fd2df4
#20 0.931 Run fuzzer_build to build the target
#20 1.058 FUZZ_TARGET = fuzzer_exo
#20 1.058 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 1.058 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 1.068 Building benchmark flac_fuzzer_exo with fuzzer afl
#20 1.071 + export ASAN_OPTIONS=detect_leaks=0
#20 1.071 + ASAN_OPTIONS=detect_leaks=0
#20 1.071 + [[ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard = *sanitize=address* ]]
#20 1.072 + [[ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard = *sanitize=memory* ]]
#20 1.072 + export 'CXXFLAGS=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -D_GLIBCXX_DEBUG'
#20 1.072 + CXXFLAGS='-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -D_GLIBCXX_DEBUG'
#20 1.072 + mkdir /src/libogg-install
#20 1.073 + cd /src/ogg
#20 1.073 + ./autogen.sh
#20 1.077 Updating build configuration files for libogg, please wait....
#20 6.068 libtoolize: putting auxiliary files in '.'.
#20 6.068 libtoolize: copying file './ltmain.sh'
#20 6.111 libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
#20 6.111 libtoolize: copying file 'm4/libtool.m4'
#20 6.146 libtoolize: copying file 'm4/ltoptions.m4'
#20 6.186 libtoolize: copying file 'm4/ltsugar.m4'
#20 6.224 libtoolize: copying file 'm4/ltversion.m4'
#20 6.265 libtoolize: copying file 'm4/lt~obsolete.m4'
#20 11.07 configure.ac:5: installing './compile'
#20 11.07 configure.ac:5: installing './config.guess'
#20 11.07 configure.ac:5: installing './config.sub'
#20 11.08 configure.ac:9: installing './install-sh'
#20 11.08 configure.ac:9: installing './missing'
#20 11.32 src/Makefile.am: installing './depcomp'
#20 11.38 + ./configure --prefix=/src/libogg-install
#20 11.63 checking build system type... x86_64-pc-linux-gnu
#20 11.75 checking host system type... x86_64-pc-linux-gnu
#20 11.75 checking how to print strings... printf
#20 11.80 checking for gcc... clang
#20 11.87 checking whether the C compiler works... yes
#20 11.99 checking for C compiler default output file name... a.out
#20 12.00 checking for suffix of executables... 
#20 12.13 checking whether we are cross compiling... no
#20 12.25 checking for suffix of object files... o
#20 12.28 checking whether we are using the GNU C compiler... yes
#20 12.30 checking whether clang accepts -g... yes
#20 12.33 checking for clang option to accept ISO C89... none needed
#20 12.37 checking whether clang understands -c and -o together... yes
#20 12.41 checking for a sed that does not truncate output... /usr/bin/sed
#20 12.42 checking for grep that handles long lines and -e... /usr/bin/grep
#20 12.42 checking for egrep... /usr/bin/grep -E
#20 12.42 checking for fgrep... /usr/bin/grep -F
#20 12.43 checking for ld used by clang... /usr/bin/ld
#20 12.44 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 12.45 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 12.45 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 12.49 checking whether ln -s works... yes
#20 12.49 checking the maximum length of command line arguments... 1572864
#20 12.50 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 12.50 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 12.50 checking for /usr/bin/ld option to reload object files... -r
#20 12.50 checking for objdump... objdump
#20 12.50 checking how to recognize dependent libraries... pass_all
#20 12.50 checking for dlltool... no
#20 12.50 checking how to associate runtime and link libraries... printf %s\n
#20 12.50 checking for ar... ar
#20 12.51 checking for archiver @FILE support... @
#20 12.55 checking for strip... strip
#20 12.55 checking for ranlib... ranlib
#20 12.56 checking for gawk... no
#20 12.56 checking for mawk... mawk
#20 12.56 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 12.73 checking for sysroot... no
#20 12.73 checking for a working dd... /usr/bin/dd
#20 12.74 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 12.77 checking for mt... no
#20 12.77 checking if : is a manifest tool... no
#20 12.78 checking how to run the C preprocessor... clang -E
#20 12.88 checking for ANSI C header files... yes
#20 13.12 checking for sys/types.h... yes
#20 13.17 checking for sys/stat.h... yes
#20 13.23 checking for stdlib.h... yes
#20 13.28 checking for string.h... yes
#20 13.34 checking for memory.h... yes
#20 13.40 checking for strings.h... yes
#20 13.46 checking for inttypes.h... yes
#20 13.52 checking for stdint.h... yes
#20 13.58 checking for unistd.h... yes
#20 13.64 checking for dlfcn.h... yes
#20 13.70 checking for objdir... .libs
#20 13.87 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 13.90 checking for clang option to produce PIC... -fPIC -DPIC
#20 13.90 checking if clang PIC flag -fPIC -DPIC works... yes
#20 13.94 checking if clang static flag -static works... yes
#20 14.19 checking if clang supports -c -o file.o... yes
#20 14.24 checking if clang supports -c -o file.o... (cached) yes
#20 14.24 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 14.27 checking whether -lc should be explicitly linked in... no
#20 14.33 checking dynamic linker characteristics... GNU/Linux ld.so
#20 14.52 checking how to hardcode library paths into programs... immediate
#20 14.52 checking whether stripping libraries is possible... yes
#20 14.52 checking if libtool supports shared libraries... yes
#20 14.52 checking whether to build shared libraries... yes
#20 14.52 checking whether to build static libraries... yes
#20 14.53 checking for a BSD-compatible install... /usr/bin/install -c
#20 14.54 checking whether build environment is sane... yes
#20 14.56 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 14.56 checking whether make sets $(MAKE)... yes
#20 14.58 checking whether make supports the include directive... yes (GNU style)
#20 14.59 checking whether make supports nested variables... yes
#20 14.61 checking dependency style of clang... gcc3
#20 14.66 checking whether to enable maintainer-specific portions of Makefiles... yes
#20 14.67 checking for gcc... (cached) clang
#20 14.74 checking whether we are using the GNU C compiler... (cached) yes
#20 14.74 checking whether clang accepts -g... (cached) yes
#20 14.74 checking for clang option to accept ISO C89... (cached) none needed
#20 14.74 checking whether clang understands -c and -o together... (cached) yes
#20 14.74 checking for ANSI C header files... (cached) yes
#20 14.74 checking for inttypes.h... (cached) yes
#20 14.74 checking for stdint.h... (cached) yes
#20 14.74 checking for sys/types.h... (cached) yes
#20 14.74 checking for an ANSI C-conforming const... yes
#20 14.77 checking size of int16_t... 2
#20 14.93 checking size of uint16_t... 2
#20 15.09 checking size of u_int16_t... 2
#20 15.30 checking size of int32_t... 4
#20 15.45 checking size of uint32_t... 4
#20 15.62 checking size of u_int32_t... 4
#20 15.79 checking size of int64_t... 8
#20 15.95 checking size of uint64_t... 8
#20 16.12 checking size of short... 2
#20 16.29 checking size of int... 4
#20 16.47 checking size of long... 8
#20 16.64 checking size of long long... 8
#20 16.81 checking for working memcmp... yes
#20 17.02 checking that generated files are newer than configure... done
#20 17.02 configure: creating ./config.status
#20 17.81 config.status: creating Makefile
#20 17.83 config.status: creating src/Makefile
#20 17.86 config.status: creating doc/Makefile
#20 17.88 config.status: creating doc/libogg/Makefile
#20 17.91 config.status: creating include/Makefile
#20 17.94 config.status: creating include/ogg/Makefile
#20 17.96 config.status: creating include/ogg/config_types.h
#20 17.99 config.status: creating libogg.spec
#20 18.01 config.status: creating ogg.pc
#20 18.03 config.status: creating ogg-uninstalled.pc
#20 18.05 config.status: creating config.h
#20 18.06 config.status: executing libtool commands
#20 18.08 config.status: executing depfiles commands
#20 18.24 ++ nproc
#20 18.24 + make -j8
#20 18.25 make  all-recursive
#20 18.25 make[1]: Entering directory '/src/ogg'
#20 18.26 Making all in src
#20 18.26 make[2]: Entering directory '/src/ogg/src'
#20 18.26 clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include  -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT test_bitwise-bitwise.o -MD -MP -MF .deps/test_bitwise-bitwise.Tpo -c -o test_bitwise-bitwise.o `test -f 'bitwise.c' || echo './'`bitwise.c
#20 18.26 clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include  -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT test_framing-framing.o -MD -MP -MF .deps/test_framing-framing.Tpo -c -o test_framing-framing.o `test -f 'framing.c' || echo './'`framing.c
#20 18.26 /bin/bash ../libtool  --tag=CC   --mode=compile clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include   -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c -o framing.lo framing.c
#20 18.26 /bin/bash ../libtool  --tag=CC   --mode=compile clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include   -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c -o bitwise.lo bitwise.c
#20 18.32 libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c framing.c  -fPIC -DPIC -o .libs/framing.o
#20 18.32 libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c bitwise.c  -fPIC -DPIC -o .libs/bitwise.o
#20 18.51 libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c bitwise.c -o bitwise.o >/dev/null 2>&1
#20 18.70 mv -f .deps/bitwise.Tpo .deps/bitwise.Plo
#20 18.71 libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c framing.c -o framing.o >/dev/null 2>&1
#20 19.06 mv -f .deps/test_bitwise-bitwise.Tpo .deps/test_bitwise-bitwise.Po
#20 19.07 /bin/bash ../libtool  --tag=CC   --mode=link clang -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard   -o test_bitwise test_bitwise-bitwise.o  
#20 19.11 mv -f .deps/framing.Tpo .deps/framing.Plo
#20 19.12 /bin/bash ../libtool  --tag=CC   --mode=link clang  -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -no-undefined -version-info 8:5:8  -o libogg.la -rpath /src/libogg-install/lib framing.lo bitwise.lo  
#20 19.16 libtool: link: clang -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -o test_bitwise test_bitwise-bitwise.o  -pthread
#20 19.21 libtool: link: clang -shared  -fPIC -DPIC  .libs/framing.o .libs/bitwise.o    -O2 -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -O3   -pthread -Wl,-soname -Wl,libogg.so.0 -o .libs/libogg.so.0.8.5
#20 19.26 libtool: link: (cd ".libs" && rm -f "libogg.so.0" && ln -s "libogg.so.0.8.5" "libogg.so.0")
#20 19.26 libtool: link: (cd ".libs" && rm -f "libogg.so" && ln -s "libogg.so.0.8.5" "libogg.so")
#20 19.27 libtool: link: ar cr .libs/libogg.a  framing.o bitwise.o
#20 19.27 libtool: link: ranlib .libs/libogg.a
#20 19.29 libtool: link: ( cd ".libs" && rm -f "libogg.la" && ln -s "../libogg.la" "libogg.la" )
#20 19.44 mv -f .deps/test_framing-framing.Tpo .deps/test_framing-framing.Po
#20 19.45 /bin/bash ../libtool  --tag=CC   --mode=link clang -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard   -o test_framing test_framing-framing.o  
#20 19.55 libtool: link: clang -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -o test_framing test_framing-framing.o  -pthread
#20 19.65 make[2]: Leaving directory '/src/ogg/src'
#20 19.65 Making all in include
#20 19.66 make[2]: Entering directory '/src/ogg/include'
#20 19.66 Making all in ogg
#20 19.67 make[3]: Entering directory '/src/ogg/include/ogg'
#20 19.67 make[3]: Nothing to be done for 'all'.
#20 19.67 make[3]: Leaving directory '/src/ogg/include/ogg'
#20 19.67 make[3]: Entering directory '/src/ogg/include'
#20 19.67 make[3]: Nothing to be done for 'all-am'.
#20 19.67 make[3]: Leaving directory '/src/ogg/include'
#20 19.67 make[2]: Leaving directory '/src/ogg/include'
#20 19.67 Making all in doc
#20 19.67 make[2]: Entering directory '/src/ogg/doc'
#20 19.68 Making all in libogg
#20 19.69 make[3]: Entering directory '/src/ogg/doc/libogg'
#20 19.69 make[3]: Nothing to be done for 'all'.
#20 19.69 make[3]: Leaving directory '/src/ogg/doc/libogg'
#20 19.69 make[3]: Entering directory '/src/ogg/doc'
#20 19.69 make[3]: Nothing to be done for 'all-am'.
#20 19.69 make[3]: Leaving directory '/src/ogg/doc'
#20 19.69 make[2]: Leaving directory '/src/ogg/doc'
#20 19.69 make[2]: Entering directory '/src/ogg'
#20 19.70 make[2]: Leaving directory '/src/ogg'
#20 19.70 make[1]: Leaving directory '/src/ogg'
#20 19.70 + make install
#20 19.71 Making install in src
#20 19.72 make[1]: Entering directory '/src/ogg/src'
#20 19.73 make[2]: Entering directory '/src/ogg/src'
#20 19.73  /usr/bin/mkdir -p '/src/libogg-install/lib'
#20 19.73  /bin/bash ../libtool   --mode=install /usr/bin/install -c   libogg.la '/src/libogg-install/lib'
#20 19.78 libtool: install: /usr/bin/install -c .libs/libogg.so.0.8.5 /src/libogg-install/lib/libogg.so.0.8.5
#20 19.78 libtool: install: (cd /src/libogg-install/lib && { ln -s -f libogg.so.0.8.5 libogg.so.0 || { rm -f libogg.so.0 && ln -s libogg.so.0.8.5 libogg.so.0; }; })
#20 19.78 libtool: install: (cd /src/libogg-install/lib && { ln -s -f libogg.so.0.8.5 libogg.so || { rm -f libogg.so && ln -s libogg.so.0.8.5 libogg.so; }; })
#20 19.79 libtool: install: /usr/bin/install -c .libs/libogg.lai /src/libogg-install/lib/libogg.la
#20 19.79 libtool: install: /usr/bin/install -c .libs/libogg.a /src/libogg-install/lib/libogg.a
#20 19.79 libtool: install: chmod 644 /src/libogg-install/lib/libogg.a
#20 19.79 libtool: install: ranlib /src/libogg-install/lib/libogg.a
#20 19.86 libtool: finish: PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/out:/sbin" ldconfig -n /src/libogg-install/lib
#20 19.87 ----------------------------------------------------------------------
#20 19.87 Libraries have been installed in:
#20 19.87    /src/libogg-install/lib
#20 19.87 
#20 19.87 If you ever happen to want to link against installed libraries
#20 19.87 in a given directory, LIBDIR, you must either use libtool, and
#20 19.87 specify the full pathname of the library, or use the '-LLIBDIR'
#20 19.87 flag during linking and do at least one of the following:
#20 19.87    - add LIBDIR to the 'LD_LIBRARY_PATH' environment variable
#20 19.87      during execution
#20 19.87    - add LIBDIR to the 'LD_RUN_PATH' environment variable
#20 19.87      during linking
#20 19.87    - use the '-Wl,-rpath -Wl,LIBDIR' linker flag
#20 19.87    - have your system administrator add LIBDIR to '/etc/ld.so.conf'
#20 19.87 
#20 19.87 See any operating system documentation about shared libraries for
#20 19.87 more information, such as the ld(1) and ld.so(8) manual pages.
#20 19.87 ----------------------------------------------------------------------
#20 19.87 make[2]: Nothing to be done for 'install-data-am'.
#20 19.87 make[2]: Leaving directory '/src/ogg/src'
#20 19.87 make[1]: Leaving directory '/src/ogg/src'
#20 19.87 Making install in include
#20 19.88 make[1]: Entering directory '/src/ogg/include'
#20 19.88 Making install in ogg
#20 19.89 make[2]: Entering directory '/src/ogg/include/ogg'
#20 19.89 make[3]: Entering directory '/src/ogg/include/ogg'
#20 19.89 make[3]: Nothing to be done for 'install-exec-am'.
#20 19.89  /usr/bin/mkdir -p '/src/libogg-install/include/ogg'
#20 19.90  /usr/bin/install -c -m 644 config_types.h '/src/libogg-install/include/ogg'
#20 19.90  /usr/bin/mkdir -p '/src/libogg-install/include/ogg'
#20 19.91  /usr/bin/install -c -m 644 ogg.h os_types.h '/src/libogg-install/include/ogg'
#20 19.91 make[3]: Leaving directory '/src/ogg/include/ogg'
#20 19.91 make[2]: Leaving directory '/src/ogg/include/ogg'
#20 19.91 make[2]: Entering directory '/src/ogg/include'
#20 19.92 make[3]: Entering directory '/src/ogg/include'
#20 19.92 make[3]: Nothing to be done for 'install-exec-am'.
#20 19.92 make[3]: Nothing to be done for 'install-data-am'.
#20 19.92 make[3]: Leaving directory '/src/ogg/include'
#20 19.92 make[2]: Leaving directory '/src/ogg/include'
#20 19.92 make[1]: Leaving directory '/src/ogg/include'
#20 19.92 Making install in doc
#20 19.92 make[1]: Entering directory '/src/ogg/doc'
#20 19.93 Making install in libogg
#20 19.93 make[2]: Entering directory '/src/ogg/doc/libogg'
#20 19.94 make[3]: Entering directory '/src/ogg/doc/libogg'
#20 19.94 make[3]: Nothing to be done for 'install-exec-am'.
#20 19.94  /usr/bin/mkdir -p '/src/libogg-install/share/doc/libogg/libogg'
#20 19.95  /usr/bin/install -c -m 644 bitpacking.html datastructures.html decoding.html encoding.html general.html index.html ogg_iovec_t.html ogg_packet.html ogg_packet_clear.html ogg_page.html ogg_page_bos.html ogg_page_checksum_set.html ogg_page_continued.html ogg_page_eos.html ogg_page_granulepos.html ogg_page_packets.html ogg_page_pageno.html ogg_page_serialno.html ogg_page_version.html ogg_stream_check.html ogg_stream_clear.html ogg_stream_destroy.html ogg_stream_eos.html ogg_stream_flush.html ogg_stream_flush_fill.html ogg_stream_init.html ogg_stream_iovecin.html ogg_stream_packetin.html ogg_stream_packetout.html ogg_stream_packetpeek.html ogg_stream_pagein.html ogg_stream_pageout.html ogg_stream_pageout_fill.html ogg_stream_reset.html ogg_stream_reset_serialno.html ogg_stream_state.html ogg_sync_buffer.html ogg_sync_check.html ogg_sync_clear.html ogg_sync_destroy.html '/src/libogg-install/share/doc/libogg/libogg'
#20 19.96  /usr/bin/install -c -m 644 ogg_sync_init.html ogg_sync_pageout.html ogg_sync_pageseek.html ogg_sync_reset.html ogg_sync_state.html ogg_sync_wrote.html oggpack_adv.html oggpack_adv1.html oggpack_bits.html oggpack_buffer.html oggpack_bytes.html oggpack_get_buffer.html oggpack_look.html oggpack_look1.html oggpack_read.html oggpack_read1.html oggpack_readinit.html oggpack_reset.html oggpack_write.html oggpack_writealign.html oggpack_writecheck.html oggpack_writeclear.html oggpack_writecopy.html oggpack_writeinit.html oggpack_writetrunc.html overview.html reference.html style.css '/src/libogg-install/share/doc/libogg/libogg'
#20 19.96 make[3]: Leaving directory '/src/ogg/doc/libogg'
#20 19.96 make[2]: Leaving directory '/src/ogg/doc/libogg'
#20 19.97 make[2]: Entering directory '/src/ogg/doc'
#20 19.97 make[3]: Entering directory '/src/ogg/doc'
#20 19.97 make[3]: Nothing to be done for 'install-exec-am'.
#20 19.98  /usr/bin/mkdir -p '/src/libogg-install/share/doc/libogg'
#20 19.98  /usr/bin/install -c -m 644 framing.html index.html oggstream.html ogg-multiplex.html fish_xiph_org.png multiplex1.png packets.png pages.png stream.png vorbisword2.png white-ogg.png white-xifish.png rfc3533.txt rfc5334.txt skeleton.html '/src/libogg-install/share/doc/libogg'
#20 20.00 make[3]: Leaving directory '/src/ogg/doc'
#20 20.00 make[2]: Leaving directory '/src/ogg/doc'
#20 20.00 make[1]: Leaving directory '/src/ogg/doc'
#20 20.00 make[1]: Entering directory '/src/ogg'
#20 20.01 make[2]: Entering directory '/src/ogg'
#20 20.01 make[2]: Nothing to be done for 'install-exec-am'.
#20 20.02  /usr/bin/mkdir -p '/src/libogg-install/share/aclocal'
#20 20.02  /usr/bin/install -c -m 644 ogg.m4 '/src/libogg-install/share/aclocal'
#20 20.02  /usr/bin/mkdir -p '/src/libogg-install/lib/pkgconfig'
#20 20.03  /usr/bin/install -c -m 644 ogg.pc '/src/libogg-install/lib/pkgconfig'
#20 20.03 make[2]: Leaving directory '/src/ogg'
#20 20.03 make[1]: Leaving directory '/src/ogg'
#20 20.03 + cd /src/flac/
#20 20.03 + ./autogen.sh
#20 20.03 Using symlinks to autotool files (use --no-symlinks to copy instead).
#20 20.04 Updating build configuration files for FLAC, please wait....
#20 25.24 libtoolize: putting auxiliary files in '.'.
#20 25.24 libtoolize: linking file './ltmain.sh'
#20 25.28 libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
#20 25.28 libtoolize: linking file 'm4/libtool.m4'
#20 25.38 libtoolize: linking file 'm4/ltoptions.m4'
#20 25.49 libtoolize: linking file 'm4/ltsugar.m4'
#20 25.59 libtoolize: linking file 'm4/ltversion.m4'
#20 25.70 libtoolize: linking file 'm4/lt~obsolete.m4'
#20 32.05 configure.ac:41: installing './ar-lib'
#20 32.05 configure.ac:39: installing './compile'
#20 32.05 configure.ac:42: installing './config.guess'
#20 32.05 configure.ac:42: installing './config.sub'
#20 32.06 configure.ac:26: installing './install-sh'
#20 32.06 configure.ac:26: installing './missing'
#20 32.38 examples/c/decode/file/Makefile.am: installing './depcomp'
#20 34.20 + [[ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard = *sanitize=memory* ]]
#20 34.20 + LD_LIBRARY_PATH=/src/libogg-install/lib
#20 34.20 + ./configure --with-ogg=/src/libogg-install --enable-static --disable-oggtest --disable-examples --disable-xmms-plugin
#20 34.45 checking for a BSD-compatible install... /usr/bin/install -c
#20 34.46 checking whether build environment is sane... yes
#20 34.48 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 34.49 checking for gawk... no
#20 34.49 checking for mawk... mawk
#20 34.49 checking whether make sets $(MAKE)... yes
#20 34.51 checking whether make supports nested variables... yes
#20 34.52 checking how to create a pax tar archive... gnutar
#20 34.55 checking whether make supports nested variables... (cached) yes
#20 34.55 checking whether configure should try to set CFLAGS/CXXFLAGS/CPPFLAGS/LDFLAGS... no
#20 34.55 checking whether to enable debugging... no
#20 34.55 checking whether make supports the include directive... yes (GNU style)
#20 34.56 checking for gcc... clang
#20 34.63 checking whether the C compiler works... yes
#20 34.76 checking for C compiler default output file name... a.out
#20 34.76 checking for suffix of executables... 
#20 34.88 checking whether we are cross compiling... no
#20 35.01 checking for suffix of object files... o
#20 35.04 checking whether we are using the GNU C compiler... yes
#20 35.07 checking whether clang accepts -g... yes
#20 35.10 checking for clang option to accept ISO C89... none needed
#20 35.14 checking whether clang understands -c and -o together... yes
#20 35.19 checking dependency style of clang... gcc3
#20 35.24 checking for clang option to accept ISO C99... none needed
#20 35.32 checking for clang option to accept ISO Standard C... (cached) none needed
#20 35.32 checking how to run the C preprocessor... clang -E
#20 35.42 checking for grep that handles long lines and -e... /usr/bin/grep
#20 35.42 checking for egrep... /usr/bin/grep -E
#20 35.42 checking for ANSI C header files... yes
#20 35.67 checking for sys/types.h... yes
#20 35.72 checking for sys/stat.h... yes
#20 35.78 checking for stdlib.h... yes
#20 35.84 checking for string.h... yes
#20 35.90 checking for memory.h... yes
#20 35.97 checking for strings.h... yes
#20 36.02 checking for inttypes.h... yes
#20 36.09 checking for stdint.h... yes
#20 36.15 checking for unistd.h... yes
#20 36.21 checking minix/config.h usability... no
#20 36.27 checking minix/config.h presence... no
#20 36.32 checking for minix/config.h... no
#20 36.32 checking whether it is safe to define __EXTENSIONS__... yes
#20 36.38 checking for ar... ar
#20 36.39 checking the archiver (ar) interface... ar
#20 36.62 checking build system type... x86_64-pc-linux-gnu
#20 36.70 checking host system type... x86_64-pc-linux-gnu
#20 36.70 checking how to print strings... printf
#20 36.75 checking for a sed that does not truncate output... /usr/bin/sed
#20 36.76 checking for fgrep... /usr/bin/grep -F
#20 36.77 checking for ld used by clang... /usr/bin/ld
#20 36.78 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 36.79 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 36.79 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 36.83 checking whether ln -s works... yes
#20 36.83 checking the maximum length of command line arguments... 1572864
#20 36.84 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 36.84 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 36.84 checking for /usr/bin/ld option to reload object files... -r
#20 36.84 checking for objdump... objdump
#20 36.84 checking how to recognize dependent libraries... pass_all
#20 36.85 checking for dlltool... no
#20 36.85 checking how to associate runtime and link libraries... printf %s\n
#20 36.85 checking for archiver @FILE support... @
#20 36.89 checking for strip... strip
#20 36.89 checking for ranlib... ranlib
#20 36.89 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 37.07 checking for sysroot... no
#20 37.07 checking for a working dd... /usr/bin/dd
#20 37.08 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 37.11 checking for mt... no
#20 37.11 checking if : is a manifest tool... no
#20 37.12 checking for dlfcn.h... yes
#20 37.19 checking for objdir... .libs
#20 37.35 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 37.38 checking for clang option to produce PIC... -fPIC -DPIC
#20 37.39 checking if clang PIC flag -fPIC -DPIC works... yes
#20 37.42 checking if clang static flag -static works... yes
#20 37.60 checking if clang supports -c -o file.o... yes
#20 37.65 checking if clang supports -c -o file.o... (cached) yes
#20 37.65 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 37.67 checking whether -lc should be explicitly linked in... no
#20 37.73 checking dynamic linker characteristics... GNU/Linux ld.so
#20 37.90 checking how to hardcode library paths into programs... immediate
#20 37.90 checking whether stripping libraries is possible... yes
#20 37.91 checking if libtool supports shared libraries... yes
#20 37.91 checking whether to build shared libraries... yes
#20 37.91 checking whether to build static libraries... yes
#20 37.91 checking dependency style of clang... gcc3
#20 38.03 checking whether we are using the GNU C++ compiler... yes
#20 38.07 checking whether clang++ accepts -g... yes
#20 38.09 checking dependency style of clang++... gcc3
#20 38.16 checking how to run the C++ preprocessor... clang++ -E
#20 38.46 checking for ld used by clang++... /usr/bin/ld -m elf_x86_64
#20 38.48 checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
#20 38.50 checking whether the clang++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 38.65 checking for clang++ option to produce PIC... -fPIC -DPIC
#20 38.65 checking if clang++ PIC flag -fPIC -DPIC works... yes
#20 38.68 checking if clang++ static flag -static works... yes
#20 38.90 checking if clang++ supports -c -o file.o... yes
#20 38.94 checking if clang++ supports -c -o file.o... (cached) yes
#20 38.94 checking whether the clang++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 38.94 checking dynamic linker characteristics... (cached) GNU/Linux ld.so
#20 38.95 checking how to hardcode library paths into programs... immediate
#20 38.95 checking whether we are using the CLANG C compiler... yes
#20 39.13 checking whether make sets $(MAKE)... (cached) yes
#20 39.14 checking for special C compiler options needed for large files... no
#20 39.14 checking for _FILE_OFFSET_BITS value needed for large files... no
#20 39.17 checking for _LARGEFILE_SOURCE value needed for large files... no
#20 39.31 checking size of off_t... 8
#20 39.48 checking size of void*... 8
#20 39.65 checking for library containing lround... none required
#20 39.78 checking for variable-length arrays... yes
#20 39.81 checking for ANSI C header files... (cached) yes
#20 39.81 checking for inline... inline
#20 39.84 checking for variable-length arrays... (cached) yes
#20 39.84 checking for typeof syntax and keyword spelling... typeof
#20 39.87 checking for stdint.h... (cached) yes
#20 39.88 checking for inttypes.h... (cached) yes
#20 39.90 checking byteswap.h usability... yes
#20 39.96 checking byteswap.h presence... yes
#20 39.98 checking for byteswap.h... yes
#20 40.00 checking sys/param.h usability... yes
#20 40.07 checking sys/param.h presence... yes
#20 40.10 checking for sys/param.h... yes
#20 40.11 checking sys/ioctl.h usability... yes
#20 40.18 checking sys/ioctl.h presence... yes
#20 40.20 checking for sys/ioctl.h... yes
#20 40.21 checking termios.h usability... yes
#20 40.27 checking termios.h presence... yes
#20 40.29 checking for termios.h... yes
#20 40.31 checking x86intrin.h usability... yes
#20 40.89 checking x86intrin.h presence... yes
#20 40.98 checking for x86intrin.h... yes
#20 40.99 checking cpuid.h usability... yes
#20 41.06 checking cpuid.h presence... yes
#20 41.09 checking for cpuid.h... yes
#20 41.09 checking for bswap32 intrinsic... yes
#20 41.22 checking for bswap16 intrinsic... yes
#20 41.35 checking whether byte ordering is bigendian... no
#20 41.48 checking for socklen_t... yes
#20 41.63 checking for getopt_long... yes
#20 41.76 checking size of void*... (cached) 8
#20 41.77 checking for doxygen... no
#20 41.77 checking for Ogg... yes
#20 41.78 checking for ld used by clang... /usr/bin/ld -m elf_x86_64
#20 41.80 checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
#20 41.80 checking for shared library run path origin... done
#20 41.84 checking for iconv... yes
#20 41.98 checking for working iconv... yes
#20 42.13 checking for iconv declaration... 
#20 42.17          extern size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
#20 42.18 checking for nl_langinfo and CODESET... yes
#20 42.30 checking for docbook-to-man... no
#20 42.30 checking for docbook2man... no
#20 42.31 checking for clock_gettime in -lrt... yes
#20 42.43 checking for nasm... no
#20 42.43 checking if clang accepts -Wdeclaration-after-statement... yes
#20 42.50 checking whether to add -D_FORTIFY_SOURCE=2 to CPPFLAGS... yes
#20 42.62 checking if clang++ accepts -Weffc++... yes
#20 42.75 checking if clang accepts -msse2... yes
#20 42.87 checking that generated files are newer than configure... done
#20 42.87 configure: creating ./config.status
#20 43.97 config.status: creating Makefile
#20 43.99 config.status: creating src/Makefile
#20 44.02 config.status: creating src/libFLAC/Makefile
#20 44.05 config.status: creating src/libFLAC/flac.pc
#20 44.07 config.status: creating src/libFLAC/ia32/Makefile
#20 44.10 config.status: creating src/libFLAC/include/Makefile
#20 44.13 config.status: creating src/libFLAC/include/private/Makefile
#20 44.16 config.status: creating src/libFLAC/include/protected/Makefile
#20 44.18 config.status: creating src/libFLAC++/Makefile
#20 44.21 config.status: creating src/libFLAC++/flac++.pc
#20 44.24 config.status: creating src/flac/Makefile
#20 44.27 config.status: creating src/metaflac/Makefile
#20 44.30 config.status: creating src/plugin_common/Makefile
#20 44.32 config.status: creating src/plugin_xmms/Makefile
#20 44.35 config.status: creating src/share/Makefile
#20 44.38 config.status: creating src/test_grabbag/Makefile
#20 44.41 config.status: creating src/test_grabbag/cuesheet/Makefile
#20 44.43 config.status: creating src/test_grabbag/picture/Makefile
#20 44.46 config.status: creating src/test_libs_common/Makefile
#20 44.49 config.status: creating src/test_libFLAC/Makefile
#20 44.52 config.status: creating src/test_libFLAC++/Makefile
#20 44.55 config.status: creating src/test_seeking/Makefile
#20 44.57 config.status: creating src/test_streams/Makefile
#20 44.60 config.status: creating src/utils/Makefile
#20 44.63 config.status: creating src/utils/flacdiff/Makefile
#20 44.66 config.status: creating src/utils/flactimer/Makefile
#20 44.69 config.status: creating examples/Makefile
#20 44.71 config.status: creating examples/c/Makefile
#20 44.74 config.status: creating examples/c/decode/Makefile
#20 44.77 config.status: creating examples/c/decode/file/Makefile
#20 44.80 config.status: creating examples/c/encode/Makefile
#20 44.82 config.status: creating examples/c/encode/file/Makefile
#20 44.85 config.status: creating examples/cpp/Makefile
#20 44.88 config.status: creating examples/cpp/decode/Makefile
#20 44.90 config.status: creating examples/cpp/decode/file/Makefile
#20 44.93 config.status: creating examples/cpp/encode/Makefile
#20 44.96 config.status: creating examples/cpp/encode/file/Makefile
#20 44.99 config.status: creating include/Makefile
#20 45.01 config.status: creating include/FLAC/Makefile
#20 45.04 config.status: creating include/FLAC++/Makefile
#20 45.07 config.status: creating include/share/Makefile
#20 45.10 config.status: creating include/share/grabbag/Makefile
#20 45.12 config.status: creating include/test_libs_common/Makefile
#20 45.15 config.status: creating doc/Doxyfile
#20 45.19 config.status: creating doc/Makefile
#20 45.22 config.status: creating doc/html/Makefile
#20 45.24 config.status: creating doc/html/images/Makefile
#20 45.27 config.status: creating m4/Makefile
#20 45.30 config.status: creating man/Makefile
#20 45.34 config.status: creating test/common.sh
#20 45.36 config.status: creating test/Makefile
#20 45.39 config.status: creating test/cuesheets/Makefile
#20 45.41 config.status: creating test/flac-to-flac-metadata-test-files/Makefile
#20 45.44 config.status: creating test/metaflac-test-files/Makefile
#20 45.47 config.status: creating test/pictures/Makefile
#20 45.50 config.status: creating build/Makefile
#20 45.52 config.status: creating microbench/Makefile
#20 45.55 config.status: creating oss-fuzz/Makefile
#20 45.58 config.status: creating config.h
#20 45.60 config.status: executing depfiles commands
#20 46.86 config.status: executing libtool commands
#20 46.88 
#20 46.88 -=-=-=-=-=-=-=-=-=-= Configuration Complete =-=-=-=-=-=-=-=-=-=-
#20 46.88 
#20 46.88   Configuration summary :
#20 46.88 
#20 46.88     FLAC version : ............................ 1.3.3
#20 46.88 
#20 46.88     Host CPU : ................................ x86_64
#20 46.88     Host Vendor : ............................. pc
#20 46.88     Host OS : ................................. linux-gnu
#20 46.88 
#20 46.88     Compiler is GCC : ......................... no
#20 46.88     Compiler is Clang : ....................... yes
#20 46.88     SSE optimizations : ....................... yes
#20 46.88     Asm optimizations : ....................... yes
#20 46.88     Ogg/FLAC support : ........................ yes
#20 46.88     Stack protector  : ........................ no
#20 46.88     Fuzzing support (Clang only) : ............ no
#20 46.88 
#20 46.97 ++ nproc
#20 46.97 + make -j8
#20 46.98 make  all-recursive
#20 46.98 make[1]: Entering directory '/src/flac'
#20 46.99 Making all in doc
#20 46.99 make[2]: Entering directory '/src/flac/doc'
#20 47.00 Making all in .
#20 47.00 make[3]: Entering directory '/src/flac/doc'
#20 47.00 touch FLAC.tag
#20 47.01 mkdir -p html/api
#20 47.01 make[3]: Leaving directory '/src/flac/doc'
#20 47.01 Making all in html
#20 47.02 make[3]: Entering directory '/src/flac/doc/html'
#20 47.02 Making all in images
#20 47.03 make[4]: Entering directory '/src/flac/doc/html/images'
#20 47.03 make[4]: Nothing to be done for 'all'.
#20 47.03 make[4]: Leaving directory '/src/flac/doc/html/images'
#20 47.03 make[4]: Entering directory '/src/flac/doc/html'
#20 47.03 make[4]: Nothing to be done for 'all-am'.
#20 47.03 make[4]: Leaving directory '/src/flac/doc/html'
#20 47.03 make[3]: Leaving directory '/src/flac/doc/html'
#20 47.03 make[2]: Leaving directory '/src/flac/doc'
#20 47.03 Making all in include
#20 47.04 make[2]: Entering directory '/src/flac/include'
#20 47.04 Making all in FLAC
#20 47.05 make[3]: Entering directory '/src/flac/include/FLAC'
#20 47.05 make[3]: Nothing to be done for 'all'.
#20 47.05 make[3]: Leaving directory '/src/flac/include/FLAC'
#20 47.05 Making all in FLAC++
#20 47.05 make[3]: Entering directory '/src/flac/include/FLAC++'
#20 47.05 make[3]: Nothing to be done for 'all'.
#20 47.05 make[3]: Leaving directory '/src/flac/include/FLAC++'
#20 47.05 Making all in share
#20 47.05 make[3]: Entering directory '/src/flac/include/share'
#20 47.06 Making all in grabbag
#20 47.06 make[4]: Entering directory '/src/flac/include/share/grabbag'
#20 47.06 make[4]: Nothing to be done for 'all'.
#20 47.06 make[4]: Leaving directory '/src/flac/include/share/grabbag'
#20 47.07 make[4]: Entering directory '/src/flac/include/share'
#20 47.07 make[4]: Nothing to be done for 'all-am'.
#20 47.07 make[4]: Leaving directory '/src/flac/include/share'
#20 47.07 make[3]: Leaving directory '/src/flac/include/share'
#20 47.07 Making all in test_libs_common
#20 47.07 make[3]: Entering directory '/src/flac/include/test_libs_common'
#20 47.07 make[3]: Nothing to be done for 'all'.
#20 47.07 make[3]: Leaving directory '/src/flac/include/test_libs_common'
#20 47.08 make[3]: Entering directory '/src/flac/include'
#20 47.08 make[3]: Nothing to be done for 'all-am'.
#20 47.08 make[3]: Leaving directory '/src/flac/include'
#20 47.08 make[2]: Leaving directory '/src/flac/include'
#20 47.08 Making all in m4
#20 47.08 make[2]: Entering directory '/src/flac/m4'
#20 47.08 make[2]: Nothing to be done for 'all'.
#20 47.08 make[2]: Leaving directory '/src/flac/m4'
#20 47.08 Making all in man
#20 47.08 make[2]: Entering directory '/src/flac/man'
#20 47.08 make[2]: Nothing to be done for 'all'.
#20 47.08 make[2]: Leaving directory '/src/flac/man'
#20 47.08 Making all in src
#20 47.09 make[2]: Entering directory '/src/flac/src'
#20 47.09 Making all in libFLAC
#20 47.10 make[3]: Entering directory '/src/flac/src/libFLAC'
#20 47.11 Making all in include
#20 47.11 make[4]: Entering directory '/src/flac/src/libFLAC/include'
#20 47.12 Making all in private
#20 47.12 make[5]: Entering directory '/src/flac/src/libFLAC/include/private'
#20 47.12 make[5]: Nothing to be done for 'all'.
#20 47.12 make[5]: Leaving directory '/src/flac/src/libFLAC/include/private'
#20 47.12 Making all in protected
#20 47.13 make[5]: Entering directory '/src/flac/src/libFLAC/include/protected'
#20 47.13 make[5]: Nothing to be done for 'all'.
#20 47.13 make[5]: Leaving directory '/src/flac/src/libFLAC/include/protected'
#20 47.13 make[5]: Entering directory '/src/flac/src/libFLAC/include'
#20 47.13 make[5]: Nothing to be done for 'all-am'.
#20 47.13 make[5]: Leaving directory '/src/flac/src/libFLAC/include'
#20 47.13 make[4]: Leaving directory '/src/flac/src/libFLAC/include'
#20 47.13 Making all in .
#20 47.14 make[4]: Entering directory '/src/flac/src/libFLAC'
#20 47.14   CC       bitmath.lo
#20 47.14   CC       bitreader.lo
#20 47.14   CC       bitwriter.lo
#20 47.14   CC       cpu.lo
#20 47.14   CC       fixed.lo
#20 47.14   CC       fixed_intrin_sse2.lo
#20 47.14   CC       crc.lo
#20 47.14   CC       fixed_intrin_ssse3.lo
#20 47.39   CC       float.lo
#20 47.49   CC       format.lo
#20 47.54   CC       lpc.lo
#20 47.62   CC       lpc_intrin_sse.lo
#20 47.93   CC       lpc_intrin_sse2.lo
#20 47.96   CC       lpc_intrin_sse41.lo
#20 48.06   CC       lpc_intrin_avx2.lo
#20 48.08   CC       lpc_intrin_vsx.lo
#20 48.17 lpc_intrin_sse2.c:83:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.17                                                 summ = _mm_madd_epi16(q11, _mm_loadu_si128((const __m128i*)(data+i-12)));
#20 48.17                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_sse2.c:84:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.17                                                 mull = _mm_madd_epi16(q10, _mm_loadu_si128((const __m128i*)(data+i-11))); summ = _mm_add_epi32(summ, mull);
#20 48.17                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_sse2.c:85:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.17                                                 mull = _mm_madd_epi16(q9, _mm_loadu_si128((const __m128i*)(data+i-10))); summ = _mm_add_epi32(summ, mull);
#20 48.17                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_sse2.c:86:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.17                                                 mull = _mm_madd_epi16(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 48.17                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_sse2.c:87:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.17                                                 mull = _mm_madd_epi16(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 48.17                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_sse2.c:88:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.18                                                 mull = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 48.18                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_sse2.c:89:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.18                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.18                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_sse2.c:90:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.18                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.18                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_sse2.c:91:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.18                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.18                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_sse2.c:92:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.18                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.18                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_sse2.c:93:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.18                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.18                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_sse2.c:94:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.18                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.18                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_sse2.c:96:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.18                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.18                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_sse2.c:96:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.18                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.18                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_sse2.c:115:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 summ = _mm_madd_epi16(q10, _mm_loadu_si128((const __m128i*)(data+i-11)));
#20 48.19                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:116:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 mull = _mm_madd_epi16(q9, _mm_loadu_si128((const __m128i*)(data+i-10))); summ = _mm_add_epi32(summ, mull);
#20 48.19                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:117:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 mull = _mm_madd_epi16(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 48.19                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:118:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 mull = _mm_madd_epi16(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 48.19                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:119:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 mull = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 48.19                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:120:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.19                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:121:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.19                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:122:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.19                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:123:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.19                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:124:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.20                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:125:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.20                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:127:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.20                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:127:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.20                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:147:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 summ = _mm_madd_epi16(q9, _mm_loadu_si128((const __m128i*)(data+i-10)));
#20 48.20                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:148:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 mull = _mm_madd_epi16(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 48.20                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_sse2.c:149:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm_madd_epi16(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 48.21                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_sse2.c:150:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 48.21                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_sse2.c:151:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.21                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_sse2.c:152:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.21                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_sse2.c:153:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.21                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_sse2.c:154:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.21                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_sse2.c:155:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.21                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_sse2.c:156:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.21                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_sse2.c:158:24: lpc_intrin_sse41.c:warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21 1167:51: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.21                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.22                                                 summ = _mm_mullo_epi32(q11, _mm_loadu_si128((const __m128i*)(data+i-12)));
#20 48.22                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse2.c:158:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.22                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse41.c:1168:51: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm_mullo_epi32(q10, _mm_loadu_si128((const __m128i*)(data+i-11))); summ = _mm_add_epi32(summ, mull);
#20 48.22                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse41.c:1169:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm_mullo_epi32(q9, _mm_loadu_si128((const __m128i*)(data+i-10))); summ = _mm_add_epi32(summ, mull);
#20 48.22                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse41.c:1170:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm_mullo_epi32(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 48.22                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse41.c:1171:50lpc_intrin_sse2.c:175:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22 :                                                summ = _mm_madd_epi16(q8, _mm_loadu_si128((const __m128i*)(data+i-9)));
#20 48.22                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~warning: 
#20 48.22 cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm_mullo_epi32(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 48.22                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse2.c:176:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm_madd_epi16(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 48.22                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse41.c:1172:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 48.22                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~lpc_intrin_sse2.c:
#20 48.22 177:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 48.22                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse41.clpc_intrin_sse2.c:178:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.22                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 :lpc_intrin_sse2.c:179:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.22                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 1173lpc_intrin_sse2.c::180:5049::  warning: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22 
#20 48.22                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.22                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);lpc_intrin_sse2.c:181:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.22                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 
#20 48.22 lpc_intrin_sse2.c:182:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.22                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~lpc_intrin_sse2.c:183:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.22                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 
#20 48.22 lpc_intrin_sse2.c:185:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.22                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse2.c:185:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.22                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse41.c:1174:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.23 lpc_intrin_sse2.c:205:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 summ = _mm_madd_epi16(q7, _mm_loadu_si128((const __m128i*)(data+i-8)));
#20 48.23                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_sse2.c:206:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 mull = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 48.23                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_sse2.c:207:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.23                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_sse2.c:208:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.23                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_sse2.c:209:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.23                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_sse2.c:210:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.23                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_sse2.c:211:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.23                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_sse2.c:212:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~                                                mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.23                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 
#20 48.23 lpc_intrin_sse2.c:214:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.23                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_sse2.c:214:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.23                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_sse41.c:1175:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.23                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_sse41.c:1176lpc_intrin_sse2.c:229:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23 :                                                summ = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7)));
#20 48.23                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 50lpc_intrin_sse2.c:: 230:warning: 49cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]:
#20 48.23  warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);                                                mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.23                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 
#20 48.23 lpc_intrin_sse2.clpc_intrin_sse41.c:1177::231:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]50
#20 48.23                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.23                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~:
#20 48.23  warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23 lpc_intrin_sse2.c:                                                mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.23                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 232:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.23                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_sse2.c:lpc_intrin_sse41.c:2331178::49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23 50:                                                mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull); warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23 
#20 48.23                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~                                                mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.23                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 
#20 48.23 lpc_intrin_sse2.c:lpc_intrin_sse41.c234:1180:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23 :49:                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.23                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.23 warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23 lpc_intrin_sse41.c:                                                mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.23                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 1180:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]lpc_intrin_sse2.c
#20 48.23 :235:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.24                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.24                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_sse2.c:237:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.24                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_sse2.c:237:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.24                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_sse2.c:253:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 summ = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6)));
#20 48.24                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_sse2.c:254:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.24                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_sse2.c:255:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.24                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_sse2.c:256:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.24                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_sse2.c:257:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.24 lpc_intrin_sse41.c:1199:51:                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]lpc_intrin_sse2.c:258:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.24                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 
#20 48.24 lpc_intrin_sse2.c:260:24:                                                summ = _mm_mullo_epi32(q10, _mm_loadu_si128((const __m128i*)(data+i-11))); 
#20 48.24 warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 
#20 48.24                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.24                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_sse2.c:260:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.24                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_sse41.c:1200:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 mull = _mm_mullo_epi32(q9, _mm_loadu_si128((const __m128i*)(data+i-10))); summ = _mm_add_epi32(summ, mull);
#20 48.24                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_sse2.c:273:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 summ = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5)));
#20 48.24                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_sse41.clpc_intrin_sse2.c:274:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.24                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 :lpc_intrin_sse2.c:275:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24 1201:                                                mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.24                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24 lpc_intrin_sse2.c                                                mull = _mm_mullo_epi32(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);:276:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.24 
#20 48.24                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_sse2.c:277:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.25                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse2.c:279:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.25                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse2.c:279:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25 lpc_intrin_sse41.c:                                                _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.25                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 1202:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 mull = _mm_mullo_epi32(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 48.25                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse41.c:1203:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 mull = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 48.25                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse41.c:1204:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.25                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse2.c:295:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25 lpc_intrin_sse41.c:1205:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 summ = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4)));
#20 48.25                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.25                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse2.c:296:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.25                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse41.c:1206:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.25                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse2.c:297:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25 lpc_intrin_sse41.c:                                                mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);1207:
#20 48.25 50:                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~ 
#20 48.25 warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.25                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse2.c:298:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25 lpc_intrin_sse41.c:1208:50: warning:                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25 
#20 48.25                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.25                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse41.clpc_intrin_sse2.c:300:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25 :                                                _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.25                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.25 1209lpc_intrin_sse2.c:300:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25 :50                                                _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.25                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 : warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.25                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse41.c:1211:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.25                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse41.c:1211lpc_intrin_sse2.c::311:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25 78                                                summ = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3)));:
#20 48.25                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25  warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25 lpc_intrin_sse2.c:312:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));                                                mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.25                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 
#20 48.25                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse2.c:313:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.25                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse2.c:315:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.25                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse2.c:315:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.25                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse2.c:327:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 summ = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2)));
#20 48.25                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse2.c:328:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.25                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse2.c:330:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.25                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse2.c:330:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.25                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse2.c:339:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 summ = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1)));
#20 48.25                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse2.c:341:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.25                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse2.c:341:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.25                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse41.c:1231:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.25                                                 summ = _mm_mullo_epi32(q9, _mm_loadu_si128((const __m128i*)(data+i-10)));
#20 48.25                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_sse41.c:1232:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.26                                                 mull = _mm_mullo_epi32(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 48.26                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_sse41.c:1233:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.26                                                 mull = _mm_mullo_epi32(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 48.26                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_sse41.c:1234:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.26                                                 mull = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 48.26                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_sse41.c:1235:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.26                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.26                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_sse41.c:1236:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.26                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.26                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_sse41.c:1237:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.26                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.26                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_sse41.c:1238:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.26                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.26                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_sse41.c:1239:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.26                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.26                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_sse41.c:1240:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.26                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.26                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_sse41.c:1242:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.26                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.26                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_sse41.c:1242:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.26                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.26                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_sse41.c:1259:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.26                                                 summ = _mm_mullo_epi32(q8, _mm_loadu_si128((const __m128i*)(data+i-9)));
#20 48.26                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_sse41.c:1260:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.26                                                 mull = _mm_mullo_epi32(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 48.26                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_sse41.c:1261:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.27                                                 mull = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 48.27                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.27 lpc_intrin_sse41.c:1262:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.27                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.27                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.27 lpc_intrin_sse41.c:1263:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.27                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.27                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.27 lpc_intrin_sse41.c:1264:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.27                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.27                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.27 lpc_intrin_sse41.c:1265:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.27                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.27                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.27 lpc_intrin_sse41.c:1266:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.27                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.27                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.27 lpc_intrin_sse41.c:1267:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.27                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.27                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.27 lpc_intrin_sse41.c:1269:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.27                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.27                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.27 lpc_intrin_sse41.c:1269:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.28                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_sse41.c:1289:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                                 summ = _mm_mullo_epi32(q7, _mm_loadu_si128((const __m128i*)(data+i-8)));
#20 48.28                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_sse41.c:1290:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                                 mull = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 48.28                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_sse41.c:1291:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.28                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_sse41.c:1292:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.28                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_sse41.c:1293:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.28                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_sse41.c:1294:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.28                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_sse41.c:1295:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.28                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_sse41.c:1296:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.28                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_sse41.c:1298:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.28                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_sse41.c:1298:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.28                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_sse2.c:420:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));  // 0  0  q[1]  q[0]
#20 48.28                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_sse2.c:421:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));  // 0  0  q[3]  q[2]
#20 48.28                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_sse2.c:422:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));  // 0  0  q[5]  q[4]
#20 48.28                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_sse2.c:423:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                         xmm3 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+6));  // 0  0  q[7]  q[6]
#20 48.28                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_sse2.c:424:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                         xmm4 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+8));  // 0  0  q[9]  q[8]
#20 48.28                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_sse2.c:425:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                         xmm5 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+10)); // 0  0  q[11] q[10]
#20 48.28                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_sse2.c:438:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-12));  // 0   0        d[i-11]  d[i-12]
#20 48.28                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_sse2.c:444:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-10));
#20 48.28                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_sse41.c:lpc_intrin_sse2.c:451:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-8));
#20 48.28                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 1313:lpc_intrin_sse2.c:458:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 48.28                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 50:lpc_intrin_sse2.c:465:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.28                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 48.28                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28  warning: lpc_intrin_sse2.c:472:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.29                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                                 summ = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7)));
#20 48.29 lpc_intrin_sse2.c:483:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 48.29                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 lpc_intrin_sse2.c:484:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 48.29                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 lpc_intrin_sse2.c:485:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 48.29                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 lpc_intrin_sse2.c:486:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                         xmm3 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+6));
#20 48.29                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 lpc_intrin_sse2.c:487:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                         xmm4 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+8));
#20 48.29                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 lpc_intrin_sse41.c:1314:lpc_intrin_sse2.c:504:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-10));
#20 48.29                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 50:lpc_intrin_sse2.c:511:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-8));
#20 48.29                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29  warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]lpc_intrin_sse2.c:518:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 48.29                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 
#20 48.29                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);lpc_intrin_sse2.c:525:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 48.29                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 
#20 48.29                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~lpc_intrin_sse2.c:532:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.29                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 
#20 48.29 lpc_intrin_sse41.c:lpc_intrin_sse2.c:545:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 48.29                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 lpc_intrin_sse2.c:546:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 48.29                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 lpc_intrin_sse2.c:547:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 48.29                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 lpc_intrin_sse2.c:548:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                         xmm3 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+6));
#20 48.29                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 lpc_intrin_sse2.c:549:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                         xmm4 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+8));
#20 48.29                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 1315:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]lpc_intrin_sse2.c:561:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-10));
#20 48.29                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 
#20 48.29                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);lpc_intrin_sse2.c:567:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-8));
#20 48.29                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 
#20 48.29                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~lpc_intrin_sse2.c:574:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 48.29                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 
#20 48.29 lpc_intrin_sse2.c:581:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 48.29                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 lpc_intrin_sse41.clpc_intrin_sse2.c:588:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.29                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 :1316:50:lpc_intrin_sse2.c:599:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 48.29                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 lpc_intrin_sse2.c:600:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 48.29                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 lpc_intrin_sse2.c:601:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 48.29                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 lpc_intrin_sse2.c:602:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.29                                         xmm3 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+6));
#20 48.29                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29  warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);lpc_intrin_sse2.c:618:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-8));
#20 48.30                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 
#20 48.30                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~lpc_intrin_sse2.c:625:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 48.30                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 
#20 48.30 lpc_intrin_sse2.c:632:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 48.30                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 lpc_intrin_sse41.clpc_intrin_sse2.c:639:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.30                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 :1317:50:lpc_intrin_sse2.c:654:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 48.30                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 lpc_intrin_sse2.c:655:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 48.30                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 lpc_intrin_sse2.c:656:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 48.30                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 lpc_intrin_sse2.c:657:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                         xmm3 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+6));
#20 48.30                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30  warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30 lpc_intrin_sse2.c:668:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-8));
#20 48.30                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.30 lpc_intrin_sse2.c:674:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 48.30                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 lpc_intrin_sse2.c:681:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 48.30                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 lpc_intrin_sse41.clpc_intrin_sse2.c:688:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.30                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 :1318:50:lpc_intrin_sse2.c:699:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 48.30                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 lpc_intrin_sse2.c:700:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 48.30                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 lpc_intrin_sse2.c:701:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 48.30                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30  warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);lpc_intrin_sse2.c:716:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 48.30                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 
#20 48.30                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~lpc_intrin_sse2.c:723:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 48.30                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 
#20 48.30 lpc_intrin_sse2.c:730:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.30                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 lpc_intrin_sse41.c:1319:lpc_intrin_sse2.c:743:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 48.30                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 lpc_intrin_sse2.c:744:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 48.30                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 lpc_intrin_sse2.c:745:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 48.30                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30 lpc_intrin_sse2.c:755:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.30                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 48.30                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.30                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 lpc_intrin_sse2.c:761:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 48.31                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_sse41.clpc_intrin_sse2.c:768:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.31                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 :1321:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]lpc_intrin_sse2.c:779:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31 
#20 48.31                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 48.31                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_sse2.c:780:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 48.31                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.31                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_sse41.c:1321:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.31                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_sse2.c:794:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 48.31                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_sse2.c:801:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.31                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_sse2.c:816:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 48.31                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_sse2.c:817:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 48.31                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_sse2.c:826:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31 lpc_intrin_sse41.c:1337:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 48.31                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31                                                 summ = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6)));
#20 48.31                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_sse41.c:1338:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);lpc_intrin_sse2.c:832:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.31                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 
#20 48.31                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_sse41.c:1339:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.31                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_sse41.c:1340:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31 lpc_intrin_sse2.c                                                mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);:843
#20 48.31 :                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~29
#20 48.31 : warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 48.31                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_sse41.c:1341:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.31                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_sse41.c:1342:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31 lpc_intrin_sse2.c                                                mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.31 :                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~856
#20 48.31 :30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.31                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_sse41.c:1344:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.31                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_sse41.c:1344:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.31                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_sse2.c:869:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 48.31                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_sse2.c:876:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.31                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_sse41.c:1357:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                                 summ = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5)));
#20 48.31                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_sse41.c:1358:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.31                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_sse41.c:1359:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.31                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.31                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1360:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.32                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1361:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.32                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1363:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.32                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1363:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.32                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1379:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 summ = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4)));
#20 48.32                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1380:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.32                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1381:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.32                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1382:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.32                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1384:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.32                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1384:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.32                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1395:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 summ = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3)));
#20 48.32                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1396:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.32                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1397:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.32                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1399:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.32                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1399:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.32                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1411:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 summ = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2)));
#20 48.32                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1412:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.32                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1414:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.32                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1414:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.32                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1423:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 summ = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1)));
#20 48.32                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1425:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.32                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_sse41.c:1425:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.32                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.32                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.33   CC       md5.lo
#20 48.34   CC       memory.lo
#20 48.41   CC       metadata_iterators.lo
#20 48.44   CC       metadata_object.lo
#20 48.64 102 warnings generated.
#20 48.71   CC       stream_decoder.lo
#20 48.87 174 warnings generated.
#20 49.03 stream_decoder.c:2172:13: warning: variable 'crc8' set but not used [-Wunused-but-set-variable]
#20 49.03         FLAC__byte crc8, raw_header[16]; /* MAGIC NUMBER based on the maximum frame header size, including CRC */
#20 49.04                    ^
#20 49.07 lpc_intrin_avx2.c:80:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.07                                                 summ = _mm256_madd_epi16(q11, _mm256_loadu_si256((const __m256i*)(data+i-12)));
#20 49.07                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.07 lpc_intrin_avx2.c:81:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.07                                                 mull = _mm256_madd_epi16(q10, _mm256_loadu_si256((const __m256i*)(data+i-11))); summ = _mm256_add_epi32(summ, mull);
#20 49.07                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.07 lpc_intrin_avx2.c:82:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.07                                                 mull = _mm256_madd_epi16(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10))); summ = _mm256_add_epi32(summ, mull);
#20 49.07                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.07 lpc_intrin_avx2.c:83:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.08                                                 mull = _mm256_madd_epi16(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.08                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.08 lpc_intrin_avx2.c:84:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.08                                                 mull = _mm256_madd_epi16(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.08                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.08 lpc_intrin_avx2.c:85:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.08                                                 mull = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.08                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.09 lpc_intrin_avx2.c:86:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.09                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.09                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.09 lpc_intrin_avx2.c:87:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.09                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.09                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.09 lpc_intrin_avx2.c:88:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.10                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.10                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.10 lpc_intrin_avx2.c:89:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.10                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.10                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.10 lpc_intrin_avx2.c:90:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.11                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:91:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.11                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:93:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.11                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:93:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.11                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:112:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 summ = _mm256_madd_epi16(q10, _mm256_loadu_si256((const __m256i*)(data+i-11)));
#20 49.11                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:113:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 mull = _mm256_madd_epi16(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10))); summ = _mm256_add_epi32(summ, mull);
#20 49.11                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:114:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 mull = _mm256_madd_epi16(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.11                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:115:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 mull = _mm256_madd_epi16(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.11                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:116:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 mull = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.11                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:117:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.11                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:118:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.11                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:119:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.12                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:120:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.12                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:121:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.12                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:122:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.12                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:124:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.12                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:124:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.12                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:144:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 summ = _mm256_madd_epi16(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10)));
#20 49.12                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:145:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 mull = _mm256_madd_epi16(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.12                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:146:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 mull = _mm256_madd_epi16(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.12                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:147:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 mull = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.12                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:148:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.12                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.13 lpc_intrin_avx2.c:149:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.13                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.13                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.13 lpc_intrin_avx2.c:150:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.13                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.13                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.13 lpc_intrin_avx2.c:151:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.13                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.13                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.13 lpc_intrin_avx2.c:152:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.13                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.13                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.13 lpc_intrin_avx2.c:153:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.13                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.13                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.13 lpc_intrin_avx2.c:155:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.14                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:155:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.14                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:172:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 summ = _mm256_madd_epi16(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9 )));
#20 49.14                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:173:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 mull = _mm256_madd_epi16(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.14                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:174:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 mull = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.14                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:175:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.14                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:176:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.14                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:177:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.14                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:178:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.14                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:179:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.14                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:180:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.14                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:182:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.15                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.15                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.15 lpc_intrin_avx2.c:182:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.15                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.15                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.15 lpc_intrin_avx2.c:202:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.15                                                 summ = _mm256_madd_epi16(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8 )));
#20 49.15                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.15 lpc_intrin_avx2.c:203:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.15                                                 mull = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.15                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.15 lpc_intrin_avx2.c:204:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.15                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.15                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.15 lpc_intrin_avx2.c:205:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.15                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.15                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.15 lpc_intrin_avx2.c:206:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.15                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.15                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.15 lpc_intrin_avx2.c:207:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.15                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.15                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.15 lpc_intrin_avx2.c:208:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.15                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.15                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.15 lpc_intrin_avx2.c:209:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.15                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.15                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.15 lpc_intrin_avx2.c:211:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.15                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.15                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.15 lpc_intrin_avx2.c:211:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.15                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.15                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.15 lpc_intrin_avx2.c:226:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.16                                                 summ = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 )));
#20 49.16                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.16 lpc_intrin_avx2.c:227:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.16                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.16                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.16 lpc_intrin_avx2.c:228:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.16                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.16                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.16 lpc_intrin_avx2.c:229:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.16                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.16                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.16 lpc_intrin_avx2.c:230:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.16                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.16                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.16 lpc_intrin_avx2.c:231:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.16                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.16                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.16 lpc_intrin_avx2.c:232:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.16                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.16                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.16 lpc_intrin_avx2.c:234:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.16                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.16                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.16 lpc_intrin_avx2.c:234:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.16                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.16                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.16 lpc_intrin_avx2.c:250:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.16                                                 summ = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 )));
#20 49.16                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.17 lpc_intrin_avx2.c:251:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.17                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.17 lpc_intrin_avx2.c:252:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.17                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.17 lpc_intrin_avx2.c:253:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.17                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.17 lpc_intrin_avx2.c:254:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.17                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.17 lpc_intrin_avx2.c:255:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.17                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.17 lpc_intrin_avx2.c:257:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.17                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.17                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.17 lpc_intrin_avx2.c:257:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.17                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.17                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.17 lpc_intrin_avx2.c:270:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.17                                                 summ = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 )));
#20 49.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.17 lpc_intrin_avx2.c:271:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.17                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.17 lpc_intrin_avx2.c:272:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.17                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.17 lpc_intrin_avx2.c:273:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.17                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.17 lpc_intrin_avx2.c:274:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.17                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.17 lpc_intrin_avx2.c:276:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.17                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.17                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.17 lpc_intrin_avx2.c:276:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.17                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.17                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.17 lpc_intrin_avx2.c:292:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.17                                                 summ = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 )));
#20 49.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.18 lpc_intrin_avx2.c:293:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.18                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.18 lpc_intrin_avx2.c:294:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.18                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.18 lpc_intrin_avx2.c:295:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.18                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.18 lpc_intrin_avx2.c:297:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.18                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.18                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.18 lpc_intrin_avx2.c:297:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.18                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.18                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.18 lpc_intrin_avx2.c:308:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.18                                                 summ = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 )));
#20 49.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.18 lpc_intrin_avx2.c:309:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.18                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.18 lpc_intrin_avx2.c:310:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.18                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.18 lpc_intrin_avx2.c:312:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.18                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.18                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.18 lpc_intrin_avx2.c:312:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.18                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.18                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.18 lpc_intrin_avx2.c:324:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.18                                                 summ = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 )));
#20 49.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.18 lpc_intrin_avx2.c:325:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.19                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.19 lpc_intrin_avx2.c:327:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.19                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.19                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.19 lpc_intrin_avx2.c:327:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.19                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.19                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.19 lpc_intrin_avx2.c:336:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.19                                                 summ = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 )));
#20 49.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.19 lpc_intrin_avx2.c:338:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.19                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.19                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.19 lpc_intrin_avx2.c:338:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.19                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.19                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.19   CC       stream_encoder.lo
#20 49.23 lpc_intrin_avx2.c:435:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.23                                                 summ = _mm256_mullo_epi32(q11, _mm256_loadu_si256((const __m256i*)(data+i-12)));
#20 49.23                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:436:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.23                                                 mull = _mm256_mullo_epi32(q10, _mm256_loadu_si256((const __m256i*)(data+i-11))); summ = _mm256_add_epi32(summ, mull);
#20 49.23                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:437:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.23                                                 mull = _mm256_mullo_epi32(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10))); summ = _mm256_add_epi32(summ, mull);
#20 49.23                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:438:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.23                                                 mull = _mm256_mullo_epi32(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9)));  summ = _mm256_add_epi32(summ, mull);
#20 49.23                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:439:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.23                                                 mull = _mm256_mullo_epi32(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8)));  summ = _mm256_add_epi32(summ, mull);
#20 49.23                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:440:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.23                                                 mull = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));  summ = _mm256_add_epi32(summ, mull);
#20 49.23                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:441:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.23                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 49.23                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:442:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.23                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 49.23                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:443:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.23                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 49.23                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:444:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.23                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 49.23                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:445:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.23                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 49.23                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:446:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.23                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.23                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:448:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.23                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.23                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:448:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.23                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.23                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:467:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.24                                                 summ = _mm256_mullo_epi32(q10, _mm256_loadu_si256((const __m256i*)(data+i-11)));
#20 49.24                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:468:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.24                                                 mull = _mm256_mullo_epi32(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10))); summ = _mm256_add_epi32(summ, mull);
#20 49.24                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:469:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.24                                                 mull = _mm256_mullo_epi32(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9)));  summ = _mm256_add_epi32(summ, mull);
#20 49.24                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:470:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.24                                                 mull = _mm256_mullo_epi32(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8)));  summ = _mm256_add_epi32(summ, mull);
#20 49.24                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:471:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.24                                                 mull = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));  summ = _mm256_add_epi32(summ, mull);
#20 49.24                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:472:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.24                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 49.24                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:473:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.24                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 49.24                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:474:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.24                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 49.24                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:475:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.24                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 49.24                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:476:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.24                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 49.24                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:477:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.24                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.24                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:479:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.24                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.24                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:479:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.24                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.24                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.25 lpc_intrin_avx2.c:499:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.25                                                 summ = _mm256_mullo_epi32(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10)));
#20 49.25                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.25 lpc_intrin_avx2.c:500:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.25                                                 mull = _mm256_mullo_epi32(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9)));  summ = _mm256_add_epi32(summ, mull);
#20 49.25                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.25 lpc_intrin_avx2.c:501:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.25                                                 mull = _mm256_mullo_epi32(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8)));  summ = _mm256_add_epi32(summ, mull);
#20 49.25                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.25 lpc_intrin_avx2.c:502:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.25                                                 mull = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));  summ = _mm256_add_epi32(summ, mull);
#20 49.25                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.25 lpc_intrin_avx2.c:503:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.25                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 49.25                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.25 lpc_intrin_avx2.c:504:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.25                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 49.25                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.25 lpc_intrin_avx2.c:505:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.25                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 49.26                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.26 lpc_intrin_avx2.c:506:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.26                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 49.26                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.26 lpc_intrin_avx2.c:507:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.26                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 49.26                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.26 lpc_intrin_avx2.c:508:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.26                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.26                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.26 lpc_intrin_avx2.c:510:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.26                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.27                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.27 lpc_intrin_avx2.c:510:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.27                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.27                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.27 lpc_intrin_avx2.c:527:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.27                                                 summ = _mm256_mullo_epi32(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9)));
#20 49.27                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.27 lpc_intrin_avx2.c:528:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.27                                                 mull = _mm256_mullo_epi32(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8)));  summ = _mm256_add_epi32(summ, mull);
#20 49.27                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.27 lpc_intrin_avx2.c:529:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.27                                                 mull = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));  summ = _mm256_add_epi32(summ, mull);
#20 49.27                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.27 lpc_intrin_avx2.c:530:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.27                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 49.27                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.27 lpc_intrin_avx2.c:531:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.27                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 49.27                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.27 lpc_intrin_avx2.c:532:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.27                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 49.27                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.27 lpc_intrin_avx2.c:533:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.28                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 49.28                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.28 lpc_intrin_avx2.c:534:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.28                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 49.28                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.28 lpc_intrin_avx2.c:535:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.28                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.28                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.28 lpc_intrin_avx2.c:537:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.28                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.28                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.28 lpc_intrin_avx2.c:537:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.28                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.28                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.28 lpc_intrin_avx2.c:557:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.28                                                 summ = _mm256_mullo_epi32(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8)));
#20 49.28                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.28 lpc_intrin_avx2.c:558:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.28                                                 mull = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));  summ = _mm256_add_epi32(summ, mull);
#20 49.28                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.28 lpc_intrin_avx2.c:559:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.28                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 49.28                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.28 lpc_intrin_avx2.c:560:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.28                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 49.28                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.28 lpc_intrin_avx2.c:561:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.28                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 49.28                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.28 lpc_intrin_avx2.c:562:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.28                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 49.28                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.28 lpc_intrin_avx2.c:563:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.29                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 49.29                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.29 lpc_intrin_avx2.c:564:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.29                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.29                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.29 lpc_intrin_avx2.c:566:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.29                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.29                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.29 lpc_intrin_avx2.c:566:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.29                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.29                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.29 lpc_intrin_avx2.c:581:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.29                                                 summ = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));
#20 49.29                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.29 lpc_intrin_avx2.c:582:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.29                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 49.29                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.30 lpc_intrin_avx2.c:583:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.30                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 49.30                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.30 lpc_intrin_avx2.c:584:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.30                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 49.30                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.30 lpc_intrin_avx2.c:585:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.30                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 49.30                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.30 lpc_intrin_avx2.c:586:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.30                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 49.30                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.30 lpc_intrin_avx2.c:587:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.30                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.30                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.30 lpc_intrin_avx2.c:589:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.30                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.30                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.30 lpc_intrin_avx2.c:589:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.30                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.30                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.30 lpc_intrin_avx2.c:605:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.30                                                 summ = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));
#20 49.30                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.30 lpc_intrin_avx2.c:606:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.30                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 49.30                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.30 lpc_intrin_avx2.c:607:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.30                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 49.30                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.30 lpc_intrin_avx2.c:608:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.30                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 49.30                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.30 lpc_intrin_avx2.c:609:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.30                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 49.30                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.30 lpc_intrin_avx2.c:610:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.30                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.30                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.30 lpc_intrin_avx2.c:612:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.30                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.30                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.30 lpc_intrin_avx2.c:612:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.30                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.30                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.30 lpc_intrin_avx2.c:625:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.30                                                 summ = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));
#20 49.30                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:626:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 49.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:627:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 49.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:628:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 49.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:629:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:631:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.31                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:631:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.31                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:647:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 summ = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));
#20 49.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:648:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 49.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:649:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 49.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:650:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:652:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.31                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:652:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.31                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:663:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 summ = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));
#20 49.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:664:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 49.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:665:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:667:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.31                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:667:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.31                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:679:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 summ = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));
#20 49.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:680:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:682:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.31                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:682:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.31                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:691:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 summ = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));
#20 49.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:693:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.31                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.31 lpc_intrin_avx2.c:693:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.31                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.31                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.35 lpc_intrin_avx2.c:768:42: warning: cast from 'FLAC__int32 *' (aka 'int *') to 'const __m256i *' increases required alignment from 16 to 32 [-Wcast-align]
#20 49.35         const __m256i pack = _mm256_loadu_si256((const __m256i *)pack_arr);
#20 49.35                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.35 lpc_intrin_avx2.c:794:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.35                                                 summ = _mm256_mul_epi32(q11, _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-12))));
#20 49.35                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.35 lpc_intrin_avx2.c:795:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.35                                                 mull = _mm256_mul_epi32(q10, _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-11)))); summ = _mm256_add_epi64(summ, mull);
#20 49.35                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.35 lpc_intrin_avx2.c:796:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.35                                                 mull = _mm256_mul_epi32(q9,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-10)))); summ = _mm256_add_epi64(summ, mull);
#20 49.35                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.35 lpc_intrin_avx2.c:797:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.35                                                 mull = _mm256_mul_epi32(q8,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-9 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.35                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.35 lpc_intrin_avx2.c:798:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.35                                                 mull = _mm256_mul_epi32(q7,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-8 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.35                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.35 lpc_intrin_avx2.c:799:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.35                                                 mull = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.35                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.35 lpc_intrin_avx2.c:800:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.36                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.36                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.36 lpc_intrin_avx2.c:801:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.36                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.36                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.36 lpc_intrin_avx2.c:802:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.36                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.36                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.36 lpc_intrin_avx2.c:803:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.36                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.36                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.36 lpc_intrin_avx2.c:804:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.36                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.36                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.36 lpc_intrin_avx2.c:805:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.36                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.36                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.36 lpc_intrin_avx2.c:807:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.36                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.36                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.36 lpc_intrin_avx2.c:807:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.36                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.36                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.36 lpc_intrin_avx2.c:826:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.36                                                 summ = _mm256_mul_epi32(q10, _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-11))));
#20 49.36                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.36 lpc_intrin_avx2.c:827:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.36                                                 mull = _mm256_mul_epi32(q9,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-10)))); summ = _mm256_add_epi64(summ, mull);
#20 49.36                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.36 lpc_intrin_avx2.c:828:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.36                                                 mull = _mm256_mul_epi32(q8,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-9 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.36                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.36 lpc_intrin_avx2.c:829:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.36                                                 mull = _mm256_mul_epi32(q7,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-8 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.36                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.37 lpc_intrin_avx2.c:830:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.37                                                 mull = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.37                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.37 lpc_intrin_avx2.c:831:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.37                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.38                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.38 lpc_intrin_avx2.c:832:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.38                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.38                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.38 lpc_intrin_avx2.c:833:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.39                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.39 lpc_intrin_avx2.c:834:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.39                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.39 lpc_intrin_avx2.c:835:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.39                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.39 lpc_intrin_avx2.c:836:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.39                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.39 lpc_intrin_avx2.c:838:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.39                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.39                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.39 lpc_intrin_avx2.c:838:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.39                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.39                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.40 lpc_intrin_avx2.c:858:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.40                                                 summ = _mm256_mul_epi32(q9,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-10))));
#20 49.40                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.40 lpc_intrin_avx2.c:859:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.40                                                 mull = _mm256_mul_epi32(q8,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-9 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.40                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.40 lpc_intrin_avx2.c:860:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.40                                                 mull = _mm256_mul_epi32(q7,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-8 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.40                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.40 lpc_intrin_avx2.c:861:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.40                                                 mull = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.40                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.40 lpc_intrin_avx2.c:862:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.40                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.40                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.40 lpc_intrin_avx2.c:863:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.40                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.40                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.40 lpc_intrin_avx2.c:864:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.40                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.40                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.40 lpc_intrin_avx2.c:865:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.40                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.40                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.40 lpc_intrin_avx2.c:866:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.40                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.40                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.40 lpc_intrin_avx2.c:867:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.40                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.40                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.40 lpc_intrin_avx2.c:869:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.40                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.40                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.40 lpc_intrin_avx2.c:869:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.40                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.40                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.40 lpc_intrin_avx2.c:886:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.40                                                 summ = _mm256_mul_epi32(q8,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-9 ))));
#20 49.40                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.40 lpc_intrin_avx2.c:887:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.40                                                 mull = _mm256_mul_epi32(q7,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-8 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.41                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.41 lpc_intrin_avx2.c:888:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.41                                                 mull = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.41                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.41 lpc_intrin_avx2.c:889:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.41                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.41                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.41 lpc_intrin_avx2.c:890:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.41                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.41                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.41 lpc_intrin_avx2.c:891:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.41                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.41                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.41 lpc_intrin_avx2.c:892:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.41                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.41                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.41 lpc_intrin_avx2.c:893:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.41                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.41                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.41 lpc_intrin_avx2.c:894:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.41                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.41                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.41 lpc_intrin_avx2.c:896:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.41                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.41                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.41 lpc_intrin_avx2.c:896:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.41                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.41                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.41 lpc_intrin_avx2.c:916:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.41                                                 summ = _mm256_mul_epi32(q7,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-8 ))));
#20 49.41                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.41 lpc_intrin_avx2.c:917:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.41                                                 mull = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.41                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.41 lpc_intrin_avx2.c:918:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.42                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.42                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.42 lpc_intrin_avx2.c:919:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.42                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.42                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.42 lpc_intrin_avx2.c:920:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.42                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.42                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.42 lpc_intrin_avx2.c:921:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.42                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.42                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.42 lpc_intrin_avx2.c:922:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.42                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.42                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.42 lpc_intrin_avx2.c:923:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.42                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.42                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.42 lpc_intrin_avx2.c:925:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.42                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.42                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.42 lpc_intrin_avx2.c:925:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.42                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.42                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.42 lpc_intrin_avx2.c:940:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.42                                                 summ = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 ))));
#20 49.42                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.42 lpc_intrin_avx2.c:941:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.42                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.42                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.42 lpc_intrin_avx2.c:942:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.43                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.43                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.43 lpc_intrin_avx2.c:943:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.43                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.43                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.43 lpc_intrin_avx2.c:944:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.43                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.43                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.43 lpc_intrin_avx2.c:945:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.43                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.43                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.43 lpc_intrin_avx2.c:946:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.43                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.43                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.43 lpc_intrin_avx2.c:948:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.43                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.43                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.43 lpc_intrin_avx2.c:948:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.43                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.43                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.44 lpc_intrin_avx2.c:964:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.44                                                 summ = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 ))));
#20 49.44                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.44 lpc_intrin_avx2.c:965:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.44                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.44                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.44 lpc_intrin_avx2.c:966:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.44                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.44                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.44 lpc_intrin_avx2.c:967:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.44                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.44                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.44 lpc_intrin_avx2.c:968:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.44                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.44                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.44 lpc_intrin_avx2.c:969:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.44                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.44                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.44 lpc_intrin_avx2.c:971:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.45                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.45                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.45 lpc_intrin_avx2.c:971:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.45                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.45                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.45 lpc_intrin_avx2.c:984:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.45                                                 summ = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 ))));
#20 49.45                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.45 lpc_intrin_avx2.c:985:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.45                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.45                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.45 lpc_intrin_avx2.c:986:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.45                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.46                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.46 lpc_intrin_avx2.c:987:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.46                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.46                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.46 lpc_intrin_avx2.c:988:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.46                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.46                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.46 lpc_intrin_avx2.c:990:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.46                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.46                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.46 lpc_intrin_avx2.c:990:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.46                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.46                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.46 lpc_intrin_avx2.c:1006:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.46                                                 summ = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 ))));
#20 49.46                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.46 lpc_intrin_avx2.c:1007:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.46                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.46                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.47 lpc_intrin_avx2.c:1008:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.47                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.47                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.47 lpc_intrin_avx2.c:1009:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.47                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.47                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.47 lpc_intrin_avx2.c:1011:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.47                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.47                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.47 lpc_intrin_avx2.c:1011:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.48                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.48                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.48 lpc_intrin_avx2.c:1022:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.48                                                 summ = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 ))));
#20 49.48                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.48 lpc_intrin_avx2.c:1023:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.48                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.48                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.48 lpc_intrin_avx2.c:1024:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.48                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.48                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.48 lpc_intrin_avx2.c:1026:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.48                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.48                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.48 lpc_intrin_avx2.c:1026:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.48                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.48                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.48 lpc_intrin_avx2.c:1038:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.48                                                 summ = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 ))));
#20 49.48                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.48 lpc_intrin_avx2.c:1039:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.48                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.48                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.48 lpc_intrin_avx2.c:1041:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.48                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.48                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.48 lpc_intrin_avx2.c:1041:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.48                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.48                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.48 lpc_intrin_avx2.c:1050:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.48                                                 summ = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 ))));
#20 49.48                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.48 lpc_intrin_avx2.c:1052:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.48                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.48                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.48 lpc_intrin_avx2.c:1052:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.48                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.48                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.68   CC       stream_encoder_intrin_sse2.lo
#20 49.94 stream_encoder_intrin_sse2.c:91:55: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.94                                         __m128i mm_res = local_abs_epi32(_mm_loadu_si128((const __m128i*)(residual+residual_sample)));
#20 49.94                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.94 stream_encoder_intrin_sse2.c:124:55: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.94                                         __m128i mm_res = local_abs_epi32(_mm_loadl_epi64((const __m128i*)(residual+residual_sample))); /*  0   0  |r1|   |r0| */
#20 49.94                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.95 stream_encoder_intrin_sse2.c:135:22: warning: cast from 'FLAC__uint64 *' (aka 'unsigned long *') to '__m128i *' increases required alignment from 8 to 16 [-Wcast-align]
#20 49.95                                 _mm_storel_epi64((__m128i*)(abs_residual_partition_sums+partition), mm_sum);
#20 49.95                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.96   CC       stream_encoder_intrin_ssse3.lo
#20 50.06 3 warnings generated.
#20 50.25 stream_encoder_intrin_ssse3.c:80:53: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 50.25                                         __m128i mm_res = _mm_abs_epi32(_mm_loadu_si128((const __m128i*)(residual+residual_sample)));
#20 50.25                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 50.25 stream_encoder_intrin_ssse3.c:113:53: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 50.25                                         __m128i mm_res = _mm_abs_epi32(_mm_loadl_epi64((const __m128i*)(residual+residual_sample))); /*  0   0  |r1|   |r0| */
#20 50.25                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 50.25 stream_encoder_intrin_ssse3.c:124:22: warning: cast from 'FLAC__uint64 *' (aka 'unsigned long *') to '__m128i *' increases required alignment from 8 to 16 [-Wcast-align]
#20 50.25                                 _mm_storel_epi64((__m128i*)(abs_residual_partition_sums+partition), mm_sum);
#20 50.25                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 50.36   CC       stream_encoder_intrin_avx2.lo
#20 50.37 3 warnings generated.
#20 50.50 307 warnings generated.
#20 50.62 1 warning generated.
#20 50.65   CC       stream_encoder_framing.lo
#20 50.67   CC       window.lo
#20 51.00   CC       ogg_decoder_aspect.lo
#20 51.33 stream_encoder_intrin_avx2.c:70:59: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 51.33                                         __m256i res256 = _mm256_abs_epi32(_mm256_loadu_si256((const __m256i*)(residual+residual_sample)));
#20 51.33                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.33 stream_encoder_intrin_avx2.c:77:53: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 51.33                                         __m128i res128 = _mm_abs_epi32(_mm_loadu_si128((const __m128i*)(residual+residual_sample)));
#20 51.33                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.33 stream_encoder_intrin_avx2.c:102:53: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 51.34                                         __m128i res128 = _mm_abs_epi32(_mm_loadu_si128((const __m128i*)(residual+residual_sample)));
#20 51.34                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.34 stream_encoder_intrin_avx2.c:110:53: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 51.34                                         __m128i res128 = _mm_abs_epi32(_mm_loadl_epi64((const __m128i*)(residual+residual_sample)));
#20 51.34                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.34 stream_encoder_intrin_avx2.c:121:22: warning: cast from 'FLAC__uint64 *' (aka 'unsigned long *') to '__m128i *' increases required alignment from 8 to 16 [-Wcast-align]
#20 51.34                                 _mm_storel_epi64((__m128i*)(abs_residual_partition_sums+partition), sum128);
#20 51.34                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.44   CC       ogg_encoder_aspect.lo
#20 51.46 5 warnings generated.
#20 51.49   CC       ogg_helper.lo
#20 52.26   CC       ogg_mapping.lo
#20 53.26   CCLD     libFLAC.la
#20 53.26   CCLD     libFLAC-static.la
#20 53.61 make[4]: Leaving directory '/src/flac/src/libFLAC'
#20 53.61 make[3]: Leaving directory '/src/flac/src/libFLAC'
#20 53.61 Making all in share
#20 53.61 make[3]: Entering directory '/src/flac/src/share'
#20 53.62   CC       getopt/getopt.lo
#20 53.62   CC       getopt/getopt1.lo
#20 53.62   CC       grabbag/alloc.lo
#20 53.62   CC       grabbag/cuesheet.lo
#20 53.62   CC       grabbag/file.lo
#20 53.63   CC       grabbag/picture.lo
#20 53.63   CC       grabbag/replaygain.lo
#20 53.63   CC       grabbag/seektable.lo
#20 53.89   CC       grabbag/snprintf.lo
#20 53.95   CC       utf8/charset.lo
#20 54.07   CC       utf8/iconvert.lo
#20 54.07   CC       utf8/utf8.lo
#20 54.11   CC       replaygain_analysis/replaygain_analysis.lo
#20 54.20   CC       replaygain_synthesis/libreplaygain_synthesis_la-replaygain_synthesis.lo
#20 54.62   CCLD     utf8/libutf8.la
#20 54.69   CCLD     getopt/libgetopt.la
#20 54.81   CCLD     replaygain_synthesis/libreplaygain_synthesis.la
#20 55.05   CCLD     replaygain_analysis/libreplaygain_analysis.la
#20 55.08   CCLD     grabbag/libgrabbag.la
#20 55.22 make[3]: Leaving directory '/src/flac/src/share'
#20 55.22 Making all in flac
#20 55.23 make[3]: Entering directory '/src/flac/src/flac'
#20 55.23   CC       analyze.o
#20 55.23   CC       decode.o
#20 55.23   CC       encode.o
#20 55.23   CC       foreign_metadata.o
#20 55.23   CC       main.o
#20 55.23   CC       utils.o
#20 55.23   CC       local_string_utils.o
#20 55.23   CC       vorbiscomment.o
#20 56.63   CCLD     flac
#20 57.07 make[3]: Leaving directory '/src/flac/src/flac'
#20 57.07 Making all in metaflac
#20 57.07 make[3]: Entering directory '/src/flac/src/metaflac'
#20 57.08   CC       main.o
#20 57.08   CC       operations.o
#20 57.08   CC       operations_shorthand_cuesheet.o
#20 57.08   CC       operations_shorthand_picture.o
#20 57.08   CC       operations_shorthand_seektable.o
#20 57.08   CC       operations_shorthand_streaminfo.o
#20 57.08   CC       operations_shorthand_vorbiscomment.o
#20 57.08   CC       options.o
#20 57.18   CC       usage.o
#20 57.24   CC       utils.o
#20 57.78   CCLD     metaflac
#20 58.19 make[3]: Leaving directory '/src/flac/src/metaflac'
#20 58.19 Making all in test_grabbag
#20 58.19 make[3]: Entering directory '/src/flac/src/test_grabbag'
#20 58.20 Making all in cuesheet
#20 58.20 make[4]: Entering directory '/src/flac/src/test_grabbag/cuesheet'
#20 58.20 make[4]: Nothing to be done for 'all'.
#20 58.20 make[4]: Leaving directory '/src/flac/src/test_grabbag/cuesheet'
#20 58.20 Making all in picture
#20 58.21 make[4]: Entering directory '/src/flac/src/test_grabbag/picture'
#20 58.21 make[4]: Nothing to be done for 'all'.
#20 58.21 make[4]: Leaving directory '/src/flac/src/test_grabbag/picture'
#20 58.21 make[4]: Entering directory '/src/flac/src/test_grabbag'
#20 58.21 make[4]: Nothing to be done for 'all-am'.
#20 58.21 make[4]: Leaving directory '/src/flac/src/test_grabbag'
#20 58.21 make[3]: Leaving directory '/src/flac/src/test_grabbag'
#20 58.21 Making all in test_libs_common
#20 58.22 make[3]: Entering directory '/src/flac/src/test_libs_common'
#20 58.22   CC       file_utils_flac.lo
#20 58.22   CC       metadata_utils.lo
#20 58.78   CCLD     libtest_libs_common.la
#20 58.93 make[3]: Leaving directory '/src/flac/src/test_libs_common'
#20 58.93 Making all in test_libFLAC
#20 58.94 make[3]: Entering directory '/src/flac/src/test_libFLAC'
#20 58.94 make[3]: Nothing to be done for 'all'.
#20 58.94 make[3]: Leaving directory '/src/flac/src/test_libFLAC'
#20 58.94 Making all in test_seeking
#20 58.94 make[3]: Entering directory '/src/flac/src/test_seeking'
#20 58.94 make[3]: Nothing to be done for 'all'.
#20 58.94 make[3]: Leaving directory '/src/flac/src/test_seeking'
#20 58.94 Making all in test_streams
#20 58.95 make[3]: Entering directory '/src/flac/src/test_streams'
#20 58.95 make[3]: Nothing to be done for 'all'.
#20 58.95 make[3]: Leaving directory '/src/flac/src/test_streams'
#20 58.95 Making all in utils
#20 58.95 make[3]: Entering directory '/src/flac/src/utils'
#20 58.96 Making all in flacdiff
#20 58.96 make[4]: Entering directory '/src/flac/src/utils/flacdiff'
#20 58.96 make[4]: Nothing to be done for 'all'.
#20 58.96 make[4]: Leaving directory '/src/flac/src/utils/flacdiff'
#20 58.96 Making all in flactimer
#20 58.97 make[4]: Entering directory '/src/flac/src/utils/flactimer'
#20 58.97 make[4]: Nothing to be done for 'all'.
#20 58.97 make[4]: Leaving directory '/src/flac/src/utils/flactimer'
#20 58.97 make[4]: Entering directory '/src/flac/src/utils'
#20 58.97 make[4]: Nothing to be done for 'all-am'.
#20 58.97 make[4]: Leaving directory '/src/flac/src/utils'
#20 58.97 make[3]: Leaving directory '/src/flac/src/utils'
#20 58.97 Making all in libFLAC++
#20 58.98 make[3]: Entering directory '/src/flac/src/libFLAC++'
#20 58.98   CXX      metadata.lo
#20 58.98   CXX      stream_decoder.lo
#20 58.98   CXX      stream_encoder.lo
#20 61.20   CXXLD    libFLAC++.la
#20 61.20   CXXLD    libFLAC++-static.la
#20 61.44 clang-14: warning: argument unused during compilation: '-pthread' [-Wunused-command-line-argument]
#20 61.44 clang-14: warning: argument unused during compilation: '-pthread' [-Wunused-command-line-argument]
#20 61.46 copying selected object files to avoid basename conflicts...
#20 61.82 make[3]: Leaving directory '/src/flac/src/libFLAC++'
#20 61.82 Making all in test_libFLAC++
#20 61.83 make[3]: Entering directory '/src/flac/src/test_libFLAC++'
#20 61.83 make[3]: Nothing to be done for 'all'.
#20 61.83 make[3]: Leaving directory '/src/flac/src/test_libFLAC++'
#20 61.83 make[3]: Entering directory '/src/flac/src'
#20 61.83 make[3]: Nothing to be done for 'all-am'.
#20 61.83 make[3]: Leaving directory '/src/flac/src'
#20 61.83 make[2]: Leaving directory '/src/flac/src'
#20 61.83 Making all in test
#20 61.83 make[2]: Entering directory '/src/flac/test'
#20 61.84 Making all in cuesheets
#20 61.84 make[3]: Entering directory '/src/flac/test/cuesheets'
#20 61.84 make[3]: Nothing to be done for 'all'.
#20 61.84 make[3]: Leaving directory '/src/flac/test/cuesheets'
#20 61.85 Making all in flac-to-flac-metadata-test-files
#20 61.85 make[3]: Entering directory '/src/flac/test/flac-to-flac-metadata-test-files'
#20 61.85 make[3]: Nothing to be done for 'all'.
#20 61.85 make[3]: Leaving directory '/src/flac/test/flac-to-flac-metadata-test-files'
#20 61.85 Making all in metaflac-test-files
#20 61.85 make[3]: Entering directory '/src/flac/test/metaflac-test-files'
#20 61.85 make[3]: Nothing to be done for 'all'.
#20 61.85 make[3]: Leaving directory '/src/flac/test/metaflac-test-files'
#20 61.85 Making all in pictures
#20 61.86 make[3]: Entering directory '/src/flac/test/pictures'
#20 61.86 make[3]: Nothing to be done for 'all'.
#20 61.86 make[3]: Leaving directory '/src/flac/test/pictures'
#20 61.86 make[3]: Entering directory '/src/flac/test'
#20 61.86 make[3]: Nothing to be done for 'all-am'.
#20 61.86 make[3]: Leaving directory '/src/flac/test'
#20 61.86 make[2]: Leaving directory '/src/flac/test'
#20 61.86 Making all in build
#20 61.87 make[2]: Entering directory '/src/flac/build'
#20 61.87 make[2]: Nothing to be done for 'all'.
#20 61.87 make[2]: Leaving directory '/src/flac/build'
#20 61.87 Making all in microbench
#20 61.87 make[2]: Entering directory '/src/flac/microbench'
#20 61.87   CC       benchmark_residual.o
#20 61.87   CC       util.o
#20 62.06   CCLD     benchmark_residual
#20 62.28 make[2]: Leaving directory '/src/flac/microbench'
#20 62.28 Making all in oss-fuzz
#20 62.29 make[2]: Entering directory '/src/flac/oss-fuzz'
#20 62.29 make[2]: Nothing to be done for 'all'.
#20 62.29 make[2]: Leaving directory '/src/flac/oss-fuzz'
#20 62.29 make[2]: Entering directory '/src/flac'
#20 62.29 make[2]: Leaving directory '/src/flac'
#20 62.29 make[1]: Leaving directory '/src/flac'
#20 62.29 + cd /src/fuzzing-headers
#20 62.29 + ./install.sh
#20 62.32 + cd /src/flac-fuzzers/
#20 62.32 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -D_GLIBCXX_DEBUG -I /src/flac/include/ fuzzer_decoder.cpp /src/flac/src/libFLAC++/.libs/libFLAC++.a /src/flac/src/libFLAC/.libs/libFLAC.a /src/libogg-install/lib/libogg.a /libAFL.a -o /out/fuzzer_decoder
#20 63.82 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -D_GLIBCXX_DEBUG -I /src/flac/include/ fuzzer_encoder.cpp /src/flac/src/libFLAC++/.libs/libFLAC++.a /src/flac/src/libFLAC/.libs/libFLAC.a /src/libogg-install/lib/libogg.a /libAFL.a -o /out/fuzzer_encoder
#20 65.43 + cp fuzzer_encoder.dict /out/
#20 65.44 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 65.9s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:5ff1c5dd770a0b86d1a6f4a79e0ff6f89282a9ed4b18e0039922cf36129e86eb
#21 writing image sha256:5ff1c5dd770a0b86d1a6f4a79e0ff6f89282a9ed4b18e0039922cf36129e86eb done
#21 naming to gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:382223fbd42b4365f900eb35441f9e4e59f6505fe679e68a34a6fbb50032ab88
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:a63a37fcaabde0d3982728933a727d8fefa82db3240cdfeebbff5c634d8fce1e
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo-intermediate
#5 sha256:11e9733fbe6c6b94192914144f583232bbdb10b38a7eb0bf5a887182da57334f
#5 ERROR: gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo-intermediate:latest: not found

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f done
#6 naming to gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo-intermediate done
#6 DONE 0.2s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:7f0cc37586f4b14ab424534fecd93709f64d3ea26ce1b6654f53aa65f55377c2
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:91ace31725bf5a00c084513356a7f750f2376863d7b8a3ebe4d18d9d38b1e455
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo:latest
#4 sha256:1f1ff3ee809b6666c46ddcd58193d37bd6af9881ba4b2ab658af995b0a4d4990
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo-intermediate:latest
#3 sha256:b72625e6d56460398dae873c808f631126dcb4f9e46ab74eb04c37ad761fc721
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:a36fdcdb13c792f58f28931161827b320fb78b3003f611f0dbada4abcc9fe524
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo-intermediate
#6 sha256:78bad5289b309eba0068294e0401ca0c98306e12fec91cde36a3649b50816c9e
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo
#10 sha256:6e4e6aea243b50611f36039a87d951c89dc1ae319d6a2a1648be1fb856e26d6d
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo
#5 sha256:15c861a7b68b0bdd2f1b8d8a199acc0d0686399c09a02b4da5f986b6a3c8156d
#5 ERROR: gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo:latest: not found

#12 [internal] load build context
#12 sha256:a36fdcdb13c792f58f28931161827b320fb78b3003f611f0dbada4abcc9fe524
#12 transferring context: 17.64MB 0.7s done
#12 DONE 0.8s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo
#10 sha256:6e4e6aea243b50611f36039a87d951c89dc1ae319d6a2a1648be1fb856e26d6d
#10 DONE 1.3s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:b73ac577900a38ff2c259857fd3958f621dde22f59b604db0ab8f06a7b92d254
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:6a05d47487b0c33e347764e5909fce7c379a899a2c77915cd11e15583ef05de0
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:2ba6acba482456705a04c55fb6069d857c37226d740d328982aa371fa2552066
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:ece744ed5c9eb42ab508a05373b33d46e3ac72484d6446b668f4ee899eba4eeb
#11 DONE 0.2s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:d214aee4c696b4cac72d3e1f6f987d5bf35f9c121a634d793f5230ffcbc395cb
#13 DONE 1.3s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:8fd727e2a2d78a2dd62ea8a2be89aa9cdc0e961d7cde1f738adb6c18c94482c5
#14 DONE 0.3s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:8c7dad8175b6ab1aeb763ff4df41f0044ca13189d9f634f47572b9549584cb50
#15 DONE 0.7s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:a2b2656afc2526ffbfbad84fd1b52aa422b70bc00a66c57b11fde2a8f5361749
#16 DONE 0.7s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:b977388077b2ed72418703d42010e3642ed7d53c690118dbc45d9bb4039b3e05
#17 DONE 0.1s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:7ccf8c9e368621bee152b8fe7cabafdb7ae51d22e0420e238e5b3d7a525f12b5
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:46e2478f20cba22f18f77aa06bf01912a55af916cd6d15fdc9cab10892909f77
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:4a62291117b57b63017692fa95e326b2908b8c0751c70486aff525be8a750794
#20 DONE 0.5s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:d99189f555166612c0c07ab423835f95bf50dece0bf3277d393a209d515496e0 done
#21 naming to gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f8281716f70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:86e455e8c0db3d15e55cd7a8d0dc9e102bd7a7fe4e822dbbdee6a796f55fec27
#1 transferring dockerfile: 32B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:77beac61cb0d95757d8bbdee5fca0b7249bb98b3d5abd65ebaec764a208e7573
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#5 [1/7] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo
#4 sha256:a2fbe73c3833545b45b576c9992dfb705a0693cbfe0f8d0d14ecbbfb8e22a4c2
#4 DONE 0.0s

#11 [internal] load build context
#11 sha256:1be52d1f44220941249a2114ab89df01d7341129b488e5bce5053a6167d8c10b
#11 transferring context: 30B done
#11 DONE 0.0s

#7 [3/7] RUN git clone --depth 1 https://github.com/xiph/flac.git
#7 sha256:0ed5b13c40ae159e86af44a58886a684947b11a7b4fc444d79df5fd6b253ef5b
#7 CACHED

#8 [4/7] RUN git clone --depth 1 https://github.com/xiph/ogg.git
#8 sha256:281ada0474cd672602aba24eee565dcc2e8b66c1cf406288a01972070a0a5744
#8 CACHED

#9 [5/7] RUN git clone --depth 1 https://github.com/guidovranken/fuzzing-headers.git
#9 sha256:641642142aa1c88e89b9baff285f7dc74c7f0eceaff3b3500b12d3c6e6d86e21
#9 CACHED

#6 [2/7] RUN apt-get update && apt-get install -y make autoconf automake libtool libtool-bin pkg-config gettext sudo
#6 sha256:cf4cf36dc427e50cf8d862a59b23e8905d0bb90f0ee93db68bdcbc101414cae3
#6 CACHED

#10 [6/7] RUN git clone --depth 1 https://github.com/guidovranken/flac-fuzzers.git
#10 sha256:8340a5890971b05c713ee1c6e587a013fc8cb435330b99e5ea0c726f5c0d7681
#10 CACHED

#12 [7/7] COPY build.sh /src/
#12 sha256:4c889061e660f1b88c5c473c4aab9c771911f06efce4ba80c887e016577ab0db
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:8dfd7c3dde3ca34248b0d713fdf808aa1a9d86be28a7a0c59cebd338cb4ef9e7
#13 writing image sha256:8dfd7c3dde3ca34248b0d713fdf808aa1a9d86be28a7a0c59cebd338cb4ef9e7 done
#13 naming to gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:6ed8d13734bdd695fcbbce98bc6b7435948a517d23c150c06624ee2994986baa
#1 DONE 0.0s

#1 [internal] load build definition from builder.Dockerfile
#1 sha256:6ed8d13734bdd695fcbbce98bc6b7435948a517d23c150c06624ee2994986baa
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:24b22d83bb5ce7df2e54bbf01af3fc06f188c8a1627747ce4ef86bcc8a198b65
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo:latest
#3 sha256:75851e499ee75ab0c843bda8ada84e920846da943fe81e9e508b8b4131a58852
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate
#4 sha256:236679cb9d9e071be2329edd700fc5970b426d1521f4cecaed39bcffe88c4d18
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo
#5 sha256:90673f88336bbc1921494a0e989d3a05f86833fb50693e01e204a48f3faaa2a5
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:07c39a69203b6eeb52ba4c79eb515491df80c6877733b5daac806584e4f85a25
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:2806afed7fd6e4d15ae611dde90a37ad06ee457e240feb73e87f2e34fd8a9824
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:fc11a4dc7f02be88134e608aeb9562eb35a2a75b23a765dc90d052ac5bead01a done
#8 naming to gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:ce651e89eeb71e45262db12f76ff4bc84c34b6890571ab5053c5feb9e145343b
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:86f5049d48aa2f3cb0567cd00ec3bfb2706bc004de17fc8148f1b771adee80c5
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.3s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:d83dcede4beef8d08fad6e8e9b2bba30ef9c22a3640386ff591b935089a1002c
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:24a0e31ce1dbc132f885e084d1fe1695d0dc2385bd67b342ccfdd9ca151eec4f
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:8f131d55b3bbcef9c8ca8067a0a28c6a94f9e8fb01117a0098b3c49c370d4a28
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:9e624ef24a80423d13a032cff999b15cb823fdfa19e34e3903db4b821c7ea913
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:0b7acd75a5a1047e7bb352a7dd3ff1776805786d1cd5e52a08f177eb62e820ed
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:180eb2ba76fd3dedd4a677cefd343fde0f38bdd8b4aeeffec1ce1cda6c8fdee7
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:177418abe90bf1002b95493f0cf8a2938d2d3f6001cf5a143b6c0675eabc74ec
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate:latest
#3 sha256:65786f6db6a2c621e280d2502d33fa2ff2695d4b3e9de78d38de10034c4f2fc5
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate
#6 sha256:074800b24ebc8e3fa3f627e2d93118f682b8bad32b8b0e132c94655fdc5f71ab
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo
#5 sha256:56d3c0d9d52a62d251865c34d45bcc2bdc9b8031b30f17bbbbeb6d7fd9c0bcff
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:561ff90b01633ff7061b7525842dbc75b6ab9b9f5cf9fe7a953d4a56b5b64bb8
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.1s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:06f8b4e46f269cc71b6828c8968ee529e7ce94107d90ee0323f2430c83790f88
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:10bb0a3ca18f4d0d322ae7969514ed97d4b23c3c8a19a2ec4f246c0d0c495183
#9 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:9b9f08020a4c946ab80518d423b45e797f2165e87ffc8399ad7cbcce46e5a82e
#18 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:4b313e514e4917a72d2c8054b2f7fa75a69212e9e02cb795cb6c16d30b096aaa
#19 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:1aaf39dd1fc2e1332f6da1080f2d5cd5d80239e989daf5ca36d2240bca78a637
#11 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:b29f0f61c3f226e144e61b9cafe4cd85bf05b60043000ae8468b4d9a91418cac
#17 CACHED

#15 [stage-1  8/13] COPY benchmarks/flac_fuzzer_exo/benchmark.yaml /
#15 sha256:1cc33bd21ddab50b8d309d034bb2105560e24b6842a198511cb74491931f7a9d
#15 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:527e5871f1898dc68f91f671505b9ac9fcb04ed7452b162a0d6c326ad4117613
#10 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:b6535035e8f2d9255028ac2998ea23fe9cc8049f8a165b200d71ebcd30690d0d
#14 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:46d8cece420427d8cc3cb40e32c2585c3aaece8616fc878df82d50afaf80f18a
#16 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:2f6e90d37ec24dc39ece817ff9199af127d83993d271595fd870122f277e1de7
#13 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:11e4fafeef25e9093689dc6c80f5005acb48d3f13d1a902dc3a66bc9043a423a
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:5ff1c5dd770a0b86d1a6f4a79e0ff6f89282a9ed4b18e0039922cf36129e86eb 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:06f7afb458972ec89792acf3466f3d3b6214900690100a0b8c8780f7e9e81990
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:0b0ee88f4541c196ed87207436a4fdc0d98b918c61db46a96362c2ccc6b6611c
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo-intermediate
#5 sha256:11e9733fbe6c6b94192914144f583232bbdb10b38a7eb0bf5a887182da57334f
#5 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f done
#6 naming to gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:120ac27922ffc4810a5ed71103d8402c28744e6d1dce0526a79839f7356deec0
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:1013dffd45d24cef4159f141ed6f04be335852336a6c43202a5ed198bb20da46
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo:latest
#4 sha256:1f1ff3ee809b6666c46ddcd58193d37bd6af9881ba4b2ab658af995b0a4d4990
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo-intermediate:latest
#3 sha256:b72625e6d56460398dae873c808f631126dcb4f9e46ab74eb04c37ad761fc721
#3 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo-intermediate
#6 sha256:78bad5289b309eba0068294e0401ca0c98306e12fec91cde36a3649b50816c9e
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo
#5 sha256:15c861a7b68b0bdd2f1b8d8a199acc0d0686399c09a02b4da5f986b6a3c8156d
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo
#10 sha256:6e4e6aea243b50611f36039a87d951c89dc1ae319d6a2a1648be1fb856e26d6d
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:e709c2b6b00c349adfaee3b4cd0067a9c17bdeac2d1b1d12a9054e35cf5389d8
#12 transferring context: 17.64MB 0.6s done
#12 DONE 0.7s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:793fa6b7a8bddce3127dae5501a6dbfc05dffd806c315c10a4e154aa612ffe14
#16 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:6a05d47487b0c33e347764e5909fce7c379a899a2c77915cd11e15583ef05de0
#8 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:031d23371f8d800d05bb8fe0edf51c080f1b99db3a2b35e6860d7f834e500871
#14 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:ad4154ef6dd8995b890cbb3af050777b15ae8a49982219f1bea5aba78d946a1c
#13 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:b73ac577900a38ff2c259857fd3958f621dde22f59b604db0ab8f06a7b92d254
#7 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:2ba6acba482456705a04c55fb6069d857c37226d740d328982aa371fa2552066
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:ece744ed5c9eb42ab508a05373b33d46e3ac72484d6446b668f4ee899eba4eeb
#11 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:602bc2db2fe3ca52522c39c8db4eea9b46d304d210e1298a37af9cd8de1e33e1
#18 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:5c9998fe748ecb5cbe3e9a6590b001023c65735d5843c9c144e48aef52ad6f16
#19 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:e46aa59750041df1807cca67ff4ae4a0fc4e9d14419e88e39799742a93795975
#15 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:53d0e547d495a759fed541a675ea88a244b8f3fdf6d93bb67adbf6a2cf225df4
#17 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:26fba81a81dda7f4cb10037abdde2fd5983acebf800cfd5dfc1f8a12dc18ecb8
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:d99189f555166612c0c07ab423835f95bf50dece0bf3277d393a209d515496e0
#21 writing image sha256:d99189f555166612c0c07ab423835f95bf50dece0bf3277d393a209d515496e0 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f02dc951f70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
