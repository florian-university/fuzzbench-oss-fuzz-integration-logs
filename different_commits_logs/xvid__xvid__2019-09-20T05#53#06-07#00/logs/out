WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: xvid_xvid.
INFO:root:Please run "make test-run-afl-xvid_xvid" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:8a2ba22a1821d606950131839c041bfb44a64ef0ff124a8916393c297682ee35
#1 transferring dockerfile: 1.14kB done
#1 DONE 0.2s

#2 [internal] load .dockerignore
#2 sha256:04d0852a498ec8ce73d17e00b91caac30e98a733dd66be1e127f7188ae2dc276
#2 transferring context: 2B done
#2 DONE 0.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#10 [internal] load build context
#10 sha256:f087163d828093ffcc077c754f51d5c14142c6a7fbecbceb7f0c7d140abb18b3
#10 DONE 0.0s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/xvid_xvid
#4 sha256:253b6365417e00ae6d22ac75f3dc0a545c777eeade36b789438db7b5b57228ab
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/xvid_xvid:latest: not found

#10 [internal] load build context
#10 sha256:f087163d828093ffcc077c754f51d5c14142c6a7fbecbceb7f0c7d140abb18b3
#10 transferring context: 30B done
#10 DONE 0.1s

#9 [5/6] RUN git clone --depth 1 https://github.com/guidovranken/oss-fuzz-fuzzers.git
#9 sha256:dd8ba69974936386d229eceffe81ca2d0254f101946672cc5e8c5d548bcbeaa4
#9 CACHED

#6 [2/6] RUN apt-get update && apt-get install -y make autoconf automake libtool subversion
#6 sha256:ce45d6ee0fa62f88e08f66b102d0a6bd5a6a4853ec88c0c8dcf7debe0ff583ab
#6 CACHED

#7 [3/6] RUN svn checkout http://svn.xvid.org/trunk --username anonymous --password "" --non-interactive --no-auth-cache
#7 sha256:a10cfa92959c8b294c375ee7c2da2a8e23f1e6b4b0235d7a965981896a7cfaf3
#7 CACHED

#8 [4/6] RUN git clone --depth 1 https://github.com/guidovranken/fuzzing-headers.git
#8 sha256:0e438359e4a9fd0b302477bb7c524c70f1aae5e314ad8e79c763884945a8cdf6
#8 CACHED

#11 [6/6] COPY build.sh /src/
#11 sha256:ba4c8cff65ec8e93cc7eaf30668b84667130fdcc468922c2d28a05f8e3a1c112
#11 CACHED

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:d7a25a96ecebeae88bb8e61fd52c8fa0afcd8e9b3ffc498d5d40eef5ab477879 done
#12 naming to gcr.io/fuzzbench/builders/benchmark/xvid_xvid
#12 naming to gcr.io/fuzzbench/builders/benchmark/xvid_xvid done
#12 DONE 0.2s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/xvid_xvid:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:6e7a560197750d79168029e87562a02e9b5356004f7701020a6c5104367c07a6
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:1c52c7392e37fe46a967e4abcde2db05f19fc27c079a276c52cdb0f424280a91
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/xvid_xvid:latest
#3 sha256:31378b3843b7a2a0ebd012c1bebb48a0c322e6f1c36c3e58524fe9188099f255
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/xvid_xvid
#5 sha256:a2a1df15b689236a59fcadc8c7e9aa3ed6c798d4f6e052c0cf18b250ee287342
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/xvid_xvid-intermediate
#4 sha256:9df58655721a6b04ac13980f1fc473abe5e0c026cc383c9537d3ce5eac760fc0
#4 ERROR: gcr.io/fuzzbench/builders/afl/xvid_xvid-intermediate:latest: not found

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:b04dfd82dcd434a1ed0a7132864ea3be78522f811ebe728dfd23fa84326b0a4b
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:53e219ea75c034208bc5957a486815c70dfa35fb8c1e8be75ec6df7de495a26d
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:d570bfb427ca0b0f50789a30f073e45822e313f38ffd0eb006a9ddbeb7e4761b
#8 writing image sha256:d570bfb427ca0b0f50789a30f073e45822e313f38ffd0eb006a9ddbeb7e4761b 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/xvid_xvid-intermediate
#8 naming to gcr.io/fuzzbench/builders/afl/xvid_xvid-intermediate 0.5s done
#8 DONE 1.0s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/xvid_xvid-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:2dc216e7de061ab7b7470427993e5076df4b4f6870e1f170c656600e40acb89e
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:7b5b5c67d103e3e71d17e3750b9b4937cbcfbf6a745aaaae42793a2762c1115e
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:f7371e3e4a899aaa0e0fe3c95edf12ff3cf06256e88ac00a8a22aa3621e12aef
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:5b410e512007cf8727541524742cc8426c8e3a23090c3cb9e8733eddb1f43a7b
#10 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:8682fd66df0c03f3af5cb3ede07defeac4eb46a16efbadc2b739c29ffa15bc26
#9 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:b17c9c8ce03cef4b67a4d13639f803c58d56906b6e35ace17b6a4a710445ef83
#11 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:d37161ab6f818014e7ef9c26d41503eaf521ede3d8677966bd612da771440dd1
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:f0a6e2c90b9429076cded82fb18e115d226dbe158d519383e4bc5f9803ae5b00 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:c569c6a34244fad0d4ecfa7ef1e76d7327bac4634b95bc13d68de6c7d2d9136a
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:5ba20bdd9640281a3b37aa1a00005aa283439ab75e1a751c3642b717a3197765
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/xvid_xvid-intermediate:latest
#3 sha256:b4d70ee72ccf41d7eb2b0b83527cd2c554562f00f04880069f1a2ab955d2d35f
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:6716cddd3a9be30d98347fd8ecebd40c4e77bc5bec3da6d5f1f84ccb309a8a53
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/xvid_xvid-intermediate
#6 sha256:9248975954f22ba8ebe058eee9cfc3e0a05c87962f977df2608558b00aa5d218
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/xvid_xvid
#5 sha256:5369681c0b846a39a897641da1e2042f439f0978bd9208fa7770f7c444bcd3bf
#5 ERROR: gcr.io/fuzzbench/builders/afl/xvid_xvid:latest: not found

#12 [internal] load build context
#12 sha256:6716cddd3a9be30d98347fd8ecebd40c4e77bc5bec3da6d5f1f84ccb309a8a53
#12 transferring context: 669.85kB 0.1s done
#12 DONE 0.1s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:f0f041d059b380e615599f2d4907e0289ca22073a378c9398f1f49d2306776b1
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:0fc37d50a56543a0ea156c11867bd8c9300037839becc50d1eb90a2dd2822446
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:c91cdb3939fc2967d485dfaa6ac89b29dfaa209686371249aaf1dd8c21554dc7
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:827948fe09bb8db242205710f4b0db8be6e0756caaf62244892f02eec09f261c
#11 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:a4e3b5caa2fbb5521616fcf5c52e3fe89137b99c96ce938ddb0dd29bb6e259f7
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:558519263e748bcd4412da4f8ec3b66db2dd1f29933e6bcaa6ad409292559809
#14 CACHED

#15 [stage-1  8/13] COPY benchmarks/xvid_xvid/benchmark.yaml /
#15 sha256:c6c8fb210a57fe54227a4d5614468b3ca5a3dff5bd18cf02f10d8bafcfdcce73
#15 DONE 0.4s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:0446029f874ced9100f8fa42094990e147522e8abe258ce1348a00815c5fe86a
#16 DONE 0.7s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:8acc658e61742aecd67f2de52e54f6c7e0762a87980bbb43ea8bb6edefe05016
#17 DONE 0.3s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:17a18a114aa8464466b0b6ea2ca50869f31f4934e51933d76d18f86767873cfa
#18 0.467 Checking out commit '47689517'
#18 0.995 error: pathspec ''47689517'' did not match any file(s) known to git
#18 1.733 error: pathspec ''47689517'' did not match any file(s) known to git
#18 1.737 error: pathspec ''47689517'' did not match any file(s) known to git
#18 1.744 error: pathspec ''47689517'' did not match any file(s) known to git
#18 1.872 Checkout unsuccessful.
#18 DONE 2.3s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:0eb58276cc4947e3bdf6035c141e1a4e42498e21b7755faeb3c78f69a245abc5
#19 DONE 0.7s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:ef5f28ce1e8e06f254d8912a3ae1ed7898fbed9c012157e1e310fd7c592b3651
#20 0.522 Run fuzzer_build to build the target
#20 0.633 FUZZ_TARGET = xvid
#20 0.633 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.633 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.638 Building benchmark xvid_xvid with fuzzer afl
#20 0.642 + cd /src/trunk/xvidcore/build/generic/
#20 0.642 + ./bootstrap.sh
#20 1.212 Creating ./configure
#20 1.634 Copying files provided by automake
#20 2.328 Copying files provided by libtool
#20 2.695 Removing files that are not needed
#20 2.700 + mkdir /src/xvidcore-install/
#20 2.702 + [[ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard = *sanitize=memory* ]]
#20 2.702 + [[ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard = *-m32* ]]
#20 2.702 + ./configure --prefix=/src/xvidcore-install/
#20 2.924 checking build system type... x86_64-pc-linux-gnu
#20 3.020 checking host system type... x86_64-pc-linux-gnu
#20 3.020 checking target system type... x86_64-pc-linux-gnu
#20 3.021 checking whether to use default CFLAGS... no
#20 3.022 checking for gcc... clang
#20 3.089 checking whether the C compiler works... yes
#20 3.219 checking for C compiler default output file name... a.out
#20 3.221 checking for suffix of executables... 
#20 3.341 checking whether we are cross compiling... no
#20 3.487 checking for suffix of object files... o
#20 3.515 checking whether we are using the GNU C compiler... yes
#20 3.543 checking whether clang accepts -g... yes
#20 3.567 checking for clang option to accept ISO C89... none needed
#20 3.615 checking for a BSD-compatible install... /usr/bin/install -c
#20 3.629 checking for ranlib... ranlib
#20 3.631 checking for ar... ar
#20 3.631 checking for grep that handles long lines and -e... /usr/bin/grep
#20 3.635 checking for egrep... /usr/bin/grep -E
#20 3.638 checking whether ln -s works... yes
#20 3.639 checking for whether to use assembly code... yes
#20 3.639 checking for architecture type... x86_64
#20 3.640 checking how to run the C preprocessor... clang -E
#20 3.748 checking for ANSI C header files... yes
#20 3.988 checking for sys/types.h... yes
#20 4.045 checking for sys/stat.h... yes
#20 4.100 checking for stdlib.h... yes
#20 4.156 checking for string.h... yes
#20 4.213 checking for memory.h... yes
#20 4.270 checking for strings.h... yes
#20 4.327 checking for inttypes.h... yes
#20 4.386 checking for stdint.h... yes
#20 4.444 checking for unistd.h... yes
#20 4.510 checking size of int *... 8
#20 4.676 checking whether byte ordering is bigendian... no
#20 4.781 checking for build extensions... .so .a .o
#20 4.781 checking for platform specific LDFLAGS/CFLAGS... ok
#20 4.783 checking for yasm... no
#20 4.784 checking for nasm... no
#20 4.785 configure: WARNING: no correct assembler was found - Compiling generic sources only
#20 4.790 checking stdio.h usability... yes
#20 4.844 checking stdio.h presence... yes
#20 4.862 checking for stdio.h... yes
#20 4.873 checking signal.h usability... yes
#20 4.931 checking signal.h presence... yes
#20 4.954 checking for signal.h... yes
#20 4.964 checking for stdlib.h... (cached) yes
#20 4.975 checking for string.h... (cached) yes
#20 4.985 checking assert.h usability... yes
#20 5.049 checking assert.h presence... yes
#20 5.067 checking for assert.h... yes
#20 5.078 checking math.h usability... yes
#20 5.155 checking math.h presence... yes
#20 5.181 checking for math.h... yes
#20 5.189 checking pthread.h usability... yes
#20 5.256 checking pthread.h presence... yes
#20 5.281 checking for pthread.h... yes
#20 5.281 checking for pthread_create in -lpthread... yes
#20 5.481 configure: creating ./config.status
#20 5.605 config.status: creating platform.inc
#20 5.665 ++ nproc
#20 5.666 + make -j 8
#20 5.671 
#20 5.672 
#20 5.672 
#20 5.672 ---------------------------------------------------------------
#20 5.673 
#20 5.673 ---------------------------------------------------------------
#20 5.673 ---------------------------------------------------------------
#20 5.673   D: =build
#20 5.674 Object files used for this build
#20 5.674 ---------------------------------------------------------------
#20 5.674 Using CFLAGS
#20 5.674 Target Libraries
#20 5.675   C: ./decoder.c
#20 5.675 ---------------------------------------------------------------
#20 5.675 Install Paths
#20 5.675 ---------------------------------------------------------------
#20 5.675 ---------------------------------------------------------------
#20 5.676   C: ./encoder.c
#20 5.676 
#20 5.677 ---------------------------------------------------------------
#20 5.677 
#20 5.677 
#20 5.678 decoder.o encoder.o xvid.o bitstream/bitstream.o bitstream/cbp.o bitstream/mbcoding.o dct/fdct.o dct/idct.o dct/simple_idct.o image/colorspace.o image/image.o image/interpolate8x8.o image/font.o image/postprocessing.o image/qpel.o image/reduced.o motion/estimation_bvop.o motion/estimation_common.o motion/estimation_gmc.o motion/estimation_pvop.o motion/estimation_rd_based.o motion/estimation_rd_based_bvop.o motion/gmc.o motion/motion_comp.o motion/vop_type_decision.o motion/sad.o prediction/mbprediction.o plugins/plugin_single.o plugins/plugin_2pass1.o plugins/plugin_2pass2.o plugins/plugin_lumimasking.o plugins/plugin_dump.o plugins/plugin_psnr.o plugins/plugin_ssim.o plugins/plugin_psnrhvsm.o quant/quant_h263.o quant/quant_matrix.o quant/quant_mpeg.o utils/emms.o utils/mbtransquant.o utils/mem_align.o utils/mem_transfer.o utils/timer.o
#20 5.678 
#20 5.678 CFLAGS=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard
#20 5.679 Shared library: libxvidcore.so.4.4
#20 5.679 
#20 5.679 Include Directory: /src/xvidcore-install/include
#20 5.680 
#20 5.680 Static library: libxvidcore.a
#20 5.680 Library Directory: /src/xvidcore-install/lib
#20 5.680   C: ./xvid.c
#20 5.681 
#20 5.681 
#20 5.682   C: bitstream/bitstream.c
#20 5.682   C: bitstream/cbp.c
#20 5.682   C: bitstream/mbcoding.c
#20 5.684   C: dct/fdct.c
#20 5.684   C: dct/idct.c
#20 5.868   C: dct/simple_idct.c
#20 5.886   C: image/colorspace.c
#20 5.908   C: image/image.c
#20 5.910   C: image/interpolate8x8.c
#20 6.041   C: image/font.c
#20 6.175   C: image/postprocessing.c
#20 7.236   C: image/qpel.c
#20 7.342   C: image/reduced.c
#20 7.489   C: motion/estimation_bvop.c
#20 7.618   C: motion/estimation_common.c
#20 7.727   C: motion/estimation_gmc.c
#20 7.882   C: motion/estimation_pvop.c
#20 7.949   C: motion/estimation_rd_based.c
#20 8.241   C: motion/estimation_rd_based_bvop.c
#20 8.674   C: motion/gmc.c
#20 8.747 ../../src/motion/gmc.c:283:14: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
#20 8.750         if (vo>=(-16<<4) && vo<=H) Offset = (vo>>4)*srcstride;
#20 8.750                  ~~~^
#20 8.751 ../../src/motion/gmc.c:289:14: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
#20 8.754         if (uo>=(-16<<4) && uo<=W) Offset += (uo>>4);
#20 8.755                  ~~~^
#20 8.757 ../../src/motion/gmc.c:335:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
#20 8.760         if (vo>=(-8<<4) && vo<=H) Offset = (vo>>4)*srcstride;
#20 8.761                  ~~^
#20 8.762 ../../src/motion/gmc.c:341:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
#20 8.765         if (uo>=(-8<<4) && uo<=W) Offset += (uo>>4);
#20 8.765                  ~~^
#20 8.776   C: motion/motion_comp.c
#20 8.809   C: motion/vop_type_decision.c
#20 8.914   C: motion/sad.c
#20 9.113   C: prediction/mbprediction.c
#20 9.129   C: plugins/plugin_single.c
#20 9.131   C: plugins/plugin_2pass1.c
#20 9.152 4 warnings generated.
#20 9.155   C: plugins/plugin_2pass2.c
#20 9.157   C: plugins/plugin_lumimasking.c
#20 9.258   C: plugins/plugin_dump.c
#20 9.281   C: plugins/plugin_psnr.c
#20 9.324   C: plugins/plugin_ssim.c
#20 9.348   C: plugins/plugin_psnrhvsm.c
#20 9.369   C: quant/quant_h263.c
#20 9.546   C: quant/quant_matrix.c
#20 9.582   C: quant/quant_mpeg.c
#20 9.606   C: utils/emms.c
#20 9.654   C: utils/mbtransquant.c
#20 9.655   C: utils/mem_align.c
#20 9.673   C: utils/mem_transfer.c
#20 9.713   C: utils/timer.c
#20 11.01   L: libxvidcore.a
#20 11.01   L: libxvidcore.so.4.4
#20 11.61 
#20 11.61 ---------------------------------------------------------------
#20 11.61  Xvid has been successfully built.
#20 11.61 
#20 11.61  * Binaries are currently located in the '=build' directory
#20 11.61  * To install them on your system, you can run '# make install'
#20 11.61    as root.
#20 11.61 ---------------------------------------------------------------
#20 11.61 
#20 11.61 + make install
#20 11.62   D: /src/xvidcore-install/include
#20 11.62   I: /src/xvidcore-install/include/xvid.h
#20 11.62   D: /src/xvidcore-install/lib
#20 11.63   I: /src/xvidcore-install/lib/libxvidcore.a
#20 11.63   I: /src/xvidcore-install/lib/libxvidcore.so.4.4
#20 11.64 + find /src/xvidcore-install/
#20 11.66 /src/xvidcore-install/
#20 11.66 /src/xvidcore-install/include
#20 11.66 /src/xvidcore-install/include/xvid.h
#20 11.66 /src/xvidcore-install/lib
#20 11.66 /src/xvidcore-install/lib/libxvidcore.so.4.4
#20 11.66 /src/xvidcore-install/lib/libxvidcore.so.4
#20 11.66 /src/xvidcore-install/lib/libxvidcore.so
#20 11.66 /src/xvidcore-install/lib/libxvidcore.a
#20 11.66 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -I /src/xvidcore-install/include /src/oss-fuzz-fuzzers/xvid/fuzzer.cpp /src/xvidcore-install/lib/libxvidcore.a /libAFL.a -o /out/fuzzer-decoder
#20 12.01 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 12.6s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:078e7755d8748d1814988e3aa2c8aabd3a483e5d7718149b16446a7e371fdeca done
#21 naming to gcr.io/fuzzbench/builders/afl/xvid_xvid done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/xvid_xvid:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:0ad4db466d49559ce865c03320d426ceb9f50c255aaacef6e0e757551a7340a6
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:5259ad4c5f230807d76d2eb1fd78b56a468a3f2d23ac6da4ed86d84cfdb45066
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/xvid_xvid-intermediate
#5 sha256:f26997f9ddae3f610cf873f332e9bac0234d32db0af9cb40987a503adcf2ca45
#5 ERROR: gcr.io/fuzzbench/runners/afl/xvid_xvid-intermediate:latest: not found

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:0141915220e4784464cbf5b4df45ebe0ca86417eb51733f6e5b060f061ce7857
#6 writing image sha256:0141915220e4784464cbf5b4df45ebe0ca86417eb51733f6e5b060f061ce7857 done
#6 naming to gcr.io/fuzzbench/runners/afl/xvid_xvid-intermediate done
#6 DONE 0.2s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/xvid_xvid-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:251a4de4b2076c42453db3fc6edea85a40367110910256a80a80f019ce19c17b
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:c1787bf3a6213eb3ad2aaf07e4824efb4e5ca9e8b8808360c0420d35774a8c15
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/xvid_xvid-intermediate:latest
#3 sha256:2e2303d20a9a9ba88f77200648e33fe14eda96b43528d8ff2856306d5b92b0f7
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/xvid_xvid:latest
#4 sha256:90d67cc10d86929152fdcd14d77e71432094b894a5719033e1c3083a5f6dfa4f
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:519b1c1ea4eedd52df27fab689ca27454d4cd468f1fedf4b8d43f4057f0f0a2f
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/xvid_xvid-intermediate
#6 sha256:0bce403c994f74ef6a68839c7197da16661696dbc37122a55635a9ec769f6af4
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/xvid_xvid
#10 sha256:4cbc141d0f4e53160cc5e299ac1468948033e0ffc88e2e3b8e674a67b8f15fd8
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/xvid_xvid
#5 sha256:8e3fd23af450e070d6e4269b39f787a124848975d4117e8c5a7601a76f37c7da
#5 ERROR: gcr.io/fuzzbench/runners/afl/xvid_xvid:latest: not found

#12 [internal] load build context
#12 sha256:519b1c1ea4eedd52df27fab689ca27454d4cd468f1fedf4b8d43f4057f0f0a2f
#12 transferring context: 18.36MB 0.6s done
#12 DONE 0.7s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/xvid_xvid
#10 sha256:4cbc141d0f4e53160cc5e299ac1468948033e0ffc88e2e3b8e674a67b8f15fd8
#10 DONE 0.8s

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:a7215a6677ecf2a205deeebca2d3d675f2adc3c0893fa745d46fcbd9b0fcf5f8
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:ef7ce8db16b713346d765381af24547edfaece44c537e666e738347c18fd534e
#9 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:f197ae6f94328e6575b22f4056220275516a9d3d8486e934abaac16084df4e96
#7 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:1ed710d299fe9a39e500b481701f0bf1aea61537c2b8efdc6f4daddf8babda0c
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:df02b07058d1c905a7d1aff19da584f01492399a6cc4005be4bd60b1b1efa7c1
#13 DONE 1.1s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:399d8f9010090a9e6901f15a9dac8fd6a7e98076bce6b4d358aadf0776763f93
#14 DONE 0.3s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:a697206359ddd6b1adfe16afe43ff25060835d8aacb2dbb11cdd71c82f8dbe0b
#15 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:926628f1c06345da5ce2e92edfffce3c318e702a469edd262125f8e9afcb5c51
#16 DONE 0.8s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:702b4a907780b228b2d7ec5fdb23f5cd12c5c0381f79b0216c0bfdec0c82a6d7
#17 DONE 0.2s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:6db411990ac8a4de4c5ec90dd0d63c6cf3c5acb0c5558699ee259a7c41309dfe
#18 DONE 0.2s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:2416397be8894defb6e55895d693807c6b08919065a18be7338186135108e1c0
#19 DONE 0.2s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:d30a7ee9e8257120d03c118d8fd028d51f3aada117446a555645fa06fdf956bb
#20 DONE 0.7s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:f8f52893c9d54cd497d05c400dab9f97ab9277cfdca51cb1712a6826418e6ef2
#21 writing image sha256:f8f52893c9d54cd497d05c400dab9f97ab9277cfdca51cb1712a6826418e6ef2 done
#21 naming to gcr.io/fuzzbench/runners/afl/xvid_xvid done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/xvid_xvid:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7fa221857f70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:4c6f09490f19a0ee6116137d35739840e3be883577b0903a7ce4ad492c80d0bb
#2 transferring context: 2B done
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:a0a85e6c2c9ef24a6eb46a0a501323cc39f1489891819cf3a72d0dd3d566f964
#1 transferring dockerfile: 32B done
#1 DONE 1.0s

#2 [internal] load .dockerignore
#2 sha256:4c6f09490f19a0ee6116137d35739840e3be883577b0903a7ce4ad492c80d0bb
#2 DONE 1.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.6s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/xvid_xvid
#4 sha256:253b6365417e00ae6d22ac75f3dc0a545c777eeade36b789438db7b5b57228ab
#4 DONE 0.0s

#10 [internal] load build context
#10 sha256:8b99a0468b4c6a35bcddb65f4c85f1cb9036a2ff87552397f1d2c0be86e49dc9
#10 transferring context: 30B done
#10 DONE 0.4s

#6 [2/6] RUN apt-get update && apt-get install -y make autoconf automake libtool subversion
#6 sha256:ce45d6ee0fa62f88e08f66b102d0a6bd5a6a4853ec88c0c8dcf7debe0ff583ab
#6 CACHED

#7 [3/6] RUN svn checkout http://svn.xvid.org/trunk --username anonymous --password "" --non-interactive --no-auth-cache
#7 sha256:a10cfa92959c8b294c375ee7c2da2a8e23f1e6b4b0235d7a965981896a7cfaf3
#7 CACHED

#8 [4/6] RUN git clone --depth 1 https://github.com/guidovranken/fuzzing-headers.git
#8 sha256:0e438359e4a9fd0b302477bb7c524c70f1aae5e314ad8e79c763884945a8cdf6
#8 CACHED

#9 [5/6] RUN git clone --depth 1 https://github.com/guidovranken/oss-fuzz-fuzzers.git
#9 sha256:dd8ba69974936386d229eceffe81ca2d0254f101946672cc5e8c5d548bcbeaa4
#9 CACHED

#11 [6/6] COPY build.sh /src/
#11 sha256:dc7b0978286dbbeda72290e7e65f157b4a1864d9eb23efade9f6c63d631a8104
#11 CACHED

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:d7a25a96ecebeae88bb8e61fd52c8fa0afcd8e9b3ffc498d5d40eef5ab477879 done
#12 naming to gcr.io/fuzzbench/builders/benchmark/xvid_xvid done
#12 DONE 0.3s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:24c6042738628f5f2942c6f86ba040affbfe131f309cf71f4fb109a7a00d5c25
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:779f05bfff9387cbfa71a685c617f610be6c7e73e780cecdeeeb8176a5f1f259
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/xvid_xvid:latest
#3 sha256:31378b3843b7a2a0ebd012c1bebb48a0c322e6f1c36c3e58524fe9188099f255
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/xvid_xvid-intermediate
#4 sha256:9df58655721a6b04ac13980f1fc473abe5e0c026cc383c9537d3ce5eac760fc0
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/xvid_xvid
#5 sha256:a2a1df15b689236a59fcadc8c7e9aa3ed6c798d4f6e052c0cf18b250ee287342
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:b04dfd82dcd434a1ed0a7132864ea3be78522f811ebe728dfd23fa84326b0a4b
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:53e219ea75c034208bc5957a486815c70dfa35fb8c1e8be75ec6df7de495a26d
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:d570bfb427ca0b0f50789a30f073e45822e313f38ffd0eb006a9ddbeb7e4761b
#8 writing image sha256:d570bfb427ca0b0f50789a30f073e45822e313f38ffd0eb006a9ddbeb7e4761b done
#8 naming to gcr.io/fuzzbench/builders/afl/xvid_xvid-intermediate done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:e91461c4cfd1ca2ce605ab534e439f5b1e4b7d62299a4462ca32e497269bb90c
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:38221a2c03b3c192d3a677d834a2f1d34f112189a5f7a832c1b048e455c51905
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:e95e3c43be3d8212e510e0d5132ce88f128af99215bf292260ce2257c24f3c57
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:c9cfd0eecabe2346002f683fd290c9e85b1c7b5e59542f186416307357a0ebec
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:1a70018f801c3c4fa3f366c28554173123b97a9a5f672cc5a78c7b07cb4531a3
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:c41db72fd044be1ad7f37a4b2982cfc11e4aeea0ef91e730bea465695eaecd34
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:4aa5edb4311db1bba668bab277f825146cb06a7779a937c8b594262a7949a722
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:f0a6e2c90b9429076cded82fb18e115d226dbe158d519383e4bc5f9803ae5b00 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:877505724fb8a6dc7eb82d00d820f49e173875588007eec42602cf3271eb8279
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:de04d2ad380316d6b25de5a573c50bd8462dd8aa7668c0cca8ade43963228959
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/xvid_xvid-intermediate:latest
#3 sha256:b4d70ee72ccf41d7eb2b0b83527cd2c554562f00f04880069f1a2ab955d2d35f
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/xvid_xvid-intermediate
#6 sha256:9248975954f22ba8ebe058eee9cfc3e0a05c87962f977df2608558b00aa5d218
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/xvid_xvid
#5 sha256:5369681c0b846a39a897641da1e2042f439f0978bd9208fa7770f7c444bcd3bf
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:35fbbb9c8985591e0235e89c0a9f3cdb0f4fab8809f41ad41c8f9a87a362e3eb
#12 transferring context: 669.85kB 0.1s done
#12 DONE 0.2s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:0fc37d50a56543a0ea156c11867bd8c9300037839becc50d1eb90a2dd2822446
#9 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:dccbea85f93359a706e2506649fc09a5cc8a979d368ccda31586c9505b9585f6
#17 CACHED

#15 [stage-1  8/13] COPY benchmarks/xvid_xvid/benchmark.yaml /
#15 sha256:5059802c9309ce7b45ed5cc6f5e03f6558c960bb494ac7b11cfa5b09822002b6
#15 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:6ca886aa84b99211e3410a663b0bdc2c9edc4f1cd035f7b71a62cac4e04802af
#16 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:82d0f703eafec0efbb49e9a1ee4de9406ed978e6a2960daf68188a8aa2343712
#13 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:c91cdb3939fc2967d485dfaa6ac89b29dfaa209686371249aaf1dd8c21554dc7
#10 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:f0f041d059b380e615599f2d4907e0289ca22073a378c9398f1f49d2306776b1
#8 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:9a370776e4d9eea73a45ce94308f5e5cc4ab37235de7b5dd6d1ce43c1c594d61
#18 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:00458eaf75ff4eed64b801eb28ded16f06bafefa49e7ce5e58f476b2ed9acec8
#19 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:827948fe09bb8db242205710f4b0db8be6e0756caaf62244892f02eec09f261c
#11 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:8ce2c344ef907c64d3ce052f2996d8413f211ad12b6ac48f9d27f3fa6974590f
#14 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:fedc205924c1a4fe332995c6db5fbee4e6e83d33ab84b4a1b606ac0580a6eaef
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:078e7755d8748d1814988e3aa2c8aabd3a483e5d7718149b16446a7e371fdeca 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/xvid_xvid done
#21 DONE 0.6s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:0ad0a7a5ccdf01ba2ec6a0f4c9b969b2bb350778a53d7e41f64f7953748f627e
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:bc896902261763e01332e514e1cde5caf9a3c166a218812c390068da0c8f2690
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/xvid_xvid-intermediate
#5 sha256:f26997f9ddae3f610cf873f332e9bac0234d32db0af9cb40987a503adcf2ca45
#5 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:0141915220e4784464cbf5b4df45ebe0ca86417eb51733f6e5b060f061ce7857 done
#6 naming to gcr.io/fuzzbench/runners/afl/xvid_xvid-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:7d95e5f2da393240345463d4e2377dafe6ab113a30f91cffc4736af27dd34186
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:50fbb2f3837683505e419958f3cce7e17ff682905d67f3a9e0d48f4e99fb906d
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/xvid_xvid-intermediate:latest
#3 sha256:2e2303d20a9a9ba88f77200648e33fe14eda96b43528d8ff2856306d5b92b0f7
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/xvid_xvid:latest
#4 sha256:90d67cc10d86929152fdcd14d77e71432094b894a5719033e1c3083a5f6dfa4f
#4 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/xvid_xvid-intermediate
#6 sha256:0bce403c994f74ef6a68839c7197da16661696dbc37122a55635a9ec769f6af4
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/xvid_xvid
#5 sha256:8e3fd23af450e070d6e4269b39f787a124848975d4117e8c5a7601a76f37c7da
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/xvid_xvid
#10 sha256:4cbc141d0f4e53160cc5e299ac1468948033e0ffc88e2e3b8e674a67b8f15fd8
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:32e301a8986f2ea6a0523ed4b8702682674d2d97ec3d43373babff673bf90ed2
#12 transferring context: 18.36MB 0.6s done
#12 DONE 1.4s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:f197ae6f94328e6575b22f4056220275516a9d3d8486e934abaac16084df4e96
#7 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:ef7ce8db16b713346d765381af24547edfaece44c537e666e738347c18fd534e
#9 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:1e23f3b8267087a2cce72388a697a0a2f77c9bbb87bcc1902c4226bc36182735
#13 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:c42996f576980603f04e9a6cca932c9952a650803fa6d05bafd9f36e9bde1a11
#16 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:7234b34137aa336c2cc6c93eb394326c9f93d0514b51c5060fa8027cc635e6a4
#18 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:e0f45051b0362748b4d0d605dfa0391ba65cf0c4c28efe8b1820641a515597a7
#15 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:1ed710d299fe9a39e500b481701f0bf1aea61537c2b8efdc6f4daddf8babda0c
#11 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:a7215a6677ecf2a205deeebca2d3d675f2adc3c0893fa745d46fcbd9b0fcf5f8
#8 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:8c84b3de6e132d1959d8553c4ccd4993d22566110a8dcc9257be5eccada28302
#14 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:7f9b0032db54995c2447760a27de9790ccd3cc06449a6c644480a352eba27112
#17 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:a087cce5d962d51c2a75922f897e26aca00450a0017ae08e813b76f3fedfcbfe
#19 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:a55d080a54039cd8d05311a5ddecdc8d4ca3cec99dd5059684bddc19674e16ca
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:f8f52893c9d54cd497d05c400dab9f97ab9277cfdca51cb1712a6826418e6ef2 0.1s done
#21 naming to gcr.io/fuzzbench/runners/afl/xvid_xvid done
#21 DONE 3.5s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f61eb35ef70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
