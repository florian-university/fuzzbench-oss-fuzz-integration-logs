WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: muparser_set_eval_fuzzer.
INFO:root:Please run "make test-run-afl-muparser_set_eval_fuzzer" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:65bfc7220153cb39e7b87b1bcb0b66119c37eb1f5f7371afb02acef8e86db3ca
#1 transferring dockerfile: 32B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:1a831c00044583daedb072ef7cdec2ccacb62e5b258079b07d0de484b8ce498c
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#10 [internal] load build context
#10 sha256:187368b3930e06af5977debf5c74392faa90800815b3a2cd0aa7f90b77d51063
#10 DONE 0.0s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:77750d283f2957d1beeddda2e8f6c5604ab5f969a3616e9cac40f4261ca04c0a
#5 sha256:7999addb2cd81975cd6421c6aaef5643a901995c540a40e8df741ab4c30f6043
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/muparser_set_eval_fuzzer
#4 sha256:7d66e9489fb00193b0acc39d2a4921cc3f85b9aefbbdab77d0c1f2a399a31389
#4 DONE 1.0s

#10 [internal] load build context
#10 sha256:187368b3930e06af5977debf5c74392faa90800815b3a2cd0aa7f90b77d51063
#10 transferring context: 1.10kB done
#10 DONE 0.1s

#8 [4/6] RUN git clone --depth 1 https://github.com/beltoforion/muparser.git muparser
#8 sha256:ab81dfd8bb841b1fcdbcfb8d94f2dd5fc9fdb64de5a47f510e41ea44ed8a4efb
#8 CACHED

#6 [2/6] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:52e32c454805a8c94e441551d01b16d090304920e0b4ce6b465dec91bafa72a3
#6 CACHED

#7 [3/6] RUN apt-get install -y build-essential cmake pkg-config
#7 sha256:e7777c80b91ea56a93de27c292a1fc20f119de587e7f0633e877b47ff6f02966
#7 CACHED

#9 [5/6] WORKDIR muparser
#9 sha256:9b4466bde22b1ee7a26c48c42969c154d1bca17b9b3c9cafefbba778e7c09797
#9 CACHED

#11 [6/6] COPY build.sh set_eval_fuzzer.cc /src/
#11 sha256:672a7b986f4947d0d31ce3210e3d9c11f7edd020573346a29abd7d3bec87e5d0
#11 DONE 0.2s

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:97121da432c364286571b84fea5fd6740be3ad94a7c905fae63e128d6797bf07
#12 writing image sha256:97121da432c364286571b84fea5fd6740be3ad94a7c905fae63e128d6797bf07 done
#12 naming to gcr.io/fuzzbench/builders/benchmark/muparser_set_eval_fuzzer done
#12 DONE 0.1s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:5a5cb15cbd53779579605f3d9c3e0849f1abd2b2b4d4047a07c1a2df85ab35fa
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:52522549ee4c3db6a34c64e01f49239be7a265e83443437bd322c8b1ed48947c
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/muparser_set_eval_fuzzer:latest
#3 sha256:a382935156058643415701c76a892e21e87394a63cf8f381a4884c57b3a39f09
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/muparser_set_eval_fuzzer
#5 sha256:1c580541e231bb8ec91f24870f73c3d5f65cf9bd5b571a52f579d33f0cf00faf
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer-intermediate
#4 sha256:df10f47354a0900a817ef83f31654bac582b31fb148747dbb0b749111469bfad
#4 DONE 0.9s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/muparser_set_eval_fuzzer
#5 sha256:1c580541e231bb8ec91f24870f73c3d5f65cf9bd5b571a52f579d33f0cf00faf
#5 DONE 0.2s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:f1bc79bfc014a3ae113a3f0b020d0ca487121d284806b4741be8008e284a148e
#6 0.325 Cloning into '/afl'...
#6 1.187 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.187 
#6 1.187 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.187 changes and commit them, and you can discard any commits you make in this
#6 1.187 state without impacting any branches by switching back to a branch.
#6 1.187 
#6 1.187 If you want to create a new branch to retain commits you create, you may
#6 1.187 do so (now or later) by using -c with the switch command. Example:
#6 1.187 
#6 1.187   git switch -c <new-branch-name>
#6 1.187 
#6 1.187 Or undo this operation with:
#6 1.187 
#6 1.187   git switch -
#6 1.187 
#6 1.187 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.187 
#6 1.187 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.202 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.202 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.376 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.379 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.772 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.087 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.504 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.652 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.048 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.287 ln -sf afl-as as
#6 5.289 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.292 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.293 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 5.4s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:f982fcfde46b0fb2c890195060c9bd6c4c23789b58742fdf6b61f0c60e4648f3
#7 0.620 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.620 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.637 Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.660 Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 0.780 Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 1.469 Reading package lists...
#7 3.160 Reading package lists...
#7 4.577 Building dependency tree...
#7 4.786 Reading state information...
#7 5.030 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.030 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 5.043 --2022-02-10 20:08:52--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.061 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...
#7 5.063 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.
#7 5.090 HTTP request sent, awaiting response... 200 OK
#7 5.148 Length: 9177 (9.0K) [text/plain]
#7 5.148 Saving to: '/afl/afl_driver.cpp'
#7 5.148 
#7 5.148      0K ........                                              100% 5.42M=0.002s
#7 5.150 
#7 5.150 2022-02-10 20:08:52 (5.42 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.150 
#7 6.862 ar: creating /libAFL.a
#7 DONE 7.0s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:0f04fed55a8d6519690eec589f35db41b645deacf4608dd25645e6cbfc83d93c done
#8 naming to gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:3e3858023616849e30e10c8c109e05645813186cca88631c51e55701cd5c38f8
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:5b1dde81a4a5ead72714d83ae04d88720874182be051d8453b6aa0f00d3985a4
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:10c52063688e66f36cb0143d843e12bb075dc7cdcffd9566b223d027dae765db
#8 transferring context: 559B 0.1s done
#8 DONE 0.2s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:6832c2422b90dfaf07b3c9e6b1fae0bee48bc19092474ff43678c620185f9493
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:2f67717f20562b81e3d146597912d3c7caf6ff1a36d633e42291f6b1f9e4425e
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:73282deea8912f0813938618b1636e202e3e9b3860407b589c0ea6d7a791b9a5
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:6b1f0a7df86eed32697b6d1720163237c2558682822ecd725b1d8ad37aead986
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:db37108b741762d6fc963c78f4ea99d80edbbe38f2ea9e4cf93847b349417cfa
#13 writing image sha256:db37108b741762d6fc963c78f4ea99d80edbbe38f2ea9e4cf93847b349417cfa done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:23f64499eeaf4c90844e046edeac52688ae1e56c651f46a573fe8d1f586e5d29
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:99727c78a6a84ec6a4a875ba73d988406c1a954660d79356b6fbec75ddc8fc80
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer-intermediate:latest
#3 sha256:dd304270182a663ad0691d70ef7af1c96bf959fb53eb3d83f0ed228ce74702f2
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:c91adeec6b16ab43e8a814f5931372e2dcebb8a095c486204a4a3a009b339894
#12 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer
#5 sha256:0d38776e5bc786fe44eeac6faed728f0b033df56d3aa59b884734d32295aeeb4
#5 DONE 0.9s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:c91adeec6b16ab43e8a814f5931372e2dcebb8a095c486204a4a3a009b339894
#12 transferring context: 669.89kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer-intermediate
#6 sha256:2771b59573cd5624eb778fcbbf8a76201a6d8ee9baf4ae744598bd2b25c07f19
#6 DONE 0.2s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:cb8eb7cd06d2accd49e9743135b55eec1815bed6defe2b1e5b3eab9271f39581
#8 DONE 0.8s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:ab929d20da454c95df100d0b657288ba62d5699768de75d08ddcc6d171d9ce17
#9 DONE 13.3s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:06e0f0f947499a9574d7016f61e9c7ba7b64a98ed9e7f54745af8eb0618686a2
#10 DONE 0.3s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:8b9f52b01f067045d6482f1d720ab80d20ad7b64c80dc24a553896a90111b746
#11 DONE 13.7s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:181731251c0e1a8cf505df68a384c1c8cd0cb1e738ffd5ac9c00b46b5def60b5
#13 DONE 0.3s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:59b5af21e54d6f53f1c1c4253964434cf30b2e63f84221fdadd9b1faa4777e8e
#14 DONE 2.5s

#15 [stage-1  8/13] COPY benchmarks/muparser_set_eval_fuzzer/benchmark.yaml /
#15 sha256:e4988a6ef8e5e31ba916562f1fc653d498b2d5b0bb624cc77eba016cd634f95d
#15 DONE 3.8s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:5854221b265e1acd40912832014b1ae212984c99fc65539ba7dee137cf158a6b
#16 DONE 0.7s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:8ca839342a6be45dcb01848d3b5d88a4b2fb27eb9750787973ed2825cc120a60
#17 DONE 0.3s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:b14df520cd11d4596c7bd669b4f403f037a9cd1528be78cfef43de95ac4511e8
#18 0.476 Checking out commit 0f50310c
#18 2.398 From https://github.com/beltoforion/muparser
#18 2.398  * [new tag]         v2.2.5     -> v2.2.5
#18 2.398  * [new tag]         v2.2.6.1   -> v2.2.6.1
#18 2.398  * [new tag]         v2.3.2     -> v2.3.2
#18 2.405 error: pathspec '0f50310c' did not match any file(s) known to git
#18 2.410 error: pathspec '0f50310c' did not match any file(s) known to git
#18 2.417 error: pathspec '0f50310c' did not match any file(s) known to git
#18 2.474 Checkout unsuccessful.
#18 DONE 2.9s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:b9a30822c9c1bd8098c382736cad38283ce11470d74b9bd38327b35df9e51820
#19 DONE 2.0s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:e7a816066bcbfd0b120fb3afe9799e5d3273796df91938828d87bab15e2a65c6
#20 0.588 Run fuzzer_build to build the target
#20 0.717 FUZZ_TARGET = set_eval_fuzzer
#20 0.717 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.717 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.729 Building benchmark muparser_set_eval_fuzzer with fuzzer afl
#20 0.733 + cmake . -DBUILD_SHARED_LIBS=OFF
#20 1.022 -- The C compiler identification is Clang 14.0.0
#20 1.278 -- The CXX compiler identification is Clang 14.0.0
#20 1.301 -- Detecting C compiler ABI info
#20 1.477 -- Detecting C compiler ABI info - done
#20 1.526 -- Check for working C compiler: /usr/local/bin/clang - skipped
#20 1.526 -- Detecting C compile features
#20 1.527 -- Detecting C compile features - done
#20 1.536 -- Detecting CXX compiler ABI info
#20 1.735 -- Detecting CXX compiler ABI info - done
#20 1.808 -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
#20 1.809 -- Detecting CXX compile features
#20 1.810 -- Detecting CXX compile features - done
#20 2.166 CMake Error at /usr/local/share/cmake-3.21/Modules/FindPackageHandleStandardArgs.cmake:230 (message):
#20 2.166   Could NOT find OpenMP_C (missing: OpenMP_C_FLAGS OpenMP_C_LIB_NAMES)
#20 2.166 Call Stack (most recent call first):
#20 2.166   /usr/local/share/cmake-3.21/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE)
#20 2.166   /usr/local/share/cmake-3.21/Modules/FindOpenMP.cmake:544 (find_package_handle_standard_args)
#20 2.166   CMakeLists.txt:26 (find_package)
#20 2.166 
#20 2.166 
#20 2.167 -- Configuring incomplete, errors occurred!
#20 2.167 See also "/src/muparser/CMakeFiles/CMakeOutput.log".
#20 2.167 See also "/src/muparser/CMakeFiles/CMakeError.log".
#20 2.171 Traceback (most recent call last):
#20 2.171   File "<string>", line 1, in <module>
#20 2.171   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 2.172     utils.build_benchmark()
#20 2.172   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 2.172     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 2.172   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 2.172     raise CalledProcessError(retcode, cmd)
#20 2.172 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2698549: .afl-muparser_set_eval_fuzzer-builder] Error 1
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:07c081dbb3fc59480372827b8c137b114d5bd27e3cf760f2f43fc92e3729f91b
#2 transferring context: 2B done
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:8be447ba9724292cca24a5a04a15fe32c1a39e400e87fe1e0188d7889bd328ad
#1 transferring dockerfile: 32B done
#1 DONE 0.2s

#2 [internal] load .dockerignore
#2 sha256:07c081dbb3fc59480372827b8c137b114d5bd27e3cf760f2f43fc92e3729f91b
#2 DONE 0.3s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:77750d283f2957d1beeddda2e8f6c5604ab5f969a3616e9cac40f4261ca04c0a
#5 sha256:7999addb2cd81975cd6421c6aaef5643a901995c540a40e8df741ab4c30f6043
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/muparser_set_eval_fuzzer
#4 sha256:7d66e9489fb00193b0acc39d2a4921cc3f85b9aefbbdab77d0c1f2a399a31389
#4 DONE 0.0s

#10 [internal] load build context
#10 sha256:a48ca8ea11829820b7d26ffd787816bd5c2483181ee2a18f516ebc51d9d10ec5
#10 transferring context: 68B done
#10 DONE 0.1s

#7 [3/6] RUN apt-get install -y build-essential cmake pkg-config
#7 sha256:e7777c80b91ea56a93de27c292a1fc20f119de587e7f0633e877b47ff6f02966
#7 CACHED

#6 [2/6] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:52e32c454805a8c94e441551d01b16d090304920e0b4ce6b465dec91bafa72a3
#6 CACHED

#8 [4/6] RUN git clone --depth 1 https://github.com/beltoforion/muparser.git muparser
#8 sha256:ab81dfd8bb841b1fcdbcfb8d94f2dd5fc9fdb64de5a47f510e41ea44ed8a4efb
#8 CACHED

#9 [5/6] WORKDIR muparser
#9 sha256:9b4466bde22b1ee7a26c48c42969c154d1bca17b9b3c9cafefbba778e7c09797
#9 CACHED

#11 [6/6] COPY build.sh set_eval_fuzzer.cc /src/
#11 sha256:25d75ca3cef73ddd65ae4eadb65d44856c5c933c70a3d9aee5235fdb276dc56e
#11 CACHED

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:97121da432c364286571b84fea5fd6740be3ad94a7c905fae63e128d6797bf07 0.0s done
#12 naming to gcr.io/fuzzbench/builders/benchmark/muparser_set_eval_fuzzer done
#12 DONE 0.3s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:e2d1f9d6f5c0c9c2be1ef62fa3ab8567291ad0bbe0d8ce6cf5916b827ce842ec
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:119bad82995ea8b129f8d211eb18f3c069b0ff59cdaf0ff2a3424e5aa9946dc1
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/muparser_set_eval_fuzzer:latest
#3 sha256:a382935156058643415701c76a892e21e87394a63cf8f381a4884c57b3a39f09
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/muparser_set_eval_fuzzer
#5 sha256:1c580541e231bb8ec91f24870f73c3d5f65cf9bd5b571a52f579d33f0cf00faf
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer-intermediate
#4 sha256:df10f47354a0900a817ef83f31654bac582b31fb148747dbb0b749111469bfad
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:f1bc79bfc014a3ae113a3f0b020d0ca487121d284806b4741be8008e284a148e
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:f982fcfde46b0fb2c890195060c9bd6c4c23789b58742fdf6b61f0c60e4648f3
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:0f04fed55a8d6519690eec589f35db41b645deacf4608dd25645e6cbfc83d93c done
#8 naming to gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:5fa0d7c12eafa5ebaf56b68e6a4c5ab5216aaabd507535b5207bf1bf5f35e462
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.7s

#2 [internal] load .dockerignore
#2 sha256:43bd009575c226cef05690932207c1c9b332c8116bc0512066026055bde607df
#2 transferring context: 34B done
#2 DONE 0.7s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:cc9f6fe77e89d75091e4c8934bb77d145029061388724b94fda0a6ea2c3138f7
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:699e30ec2f581c27814c13b5636e171bb476a7e9e1018ddd536ac53cc0c4f98f
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:dedd067e2ca6d491c59bf3686c97adc52b59e5e6022c9f4115cef7e1e8d8d388
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:51ea73fd55d0c39012b8de58468b6a66295b77afb08492dae1aab54781b9f5dc
#9 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:20474d856b66cd0d610b90a30e21c2a1de6fd54e42bbd1f4191c8da908ca889e
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:db37108b741762d6fc963c78f4ea99d80edbbe38f2ea9e4cf93847b349417cfa
#13 writing image sha256:db37108b741762d6fc963c78f4ea99d80edbbe38f2ea9e4cf93847b349417cfa 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:e375758cf3eda0a38fdc1b61518883af74cd13d3fc768c888c670a966ae83814
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:f6b54746aff04bf3bf35c12be304363c48ffa2841dbf55703cd0096c33640118
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer-intermediate:latest
#3 sha256:dd304270182a663ad0691d70ef7af1c96bf959fb53eb3d83f0ed228ce74702f2
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:29c4afa3b84a487313ee2176dd932ba7334409af9951fc30093640f39c6e27ba
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer-intermediate
#6 sha256:2771b59573cd5624eb778fcbbf8a76201a6d8ee9baf4ae744598bd2b25c07f19
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer
#5 sha256:0d38776e5bc786fe44eeac6faed728f0b033df56d3aa59b884734d32295aeeb4
#5 DONE 0.9s

#12 [internal] load build context
#12 sha256:29c4afa3b84a487313ee2176dd932ba7334409af9951fc30093640f39c6e27ba
#12 transferring context: 669.89kB 0.1s done
#12 DONE 0.3s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:483b947edebfb7025218076719365ee71bcff3bd5c368c3ee991b59d692afb0f
#18 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:8b9f52b01f067045d6482f1d720ab80d20ad7b64c80dc24a553896a90111b746
#11 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:ab929d20da454c95df100d0b657288ba62d5699768de75d08ddcc6d171d9ce17
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:06e0f0f947499a9574d7016f61e9c7ba7b64a98ed9e7f54745af8eb0618686a2
#10 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:5ab95c775ed392a72d59a43a0408e3bd32be46984516537eb9b9cf2b8c35022e
#13 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:cb8eb7cd06d2accd49e9743135b55eec1815bed6defe2b1e5b3eab9271f39581
#8 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:0a50f90a8c9fdc5dd60e507a2bc6e36b762d4d7d30b97b7452321d846d57fe5a
#14 CACHED

#15 [stage-1  8/13] COPY benchmarks/muparser_set_eval_fuzzer/benchmark.yaml /
#15 sha256:3aa3835d681c1d51d39008eb92ce61e2e121d4a76f8cad7611560e2113c53895
#15 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:f34ab6e8a56755123fbd19af701b71e3d6cd35cb8579fb602ca692950d16ab54
#16 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:e5b7c17114a3d68b8f05601d89e2b09f5c465075d3f76058dd71595afbfdb37c
#17 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:56d815c823cf846451aefdef2a028c0189d3a3214aff13f859f649cb1eac32e0
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:021fafc77623cc0a52881ccf5b2298358d76115f645254b773430ff351a8cbaa
#20 0.955 Run fuzzer_build to build the target
#20 1.067 FUZZ_TARGET = set_eval_fuzzer
#20 1.067 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 1.067 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 1.072 Building benchmark muparser_set_eval_fuzzer with fuzzer afl
#20 1.074 + cmake . -DBUILD_SHARED_LIBS=OFF
#20 1.281 -- The C compiler identification is Clang 14.0.0
#20 1.528 -- The CXX compiler identification is Clang 14.0.0
#20 1.539 -- Detecting C compiler ABI info
#20 1.690 -- Detecting C compiler ABI info - done
#20 1.740 -- Check for working C compiler: /usr/local/bin/clang - skipped
#20 1.741 -- Detecting C compile features
#20 1.742 -- Detecting C compile features - done
#20 1.750 -- Detecting CXX compiler ABI info
#20 1.944 -- Detecting CXX compiler ABI info - done
#20 2.011 -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
#20 2.011 -- Detecting CXX compile features
#20 2.012 -- Detecting CXX compile features - done
#20 2.356 CMake Error at /usr/local/share/cmake-3.21/Modules/FindPackageHandleStandardArgs.cmake:230 (message):
#20 2.356   Could NOT find OpenMP_C (missing: OpenMP_C_FLAGS OpenMP_C_LIB_NAMES)
#20 2.356 Call Stack (most recent call first):
#20 2.356   /usr/local/share/cmake-3.21/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE)
#20 2.356   /usr/local/share/cmake-3.21/Modules/FindOpenMP.cmake:544 (find_package_handle_standard_args)
#20 2.356   CMakeLists.txt:26 (find_package)
#20 2.356 
#20 2.356 
#20 2.357 -- Configuring incomplete, errors occurred!
#20 2.357 See also "/src/muparser/CMakeFiles/CMakeOutput.log".
#20 2.357 See also "/src/muparser/CMakeFiles/CMakeError.log".
#20 2.363 Traceback (most recent call last):
#20 2.363   File "<string>", line 1, in <module>
#20 2.363   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 2.363     utils.build_benchmark()
#20 2.363   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 2.364     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 2.364   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 2.364     raise CalledProcessError(retcode, cmd)
#20 2.364 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2698549: .afl-muparser_set_eval_fuzzer-builder] Error 1
