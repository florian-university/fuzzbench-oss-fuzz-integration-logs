WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: lzo_lzo_decompress_target.
INFO:root:Please run "make test-run-afl-lzo_lzo_decompress_target" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:3da4989b6a1872b8d6b1198647e1c16beda01a78c456e5bef860e046cf87427c
#1 transferring dockerfile: 1.01kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:9d3ffa08dc25b007ce46ed0d79fc999d1c03744dea98d9c30f3ef6a67970fc44
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#8 [internal] load build context
#8 sha256:75df7e4a5da0ac4896bacf5403f07d954ef2ad4b20369eff21fa62028eb0d4dd
#8 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target
#4 sha256:36daac9b393d9d9f74e34b6fb93568b32ced6541d5477d44db637835a17878dd
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target:latest: not found

#8 [internal] load build context
#8 sha256:75df7e4a5da0ac4896bacf5403f07d954ef2ad4b20369eff21fa62028eb0d4dd
#8 transferring context: 17.53kB done
#8 DONE 0.0s

#9 [4/5] COPY *.c *.cc *.options build.sh /src/
#9 sha256:10b52c571bf22b01887db6afb43d1bb9c79520ead3251bd57a6f63dd443fabea
#9 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#6 sha256:4f84a0ce69ee663e95cd1295ccb0c22599aeb66f813cea39811e39dcebbc0ef1
#6 CACHED

#7 [3/5] RUN wget -O lzo.tar.gz     http://www.oberhumer.com/opensource/lzo/download/lzo-2.10.tar.gz
#7 sha256:a43c89546416d010bc5b9d695ab5a9bf5530c91e0201187b3c518bde8e76f8c3
#7 CACHED

#10 [5/5] COPY lzo_decompress_target_seeds /src/lzo_decompress_target_seeds
#10 sha256:667e3c281d44c9b0f7418b46238b81d5bcdfeae7a13823442674f4239ce9c9f1
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:fb4d47f1f90e6e862b1bb0d88fcefc48a4be9fca7490734b43dbf6c626a047c2 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:3e4c588cbf0cedc7efb1217b9fd5fce248b090bf12d1fc9c6962eb306a12ae51
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:4f2987e0cb3a146b50141e30d61a61e6b64fbc9b0d165cadb51f6cf6a0e152da
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target:latest
#3 sha256:80acfac66a8714350cbac83e1e50abe969e83e5472cd4693fcb9ddb15af4851b
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target
#5 sha256:243f7de1b7f1c36ab66e56a787aba7344bec81161eb0a6c7b58acade3918f981
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate
#4 sha256:790a0798dc94d5890fdb88db33339399be52c6d0de53e377f887d3a9eef793f7
#4 ERROR: gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate:latest: not found

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:b7058d8f1b6e2ee16a622571f7335adbc5b7b7028407daf9bbe224e3f7606466
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:772cdcb967a6f639e6fab1787d43399fbb7e05f8f268229e88b5a1e8bcc90aa6
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:ae80837e6283ebbed8e69f562cd39aeaf8a83c0cdb6bfeaa57914847c694c5f4 done
#8 naming to gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:5a3aafa193b6877eb7cb368762654ca4e83ab660318e92dbf047c9a7b79db312
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:5d74924dcec4a22377a2249aecf675ca273f8f8a9853a3a98c5b6c460a9035b1
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:077466d70fa559b006ddc42f28f7c752d8e58cefc7f5e6eb6772aadf9e16abe6
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:9b488e45c72ddf93818321b740036d779260b5f31f82bc5eecad65be6ad8da87
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:75f5afaaa55b353dcafd24b246cfd1a21230b334d09f79efb04ec019f085650a
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:7961714bfa74003b3dc1b17fa2f365eb9fe35b3421be023575313cbd493bf6e1
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:988f8130d311bbe87402cb0603034b9d17175d389266040d2b7687131387a79c
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:5dc85c66b74f60d1770fb4d8a2f0cf89b872162f5c4ad8fde1e9774f9306976f 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:26b7e9a37cb293f552f11294806a04f47990b49d1200cb9fb3e617cb0469ab3e
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:49985cffb3d6c968b09c9eb19340d57f5aeec0873662ac2f9b77717f87cbb975
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate:latest
#3 sha256:57277ad610ff2521191e75da22afb9064f4a9cf1f1cf01d5bb679fea15a74973
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:b231f2ec8b0a870834834a2a5d6a3f10bbc6da410026f2191bdcf076aa93edcc
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate
#6 sha256:0431697bc05bb7dd576b8c033524251400cc829120bf34576c4f5bcdf1f41695
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target
#5 sha256:f5ad800077a190aafdad177ae8d36c9409387967f4c03cc6e231d67b6f6f03f9
#5 ERROR: gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target:latest: not found

#12 [internal] load build context
#12 sha256:b231f2ec8b0a870834834a2a5d6a3f10bbc6da410026f2191bdcf076aa93edcc
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.1s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:fecde7b439d88f9341f9a0f44b1783e0cc85a2c596199ab96d93e9ed4a72174e
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:df4068d2096acf7ce14b6b0bfb8c97bdd5f67a7789badf68b66cc3b5c44309a7
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:2551bc1000e391b57ca9c3138c085a4af7e7336e79998f941824d50fa9edcf05
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:dd5429ca0285b084777db6fe279ac9a5dd4001d2ac19e458af0eb9b823f5d9b2
#11 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:8f6baab599ef59405c338018839924cc83fa5c78517689273fb5436fd6c087c6
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:b957d53d807093d45c3a7bdd3553dbf49c6fa210252d43d009fdefbc0be5fd49
#14 DONE 0.5s

#15 [stage-1  8/13] COPY benchmarks/lzo_lzo_decompress_target/benchmark.yaml /
#15 sha256:a37dfb5301aa04f289a07890cca69a09cc2b61a95f7c6bd8347e232942c31f7e
#15 DONE 0.1s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:524ee2bf4b8f69388b3f762177a3a86f0777dedb108a696618bc18c4002ecdad
#16 DONE 0.5s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:4ca416fd6dcc9e6dfe281bdf8aa258efeca1eef48dfde11673841a512701f5fd
#17 DONE 0.1s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:226ceb39c83007afa305f72cb17297e383d4d55fec53b8168b994220f663f5e7
#18 0.432 Checking out commit d561c49a
#18 0.440 error: pathspec 'd561c49a' did not match any file(s) known to git
#18 0.446 error: pathspec 'd561c49a' did not match any file(s) known to git
#18 0.485 Checkout unsuccessful.
#18 DONE 0.6s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:d8f84fde26fc1447056b09246287cb5e7dc5e67ca4e05081cbe5a39ce8c56e9b
#19 DONE 0.5s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:f858c6402ccc4b2e68e53d5a27dca5af441101d758040bc8563ef17d98408822
#20 0.455 Run fuzzer_build to build the target
#20 0.565 FUZZ_TARGET = lzo_decompress_target
#20 0.565 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.565 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.570 Building benchmark lzo_lzo_decompress_target with fuzzer afl
#20 0.572 + cd /src
#20 0.572 + tar xzf lzo.tar.gz
#20 0.617 + cd lzo-2.10
#20 0.617 + ./configure
#20 0.828 configure: Configuring LZO 2.10
#20 0.846 checking build system type... x86_64-pc-linux-gnu
#20 0.915 checking host system type... x86_64-pc-linux-gnu
#20 0.916 checking target system type... x86_64-pc-linux-gnu
#20 0.917 checking whether to enable maintainer-specific portions of Makefiles... no
#20 0.918 checking for gcc... clang
#20 0.989 checking whether the C compiler works... yes
#20 1.112 checking for C compiler default output file name... a.out
#20 1.114 checking for suffix of executables... 
#20 1.235 checking whether we are cross compiling... no
#20 1.371 checking for suffix of object files... o
#20 1.401 checking whether we are using the GNU C compiler... yes
#20 1.429 checking whether clang accepts -g... yes
#20 1.454 checking for clang option to accept ISO C89... none needed
#20 1.499 checking whether clang understands -c and -o together... yes
#20 1.542 checking for ar... ar
#20 1.543 checking the archiver (ar) interface... ar
#20 1.580 checking for style of include used by make... GNU
#20 1.587 checking dependency style of clang... gcc3
#20 1.642 checking how to run the C preprocessor... clang -E
#20 1.735 checking whether the C preprocessor needs special flags... none needed
#20 1.764 checking for an ANSI C-conforming const... yes
#20 1.793 checking for grep that handles long lines and -e... /usr/bin/grep
#20 1.797 checking for egrep... /usr/bin/grep -E
#20 1.801 checking for ANSI C header files... yes
#20 2.045 checking for sys/types.h... yes
#20 2.102 checking for sys/stat.h... yes
#20 2.157 checking for stdlib.h... yes
#20 2.212 checking for string.h... yes
#20 2.271 checking for memory.h... yes
#20 2.329 checking for strings.h... yes
#20 2.387 checking for inttypes.h... yes
#20 2.451 checking for stdint.h... yes
#20 2.513 checking for unistd.h... yes
#20 2.583 checking whether byte ordering is bigendian... no
#20 2.692 checking for special C compiler options needed for large files... no
#20 2.693 checking for _FILE_OFFSET_BITS value needed for large files... no
#20 2.729 checking for a BSD-compatible install... /usr/bin/install -c
#20 2.745 checking whether build environment is sane... yes
#20 2.761 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 2.764 checking for gawk... no
#20 2.765 checking for mawk... mawk
#20 2.766 checking whether make sets $(MAKE)... yes
#20 2.777 checking whether make supports nested variables... yes
#20 2.789 checking dependency style of clang... gcc3
#20 2.847 checking whether make supports nested variables... (cached) yes
#20 2.849 checking how to print strings... printf
#20 2.904 checking for a sed that does not truncate output... /usr/bin/sed
#20 2.912 checking for fgrep... /usr/bin/grep -F
#20 2.916 checking for ld used by clang... /usr/bin/ld
#20 2.934 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 2.939 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 2.944 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 2.977 checking whether ln -s works... yes
#20 2.977 checking the maximum length of command line arguments... 1572864
#20 2.989 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 2.990 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 2.990 checking for /usr/bin/ld option to reload object files... -r
#20 2.991 checking for objdump... objdump
#20 2.992 checking how to recognize dependent libraries... pass_all
#20 2.995 checking for dlltool... no
#20 2.995 checking how to associate runtime and link libraries... printf %s\n
#20 2.997 checking for archiver @FILE support... @
#20 3.034 checking for strip... strip
#20 3.036 checking for ranlib... ranlib
#20 3.037 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 3.213 checking for sysroot... no
#20 3.238 checking for mt... no
#20 3.239 checking if : is a manifest tool... no
#20 3.248 checking for dlfcn.h... yes
#20 3.307 checking for objdir... .libs
#20 3.482 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 3.515 checking for clang option to produce PIC... -fPIC -DPIC
#20 3.515 checking if clang PIC flag -fPIC -DPIC works... yes
#20 3.545 checking if clang static flag -static works... yes
#20 3.733 checking if clang supports -c -o file.o... yes
#20 3.779 checking if clang supports -c -o file.o... (cached) yes
#20 3.779 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 3.801 checking dynamic linker characteristics... GNU/Linux ld.so
#20 3.968 checking how to hardcode library paths into programs... immediate
#20 3.968 checking whether stripping libraries is possible... yes
#20 3.971 checking if libtool supports shared libraries... yes
#20 3.971 checking whether to build shared libraries... no
#20 3.971 checking whether to build static libraries... yes
#20 3.973 checking whether time.h and sys/time.h may both be included... yes
#20 4.014 checking assert.h usability... yes
#20 4.070 checking assert.h presence... yes
#20 4.092 checking for assert.h... yes
#20 4.104 checking ctype.h usability... yes
#20 4.162 checking ctype.h presence... yes
#20 4.184 checking for ctype.h... yes
#20 4.197 checking dirent.h usability... yes
#20 4.254 checking dirent.h presence... yes
#20 4.277 checking for dirent.h... yes
#20 4.288 checking errno.h usability... yes
#20 4.344 checking errno.h presence... yes
#20 4.365 checking for errno.h... yes
#20 4.377 checking fcntl.h usability... yes
#20 4.437 checking fcntl.h presence... yes
#20 4.459 checking for fcntl.h... yes
#20 4.470 checking float.h usability... yes
#20 4.529 checking float.h presence... yes
#20 4.549 checking for float.h... yes
#20 4.561 checking limits.h usability... yes
#20 4.617 checking limits.h presence... yes
#20 4.639 checking for limits.h... yes
#20 4.647 checking malloc.h usability... yes
#20 4.707 checking malloc.h presence... yes
#20 4.731 checking for malloc.h... yes
#20 4.743 checking for memory.h... (cached) yes
#20 4.753 checking setjmp.h usability... yes
#20 4.814 checking setjmp.h presence... yes
#20 4.832 checking for setjmp.h... yes
#20 4.842 checking signal.h usability... yes
#20 4.902 checking signal.h presence... yes
#20 4.928 checking for signal.h... yes
#20 4.936 checking stdarg.h usability... yes
#20 4.992 checking stdarg.h presence... yes
#20 5.014 checking for stdarg.h... yes
#20 5.026 checking stddef.h usability... yes
#20 5.086 checking stddef.h presence... yes
#20 5.105 checking for stddef.h... yes
#20 5.117 checking for stdint.h... (cached) yes
#20 5.128 checking stdio.h usability... yes
#20 5.185 checking stdio.h presence... yes
#20 5.208 checking for stdio.h... yes
#20 5.220 checking for stdlib.h... (cached) yes
#20 5.232 checking for string.h... (cached) yes
#20 5.243 checking for strings.h... (cached) yes
#20 5.255 checking time.h usability... yes
#20 5.312 checking time.h presence... yes
#20 5.334 checking for time.h... yes
#20 5.346 checking for unistd.h... (cached) yes
#20 5.358 checking utime.h usability... yes
#20 5.413 checking utime.h presence... yes
#20 5.435 checking for utime.h... yes
#20 5.448 checking sys/mman.h usability... yes
#20 5.504 checking sys/mman.h presence... yes
#20 5.526 checking for sys/mman.h... yes
#20 5.539 checking sys/resource.h usability... yes
#20 5.596 checking sys/resource.h presence... yes
#20 5.618 checking for sys/resource.h... yes
#20 5.627 checking for sys/stat.h... (cached) yes
#20 5.639 checking sys/time.h usability... yes
#20 5.698 checking sys/time.h presence... yes
#20 5.721 checking for sys/time.h... yes
#20 5.732 checking for sys/types.h... (cached) yes
#20 5.744 checking sys/wait.h usability... yes
#20 5.803 checking sys/wait.h presence... yes
#20 5.829 checking for sys/wait.h... yes
#20 5.835 checking whether limits.h is sane... yes
#20 5.866 checking for off_t... yes
#20 5.987 checking for ptrdiff_t... yes
#20 6.119 checking for size_t... yes
#20 6.253 checking return type of signal handlers... void
#20 6.296 checking size of short... 2
#20 6.465 checking size of int... 4
#20 6.640 checking size of long... 8
#20 6.804 checking size of long long... 8
#20 6.972 checking size of __int16... 0
#20 7.050 checking size of __int32... 0
#20 7.124 checking size of __int64... 0
#20 7.198 checking size of void *... 8
#20 7.365 checking size of size_t... 8
#20 7.532 checking size of ptrdiff_t... 8
#20 7.700 checking size of __int32... (cached) 0
#20 7.703 checking size of intmax_t... 8
#20 7.870 checking size of uintmax_t... 8
#20 8.035 checking size of intptr_t... 8
#20 8.201 checking size of uintptr_t... 8
#20 8.373 checking size of float... 4
#20 8.547 checking size of double... 8
#20 8.720 checking size of long double... 16
#20 8.891 checking size of dev_t... 8
#20 9.059 checking size of fpos_t... 16
#20 9.226 checking size of mode_t... 4
#20 9.394 checking size of off_t... 8
#20 9.566 checking size of ssize_t... 8
#20 9.732 checking size of time_t... 8
#20 9.907 checking for access... yes
#20 10.04 checking for alloca... no
#20 10.18 checking for atexit... yes
#20 10.31 checking for atoi... yes
#20 10.45 checking for atol... yes
#20 10.59 checking for chmod... yes
#20 10.72 checking for chown... yes
#20 10.86 checking for clock_getcpuclockid... yes
#20 11.00 checking for clock_getres... yes
#20 11.14 checking for clock_gettime... yes
#20 11.28 checking for ctime... yes
#20 11.42 checking for difftime... yes
#20 11.56 checking for fstat... yes
#20 11.70 checking for getenv... yes
#20 11.84 checking for getpagesize... yes
#20 11.98 checking for getrusage... yes
#20 12.11 checking for gettimeofday... yes
#20 12.25 checking for gmtime... yes
#20 12.39 checking for isatty... yes
#20 12.53 checking for localtime... yes
#20 12.66 checking for longjmp... yes
#20 12.80 checking for lstat... yes
#20 12.95 checking for memcmp... yes
#20 13.09 checking for memcpy... yes
#20 13.24 checking for memmove... yes
#20 13.39 checking for memset... yes
#20 13.55 checking for mkdir... yes
#20 13.68 checking for mktime... yes
#20 13.83 checking for mmap... yes
#20 13.97 checking for mprotect... yes
#20 14.12 checking for munmap... yes
#20 14.25 checking for qsort... yes
#20 14.39 checking for raise... yes
#20 14.53 checking for rmdir... yes
#20 14.67 checking for setjmp... yes
#20 14.80 checking for signal... yes
#20 14.93 checking for snprintf... yes
#20 15.08 checking for strcasecmp... yes
#20 15.23 checking for strchr... yes
#20 15.37 checking for strdup... yes
#20 15.51 checking for strerror... yes
#20 15.66 checking for strftime... yes
#20 15.79 checking for stricmp... no
#20 15.94 checking for strncasecmp... yes
#20 16.09 checking for strnicmp... no
#20 16.22 checking for strrchr... yes
#20 16.36 checking for strstr... yes
#20 16.51 checking for time... yes
#20 16.64 checking for umask... yes
#20 16.78 checking for utime... yes
#20 16.92 checking for vsnprintf... yes
#20 17.07 checking whether to build assembly versions... no
#20 17.10 checking whether your compiler passes the LZO conformance test... yes
#20 17.30 checking that generated files are newer than configure... done
#20 17.30 configure: creating ./config.status
#20 18.08 config.status: creating Makefile
#20 18.10 config.status: creating lzo2.pc
#20 18.12 config.status: creating config.h
#20 18.13 config.status: executing depfiles commands
#20 18.38 config.status: executing libtool commands
#20 18.40 
#20 18.40    LZO configuration summary
#20 18.40    -------------------------
#20 18.40    LZO version                : 2.10
#20 18.40    configured for host        : x86_64-pc-linux-gnu
#20 18.40    source code location       : .
#20 18.40    compiler                   : clang
#20 18.40    preprocessor definitions   : -DLZO_HAVE_CONFIG_H=1
#20 18.40    preprocessor flags         : 
#20 18.40    compiler flags             : -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard
#20 18.40    build static library       : yes
#20 18.40    build shared library       : no
#20 18.40    enable i386 assembly code  : no
#20 18.40 
#20 18.40 
#20 18.40    LZO 2.10 configured.
#20 18.40 
#20 18.40    Copyright (C) 1996-2017 Markus Franz Xaver Johannes Oberhumer
#20 18.40    All Rights Reserved.
#20 18.40 
#20 18.40    The LZO library is free software; you can redistribute it and/or
#20 18.40    modify it under the terms of the GNU General Public License as
#20 18.40    published by the Free Software Foundation; either version 2 of
#20 18.40    the License, or (at your option) any later version.
#20 18.40 
#20 18.40    The LZO library is distributed in the hope that it will be useful,
#20 18.40    but WITHOUT ANY WARRANTY; without even the implied warranty of
#20 18.40    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#20 18.40    GNU General Public License for more details.
#20 18.40 
#20 18.40    Markus F.X.J. Oberhumer
#20 18.40    <markus@oberhumer.com>
#20 18.40    http://www.oberhumer.com/opensource/lzo/
#20 18.40 
#20 18.40 
#20 18.40 Type 'make' to build LZO.
#20 18.40 Type 'make check' and 'make test' to test LZO.
#20 18.40 Type 'make install' to install LZO.
#20 18.40 After installing LZO, please have a look at 'examples/simple.c'.
#20 18.40 
#20 18.46 ++ nproc
#20 18.47 + make -j8
#20 18.48 make  all-am
#20 18.50 make[1]: Entering directory '/src/lzo-2.10'
#20 18.51   CC       src/lzo1.lo
#20 18.51   CC       src/lzo1_99.lo
#20 18.51   CC       src/lzo1a.lo
#20 18.51   CC       src/lzo1a_99.lo
#20 18.51   CC       src/lzo1b_1.lo
#20 18.51   CC       src/lzo1b_2.lo
#20 18.51   CC       src/lzo1b_3.lo
#20 18.52   CC       src/lzo1b_4.lo
#20 19.16   CC       src/lzo1b_5.lo
#20 19.16   CC       src/lzo1b_6.lo
#20 19.18   CC       src/lzo1b_7.lo
#20 19.20   CC       src/lzo1b_8.lo
#20 19.22   CC       src/lzo1b_9.lo
#20 19.23   CC       src/lzo1b_99.lo
#20 19.31   CC       src/lzo1b_9x.lo
#20 19.35   CC       src/lzo1b_cc.lo
#20 19.85   CC       src/lzo1b_d1.lo
#20 19.88   CC       src/lzo1b_d2.lo
#20 19.88   CC       src/lzo1b_rr.lo
#20 19.88   CC       src/lzo1b_xx.lo
#20 19.91   CC       src/lzo1c_1.lo
#20 19.95   CC       src/lzo1c_2.lo
#20 19.95   CC       src/lzo1c_3.lo
#20 20.10   CC       src/lzo1c_4.lo
#20 20.40   CC       src/lzo1c_5.lo
#20 20.48   CC       src/lzo1c_6.lo
#20 20.56   CC       src/lzo1c_7.lo
#20 20.58   CC       src/lzo1c_8.lo
#20 20.64   CC       src/lzo1c_9.lo
#20 20.67   CC       src/lzo1c_99.lo
#20 20.68   CC       src/lzo1c_9x.lo
#20 20.82   CC       src/lzo1c_cc.lo
#20 21.13   CC       src/lzo1c_d1.lo
#20 21.26   CC       src/lzo1c_d2.lo
#20 21.31   CC       src/lzo1c_rr.lo
#20 21.32   CC       src/lzo1c_xx.lo
#20 21.37   CC       src/lzo1f_1.lo
#20 21.43   CC       src/lzo1f_9x.lo
#20 21.46   CC       src/lzo1f_d1.lo
#20 21.51   CC       src/lzo1f_d2.lo
#20 21.82   CC       src/lzo1x_1.lo
#20 21.88   CC       src/lzo1x_1k.lo
#20 21.92   CC       src/lzo1x_1l.lo
#20 22.08   CC       src/lzo1x_1o.lo
#20 22.09   CC       src/lzo1x_9x.lo
#20 22.18   CC       src/lzo1x_d1.lo
#20 22.28   CC       src/lzo1x_d2.lo
#20 22.31   CC       src/lzo1x_d3.lo
#20 22.59   CC       src/lzo1x_o.lo
#20 22.64   CC       src/lzo1y_1.lo
#20 22.64   CC       src/lzo1y_9x.lo
#20 22.83   CC       src/lzo1y_d1.lo
#20 22.85   CC       src/lzo1y_d2.lo
#20 23.00   CC       src/lzo1y_d3.lo
#20 23.18   CC       src/lzo1y_o.lo
#20 23.28   CC       src/lzo1z_9x.lo
#20 23.34   CC       src/lzo1z_d1.lo
#20 23.35   CC       src/lzo1z_d2.lo
#20 23.48   CC       src/lzo1z_d3.lo
#20 23.58   CC       src/lzo2a_9x.lo
#20 23.84   CC       src/lzo2a_d1.lo
#20 23.85   CC       src/lzo2a_d2.lo
#20 23.96   CC       src/lzo_crc.lo
#20 24.03   CC       src/lzo_init.lo
#20 24.06   CC       src/lzo_ptr.lo
#20 24.31   CC       src/lzo_str.lo
#20 24.44   CC       src/lzo_util.lo
#20 24.45   CC       examples/dict.o
#20 24.46   CC       examples/lzopack.o
#20 24.47   CC       examples/overlap.o
#20 24.52   CC       examples/precomp.o
#20 24.60   CC       examples/precomp2.o
#20 24.65   CC       examples/simple.o
#20 24.66   CC       lzotest/lzotest.o
#20 24.72   CC       tests/align.o
#20 24.73   CC       tests/chksum.o
#20 24.79   CC       tests/promote.o
#20 24.84   CC       tests/sizes.o
#20 24.85   CC       minilzo/t-testmini.o
#20 24.85   CC       minilzo/t-minilzo.o
#20 24.85   CCLD     tests/promote
#20 24.91   CCLD     tests/sizes
#20 25.02   CCLD     src/liblzo2.la
#20 25.52   CCLD     minilzo/testmini
#20 25.61 ar: `u' modifier ignored since `D' is the default (see `U')
#20 25.68   CCLD     examples/dict
#20 25.68   CCLD     examples/lzopack
#20 25.68   CCLD     examples/overlap
#20 25.68   CCLD     examples/precomp
#20 25.68   CCLD     examples/precomp2
#20 25.68   CCLD     examples/simple
#20 25.85   CCLD     tests/align
#20 26.09   CCLD     tests/chksum
#20 26.38   CCLD     lzotest/lzotest
#20 26.85 make[1]: Leaving directory '/src/lzo-2.10'
#20 26.85 + for file in $SRC/*.c
#20 26.85 ++ basename /src/lzo_compress_target.c .c
#20 26.85 + name=lzo_compress_target
#20 26.85 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -I include -I minilzo -I include/lzo /src/lzo_compress_target.c -o lzo_compress_target.o
#20 26.91 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I include -I minilzo -I include/lzo lzo_compress_target.o -o /out/lzo_compress_target /libAFL.a src/.libs/liblzo2.a
#20 27.14 + for file in $SRC/*.c
#20 27.14 ++ basename /src/lzo_decompress_target.c .c
#20 27.15 + name=lzo_decompress_target
#20 27.15 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -I include -I minilzo -I include/lzo /src/lzo_decompress_target.c -o lzo_decompress_target.o
#20 27.20 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I include -I minilzo -I include/lzo lzo_decompress_target.o -o /out/lzo_decompress_target /libAFL.a src/.libs/liblzo2.a
#20 27.43 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I include -I minilzo -I include/lzo /src/all_lzo_compress.cc -o /out/all_lzo_compress /libAFL.a src/.libs/liblzo2.a
#20 28.83 + cp /src/lzo_compress_target.options /src/lzo_decompress_target.options /out/
#20 28.84 + zip -j /out/lzo_decompress_target_seed_corpus.zip /src/lzo_decompress_target_seeds/seed.lzo
#20 28.84   adding: seed.lzo (deflated 6%)
#20 28.84 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 29.0s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:c5232e7fdb77e20de8104cac69130d6408f43471e0ccf70859435c6c90feebc1 done
#21 naming to gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:e9481d02ec49f98b3cd2053ff863b7904ec8a24c1a577bd733c3ed4f2f442d1b
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:ed4d3bd4f4a3717a5cdb3246216a439ae86c42fac8aad392535ed70a2dcdad51
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate
#5 sha256:c4ed430e28f11ea8d5c6c58c9b5ba67039ccb652fb409a3df4c19c0e24a5788f
#5 ERROR: gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate:latest: not found

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:460de8759a450eba6fbeb388ea7b433485c57144929f60f90d8fad3292e3a801
#6 writing image sha256:460de8759a450eba6fbeb388ea7b433485c57144929f60f90d8fad3292e3a801 done
#6 naming to gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:8b6c1ab6ec8119ac3012e37ba5ad7a0848adeaece9fc8de7acc9a7fd264c1836
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:f46a663bdf9e0888f81deb80c4894dd65667b7b2e35e698c61113c3aa95aab3a
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate:latest
#3 sha256:2bd3c1473c0b46c80adf5f44c76f5170c1a1c6a5b0407c436634ec46fb1a2479
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target:latest
#4 sha256:ff9f16c2770d2e26006f04c530cb11894ed73123f078196236ac718a17ca0892
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:2aaccc81dd32474901c3c4ec61079b9da48f8656dfd07fc66212e4e96f2668ab
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate
#6 sha256:1f01e4df7001fe17bb56f959af14a80030f698c6534dcdfa477c96269267f825
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target
#10 sha256:28689005e55c7bb7608ffc481c505f2f8e3f5880dd06a7c608e6e20ad7accb35
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target
#5 sha256:e2d20e3fdd5c06f6f1f660580709a0a32251c925314e95f27f780d5a59e9683d
#5 ERROR: gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target:latest: not found

#12 [internal] load build context
#12 sha256:2aaccc81dd32474901c3c4ec61079b9da48f8656dfd07fc66212e4e96f2668ab
#12 ...

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target
#10 sha256:28689005e55c7bb7608ffc481c505f2f8e3f5880dd06a7c608e6e20ad7accb35
#10 DONE 0.3s

#12 [internal] load build context
#12 sha256:2aaccc81dd32474901c3c4ec61079b9da48f8656dfd07fc66212e4e96f2668ab
#12 transferring context: 19.00MB 0.7s done
#12 DONE 0.8s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:5298844308dde8f0c46d0a037c2a4eccebe2f1acc6435a22b5a5a0247e046512
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:d7611944ed4e960d15365bc6b859c437e7a6015d9899cae1dbe0105e3af9e75f
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:ea89c4fb466d21e7c79571e8bf55b65cc4ad82fa01eafb8e2970d4f9f84caf6e
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:5531f874c3d9a2a416c6f844ab6c7bfc489b2a05e77e857b693cc462efb37b7d
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:7eff4a76dd23fe2ba2034e59e81c4a70ec7eb8c11dc1f2d9ae6900f4b940df02
#13 DONE 0.9s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:1a4ac04fad7cfceebe795a70b985e70a62dbff5bef8062754948f9f56c047f05
#14 DONE 0.1s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:2e33c05dc532b23cad6ddf754481aad90ea663bfcfe4fffd0a30a3296df16a1a
#15 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:5ce9d957f502adc7edbe5bd25cb481b6539315dfcdc7f49c6aa249ea489b5984
#16 DONE 0.7s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:d28f038481bbc0e3c9c94d7ccb1f7657d45d3e8f7392354122f793bfee98391e
#17 DONE 0.2s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:611e18f6a321d852725a50b15fe1447b08b41d951fda4e5c950832e0c464b34b
#18 DONE 0.2s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:b8988abb69dcdffec827c25cfeddf5a0ce55fc451e5b19288d7182e275eeeaf8
#19 DONE 0.2s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:c21570cba5683ffdc380a42c9d65947b110bb40decf98d22d177ba7533ab5794
#20 DONE 0.5s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:0274a12542a4d010cc604b9f5b15ee2e424efc858d1388507455ed32026ad0b8 done
#21 naming to gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Unarchived 1 files from seed corpus /out/lzo_decompress_target_seed_corpus.zip.
INFO:root:Doing final sync.
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:617dffdbff845eff6d2f8bbbeec974a9d0aa5eff7f9b8dfc763747f793127d15
#1 transferring dockerfile: 32B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:6a70bbd79c634cdcc5a9eb88228404d72ac16045cf72c4658b5a6e0c64030664
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target
#4 sha256:36daac9b393d9d9f74e34b6fb93568b32ced6541d5477d44db637835a17878dd
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:c8b278c517042aef094ff6f30af8b8e6b9eeb468ef16622a9331b1f97d1f0398
#8 transferring context: 350B done
#8 DONE 0.0s

#7 [3/5] RUN wget -O lzo.tar.gz     http://www.oberhumer.com/opensource/lzo/download/lzo-2.10.tar.gz
#7 sha256:a43c89546416d010bc5b9d695ab5a9bf5530c91e0201187b3c518bde8e76f8c3
#7 CACHED

#9 [4/5] COPY *.c *.cc *.options build.sh /src/
#9 sha256:1ff6aeeddd66c448640fd89fa810c9913be4ba890e51b17f9cc2ad99af37a3bf
#9 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#6 sha256:4f84a0ce69ee663e95cd1295ccb0c22599aeb66f813cea39811e39dcebbc0ef1
#6 CACHED

#10 [5/5] COPY lzo_decompress_target_seeds /src/lzo_decompress_target_seeds
#10 sha256:3192b82cd6ac7e53bec5b50418751ee9b151afd8809b39a5fe0a9ec6a8ef3e85
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:fb4d47f1f90e6e862b1bb0d88fcefc48a4be9fca7490734b43dbf6c626a047c2 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:3809f1aafce4d732802efc57f115f87d9a094c7e28c6990bfd52632ddbaf16e4
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:a1b4cb5684b58ba2832a33bc6eb91132a791ecbb6974262921b42a61f008b6df
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target:latest
#3 sha256:80acfac66a8714350cbac83e1e50abe969e83e5472cd4693fcb9ddb15af4851b
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target
#5 sha256:243f7de1b7f1c36ab66e56a787aba7344bec81161eb0a6c7b58acade3918f981
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate
#4 sha256:790a0798dc94d5890fdb88db33339399be52c6d0de53e377f887d3a9eef793f7
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:b7058d8f1b6e2ee16a622571f7335adbc5b7b7028407daf9bbe224e3f7606466
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:772cdcb967a6f639e6fab1787d43399fbb7e05f8f268229e88b5a1e8bcc90aa6
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:ae80837e6283ebbed8e69f562cd39aeaf8a83c0cdb6bfeaa57914847c694c5f4 done
#8 naming to gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:3710681901697270a34de362ae040c3b861040217e31941f8827a31e8d9726b8
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:28c91548502586104e64e36f045912123974607761f7e20bb60b813ad3cdf508
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:62ed90ce0d08132779870ee72c93aa03287ed2ba12c4f4479e342e5086aeb092
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#9 [4/7] COPY ./requirements.txt /
#9 sha256:8324f43f7ed251886b80dbd41641301e42c0b7c954ea3204cebee0d645af14b6
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:148b0e4bccb08a2cfec6953f9d5cbb70695b6be64f38d6db428c4e619d7ce439
#10 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:8dc4c2af45418a5fe9da166ad00c463544a3f1e9b0a2a400da9c9a9618a37554
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:01941eef28f1ebda3294c8fa08c05e625cdcb8e95385b0cf84b9ac8c8c57448a
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:5dc85c66b74f60d1770fb4d8a2f0cf89b872162f5c4ad8fde1e9774f9306976f 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:079c0913ca289d080007b08762f3daed6d20855e5d63c0b7526dd9759f9ce5ec
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:5bbc452ce59b217113735082817c32a3272e910a796ebfeb5b64904da8032edb
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate:latest
#3 sha256:57277ad610ff2521191e75da22afb9064f4a9cf1f1cf01d5bb679fea15a74973
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:65426f1fe7fad86760ca82e80a588d3bcaccfcdc40fc28bad4f7c853c6d098ed
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate
#6 sha256:0431697bc05bb7dd576b8c033524251400cc829120bf34576c4f5bcdf1f41695
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target
#5 sha256:f5ad800077a190aafdad177ae8d36c9409387967f4c03cc6e231d67b6f6f03f9
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:65426f1fe7fad86760ca82e80a588d3bcaccfcdc40fc28bad4f7c853c6d098ed
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.1s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:3802f31e3af7d008984909e07419554cd43746f57c0018810d04d5539f99843c
#18 CACHED

#15 [stage-1  8/13] COPY benchmarks/lzo_lzo_decompress_target/benchmark.yaml /
#15 sha256:e0ceed63280e71ee3a60e3af60dee13457dedef34e16a4111d27e8302591688e
#15 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:2e473bf9476813d395184ca38f6b50896607dd614d53c0b87c8ed33633b1c947
#16 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:fecde7b439d88f9341f9a0f44b1783e0cc85a2c596199ab96d93e9ed4a72174e
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:df4068d2096acf7ce14b6b0bfb8c97bdd5f67a7789badf68b66cc3b5c44309a7
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:2551bc1000e391b57ca9c3138c085a4af7e7336e79998f941824d50fa9edcf05
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:dd5429ca0285b084777db6fe279ac9a5dd4001d2ac19e458af0eb9b823f5d9b2
#11 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:9a5db6327185eea3687f3710727f452010ec70bb0ad5c473b38222fa30acac21
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:225e9405ea08cadc1902ef63ac426c6a7ef618f84645e31a08a98b3936effdf7
#14 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:59f55512520db2cf0f281efd79fd3744a61cb0a4cd3f562ae6fd83c0f7475578
#17 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:e75b4e08bb724866211206bcb5a2f04a024e6273ea51ccd3fd86606ed8864d2a
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:5603bd2efb065b1820868fb8370d55826925d54072f7443b3d023a6c50a74cc1
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:c5232e7fdb77e20de8104cac69130d6408f43471e0ccf70859435c6c90feebc1
#21 writing image sha256:c5232e7fdb77e20de8104cac69130d6408f43471e0ccf70859435c6c90feebc1 done
#21 naming to gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:343804802b18ca5d37a185dac4f234753853d935d27e616eb7dc89c14f08053c
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:c1f01c772e20d9ac072a17b62b02db08d973cbc51a21e1b4feb08f76ccdb8996
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate
#5 sha256:c4ed430e28f11ea8d5c6c58c9b5ba67039ccb652fb409a3df4c19c0e24a5788f
#5 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:460de8759a450eba6fbeb388ea7b433485c57144929f60f90d8fad3292e3a801
#6 writing image sha256:460de8759a450eba6fbeb388ea7b433485c57144929f60f90d8fad3292e3a801 done
#6 naming to gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:c9c15fe591b3297d18a0a0cb26d527392efdb84bccbd4708f80e5c212a7d133a
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:ad5f80c24f337620956ecfedad09466670b2f42689fe5809d4cde32d524542e3
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate:latest
#3 sha256:2bd3c1473c0b46c80adf5f44c76f5170c1a1c6a5b0407c436634ec46fb1a2479
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target:latest
#4 sha256:ff9f16c2770d2e26006f04c530cb11894ed73123f078196236ac718a17ca0892
#4 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate
#6 sha256:1f01e4df7001fe17bb56f959af14a80030f698c6534dcdfa477c96269267f825
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target
#5 sha256:e2d20e3fdd5c06f6f1f660580709a0a32251c925314e95f27f780d5a59e9683d
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target
#10 sha256:28689005e55c7bb7608ffc481c505f2f8e3f5880dd06a7c608e6e20ad7accb35
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:52f27b187eaf4753033dc0af594997785209f99c15731ac22b6922365e1b4e82
#12 transferring context: 19.00MB 0.7s done
#12 DONE 0.7s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:bf5d59038664c979a32d6500885b18b99141042710408b7bdbb5689f6f266888
#17 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:d1b54adc973ad86b5881d0175b8dd8aafd4f8efd29072045348e26caa687dd67
#14 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:21df6a42867493985d81fc8d8bd9d4d862fb76a0949c956a594a84ee1bd4d86f
#15 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:d7611944ed4e960d15365bc6b859c437e7a6015d9899cae1dbe0105e3af9e75f
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:ea89c4fb466d21e7c79571e8bf55b65cc4ad82fa01eafb8e2970d4f9f84caf6e
#9 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:827f396abb54525b9db628d2e8f373ef2e5fed7d721a49625ec23a466040d419
#18 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:5531f874c3d9a2a416c6f844ab6c7bfc489b2a05e77e857b693cc462efb37b7d
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:adce3cd38b97b4db59bf020d123d0a1e470a36ac3ecb89010a18551bf754a29d
#13 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:5298844308dde8f0c46d0a037c2a4eccebe2f1acc6435a22b5a5a0247e046512
#7 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:66f4604ec0a58e15b4385bc44d36e6d976980f5bed303d382ac6aea0dc82d377
#16 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:1451aef92608724a000b1bea8c353990732bab80c9f4a02351343890e0624655
#19 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:575b2675017a41f9b53b27dbde45e6b7c99c06b75a161e06b359edc54af41282
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:0274a12542a4d010cc604b9f5b15ee2e424efc858d1388507455ed32026ad0b8 done
#21 naming to gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Unarchived 1 files from seed corpus /out/lzo_decompress_target_seed_corpus.zip.
INFO:root:Doing final sync.
