WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: jsoncpp_jsoncpp_fuzz_proto.
INFO:root:Please run "make test-run-afl-jsoncpp_jsoncpp_fuzz_proto" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:47d209a1fcb8292008bb399ed377494d305bf90645d5c93c7463148e57d63512
#1 transferring dockerfile: 1.25kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:d666e2c1d7ba1ab3774d3d59a7e5da555241e31bdd1199bee36058389315f322
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#4 [1/7] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#4 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#4 DONE 0.0s

#11 [internal] load build context
#11 sha256:cce71a26e7983817673411fba92486b8a7561f68b11a33737a07be80f3457d7d
#11 DONE 0.0s

#6 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/jsoncpp_jsoncpp_fuzz_proto
#6 sha256:d0962955db46d66e9a6b86c9fedfd7b52ec1c72412a56193ef6e2e282437accf
#6 ERROR: gcr.io/fuzzbench/builders/benchmark/jsoncpp_jsoncpp_fuzz_proto:latest: not found

#11 [internal] load build context
#11 sha256:cce71a26e7983817673411fba92486b8a7561f68b11a33737a07be80f3457d7d
#11 transferring context: 10.84kB done
#11 DONE 0.0s

#5 [2/7] RUN apt-get update -y && apt-get install -y curl wget     binutils cmake ninja-build liblzma-dev libz-dev pkg-config autoconf libtool
#5 sha256:2227ad69c22e20c5eb3e7a1167346cff9688f6d2fc262c140f4ffc66ac7a407f
#5 CACHED

#7 [3/7] RUN git clone --depth 1 https://github.com/open-source-parsers/jsoncpp
#7 sha256:11565df669197e7e0b15ea56d81c08de6ef819a247eece3a2d409323a620deda
#7 CACHED

#8 [4/7] WORKDIR jsoncpp
#8 sha256:b836ad85ab3ca98749054787ac991206c2eae20ace0dc8dbffd6493afc451ae8
#8 CACHED

#9 [5/7] RUN git clone --depth 1 https://github.com/google/libprotobuf-mutator.git
#9 sha256:fdd75f8b520314a69fa0cd4730e8d9b5045e6881cd6301f0f398495c7d3bbcc9
#9 CACHED

#10 [6/7] RUN (mkdir LPM && cd LPM && cmake ../libprotobuf-mutator -GNinja -DLIB_PROTO_MUTATOR_DOWNLOAD_PROTOBUF=ON -DLIB_PROTO_MUTATOR_TESTING=OFF -DCMAKE_BUILD_TYPE=Release && ninja)
#10 sha256:f95fc51344b5b09afb951403177c041f561c9cbadcd1c6e31703cd8cf88eb806
#10 CACHED

#12 [7/7] COPY build.sh *.proto *.h *.cc /src/
#12 sha256:26dbbc26ce0d47092263080b37ed1a15f80279e22e502d3da0c9def59b2d9b56
#12 DONE 0.3s

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:7a6a2a46ee7c02a5663896ccc36ff756744f26f7d5867c45fea550a29578c195
#13 writing image sha256:7a6a2a46ee7c02a5663896ccc36ff756744f26f7d5867c45fea550a29578c195 done
#13 naming to gcr.io/fuzzbench/builders/benchmark/jsoncpp_jsoncpp_fuzz_proto done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/jsoncpp_jsoncpp_fuzz_proto:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:b3eb470e4b3c00969e1e7fbf415c5b8a05341125a45c2dd9c2de2309d73945c7
#1 transferring dockerfile: 46B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:804286e58fe85165b190daadba30f1f637a590ef3f75fb439ba55392aea7801b
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/jsoncpp_jsoncpp_fuzz_proto:latest
#3 sha256:c7631b2b33fa32d6db65849a3c3a8e125079bcfd19a3153b16cbabc10d0b38d6
#3 DONE 0.0s

#7 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/jsoncpp_jsoncpp_fuzz_proto
#7 sha256:4c0e0b2be8b0640efb0856ec1eeec39c01164afacafb87616944f4949f14aa79
#7 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate
#4 sha256:ef01c098b4e7640833b21308791558581fdfdca578eca1ff74aba12435af21db
#4 ERROR: gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate:latest: not found

#7 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/jsoncpp_jsoncpp_fuzz_proto
#7 sha256:4c0e0b2be8b0640efb0856ec1eeec39c01164afacafb87616944f4949f14aa79
#7 DONE 0.1s

#5 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#5 sha256:739172046af9a6b756822d57ec29785c3672775965c2f03452804853f7df74e4
#5 1.245 Cloning into '/afl'...
#5 2.194 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#5 2.194 
#5 2.194 You are in 'detached HEAD' state. You can look around, make experimental
#5 2.194 changes and commit them, and you can discard any commits you make in this
#5 2.194 state without impacting any branches by switching back to a branch.
#5 2.194 
#5 2.194 If you want to create a new branch to retain commits you create, you may
#5 2.194 do so (now or later) by using -c with the switch command. Example:
#5 2.194 
#5 2.194   git switch -c <new-branch-name>
#5 2.194 
#5 2.194 Or undo this operation with:
#5 2.194 
#5 2.194   git switch -
#5 2.194 
#5 2.194 Turn off this advice by setting config variable advice.detachedHead to false
#5 2.194 
#5 2.194 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#5 2.222 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#5 2.226 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#5 2.602 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#5 2.622 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#5 8.147 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#5 8.811 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#5 9.740 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#5 10.04 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#5 10.87 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#5 11.34 ln -sf afl-as as
#5 11.35 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#5 11.35 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#5 11.35 [+] All done! Be sure to review README - it's pretty short and useful.
#5 DONE 11.6s

#6 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#6 sha256:bea873750b5bdb2dfac6c97120679cb623b2d457244489cb9d8aece8812f4c8a
#6 1.538 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 1.654 Get:2 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#6 1.753 Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease
#6 1.779 Get:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#6 1.892 Get:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#6 3.835 Fetched 336 kB in 2s (140 kB/s)
#6 3.835 Reading package lists...
#6 7.417 Reading package lists...
#6 10.68 Building dependency tree...
#6 11.13 Reading state information...
#6 11.78 wget is already the newest version (1.20.3-1ubuntu2).
#6 11.78 0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
#6 11.79 --2022-02-19 03:04:00--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#6 11.79 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.110.133, 185.199.111.133, 185.199.108.133, ...
#6 11.80 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.110.133|:443... connected.
#6 11.82 HTTP request sent, awaiting response... 200 OK
#6 12.02 Length: 9177 (9.0K) [text/plain]
#6 12.02 Saving to: '/afl/afl_driver.cpp'
#6 12.02 
#6 12.02      0K ........                                              100% 6.77M=0.001s
#6 12.02 
#6 12.02 2022-02-19 03:04:00 (6.77 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#6 12.02 
#6 15.55 ar: creating /libAFL.a
#6 DONE 15.7s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:ac3d1c906f69cd0b5ad5e8e3decea8b6bc276ee80759ecd4e3ff75e2e31cbed3
#8 writing image sha256:ac3d1c906f69cd0b5ad5e8e3decea8b6bc276ee80759ecd4e3ff75e2e31cbed3 done
#8 naming to gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:2c328c94ff8a51e369efe670a7903702a8700718bb4effcd3a20ce948ca9da15
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:6a77b68cecd1cdae0554a7368adf4369c9e5e7fbb365b93fa69ea1e9652fa56c
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:ff1bcee1643d0bfb98a9dd9a343c3648809c4da34ce43227152ae9b3f1a54f11
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:c4139a92412d47570a5a422396edfdb16ebce195e325a62ac190d9773aa672b9
#10 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:8d00a416ea39436d2b4f26c849aa95f9338583f9ff7bfe0f04a7324af2c3b689
#9 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:bf89106cf3dd9228d31bc9adef505b266712faf4c01d234b2e6947345f61e603
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:2795625c573713dacd7fd442a67b02f721af7e60d94777e4f715074f2a74ee60
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:e1fa3f275ef7ad2553590e7204281a5a2ad685bd7462476fda6757b0aea51a9c
#13 writing image sha256:e1fa3f275ef7ad2553590e7204281a5a2ad685bd7462476fda6757b0aea51a9c done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:44637a4e74e285a806c6e40d523298891b0631ed66605ff244aaf7c5c191b072
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:ffd5265c20ae6f1d49978a878b26bf49301cecd3ba3453a2707f1ac9f040b8b3
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate:latest
#3 sha256:b864b84284067ca49897913ad0d3b9bda93d8797d59c3beda1e0f914efca4b8c
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:e85497e59fed793e025ae2af44cc4ca508f8ceef6a47ad0bed41d0122161fd12
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate
#6 sha256:08f74f9ba7af3b13cdf3d8f13aa8e8880512f02cde2f284b13bfd077790fb46d
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto
#5 sha256:4ed6ae8268cf6af2ca5e62238c9af4d36d6da6d457e4a2809c9a4cf2905b876c
#5 ERROR: gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto:latest: not found

#12 [internal] load build context
#12 sha256:e85497e59fed793e025ae2af44cc4ca508f8ceef6a47ad0bed41d0122161fd12
#12 transferring context: 669.90kB 0.2s done
#12 DONE 0.3s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate
#6 sha256:08f74f9ba7af3b13cdf3d8f13aa8e8880512f02cde2f284b13bfd077790fb46d
#6 DONE 0.3s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:191d9b9eb03690092a94789da79e1e5a8fad0880cee800c7b49d0a9173372256
#8 DONE 0.5s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:e12058aff37feeff9137fba1b8bb8d2874c2ba2d471c691fa7a2f9d14a5d76e8
#9 DONE 22.0s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:25bbafad0ba038dbd685c961bf3e97b99ec23132e640c706c6de579948f14210
#10 DONE 0.5s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:140a530db7f77a4ec97733f04d65f61698587bce7ac8612123d08e9b986aa3b1
#11 DONE 21.7s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:c98e219c11a3a2789f3bdd3883c5a93f6963a51d572928c69f8b87a376d9ab64
#13 DONE 0.2s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:25f46e11c297dcca5c6d45e81c1d57241c72adc9f610d24921336ecbe221bec8
#14 DONE 1.5s

#15 [stage-1  8/13] COPY benchmarks/jsoncpp_jsoncpp_fuzz_proto/benchmark.yaml /
#15 sha256:7e41716a8d075f9367ede90df4e1f57ba9a1cbdd0eaf7f9254355d048465426d
#15 DONE 0.6s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:17918bf924c311f5da0752a7eebd4b8dfe0cfd4d0d95b10157b76e7fa69ecc12
#16 DONE 1.7s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:481d7d87d1437e86110610fd675a6d67255d27cdfd34e01a888b8943e16438c6
#17 DONE 0.5s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:6dd75ccd2c49a0dd89dd0d3b3c38c17e9a902406d8c23c3eadbd79f4965ff98e
#18 1.305 Checking out commit 84faf557
#18 4.240 From https://github.com/open-source-parsers/jsoncpp
#18 4.240  * [new tag]         1.0.0      -> 1.0.0
#18 4.241  * [new tag]         1.1.0      -> 1.1.0
#18 4.241  * [new tag]         1.2.0      -> 1.2.0
#18 4.241  * [new tag]         1.3.0      -> 1.3.0
#18 4.242  * [new tag]         1.4.0      -> 1.4.0
#18 4.242  * [new tag]         1.4.1      -> 1.4.1
#18 4.242  * [new tag]         1.4.2      -> 1.4.2
#18 4.242  * [new tag]         1.4.3      -> 1.4.3
#18 4.243  * [new tag]         1.4.4      -> 1.4.4
#18 4.243  * [new tag]         1.5.4      -> 1.5.4
#18 4.244  * [new tag]         1.6.0      -> 1.6.0
#18 4.244  * [new tag]         1.6.1      -> 1.6.1
#18 4.244  * [new tag]         1.6.2      -> 1.6.2
#18 4.245  * [new tag]         1.6.5      -> 1.6.5
#18 4.245  * [new tag]         1.7.0      -> 1.7.0
#18 4.246  * [new tag]         1.7.1      -> 1.7.1
#18 4.246  * [new tag]         1.7.2      -> 1.7.2
#18 4.246  * [new tag]         1.7.3      -> 1.7.3
#18 4.247  * [new tag]         1.7.4      -> 1.7.4
#18 4.247  * [new tag]         1.7.5      -> 1.7.5
#18 4.248  * [new tag]         1.7.6      -> 1.7.6
#18 4.248  * [new tag]         1.7.7      -> 1.7.7
#18 4.248  * [new tag]         1.8.0      -> 1.8.0
#18 4.249  * [new tag]         1.8.1      -> 1.8.1
#18 4.249  * [new tag]         1.8.2      -> 1.8.2
#18 4.250  * [new tag]         1.8.3      -> 1.8.3
#18 4.250  * [new tag]         1.8.4      -> 1.8.4
#18 4.251  * [new tag]         1.9.0      -> 1.9.0
#18 4.251  * [new tag]         1.9.1      -> 1.9.1
#18 4.251  * [new tag]         1.9.2      -> 1.9.2
#18 4.255  * [new tag]         1.9.3      -> 1.9.3
#18 4.256  * [new tag]         1.9.4      -> 1.9.4
#18 4.256  * [new tag]         1.9.5      -> 1.9.5
#18 4.257  * [new tag]         svn-import -> svn-import
#18 4.267 error: pathspec '84faf557' did not match any file(s) known to git
#18 4.288 error: pathspec '84faf557' did not match any file(s) known to git
#18 4.304 error: pathspec '84faf557' did not match any file(s) known to git
#18 4.381 error: pathspec '84faf557' did not match any file(s) known to git
#18 4.389 error: pathspec '84faf557' did not match any file(s) known to git
#18 4.403 error: pathspec '84faf557' did not match any file(s) known to git
#18 4.418 error: pathspec '84faf557' did not match any file(s) known to git
#18 4.503 error: pathspec '84faf557' did not match any file(s) known to git
#18 4.704 Checkout unsuccessful.
#18 DONE 5.2s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:98cf30ce64c863afeebcaebc6c832a6217d7724c8e8fb9c0608d8ea20daec653
#19 DONE 1.8s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:e177d765f6ddb60919670fa26b7e7ad0826001e5ab5dbf6c1893fc50a68901f2
#20 1.413 Run fuzzer_build to build the target
#20 1.673 FUZZ_TARGET = jsoncpp_fuzz_proto
#20 1.674 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 1.674 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 1.690 Building benchmark jsoncpp_jsoncpp_fuzz_proto with fuzzer afl
#20 1.695 + mkdir -p build
#20 1.698 + cd build
#20 1.698 + cmake -DCMAKE_CXX_COMPILER=clang++ '-DCMAKE_CXX_FLAGS=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard' -DBUILD_SHARED_LIBS=OFF -G 'Unix Makefiles' ..
#20 2.320 -- The CXX compiler identification is Clang 14.0.0
#20 2.366 -- Detecting CXX compiler ABI info
#20 2.797 -- Detecting CXX compiler ABI info - done
#20 2.925 -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
#20 2.930 -- Detecting CXX compile features
#20 2.932 -- Detecting CXX compile features - done
#20 2.934 -- JsonCpp Version: 1.9.5
#20 2.995 -- Looking for C++ include clocale
#20 3.458 -- Looking for C++ include clocale - found
#20 3.465 -- Looking for localeconv
#20 3.917 -- Looking for localeconv - found
#20 3.918 -- Looking for C++ include sys/types.h
#20 4.343 -- Looking for C++ include sys/types.h - found
#20 4.345 -- Looking for C++ include stdint.h
#20 4.748 -- Looking for C++ include stdint.h - found
#20 4.750 -- Looking for C++ include stddef.h
#20 5.206 -- Looking for C++ include stddef.h - found
#20 5.207 -- Check size of lconv
#20 5.808 -- Check size of lconv - done
#20 5.809 -- Performing Test HAVE_DECIMAL_POINT
#20 6.271 -- Performing Test HAVE_DECIMAL_POINT - Success
#20 7.203 -- Found Python3: /usr/local/bin/python3.8 (found version "3.8.6") found components: Interpreter 
#20 7.216 -- Configuring done
#20 7.329 -- Generating done
#20 7.344 -- Build files have been written to: /src/jsoncpp/build
#20 7.351 + make
#20 7.419 [  7%] Building CXX object src/lib_json/CMakeFiles/jsoncpp_static.dir/json_reader.cpp.o
#20 18.73 [ 15%] Building CXX object src/lib_json/CMakeFiles/jsoncpp_static.dir/json_value.cpp.o
#20 26.42 [ 23%] Building CXX object src/lib_json/CMakeFiles/jsoncpp_static.dir/json_writer.cpp.o
#20 32.84 [ 30%] Linking CXX static library ../../lib/libjsoncpp.a
#20 32.89 [ 30%] Built target jsoncpp_static
#20 32.93 [ 38%] Building CXX object src/lib_json/CMakeFiles/jsoncpp_object.dir/json_reader.cpp.o
#20 43.90 [ 46%] Building CXX object src/lib_json/CMakeFiles/jsoncpp_object.dir/json_value.cpp.o
#20 51.59 [ 53%] Building CXX object src/lib_json/CMakeFiles/jsoncpp_object.dir/json_writer.cpp.o
#20 58.03 [ 53%] Built target jsoncpp_object
#20 58.04 [ 61%] Building CXX object src/jsontestrunner/CMakeFiles/jsontestrunner_exe.dir/main.cpp.o
#20 63.21 [ 69%] Linking CXX executable ../../bin/jsontestrunner_exe
#20 63.84 [ 69%] Built target jsontestrunner_exe
#20 63.86 [ 76%] Building CXX object src/test_lib_json/CMakeFiles/jsoncpp_test.dir/jsontest.cpp.o
#20 70.38 [ 84%] Building CXX object src/test_lib_json/CMakeFiles/jsoncpp_test.dir/fuzz.cpp.o
#20 73.09 [ 92%] Building CXX object src/test_lib_json/CMakeFiles/jsoncpp_test.dir/main.cpp.o
#20 98.95 [100%] Linking CXX executable ../../bin/jsoncpp_test
#20 99.69 Testing ValueTest/checkNormalizeFloatingPointStr: OK
#20 99.69 Testing ValueTest/memberCount: OK
#20 99.69 Testing ValueTest/objects: OK
#20 99.69 Testing ValueTest/arrays: OK
#20 99.69 Testing ValueTest/resizeArray: OK
#20 99.69 Testing ValueTest/resizePopulatesAllMissingElements: OK
#20 99.69 Testing ValueTest/getArrayValue: OK
#20 99.69 Testing ValueTest/arrayIssue252: OK
#20 99.69 Testing ValueTest/arrayInsertAtRandomIndex: OK
#20 99.69 Testing ValueTest/null: OK
#20 99.69 Testing ValueTest/strings: OK
#20 99.69 Testing ValueTest/bools: OK
#20 99.69 Testing ValueTest/integers: OK
#20 99.69 Testing ValueTest/nonIntegers: OK
#20 99.69 Testing ValueTest/compareNull: OK
#20 99.69 Testing ValueTest/compareInt: OK
#20 99.69 Testing ValueTest/compareUInt: OK
#20 99.69 Testing ValueTest/compareDouble: OK
#20 99.69 Testing ValueTest/compareString: OK
#20 99.69 Testing ValueTest/compareBoolean: OK
#20 99.69 Testing ValueTest/compareArray: OK
#20 99.69 Testing ValueTest/compareObject: OK
#20 99.69 Testing ValueTest/compareType: OK
#20 99.69 Testing ValueTest/CopyObject: OK
#20 99.69 Testing ValueTest/typeChecksThrowExceptions: OK
#20 99.69 Testing ValueTest/offsetAccessors: OK
#20 99.69 Testing ValueTest/StaticString: OK
#20 99.69 Testing ValueTest/WideString: OK
#20 99.69 Testing ValueTest/CommentBefore: OK
#20 99.70 Testing ValueTest/zeroes: OK
#20 99.70 Testing ValueTest/zeroesInKeys: OK
#20 99.70 Testing ValueTest/specialFloats: OK
#20 99.70 Testing ValueTest/precision: OK
#20 99.70 Testing ValueTest/searchValueByPath: OK
#20 99.70 Testing FastWriterTest/dropNullPlaceholders: OK
#20 99.70 Testing FastWriterTest/enableYAMLCompatibility: OK
#20 99.70 Testing FastWriterTest/omitEndingLineFeed: OK
#20 99.70 Testing FastWriterTest/writeNumericValue: OK
#20 99.70 Testing FastWriterTest/writeArrays: OK
#20 99.70 Testing FastWriterTest/writeNestedObjects: OK
#20 99.70 Testing StyledWriterTest/writeNumericValue: OK
#20 99.70 Testing StyledWriterTest/writeArrays: OK
#20 99.70 Testing StyledWriterTest/writeNestedObjects: OK
#20 99.70 Testing StyledWriterTest/multiLineArray: OK
#20 99.70 Testing StyledWriterTest/writeValueWithComment: OK
#20 99.70 Testing StyledStreamWriterTest/writeNumericValue: OK
#20 99.70 Testing StyledStreamWriterTest/writeArrays: OK
#20 99.70 Testing StyledStreamWriterTest/writeNestedObjects: OK
#20 99.70 Testing StyledStreamWriterTest/multiLineArray: OK
#20 99.70 Testing StyledStreamWriterTest/writeValueWithComment: OK
#20 99.70 Testing StreamWriterTest/writeNumericValue: OK
#20 99.70 Testing StreamWriterTest/writeArrays: OK
#20 99.70 Testing StreamWriterTest/writeNestedObjects: OK
#20 99.70 Testing StreamWriterTest/multiLineArray: OK
#20 99.70 Testing StreamWriterTest/dropNullPlaceholders: OK
#20 99.70 Testing StreamWriterTest/enableYAMLCompatibility: OK
#20 99.70 Testing StreamWriterTest/indentation: OK
#20 99.70 Testing StreamWriterTest/writeZeroes: OK
#20 99.70 Testing StreamWriterTest/unicode: OK
#20 99.70 Testing StreamWriterTest/escapeControlCharacters: OK
#20 99.70 Testing ReaderTest/parseWithNoErrors: OK
#20 99.70 Testing ReaderTest/parseObject: OK
#20 99.70 Testing ReaderTest/parseArray: OK
#20 99.71 Testing ReaderTest/parseString: OK
#20 99.71 Testing ReaderTest/parseComment: OK
#20 99.71 Testing ReaderTest/streamParseWithNoErrors: OK
#20 99.71 Testing ReaderTest/parseWithNoErrorsTestingOffsets: OK
#20 99.71 Testing ReaderTest/parseWithOneError: OK
#20 99.71 Testing ReaderTest/parseSpecialFloat: OK
#20 99.71 Testing ReaderTest/strictModeParseNumber: OK
#20 99.71 Testing ReaderTest/parseChineseWithOneError: OK
#20 99.71 Testing ReaderTest/parseWithDetailError: OK
#20 99.71 Testing ReaderTest/pushErrorTest: OK
#20 99.71 Testing ReaderTest/allowNumericKeysTest: OK
#20 99.71 Testing CharReaderTest/parseWithNoErrors: OK
#20 99.71 Testing CharReaderTest/parseWithNoErrorsTestingOffsets: OK
#20 99.71 Testing CharReaderTest/parseNumber: OK
#20 99.71 Testing CharReaderTest/parseString: OK
#20 99.71 Testing CharReaderTest/parseComment: OK
#20 99.71 Testing CharReaderTest/parseObjectWithErrors: OK
#20 99.71 Testing CharReaderTest/parseArrayWithErrors: OK
#20 99.71 Testing CharReaderTest/parseWithOneError: OK
#20 99.71 Testing CharReaderTest/parseChineseWithOneError: OK
#20 99.71 Testing CharReaderTest/parseWithDetailError: OK
#20 99.71 Testing CharReaderTest/parseWithStackLimit: OK
#20 99.71 Testing CharReaderTest/testOperator: OK
#20 99.71 Testing CharReaderStrictModeTest/dupKeys: OK
#20 99.71 Testing CharReaderFailIfExtraTest/issue164: OK
#20 99.71 Testing CharReaderFailIfExtraTest/issue107: OK
#20 99.71 Testing CharReaderFailIfExtraTest/commentAfterObject: OK
#20 99.71 Testing CharReaderFailIfExtraTest/commentAfterArray: OK
#20 99.71 Testing CharReaderFailIfExtraTest/commentAfterBool: OK
#20 99.71 Testing CharReaderFailIfExtraTest/parseComment: OK
#20 99.71 Testing CharReaderAllowDropNullTest/issue178: OK
#20 99.71 Testing CharReaderAllowNumericKeysTest/allowNumericKeys: OK
#20 99.71 Testing CharReaderAllowSingleQuotesTest/issue182: OK
#20 99.71 Testing CharReaderAllowZeroesTest/issue176: OK
#20 99.71 Testing CharReaderAllowSpecialFloatsTest/specialFloat: OK
#20 99.71 Testing CharReaderAllowSpecialFloatsTest/issue209: OK
#20 99.71 Testing EscapeSequenceTest/readerParseEscapeSequence: OK
#20 99.71 Testing EscapeSequenceTest/charReaderParseEscapeSequence: OK
#20 99.71 Testing EscapeSequenceTest/writeEscapeSequence: OK
#20 99.71 Testing BuilderTest/settings: OK
#20 99.71 Testing BomTest/skipBom: OK
#20 99.71 Testing BomTest/notSkipBom: OK
#20 99.71 Testing IteratorTest/convert: OK
#20 99.71 Testing IteratorTest/decrement: OK
#20 99.71 Testing IteratorTest/reverseIterator: OK
#20 99.71 Testing IteratorTest/distance: OK
#20 99.71 Testing IteratorTest/nullValues: OK
#20 99.71 Testing IteratorTest/staticStringKey: OK
#20 99.71 Testing IteratorTest/names: OK
#20 99.71 Testing IteratorTest/indexes: OK
#20 99.71 Testing IteratorTest/constness: OK
#20 99.71 Testing RValueTest/moveConstruction: OK
#20 99.71 Testing FuzzTest/fuzzDoesntCrash: OK
#20 99.71 Testing MemberTemplateAs/BehavesSameAsNamedAs: OK
#20 99.71 Testing MemberTemplateIs/BehavesSameAsNamedIs: OK
#20 99.71 Testing VersionTest/VersionNumbersMatch: OK
#20 99.71 All 119 tests passed
#20 99.72 [100%] Built target jsoncpp_test
#20 99.73 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -I../include /libAFL.a ../src/test_lib_json/fuzz.cpp -o /out/jsoncpp_fuzzer lib/libjsoncpp.a
#20 103.3 + cp /src/jsoncpp/src/test_lib_json/fuzz.dict /out/jsoncpp_fuzzer.dict
#20 103.3 + [[ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard != *sanitize=memory* ]]
#20 103.3 + rm -rf genfiles
#20 103.3 + mkdir genfiles
#20 103.3 + ../LPM/external.protobuf/bin/protoc json.proto --cpp_out=genfiles --proto_path=/src
#20 103.3 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -I genfiles -I .. -I ../libprotobuf-mutator/ -I ../LPM/external.protobuf/include -I ../include /libAFL.a /src/jsoncpp_fuzz_proto.cc genfiles/json.pb.cc /src/json_proto_converter.cc ../LPM/src/libfuzzer/libprotobuf-mutator-libfuzzer.a ../LPM/src/libprotobuf-mutator.a ../LPM/external.protobuf/lib/libprotobuf.a -o /out/jsoncpp_proto_fuzzer lib/libjsoncpp.a
#20 124.1 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 127.3s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:f29180876bc98196f599cb110eba4bd1ddaa33c2d505472dbb7b79e702d8424b
#21 writing image sha256:f29180876bc98196f599cb110eba4bd1ddaa33c2d505472dbb7b79e702d8424b done
#21 naming to gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:6a5be93e599a36537bf6ee2fa45457bbfc5a10e963b88661c649b42712665fff
#1 transferring dockerfile: 656B 0.0s done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:137362abc2aa9e9189eb4ae6d1569b687b783f7e48f5cb17eb82a31024471433
#2 transferring context: 2B done
#2 DONE 0.0s

#4 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:0be13cc299ea0e54ec5de825181e3bed3eb180c53e5a326522f59bc9b5a62000 done
#6 naming to gcr.io/fuzzbench/runners/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate
#5 sha256:aa273083fa59e8e9f8f9ddc9c96fb9bd8ae7e98ebc140bf52950b3971c53974b
#5 ERROR: gcr.io/fuzzbench/runners/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate:latest: not found
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:b40b4e9052566ebe735cc3f570cfb5065a92f31d5effc68763baa2a8c4f1c591
#1 transferring dockerfile: 3.17kB 0.0s done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:3d7a0feedfc19c4c6955ecc821b51702f68cb3476d9ad1c7c024102838b9e816
#2 transferring context: 34B 0.0s done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/runners/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate:latest
#4 sha256:136f7a3ce61ae4e23c00c83ecb52cd82da5903d22f5beb4f94f5e4755152906c
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto:latest
#3 sha256:8970d212f226380b4ad2b55382489d2a8b6bfe955205a85d2f692e8169387fa4
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:d06420ab5cea7e0c3936b13460a97f262ac469879f348bc0d41bd174b9aa9d48
#12 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/jsoncpp_jsoncpp_fuzz_proto
#5 sha256:b18da54ee07e1b3e127c4fc6421ec9b320ba945cfb2fc795418bfbe598e157ae
#5 ERROR: gcr.io/fuzzbench/runners/afl/jsoncpp_jsoncpp_fuzz_proto:latest: not found

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate
#6 sha256:d671d3356d28284de1804b47c2912038e2393619911069c83250d339f7ffe826
#6 DONE 0.0s

#12 [internal] load build context
#12 sha256:d06420ab5cea7e0c3936b13460a97f262ac469879f348bc0d41bd174b9aa9d48
#12 transferring context: 19.01MB 1.6s done
#12 DONE 1.7s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto
#10 sha256:2deea39d10d1a3163cd966b6ed6d46ec3e55d5bbbc2b68e6a66ab14901d94fa3
#10 DONE 1.8s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:f0ae7b7de33a13a286cd45c788955d1346cc1a2ca3a6bfd2f4d55db6ca3bf677
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:827bf60d6d3ce9990eae0e1e607b723efee3e2e9e59ae7b14b6db9278dbdc95d
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:ebca6c92db47398ec7d2598549d23811a67988328e51adaac521dfd3acde526c
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:3284c2bf7e5c046513eeb2c8ad5db4b3bc0031c69491ab35ef5e481f19ce9611
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:ae116e803beccc112f4497d24a58d935d6424cd4dc4cdb9e8022ffef57e0f806
#13 DONE 1.3s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:e60253aa86369968f8ed01b308324be5a728458a10ed51a69acedb21e9a56fc9
#14 DONE 0.7s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:d551a4f5ab3375e28a325429812e95b5e5362b6fc500c3d1e556a225c3b99cb7
#15 DONE 1.3s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:9b7a6ff503f5048ce894e414279a30a76cdc2076515afb689c272cbff3d781a3
#16 DONE 1.3s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:c1e6a6a5d16bfd8f3f27e20479e681753b7d5cf2f8ecac3a4b1427b405101c4d
#17 DONE 0.2s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:0952b165a989124a0a59a534fa4c21eba51ecb33e85c7039997fbf2e870d307c
#18 DONE 0.2s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:29a245d075c30885830914964bc83daa84cf62b261b63fc9d703e14b5257b950
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:a1e560c75d37c81c46910e3e0f951858624fe6fa7e287f128d346a5216d021e1
#20 DONE 1.2s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:129f19877612b794740613aa2f8d75a8ccc2359d654310ec5a608b7e59da0ac1
#21 writing image sha256:129f19877612b794740613aa2f8d75a8ccc2359d654310ec5a608b7e59da0ac1 done
#21 naming to gcr.io/fuzzbench/runners/afl/jsoncpp_jsoncpp_fuzz_proto done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/jsoncpp_jsoncpp_fuzz_proto:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
/bin/sh: 1: source: not found
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7fb29f437ee0> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
#1 [internal] load build definition from Dockerfile
#1 sha256:b1161f4e4aaaf2971a81d9feb61fe6e104213e98da9771844ebc58bc2add0309
#1 transferring dockerfile: 32B done
#1 DONE 0.2s

#2 [internal] load .dockerignore
#2 sha256:b432ce73fca0b02b625fe10b9c047455259d5e3f4beb886801bb9867638c38ed
#2 transferring context: 2B done
#2 DONE 0.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#4 [1/7] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#4 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#4 DONE 0.0s

#12 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/jsoncpp_jsoncpp_fuzz_proto
#12 sha256:d0962955db46d66e9a6b86c9fedfd7b52ec1c72412a56193ef6e2e282437accf
#12 DONE 0.0s

#10 [internal] load build context
#10 sha256:51394327e059fa41b3a45dc8ecd681fb6fd9313ba9293e9442e759844e89d757
#10 transferring context: 186B done
#10 DONE 0.0s

#9 [6/7] RUN (mkdir LPM && cd LPM && cmake ../libprotobuf-mutator -GNinja -DLIB_PROTO_MUTATOR_DOWNLOAD_PROTOBUF=ON -DLIB_PROTO_MUTATOR_TESTING=OFF -DCMAKE_BUILD_TYPE=Release && ninja)
#9 sha256:f95fc51344b5b09afb951403177c041f561c9cbadcd1c6e31703cd8cf88eb806
#9 CACHED

#7 [4/7] WORKDIR jsoncpp
#7 sha256:b836ad85ab3ca98749054787ac991206c2eae20ace0dc8dbffd6493afc451ae8
#7 CACHED

#5 [2/7] RUN apt-get update -y && apt-get install -y curl wget     binutils cmake ninja-build liblzma-dev libz-dev pkg-config autoconf libtool
#5 sha256:2227ad69c22e20c5eb3e7a1167346cff9688f6d2fc262c140f4ffc66ac7a407f
#5 CACHED

#6 [3/7] RUN git clone --depth 1 https://github.com/open-source-parsers/jsoncpp
#6 sha256:11565df669197e7e0b15ea56d81c08de6ef819a247eece3a2d409323a620deda
#6 CACHED

#8 [5/7] RUN git clone --depth 1 https://github.com/google/libprotobuf-mutator.git
#8 sha256:fdd75f8b520314a69fa0cd4730e8d9b5045e6881cd6301f0f398495c7d3bbcc9
#8 CACHED

#11 [7/7] COPY build.sh *.proto *.h *.cc /src/
#11 sha256:2fdf038f2ccfa0050d7723c15d31f84f8396cae02fd9e41e7877642cbcf8afeb
#11 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:7a6a2a46ee7c02a5663896ccc36ff756744f26f7d5867c45fea550a29578c195
#13 writing image sha256:7a6a2a46ee7c02a5663896ccc36ff756744f26f7d5867c45fea550a29578c195 done
#13 naming to gcr.io/fuzzbench/builders/benchmark/jsoncpp_jsoncpp_fuzz_proto done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:5949906c8f230c6a6fe8cab9752a254d922eff30cdd185e935c39dd853d591bd
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:2b6b24d1907d85bbe712e878f77c920de92b2541ef94fa4b92b785558a400ecb
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/jsoncpp_jsoncpp_fuzz_proto:latest
#3 sha256:c7631b2b33fa32d6db65849a3c3a8e125079bcfd19a3153b16cbabc10d0b38d6
#3 DONE 0.0s

#6 importing cache manifest from gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate
#6 sha256:ef01c098b4e7640833b21308791558581fdfdca578eca1ff74aba12435af21db
#6 DONE 0.0s

#7 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/jsoncpp_jsoncpp_fuzz_proto
#7 sha256:4c0e0b2be8b0640efb0856ec1eeec39c01164afacafb87616944f4949f14aa79
#7 DONE 0.0s

#4 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#4 sha256:739172046af9a6b756822d57ec29785c3672775965c2f03452804853f7df74e4
#4 CACHED

#5 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#5 sha256:bea873750b5bdb2dfac6c97120679cb623b2d457244489cb9d8aece8812f4c8a
#5 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:ac3d1c906f69cd0b5ad5e8e3decea8b6bc276ee80759ecd4e3ff75e2e31cbed3 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:bf05f1eb5c5cb9ae73a0e38a123c622cc4182fa0e7711ea7f2ce97e810387c93
#2 transferring context:
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:c8f9fa54e3f2fe97eb53a98bfc40ad418544676e0fd9d24952b1d8f667cc317c
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.2s

#2 [internal] load .dockerignore
#2 sha256:bf05f1eb5c5cb9ae73a0e38a123c622cc4182fa0e7711ea7f2ce97e810387c93
#2 transferring context: 34B done
#2 DONE 0.7s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:932034fd4409c66b0e4baa166c33e0f5fc11a62af447585f08d1146e87946e4c
#8 transferring context: 559B 0.4s done
#8 DONE 0.4s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:037062a735e18b352efa593a8c9bcc871b868d0e28bc91f239b4f765b123f428
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:721648a4e1ec1a548c61c3f0842dd160ce01ad60fb1ebed4fcc00f846d799e82
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:2369f2242c189fd59f5d12460a30f9e8dab8431a6a020177d01c3792f355d071
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:e0c59a669686f573a4134bd0ae887769f524fb2c5a7bd57189d013f233e10098
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:e1fa3f275ef7ad2553590e7204281a5a2ad685bd7462476fda6757b0aea51a9c 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:ac9388c13aea17c58cf11f2887da3b91583cfee0cf79649b6d72ccf3fd88c01d
#1 transferring dockerfile: 2.22kB 0.0s done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:a31840983b3e0b137a4df50ce54ef8a7860d73247bdadad77ae905be7b6cff2c
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate:latest
#4 sha256:b864b84284067ca49897913ad0d3b9bda93d8797d59c3beda1e0f914efca4b8c
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:c150d1e464445138d33f112b09e4cae0dcc8d5204607211a285feef3fece8504
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate
#6 sha256:08f74f9ba7af3b13cdf3d8f13aa8e8880512f02cde2f284b13bfd077790fb46d
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto
#5 sha256:4ed6ae8268cf6af2ca5e62238c9af4d36d6da6d457e4a2809c9a4cf2905b876c
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:c150d1e464445138d33f112b09e4cae0dcc8d5204607211a285feef3fece8504
#12 transferring context: 669.90kB 0.2s done
#12 DONE 0.3s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:32e6ca5b17bdbb1cdc88f7d4308f81d22981640485c617fa006be390dfaaf794
#13 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:25bbafad0ba038dbd685c961bf3e97b99ec23132e640c706c6de579948f14210
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:140a530db7f77a4ec97733f04d65f61698587bce7ac8612123d08e9b986aa3b1
#11 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:29deff7b21d949e51591e235b045fe982f3c9d5da6ddc5d68643ee51de8a5f84
#16 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:6ca38692db134d4c80104e0b8bfb11fd3af36ec7f9607ad2e7244641fb543cd9
#17 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:191d9b9eb03690092a94789da79e1e5a8fad0880cee800c7b49d0a9173372256
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:e12058aff37feeff9137fba1b8bb8d2874c2ba2d471c691fa7a2f9d14a5d76e8
#9 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:3efe14cd2660cc200e030558f887e7ee1f827e63a450744ec4171b87c08bb949
#14 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:5a062d93762b2695dc18d1e255e6c869e48dcdbe359f3824ae5db4a14a767be0
#18 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:97bdb4be49cb02789ce700a813f511d1958a38ef0857631238b3fe28778bfabc
#19 CACHED

#15 [stage-1  8/13] COPY benchmarks/jsoncpp_jsoncpp_fuzz_proto/benchmark.yaml /
#15 sha256:e40c5156184506ab9171a13c5db43bfae04bf923dad7af6f34c4a40cb30018f9
#15 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:8ee7f59a2ce8555486ad5176109227bf2090a9f657af0a55b302c0052b43fc98
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:f29180876bc98196f599cb110eba4bd1ddaa33c2d505472dbb7b79e702d8424b 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:5ff34f363876d244f7b82e2f7fdd87a392b411642fd890e5729a38484f433d9e
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:34730bef76b10e6bdcac5097a28c6c51584d831f96d25ad341dc86029e2a40a9
#2 transferring context: 2B done
#2 DONE 0.1s

#4 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate
#5 sha256:aa273083fa59e8e9f8f9ddc9c96fb9bd8ae7e98ebc140bf52950b3971c53974b
#5 DONE 0.0s

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:0be13cc299ea0e54ec5de825181e3bed3eb180c53e5a326522f59bc9b5a62000
#6 writing image sha256:0be13cc299ea0e54ec5de825181e3bed3eb180c53e5a326522f59bc9b5a62000 done
#6 naming to gcr.io/fuzzbench/runners/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:e7ddfb9a11397005d28c2328766a7f4ca20b9c3d3b46626b7104fc984dc4d132
#1 transferring dockerfile: 3.17kB 0.0s done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:e6237a9b892c0c7567340fa31e226b8f6a7b706f6e209552bd6878e86a03e052
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto:latest
#3 sha256:8970d212f226380b4ad2b55382489d2a8b6bfe955205a85d2f692e8169387fa4
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/runners/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate:latest
#4 sha256:136f7a3ce61ae4e23c00c83ecb52cd82da5903d22f5beb4f94f5e4755152906c
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/jsoncpp_jsoncpp_fuzz_proto
#5 sha256:b18da54ee07e1b3e127c4fc6421ec9b320ba945cfb2fc795418bfbe598e157ae
#5 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/jsoncpp_jsoncpp_fuzz_proto-intermediate
#6 sha256:d671d3356d28284de1804b47c2912038e2393619911069c83250d339f7ffe826
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/jsoncpp_jsoncpp_fuzz_proto
#10 sha256:2deea39d10d1a3163cd966b6ed6d46ec3e55d5bbbc2b68e6a66ab14901d94fa3
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:eddee482bba1e7e40c0e3f2fbcb7518782cff0b3934c2b58bef3bfc4523b06bb
#12 transferring context: 19.01MB 1.6s done
#12 DONE 1.7s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:047270971abaeb6d20bc05be7e84259d71f643331134fd1a30e0fe5fd1b5c0e7
#13 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:54dd3cf7bccabc14f8c4b4f9165d27e157b77e3c4be8b6d9454e520ba8c94a36
#15 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:a3ff07925cf5de9d3370239d1ff9bbc6e0a6ed0baad0590c4b95c58ccea9c5a4
#17 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:3a4ec0f611be54170c4c5d8be44a6e35b41d67b4cdf913e164d42f3c0133671b
#18 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:3284c2bf7e5c046513eeb2c8ad5db4b3bc0031c69491ab35ef5e481f19ce9611
#11 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:5240ca588ccba77bb09a7da689c9f2367b69ef1ae5f29a8225b835984d91ceca
#19 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:f0ae7b7de33a13a286cd45c788955d1346cc1a2ca3a6bfd2f4d55db6ca3bf677
#7 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:53fe0af42e7cc7e039b5280522f7a9a9a358a725df28d147b16a8da1492bf06a
#16 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:28491c0d2f4ae65027a8dc15e7f6cf9731aa41678313da30be041cf56ff144ae
#14 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:827bf60d6d3ce9990eae0e1e607b723efee3e2e9e59ae7b14b6db9278dbdc95d
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:ebca6c92db47398ec7d2598549d23811a67988328e51adaac521dfd3acde526c
#9 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:6c72ebd6276bcd399f38ae98ac166cf0cf949af3e51ca004204f36f4dc96d4f6
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:129f19877612b794740613aa2f8d75a8ccc2359d654310ec5a608b7e59da0ac1
#21 writing image sha256:129f19877612b794740613aa2f8d75a8ccc2359d654310ec5a608b7e59da0ac1 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/jsoncpp_jsoncpp_fuzz_proto done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7fc4a718bee0> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
