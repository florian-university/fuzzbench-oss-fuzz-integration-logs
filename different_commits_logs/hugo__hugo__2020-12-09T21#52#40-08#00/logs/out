WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: hugo_hugo.
INFO:root:Please run "make test-run-afl-hugo_hugo" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:4ffa1e6db1e07b0f771349962c186d1c5dba9bd8039a14f12831588aaf66a33c
#1 transferring dockerfile: 839B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:b428c4f1f488fb82a9eed28ddab1c4f3f0d470f24581ee0e3f26ef807d73bd87
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#7 [internal] load build context
#7 sha256:781f1104f1eb862fac0ca5fcd7a3b1af90c37480ab26dacb5f4581f607d9fdf5
#7 DONE 0.0s

#5 [1/4] FROM gcr.io/oss-fuzz-base/base-builder@sha256:f4e5ea12494fab091c5d830cf803b3421f2860f729b9d1b07da44924396cf8cf
#5 sha256:ef290950573a2779ee526af357b28fbddfc20d7409aa51f58f777c9e972cba29
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/hugo_hugo
#4 sha256:76c92933fc233b921e4e884daa1427650e966a6508f2400b5a76020349e894d6
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/hugo_hugo:latest: not found

#5 [1/4] FROM gcr.io/oss-fuzz-base/base-builder@sha256:f4e5ea12494fab091c5d830cf803b3421f2860f729b9d1b07da44924396cf8cf
#5 sha256:ef290950573a2779ee526af357b28fbddfc20d7409aa51f58f777c9e972cba29
#5 CACHED

#6 [2/4] RUN git clone https://github.com/gohugoio/hugo
#6 sha256:0423c60e73ecb57aed7a0313d152976543e1ddca67a3c02717f5c10be10cae03
#6 ...

#7 [internal] load build context
#7 sha256:781f1104f1eb862fac0ca5fcd7a3b1af90c37480ab26dacb5f4581f607d9fdf5
#7 transferring context: 926B done
#7 DONE 0.3s

#6 [2/4] RUN git clone https://github.com/gohugoio/hugo
#6 sha256:0423c60e73ecb57aed7a0313d152976543e1ddca67a3c02717f5c10be10cae03
#6 0.562 Cloning into 'hugo'...
#6 DONE 12.1s

#8 [3/4] COPY build.sh /src/
#8 sha256:f0d746dd4aec98f4e216bf4120322f8b399354ff45e180cc79d5e29a4b68d4fe
#8 DONE 0.5s

#9 [4/4] WORKDIR /src/
#9 sha256:420957f81862dc9cba2155902034ab25a9b648e6b1841eeaa8c99515baed5122
#9 DONE 0.3s

#10 exporting to image
#10 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#10 exporting layers done
#10 writing image sha256:5adadec345c13355ba68f93225882d8ca8f4da834c21f24270a5ce4d81e1e7b7 done
#10 naming to gcr.io/fuzzbench/builders/benchmark/hugo_hugo done
#10 DONE 0.2s

#11 exporting cache
#11 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#11 preparing build cache for export done
#11 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/hugo_hugo:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:34dcdb917fee706de7c560948620a0ae7fb0626b3c6e157e8770a14eaa08b7a3
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:6749cc5d18b3d4ae0af3c450421d919fe9481c4413b7a9cbd2fb28115638d4ec
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/hugo_hugo:latest
#3 sha256:b9072d43eab7df1d71d1491c0ae5806481818210b1c97cb1303167635d382e6a
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/hugo_hugo
#5 sha256:dbc4af59ae18410c4a8f6a622fa44074058b54c1a6f3b6902cbccd8aee337a0a
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/hugo_hugo-intermediate
#4 sha256:59d3fd583b19ff7780aecfb381b1b3c91617325c8881f4a8a9faadb0d714d89e
#4 ERROR: gcr.io/fuzzbench/builders/afl/hugo_hugo-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/hugo_hugo
#5 sha256:dbc4af59ae18410c4a8f6a622fa44074058b54c1a6f3b6902cbccd8aee337a0a
#5 DONE 0.5s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:66ace605f0be442cc7d7cedb91ee37bed490dd6b4a3866df9ad27eb72963c99d
#6 0.366 Cloning into '/afl'...
#6 1.123 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.123 
#6 1.123 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.123 changes and commit them, and you can discard any commits you make in this
#6 1.123 state without impacting any branches by switching back to a branch.
#6 1.123 
#6 1.123 If you want to create a new branch to retain commits you create, you may
#6 1.123 do so (now or later) by using -c with the switch command. Example:
#6 1.123 
#6 1.123   git switch -c <new-branch-name>
#6 1.123 
#6 1.123 Or undo this operation with:
#6 1.123 
#6 1.123   git switch -
#6 1.123 
#6 1.123 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.123 
#6 1.123 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.147 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.148 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.323 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.328 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.694 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.014 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.451 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.602 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.004 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.242 ln -sf afl-as as
#6 5.244 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.246 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.247 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.2s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:56311d505c7b0457319682b2dac406fc801cd00570270ee5d7a98c854547d862
#7 0.728 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.728 Get:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#7 0.728 Hit:3 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.813 Get:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#7 0.866 Get:5 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#7 1.284 Get:6 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [827 kB]
#7 1.392 Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [752 kB]
#7 1.448 Get:8 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1973 kB]
#7 1.594 Get:9 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1134 kB]
#7 1.671 Get:10 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [464 kB]
#7 2.009 Get:11 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [840 kB]
#7 2.147 Get:12 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1546 kB]
#7 2.281 Get:13 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [657 kB]
#7 2.531 Fetched 8529 kB in 2s (4628 kB/s)
#7 2.531 Reading package lists...
#7 4.155 Reading package lists...
#7 5.573 Building dependency tree...
#7 5.783 Reading state information...
#7 6.031 wget is already the newest version (1.20.3-1ubuntu2).
#7 6.031 0 upgraded, 0 newly installed, 0 to remove and 3 not upgraded.
#7 6.036 --2022-02-16 03:07:38--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 6.039 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.109.133, 185.199.110.133, 185.199.111.133, ...
#7 6.051 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.109.133|:443... connected.
#7 6.073 HTTP request sent, awaiting response... 200 OK
#7 6.247 Length: 9177 (9.0K) [text/plain]
#7 6.247 Saving to: '/afl/afl_driver.cpp'
#7 6.247 
#7 6.247      0K ........                                              100% 11.3M=0.001s
#7 6.248 
#7 6.248 2022-02-16 03:07:39 (11.3 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 6.248 
#7 7.967 ar: creating /libAFL.a
#7 DONE 8.0s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:b5f05264d0237d49b14235fb121625cb7401b082a6f28c2718cf8bcdf37a1153
#8 writing image sha256:b5f05264d0237d49b14235fb121625cb7401b082a6f28c2718cf8bcdf37a1153 done
#8 naming to gcr.io/fuzzbench/builders/afl/hugo_hugo-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/hugo_hugo-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:7f40dbb0fce720a1f30ea09ea512118fe0b4fdb8b1a84cd17764fba1841e573a
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:210ed255df97c4c7942f1ceae4d7907ca2af46c61c610faa83785b4b4dc54bae
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:51c57b2fe9d944b876e71aecc7f268ffcf51c7a80fe9ba11495ed32a69af14ed
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:62ff5cc7070b9447375eb2365cbbea2f12a10be5ad99e69c13f87c5a05c82744
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:65363fda170ca16ae43abb52049fde33e1fd6482fbfd22cc7ecd1b0d43ae4220
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:6a8c8c30eb4710e7a6d3c10fc148d26a1769ba06b593919b31ad1b317523f3f6
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:67bcdf5cea16eccc8ecca1daa9e41901e6d28fdd457ed3bfd04d2921ddb50dfc
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:3c7430ab635e40a4471dda4436493c3a2388b0837239830205e6a86e440c5145
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:6a353c457da37ac0f8482fb6d05035e66d2e7f3f2bf4292e1342173b75f14a3e
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/hugo_hugo-intermediate:latest
#3 sha256:a1747e088fe699a3f1772ed6cc72ed7ba29130fbd40fc550653c86f87052b1fa
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:8348616b4b30dba18bc8e30970fb2c7d057f1f4f8be84b83ea565d5d2be06663
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/hugo_hugo-intermediate
#6 sha256:7177f9f1f98707e4acec2749ff4a82a345f7775c60c555db1c6c156653ec31b7
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/hugo_hugo
#5 sha256:a53fa89192e3d10f7595cfbfc0a4a5f7e0b0249fde80f3504286d4fd72d8881b
#5 ERROR: gcr.io/fuzzbench/builders/afl/hugo_hugo:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:8348616b4b30dba18bc8e30970fb2c7d057f1f4f8be84b83ea565d5d2be06663
#12 transferring context: 669.85kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/hugo_hugo-intermediate
#6 sha256:7177f9f1f98707e4acec2749ff4a82a345f7775c60c555db1c6c156653ec31b7
#6 DONE 0.4s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:f3cf56516024d223ed5103684de664331e9ac461619e78c289d1410d469653aa
#8 DONE 0.5s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:56fe8cea95d8c24cd4c967c21a06f865afabed975dc55c5f1516caf7dcccb414
#9 DONE 12.2s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:ffb1fdb0903fd61a7bf902a8b9b29ed239ed917542e2cb19f69fa0159a9331eb
#10 DONE 0.3s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:783cce8bc2a99fd3ec1c47ce830d26ff94fc894eef2af9941c6bdad7e841cca2
#11 DONE 17.4s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:4de970018b028f04feff3177f9ac0b5141e39a4b88a8cca00727fd13f0960f20
#13 DONE 0.9s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:3ef5025d71c46891c56e181c3488d995bf520f861b019791b994df7559c9ccdd
#14 DONE 0.8s

#15 [stage-1  8/13] COPY benchmarks/hugo_hugo/benchmark.yaml /
#15 sha256:a78d12995c7274ba2d79541b4b9e77d6b8e513478d1302dff72014c55e027025
#15 DONE 0.3s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:c5bfbee18b8e5e5d95f55572d1af6afa32af28c1d4f0d0cf4b16b33397284a24
#16 DONE 0.5s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:8023c938fb87936d3babb2fb31023e90cdf3c687da65fa48df31a0fa82c915a5
#17 DONE 0.1s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:16054fd12b9e3cbe6dcfe5405432de78c7401b582f99802976b27adb53fe3461
#18 0.549 Checking out commit 1d5a2cd8
#18 0.557 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 0.563 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 0.570 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 0.610 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 0.696 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 1.061 Checkout unsuccessful.
#18 DONE 1.6s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:8024113e5a69f0a8906a43ec45d7e532f3a35ffdcb582530e32a1449a3ebc996
#19 DONE 0.6s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:176a9bc22a55053fb5fec8f7f05950d98324440fb4a864b000a2a62f73897e92
#20 0.529 Run fuzzer_build to build the target
#20 0.655 FUZZ_TARGET = hugo
#20 0.655 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.655 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.674 Building benchmark hugo_hugo with fuzzer afl
#20 0.677 + mkdir /src/github.com/gohugoio
#20 0.679 mkdir: cannot create directory ‘/src/github.com/gohugoio’: No such file or directory
#20 0.680 Traceback (most recent call last):
#20 0.680   File "<string>", line 1, in <module>
#20 0.680   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 0.680     utils.build_benchmark()
#20 0.680   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 0.680     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 0.680   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 0.681     raise CalledProcessError(retcode, cmd)
#20 0.681 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/hugo_hugo:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2695387: .afl-hugo_hugo-builder] Error 1
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:c06c24bc41b7e8824be1b18f2779d78f552d022f968219d032be2949106ab82b
#1 transferring dockerfile: 32B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:97a7a3c15078108dcfec66130fd57164e82edd64100e57990bedb6647bbdf9d0
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#5 [1/4] FROM gcr.io/oss-fuzz-base/base-builder@sha256:f4e5ea12494fab091c5d830cf803b3421f2860f729b9d1b07da44924396cf8cf
#5 sha256:ef290950573a2779ee526af357b28fbddfc20d7409aa51f58f777c9e972cba29
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/hugo_hugo
#4 sha256:76c92933fc233b921e4e884daa1427650e966a6508f2400b5a76020349e894d6
#4 DONE 0.0s

#7 [internal] load build context
#7 sha256:1846fee020c44d9e918298a4dd1f4433642ef081761b4a93844154731190c7b4
#7 transferring context: 30B done
#7 DONE 0.0s

#8 [3/4] COPY build.sh /src/
#8 sha256:8d5f187097865e9049c2f4be712a7f34c1876a6341c3ad229988c776f59b4f61
#8 CACHED

#6 [2/4] RUN git clone https://github.com/gohugoio/hugo
#6 sha256:0423c60e73ecb57aed7a0313d152976543e1ddca67a3c02717f5c10be10cae03
#6 CACHED

#9 [4/4] WORKDIR /src/
#9 sha256:4f89a3eedff6cc709d08e19821e95c7d43ce439d3104ec8460fd400f4baa4594
#9 CACHED

#10 exporting to image
#10 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#10 exporting layers done
#10 writing image sha256:5adadec345c13355ba68f93225882d8ca8f4da834c21f24270a5ce4d81e1e7b7 done
#10 naming to gcr.io/fuzzbench/builders/benchmark/hugo_hugo done
#10 DONE 0.2s

#11 exporting cache
#11 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#11 preparing build cache for export done
#11 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:d472a4e982697d496beedf36ee5b891b04b6d4f6fb8bc87381deaa11e2e93df2
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:193965608c05ee1dc8cbe7200f31dbc180db680c18cfe66db9b33828301a3ed4
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/hugo_hugo:latest
#3 sha256:b9072d43eab7df1d71d1491c0ae5806481818210b1c97cb1303167635d382e6a
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/hugo_hugo-intermediate
#4 sha256:59d3fd583b19ff7780aecfb381b1b3c91617325c8881f4a8a9faadb0d714d89e
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/hugo_hugo
#5 sha256:dbc4af59ae18410c4a8f6a622fa44074058b54c1a6f3b6902cbccd8aee337a0a
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:66ace605f0be442cc7d7cedb91ee37bed490dd6b4a3866df9ad27eb72963c99d
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:56311d505c7b0457319682b2dac406fc801cd00570270ee5d7a98c854547d862
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:b5f05264d0237d49b14235fb121625cb7401b082a6f28c2718cf8bcdf37a1153 done
#8 naming to gcr.io/fuzzbench/builders/afl/hugo_hugo-intermediate done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:742e22a8eb278e2f7990afe45aa80dcdd4d53ec0caa46412b07d80c4f73068c9
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:0340070be46e55cedc6fed2b8879e6f34335396ad23aa4d119af739efe309dbe
#2 transferring context: 34B done
#2 DONE 0.3s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:c438704961e719e911676d2ef9f792f484a5019c13680b669809230293fc8e40
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:9070e560acb0254e6457257f45e1c146684475394cdd5ff40553d6b65d9528ca
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:8d46c47eab53ee3270db03f3f19daf2d1f3df3d46351af06494e99233472b7e7
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:b01126220ab6a46627e8cadc763412431b3431b4cfa190a179745cb97dc78408
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:86cff9b2503ab0291a59aaa5691510dab897b2472984bbebcfaa0cfa5ce094fb
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.2s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:3bd1f4980fa6dc738a4cb377ab7846137aeabdf83e6b96a19268d7063b9f7ff1
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:537e6690f3106d6b7ccb1eeebf15aac0005dc55de5fb88b49c4edbc0faf8c90b
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/hugo_hugo-intermediate:latest
#3 sha256:a1747e088fe699a3f1772ed6cc72ed7ba29130fbd40fc550653c86f87052b1fa
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:45cd3d2257b6c1a02a74a657eef2db5782e3ec155ffd8bac8933b1f10cbd8044
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/hugo_hugo-intermediate
#6 sha256:7177f9f1f98707e4acec2749ff4a82a345f7775c60c555db1c6c156653ec31b7
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/hugo_hugo
#5 sha256:a53fa89192e3d10f7595cfbfc0a4a5f7e0b0249fde80f3504286d4fd72d8881b
#5 ERROR: gcr.io/fuzzbench/builders/afl/hugo_hugo:latest: not found

#12 [internal] load build context
#12 sha256:45cd3d2257b6c1a02a74a657eef2db5782e3ec155ffd8bac8933b1f10cbd8044
#12 transferring context: 669.85kB 0.1s done
#12 DONE 0.2s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:ffb1fdb0903fd61a7bf902a8b9b29ed239ed917542e2cb19f69fa0159a9331eb
#10 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:fd19d05c9dcc81d8d60b1368043fe9cb035b835f6859c76f67ea9acaa52cc895
#18 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:56fe8cea95d8c24cd4c967c21a06f865afabed975dc55c5f1516caf7dcccb414
#9 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:29c412d7a3a48bdac78e45d3cff56c1e81665bfd2df299b9c5be707d60208f49
#13 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:de14a8a4267e348e5dddc0846c77822d35fb1cdfa311cdf91e308db6d125c4f3
#16 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:f3cf56516024d223ed5103684de664331e9ac461619e78c289d1410d469653aa
#8 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:fb00eb1c68748f5db32b6d9344d406fd96614b10b726d5dd22f7abe7eb8469e2
#14 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:783cce8bc2a99fd3ec1c47ce830d26ff94fc894eef2af9941c6bdad7e841cca2
#11 CACHED

#15 [stage-1  8/13] COPY benchmarks/hugo_hugo/benchmark.yaml /
#15 sha256:0329ecd11beb7a75285eb4c590543d5d454c411d88a46854f78fe9191385bbab
#15 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:cb85fe1d03a33208d6d25913627fcbc703063893a6b0686a6f50305c52631280
#17 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:b984ccef7fb07142b1a932d94a0e8a82a44793ade857201332db997a7f40f39c
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:b304c1bc912304ca31ef650bcba9c7df41ce50f655648d71f76ef767ee815fd1
#20 0.517 Run fuzzer_build to build the target
#20 0.637 FUZZ_TARGET = hugo
#20 0.637 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.637 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.648 Building benchmark hugo_hugo with fuzzer afl
#20 0.651 + mkdir /src/github.com/gohugoio
#20 0.653 mkdir: cannot create directory ‘/src/github.com/gohugoio’: No such file or directory
#20 0.654 Traceback (most recent call last):
#20 0.654   File "<string>", line 1, in <module>
#20 0.654   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 0.654     utils.build_benchmark()
#20 0.654   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 0.655     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 0.655   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 0.655     raise CalledProcessError(retcode, cmd)
#20 0.655 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/hugo_hugo:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2695387: .afl-hugo_hugo-builder] Error 1
