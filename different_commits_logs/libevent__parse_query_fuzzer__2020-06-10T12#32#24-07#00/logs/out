WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: libevent_parse_query_fuzzer.
INFO:root:Please run "make test-run-afl-libevent_parse_query_fuzzer" to test integration.
#2 [internal] load .dockerignore
#2 sha256:a8e023ce96e6ed262c14dd6f7dd84e1b2ed66e9a9b39d1bb82098a01bf1bc1c0
#2 transferring context: 2B done
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:f92913541ce84b5ffa2b6940c407e5204c762c64390f9191b18ca4b879256a61
#1 transferring dockerfile: 963B done
#1 DONE 0.9s

#2 [internal] load .dockerignore
#2 sha256:a8e023ce96e6ed262c14dd6f7dd84e1b2ed66e9a9b39d1bb82098a01bf1bc1c0
#2 DONE 1.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.8s

#9 [internal] load build context
#9 sha256:08991bed46628b91e6412e259efef8bd9fe94c841dc4b275f1b168960d311aae
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer
#4 sha256:bfd30a4ae54d200a9222807841c872c7c1079cdee0279ffc9aca684e3bcf9117
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer:latest: not found

#9 [internal] load build context
#9 sha256:08991bed46628b91e6412e259efef8bd9fe94c841dc4b275f1b168960d311aae
#9 transferring context: 1.08kB done
#9 DONE 0.3s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool cmake
#6 sha256:0c734aecf1b283c063c3bbc6f7e827fdfd9889f2d9f9c17d96046a591ed89710
#6 CACHED

#7 [3/5] RUN git clone --depth 1 https://github.com/libevent/libevent.git libevent
#7 sha256:5a485873d14e202a033ff20358792225c52fe3a20280e98e6f13f40a041aedb7
#7 CACHED

#8 [4/5] WORKDIR libevent
#8 sha256:42b27e8a8e24d12a6937168ca01f24569abbab4eb08d9bd9b3d815fbb3abc9fe
#8 CACHED

#10 [5/5] COPY build.sh *.cc /src/
#10 sha256:a546319c687bf5a4ea08418cd4d780b47e4fdc1ad224f3d7ec0e9ee8f4feaab6
#10 DONE 3.4s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:6ed1042dc35a83aea0ca4a8aba02a7326d3f235d2ff98465371585babcda1baa
#11 writing image sha256:6ed1042dc35a83aea0ca4a8aba02a7326d3f235d2ff98465371585babcda1baa done
#11 naming to gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:b47af52a1970d3ba0ce526d6a1f4ea283a8987ae62f6d06f79b1167ca7c693cf
#1 transferring dockerfile: 46B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:104c7a9955bc20ae97aadced1fe99f8897aeb6f383f2e35106c59acea8c74ce4
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer:latest
#3 sha256:b163c52b9548f0b2340240b849433145e8490d0093850d54af5034725abd4655
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer
#5 sha256:f9286c23a97fac91e5f2d3c8143371123af39681aea82b3314b5072d3adc9b4b
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate
#4 sha256:64ec8937106e49b2fe66e52f1df5b58c9b00d6bff0ea83c931b19dc85c8d9379
#4 ERROR: gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer
#5 sha256:f9286c23a97fac91e5f2d3c8143371123af39681aea82b3314b5072d3adc9b4b
#5 DONE 0.3s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:42eb49bff732a38dae54d8c2ff77c40564561db9eafc99b394f39f2b9596ca01
#6 0.452 Cloning into '/afl'...
#6 1.195 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.195 
#6 1.195 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.195 changes and commit them, and you can discard any commits you make in this
#6 1.195 state without impacting any branches by switching back to a branch.
#6 1.195 
#6 1.195 If you want to create a new branch to retain commits you create, you may
#6 1.195 do so (now or later) by using -c with the switch command. Example:
#6 1.195 
#6 1.195   git switch -c <new-branch-name>
#6 1.195 
#6 1.195 Or undo this operation with:
#6 1.195 
#6 1.195   git switch -
#6 1.195 
#6 1.195 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.195 
#6 1.195 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.214 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.214 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.398 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.403 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.832 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.145 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.572 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.722 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.128 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.367 ln -sf afl-as as
#6 5.369 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.372 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.372 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 5.7s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:ee92ad13a8a2113bcc5771b4e17b037d6a31367540816a87d3c63b42c09a3304
#7 0.682 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.682 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.695 Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.720 Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 0.813 Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 1.553 Reading package lists...
#7 3.138 Reading package lists...
#7 4.616 Building dependency tree...
#7 4.830 Reading state information...
#7 5.082 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.082 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 5.090 --2022-02-17 00:14:44--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.092 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.110.133, 185.199.109.133, 185.199.111.133, ...
#7 5.094 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.110.133|:443... connected.
#7 5.117 HTTP request sent, awaiting response... 200 OK
#7 5.294 Length: 9177 (9.0K) [text/plain]
#7 5.294 Saving to: '/afl/afl_driver.cpp'
#7 5.294 
#7 5.294      0K ........                                              100% 7.24M=0.001s
#7 5.295 
#7 5.295 2022-02-17 00:14:44 (7.24 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.295 
#7 7.059 ar: creating /libAFL.a
#7 DONE 7.5s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:7e40d954dab7fa7cbeb4849a5771a54aa00301799e658e5254beeb68bbb2fce3 done
#8 naming to gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:3c5fe1f2c4ab1702c42c3c0fa522fc25c622bbe0a2ff0561b6d1ba11b86a9fec
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:1a394c901a33f8dbddac48c0de3d1ccb49a0ae29a2a0160eebdca46d68da8f76
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:cd734e0b996ab784c4b60c04672f9a80b0fc15a60dab7cc8de1ed9cae785223a
#8 transferring context: 559B 0.0s done
#8 DONE 0.0s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:2764235a0f8a081031364a12cb4eacb91860de0f527b92d223cdb25c1427f169
#10 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:62cb62c40cfd2c77f153198bb1e45f42da15d13a5567dc116773388761832216
#9 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:fb6627653eecfafee4c1aae2efad985887ad334440869143916ac934d5cf4d52
#11 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:03a44d9dff4f5276f745cdfbe232b5009a7931f4684308af1a4a30b6adc99777
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:d22c0bd101801931c6d6e62a988c4bfa3adad63664261e8d24ef6559eead7bbd 0.0s done
#13 naming to gcr.io/fuzzbench/base-image
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:4958e60116ab6aca636ffdd7c23bb7709b487f898a2e3d970aa99f1d050e23c2
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:cd37ce54df75c835f3c3a5190c3aa10dee42818565d2ac85cf849ba391fc0ee9
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate:latest
#4 sha256:62cfe1fd9e2baf6eb21c20bfd1cfee28c28e1bd615ec781735dc36ec728b75db
#4 DONE 0.0s

#5 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate
#5 sha256:75c576d9067b46761281fce3c730beee083dbd842d23351bc1674d19ef4c8047
#5 DONE 0.0s

#11 [internal] load build context
#11 sha256:3f7524363a3e4f743e0c9833169aa63e8160b5e4735af886788664400149cd1b
#11 DONE 0.0s

#6 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#6 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#6 DONE 0.0s

#20 importing cache manifest from gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer
#20 sha256:2e7ef0d29939cb03d02ece1a69d373ff3c4a31ac5a8637daedfdf8662a890e82
#20 ERROR: gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer:latest: not found

#6 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#6 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#6 CACHED

#11 [internal] load build context
#11 sha256:3f7524363a3e4f743e0c9833169aa63e8160b5e4735af886788664400149cd1b
#11 transferring context: 669.90kB 0.1s done
#11 DONE 0.1s

#5 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate
#5 sha256:75c576d9067b46761281fce3c730beee083dbd842d23351bc1674d19ef4c8047
#5 DONE 0.4s

#7 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#7 sha256:80612a0d63f0a1872ad79fc497d8da7914c65a198cbe4c66733c054683e1bbba
#7 DONE 0.5s

#8 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#8 sha256:1f5cfe2a965b1660ff299ae405bb7eb8567a55dfcd899ca45bca3127910d35b6
#8 DONE 14.8s

#9 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#9 sha256:03237069e240b27604e41e0731d64c0ee601792e8b7f4034ede3088398613f58
#9 DONE 0.5s

#10 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#10 sha256:9f7066c6dc551a6536a4c9ef7febd2e9d7966e78ce2aea310d313407dd1a62fe
#10 DONE 19.7s

#12 [stage-1  6/13] COPY fuzzers /src/fuzzers
#12 sha256:bed9706d058853b7aee4e40a9f194b053aa59283b07df031f014a7a88bc22bcb
#12 DONE 0.3s

#13 [stage-1  7/13] RUN touch /src/__init__.py
#13 sha256:5ec6432ab052cd2b99d29c58a5de337703a8d8809fd2ab70776c29095235df7e
#13 DONE 1.0s

#14 [stage-1  8/13] COPY benchmarks/libevent_parse_query_fuzzer/benchmark.yaml /
#14 sha256:76dae5cb00c6d6a6926db3c6b369ccd468c401e35321d52f03f2c8b45f432cc5
#14 DONE 0.2s

#15 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#15 sha256:ebf5e7e4b562fd83a3aed676ed278f4f9b5e6eb9db2d11e4396c40da8df17a69
#15 DONE 0.6s

#16 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#16 sha256:519b80e9233c2954227f8268fb3bd00dc0da3a784d9a0cd618c999c9758f7447
#16 DONE 0.1s

#17 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#17 sha256:878e28bba2c12f97fc4d32376811d36a39a45839ba216845a535acc22231f562
#17 0.564 Checking out commit af42169e
#17 5.000 From https://github.com/libevent/libevent
#17 5.000  * [new tag]           release-1.1b          -> release-1.1b
#17 5.001  * [new tag]           release-2.0.1-alpha   -> release-2.0.1-alpha
#17 5.001  * [new tag]           release-2.0.10-stable -> release-2.0.10-stable
#17 5.001  * [new tag]           release-2.0.11-stable -> release-2.0.11-stable
#17 5.002  * [new tag]           release-2.0.12-stable -> release-2.0.12-stable
#17 5.002  * [new tag]           release-2.0.13-stable -> release-2.0.13-stable
#17 5.002  * [new tag]           release-2.0.14-stable -> release-2.0.14-stable
#17 5.002  * [new tag]           release-2.0.15-stable -> release-2.0.15-stable
#17 5.002  * [new tag]           release-2.0.16-stable -> release-2.0.16-stable
#17 5.003  * [new tag]           release-2.0.17-stable -> release-2.0.17-stable
#17 5.003  * [new tag]           release-2.0.18-stable -> release-2.0.18-stable
#17 5.003  * [new tag]           release-2.0.19-stable -> release-2.0.19-stable
#17 5.003  * [new tag]           release-2.0.20-stable -> release-2.0.20-stable
#17 5.004  * [new tag]           release-2.0.21-stable -> release-2.0.21-stable
#17 5.004  * [new tag]           release-2.0.3-alpha   -> release-2.0.3-alpha
#17 5.004  * [new tag]           release-2.0.4-alpha   -> release-2.0.4-alpha
#17 5.005  * [new tag]           release-2.0.5-beta    -> release-2.0.5-beta
#17 5.005  * [new tag]           release-2.0.6-rc      -> release-2.0.6-rc
#17 5.005  * [new tag]           release-2.0.7-rc      -> release-2.0.7-rc
#17 5.005  * [new tag]           release-2.0.8-rc      -> release-2.0.8-rc
#17 5.006  * [new tag]           release-2.0.9-rc      -> release-2.0.9-rc
#17 5.006  * [new tag]           release-2.1.1-alpha   -> release-2.1.1-alpha
#17 5.006  * [new tag]           release-2.1.2-alpha   -> release-2.1.2-alpha
#17 5.007  * [new tag]           release-2.1.3-alpha   -> release-2.1.3-alpha
#17 5.007  * [new tag]           release-2.1.4-alpha   -> release-2.1.4-alpha
#17 5.007  * [new tag]           release-2.1.5-beta    -> release-2.1.5-beta
#17 5.008  * [new tag]           release-2.1.6-beta    -> release-2.1.6-beta
#17 5.008  * [new tag]           release-2.1.7-rc      -> release-2.1.7-rc
#17 5.008  * [new tag]           release-2.1.8-stable  -> release-2.1.8-stable
#17 5.015 error: pathspec 'af42169e' did not match any file(s) known to git
#17 5.031 error: pathspec 'af42169e' did not match any file(s) known to git
#17 5.039 error: pathspec 'af42169e' did not match any file(s) known to git
#17 5.092 Checkout unsuccessful.
#17 DONE 5.3s

#18 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#18 sha256:522aa78f197c3ed3bbae6c1f6e6e05614b57a2ca4c3324dfcf7dddd458bda937
#18 DONE 0.8s

#19 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#19 sha256:eaf861bc102b1fa0400aaaad3e0f5ed87e5f402e73841481229cb0d9aeda04df
#19 0.582 Run fuzzer_build to build the target
#19 0.725 FUZZ_TARGET = parse_query_fuzzer
#19 0.725 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#19 0.725 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#19 0.741 Building benchmark libevent_parse_query_fuzzer with fuzzer afl
#19 0.744 + sh autogen.sh
#19 1.239 autoreconf: Entering directory `.'
#19 1.244 autoreconf: configure.ac: not using Gettext
#19 2.245 autoreconf: running: aclocal --force -I m4
#19 4.874 autoreconf: configure.ac: tracing
#19 5.694 autoreconf: configure.ac: creating directory build-aux
#19 5.694 autoreconf: running: libtoolize --copy --force
#19 6.014 libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
#19 6.014 libtoolize: copying file 'build-aux/ltmain.sh'
#19 6.058 libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
#19 6.058 libtoolize: copying file 'm4/libtool.m4'
#19 6.122 libtoolize: copying file 'm4/ltoptions.m4'
#19 6.191 libtoolize: copying file 'm4/ltsugar.m4'
#19 6.258 libtoolize: copying file 'm4/ltversion.m4'
#19 6.326 libtoolize: copying file 'm4/lt~obsolete.m4'
#19 9.197 autoreconf: running: /usr/bin/autoconf --force
#19 10.28 autoreconf: running: /usr/bin/autoheader --force
#19 11.08 autoreconf: running: automake --add-missing --copy --force-missing
#19 12.44 configure.ac:26: installing 'build-aux/compile'
#19 12.68 configure.ac:30: installing 'build-aux/config.guess'
#19 12.69 configure.ac:30: installing 'build-aux/config.sub'
#19 12.69 configure.ac:17: installing 'build-aux/install-sh'
#19 12.70 configure.ac:17: installing 'build-aux/missing'
#19 12.88 Makefile.am: installing 'build-aux/depcomp'
#19 13.03 parallel-tests: installing 'build-aux/test-driver'
#19 13.11 autoreconf: Leaving directory `.'
#19 13.11 + ./configure --disable-openssl
#19 13.34 checking for a BSD-compatible install... /usr/bin/install -c
#19 13.36 checking whether build environment is sane... yes
#19 13.38 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#19 13.38 checking for gawk... no
#19 13.38 checking for mawk... mawk
#19 13.38 checking whether make sets $(MAKE)... yes
#19 13.41 checking whether make supports nested variables... yes
#19 13.43 checking whether make supports nested variables... (cached) yes
#19 13.43 checking whether make supports the include directive... yes (GNU style)
#19 13.45 checking for gcc... clang
#19 13.56 checking whether the C compiler works... yes
#19 13.69 checking for C compiler default output file name... a.out
#19 13.69 checking for suffix of executables... 
#19 13.82 checking whether we are cross compiling... no
#19 13.96 checking for suffix of object files... o
#19 13.99 checking whether we are using the GNU C compiler... yes
#19 14.02 checking whether clang accepts -g... yes
#19 14.04 checking for clang option to accept ISO C89... none needed
#19 14.09 checking whether clang understands -c and -o together... yes
#19 14.13 checking dependency style of clang... gcc3
#19 14.19 checking how to run the C preprocessor... clang -E
#19 14.32 checking for grep that handles long lines and -e... /usr/bin/grep
#19 14.32 checking for egrep... /usr/bin/grep -E
#19 14.33 checking for ANSI C header files... yes
#19 14.58 checking for sys/types.h... yes
#19 14.63 checking for sys/stat.h... yes
#19 14.69 checking for stdlib.h... yes
#19 14.75 checking for string.h... yes
#19 14.81 checking for memory.h... yes
#19 14.88 checking for strings.h... yes
#19 14.94 checking for inttypes.h... yes
#19 15.00 checking for stdint.h... yes
#19 15.06 checking for unistd.h... yes
#19 15.14 checking minix/config.h usability... no
#19 15.20 checking minix/config.h presence... no
#19 15.23 checking for minix/config.h... no
#19 15.23 checking whether it is safe to define __EXTENSIONS__... yes
#19 15.31 checking build system type... x86_64-pc-linux-gnu
#19 15.79 checking host system type... x86_64-pc-linux-gnu
#19 15.80 checking whether ln -s works... yes
#19 15.80 checking for a sed that does not truncate output... /usr/bin/sed
#19 15.81 checking how to print strings... printf
#19 15.87 checking for a sed that does not truncate output... (cached) /usr/bin/sed
#19 15.87 checking for fgrep... /usr/bin/grep -F
#19 15.87 checking for ld used by clang... /usr/bin/ld
#19 15.89 checking if the linker (/usr/bin/ld) is GNU ld... yes
#19 15.90 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#19 15.91 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#19 15.95 checking the maximum length of command line arguments... 1572864
#19 15.96 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#19 15.96 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#19 15.97 checking for /usr/bin/ld option to reload object files... -r
#19 15.97 checking for objdump... objdump
#19 15.97 checking how to recognize dependent libraries... pass_all
#19 15.97 checking for dlltool... no
#19 15.97 checking how to associate runtime and link libraries... printf %s\n
#19 15.97 checking for ar... ar
#19 15.97 checking for archiver @FILE support... @
#19 16.02 checking for strip... strip
#19 16.02 checking for ranlib... ranlib
#19 16.03 checking command to parse /usr/bin/nm -B output from clang object... ok
#19 16.20 checking for sysroot... no
#19 16.20 checking for a working dd... /usr/bin/dd
#19 16.22 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#19 16.31 checking for mt... no
#19 16.31 checking if : is a manifest tool... no
#19 16.32 checking for dlfcn.h... yes
#19 16.39 checking for objdir... .libs
#19 16.57 checking if clang supports -fno-rtti -fno-exceptions... yes
#19 16.60 checking for clang option to produce PIC... -fPIC -DPIC
#19 16.60 checking if clang PIC flag -fPIC -DPIC works... yes
#19 16.63 checking if clang static flag -static works... yes
#19 16.91 checking if clang supports -c -o file.o... yes
#19 16.96 checking if clang supports -c -o file.o... (cached) yes
#19 16.96 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#19 16.99 checking whether -lc should be explicitly linked in... no
#19 17.05 checking dynamic linker characteristics... GNU/Linux ld.so
#19 17.22 checking how to hardcode library paths into programs... immediate
#19 17.22 checking whether stripping libraries is possible... yes
#19 17.43 checking if libtool supports shared libraries... yes
#19 17.43 checking whether to build shared libraries... yes
#19 17.43 checking whether to build static libraries... yes
#19 17.43 checking for library containing inet_ntoa... none required
#19 17.58 checking for library containing socket... none required
#19 17.71 checking for library containing inet_aton... none required
#19 17.85 checking for library containing clock_gettime... none required
#19 17.98 checking for clock_gettime... yes
#19 18.10 checking for library containing sendfile... none required
#19 18.23 checking for WIN32... no
#19 18.26 checking for MIDIPIX... no
#19 18.29 checking for CYGWIN... no
#19 18.32 checking zlib.h usability... no
#19 18.39 checking zlib.h presence... no
#19 18.42 checking for zlib.h... no
#19 18.42 checking for special C compiler options needed for large files... no
#19 18.42 checking for _FILE_OFFSET_BITS value needed for large files... no
#19 18.45 configure: error: PKG_PROG_PKG_CONFIG not found. Please install pkg-config and re-run autogen.sh
#19 18.54 Traceback (most recent call last):
#19 18.54   File "<string>", line 1, in <module>
#19 18.54   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#19 18.54     utils.build_benchmark()
#19 18.54   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#19 18.54     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#19 18.54   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#19 18.54     raise CalledProcessError(retcode, cmd)
#19 18.54 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#19 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2764378: .afl-libevent_parse_query_fuzzer-builder] Error 1
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:912f4e0a29372e0e48843e6ccb306a201cc3f95ecfcb9f8b9214c37e9d3d1a57
#1 transferring dockerfile: 32B done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:d5cc3655fb2b30c8d2f8e1118732542806aa270b07fa53b9a6c4d3ff56b48030
#2 transferring context: 2B done
#2 DONE 0.3s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.6s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer
#4 sha256:bfd30a4ae54d200a9222807841c872c7c1079cdee0279ffc9aca684e3bcf9117
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:e1747ddc57144d7808f8b0edbe8ce6d0da31b2b7e44df125db5c0848a9492360
#9 transferring context: 71B done
#9 DONE 0.1s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool cmake
#6 sha256:0c734aecf1b283c063c3bbc6f7e827fdfd9889f2d9f9c17d96046a591ed89710
#6 CACHED

#7 [3/5] RUN git clone --depth 1 https://github.com/libevent/libevent.git libevent
#7 sha256:5a485873d14e202a033ff20358792225c52fe3a20280e98e6f13f40a041aedb7
#7 CACHED

#8 [4/5] WORKDIR libevent
#8 sha256:42b27e8a8e24d12a6937168ca01f24569abbab4eb08d9bd9b3d815fbb3abc9fe
#8 CACHED

#10 [5/5] COPY build.sh *.cc /src/
#10 sha256:3c9faf1ba008aab49b7a8c3813d2a6d94af2dfc3ac2f0b8bd5d1e0d680a99bc5
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:6ed1042dc35a83aea0ca4a8aba02a7326d3f235d2ff98465371585babcda1baa
#11 writing image sha256:6ed1042dc35a83aea0ca4a8aba02a7326d3f235d2ff98465371585babcda1baa 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer done
#11 DONE 0.3s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:6c7ab2a17f9e1ed54c25e6ebe95698bd3845369841c9a00b96510e55c30dc6e7
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:e4af77a996decc370b23bf0f4be7d99bbd958c81e3837414a5d4942127e75edb
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer:latest
#3 sha256:b163c52b9548f0b2340240b849433145e8490d0093850d54af5034725abd4655
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate
#4 sha256:64ec8937106e49b2fe66e52f1df5b58c9b00d6bff0ea83c931b19dc85c8d9379
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libevent_parse_query_fuzzer
#5 sha256:f9286c23a97fac91e5f2d3c8143371123af39681aea82b3314b5072d3adc9b4b
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:42eb49bff732a38dae54d8c2ff77c40564561db9eafc99b394f39f2b9596ca01
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:ee92ad13a8a2113bcc5771b4e17b037d6a31367540816a87d3c63b42c09a3304
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:7e40d954dab7fa7cbeb4849a5771a54aa00301799e658e5254beeb68bbb2fce3 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:45d98f5ddc2bb2b2ff65701d7e3c440cfe313b94cd51170a9a3af6948260a43e
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:18a2aad6d202fc9701bfba6e1d2cebafa1b3300c281c9c1e0503522c440eb4bf
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:baa517e78695d5f8184fc8b61d2a899eeb5f532336769fdac6bfb9208ba239a6
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:b2581f5257565f76b67de5f1f7cd814e7077554edacb0040040c43ddbb3368be
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:78d1fd01a609ee7fc6a3616317657913f6959cefcc7264f51005dc36e4831f0d
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:e91fe655c8cd5945a3c7588c366783e312dac106ab51652d7f23359e19c4a8f9
#9 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:de318d256fcf0126dbb623699cdb67d6ee73fc6c8501610ba5da93485c7a20de
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:d22c0bd101801931c6d6e62a988c4bfa3adad63664261e8d24ef6559eead7bbd
#13 writing image sha256:d22c0bd101801931c6d6e62a988c4bfa3adad63664261e8d24ef6559eead7bbd 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:7b05f76e31aeec2390eafeba1601537072dec2ddbb0d326c261254f814c7e274
#1 DONE 0.0s

#1 [internal] load build definition from Dockerfile
#1 sha256:7b05f76e31aeec2390eafeba1601537072dec2ddbb0d326c261254f814c7e274
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:81e5f6b680d02802be1156273bc77a1d335c7c4ecf105de8e5d6dae6c5be0997
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate:latest
#3 sha256:62cfe1fd9e2baf6eb21c20bfd1cfee28c28e1bd615ec781735dc36ec728b75db
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:517fb4e3e360995e2d5de281c0d62aaed53889d9c53881ccd02827074b894c2c
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer-intermediate
#6 sha256:75c576d9067b46761281fce3c730beee083dbd842d23351bc1674d19ef4c8047
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer
#5 sha256:2e7ef0d29939cb03d02ece1a69d373ff3c4a31ac5a8637daedfdf8662a890e82
#5 ERROR: gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:517fb4e3e360995e2d5de281c0d62aaed53889d9c53881ccd02827074b894c2c
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.2s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:9f7066c6dc551a6536a4c9ef7febd2e9d7966e78ce2aea310d313407dd1a62fe
#11 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:0b997ed30153b13dc0b2e0380ede0f7e46bae21a1e1de5f93e4ca728508b68b5
#16 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:669c42ef4dad06e4b9c758e0e3187dc3d6201cc4630d1a5b0df2dadcbda7c0f9
#17 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:d309695de44239b041ce961b8f1c0be597467bcc420ff568a802fef13d1ab51e
#14 CACHED

#15 [stage-1  8/13] COPY benchmarks/libevent_parse_query_fuzzer/benchmark.yaml /
#15 sha256:fbaf4ef65455970de7f4d1123886bdbac82cc5fa6b921eeb90e52f36dfebc52a
#15 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:d60c3311593a62343dbf2b203ca0292bda3108277015a1e99930b86b36109f31
#18 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:80612a0d63f0a1872ad79fc497d8da7914c65a198cbe4c66733c054683e1bbba
#8 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:03237069e240b27604e41e0731d64c0ee601792e8b7f4034ede3088398613f58
#10 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:fcf56c88d8ef4b95548f647fed5571d37badb158bef1868c48fc9cce11bcbf4c
#13 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:1f5cfe2a965b1660ff299ae405bb7eb8567a55dfcd899ca45bca3127910d35b6
#9 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:bb1e67432177fe440efcb0346890213bbc11e547c533cd18c4a8edf0ab3ea1c4
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:0501d0a5a1d8e3bb16a05d0c4222bbe7c357ef2e96e49fa8d20e4b4a3d15c537
#20 0.508 Run fuzzer_build to build the target
#20 0.619 FUZZ_TARGET = parse_query_fuzzer
#20 0.619 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.619 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.624 Building benchmark libevent_parse_query_fuzzer with fuzzer afl
#20 0.627 + sh autogen.sh
#20 0.979 autoreconf: Entering directory `.'
#20 0.983 autoreconf: configure.ac: not using Gettext
#20 1.983 autoreconf: running: aclocal --force -I m4
#20 4.482 autoreconf: configure.ac: tracing
#20 5.281 autoreconf: configure.ac: creating directory build-aux
#20 5.281 autoreconf: running: libtoolize --copy --force
#20 5.607 libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.
#20 5.607 libtoolize: copying file 'build-aux/ltmain.sh'
#20 5.652 libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
#20 5.652 libtoolize: copying file 'm4/libtool.m4'
#20 5.718 libtoolize: copying file 'm4/ltoptions.m4'
#20 5.785 libtoolize: copying file 'm4/ltsugar.m4'
#20 5.854 libtoolize: copying file 'm4/ltversion.m4'
#20 5.923 libtoolize: copying file 'm4/lt~obsolete.m4'
#20 8.543 autoreconf: running: /usr/bin/autoconf --force
#20 9.610 autoreconf: running: /usr/bin/autoheader --force
#20 10.39 autoreconf: running: automake --add-missing --copy --force-missing
#20 11.45 configure.ac:26: installing 'build-aux/compile'
#20 11.45 configure.ac:30: installing 'build-aux/config.guess'
#20 11.46 configure.ac:30: installing 'build-aux/config.sub'
#20 11.46 configure.ac:17: installing 'build-aux/install-sh'
#20 11.46 configure.ac:17: installing 'build-aux/missing'
#20 11.62 Makefile.am: installing 'build-aux/depcomp'
#20 11.74 parallel-tests: installing 'build-aux/test-driver'
#20 11.82 autoreconf: Leaving directory `.'
#20 11.82 + ./configure --disable-openssl
#20 12.04 checking for a BSD-compatible install... /usr/bin/install -c
#20 12.05 checking whether build environment is sane... yes
#20 12.07 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 12.08 checking for gawk... no
#20 12.08 checking for mawk... mawk
#20 12.08 checking whether make sets $(MAKE)... yes
#20 12.09 checking whether make supports nested variables... yes
#20 12.11 checking whether make supports nested variables... (cached) yes
#20 12.11 checking whether make supports the include directive... yes (GNU style)
#20 12.13 checking for gcc... clang
#20 12.20 checking whether the C compiler works... yes
#20 12.32 checking for C compiler default output file name... a.out
#20 12.32 checking for suffix of executables... 
#20 12.46 checking whether we are cross compiling... no
#20 12.59 checking for suffix of object files... o
#20 12.62 checking whether we are using the GNU C compiler... yes
#20 12.65 checking whether clang accepts -g... yes
#20 12.68 checking for clang option to accept ISO C89... none needed
#20 12.73 checking whether clang understands -c and -o together... yes
#20 12.77 checking dependency style of clang... gcc3
#20 12.82 checking how to run the C preprocessor... clang -E
#20 12.93 checking for grep that handles long lines and -e... /usr/bin/grep
#20 12.93 checking for egrep... /usr/bin/grep -E
#20 12.93 checking for ANSI C header files... yes
#20 13.18 checking for sys/types.h... yes
#20 13.23 checking for sys/stat.h... yes
#20 13.29 checking for stdlib.h... yes
#20 13.35 checking for string.h... yes
#20 13.41 checking for memory.h... yes
#20 13.47 checking for strings.h... yes
#20 13.53 checking for inttypes.h... yes
#20 13.59 checking for stdint.h... yes
#20 13.65 checking for unistd.h... yes
#20 13.72 checking minix/config.h usability... no
#20 13.78 checking minix/config.h presence... no
#20 13.81 checking for minix/config.h... no
#20 13.81 checking whether it is safe to define __EXTENSIONS__... yes
#20 13.90 checking build system type... x86_64-pc-linux-gnu
#20 13.97 checking host system type... x86_64-pc-linux-gnu
#20 13.97 checking whether ln -s works... yes
#20 13.97 checking for a sed that does not truncate output... /usr/bin/sed
#20 13.98 checking how to print strings... printf
#20 14.04 checking for a sed that does not truncate output... (cached) /usr/bin/sed
#20 14.04 checking for fgrep... /usr/bin/grep -F
#20 14.05 checking for ld used by clang... /usr/bin/ld
#20 14.07 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 14.07 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 14.08 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 14.11 checking the maximum length of command line arguments... 1572864
#20 14.12 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 14.12 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 14.12 checking for /usr/bin/ld option to reload object files... -r
#20 14.13 checking for objdump... objdump
#20 14.13 checking how to recognize dependent libraries... pass_all
#20 14.13 checking for dlltool... no
#20 14.13 checking how to associate runtime and link libraries... printf %s\n
#20 14.13 checking for ar... ar
#20 14.13 checking for archiver @FILE support... @
#20 14.19 checking for strip... strip
#20 14.19 checking for ranlib... ranlib
#20 14.19 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 14.37 checking for sysroot... no
#20 14.37 checking for a working dd... /usr/bin/dd
#20 14.38 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 14.41 checking for mt... no
#20 14.41 checking if : is a manifest tool... no
#20 14.42 checking for dlfcn.h... yes
#20 14.49 checking for objdir... .libs
#20 14.67 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 14.69 checking for clang option to produce PIC... -fPIC -DPIC
#20 14.70 checking if clang PIC flag -fPIC -DPIC works... yes
#20 14.73 checking if clang static flag -static works... yes
#20 14.93 checking if clang supports -c -o file.o... yes
#20 14.97 checking if clang supports -c -o file.o... (cached) yes
#20 14.98 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 15.00 checking whether -lc should be explicitly linked in... no
#20 15.06 checking dynamic linker characteristics... GNU/Linux ld.so
#20 15.23 checking how to hardcode library paths into programs... immediate
#20 15.24 checking whether stripping libraries is possible... yes
#20 15.24 checking if libtool supports shared libraries... yes
#20 15.24 checking whether to build shared libraries... yes
#20 15.24 checking whether to build static libraries... yes
#20 15.24 checking for library containing inet_ntoa... none required
#20 15.37 checking for library containing socket... none required
#20 15.50 checking for library containing inet_aton... none required
#20 15.63 checking for library containing clock_gettime... none required
#20 15.77 checking for clock_gettime... yes
#20 15.90 checking for library containing sendfile... none required
#20 16.03 checking for WIN32... no
#20 16.06 checking for MIDIPIX... no
#20 16.09 checking for CYGWIN... no
#20 16.12 checking zlib.h usability... no
#20 16.19 checking zlib.h presence... no
#20 16.22 checking for zlib.h... no
#20 16.22 checking for special C compiler options needed for large files... no
#20 16.22 checking for _FILE_OFFSET_BITS value needed for large files... no
#20 16.26 configure: error: PKG_PROG_PKG_CONFIG not found. Please install pkg-config and re-run autogen.sh
#20 16.35 Traceback (most recent call last):
#20 16.35   File "<string>", line 1, in <module>
#20 16.35   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 16.35     utils.build_benchmark()
#20 16.35   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 16.35     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 16.35   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 16.35     raise CalledProcessError(retcode, cmd)
#20 16.35 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libevent_parse_query_fuzzer:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2764378: .afl-libevent_parse_query_fuzzer-builder] Error 1
