WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: simdjson_simdjson.
INFO:root:Please run "make test-run-afl-simdjson_simdjson" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:8a2807d522d1063d4541dc41d17cc60619cdee29c805c269db6383bc54eb6115
#1 transferring dockerfile: 910B 0.0s done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:30c38cd26e15db669c718a4e82810a7e37307c9862e8c59ecf65c9b7d1267a07
#2 transferring context: 2B done
#2 DONE 0.4s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#9 [internal] load build context
#9 sha256:f6c5c896ddf607098aa46f70e646e2b8ae8c7356155d885bf93a03d2c310df23
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/simdjson_simdjson
#4 sha256:4497811b044927baab1deb1350ee0c090f51467c16a26494f9498933e55a33c4
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/simdjson_simdjson:latest: not found

#6 [2/5] RUN apt-get update && apt-get install -y ninja-build wget
#6 sha256:a4e657978ebf144ae4bba760a621ffcff8f8fdbe5126be5f7434e31511164464
#6 CACHED

#9 [internal] load build context
#9 sha256:f6c5c896ddf607098aa46f70e646e2b8ae8c7356155d885bf93a03d2c310df23
#9 transferring context: 30B done
#9 DONE 0.1s

#7 [3/5] RUN git clone --depth 1 https://github.com/simdjson/simdjson.git simdjson
#7 sha256:431d9bc91b6f1e09a6f5bf2c5c2fa5b94298808bcd5475c66425873d5f184275
#7 0.530 Cloning into 'simdjson'...
#7 DONE 1.9s

#8 [4/5] WORKDIR simdjson
#8 sha256:1eaf4ebf4bf143275713cc4c3328feb064c83d931eb5a84d3d8775831ecec5ba
#8 DONE 0.2s

#10 [5/5] COPY build.sh /src/
#10 sha256:a886ec730a7972ad9bb977e647b9f6e7e8014a1971b76fe951acae76aa83b70f
#10 DONE 0.1s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:1df88ec1099762985b015bd2b241ee967de16d252c7c71a9ade1893ebac2283b
#11 writing image sha256:1df88ec1099762985b015bd2b241ee967de16d252c7c71a9ade1893ebac2283b done
#11 naming to gcr.io/fuzzbench/builders/benchmark/simdjson_simdjson done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/simdjson_simdjson:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:696d76265433953f13ff6a30a03cd031334fb7c2d22fae85a30fdfdb9e41157c
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:7d16218f24f6f63aedc5c1323e7eafaa8eb9e4eec02272529c016662a75c1c6e
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/simdjson_simdjson:latest
#3 sha256:55870561b20b2363bca7a541cb7e4d310e93f75f9e174e8f42a7b5c9084f1bdc
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/simdjson_simdjson
#5 sha256:79072ef8fbc2063c2ccbb76e7d16ffb99744adfd7a4b22d767a60410f84f6fcf
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/simdjson_simdjson-intermediate
#4 sha256:209f48cb9893b7926bfa6a48b870fa44eb3373aaa971041ac9c156a07f38fa0a
#4 ERROR: gcr.io/fuzzbench/builders/afl/simdjson_simdjson-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/simdjson_simdjson
#5 sha256:79072ef8fbc2063c2ccbb76e7d16ffb99744adfd7a4b22d767a60410f84f6fcf
#5 DONE 1.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:ba2d1c2c879ad1ddab6e016fc85ce0ec059ddfbb88e123f9ac187753e3787e39
#6 0.421 Cloning into '/afl'...
#6 1.126 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.126 
#6 1.126 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.126 changes and commit them, and you can discard any commits you make in this
#6 1.126 state without impacting any branches by switching back to a branch.
#6 1.126 
#6 1.126 If you want to create a new branch to retain commits you create, you may
#6 1.126 do so (now or later) by using -c with the switch command. Example:
#6 1.126 
#6 1.126   git switch -c <new-branch-name>
#6 1.126 
#6 1.126 Or undo this operation with:
#6 1.126 
#6 1.126   git switch -
#6 1.126 
#6 1.126 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.126 
#6 1.126 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.141 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.141 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.319 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.323 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.770 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.084 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.508 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.659 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.056 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.299 ln -sf afl-as as
#6 5.301 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.303 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.304 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 5.7s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:f6c8e6ecdc6ee2fa82047c5516d80b5cadeaa993bd26e7ab0dc6a25bae265f58
#7 0.803 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.803 Hit:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.803 Hit:3 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 0.803 Hit:4 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 0.803 Hit:5 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 2.196 Reading package lists...
#7 4.004 Reading package lists...
#7 5.415 Building dependency tree...
#7 5.626 Reading state information...
#7 5.871 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.871 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 5.887 --2022-02-16 11:50:56--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.889 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.109.133, 185.199.110.133, 185.199.111.133, ...
#7 5.891 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.109.133|:443... connected.
#7 5.914 HTTP request sent, awaiting response... 200 OK
#7 5.934 Length: 9177 (9.0K) [text/plain]
#7 5.934 Saving to: '/afl/afl_driver.cpp'
#7 5.934 
#7 5.934      0K ........                                              100% 10.1M=0.001s
#7 5.935 
#7 5.935 2022-02-16 11:50:56 (10.1 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.935 
#7 7.664 ar: creating /libAFL.a
#7 DONE 8.1s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:158254debf23043f25affdda0151bb8fa2c2758c2c90fa554fb2e69d5201a5fb done
#8 naming to gcr.io/fuzzbench/builders/afl/simdjson_simdjson-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/simdjson_simdjson-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:32fbc302d4cfeea37e4f3bb0ab20aacd49280022b143baf4c73185d635e9a4ab
#1 transferring dockerfile:
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.6s

#2 [internal] load .dockerignore
#2 sha256:4feae291628de00126dc52f5e0630f005dbff70889763dc42c54247a4c49363e
#2 transferring context: 34B done
#2 DONE 0.6s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:81513ba7c4e9cb9bdfaa935de847115192c81cabec7f741385f25ffab5cdc1e5
#8 transferring context: 559B 0.1s done
#8 DONE 0.2s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:3b3612d3c871e7395b02c15ca5a6e8cc0cdd9994409f0fd1c684691cc4fffdff
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:e83f54394e76118d047048a425f499d16d0c125b65e39dea47ea7d87230035f5
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:a7611059d94be7df09d77e4993f20ddbc2452c13e909ea8b1a87a9a63b4e0624
#9 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:8e5302ccb59ff10b91ae8d85793ec488cfd1dbd99abd2bd6a2699ec24083b2a3
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:7b7bab1d2dff9e4d63a4d4131d0a685766667a815f1b4fbd689a108d723199e4
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:b6dcef74c16e98e1db83aee1cf55de7af3669eb7ced1743e0525c84afd4784d1
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/simdjson_simdjson-intermediate:latest
#3 sha256:500275a4f8686458996a1a86f0731653e6d865ca0089f59104c2d0e3c9445829
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:71505d4e028d1435266fe3514b5702a2ec84e35da51990b7a32bb31d7dbcb480
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/simdjson_simdjson-intermediate
#6 sha256:b5fedabb2678a68bcff59d38bda81af94a82d9d7f937e497569837413cda50e2
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/simdjson_simdjson
#5 sha256:ee32168d6a87863750c330eb5e1b5d0284a3409f53f3700d392f6da5dbe88566
#5 ERROR: gcr.io/fuzzbench/builders/afl/simdjson_simdjson:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/simdjson_simdjson-intermediate
#6 sha256:b5fedabb2678a68bcff59d38bda81af94a82d9d7f937e497569837413cda50e2
#6 ...

#12 [internal] load build context
#12 sha256:71505d4e028d1435266fe3514b5702a2ec84e35da51990b7a32bb31d7dbcb480
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.6s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/simdjson_simdjson-intermediate
#6 sha256:b5fedabb2678a68bcff59d38bda81af94a82d9d7f937e497569837413cda50e2
#6 DONE 1.1s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:0a0d71f573aee771d8f13cba8ff3def06f1a87e404424ac6976f1a130c96c840
#8 DONE 0.8s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:42fc01481b601be812486d3c16c841512c65144b79e6dbbd2ce892b34534c9a2
#9 DONE 19.7s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:ecd07f606c58ed1f15fc9633f29cfa0a86248ebb5e0f4f539fa56f491e9aeb40
#10 DONE 0.3s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:9ff2e327634afadb903ec37276716af42657843d69ceda6d83d0e8a51f28219e
#11 DONE 38.1s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:6e0aab1761ffde5e70f4f38e3d6b4fef6c6607b412b69d9efa3ac46dd101b32b
#13 DONE 1.8s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:3d40aff3aaf3c59019199f6779f14952b2e7a7a3dcac3b7578ec3bf9da4ce4a9
#14 DONE 0.7s

#15 [stage-1  8/13] COPY benchmarks/simdjson_simdjson/benchmark.yaml /
#15 sha256:0adb0620c1a408ca6595501853a55119028e1da4678e6700c317d971cfe66cac
#15 DONE 0.4s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:a19142463720ec872f80608896d38d9ef99a46f1b3f1d05d328cfb272416d615
#16 DONE 1.6s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:0fe0d8f30dc17053615bb209d2f3bd06b18f66ef96c1a94c2920046047092d07
#17 DONE 0.5s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:57837e689a9f5b62e83570c0b9cdd758fab43f8455a95af10280b67995520c33
#18 0.585 Checking out commit 84faf557
#18 6.226 From https://github.com/simdjson/simdjson
#18 6.226  * [new tag]           v0.0.1     -> v0.0.1
#18 6.226  * [new tag]           v0.1.0     -> v0.1.0
#18 6.226  * [new tag]           v0.1.1     -> v0.1.1
#18 6.226  * [new tag]           v0.1.2     -> v0.1.2
#18 6.227  * [new tag]           v0.2.0     -> v0.2.0
#18 6.227  * [new tag]           v0.2.1     -> v0.2.1
#18 6.227  * [new tag]           v0.3.0     -> v0.3.0
#18 6.227  * [new tag]           v0.3.1     -> v0.3.1
#18 6.227  * [new tag]           v0.4.0     -> v0.4.0
#18 6.228  * [new tag]           v0.4.1     -> v0.4.1
#18 6.228  * [new tag]           v0.4.2     -> v0.4.2
#18 6.228  * [new tag]           v0.4.3     -> v0.4.3
#18 6.228  * [new tag]           v0.4.4     -> v0.4.4
#18 6.228  * [new tag]           v0.4.5     -> v0.4.5
#18 6.229  * [new tag]           v0.4.6     -> v0.4.6
#18 6.229  * [new tag]           v0.5.0     -> v0.5.0
#18 6.229  * [new tag]           v0.6.0     -> v0.6.0
#18 6.229  * [new tag]           v0.7.0     -> v0.7.0
#18 6.230  * [new tag]           v0.8.0     -> v0.8.0
#18 6.230  * [new tag]           v0.9.0     -> v0.9.0
#18 6.230  * [new tag]           v0.9.1     -> v0.9.1
#18 6.231  * [new tag]           v1.0.0     -> v1.0.0
#18 6.231  * [new tag]           v1.0.1     -> v1.0.1
#18 6.231  * [new tag]           v1.0.2     -> v1.0.2
#18 6.239 error: pathspec '84faf557' did not match any file(s) known to git
#18 6.254 error: pathspec '84faf557' did not match any file(s) known to git
#18 6.261 error: pathspec '84faf557' did not match any file(s) known to git
#18 6.280 error: pathspec '84faf557' did not match any file(s) known to git
#18 6.366 Checkout unsuccessful.
#18 DONE 6.6s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:f0f8aa0f2c43214f66217457b32e8b851938427c6246ea75f61ebe91329bc83d
#19 DONE 1.3s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:c26a2d4e08a14dd9a7ec82ba0d6e43cfda1453737ece7a7ab6d10b4bb206a069
#20 0.587 Run fuzzer_build to build the target
#20 0.699 FUZZ_TARGET = simdjson
#20 0.699 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.699 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.712 Building benchmark simdjson_simdjson with fuzzer afl
#20 0.716 + fuzz/ossfuzz.sh
#20 0.717 + which zip
#20 0.719 + which cmake
#20 0.720 + which ninja
#20 0.722 + fuzz/build_corpus.sh
#20 0.759 + mkdir -p build
#20 0.761 + cd build
#20 0.761 + cmake .. -GNinja -DCMAKE_BUILD_TYPE=Debug -DSIMDJSON_DEVELOPER_MODE=ON -DBUILD_SHARED_LIBS=OFF -DSIMDJSON_ENABLE_FUZZING=On -DSIMDJSON_COMPETITION=Off -DSIMDJSON_FUZZ_LINKMAIN=Off -DSIMDJSON_GOOGLE_BENCHMARKS=Off -DSIMDJSON_DISABLE_DEPRECATED_API=On -DSIMDJSON_FUZZ_LDFLAGS=/libAFL.a
#20 1.091 -- The CXX compiler identification is Clang 14.0.0
#20 1.295 -- The C compiler identification is Clang 14.0.0
#20 1.321 -- Detecting CXX compiler ABI info
#20 1.545 -- Detecting CXX compiler ABI info - done
#20 1.611 -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
#20 1.617 -- Detecting CXX compile features
#20 1.618 -- Detecting CXX compile features - done
#20 1.631 -- Detecting C compiler ABI info
#20 1.793 -- Detecting C compiler ABI info - done
#20 1.842 -- Check for working C compiler: /usr/local/bin/clang - skipped
#20 1.842 -- Detecting C compile features
#20 1.843 -- Detecting C compile features - done
#20 1.851 -- Looking for fork
#20 2.018 -- Looking for fork - found
#20 2.019 -- Looking for wait
#20 2.189 -- Looking for wait - found
#20 2.196 -- Looking for pthread.h
#20 2.368 -- Looking for pthread.h - found
#20 2.368 -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
#20 2.547 -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
#20 2.554 -- Found Threads: TRUE  
#20 2.590 -- Importing simdjson-data (simdjson/simdjson-data@a5b13babe65c1bba7186b41b43d4cbdc20a5c470)
#20 4.925 -- Importing cxxopts (jarro2783/cxxopts@794c975)
#20 5.366 -- cxxopts version 2.2.0
#20 5.370 -- We have cxxopts as a dependency and we are building the tools (e.g., json2json).
#20 5.840 -- Found Python3: /usr/local/bin/python3.8 (found version "3.8.6") found components: Interpreter 
#20 5.851 -- Including amalgamate_demo test. 
#20 5.852 -- Including simdjson-singleheader test.
#20 5.852 -- Including amalgamate_demo_direct_from_repository test.
#20 5.895 -- We disable the checkperf targets under Ninja.
#20 5.904 -- Configuring done
#20 6.082 -- Generating done
#20 6.105 -- Build files have been written to: /src/simdjson/build
#20 6.123 + cmake --build . --target all_fuzzers
#20 13.08 [1/28] Building CXX object fuzz/CMakeFiles/fuzz_utf8.dir/fuzz_utf8.cpp.o
#20 13.19 [2/28] Building CXX object fuzz/CMakeFiles/fuzz_dump_raw_tape.dir/fuzz_dump_raw_tape.cpp.o
#20 13.22 [3/28] Building CXX object fuzz/CMakeFiles/fuzz_dump.dir/fuzz_dump.cpp.o
#20 13.27 [4/28] Building CXX object fuzz/CMakeFiles/fuzz_ndjson.dir/fuzz_ndjson.cpp.o
#20 13.30 [5/28] Building CXX object fuzz/CMakeFiles/fuzz_minifyimpl.dir/fuzz_minifyimpl.cpp.o
#20 13.54 [6/28] Building CXX object fuzz/CMakeFiles/fuzz_atpointer.dir/fuzz_atpointer.cpp.o
#20 14.41 [7/28] Building CXX object fuzz/CMakeFiles/fuzz_element.dir/fuzz_element.cpp.o
#20 14.72 [8/28] Building CXX object fuzz/CMakeFiles/fuzz_minify.dir/fuzz_minify.cpp.o
#20 15.25 [9/28] Building CXX object fuzz/CMakeFiles/fuzz_implementations.dir/fuzz_implementations.cpp.o
#20 16.98 [10/28] Building CXX object fuzz/CMakeFiles/fuzz_parser.dir/fuzz_parser.cpp.o
#20 17.57 [11/28] Building CXX object fuzz/CMakeFiles/fuzz_padded.dir/fuzz_padded.cpp.o
#20 18.48 [12/28] Building CXX object fuzz/CMakeFiles/fuzz_print_json.dir/fuzz_print_json.cpp.o
#20 19.33 [13/28] Building CXX object fuzz/CMakeFiles/fuzz_ondemand.dir/fuzz_ondemand.cpp.o
#20 23.61 [14/28] Building CXX object CMakeFiles/simdjson.dir/src/simdjson.cpp.o
#20 23.70 [15/28] Linking CXX static library libsimdjson.a
#20 24.18 [16/28] Linking CXX executable fuzz/fuzz_atpointer
#20 24.21 [17/28] Linking CXX executable fuzz/fuzz_dump_raw_tape
#20 24.22 [18/28] Linking CXX executable fuzz/fuzz_ondemand
#20 24.23 [19/28] Linking CXX executable fuzz/fuzz_minifyimpl
#20 24.24 [20/28] Linking CXX executable fuzz/fuzz_dump
#20 24.27 [21/28] Linking CXX executable fuzz/fuzz_utf8
#20 24.30 [22/28] Linking CXX executable fuzz/fuzz_minify
#20 24.34 [23/28] Linking CXX executable fuzz/fuzz_ndjson
#20 24.34 [24/28] Linking CXX executable fuzz/fuzz_implementations
#20 24.37 [25/28] Linking CXX executable fuzz/fuzz_element
#20 24.51 [26/28] Linking CXX executable fuzz/fuzz_padded
#20 24.54 [27/28] Linking CXX executable fuzz/fuzz_parser
#20 24.55 [28/28] Linking CXX executable fuzz/fuzz_print_json
#20 24.55 + cp fuzz/fuzz_atpointer fuzz/fuzz_dump fuzz/fuzz_dump_raw_tape fuzz/fuzz_element fuzz/fuzz_implementations fuzz/fuzz_minify fuzz/fuzz_minifyimpl fuzz/fuzz_ndjson fuzz/fuzz_ondemand fuzz/fuzz_padded fuzz/fuzz_parser fuzz/fuzz_print_json fuzz/fuzz_utf8 /out
#20 24.60 + + ls /out/fuzz_atpointergrep /out/fuzz_dump /out/fuzz_dump_raw_tape -v /out/fuzz_element .zip$ /out/fuzz_implementations
#20 24.60  /out/fuzz_minify /out/fuzz_minifyimpl /out/fuzz_ndjson /out/fuzz_ondemand /out/fuzz_padded /out/fuzz_parser /out/fuzz_print_json /out/fuzz_utf8
#20 24.61 + basename /out/fuzz_atpointer
#20 24.61 + cp ../corpus.zip /out/fuzz_atpointer.zip
#20 24.62 + basename /out/fuzz_dump
#20 24.62 + cp ../corpus.zip /out/fuzz_dump.zip
#20 24.62 + basename /out/fuzz_dump_raw_tape
#20 24.62 + cp ../corpus.zip /out/fuzz_dump_raw_tape.zip
#20 24.62 + basename /out/fuzz_element
#20 24.62 + cp ../corpus.zip /out/fuzz_element.zip
#20 24.62 + basename /out/fuzz_implementations
#20 24.63 + cp ../corpus.zip /out/fuzz_implementations.zip
#20 24.63 + basename /out/fuzz_minify
#20 24.63 + cp ../corpus.zip /out/fuzz_minify.zip
#20 24.63 + basename /out/fuzz_minifyimpl
#20 24.63 + cp ../corpus.zip /out/fuzz_minifyimpl.zip
#20 24.63 + basename /out/fuzz_ndjson
#20 24.64 + cp ../corpus.zip /out/fuzz_ndjson.zip
#20 24.64 + basename /out/fuzz_ondemand
#20 24.64 + cp ../corpus.zip /out/fuzz_ondemand.zip
#20 24.64 + basename /out/fuzz_padded
#20 24.64 + cp ../corpus.zip /out/fuzz_padded.zip
#20 24.64 + basename /out/fuzz_parser
#20 24.64 + cp ../corpus.zip /out/fuzz_parser.zip
#20 24.65 + basename /out/fuzz_print_json
#20 24.65 + cp ../corpus.zip /out/fuzz_print_json.zip
#20 24.65 + basename /out/fuzz_utf8
#20 24.65 + cp ../corpus.zip /out/fuzz_utf8.zip
#20 24.65 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 25.5s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:c59ac1526e4543b04c8ef0984f20c10559ca999efd084f28482fbbc10ce9a087 done
#21 naming to gcr.io/fuzzbench/builders/afl/simdjson_simdjson done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/simdjson_simdjson:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:b4629581fa013413955a7a3936e8cf4f49abd6b8ab26500e146d6dfe45cc75ec
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:ccaa2d974ad995496823d17ac87a8ae9c7e546295fe2255ccd55ec1ae9f6fb0e
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/simdjson_simdjson-intermediate
#5 sha256:97f89d33c22a3b38dbc36a3bd34f879bc07a4f17677d513d3bafb3557eaf8740
#5 ERROR: gcr.io/fuzzbench/runners/afl/simdjson_simdjson-intermediate:latest: not found

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/simdjson_simdjson-intermediate done
#6 DONE 0.2s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/simdjson_simdjson-intermediate:
------
#2 [internal] load .dockerignore
#2 sha256:114790cb7f6b235ccb62adb86fe7b4fe54fe5cdd753acffef20598f81e05020a
#2 transferring context: 34B done
#2 DONE 0.1s

#1 [internal] load build definition from Dockerfile
#1 sha256:daceacc49c8518fa0488b00d80e77d0f9e13f4e4a05d89cfdef54cde98335378
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/simdjson_simdjson-intermediate:latest
#3 sha256:9f3cf17fcb717c72721e1a13f47e89026ddd95f7980b5fab6b5653ba135491ff
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/simdjson_simdjson:latest
#4 sha256:3c386512fea439a12729454447f6bf1ed2a12e02004a63e0303ec9201689c1ef
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/simdjson_simdjson
#5 sha256:d1f359e2f7fd6f3c637648f547e6b1b2f5b61d0b5a52b7372fc1987696a671e6
#5 ...

#12 [internal] load build context
#12 sha256:dee4e3f399efc5537047b6a43da0804ed186ddc3bed07dc8b8ef5ec7a0892f0a
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/simdjson_simdjson-intermediate
#6 sha256:9f6a20855afd3e813faae51b8691997b2330b24f2da1865419581f8d902ca854
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/simdjson_simdjson
#10 sha256:7ec69af273a6936559c2b9e012e5bf3b835658fbfc30ad107dcbe9d237f31469
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/simdjson_simdjson
#5 sha256:d1f359e2f7fd6f3c637648f547e6b1b2f5b61d0b5a52b7372fc1987696a671e6
#5 ERROR: gcr.io/fuzzbench/runners/afl/simdjson_simdjson:latest: not found

#12 [internal] load build context
#12 sha256:dee4e3f399efc5537047b6a43da0804ed186ddc3bed07dc8b8ef5ec7a0892f0a
#12 transferring context: 17.64MB 0.6s done
#12 DONE 0.8s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/simdjson_simdjson
#10 sha256:7ec69af273a6936559c2b9e012e5bf3b835658fbfc30ad107dcbe9d237f31469
#10 DONE 1.7s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:4521f5c249fbb2cfa054b531651622b705de5309847e2a5d943d9672b85faa02
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:f62c0d314462fce7b5d4f961089a099fe6746c55c953aea12a7da5885aaca1ea
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:a2de7f779da69a578c6a0a6c8d120b5295a3bf70e8cdd41d6b4ed7673cf86eff
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:5bc2df2448393ed795c3d481a9c12984fc2b61897cc47baa79ba3b79db6d33b5
#11 DONE 0.3s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:fed0ffe8ab30912acefc35aaba1e3769b61d66e36154a013d73d21289d486c71
#13 DONE 0.9s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:2cdc06a9b01d80672fcc017d9b7ca231ce77eb44c0eda66b8438818fd9216bae
#14 DONE 0.3s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:bfb6678695ac5cb5646e517e361b326c4a000131ab38417d060455e4cf5c3874
#15 DONE 1.1s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:2d00fbbb34a9466e1dea2a3efdd22f8f245a8395591840eac8fdbab5a85b286d
#16 DONE 0.8s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:55879521b296839639db7396ba428fce0edab87b5f57e98d39023563810196ae
#17 DONE 0.2s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:5a900c2196d9cd54c392b15932d81e17bd3282f2fa938f4d7dfd6226847708be
#18 DONE 0.2s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:48e04e8a936b7634a5b63cd5811e3a0d7112572d51f7ee0f5a5740cc33245b3e
#19 DONE 0.2s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:64a093eb700d5657b59677ff2062706a31e72d611be7ecd5f14f501501670c7e
#20 DONE 0.5s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:04af4daaf09d878ee7e7901a430affb809b0fc715f8e376bdfe71dd19a426f75 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/simdjson_simdjson 0.0s done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/simdjson_simdjson:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f787e585f70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:d31b5c62258a2a221b68d44d70f86fe39e9e7a78622cbba1cef1b0b5766669c9
#1 transferring dockerfile: 32B done
#1 DONE 0.7s

#2 [internal] load .dockerignore
#2 sha256:e5944096af55221f7e556deb36d5b0b06497bfc7c927755ca982cb50b1292d31
#2 transferring context: 2B done
#2 DONE 0.8s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/simdjson_simdjson
#4 sha256:4497811b044927baab1deb1350ee0c090f51467c16a26494f9498933e55a33c4
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:e42fbb2f58a68791adad29917e4fd73f8954e271c8e33999e3ab8ee6528cdab9
#9 transferring context: 30B done
#9 DONE 0.0s

#6 [2/5] RUN apt-get update && apt-get install -y ninja-build wget
#6 sha256:a4e657978ebf144ae4bba760a621ffcff8f8fdbe5126be5f7434e31511164464
#6 CACHED

#7 [3/5] RUN git clone --depth 1 https://github.com/simdjson/simdjson.git simdjson
#7 sha256:431d9bc91b6f1e09a6f5bf2c5c2fa5b94298808bcd5475c66425873d5f184275
#7 CACHED

#8 [4/5] WORKDIR simdjson
#8 sha256:1eaf4ebf4bf143275713cc4c3328feb064c83d931eb5a84d3d8775831ecec5ba
#8 CACHED

#10 [5/5] COPY build.sh /src/
#10 sha256:f27a88ce69001149c937bd81fcd803f5754661dd205797d961aff2ffea60a2f2
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:1df88ec1099762985b015bd2b241ee967de16d252c7c71a9ade1893ebac2283b
#11 writing image sha256:1df88ec1099762985b015bd2b241ee967de16d252c7c71a9ade1893ebac2283b 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/simdjson_simdjson done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:6a5c43fb5f1830290670ae5ab3201ba22904babd0b233173eb1f682e2ae35bcc
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:21bf878b570a13ba35903b076ee30fbe784d25399d47d77bc5b9010be6d0fc3a
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/simdjson_simdjson:latest
#3 sha256:55870561b20b2363bca7a541cb7e4d310e93f75f9e174e8f42a7b5c9084f1bdc
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/simdjson_simdjson-intermediate
#4 sha256:209f48cb9893b7926bfa6a48b870fa44eb3373aaa971041ac9c156a07f38fa0a
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/simdjson_simdjson
#5 sha256:79072ef8fbc2063c2ccbb76e7d16ffb99744adfd7a4b22d767a60410f84f6fcf
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:ba2d1c2c879ad1ddab6e016fc85ce0ec059ddfbb88e123f9ac187753e3787e39
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:f6c8e6ecdc6ee2fa82047c5516d80b5cadeaa993bd26e7ab0dc6a25bae265f58
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:158254debf23043f25affdda0151bb8fa2c2758c2c90fa554fb2e69d5201a5fb done
#8 naming to gcr.io/fuzzbench/builders/afl/simdjson_simdjson-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:d6e5c058fe7d89b4418dfcd6a96ead00626613930d152174edf0e87cfed9f775
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:238bc7a3ab783383bf6fe6e3e659413a5f3e568dab07f3c0407b59f447587771
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:3c4edf811238d894911d317057e00a70d90edde0259ecfe4863ff1c335c93301
#8 transferring context: 559B 0.2s done
#8 DONE 0.3s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:b1b321cae5a81ff4521b80c55db7b22873972967bc29531015e77dd8e6949d60
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:bc6ee018023d5cf92c0327dce36496761e711958e011817de41eeef018e9b267
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:b0a0c4cd4ecc9f0000e47c767bb87d786951ab4979d78f95a61935e5ebcc8e4a
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:99bb5930115be1bef0e04d963605c84494ddc53069ae5962254720c7cf8a775a
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.2s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:d89a23fcb368efaae82ed3bb4a3f0923831bbd945812751ad1a1f6cb2d3face7
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:9e791559f0b7dd9d350a4c8d1b499109c9ab2df8447dad7d155010b3e3940803
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/simdjson_simdjson-intermediate:latest
#3 sha256:500275a4f8686458996a1a86f0731653e6d865ca0089f59104c2d0e3c9445829
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/simdjson_simdjson-intermediate
#6 sha256:b5fedabb2678a68bcff59d38bda81af94a82d9d7f937e497569837413cda50e2
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/simdjson_simdjson
#5 sha256:ee32168d6a87863750c330eb5e1b5d0284a3409f53f3700d392f6da5dbe88566
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:646b9efa38e89e6cdc4ed3004ff54d8bace6d0c550f06b780251edd304bdfe21
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.1s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:fe0497dfb97b9110d310a6f53c9a0f386238eccc1f88c7247a69b71927426f04
#13 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:42fc01481b601be812486d3c16c841512c65144b79e6dbbd2ce892b34534c9a2
#9 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:0a0d71f573aee771d8f13cba8ff3def06f1a87e404424ac6976f1a130c96c840
#8 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:4f85908599d2aa91605ebe8c40e5eb80fe9d8f6bd5fe61223756b609f994d126
#19 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:9ff2e327634afadb903ec37276716af42657843d69ceda6d83d0e8a51f28219e
#11 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:8937a44eccb55dcbf140b0b5ed8e1b664613ef1f6a469eafdaa1ea9189ef09e6
#17 CACHED

#15 [stage-1  8/13] COPY benchmarks/simdjson_simdjson/benchmark.yaml /
#15 sha256:3792e97aac4cf30b6ae6d976f65712b9235efb53bb2517f74d40fb69d11bdb52
#15 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:e11de4406bb09d20e007f6d82041f949abc801492028aacd833cb424c348c4d0
#16 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:11353c0e2c4dd9e3b93925d6e10b4daafc71c8008f7785b94223fea80e4d384b
#18 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:6178268e1690cc3267d27f5b9808a6fa2cbb6c461ce4815a67e6cf30f766ca4b
#14 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:ecd07f606c58ed1f15fc9633f29cfa0a86248ebb5e0f4f539fa56f491e9aeb40
#10 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:bf3f2c024cb9d756543487311e6643fb0ae5f22e43d4b4a43a8e844db98f2e5f
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:c59ac1526e4543b04c8ef0984f20c10559ca999efd084f28482fbbc10ce9a087 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/simdjson_simdjson done
#21 DONE 0.5s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:be2f7594712585bfc3afc8e36b507d70dbff5b49d065e3376ce8c901fd84d9b1
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:f78645d7cca5e9031580cbee17a1e47e488c8aaacfac0d14a1c1607d45317d48
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/simdjson_simdjson-intermediate
#4 sha256:97f89d33c22a3b38dbc36a3bd34f879bc07a4f17677d513d3bafb3557eaf8740
#4 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f done
#6 naming to gcr.io/fuzzbench/runners/afl/simdjson_simdjson-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:ee9de314473e2372a1be0bf010795784a3a508b8c32ca8925aefc397bc07eec2
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:ec76d44b9187b939a8d848c94f7720232cd550ca3cc54b185637f97bb6a42a9e
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/simdjson_simdjson:latest
#4 sha256:3c386512fea439a12729454447f6bf1ed2a12e02004a63e0303ec9201689c1ef
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/simdjson_simdjson-intermediate:latest
#3 sha256:9f3cf17fcb717c72721e1a13f47e89026ddd95f7980b5fab6b5653ba135491ff
#3 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/simdjson_simdjson-intermediate
#6 sha256:9f6a20855afd3e813faae51b8691997b2330b24f2da1865419581f8d902ca854
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/simdjson_simdjson
#5 sha256:d1f359e2f7fd6f3c637648f547e6b1b2f5b61d0b5a52b7372fc1987696a671e6
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/simdjson_simdjson
#10 sha256:7ec69af273a6936559c2b9e012e5bf3b835658fbfc30ad107dcbe9d237f31469
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:2543525b3d94c0b86e78b654cfb14b36ad68e766aaf405bacdd7b9ba5f2288d0
#12 transferring context: 17.64MB 0.6s done
#12 DONE 0.9s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:b4a52eef0aed80235f5847354cec06a0d42ff668e32b337573143a8e8b962fa9
#14 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:3588194ba0dd194bb60becae8cfc2aab936ae9d3ac53091915912a2c8114e860
#19 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:a30b47bad3d4bfaa14a7b6214625e4cefd51452abecc0bfba2aa967bec8e67c2
#17 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:d0e2bfbc8fec0890eb52a539df2bbb713b0fed84676fa600112309b65e32075d
#18 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:ccb4f9237a0fc35cb52404b2708fd1da96b98320446cf03d4c869a1bb0adee0c
#13 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:4521f5c249fbb2cfa054b531651622b705de5309847e2a5d943d9672b85faa02
#7 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:a2de7f779da69a578c6a0a6c8d120b5295a3bf70e8cdd41d6b4ed7673cf86eff
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:5bc2df2448393ed795c3d481a9c12984fc2b61897cc47baa79ba3b79db6d33b5
#11 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:f62c0d314462fce7b5d4f961089a099fe6746c55c953aea12a7da5885aaca1ea
#8 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:8c7eb94bb8880a2d77d29e5ee8d58689d29f6482202cf2cf5d55467342a09794
#15 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:77b0cfccef0f2b4c64c507fbbf5dddde9958c8316f8cc5bbb728cf81d0148765
#16 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:2a7c0ffb810418f5f4016fb0e4569c9a7354d469788f00e124254a9852b09f62
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:04af4daaf09d878ee7e7901a430affb809b0fc715f8e376bdfe71dd19a426f75 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/simdjson_simdjson done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f850cb8bf70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
