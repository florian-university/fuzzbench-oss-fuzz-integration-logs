WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: libxls_libxls.
INFO:root:Please run "make test-run-afl-libxls_libxls" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:4e0517291cdde9ed23a9fa5a37c15654c451affb0eb0a75bc9573e4935c840c4
#1 transferring dockerfile: 935B done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:90b686f200a43548c16dbde767e8fc6544d468a4d159700ce3235a9439516035
#2 transferring context: 2B done
#2 DONE 0.4s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#9 [internal] load build context
#9 sha256:b503db9c10620e53973b003ba4480d4a07b3890068c6b3b00e4e7387afc54f22
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libxls_libxls
#4 sha256:8dfae0c1ca9a45b8c520600d45fbf2f75a597da0064c8e1e7330103ce62e3fcd
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/libxls_libxls:latest: not found

#9 [internal] load build context
#9 sha256:b503db9c10620e53973b003ba4480d4a07b3890068c6b3b00e4e7387afc54f22
#9 transferring context: 30B done
#9 DONE 0.0s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf autoconf-archive automake gettext libtool
#6 sha256:e7fed44e0f87cee9aaed91acb7e12071e52458b28b301ffef13bfef61bfbb37f
#6 CACHED

#7 [3/5] RUN git clone --depth 1 https://github.com/libxls/libxls libxls
#7 sha256:616bea7565c4357e3770a082b82671d0fbaf0d96271f860f3eb295786796b1c5
#7 CACHED

#8 [4/5] WORKDIR libxls
#8 sha256:da4094e5c00f7bca3ccf4507615e04ff4558cf2b9072ba5821762d15a8850cc3
#8 CACHED

#10 [5/5] COPY build.sh /src/
#10 sha256:3d0606bde284bf1f9e385fe64101b2fd50927b88ef35614d0a92f113b4c2c814
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:af100ff0359b4623356b5c345fffa7d9d6b3251668296e61e3bcc43c5219ad10
#11 writing image sha256:af100ff0359b4623356b5c345fffa7d9d6b3251668296e61e3bcc43c5219ad10 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/libxls_libxls done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libxls_libxls:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:c53f75be556d1ff41ea0cce77264e0ca6c7144676347f7ef353db8d977ae55af
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:efbd033878ce3b2739e702ad3a2f33f05af0db8f49631db7eb97ef05db8602fb
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/libxls_libxls:latest
#3 sha256:050cc1057571eedff6500c31de1eaf9e85105c5279b1f86aab36aad45cc23a07
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libxls_libxls
#5 sha256:de7e8f2b611225d2f49730923fc301ada54b7cc3005e370534facafed36f15ca
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate
#4 sha256:caf73f669ea0684a8d885080c9529a5453ffa241374d3d7cfe870e864cae4385
#4 ERROR: gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate:latest: not found

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:a5a214290a0ae3603d5e5ebf63ce64787c1e4a21f08dc19928c6b94ba4ee145e
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:a8b316188d1a489f8315df54efbbb9bda7549b0b7645b7eaf2d0a5f58c0ca53a
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:165b963638ed4b47a42d300151ab945939a02b556cf06eb3120f0a91c3a59d1f 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:eee0f9df2321108b8f0b5e86c82c575280d84bff8226c7fce06f30cb13a40ffd
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:b60b3d74e477ff1b8b2e431e1e2d4f6bdcad5648ce4bc43e8cddb196048b305f
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:e22879dcf69941ccb3e41ef8303cee85afc2f0ba0f3fdc8870d8ca2cd2a63e78
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:f9c2ce28f8d408c05034a015045be16427ebd2fdb2788625cc3afe5b308b02ba
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:7c5498075df65e269195d6fd632075e9f860524f147b467254e11c25774a41d4
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:b3c6a472842b637bd30d21a42bc380f1052e3f69f9cda10184cde05cdc4f8da6
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:6914475ef57af6a74e30d4e84b4cb282793e498057ce8fe43133b1f5dd6d14dd
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:b0bf59e5a98d6281c53a32058db7d7b8c5940d51f877ed2658dddf314a949583
#13 writing image sha256:b0bf59e5a98d6281c53a32058db7d7b8c5940d51f877ed2658dddf314a949583 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:fbc4ab3ed50bff92d820e6931e55b1df6a2a529ae8d2c8eaeac2c2e5623619d7
#2 transferring context: 34B done
#2 DONE 0.6s

#1 [internal] load build definition from Dockerfile
#1 sha256:51c4c43c3f662f91e03f6d2b5fc36b69a146dbf9908ad5e490bee994b763a55e
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.6s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate:latest
#3 sha256:b92e5b95b6efa8c0904ca95a80aa4d34fd68737798db872d7845971eac15c1e3
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:7ea2ad494c44c2db17abaa211b2111ec130040fd2febc1dc87f779735b8b95ba
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate
#6 sha256:ed739f324cf022c4cea312faeb578d9174d3a837f117ca761fa47ceadc2f1111
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/libxls_libxls
#5 sha256:6742af2323d3b93e2138889abb0616b919b2f19f27aeb9dfe87069ea04519f95
#5 ERROR: gcr.io/fuzzbench/builders/afl/libxls_libxls:latest: not found

#12 [internal] load build context
#12 sha256:7ea2ad494c44c2db17abaa211b2111ec130040fd2febc1dc87f779735b8b95ba
#12 transferring context: 669.86kB 0.1s done
#12 DONE 0.2s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:a8c3f7d7712d372daa582b05596b2816bc7e84a7fbea4a2fd3b24c4e36ddf0dc
#13 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:6c3e5552fe77e511ae253f882224f59b5b6645a2d319dae62dc47243b57d8315
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:49c71f43a000721d03959d1f464f590f0b36e21e6564c3c90967c147d31147f1
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:aee8e0c1310591b131e03c8d01cc7cdf7b46e5085a380e6df991b96501d41abf
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:40b7fc0dc21217e406bc9a5dc7a7c206eecd7ee48b153735414fabd205443a9b
#11 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:029bfc1391c57a45ec6137d9cdfafd1aada7015f76af2460c1d50319165f731c
#14 CACHED

#15 [stage-1  8/13] COPY benchmarks/libxls_libxls/benchmark.yaml /
#15 sha256:4ebc02438be0950bc1214a57a66fe6a888d3fc8df6c7258022fcf041c4140a13
#15 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:d4b1f3559fcdb4c9f9f67948ca79097adfaf18a7280636ea7ae554c57e12ac0a
#16 DONE 0.8s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:d9faef792d32d2f93f687c439f09152dc4f83dc169adc647d433596b2a3e4fb9
#17 DONE 0.5s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:f5f0d9cf975e33b8d6e40fd7431e99d06b31fb2c6d0a080099a31e6acbce6dde
#18 0.542 Checking out commit 84faf557
#18 2.231 From https://github.com/libxls/libxls
#18 2.231  * [new tag]         v0.2.0     -> v0.2.0
#18 2.231  * [new tag]         v0.3.0     -> v0.3.0
#18 2.231  * [new tag]         v1.0.0     -> v1.0.0
#18 2.231  * [new tag]         v1.1.0     -> v1.1.0
#18 2.232  * [new tag]         v1.2.0     -> v1.2.0
#18 2.232  * [new tag]         v1.2.1     -> v1.2.1
#18 2.232  * [new tag]         v1.3.0     -> v1.3.0
#18 2.233  * [new tag]         v1.3.1     -> v1.3.1
#18 2.233  * [new tag]         v1.3.2     -> v1.3.2
#18 2.233  * [new tag]         v1.3.3     -> v1.3.3
#18 2.234  * [new tag]         v1.3.4     -> v1.3.4
#18 2.234  * [new tag]         v1.4.0     -> v1.4.0
#18 2.234  * [new tag]         v1.5.0     -> v1.5.0
#18 2.234  * [new tag]         v1.5.0-rc0 -> v1.5.0-rc0
#18 2.235  * [new tag]         v1.5.0-rc1 -> v1.5.0-rc1
#18 2.235  * [new tag]         v1.5.0-rc2 -> v1.5.0-rc2
#18 2.235  * [new tag]         v1.5.0-rc3 -> v1.5.0-rc3
#18 2.235  * [new tag]         v1.5.0-rc4 -> v1.5.0-rc4
#18 2.236  * [new tag]         v1.5.1     -> v1.5.1
#18 2.236  * [new tag]         v1.5.1-rc0 -> v1.5.1-rc0
#18 2.236  * [new tag]         v1.5.1-rc1 -> v1.5.1-rc1
#18 2.237  * [new tag]         v1.5.2     -> v1.5.2
#18 2.237  * [new tag]         v1.5.2-rc0 -> v1.5.2-rc0
#18 2.237  * [new tag]         v1.5.3     -> v1.5.3
#18 2.238  * [new tag]         v1.5.3-rc0 -> v1.5.3-rc0
#18 2.238  * [new tag]         v1.6.0     -> v1.6.0
#18 2.238  * [new tag]         v1.6.0-rc0 -> v1.6.0-rc0
#18 2.239  * [new tag]         v1.6.1     -> v1.6.1
#18 2.239  * [new tag]         v1.6.2-rc0 -> v1.6.2-rc0
#18 2.246 error: pathspec '84faf557' did not match any file(s) known to git
#18 2.251 error: pathspec '84faf557' did not match any file(s) known to git
#18 2.257 error: pathspec '84faf557' did not match any file(s) known to git
#18 2.274 error: pathspec '84faf557' did not match any file(s) known to git
#18 2.305 Checkout unsuccessful.
#18 DONE 2.7s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:8a4e134a83470a79c9824053743b6bae686d4b64f2081ef519552f57fe144c2f
#19 DONE 0.9s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:70b225a9926cb48d91c8d47972415b1e1e07cd0bd65203288e875ad866feedb5
#20 0.604 Run fuzzer_build to build the target
#20 0.718 FUZZ_TARGET = libxls
#20 0.718 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.718 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.723 Building benchmark libxls_libxls with fuzzer afl
#20 0.726 + ./bootstrap
#20 6.191 libtoolize: putting auxiliary files in '.'.
#20 6.191 libtoolize: copying file './ltmain.sh'
#20 6.420 libtoolize: Consider adding 'AC_CONFIG_MACRO_DIRS([m4])' to configure.ac,
#20 6.420 libtoolize: and rerunning libtoolize and aclocal.
#20 6.420 libtoolize: Consider adding '-I m4' to ACLOCAL_AMFLAGS in Makefile.am.
#20 11.97 configure.ac:28: installing './compile'
#20 11.97 configure.ac:28: installing './config.guess'
#20 11.97 configure.ac:28: installing './config.sub'
#20 11.98 configure.ac:25: installing './install-sh'
#20 11.98 configure.ac:25: installing './missing'
#20 12.02 Makefile.am: installing './depcomp'
#20 12.08 parallel-tests: installing './test-driver'
#20 12.14 + ./configure --enable-static
#20 12.36 checking for a BSD-compatible install... /usr/bin/install -c
#20 12.37 checking whether build environment is sane... yes
#20 12.39 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 12.39 checking for gawk... no
#20 12.39 checking for mawk... mawk
#20 12.39 checking whether make sets $(MAKE)... yes
#20 12.41 checking whether make supports nested variables... yes
#20 12.42 checking whether make supports nested variables... (cached) yes
#20 12.44 checking build system type... x86_64-pc-linux-gnu
#20 12.53 checking host system type... x86_64-pc-linux-gnu
#20 12.53 checking how to print strings... printf
#20 12.58 checking whether make supports the include directive... yes (GNU style)
#20 12.60 checking for gcc... clang
#20 12.66 checking whether the C compiler works... yes
#20 12.78 checking for C compiler default output file name... a.out
#20 12.79 checking for suffix of executables... 
#20 12.91 checking whether we are cross compiling... no
#20 13.03 checking for suffix of object files... o
#20 13.06 checking whether we are using the GNU C compiler... yes
#20 13.09 checking whether clang accepts -g... yes
#20 13.12 checking for clang option to accept ISO C89... none needed
#20 13.16 checking whether clang understands -c and -o together... yes
#20 13.20 checking dependency style of clang... gcc3
#20 13.26 checking for a sed that does not truncate output... /usr/bin/sed
#20 13.27 checking for grep that handles long lines and -e... /usr/bin/grep
#20 13.27 checking for egrep... /usr/bin/grep -E
#20 13.27 checking for fgrep... /usr/bin/grep -F
#20 13.28 checking for ld used by clang... /usr/bin/ld
#20 13.29 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 13.30 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 13.30 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 13.33 checking whether ln -s works... yes
#20 13.33 checking the maximum length of command line arguments... 1572864
#20 13.35 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 13.35 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 13.35 checking for /usr/bin/ld option to reload object files... -r
#20 13.35 checking for objdump... objdump
#20 13.35 checking how to recognize dependent libraries... pass_all
#20 13.35 checking for dlltool... no
#20 13.35 checking how to associate runtime and link libraries... printf %s\n
#20 13.35 checking for ar... ar
#20 13.35 checking for archiver @FILE support... @
#20 13.39 checking for strip... strip
#20 13.39 checking for ranlib... ranlib
#20 13.39 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 13.57 checking for sysroot... no
#20 13.57 checking for a working dd... /usr/bin/dd
#20 13.58 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 13.61 checking for mt... no
#20 13.61 checking if : is a manifest tool... no
#20 13.62 checking how to run the C preprocessor... clang -E
#20 13.72 checking for ANSI C header files... yes
#20 13.96 checking for sys/types.h... yes
#20 14.02 checking for sys/stat.h... yes
#20 14.07 checking for stdlib.h... yes
#20 14.13 checking for string.h... yes
#20 14.19 checking for memory.h... yes
#20 14.24 checking for strings.h... yes
#20 14.30 checking for inttypes.h... yes
#20 14.36 checking for stdint.h... yes
#20 14.43 checking for unistd.h... yes
#20 14.49 checking for dlfcn.h... yes
#20 14.55 checking for objdir... .libs
#20 14.72 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 14.75 checking for clang option to produce PIC... -fPIC -DPIC
#20 14.75 checking if clang PIC flag -fPIC -DPIC works... yes
#20 14.78 checking if clang static flag -static works... yes
#20 14.96 checking if clang supports -c -o file.o... yes
#20 15.00 checking if clang supports -c -o file.o... (cached) yes
#20 15.00 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 15.02 checking whether -lc should be explicitly linked in... no
#20 15.08 checking dynamic linker characteristics... GNU/Linux ld.so
#20 15.25 checking how to hardcode library paths into programs... immediate
#20 15.25 checking whether stripping libraries is possible... yes
#20 15.26 checking if libtool supports shared libraries... yes
#20 15.26 checking whether to build shared libraries... yes
#20 15.26 checking whether to build static libraries... yes
#20 15.26 checking for gcc... (cached) clang
#20 15.33 checking whether we are using the GNU C compiler... (cached) yes
#20 15.33 checking whether clang accepts -g... (cached) yes
#20 15.33 checking for clang option to accept ISO C89... (cached) none needed
#20 15.33 checking whether clang understands -c and -o together... (cached) yes
#20 15.34 checking dependency style of clang... (cached) gcc3
#20 15.34 checking for clang option to accept ISO C99... none needed
#20 15.47 checking whether we are using the GNU C++ compiler... yes
#20 15.50 checking whether clang++ accepts -g... yes
#20 15.53 checking dependency style of clang++... gcc3
#20 15.59 checking how to run the C++ preprocessor... clang++ -E
#20 15.88 checking for ld used by clang++... /usr/bin/ld -m elf_x86_64
#20 15.90 checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
#20 15.92 checking whether the clang++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 16.07 checking for clang++ option to produce PIC... -fPIC -DPIC
#20 16.07 checking if clang++ PIC flag -fPIC -DPIC works... yes
#20 16.16 checking if clang++ static flag -static works... yes
#20 16.38 checking if clang++ supports -c -o file.o... yes
#20 16.43 checking if clang++ supports -c -o file.o... (cached) yes
#20 16.43 checking whether the clang++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 16.43 checking dynamic linker characteristics... (cached) GNU/Linux ld.so
#20 16.43 checking how to hardcode library paths into programs... immediate
#20 16.44 checking whether clang++ supports C++11 features with -std=gnu++11... yes
#20 16.50 checking for strdup... yes
#20 16.65 checking for wcstombs_l... no
#20 16.79 checking wchar.h usability... yes
#20 16.85 checking wchar.h presence... yes
#20 16.87 checking for wchar.h... yes
#20 16.89 checking xlocale.h usability... no
#20 16.95 checking xlocale.h presence... no
#20 16.99 checking for xlocale.h... no
#20 16.99 checking for stdlib.h... (cached) yes
#20 16.99 checking for GNU libc compatible malloc... yes
#20 17.13 checking for stdlib.h... (cached) yes
#20 17.14 checking for GNU libc compatible realloc... yes
#20 17.27 checking for size_t... yes
#20 17.40 checking for ld used by clang... /usr/bin/ld -m elf_x86_64
#20 17.42 checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
#20 17.43 checking for shared library run path origin... done
#20 17.46 checking for iconv... yes
#20 17.60 checking for working iconv... yes
#20 17.75 checking for iconv declaration... 
#20 17.79          extern size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
#20 17.85 checking that generated files are newer than configure... done
#20 17.85 configure: creating ./config.status
#20 18.91 config.status: creating Makefile
#20 18.93 config.status: creating libxls.pc
#20 18.95 config.status: creating config.h
#20 18.96 config.status: executing depfiles commands
#20 19.07 config.status: executing libtool commands
#20 19.09 configure: ---
#20 19.09 configure: catdoc users: avoid xls2csv conflicts, use ./configure --program-prefix=lib to get libxls2csv
#20 19.09 configure: ---
#20 19.09 
#20 19.09 Configuration:
#20 19.09 
#20 19.09 C compiler: clang
#20 19.09 C++ compiler: clang++ -std=gnu++11
#20 19.09 CFLAGS: -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard
#20 19.09 CXXFLAGS: -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard
#20 19.09 LIBS:  
#20 19.09 
#20 19.09 Host: x86_64-pc-linux-gnu
#20 19.09 Extra ld flags: 
#20 19.16 + make clean
#20 19.17  rm -f xls2csv
#20 19.17  rm -f test_libxls test2_libxls test_cpp
#20 19.17 test -z "libxlsreader.la" || rm -f libxlsreader.la
#20 19.18 rm -f ./so_locations
#20 19.18 rm -rf .libs _libs
#20 19.19 rm -rf src/.libs src/_libs
#20 19.19  rm -f test_libxls test2_libxls test_cpp
#20 19.19 rm -f *.o
#20 19.19 rm -f cplusplus/*.o
#20 19.20 rm -f fuzz/*.o
#20 19.20 rm -f src/*.o
#20 19.20 rm -f src/*.lo
#20 19.21 rm -f test/*.o
#20 19.21 test -z "test_libxls.log" || rm -f test_libxls.log
#20 19.21 test -z "test_libxls.trs" || rm -f test_libxls.trs
#20 19.21 test -z "test-suite.log" || rm -f test-suite.log
#20 19.22 rm -f *.lo
#20 19.22 + make
#20 19.23 make  all-am
#20 19.24 make[1]: Entering directory '/src/libxls'
#20 19.25   CC       src/xls2csv.o
#20 19.38   CC       src/libxlsreader_la-xlstool.lo
#20 19.95   CC       src/libxlsreader_la-endian.lo
#20 20.18   CC       src/libxlsreader_la-locale.lo
#20 20.32   CC       src/libxlsreader_la-ole.lo
#20 20.93   CC       src/libxlsreader_la-xls.lo
#20 22.35   CCLD     libxlsreader.la
#20 22.58   CCLD     xls2csv
#20 22.82   CC       test/test.o
#20 22.91   CCLD     test_libxls
#20 23.16   CC       test/test2.o
#20 23.23   CCLD     test2_libxls
#20 23.49   CXX      cplusplus/main.o
#20 24.57   CXX      cplusplus/XlsReader.o
#20 25.51   CXXLD    test_cpp
#20 25.87 make[1]: Leaving directory '/src/libxls'
#20 25.87 + zip /out/fuzz_xls_seed_corpus.zip test/files/test2.xls fuzz/corpus/65536-rows-xls.xls fuzz/corpus/biff5-label-records.xls fuzz/corpus/big-texty-numbers-xls.xls fuzz/corpus/blanks.xls fuzz/corpus/dates-1900.xls fuzz/corpus/dates-1904.xls fuzz/corpus/dates-leap-year-1900-xls.xls fuzz/corpus/datetime-rounding.xls fuzz/corpus/empty-named-column.xls fuzz/corpus/empty-sheets.xls fuzz/corpus/geometry.xls fuzz/corpus/iris-excel-xls.xls fuzz/corpus/list_type.xls fuzz/corpus/missing-first-column.xls fuzz/corpus/missing-values-xls.xls fuzz/corpus/more-than-256-unique-strings-xls.xls fuzz/corpus/mtcars.xls fuzz/corpus/names-need-repair-xls.xls fuzz/corpus/no-yes-col-names.xls fuzz/corpus/numbers-as-na-and-shared-strings-xls.xls fuzz/corpus/skipping.xls fuzz/corpus/style-only-cells.xls fuzz/corpus/texty-dates-xls.xls fuzz/corpus/types.xls fuzz/corpus/unnamed-duplicated-columns.xls fuzz/corpus/utf8-sheet-names.xls fuzz/corpus/vietnamese-utf8.xls fuzz/corpus/whitespace-xls.xls fuzz/corpus/xls2csv_ole_ole2_fread_327.xls fuzz/corpus/xls2csv_ole_read_MSAT_772.xls fuzz/corpus/xls2csv_ole_read_MSAT_body_637.xls fuzz/corpus/xls2csv_ole_read_MSAT_body_687.xls
#20 25.87   adding: test/files/test2.xls (deflated 80%)
#20 25.87   adding: fuzz/corpus/65536-rows-xls.xls (deflated 65%)
#20 25.88   adding: fuzz/corpus/biff5-label-records.xls (deflated 83%)
#20 25.88   adding: fuzz/corpus/big-texty-numbers-xls.xls (deflated 83%)
#20 25.88   adding: fuzz/corpus/blanks.xls (deflated 86%)
#20 25.88   adding: fuzz/corpus/dates-1900.xls (deflated 76%)
#20 25.88   adding: fuzz/corpus/dates-1904.xls (deflated 77%)
#20 25.88   adding: fuzz/corpus/dates-leap-year-1900-xls.xls (deflated 80%)
#20 25.89   adding: fuzz/corpus/datetime-rounding.xls (deflated 83%)
#20 25.89   adding: fuzz/corpus/empty-named-column.xls (deflated 66%)
#20 25.89   adding: fuzz/corpus/empty-sheets.xls (deflated 87%)
#20 25.89   adding: fuzz/corpus/geometry.xls (deflated 86%)
#20 25.89   adding: fuzz/corpus/iris-excel-xls.xls (deflated 77%)
#20 25.89   adding: fuzz/corpus/list_type.xls (deflated 68%)
#20 25.89   adding: fuzz/corpus/missing-first-column.xls (deflated 67%)
#20 25.89   adding: fuzz/corpus/missing-values-xls.xls (deflated 86%)
#20 25.89   adding: fuzz/corpus/more-than-256-unique-strings-xls.xls (deflated 85%)
#20 25.90   adding: fuzz/corpus/mtcars.xls (deflated 81%)
#20 25.90   adding: fuzz/corpus/names-need-repair-xls.xls (deflated 74%)
#20 25.90   adding: fuzz/corpus/no-yes-col-names.xls (deflated 87%)
#20 25.90   adding: fuzz/corpus/numbers-as-na-and-shared-strings-xls.xls (deflated 87%)
#20 25.90   adding: fuzz/corpus/skipping.xls (deflated 86%)
#20 25.90   adding: fuzz/corpus/style-only-cells.xls (deflated 67%)
#20 25.90   adding: fuzz/corpus/texty-dates-xls.xls (deflated 66%)
#20 25.90   adding: fuzz/corpus/types.xls (deflated 81%)
#20 25.90   adding: fuzz/corpus/unnamed-duplicated-columns.xls (deflated 86%)
#20 25.91   adding: fuzz/corpus/utf8-sheet-names.xls (deflated 71%)
#20 25.91   adding: fuzz/corpus/vietnamese-utf8.xls (deflated 64%)
#20 25.91   adding: fuzz/corpus/whitespace-xls.xls (deflated 87%)
#20 25.91   adding: fuzz/corpus/xls2csv_ole_ole2_fread_327.xls (deflated 96%)
#20 25.91   adding: fuzz/corpus/xls2csv_ole_read_MSAT_772.xls (deflated 52%)
#20 25.91   adding: fuzz/corpus/xls2csv_ole_read_MSAT_body_637.xls (deflated 66%)
#20 25.92   adding: fuzz/corpus/xls2csv_ole_read_MSAT_body_687.xls (deflated 52%)
#20 25.92 + make fuzz_xls
#20 25.94   CC       fuzz/xls-fuzz_xls.o
#20 26.01   CXXLD    fuzz_xls
#20 26.45 + cp fuzz_xls /out/fuzz_xls
#20 26.45 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 26.9s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:603d0191f74c4958db0f8d3b53d1ac774e99038dba2fc987771c99bf6ae2c0a5 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/libxls_libxls done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libxls_libxls:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:d822617681e61b212a631c1c6d2c58b37fdeb4a84ea889ac6e987e7ef51bcd78
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:1946956642a0647d07f3f21d240632590845dfc4a488a10497804f636340bdfa
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate
#5 sha256:bb04f5cd7153e254f0f71be383f2244651c02bf0a866ee5b6ce76de260d3b6e8
#5 ERROR: gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate:latest: not found

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:e220a4b9567b0a0836860ee7f491ba5549eb67a6e0a94d974a01a34191e2baab 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate 0.0s done
#6 DONE 0.2s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:de62822115ff84895b400f08ab99f9cef3be8a332fbcb9850597ffcf788ea794
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:0625a6e17be67d48e89e682db2ab59b6e90568d30a3bf6cf0e06c3b15cbe5564
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libxls_libxls:latest
#4 sha256:99ffb8a75701dddc01848112ab9cb36df61ff54fccd0c0e34457f5be271fb91c
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate:latest
#3 sha256:bb5b034e98101ac8b73a0b47c380e7d08baf28286f0d539cb9685cd6901af9e9
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:a23715eab15d7f8bd7eab4486eb4f62b6945af009ac8cf605084edcf5b7df1f1
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate
#6 sha256:79a8784e7ff4694456f0970caf899ac0fb93eaa531a0c518303a869c2db63e28
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/libxls_libxls
#10 sha256:599e163d5ce49576d0a06e487422f1495b081c3ba9d43210c85082072bbc7441
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/libxls_libxls
#5 sha256:1122433a95fbb846a9576017a8a8a3298150d306a3169d8753b5eb611906077d
#5 ERROR: gcr.io/fuzzbench/runners/afl/libxls_libxls:latest: not found

#12 [internal] load build context
#12 sha256:a23715eab15d7f8bd7eab4486eb4f62b6945af009ac8cf605084edcf5b7df1f1
#12 ...

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/libxls_libxls
#10 sha256:599e163d5ce49576d0a06e487422f1495b081c3ba9d43210c85082072bbc7441
#10 DONE 0.6s

#12 [internal] load build context
#12 sha256:a23715eab15d7f8bd7eab4486eb4f62b6945af009ac8cf605084edcf5b7df1f1
#12 transferring context: 18.99MB 0.7s done
#12 DONE 0.7s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:df83269d02eaba7240fc9899ccd15c20cc5fb574778d06a7e81a9020df4df214
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:7976f4e4cb2e6079b071b5dd89ded06ae5d7b46d8da8cfba104c79b6e4720d72
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:3d534029ce676d48267b0cc1859c163b9f0f2f7f996509da9e18584dfaa452b6
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:8298b6083578657cfb921ab069111ae9375d45eb16613449e42f1be9d9c332bd
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:58c12583edc910d67f8ead69069728a9e42c1fc25a58a203d6cfd62619d2861b
#13 DONE 1.1s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:b105eb8be660c5ad83b6734de15d85282832a33634657b0711d9c029bb7c912b
#14 DONE 0.3s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:e56c1ac426d23034e5d838d14212c6af0b4d99ce059009dd5f81eee07da9fe57
#15 DONE 0.6s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:0778c9cee634dbfa6f4eb12c28f9ee6d585c9fea2fd97ef5ed64c3ba5e1e88d8
#16 DONE 0.7s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:a2c8283cdf2b45a0f18188404298a2e8b261821e675ebed52068ef9c1681dc28
#17 DONE 0.3s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:3b5dea8ddf88e9976300b70305690d4202d102ee5e16240a7013dad23aef19d6
#18 DONE 0.2s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:02676be7c5e358caebc15df09068e7df7cc669ba917d138d85f4f84006ef71e9
#19 DONE 0.2s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:9e10abe0f07fb25e073fa37d618a0b03aeeea1b77342116a04367b6773fde174
#20 DONE 0.5s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:8baf7a3f68f7e4b91d4cce138b4b8c20567a79f0724cff6f62a966231802e7d5 done
#21 naming to gcr.io/fuzzbench/runners/afl/libxls_libxls done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/libxls_libxls:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f43bfa8bee0> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:a63a1e1dba3bcb069b5d8c2d5a412992017da095908729f23ceb68f7fee037bc
#1 transferring dockerfile: 32B done
#1 DONE 0.9s

#2 [internal] load .dockerignore
#2 sha256:4317d7d2af87c3080b8b8c6df3f0c71e5eb0fe7cad7aac22d319d306bbffe99b
#2 transferring context: 2B done
#2 DONE 1.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libxls_libxls
#4 sha256:8dfae0c1ca9a45b8c520600d45fbf2f75a597da0064c8e1e7330103ce62e3fcd
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:eedd3943a2051f9a9c14107362bc566e4c1ba4ae5dcd7b91628ed850dfd71db1
#9 transferring context: 30B done
#9 DONE 0.1s

#8 [4/5] WORKDIR libxls
#8 sha256:da4094e5c00f7bca3ccf4507615e04ff4558cf2b9072ba5821762d15a8850cc3
#8 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf autoconf-archive automake gettext libtool
#6 sha256:e7fed44e0f87cee9aaed91acb7e12071e52458b28b301ffef13bfef61bfbb37f
#6 CACHED

#7 [3/5] RUN git clone --depth 1 https://github.com/libxls/libxls libxls
#7 sha256:616bea7565c4357e3770a082b82671d0fbaf0d96271f860f3eb295786796b1c5
#7 CACHED

#10 [5/5] COPY build.sh /src/
#10 sha256:89483312568cdf44f00d10b8f80caa67517a1ca4a6113d89aa7a8587fd276313
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:af100ff0359b4623356b5c345fffa7d9d6b3251668296e61e3bcc43c5219ad10 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/libxls_libxls done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:2600f9faf5ad3ead63674ada2927e73a9589f752bce15f6b051cb265eb94bc7f
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:36157e717904200ccacd6299e39c517dc0280ce1bfb828e5486bff6aee7ba9a1
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/libxls_libxls:latest
#3 sha256:050cc1057571eedff6500c31de1eaf9e85105c5279b1f86aab36aad45cc23a07
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate
#4 sha256:caf73f669ea0684a8d885080c9529a5453ffa241374d3d7cfe870e864cae4385
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libxls_libxls
#5 sha256:de7e8f2b611225d2f49730923fc301ada54b7cc3005e370534facafed36f15ca
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:a5a214290a0ae3603d5e5ebf63ce64787c1e4a21f08dc19928c6b94ba4ee145e
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:a8b316188d1a489f8315df54efbbb9bda7549b0b7645b7eaf2d0a5f58c0ca53a
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:165b963638ed4b47a42d300151ab945939a02b556cf06eb3120f0a91c3a59d1f 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:cb466daab663cc621a6e4d607118147731e0803d19b69a242d6a4086681371b1
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:c87b769a74b5e1045ae54d609dc9fe96cf758853f42ad029a4c9b31ed67434ea
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:6a86e01017fed7880d68d55092eaf166c8f2fbd9ecb21c52b99b49c2767daa67
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:a8a3084ee3839a496d5b2d18bb6e4c312bd7a7df9ce58eb7194f8671662ce77f
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:54d0ecd0b4cd0faf58e3c0857ba8dbb4a8213b262c6bbcbd9e7aa040483ca7d5
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:d3b70ca8d11e925deff735fd9acaf70a009a3393ee0759a45a322c1e116c0c91
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:5e4f1e127638627a21a249ea7b327ee18a9b8ce881fe129f0c36f3c4a1aaf015
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:b0bf59e5a98d6281c53a32058db7d7b8c5940d51f877ed2658dddf314a949583 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:80ae93df932cf4dba8450188b38decf04f9e819cf841b448e7a29b4e520d1370
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:71913d0853a90cb2fb0e1297f8f723af002a580df212e893dc13da9bf87c0dca
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate:latest
#3 sha256:b92e5b95b6efa8c0904ca95a80aa4d34fd68737798db872d7845971eac15c1e3
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate
#6 sha256:ed739f324cf022c4cea312faeb578d9174d3a837f117ca761fa47ceadc2f1111
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/libxls_libxls
#5 sha256:6742af2323d3b93e2138889abb0616b919b2f19f27aeb9dfe87069ea04519f95
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:d138f4b67cc6c5e1396abfee56a43cef407d31fc77564920e511872c614f6284
#12 transferring context: 669.86kB 0.1s done
#12 DONE 0.1s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:3ace3d62c10b0e2e46263786e6177fbefcdc0ba8dc59779ab0f5eab79f02449c
#19 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:14ea8059f16e970b3c6aa2c425ba3ba5540f3692ef19e31d5ed496e2c3eb0cb0
#16 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:3ac5728c68a4cd64f0a1695e01580c7d8775a44a8cd1d8018f811cd18cdf9156
#18 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:40b7fc0dc21217e406bc9a5dc7a7c206eecd7ee48b153735414fabd205443a9b
#11 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:49c71f43a000721d03959d1f464f590f0b36e21e6564c3c90967c147d31147f1
#9 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:6c3e5552fe77e511ae253f882224f59b5b6645a2d319dae62dc47243b57d8315
#8 CACHED

#15 [stage-1  8/13] COPY benchmarks/libxls_libxls/benchmark.yaml /
#15 sha256:a59c523fad0b5d59aaa71c50840f4f6c783c1d71118ebcae7cb6d0aa40e1ab9f
#15 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:6ec788f1c6276d3cfe114cad290fb47f1f7984bd690a88cfaed4d639df1215f0
#14 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:aee8e0c1310591b131e03c8d01cc7cdf7b46e5085a380e6df991b96501d41abf
#10 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:0eb50253ae2faa8a78a0f74900ae1d66dd250a45a550b063dc9e056cb520d749
#13 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:d0bf764f7f6fa9e872fb1063d7da334ed57088092033a7202523f36d0e392aaf
#17 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:dee2625eb29ba29206b5559400137b2264a6ac3b3c5bae2b18256cb49454ab1e
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:603d0191f74c4958db0f8d3b53d1ac774e99038dba2fc987771c99bf6ae2c0a5 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/libxls_libxls done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:b621ee679e066c92905938d61f5efd9b1a9cbd48539d128706f06f30301c5813
#2 transferring context: 2B done
#2 DONE 0.2s

#1 [internal] load build definition from runner.Dockerfile
#1 sha256:cec2751db61f7e970709cb95aacf518855eda1f9487f4a07bf4b3179c686ab75
#1 transferring dockerfile: 656B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate
#4 sha256:bb04f5cd7153e254f0f71be383f2244651c02bf0a866ee5b6ce76de260d3b6e8
#4 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:e220a4b9567b0a0836860ee7f491ba5549eb67a6e0a94d974a01a34191e2baab 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate done
#6 DONE 0.7s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:57f47657e86feb4304096c8160dbb8f8cc93078d0413f9efd3b1378009a5317f
#2 transferring context: 34B done
#2 DONE 0.7s

#1 [internal] load build definition from Dockerfile
#1 sha256:870100623ad9e10d790578d05808f47c5c7241817f7fb7d15e95abae5350d7e1
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.6s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate:latest
#3 sha256:bb5b034e98101ac8b73a0b47c380e7d08baf28286f0d539cb9685cd6901af9e9
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libxls_libxls:latest
#4 sha256:99ffb8a75701dddc01848112ab9cb36df61ff54fccd0c0e34457f5be271fb91c
#4 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate
#6 sha256:79a8784e7ff4694456f0970caf899ac0fb93eaa531a0c518303a869c2db63e28
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/libxls_libxls
#5 sha256:1122433a95fbb846a9576017a8a8a3298150d306a3169d8753b5eb611906077d
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/libxls_libxls
#10 sha256:599e163d5ce49576d0a06e487422f1495b081c3ba9d43210c85082072bbc7441
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:64ba36e3ff8f3cf7f7982df3b7c0503f6789207556a676a8f48de098a0fc1b2f
#12 transferring context: 18.99MB 0.7s done
#12 DONE 0.8s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:2d2f65c6d4641ed0022e3ba99db39cb10d42065de537833ccba2283c6c1f7cb6
#13 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:55602a562f88ce84bfa9b0e50682ede7d64627d38439899fe1e81bce079f71c3
#17 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:446f2a2dbf982c75c0507c9501f7f2da9db7f1ffdb03cfe4ee8b163b4a53ab48
#19 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:312f06e4309ca2bd28810969618e1eedf9c7944ab0b3be99d36c5056ebf7e706
#18 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:df83269d02eaba7240fc9899ccd15c20cc5fb574778d06a7e81a9020df4df214
#7 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:3d534029ce676d48267b0cc1859c163b9f0f2f7f996509da9e18584dfaa452b6
#9 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:7a0a39f56edd492f6ba5d453428da21a2e048548758a6e4dc0f7aded8fbc240c
#15 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:114a6ab6814fc0a427d3c35aafb4c0870d9706616e0498e36579d00e21142622
#16 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:7976f4e4cb2e6079b071b5dd89ded06ae5d7b46d8da8cfba104c79b6e4720d72
#8 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:8298b6083578657cfb921ab069111ae9375d45eb16613449e42f1be9d9c332bd
#11 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:676b4fd68e63d32e4e5b6f4546fb3fb0ade1265b44ae695f0697b95f78164b4b
#14 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:30d4c2c55fa8346563c7c1a7c3aecdb81cdc1daaf9f98ec552081d081a897ee7
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:8baf7a3f68f7e4b91d4cce138b4b8c20567a79f0724cff6f62a966231802e7d5 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/libxls_libxls done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f3e71ab7ee0> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
