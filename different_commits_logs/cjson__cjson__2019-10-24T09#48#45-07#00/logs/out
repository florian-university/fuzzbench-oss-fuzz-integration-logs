WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: cjson_cjson.
INFO:root:Please run "make test-run-afl-cjson_cjson" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:80dbc6c7924106c0c67d93326ac5c6cb773b0123850dd80a3a16ada94fc7246f
#1 transferring dockerfile: 944B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:ffef49cd8ea471f751f06cf7391fa6293a58e79898b7ee374933a385c1143214
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#9 [internal] load build context
#9 sha256:3316fc782a35dec5a4d4dfc21b54f4309ba351238904db4e3671d06922886baa
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/cjson_cjson
#4 sha256:f1b7d88855476cb21adb878937cc687f4bd259050743f8ddedad7185759b71a8
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/cjson_cjson:latest: not found

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 CACHED

#9 [internal] load build context
#9 sha256:3316fc782a35dec5a4d4dfc21b54f4309ba351238904db4e3671d06922886baa
#9 transferring context: 782B done
#9 DONE 0.0s

#6 [2/5] RUN apt-get update && apt-get install -y cmake
#6 sha256:c41efadccd456f2e226cd78e766538015e031312db1bb5ea4d112c239de6cb0d
#6 0.543 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#6 0.543 Get:2 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#6 0.543 Hit:3 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 0.552 Get:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#6 0.652 Get:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#6 1.237 Get:6 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [755 kB]
#6 1.407 Get:7 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1134 kB]
#6 1.599 Get:8 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [827 kB]
#6 1.751 Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1984 kB]
#6 2.162 Fetched 5036 kB in 2s (2986 kB/s)
#6 2.162 Reading package lists...
#6 3.673 Reading package lists...
#6 5.088 Building dependency tree...
#6 5.307 Reading state information...
#6 5.520 The following additional packages will be installed:
#6 5.522   cmake-data libarchive13 libjsoncpp1 librhash0 libuv1
#6 5.524 Suggested packages:
#6 5.524   cmake-doc ninja-build lrzip
#6 5.565 The following NEW packages will be installed:
#6 5.567   cmake cmake-data libarchive13 libjsoncpp1 librhash0 libuv1
#6 5.643 0 upgraded, 6 newly installed, 0 to remove and 0 not upgraded.
#6 5.643 Need to get 5877 kB of archives.
#6 5.643 After this operation, 29.5 MB of additional disk space will be used.
#6 5.643 Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libuv1 amd64 1.34.2-1ubuntu1.3 [80.8 kB]
#6 5.731 Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 cmake-data all 3.16.3-1ubuntu1 [1612 kB]
#6 5.886 Get:3 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libarchive13 amd64 3.4.0-2ubuntu1.1 [327 kB]
#6 5.910 Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 libjsoncpp1 amd64 1.7.4-3.1ubuntu2 [75.6 kB]
#6 5.915 Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 librhash0 amd64 1.3.9-1 [113 kB]
#6 5.924 Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 cmake amd64 3.16.3-1ubuntu1 [3669 kB]
#6 6.411 debconf: delaying package configuration, since apt-utils is not installed
#6 6.463 Fetched 5877 kB in 1s (9483 kB/s)
#6 6.503 Selecting previously unselected package libuv1:amd64.
#6 6.503 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21291 files and directories currently installed.)
#6 6.525 Preparing to unpack .../0-libuv1_1.34.2-1ubuntu1.3_amd64.deb ...
#6 6.532 Unpacking libuv1:amd64 (1.34.2-1ubuntu1.3) ...
#6 6.597 Selecting previously unselected package cmake-data.
#6 6.601 Preparing to unpack .../1-cmake-data_3.16.3-1ubuntu1_all.deb ...
#6 6.607 Unpacking cmake-data (3.16.3-1ubuntu1) ...
#6 7.199 Selecting previously unselected package libarchive13:amd64.
#6 7.203 Preparing to unpack .../2-libarchive13_3.4.0-2ubuntu1.1_amd64.deb ...
#6 7.207 Unpacking libarchive13:amd64 (3.4.0-2ubuntu1.1) ...
#6 7.353 Selecting previously unselected package libjsoncpp1:amd64.
#6 7.357 Preparing to unpack .../3-libjsoncpp1_1.7.4-3.1ubuntu2_amd64.deb ...
#6 7.362 Unpacking libjsoncpp1:amd64 (1.7.4-3.1ubuntu2) ...
#6 7.428 Selecting previously unselected package librhash0:amd64.
#6 7.431 Preparing to unpack .../4-librhash0_1.3.9-1_amd64.deb ...
#6 7.437 Unpacking librhash0:amd64 (1.3.9-1) ...
#6 7.496 Selecting previously unselected package cmake.
#6 7.500 Preparing to unpack .../5-cmake_3.16.3-1ubuntu1_amd64.deb ...
#6 7.504 Unpacking cmake (3.16.3-1ubuntu1) ...
#6 7.937 Setting up libarchive13:amd64 (3.4.0-2ubuntu1.1) ...
#6 7.949 Setting up libuv1:amd64 (1.34.2-1ubuntu1.3) ...
#6 7.962 Setting up librhash0:amd64 (1.3.9-1) ...
#6 7.978 Setting up cmake-data (3.16.3-1ubuntu1) ...
#6 8.000 Setting up libjsoncpp1:amd64 (1.7.4-3.1ubuntu2) ...
#6 8.017 Setting up cmake (3.16.3-1ubuntu1) ...
#6 8.034 Processing triggers for libc-bin (2.31-0ubuntu9.2) ...
#6 DONE 8.5s

#7 [3/5] RUN git clone --depth 1 https://github.com/DaveGamble/cJSON.git cjson
#7 sha256:402253c2c2806b4c3b63d19d1ad098b22eecf96fee112f994df1e1e326fe745f
#7 0.534 Cloning into 'cjson'...
#7 DONE 1.9s

#8 [4/5] WORKDIR cjson
#8 sha256:94ac96f085c92d989e3491400ea2e7a585497727c0284bd68d5866262e7f495a
#8 DONE 0.3s

#10 [5/5] COPY build.sh /src/
#10 sha256:6ae7d260d50888edb29c401d709a0442aa1fae76952f02fa7e815214942ba0ba
#10 DONE 0.2s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:edd737fdc68803180070ab1f03a58666d3403f3e9376deda113643da0423993b 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/cjson_cjson done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/cjson_cjson:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:6e639e2d72a51dc510530dd251cbd72924f2ef10b69c54f3ed35c5304d2521eb
#1 transferring dockerfile: 46B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:eccbd626a8b1b510b54cc23c04a1da90f7ee57f009c41d3383f3d0fafde3a341
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/cjson_cjson:latest
#3 sha256:37ede9f3da15a117410b48197b6d39e09feb654de88208488f0675a11e4411cb
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/cjson_cjson
#5 sha256:e67678847d9b608b0b322fed841f6188330ab1c8cd572f5ea900f8fec88c5fd5
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/cjson_cjson-intermediate
#4 sha256:102f443df050a03e6e020f711e1e667e07e9c10d9cee2f377a83a1b1beb4bc87
#4 ERROR: gcr.io/fuzzbench/builders/afl/cjson_cjson-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/cjson_cjson
#5 sha256:e67678847d9b608b0b322fed841f6188330ab1c8cd572f5ea900f8fec88c5fd5
#5 DONE 0.3s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:020a596db2e7bb83fc7ca994e6a2782fae237dff52a2ff1d770012479abed60c
#6 0.343 Cloning into '/afl'...
#6 1.110 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.110 
#6 1.110 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.110 changes and commit them, and you can discard any commits you make in this
#6 1.110 state without impacting any branches by switching back to a branch.
#6 1.110 
#6 1.110 If you want to create a new branch to retain commits you create, you may
#6 1.110 do so (now or later) by using -c with the switch command. Example:
#6 1.110 
#6 1.110   git switch -c <new-branch-name>
#6 1.110 
#6 1.110 Or undo this operation with:
#6 1.110 
#6 1.110   git switch -
#6 1.110 
#6 1.110 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.110 
#6 1.110 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.126 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.126 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.308 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.313 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.718 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.035 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.467 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.621 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.018 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.260 ln -sf afl-as as
#6 5.262 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.265 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.266 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 5.5s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:b89c4b999bd39612cd2c937aebb8474009af6954f86884bdaf429bd40e1a9df5
#7 0.676 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.676 Hit:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.676 Hit:3 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 0.676 Hit:4 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.697 Hit:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 1.550 Reading package lists...
#7 3.056 Reading package lists...
#7 4.475 Building dependency tree...
#7 4.687 Reading state information...
#7 4.933 wget is already the newest version (1.20.3-1ubuntu2).
#7 4.933 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 4.943 --2022-02-18 11:22:31--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 4.946 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.111.133, 185.199.110.133, ...
#7 4.948 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.
#7 4.988 HTTP request sent, awaiting response... 200 OK
#7 5.163 Length: 9177 (9.0K) [text/plain]
#7 5.163 Saving to: '/afl/afl_driver.cpp'
#7 5.164 
#7 5.164      0K ........                                              100% 6.41M=0.001s
#7 5.165 
#7 5.165 2022-02-18 11:22:32 (6.41 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.165 
#7 6.906 ar: creating /libAFL.a
#7 DONE 7.0s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:e972c625bf9b7293f299d234eb62a277c3843af12223fa45a22cedd6ade5123a done
#8 naming to gcr.io/fuzzbench/builders/afl/cjson_cjson-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/cjson_cjson-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:8e6ca1d824016b0cac6d8c0d7b16b4b97022c5f709a4470fe86fa05f791a0853
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:57c2ead1e2c6babb7499ef0d70440e61ae14ce648fda3b76312b56d59d3c5b2a
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:d7c78d486d655a6e18400f58469bc2b4a55183549975456e89ac53e63a449093
#8 transferring context: 559B 0.0s done
#8 DONE 0.0s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:d9ed7d2d9187456fdec958cdff005bee602841bdc35e73864c0491afd784c344
#9 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:18b0be54bf6caeb1bd9991f8b17e6a46a164530d95894a403b5390f85250fcd2
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:a2df512b53da07ff63511e3a04de4c57d29cc402ebe09c8e08b0397839dffea2
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:f9a154283f8bc717fb9da64e53b5b6e32f23ba29fa7dae3f4c334ffbdcf61b84
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:ef0e87506e02e8309334e3a5cc106b4cd4043dd187be24e173eb28546ac98029 done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:b823d5349b77a43f3440c1b09bf4cffa7047b9e2ba192d32a6b9d6ad8a470a6d
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:455fcbfdc941b6bf3ec99fc52c94fd79984722127a751d7f88af0c6f12e591e4
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/cjson_cjson-intermediate:latest
#3 sha256:6d6a4b402d040785610e1d37edc11199630105052eaa4cb7ec80e0f19ea58414
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:31e04295c4fb819613fc891af5d25b402f6c3d3a21e7b34184a8c59fe3db2957
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/cjson_cjson-intermediate
#6 sha256:55903ce1409c92e9b6f4024765626b69fe8527f96d648242ac9689c93f72496a
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/cjson_cjson
#5 sha256:b5b1974189fd799fc0aaac8d331cfd6522829ecb11e1c3ff9e259383be8949fe
#5 ERROR: gcr.io/fuzzbench/builders/afl/cjson_cjson:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:31e04295c4fb819613fc891af5d25b402f6c3d3a21e7b34184a8c59fe3db2957
#12 transferring context: 669.86kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/cjson_cjson-intermediate
#6 sha256:55903ce1409c92e9b6f4024765626b69fe8527f96d648242ac9689c93f72496a
#6 DONE 0.2s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:72aa1af9f4f3b3d97b3851645b862fd3c24f9023d14ec48b326c07e0e1e59e1d
#8 DONE 0.3s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:d467b1c4eac40009f3b2aedbd218afc27d1bb3ce8c534168370104562cddbc41
#9 DONE 14.1s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:a8557d2fd862049c8b0472d61ddf1472ea7f72e1ee7bb512653e48c10ab7a1c1
#10 DONE 0.1s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:b441b5d1f0044756d148d841d97b6b6e37fc82496a98cc4f37c114946368938a
#11 DONE 14.2s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:9bc442102d89a51a6daa8f70d4ed06e6d48219e48f4e92aa76444958b06ece0a
#13 DONE 0.3s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:d5a44dbb4668257e414f054a38b343fbac4860a0e86ff478a51af75dc61cf0d1
#14 DONE 0.6s

#15 [stage-1  8/13] COPY benchmarks/cjson_cjson/benchmark.yaml /
#15 sha256:f888288a979fae6a3b33759ddbd5ea2ff861643dd8810c92835f18a7f7c7ed7c
#15 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:9ae27e520eb3311831beffde349d4b17e44200962d58eb58d4bdcfb0b5087e28
#16 DONE 0.6s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:6e177c7d576d38b32938443ea8f67891058ea763ad25239cb0034d1541b3edf8
#17 DONE 0.2s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:3edd981b1bf131fbd8c5d30bc63776516e4371e0365714d6f00b1d934fab1b62
#18 0.541 Checking out commit c6c28024
#18 2.693 From https://github.com/DaveGamble/cJSON
#18 2.693  * [new tag]         v0.0.0     -> v0.0.0
#18 2.693  * [new tag]         v1.0.0     -> v1.0.0
#18 2.693  * [new tag]         v1.0.1     -> v1.0.1
#18 2.694  * [new tag]         v1.0.2     -> v1.0.2
#18 2.694  * [new tag]         v1.1.0     -> v1.1.0
#18 2.694  * [new tag]         v1.2.0     -> v1.2.0
#18 2.694  * [new tag]         v1.2.1     -> v1.2.1
#18 2.695  * [new tag]         v1.3.0     -> v1.3.0
#18 2.695  * [new tag]         v1.3.1     -> v1.3.1
#18 2.695  * [new tag]         v1.3.2     -> v1.3.2
#18 2.695  * [new tag]         v1.4.0     -> v1.4.0
#18 2.696  * [new tag]         v1.4.1     -> v1.4.1
#18 2.696  * [new tag]         v1.4.2     -> v1.4.2
#18 2.696  * [new tag]         v1.4.3     -> v1.4.3
#18 2.697  * [new tag]         v1.4.4     -> v1.4.4
#18 2.697  * [new tag]         v1.4.5     -> v1.4.5
#18 2.697  * [new tag]         v1.4.6     -> v1.4.6
#18 2.697  * [new tag]         v1.4.7     -> v1.4.7
#18 2.698  * [new tag]         v1.5.0     -> v1.5.0
#18 2.698  * [new tag]         v1.5.1     -> v1.5.1
#18 2.698  * [new tag]         v1.5.2     -> v1.5.2
#18 2.698  * [new tag]         v1.5.3     -> v1.5.3
#18 2.699  * [new tag]         v1.5.4     -> v1.5.4
#18 2.699  * [new tag]         v1.5.5     -> v1.5.5
#18 2.699  * [new tag]         v1.5.6     -> v1.5.6
#18 2.699  * [new tag]         v1.5.7     -> v1.5.7
#18 2.700  * [new tag]         v1.5.8     -> v1.5.8
#18 2.700  * [new tag]         v1.5.9     -> v1.5.9
#18 2.700  * [new tag]         v1.6.0     -> v1.6.0
#18 2.700  * [new tag]         v1.7.0     -> v1.7.0
#18 2.701  * [new tag]         v1.7.1     -> v1.7.1
#18 2.701  * [new tag]         v1.7.10    -> v1.7.10
#18 2.701  * [new tag]         v1.7.11    -> v1.7.11
#18 2.701  * [new tag]         v1.7.12    -> v1.7.12
#18 2.702  * [new tag]         v1.7.13    -> v1.7.13
#18 2.702  * [new tag]         v1.7.14    -> v1.7.14
#18 2.702  * [new tag]         v1.7.15    -> v1.7.15
#18 2.702  * [new tag]         v1.7.2     -> v1.7.2
#18 2.702  * [new tag]         v1.7.3     -> v1.7.3
#18 2.703  * [new tag]         v1.7.4     -> v1.7.4
#18 2.703  * [new tag]         v1.7.5     -> v1.7.5
#18 2.703  * [new tag]         v1.7.6     -> v1.7.6
#18 2.703  * [new tag]         v1.7.7     -> v1.7.7
#18 2.703  * [new tag]         v1.7.8     -> v1.7.8
#18 2.704  * [new tag]         v1.7.9     -> v1.7.9
#18 2.710 error: pathspec 'c6c28024' did not match any file(s) known to git
#18 2.715 error: pathspec 'c6c28024' did not match any file(s) known to git
#18 2.721 error: pathspec 'c6c28024' did not match any file(s) known to git
#18 2.798 Checkout unsuccessful.
#18 DONE 3.3s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:eb1f058166e6adeadf46ad63e3f5c187352e91636c28bff026f092b6da0922ef
#19 DONE 0.9s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:7aa1c699192e91e8402f47ad415383eb4057bd575cc48f27f615652d1454a428
#20 0.594 Run fuzzer_build to build the target
#20 0.706 FUZZ_TARGET = cjson
#20 0.706 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.706 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.714 Building benchmark cjson_cjson with fuzzer afl
#20 0.717 + /src/cjson/fuzzing/ossfuzz.sh
#20 0.979 -- The C compiler identification is Clang 14.0.0
#20 0.994 -- Detecting C compiler ABI info
#20 1.144 -- Detecting C compiler ABI info - done
#20 1.194 -- Check for working C compiler: /usr/local/bin/clang - skipped
#20 1.195 -- Detecting C compile features
#20 1.196 -- Detecting C compile features - done
#20 1.206 -- Performing Test FLAG_SUPPORTED_stdc89
#20 1.351 -- Performing Test FLAG_SUPPORTED_stdc89 - Success
#20 1.354 -- Performing Test FLAG_SUPPORTED_pedantic
#20 1.500 -- Performing Test FLAG_SUPPORTED_pedantic - Success
#20 1.503 -- Performing Test FLAG_SUPPORTED_Wall
#20 1.650 -- Performing Test FLAG_SUPPORTED_Wall - Success
#20 1.653 -- Performing Test FLAG_SUPPORTED_Wextra
#20 1.798 -- Performing Test FLAG_SUPPORTED_Wextra - Success
#20 1.801 -- Performing Test FLAG_SUPPORTED_Werror
#20 1.951 -- Performing Test FLAG_SUPPORTED_Werror - Success
#20 1.954 -- Performing Test FLAG_SUPPORTED_Wstrictprototypes
#20 2.101 -- Performing Test FLAG_SUPPORTED_Wstrictprototypes - Success
#20 2.104 -- Performing Test FLAG_SUPPORTED_Wwritestrings
#20 2.247 -- Performing Test FLAG_SUPPORTED_Wwritestrings - Success
#20 2.250 -- Performing Test FLAG_SUPPORTED_Wshadow
#20 2.391 -- Performing Test FLAG_SUPPORTED_Wshadow - Success
#20 2.394 -- Performing Test FLAG_SUPPORTED_Winitself
#20 2.542 -- Performing Test FLAG_SUPPORTED_Winitself - Success
#20 2.545 -- Performing Test FLAG_SUPPORTED_Wcastalign
#20 2.690 -- Performing Test FLAG_SUPPORTED_Wcastalign - Success
#20 2.693 -- Performing Test FLAG_SUPPORTED_Wformat2
#20 2.844 -- Performing Test FLAG_SUPPORTED_Wformat2 - Success
#20 2.847 -- Performing Test FLAG_SUPPORTED_Wmissingprototypes
#20 2.997 -- Performing Test FLAG_SUPPORTED_Wmissingprototypes - Success
#20 3.000 -- Performing Test FLAG_SUPPORTED_Wstrictoverflow2
#20 3.147 -- Performing Test FLAG_SUPPORTED_Wstrictoverflow2 - Success
#20 3.149 -- Performing Test FLAG_SUPPORTED_Wcastqual
#20 3.304 -- Performing Test FLAG_SUPPORTED_Wcastqual - Success
#20 3.306 -- Performing Test FLAG_SUPPORTED_Wundef
#20 3.456 -- Performing Test FLAG_SUPPORTED_Wundef - Success
#20 3.459 -- Performing Test FLAG_SUPPORTED_Wswitchdefault
#20 3.607 -- Performing Test FLAG_SUPPORTED_Wswitchdefault - Success
#20 3.610 -- Performing Test FLAG_SUPPORTED_Wconversion
#20 3.759 -- Performing Test FLAG_SUPPORTED_Wconversion - Success
#20 3.762 -- Performing Test FLAG_SUPPORTED_Wccompat
#20 3.909 -- Performing Test FLAG_SUPPORTED_Wccompat - Success
#20 3.911 -- Performing Test FLAG_SUPPORTED_fstackprotectorstrong
#20 4.060 -- Performing Test FLAG_SUPPORTED_fstackprotectorstrong - Success
#20 4.063 -- Performing Test FLAG_SUPPORTED_Wcomma
#20 4.209 -- Performing Test FLAG_SUPPORTED_Wcomma - Success
#20 4.212 -- Performing Test FLAG_SUPPORTED_Wdoublepromotion
#20 4.366 -- Performing Test FLAG_SUPPORTED_Wdoublepromotion - Success
#20 4.369 -- Performing Test FLAG_SUPPORTED_Wparentheses
#20 4.521 -- Performing Test FLAG_SUPPORTED_Wparentheses - Success
#20 4.522 -- Performing Test FLAG_SUPPORTED_Wformatoverflow
#20 4.555 -- Performing Test FLAG_SUPPORTED_Wformatoverflow - Failed
#20 4.559 -- Performing Test FLAG_SUPPORTED_Wunusedmacros
#20 4.704 -- Performing Test FLAG_SUPPORTED_Wunusedmacros - Success
#20 4.706 -- Performing Test FLAG_SUPPORTED_Wmissingvariabledeclarations
#20 4.850 -- Performing Test FLAG_SUPPORTED_Wmissingvariabledeclarations - Success
#20 4.853 -- Performing Test FLAG_SUPPORTED_Wusedbutmarkedunused
#20 5.008 -- Performing Test FLAG_SUPPORTED_Wusedbutmarkedunused - Success
#20 5.011 -- Performing Test FLAG_SUPPORTED_Wswitchenum
#20 5.170 -- Performing Test FLAG_SUPPORTED_Wswitchenum - Success
#20 5.173 -- Performing Test FLAG_SUPPORTED_fvisibilityhidden
#20 5.324 -- Performing Test FLAG_SUPPORTED_fvisibilityhidden - Success
#20 5.338 -- Configuring done
#20 5.346 -- Generating done
#20 5.348 -- Build files have been written to: /src/cjson/build
#20 5.377 [ 50%] Building C object CMakeFiles/cjson.dir/cJSON.c.o
#20 6.275 [100%] Linking C static library libcjson.a
#20 6.328 [100%] Built target cjson
#20 6.341 clang-14: warning: treating 'c' input as 'c++' when in C++ mode, this behavior is deprecated [-Wdeprecated]
#20 6.678   adding: src/cjson/fuzzing/inputs/ (stored 0%)
#20 6.678   adding: src/cjson/fuzzing/inputs/test5 (deflated 71%)
#20 6.678   adding: src/cjson/fuzzing/inputs/test8 (deflated 29%)
#20 6.679   adding: src/cjson/fuzzing/inputs/test6 (deflated 43%)
#20 6.679   adding: src/cjson/fuzzing/inputs/test9 (deflated 37%)
#20 6.680   adding: src/cjson/fuzzing/inputs/test3.uu (deflated 57%)
#20 6.680   adding: src/cjson/fuzzing/inputs/test2 (deflated 47%)
#20 6.681   adding: src/cjson/fuzzing/inputs/test10 (deflated 38%)
#20 6.681   adding: src/cjson/fuzzing/inputs/test7 (deflated 54%)
#20 6.682   adding: src/cjson/fuzzing/inputs/test3.bu (deflated 57%)
#20 6.682   adding: src/cjson/fuzzing/inputs/test3.uf (deflated 57%)
#20 6.682   adding: src/cjson/fuzzing/inputs/test11 (deflated 20%)
#20 6.683   adding: src/cjson/fuzzing/inputs/test4 (deflated 70%)
#20 6.683   adding: src/cjson/fuzzing/inputs/test3 (deflated 57%)
#20 6.683   adding: src/cjson/fuzzing/inputs/test1 (deflated 55%)
#20 6.688 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 7.2s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:f48abe79b50552ccfb2e70303a2b17a10511ccd9a687f2a6650af26b451fc975 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/cjson_cjson 0.0s done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/cjson_cjson:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:14816e26eedcdf292aa584570004d150cbba20c126f49c3cb5907e327335fed6
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:f235c7ea06c9872545c735f3a6d31718bbdd90627a47b9f4c3a3afa689670377
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/cjson_cjson-intermediate
#4 sha256:ed07e687033a25f569116be7ac7a8d277a020cca4fdf6fbbe552d78f98c57846
#4 ERROR: gcr.io/fuzzbench/runners/afl/cjson_cjson-intermediate:latest: not found

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:1bbac81dd24d178a85e6f40a81697334e100ff78f25f92131a3470403d610d33
#6 writing image sha256:1bbac81dd24d178a85e6f40a81697334e100ff78f25f92131a3470403d610d33 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/cjson_cjson-intermediate done
#6 DONE 0.2s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/cjson_cjson-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:43fdf42b2619a55d0cdb04d04c2939ba59ead15ced579c2751eb6ab64d092cee
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:08846a1737321456052ae5d57fd13d4e32493f3f3be6bb9d67234dfa56967dbd
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/cjson_cjson:latest
#4 sha256:6a974683dd9c89be30dbff0ca6e2b2cbbc0db9cfb8fcec6f829e035b85299766
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/cjson_cjson-intermediate:latest
#3 sha256:27dcc9f49a75ee0989048497b308eecabb759bfc9bb086cc413046a1136d69b8
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:561751eaef79cd5a7707cb0384c931dee437a827e2843d9b7fa50c8d52c6e786
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/cjson_cjson-intermediate
#6 sha256:206eb9a52bd449e7c992ffbb12dc8508ee4e9332953bf6e8851d98df5d67f911
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/cjson_cjson
#10 sha256:b3fc4dc2fca8d3c2e74cc8470e8d17658cab2b7db64e758c57d4dc11a4976a39
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/cjson_cjson
#5 sha256:3022c46d28ccd7d35af76db94b26d5dc52e1488db860e76f452cd36a79794646
#5 ERROR: gcr.io/fuzzbench/runners/afl/cjson_cjson:latest: not found

#12 [internal] load build context
#12 sha256:561751eaef79cd5a7707cb0384c931dee437a827e2843d9b7fa50c8d52c6e786
#12 transferring context: 19.00MB 0.6s done
#12 DONE 0.8s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/cjson_cjson
#10 sha256:b3fc4dc2fca8d3c2e74cc8470e8d17658cab2b7db64e758c57d4dc11a4976a39
#10 DONE 1.1s

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:ce6bb8c8687f9676896553256222849b3adf4216c8e42b48a791ebe3c3ecad1f
#8 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:65f3c0957d38ada94eab6251257bef9842fb106ec44b62d8759dc363f52a1349
#7 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:93058f93f88106f506bfe32621ab170b38ba73b24d71599bef23bbbdb2eb868f
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:f2575074df0351cc7beb84d5b6234d8ac515bb50b1d2ca19fde6e735725bb244
#11 DONE 0.4s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:ea8c681f977bed3893e05b923db9c989b5dc99c3e31f56b25aa55e5ccbdbf2a8
#13 DONE 1.7s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:1a541661707c32b6f39b5e95763086ef42b8a0615f3d586b42f138932a1898a9
#14 DONE 0.3s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:74e9463a40f7a86bb9cc78d145c789f45a54929222f5de389fc272faedb15546
#15 DONE 0.6s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:c789290e21c6b1b31f15a7c4976e40c2d1fe0bfece48bd403d7b1a1866d9d2a9
#16 DONE 0.7s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:6760882fdcacbef51953cc8edaba5f6d3c0e43ee5153fae65d391dd0eace2536
#17 DONE 0.2s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:8f49de4b85730bd9b85a699f623628a68c5e50fbac58cd534aad96f1bbf5c738
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:e80c11862cb70845a57fa1b5c1e7f299b39ae921f8f12c3cbdc7d8402961ee96
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:7c2bc06da58576b42f79cdceb9f75e9d11e79cf13a5c4f7b44888b4d213d8cc4
#20 DONE 0.5s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:1d36d230253735fea47ecd52e72eef9ffdde5eec09d8227511f919eab840620e 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/cjson_cjson
#21 naming to gcr.io/fuzzbench/runners/afl/cjson_cjson done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/cjson_cjson:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7faa51c27ee0> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:5a655dc20470f00c51cab796e31685d4601e86c0104741ce66b973438c2e9ff2
#1 transferring dockerfile: 32B done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:48c9318b3c9f1c0fbc62dffd4f50f622dd79a8eac6a88971ed57f80bc7c80488
#2 transferring context: 2B done
#2 DONE 0.4s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#10 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/cjson_cjson
#10 sha256:f1b7d88855476cb21adb878937cc687f4bd259050743f8ddedad7185759b71a8
#10 DONE 0.0s

#4 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#4 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:64154048b37916d08d021c59abaaef3511ed1c6cb825f607a7bce983e8d90857
#8 transferring context: 30B done
#8 DONE 0.1s

#5 [2/5] RUN apt-get update && apt-get install -y cmake
#5 sha256:c41efadccd456f2e226cd78e766538015e031312db1bb5ea4d112c239de6cb0d
#5 CACHED

#6 [3/5] RUN git clone --depth 1 https://github.com/DaveGamble/cJSON.git cjson
#6 sha256:402253c2c2806b4c3b63d19d1ad098b22eecf96fee112f994df1e1e326fe745f
#6 CACHED

#7 [4/5] WORKDIR cjson
#7 sha256:94ac96f085c92d989e3491400ea2e7a585497727c0284bd68d5866262e7f495a
#7 CACHED

#9 [5/5] COPY build.sh /src/
#9 sha256:5532838c22ff2f728f31acc1bdbcffbba993716086a4c7b669a9202a6d1768de
#9 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:edd737fdc68803180070ab1f03a58666d3403f3e9376deda113643da0423993b 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/cjson_cjson done
#11 DONE 0.3s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:37ce105026f4846f0ed106faf7ff26c4c29ce942652985e0bbdf387e3d162456
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:e119ddf6b8cbd15842ca3dbe45e57f87932a8d1acfba5396e3d8cfd7bc0e6a4a
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/cjson_cjson:latest
#3 sha256:37ede9f3da15a117410b48197b6d39e09feb654de88208488f0675a11e4411cb
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/cjson_cjson-intermediate
#4 sha256:102f443df050a03e6e020f711e1e667e07e9c10d9cee2f377a83a1b1beb4bc87
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/cjson_cjson
#5 sha256:e67678847d9b608b0b322fed841f6188330ab1c8cd572f5ea900f8fec88c5fd5
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:020a596db2e7bb83fc7ca994e6a2782fae237dff52a2ff1d770012479abed60c
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:b89c4b999bd39612cd2c937aebb8474009af6954f86884bdaf429bd40e1a9df5
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:e972c625bf9b7293f299d234eb62a277c3843af12223fa45a22cedd6ade5123a 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/cjson_cjson-intermediate done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:fa4c90dfce04afb0803c3cc288855fdbb5be60e2441044af13b0d07a2a60b029
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:17b8579b4cd21e69ba957b0cba234cf9c55ae8830bf9e16c410380615cef1bf1
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:b083a0dfa3930a81b5b3ce451334cf8b9e8ed3e4d152beec156d77e3136fd3b0
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:b7e52caed84708aea91261f80b4690e46d27e57e408f7017336a397563d427f3
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:8cc8f64860938e64b9fa87807152efe8736bf3be572734aaedf9b7631eb40180
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:5d4f77d5de41e5adb93911b98d029ad90ab1ad60e480d7b3fca0da2b8b08a293
#9 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:be61bc8c08c21353c3c7c58f2978c568301bd196da7d12f2e5670775b3c388ef
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:ef0e87506e02e8309334e3a5cc106b4cd4043dd187be24e173eb28546ac98029 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:25665a37d63105d0d375e6c106cb8d67d97e6e26bbd79c8cd39b4b755e7a2d5b
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:2d518eb20d423b9c9ea034e33425413748f55f42ddede9b10b7ac034c3ea862a
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/cjson_cjson-intermediate:latest
#3 sha256:6d6a4b402d040785610e1d37edc11199630105052eaa4cb7ec80e0f19ea58414
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/cjson_cjson-intermediate
#6 sha256:55903ce1409c92e9b6f4024765626b69fe8527f96d648242ac9689c93f72496a
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/cjson_cjson
#5 sha256:b5b1974189fd799fc0aaac8d331cfd6522829ecb11e1c3ff9e259383be8949fe
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:a2b1eeca36de292102a853d3c45974ca81907a35fc12be86333cf4f07da40b52
#12 transferring context: 669.86kB 0.1s done
#12 DONE 0.1s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:a8557d2fd862049c8b0472d61ddf1472ea7f72e1ee7bb512653e48c10ab7a1c1
#10 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:20e4b538815b1453044ebfb8422595852b577af9311e353d52b4c9490d7e2bfa
#14 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:d467b1c4eac40009f3b2aedbd218afc27d1bb3ce8c534168370104562cddbc41
#9 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:e77bc06f5d0cb23640e389d68e2d3e7c20161758c6eadcb6d63d8de5239adee8
#19 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:72aa1af9f4f3b3d97b3851645b862fd3c24f9023d14ec48b326c07e0e1e59e1d
#8 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:d4fe9d0bdc23bfad67815b50696bffd7702ca5f196b7293cc7d70fbe402787ab
#16 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:487dee3c07ca61bf07eb319c37635b033e37dfdc3acebd2fc82d0d8751bdbecf
#13 CACHED

#15 [stage-1  8/13] COPY benchmarks/cjson_cjson/benchmark.yaml /
#15 sha256:616987106d7cd120f5a71aab0633ff37197c88b02feb14d3b925b0c78a5b2c23
#15 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:b6576db9c5135aaa9f0a009294a6c408e34818aae35f06b5f9a6df6dd2471219
#17 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:e03d1cf18cfde68703a6cbc1b6b6943d57ae0d39a8bc8e25e783433adc994ef8
#18 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:b441b5d1f0044756d148d841d97b6b6e37fc82496a98cc4f37c114946368938a
#11 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:78e2f09ee4548136f243848a98d928fdbab0989e9c382e2f1f85a7772da401d2
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:f48abe79b50552ccfb2e70303a2b17a10511ccd9a687f2a6650af26b451fc975
#21 writing image sha256:f48abe79b50552ccfb2e70303a2b17a10511ccd9a687f2a6650af26b451fc975 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/cjson_cjson done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:4cdedc3524bb46c2c33c45ab8ecb1d695a961435fe2f4fcb2a3720e863d6691a
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:6c7ef9b787e6bee2ceb07200c1614cd672aaef9ee37cb32794c52c0db155a0dc
#2 transferring context: 2B done
#2 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/cjson_cjson-intermediate
#4 sha256:ed07e687033a25f569116be7ac7a8d277a020cca4fdf6fbbe552d78f98c57846
#4 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:1bbac81dd24d178a85e6f40a81697334e100ff78f25f92131a3470403d610d33 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/cjson_cjson-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:45ba0d2d19a0487b6d8ea749b6b243726b52435e021093df63bd7d0f00315ada
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:f4219059fb7e7f9478861c2e72a9649613a910a639b5c813e47a1f42b2ab0390
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/cjson_cjson-intermediate:latest
#3 sha256:27dcc9f49a75ee0989048497b308eecabb759bfc9bb086cc413046a1136d69b8
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/cjson_cjson:latest
#4 sha256:6a974683dd9c89be30dbff0ca6e2b2cbbc0db9cfb8fcec6f829e035b85299766
#4 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/cjson_cjson-intermediate
#6 sha256:206eb9a52bd449e7c992ffbb12dc8508ee4e9332953bf6e8851d98df5d67f911
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/cjson_cjson
#5 sha256:3022c46d28ccd7d35af76db94b26d5dc52e1488db860e76f452cd36a79794646
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/cjson_cjson
#10 sha256:b3fc4dc2fca8d3c2e74cc8470e8d17658cab2b7db64e758c57d4dc11a4976a39
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:a5b6b75acb54788ed726733553904750c8728e7d17a8a261f3d0d88722959219
#12 transferring context: 19.00MB 0.7s done
#12 DONE 0.7s

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:f2575074df0351cc7beb84d5b6234d8ac515bb50b1d2ca19fde6e735725bb244
#11 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:8d43eb933d191960d16cfcaf969cc82fd829a9c5746f1e1da56f4bc0a5b7f315
#16 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:65f3c0957d38ada94eab6251257bef9842fb106ec44b62d8759dc363f52a1349
#7 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:c7ebbfb3ff169a561ec5238b730e6d2ce9b5028cf314c08c35dfdc036827797e
#18 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:9ee39c03dee7f352dac879524e039d9325f9df233b6f291db5f013a712bf7954
#17 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:ce6bb8c8687f9676896553256222849b3adf4216c8e42b48a791ebe3c3ecad1f
#8 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:abc41f448b4dbca7588a5629a8c9f2b1f388453367693ddc3229e11567772228
#14 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:71c65787b9984321ffecd906f4167e40b22a3cc076a827b94c10e177aca1b6f9
#19 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:93058f93f88106f506bfe32621ab170b38ba73b24d71599bef23bbbdb2eb868f
#9 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:bfe5672e57006c82ab00bc2a24ce8517596ef4a9118d355160f0541fecb9be2a
#13 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:458796fc3cce7e98e283d2881539f79d27f750fa66a80db7a5d8030c3d379c55
#15 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:aac0ea8a06f52b0c7e3f5f7635b28c778247916dede81529b31f4751b336b5e2
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:1d36d230253735fea47ecd52e72eef9ffdde5eec09d8227511f919eab840620e 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/cjson_cjson done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f1f66642ee0> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
