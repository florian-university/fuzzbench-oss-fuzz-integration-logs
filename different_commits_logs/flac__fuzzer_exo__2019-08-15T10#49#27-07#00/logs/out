WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: flac_fuzzer_exo.
INFO:root:Please run "make test-run-afl-flac_fuzzer_exo" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:9b3bbb4d1b3b689f1d81b1d43270abbf3004ff724680f948acbd92f0ed2b6373
#1 transferring dockerfile: 1.13kB 0.0s done
#1 DONE 0.4s

#2 [internal] load .dockerignore
#2 sha256:40d5e9370271ea2228f8b26961ac473dc090378091411d090b7c2c99d0f1ee2d
#2 transferring context: 2B done
#2 DONE 0.5s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#11 [internal] load build context
#11 sha256:e935f47293d2b83c62acd6cbf031a50f9760c94347aebac4e79059681a8542d0
#11 DONE 0.0s

#5 [1/7] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo
#4 sha256:a2fbe73c3833545b45b576c9992dfb705a0693cbfe0f8d0d14ecbbfb8e22a4c2
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo:latest: not found

#5 [1/7] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 CACHED

#11 [internal] load build context
#11 sha256:e935f47293d2b83c62acd6cbf031a50f9760c94347aebac4e79059681a8542d0
#11 transferring context: 1.59kB done
#11 DONE 0.3s

#6 [2/7] RUN apt-get update && apt-get install -y make autoconf automake libtool libtool-bin pkg-config gettext sudo
#6 sha256:cf4cf36dc427e50cf8d862a59b23e8905d0bb90f0ee93db68bdcbc101414cae3
#6 2.037 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#6 2.037 Get:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#6 2.037 Get:3 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#6 2.037 Hit:4 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 2.091 Get:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#6 3.168 Get:6 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1547 kB]
#6 3.632 Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [752 kB]
#6 3.735 Get:8 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1134 kB]
#6 3.814 Get:9 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [827 kB]
#6 3.878 Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1973 kB]
#6 5.179 Fetched 6568 kB in 3s (2528 kB/s)
#6 5.179 Reading package lists...
#6 8.592 Reading package lists...
#6 11.65 Building dependency tree...
#6 12.08 Reading state information...
#6 12.62 make is already the newest version (4.2.1-1.2).
#6 12.62 make set to manually installed.
#6 12.62 The following additional packages will be installed:
#6 12.63   autotools-dev gettext-base libcroco3 libltdl-dev libltdl7 libsigsegv2 m4
#6 12.63 Suggested packages:
#6 12.63   autoconf-archive gnu-standards autoconf-doc gettext-doc autopoint
#6 12.63   libasprintf-dev libgettextpo-dev libtool-doc gfortran | fortran95-compiler
#6 12.63   gcj-jdk m4-doc
#6 12.73 The following NEW packages will be installed:
#6 12.73   autoconf automake autotools-dev gettext gettext-base libcroco3 libltdl-dev
#6 12.74   libltdl7 libsigsegv2 libtool libtool-bin m4 pkg-config sudo
#6 12.84 0 upgraded, 14 newly installed, 0 to remove and 0 not upgraded.
#6 12.84 Need to get 3125 kB of archives.
#6 12.84 After this operation, 14.0 MB of additional disk space will be used.
#6 12.84 Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 sudo amd64 1.8.31-1ubuntu1.2 [514 kB]
#6 12.99 Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 gettext-base amd64 0.19.8.1-10build1 [50.2 kB]
#6 13.00 Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 libsigsegv2 amd64 2.12-2 [13.9 kB]
#6 13.00 Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 m4 amd64 1.4.18-4 [199 kB]
#6 13.01 Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 autoconf all 2.69-11.1 [321 kB]
#6 13.04 Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 autotools-dev all 20180224.1 [39.6 kB]
#6 13.04 Get:7 http://archive.ubuntu.com/ubuntu focal/main amd64 automake all 1:1.16.1-4ubuntu6 [522 kB]
#6 13.08 Get:8 http://archive.ubuntu.com/ubuntu focal/main amd64 libcroco3 amd64 0.6.13-1 [82.5 kB]
#6 13.16 Get:9 http://archive.ubuntu.com/ubuntu focal/main amd64 gettext amd64 0.19.8.1-10build1 [895 kB]
#6 13.20 Get:10 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl7 amd64 2.4.6-14 [38.5 kB]
#6 13.20 Get:11 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl-dev amd64 2.4.6-14 [162 kB]
#6 13.21 Get:12 http://archive.ubuntu.com/ubuntu focal/main amd64 libtool all 2.4.6-14 [161 kB]
#6 13.21 Get:13 http://archive.ubuntu.com/ubuntu focal/main amd64 libtool-bin amd64 2.4.6-14 [80.1 kB]
#6 13.21 Get:14 http://archive.ubuntu.com/ubuntu focal/main amd64 pkg-config amd64 0.29.1-0ubuntu4 [45.5 kB]
#6 13.79 debconf: delaying package configuration, since apt-utils is not installed
#6 13.95 Fetched 3125 kB in 0s (7061 kB/s)
#6 14.08 Selecting previously unselected package sudo.
#6 14.08 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21291 files and directories currently installed.)
#6 14.17 Preparing to unpack .../00-sudo_1.8.31-1ubuntu1.2_amd64.deb ...
#6 14.18 Unpacking sudo (1.8.31-1ubuntu1.2) ...
#6 14.37 Selecting previously unselected package gettext-base.
#6 14.38 Preparing to unpack .../01-gettext-base_0.19.8.1-10build1_amd64.deb ...
#6 14.39 Unpacking gettext-base (0.19.8.1-10build1) ...
#6 14.50 Selecting previously unselected package libsigsegv2:amd64.
#6 14.50 Preparing to unpack .../02-libsigsegv2_2.12-2_amd64.deb ...
#6 14.51 Unpacking libsigsegv2:amd64 (2.12-2) ...
#6 14.59 Selecting previously unselected package m4.
#6 14.59 Preparing to unpack .../03-m4_1.4.18-4_amd64.deb ...
#6 14.60 Unpacking m4 (1.4.18-4) ...
#6 14.72 Selecting previously unselected package autoconf.
#6 14.73 Preparing to unpack .../04-autoconf_2.69-11.1_all.deb ...
#6 14.73 Unpacking autoconf (2.69-11.1) ...
#6 14.92 Selecting previously unselected package autotools-dev.
#6 14.92 Preparing to unpack .../05-autotools-dev_20180224.1_all.deb ...
#6 14.92 Unpacking autotools-dev (20180224.1) ...
#6 15.03 Selecting previously unselected package automake.
#6 15.03 Preparing to unpack .../06-automake_1%3a1.16.1-4ubuntu6_all.deb ...
#6 15.04 Unpacking automake (1:1.16.1-4ubuntu6) ...
#6 15.26 Selecting previously unselected package libcroco3:amd64.
#6 15.26 Preparing to unpack .../07-libcroco3_0.6.13-1_amd64.deb ...
#6 15.27 Unpacking libcroco3:amd64 (0.6.13-1) ...
#6 15.36 Selecting previously unselected package gettext.
#6 15.36 Preparing to unpack .../08-gettext_0.19.8.1-10build1_amd64.deb ...
#6 15.37 Unpacking gettext (0.19.8.1-10build1) ...
#6 15.68 Selecting previously unselected package libltdl7:amd64.
#6 15.68 Preparing to unpack .../09-libltdl7_2.4.6-14_amd64.deb ...
#6 15.69 Unpacking libltdl7:amd64 (2.4.6-14) ...
#6 15.79 Selecting previously unselected package libltdl-dev:amd64.
#6 15.80 Preparing to unpack .../10-libltdl-dev_2.4.6-14_amd64.deb ...
#6 15.80 Unpacking libltdl-dev:amd64 (2.4.6-14) ...
#6 15.95 Selecting previously unselected package libtool.
#6 15.95 Preparing to unpack .../11-libtool_2.4.6-14_all.deb ...
#6 15.96 Unpacking libtool (2.4.6-14) ...
#6 16.10 Selecting previously unselected package libtool-bin.
#6 16.10 Preparing to unpack .../12-libtool-bin_2.4.6-14_amd64.deb ...
#6 16.11 Unpacking libtool-bin (2.4.6-14) ...
#6 16.22 Selecting previously unselected package pkg-config.
#6 16.23 Preparing to unpack .../13-pkg-config_0.29.1-0ubuntu4_amd64.deb ...
#6 16.24 Unpacking pkg-config (0.29.1-0ubuntu4) ...
#6 16.37 Setting up gettext-base (0.19.8.1-10build1) ...
#6 16.40 Setting up autotools-dev (20180224.1) ...
#6 16.41 Setting up libsigsegv2:amd64 (2.12-2) ...
#6 16.42 Setting up libcroco3:amd64 (0.6.13-1) ...
#6 16.43 Setting up sudo (1.8.31-1ubuntu1.2) ...
#6 16.50 Setting up pkg-config (0.29.1-0ubuntu4) ...
#6 16.65 Setting up libltdl7:amd64 (2.4.6-14) ...
#6 16.66 Setting up gettext (0.19.8.1-10build1) ...
#6 16.68 Setting up libtool (2.4.6-14) ...
#6 16.69 Setting up m4 (1.4.18-4) ...
#6 16.70 Setting up autoconf (2.69-11.1) ...
#6 16.71 Setting up automake (1:1.16.1-4ubuntu6) ...
#6 16.73 update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
#6 16.73 update-alternatives: warning: skip creation of /usr/share/man/man1/automake.1.gz because associated file /usr/share/man/man1/automake-1.16.1.gz (of link group automake) doesn't exist
#6 16.73 update-alternatives: warning: skip creation of /usr/share/man/man1/aclocal.1.gz because associated file /usr/share/man/man1/aclocal-1.16.1.gz (of link group automake) doesn't exist
#6 16.74 Setting up libtool-bin (2.4.6-14) ...
#6 16.75 Setting up libltdl-dev:amd64 (2.4.6-14) ...
#6 16.76 Processing triggers for libc-bin (2.31-0ubuntu9.2) ...
#6 DONE 17.2s

#7 [3/7] RUN git clone --depth 1 https://github.com/xiph/flac.git
#7 sha256:0ed5b13c40ae159e86af44a58886a684947b11a7b4fc444d79df5fd6b253ef5b
#7 1.445 Cloning into 'flac'...
#7 DONE 3.1s

#8 [4/7] RUN git clone --depth 1 https://github.com/xiph/ogg.git
#8 sha256:281ada0474cd672602aba24eee565dcc2e8b66c1cf406288a01972070a0a5744
#8 1.336 Cloning into 'ogg'...
#8 DONE 2.9s

#9 [5/7] RUN git clone --depth 1 https://github.com/guidovranken/fuzzing-headers.git
#9 sha256:641642142aa1c88e89b9baff285f7dc74c7f0eceaff3b3500b12d3c6e6d86e21
#9 1.123 Cloning into 'fuzzing-headers'...
#9 DONE 6.0s

#10 [6/7] RUN git clone --depth 1 https://github.com/guidovranken/flac-fuzzers.git
#10 sha256:8340a5890971b05c713ee1c6e587a013fc8cb435330b99e5ea0c726f5c0d7681
#10 1.165 Cloning into 'flac-fuzzers'...
#10 DONE 2.0s

#12 [7/7] COPY build.sh /src/
#12 sha256:1593bb9d8c2bf7c0ad939281d1b091cabe89488547cbd652f63b0190a843bfab
#12 DONE 0.2s

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:bd810bb9c7f0037ac9186ae1a0f9e8eeae24eea2561388eb528d76d3c123da36
#13 writing image sha256:bd810bb9c7f0037ac9186ae1a0f9e8eeae24eea2561388eb528d76d3c123da36 done
#13 naming to gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:b395f0948585157d6c38446bd7d56dd3337a70709554c0c23fd3350db7f08e49
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:89084c08f0d10cf1178f4225a770740e69219b1941ea5788f96b6524836924f9
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo:latest
#3 sha256:75851e499ee75ab0c843bda8ada84e920846da943fe81e9e508b8b4131a58852
#3 DONE 0.0s

#7 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo
#7 sha256:90673f88336bbc1921494a0e989d3a05f86833fb50693e01e204a48f3faaa2a5
#7 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate
#4 sha256:236679cb9d9e071be2329edd700fc5970b426d1521f4cecaed39bcffe88c4d18
#4 ERROR: gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate:latest: not found

#7 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo
#7 sha256:90673f88336bbc1921494a0e989d3a05f86833fb50693e01e204a48f3faaa2a5
#7 DONE 0.3s

#5 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#5 sha256:07c39a69203b6eeb52ba4c79eb515491df80c6877733b5daac806584e4f85a25
#5 1.093 Cloning into '/afl'...
#5 2.212 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#5 2.212 
#5 2.212 You are in 'detached HEAD' state. You can look around, make experimental
#5 2.212 changes and commit them, and you can discard any commits you make in this
#5 2.212 state without impacting any branches by switching back to a branch.
#5 2.212 
#5 2.212 If you want to create a new branch to retain commits you create, you may
#5 2.212 do so (now or later) by using -c with the switch command. Example:
#5 2.212 
#5 2.212   git switch -c <new-branch-name>
#5 2.212 
#5 2.212 Or undo this operation with:
#5 2.212 
#5 2.212   git switch -
#5 2.212 
#5 2.212 Turn off this advice by setting config variable advice.detachedHead to false
#5 2.212 
#5 2.212 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#5 2.261 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#5 2.265 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#5 2.626 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#5 2.649 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#5 8.003 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#5 8.635 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#5 9.496 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#5 9.769 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#5 10.59 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#5 11.07 ln -sf afl-as as
#5 11.07 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#5 11.07 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#5 11.07 [+] All done! Be sure to review README - it's pretty short and useful.
#5 DONE 11.9s

#6 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#6 sha256:2806afed7fd6e4d15ae611dde90a37ad06ee457e240feb73e87f2e34fd8a9824
#6 1.131 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#6 1.131 Hit:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#6 1.131 Hit:3 http://security.ubuntu.com/ubuntu focal-security InRelease
#6 1.139 Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#6 2.133 Hit:5 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 2.331 Reading package lists...
#6 5.374 Reading package lists...
#6 7.256 Building dependency tree...
#6 7.523 Reading state information...
#6 7.877 wget is already the newest version (1.20.3-1ubuntu2).
#6 7.877 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#6 7.891 --2022-02-16 14:36:19--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#6 7.893 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.109.133, 185.199.110.133, 185.199.111.133, ...
#6 7.906 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.109.133|:443... connected.
#6 7.928 HTTP request sent, awaiting response... 200 OK
#6 8.126 Length: 9177 (9.0K) [text/plain]
#6 8.126 Saving to: '/afl/afl_driver.cpp'
#6 8.126 
#6 8.126      0K ........                                              100% 8.87M=0.001s
#6 8.127 
#6 8.127 2022-02-16 14:36:19 (8.87 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#6 8.127 
#6 10.26 ar: creating /libAFL.a
#6 DONE 14.5s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:769ffb2d5db083454b0fce94b739ba77c372908b23cc470206f66f6e23c9e04e
#8 writing image sha256:769ffb2d5db083454b0fce94b739ba77c372908b23cc470206f66f6e23c9e04e done
#8 naming to gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate:
------
#2 [internal] load .dockerignore
#2 sha256:38bd005f8accd6be2120eb84f4185ee535ec57aafcc8e5228e0b09bbfec8bf9e
#2 transferring context: 34B done
#2 DONE 0.4s

#1 [internal] load build definition from Dockerfile
#1 sha256:b33275ec093b418de4d3fadb90a6bb45524d6e0d4afee699c3db14fd10342ade
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.3s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:b6511765488a6033cb397012e6ca3720aa11e927a503b95816439ae0107fb604
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:d4b5f70c9713d0310b7852e4780959845d14993460e9435409e18a5458e1c029
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:a9524daec955b50c60649617f3a3a2ade6e35268d9467ef33f2f6fe47a326acf
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:9a94626229689c5c524164108cd8145451ed94b52b36115c203edf5e586fce47
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:9bee32a85e5b480ad9458bbdd86503b65e30ed2204c73e94e8fddef92547fbfe
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:43ae897281ecb5aa1863084ac5aa113166ed787e989205d4cd7d966d5648f4e9
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:51c7ea50876ea1e3a3b166c70a7afbe4daa2e2a05dcd3e0d518fdcbca3eb801b
#2 transferring context: 34B 0.0s done
#2 DONE 0.1s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate:latest
#3 sha256:65786f6db6a2c621e280d2502d33fa2ff2695d4b3e9de78d38de10034c4f2fc5
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:5748c1ba1b68503b912946212170f6b0bf9035563569a936e0c1b343215da089
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate
#6 sha256:074800b24ebc8e3fa3f627e2d93118f682b8bad32b8b0e132c94655fdc5f71ab
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo
#5 sha256:56d3c0d9d52a62d251865c34d45bcc2bdc9b8031b30f17bbbbeb6d7fd9c0bcff
#5 ERROR: gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo:latest: not found

#12 [internal] load build context
#12 sha256:5748c1ba1b68503b912946212170f6b0bf9035563569a936e0c1b343215da089
#12 transferring context: 669.87kB 0.2s done
#12 DONE 0.3s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate
#6 sha256:074800b24ebc8e3fa3f627e2d93118f682b8bad32b8b0e132c94655fdc5f71ab
#6 DONE 1.1s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:06f8b4e46f269cc71b6828c8968ee529e7ce94107d90ee0323f2430c83790f88
#8 DONE 1.5s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:10bb0a3ca18f4d0d322ae7969514ed97d4b23c3c8a19a2ec4f246c0d0c495183
#9 DONE 22.2s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:527e5871f1898dc68f91f671505b9ac9fcb04ed7452b162a0d6c326ad4117613
#10 DONE 0.3s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:1aaf39dd1fc2e1332f6da1080f2d5cd5d80239e989daf5ca36d2240bca78a637
#11 DONE 20.4s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:6a06ce857c5f533c99bcbb3d0c3b32ab2bcdafbe7270571602e62df0213b25f3
#13 DONE 0.6s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:27296971d116b2877654dd5cace98ae40b174e21423a587918c4195a5fb22821
#14 DONE 0.8s

#15 [stage-1  8/13] COPY benchmarks/flac_fuzzer_exo/benchmark.yaml /
#15 sha256:b1ca0e1d2dcfa784762a079e2a01090f88803388d62441d4f9ec8b7390ad6e27
#15 DONE 0.3s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:3adf4d1ff6bf3f059c14f36a34b09ca4b26aa8368a645b2f83687f881c36acc6
#16 DONE 0.7s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:57b1aac17cc004f5be956cfdb9a7c10bdbc1ab1ad4b5665b293f60e79100b92e
#17 DONE 0.3s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:ef17051c056fb9f527944e463e8c80576aa68832c89f03bfb222e6df52f9e03c
#18 0.677 Checking out commit 580035c3
#18 1.236 error: pathspec '580035c3' did not match any file(s) known to git
#18 1.889 error: pathspec '580035c3' did not match any file(s) known to git
#18 3.670 From https://github.com/xiph/ogg
#18 3.670  * [new tag]         v1.1.1     -> v1.1.1
#18 3.670  * [new tag]         v1.1.2     -> v1.1.2
#18 3.670  * [new tag]         v1.1.3     -> v1.1.3
#18 3.670  * [new tag]         v1.1.4     -> v1.1.4
#18 3.671  * [new tag]         v1.2.0     -> v1.2.0
#18 3.671  * [new tag]         v1.2.1     -> v1.2.1
#18 3.671  * [new tag]         v1.2.2     -> v1.2.2
#18 3.672  * [new tag]         v1.3.0     -> v1.3.0
#18 3.672  * [new tag]         v1.3.1     -> v1.3.1
#18 3.672  * [new tag]         v1.3.2     -> v1.3.2
#18 3.673  * [new tag]         v1.3.3     -> v1.3.3
#18 3.673  * [new tag]         v1.3.4     -> v1.3.4
#18 3.673  * [new tag]         v1.3.5     -> v1.3.5
#18 3.680 error: pathspec '580035c3' did not match any file(s) known to git
#18 8.810 From https://github.com/xiph/flac
#18 8.810  * [new tag]           1.2.0      -> 1.2.0
#18 8.810  * [new tag]           1.2.1      -> 1.2.1
#18 8.811  * [new tag]           1.3.0      -> 1.3.0
#18 8.811  * [new tag]           1.3.0pre1  -> 1.3.0pre1
#18 8.811  * [new tag]           1.3.0pre2  -> 1.3.0pre2
#18 8.811  * [new tag]           1.3.0pre4  -> 1.3.0pre4
#18 8.812  * [new tag]           1.3.1      -> 1.3.1
#18 8.812  * [new tag]           1.3.1pre1  -> 1.3.1pre1
#18 8.812  * [new tag]           1.3.2      -> 1.3.2
#18 8.812  * [new tag]           1.3.3      -> 1.3.3
#18 8.818 error: pathspec '580035c3' did not match any file(s) known to git
#18 8.824 error: pathspec '580035c3' did not match any file(s) known to git
#18 8.830 error: pathspec '580035c3' did not match any file(s) known to git
#18 8.872 error: pathspec '580035c3' did not match any file(s) known to git
#18 8.906 error: pathspec '580035c3' did not match any file(s) known to git
#18 9.013 Checkout unsuccessful.
#18 DONE 9.3s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:66b6719534b3942b563026ed19d93f7274a458af0108d046c026ccca3a648e8a
#19 DONE 1.1s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:01a4ea36376557a7175486a5e43e7b9a4dfd8a8d70a0c17df707cb3c9db5fc00
#20 0.617 Run fuzzer_build to build the target
#20 0.784 FUZZ_TARGET = fuzzer_exo
#20 0.784 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.784 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.796 Building benchmark flac_fuzzer_exo with fuzzer afl
#20 0.800 + export ASAN_OPTIONS=detect_leaks=0
#20 0.800 + ASAN_OPTIONS=detect_leaks=0
#20 0.800 + export 'CXXFLAGS=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -D_GLIBCXX_DEBUG'
#20 0.800 + CXXFLAGS='-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -D_GLIBCXX_DEBUG'
#20 0.800 + mkdir /src/libogg-install
#20 0.802 + cd /src/ogg
#20 0.802 + ./autogen.sh
#20 0.806 Updating build configuration files for libogg, please wait....
#20 5.613 libtoolize: putting auxiliary files in '.'.
#20 5.613 libtoolize: copying file './ltmain.sh'
#20 5.645 libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
#20 5.645 libtoolize: copying file 'm4/libtool.m4'
#20 5.673 libtoolize: copying file 'm4/ltoptions.m4'
#20 5.701 libtoolize: copying file 'm4/ltsugar.m4'
#20 5.729 libtoolize: copying file 'm4/ltversion.m4'
#20 5.757 libtoolize: copying file 'm4/lt~obsolete.m4'
#20 10.20 configure.ac:5: installing './compile'
#20 10.20 configure.ac:5: installing './config.guess'
#20 10.21 configure.ac:5: installing './config.sub'
#20 10.21 configure.ac:9: installing './install-sh'
#20 10.21 configure.ac:9: installing './missing'
#20 10.48 src/Makefile.am: installing './depcomp'
#20 10.54 + ./configure --prefix=/src/libogg-install
#20 10.72 checking build system type... x86_64-pc-linux-gnu
#20 10.81 checking host system type... x86_64-pc-linux-gnu
#20 10.81 checking how to print strings... printf
#20 10.86 checking for gcc... clang
#20 10.91 checking whether the C compiler works... yes
#20 11.03 checking for C compiler default output file name... a.out
#20 11.03 checking for suffix of executables... 
#20 11.14 checking whether we are cross compiling... no
#20 11.27 checking for suffix of object files... o
#20 11.29 checking whether we are using the GNU C compiler... yes
#20 11.31 checking whether clang accepts -g... yes
#20 11.33 checking for clang option to accept ISO C89... none needed
#20 11.37 checking whether clang understands -c and -o together... yes
#20 11.40 checking for a sed that does not truncate output... /usr/bin/sed
#20 11.41 checking for grep that handles long lines and -e... /usr/bin/grep
#20 11.41 checking for egrep... /usr/bin/grep -E
#20 11.41 checking for fgrep... /usr/bin/grep -F
#20 11.41 checking for ld used by clang... /usr/bin/ld
#20 11.43 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 11.43 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 11.65 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 11.68 checking whether ln -s works... yes
#20 11.68 checking the maximum length of command line arguments... 1572864
#20 11.69 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 11.69 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 11.69 checking for /usr/bin/ld option to reload object files... -r
#20 11.69 checking for objdump... objdump
#20 11.69 checking how to recognize dependent libraries... pass_all
#20 11.70 checking for dlltool... no
#20 11.70 checking how to associate runtime and link libraries... printf %s\n
#20 11.70 checking for ar... ar
#20 11.70 checking for archiver @FILE support... @
#20 11.73 checking for strip... strip
#20 11.74 checking for ranlib... ranlib
#20 11.74 checking for gawk... no
#20 11.74 checking for mawk... mawk
#20 11.74 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 11.91 checking for sysroot... no
#20 11.91 checking for a working dd... /usr/bin/dd
#20 11.93 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 11.98 checking for mt... no
#20 11.98 checking if : is a manifest tool... no
#20 11.98 checking how to run the C preprocessor... clang -E
#20 12.06 checking for ANSI C header files... yes
#20 12.27 checking for sys/types.h... yes
#20 12.32 checking for sys/stat.h... yes
#20 12.37 checking for stdlib.h... yes
#20 12.41 checking for string.h... yes
#20 12.46 checking for memory.h... yes
#20 12.52 checking for strings.h... yes
#20 12.57 checking for inttypes.h... yes
#20 12.63 checking for stdint.h... yes
#20 12.68 checking for unistd.h... yes
#20 12.73 checking for dlfcn.h... yes
#20 12.78 checking for objdir... .libs
#20 12.94 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 12.96 checking for clang option to produce PIC... -fPIC -DPIC
#20 12.96 checking if clang PIC flag -fPIC -DPIC works... yes
#20 12.98 checking if clang static flag -static works... yes
#20 13.24 checking if clang supports -c -o file.o... yes
#20 13.27 checking if clang supports -c -o file.o... (cached) yes
#20 13.27 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 13.30 checking whether -lc should be explicitly linked in... no
#20 13.34 checking dynamic linker characteristics... GNU/Linux ld.so
#20 13.50 checking how to hardcode library paths into programs... immediate
#20 13.50 checking whether stripping libraries is possible... yes
#20 13.50 checking if libtool supports shared libraries... yes
#20 13.50 checking whether to build shared libraries... yes
#20 13.50 checking whether to build static libraries... yes
#20 13.50 checking for a BSD-compatible install... /usr/bin/install -c
#20 13.52 checking whether build environment is sane... yes
#20 13.53 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 13.53 checking whether make sets $(MAKE)... yes
#20 13.54 checking whether make supports the include directive... yes (GNU style)
#20 13.56 checking whether make supports nested variables... yes
#20 13.57 checking dependency style of clang... gcc3
#20 13.61 checking whether to enable maintainer-specific portions of Makefiles... yes
#20 13.62 checking for gcc... (cached) clang
#20 13.66 checking whether we are using the GNU C compiler... (cached) yes
#20 13.66 checking whether clang accepts -g... (cached) yes
#20 13.66 checking for clang option to accept ISO C89... (cached) none needed
#20 13.66 checking whether clang understands -c and -o together... (cached) yes
#20 13.66 checking for ANSI C header files... (cached) yes
#20 13.67 checking for inttypes.h... (cached) yes
#20 13.67 checking for stdint.h... (cached) yes
#20 13.67 checking for sys/types.h... (cached) yes
#20 13.67 checking for an ANSI C-conforming const... yes
#20 13.69 checking size of int16_t... 2
#20 13.85 checking size of uint16_t... 2
#20 14.01 checking size of u_int16_t... 2
#20 14.17 checking size of int32_t... 4
#20 14.32 checking size of uint32_t... 4
#20 14.48 checking size of u_int32_t... 4
#20 14.64 checking size of int64_t... 8
#20 14.79 checking size of uint64_t... 8
#20 14.95 checking size of short... 2
#20 15.11 checking size of int... 4
#20 15.27 checking size of long... 8
#20 15.42 checking size of long long... 8
#20 15.58 checking for working memcmp... yes
#20 15.78 checking that generated files are newer than configure... done
#20 15.78 configure: creating ./config.status
#20 16.32 config.status: creating Makefile
#20 16.34 config.status: creating src/Makefile
#20 16.36 config.status: creating doc/Makefile
#20 16.38 config.status: creating doc/libogg/Makefile
#20 16.40 config.status: creating include/Makefile
#20 16.42 config.status: creating include/ogg/Makefile
#20 16.44 config.status: creating include/ogg/config_types.h
#20 16.46 config.status: creating libogg.spec
#20 16.48 config.status: creating ogg.pc
#20 16.50 config.status: creating ogg-uninstalled.pc
#20 16.52 config.status: creating config.h
#20 16.53 config.status: executing libtool commands
#20 16.55 config.status: executing depfiles commands
#20 16.66 ++ nproc
#20 16.67 + make -j8
#20 16.67 make  all-recursive
#20 16.68 make[1]: Entering directory '/src/ogg'
#20 16.68 Making all in src
#20 16.68 make[2]: Entering directory '/src/ogg/src'
#20 16.68 clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include  -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT test_bitwise-bitwise.o -MD -MP -MF .deps/test_bitwise-bitwise.Tpo -c -o test_bitwise-bitwise.o `test -f 'bitwise.c' || echo './'`bitwise.c
#20 16.68 clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include  -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT test_framing-framing.o -MD -MP -MF .deps/test_framing-framing.Tpo -c -o test_framing-framing.o `test -f 'framing.c' || echo './'`framing.c
#20 16.69 /bin/bash ../libtool  --tag=CC   --mode=compile clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include   -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c -o framing.lo framing.c
#20 16.69 /bin/bash ../libtool  --tag=CC   --mode=compile clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include   -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c -o bitwise.lo bitwise.c
#20 16.74 libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c framing.c  -fPIC -DPIC -o .libs/framing.o
#20 16.76 libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c bitwise.c  -fPIC -DPIC -o .libs/bitwise.o
#20 17.08 libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c bitwise.c -o bitwise.o >/dev/null 2>&1
#20 17.22 libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c framing.c -o framing.o >/dev/null 2>&1
#20 17.40 mv -f .deps/bitwise.Tpo .deps/bitwise.Plo
#20 17.71 mv -f .deps/test_bitwise-bitwise.Tpo .deps/test_bitwise-bitwise.Po
#20 17.72 /bin/bash ../libtool  --tag=CC   --mode=link clang -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard   -o test_bitwise test_bitwise-bitwise.o  
#20 17.76 mv -f .deps/framing.Tpo .deps/framing.Plo
#20 17.76 /bin/bash ../libtool  --tag=CC   --mode=link clang  -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -no-undefined -version-info 8:5:8  -o libogg.la -rpath /src/libogg-install/lib framing.lo bitwise.lo  
#20 17.83 libtool: link: clang -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -o test_bitwise test_bitwise-bitwise.o  -pthread
#20 17.88 libtool: link: clang -shared  -fPIC -DPIC  .libs/framing.o .libs/bitwise.o    -O2 -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -O3   -pthread -Wl,-soname -Wl,libogg.so.0 -o .libs/libogg.so.0.8.5
#20 17.93 libtool: link: (cd ".libs" && rm -f "libogg.so.0" && ln -s "libogg.so.0.8.5" "libogg.so.0")
#20 17.94 libtool: link: (cd ".libs" && rm -f "libogg.so" && ln -s "libogg.so.0.8.5" "libogg.so")
#20 17.95 libtool: link: ar cr .libs/libogg.a  framing.o bitwise.o
#20 17.95 libtool: link: ranlib .libs/libogg.a
#20 18.01 libtool: link: ( cd ".libs" && rm -f "libogg.la" && ln -s "../libogg.la" "libogg.la" )
#20 18.05 mv -f .deps/test_framing-framing.Tpo .deps/test_framing-framing.Po
#20 18.06 /bin/bash ../libtool  --tag=CC   --mode=link clang -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard   -o test_framing test_framing-framing.o  
#20 18.15 libtool: link: clang -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -o test_framing test_framing-framing.o  -pthread
#20 18.26 make[2]: Leaving directory '/src/ogg/src'
#20 18.26 Making all in include
#20 18.26 make[2]: Entering directory '/src/ogg/include'
#20 18.26 Making all in ogg
#20 18.27 make[3]: Entering directory '/src/ogg/include/ogg'
#20 18.27 make[3]: Nothing to be done for 'all'.
#20 18.27 make[3]: Leaving directory '/src/ogg/include/ogg'
#20 18.27 make[3]: Entering directory '/src/ogg/include'
#20 18.27 make[3]: Nothing to be done for 'all-am'.
#20 18.27 make[3]: Leaving directory '/src/ogg/include'
#20 18.27 make[2]: Leaving directory '/src/ogg/include'
#20 18.27 Making all in doc
#20 18.27 make[2]: Entering directory '/src/ogg/doc'
#20 18.28 Making all in libogg
#20 18.28 make[3]: Entering directory '/src/ogg/doc/libogg'
#20 18.28 make[3]: Nothing to be done for 'all'.
#20 18.28 make[3]: Leaving directory '/src/ogg/doc/libogg'
#20 18.28 make[3]: Entering directory '/src/ogg/doc'
#20 18.28 make[3]: Nothing to be done for 'all-am'.
#20 18.28 make[3]: Leaving directory '/src/ogg/doc'
#20 18.28 make[2]: Leaving directory '/src/ogg/doc'
#20 18.28 make[2]: Entering directory '/src/ogg'
#20 18.29 make[2]: Leaving directory '/src/ogg'
#20 18.29 make[1]: Leaving directory '/src/ogg'
#20 18.29 + make install
#20 18.29 Making install in src
#20 18.30 make[1]: Entering directory '/src/ogg/src'
#20 18.31 make[2]: Entering directory '/src/ogg/src'
#20 18.32  /usr/bin/mkdir -p '/src/libogg-install/lib'
#20 18.32  /bin/bash ../libtool   --mode=install /usr/bin/install -c   libogg.la '/src/libogg-install/lib'
#20 18.35 libtool: install: /usr/bin/install -c .libs/libogg.so.0.8.5 /src/libogg-install/lib/libogg.so.0.8.5
#20 18.35 libtool: install: (cd /src/libogg-install/lib && { ln -s -f libogg.so.0.8.5 libogg.so.0 || { rm -f libogg.so.0 && ln -s libogg.so.0.8.5 libogg.so.0; }; })
#20 18.36 libtool: install: (cd /src/libogg-install/lib && { ln -s -f libogg.so.0.8.5 libogg.so || { rm -f libogg.so && ln -s libogg.so.0.8.5 libogg.so; }; })
#20 18.36 libtool: install: /usr/bin/install -c .libs/libogg.lai /src/libogg-install/lib/libogg.la
#20 18.36 libtool: install: /usr/bin/install -c .libs/libogg.a /src/libogg-install/lib/libogg.a
#20 18.36 libtool: install: chmod 644 /src/libogg-install/lib/libogg.a
#20 18.36 libtool: install: ranlib /src/libogg-install/lib/libogg.a
#20 18.42 libtool: finish: PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/out:/sbin" ldconfig -n /src/libogg-install/lib
#20 18.44 ----------------------------------------------------------------------
#20 18.44 Libraries have been installed in:
#20 18.44    /src/libogg-install/lib
#20 18.44 
#20 18.44 If you ever happen to want to link against installed libraries
#20 18.44 in a given directory, LIBDIR, you must either use libtool, and
#20 18.44 specify the full pathname of the library, or use the '-LLIBDIR'
#20 18.44 flag during linking and do at least one of the following:
#20 18.44    - add LIBDIR to the 'LD_LIBRARY_PATH' environment variable
#20 18.44      during execution
#20 18.44    - add LIBDIR to the 'LD_RUN_PATH' environment variable
#20 18.44      during linking
#20 18.44    - use the '-Wl,-rpath -Wl,LIBDIR' linker flag
#20 18.44    - have your system administrator add LIBDIR to '/etc/ld.so.conf'
#20 18.44 
#20 18.44 See any operating system documentation about shared libraries for
#20 18.44 more information, such as the ld(1) and ld.so(8) manual pages.
#20 18.44 ----------------------------------------------------------------------
#20 18.44 make[2]: Nothing to be done for 'install-data-am'.
#20 18.44 make[2]: Leaving directory '/src/ogg/src'
#20 18.44 make[1]: Leaving directory '/src/ogg/src'
#20 18.44 Making install in include
#20 18.44 make[1]: Entering directory '/src/ogg/include'
#20 18.44 Making install in ogg
#20 18.45 make[2]: Entering directory '/src/ogg/include/ogg'
#20 18.45 make[3]: Entering directory '/src/ogg/include/ogg'
#20 18.45 make[3]: Nothing to be done for 'install-exec-am'.
#20 18.45  /usr/bin/mkdir -p '/src/libogg-install/include/ogg'
#20 18.45  /usr/bin/install -c -m 644 config_types.h '/src/libogg-install/include/ogg'
#20 18.46  /usr/bin/mkdir -p '/src/libogg-install/include/ogg'
#20 18.46  /usr/bin/install -c -m 644 ogg.h os_types.h '/src/libogg-install/include/ogg'
#20 18.46 make[3]: Leaving directory '/src/ogg/include/ogg'
#20 18.46 make[2]: Leaving directory '/src/ogg/include/ogg'
#20 18.47 make[2]: Entering directory '/src/ogg/include'
#20 18.47 make[3]: Entering directory '/src/ogg/include'
#20 18.47 make[3]: Nothing to be done for 'install-exec-am'.
#20 18.47 make[3]: Nothing to be done for 'install-data-am'.
#20 18.47 make[3]: Leaving directory '/src/ogg/include'
#20 18.47 make[2]: Leaving directory '/src/ogg/include'
#20 18.47 make[1]: Leaving directory '/src/ogg/include'
#20 18.47 Making install in doc
#20 18.47 make[1]: Entering directory '/src/ogg/doc'
#20 18.48 Making install in libogg
#20 18.48 make[2]: Entering directory '/src/ogg/doc/libogg'
#20 18.49 make[3]: Entering directory '/src/ogg/doc/libogg'
#20 18.49 make[3]: Nothing to be done for 'install-exec-am'.
#20 18.49  /usr/bin/mkdir -p '/src/libogg-install/share/doc/libogg/libogg'
#20 18.49  /usr/bin/install -c -m 644 bitpacking.html datastructures.html decoding.html encoding.html general.html index.html ogg_iovec_t.html ogg_packet.html ogg_packet_clear.html ogg_page.html ogg_page_bos.html ogg_page_checksum_set.html ogg_page_continued.html ogg_page_eos.html ogg_page_granulepos.html ogg_page_packets.html ogg_page_pageno.html ogg_page_serialno.html ogg_page_version.html ogg_stream_check.html ogg_stream_clear.html ogg_stream_destroy.html ogg_stream_eos.html ogg_stream_flush.html ogg_stream_flush_fill.html ogg_stream_init.html ogg_stream_iovecin.html ogg_stream_packetin.html ogg_stream_packetout.html ogg_stream_packetpeek.html ogg_stream_pagein.html ogg_stream_pageout.html ogg_stream_pageout_fill.html ogg_stream_reset.html ogg_stream_reset_serialno.html ogg_stream_state.html ogg_sync_buffer.html ogg_sync_check.html ogg_sync_clear.html ogg_sync_destroy.html '/src/libogg-install/share/doc/libogg/libogg'
#20 18.54  /usr/bin/install -c -m 644 ogg_sync_init.html ogg_sync_pageout.html ogg_sync_pageseek.html ogg_sync_reset.html ogg_sync_state.html ogg_sync_wrote.html oggpack_adv.html oggpack_adv1.html oggpack_bits.html oggpack_buffer.html oggpack_bytes.html oggpack_get_buffer.html oggpack_look.html oggpack_look1.html oggpack_read.html oggpack_read1.html oggpack_readinit.html oggpack_reset.html oggpack_write.html oggpack_writealign.html oggpack_writecheck.html oggpack_writeclear.html oggpack_writecopy.html oggpack_writeinit.html oggpack_writetrunc.html overview.html reference.html style.css '/src/libogg-install/share/doc/libogg/libogg'
#20 18.55 make[3]: Leaving directory '/src/ogg/doc/libogg'
#20 18.55 make[2]: Leaving directory '/src/ogg/doc/libogg'
#20 18.56 make[2]: Entering directory '/src/ogg/doc'
#20 18.56 make[3]: Entering directory '/src/ogg/doc'
#20 18.56 make[3]: Nothing to be done for 'install-exec-am'.
#20 18.56  /usr/bin/mkdir -p '/src/libogg-install/share/doc/libogg'
#20 18.56  /usr/bin/install -c -m 644 framing.html index.html oggstream.html ogg-multiplex.html fish_xiph_org.png multiplex1.png packets.png pages.png stream.png vorbisword2.png white-ogg.png white-xifish.png rfc3533.txt rfc5334.txt skeleton.html '/src/libogg-install/share/doc/libogg'
#20 18.57 make[3]: Leaving directory '/src/ogg/doc'
#20 18.58 make[2]: Leaving directory '/src/ogg/doc'
#20 18.58 make[1]: Leaving directory '/src/ogg/doc'
#20 18.58 make[1]: Entering directory '/src/ogg'
#20 18.58 make[2]: Entering directory '/src/ogg'
#20 18.58 make[2]: Nothing to be done for 'install-exec-am'.
#20 18.59  /usr/bin/mkdir -p '/src/libogg-install/share/aclocal'
#20 18.59  /usr/bin/install -c -m 644 ogg.m4 '/src/libogg-install/share/aclocal'
#20 18.60  /usr/bin/mkdir -p '/src/libogg-install/lib/pkgconfig'
#20 18.60  /usr/bin/install -c -m 644 ogg.pc '/src/libogg-install/lib/pkgconfig'
#20 18.60 make[2]: Leaving directory '/src/ogg'
#20 18.60 make[1]: Leaving directory '/src/ogg'
#20 18.61 + cd /src/flac/
#20 18.61 + ./autogen.sh
#20 18.61 Using symlinks to autotool files (use --no-symlinks to copy instead).
#20 18.61 Updating build configuration files for FLAC, please wait....
#20 23.77 libtoolize: putting auxiliary files in '.'.
#20 23.77 libtoolize: linking file './ltmain.sh'
#20 23.80 libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
#20 23.80 libtoolize: linking file 'm4/libtool.m4'
#20 23.87 libtoolize: linking file 'm4/ltoptions.m4'
#20 23.94 libtoolize: linking file 'm4/ltsugar.m4'
#20 24.01 libtoolize: linking file 'm4/ltversion.m4'
#20 24.08 libtoolize: linking file 'm4/lt~obsolete.m4'
#20 29.88 configure.ac:41: installing './ar-lib'
#20 29.88 configure.ac:39: installing './compile'
#20 29.88 configure.ac:42: installing './config.guess'
#20 29.88 configure.ac:42: installing './config.sub'
#20 29.88 configure.ac:26: installing './install-sh'
#20 29.88 configure.ac:26: installing './missing'
#20 30.30 examples/c/decode/file/Makefile.am: installing './depcomp'
#20 32.72 + [[ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard = *sanitize=memory* ]]
#20 32.72 + LD_LIBRARY_PATH=/src/libogg-install/lib
#20 32.72 + ./configure --with-ogg=/src/libogg-install --enable-static
#20 32.93 checking for a BSD-compatible install... /usr/bin/install -c
#20 32.94 checking whether build environment is sane... yes
#20 32.95 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 32.96 checking for gawk... no
#20 32.96 checking for mawk... mawk
#20 32.96 checking whether make sets $(MAKE)... yes
#20 32.97 checking whether make supports nested variables... yes
#20 32.98 checking how to create a pax tar archive... gnutar
#20 33.02 checking whether make supports nested variables... (cached) yes
#20 33.02 checking whether configure should try to set CFLAGS/CXXFLAGS/CPPFLAGS/LDFLAGS... no
#20 33.02 checking whether to enable debugging... no
#20 33.02 checking whether make supports the include directive... yes (GNU style)
#20 33.03 checking for gcc... clang
#20 33.09 checking whether the C compiler works... yes
#20 33.21 checking for C compiler default output file name... a.out
#20 33.21 checking for suffix of executables... 
#20 33.33 checking whether we are cross compiling... no
#20 33.48 checking for suffix of object files... o
#20 33.50 checking whether we are using the GNU C compiler... yes
#20 33.53 checking whether clang accepts -g... yes
#20 33.55 checking for clang option to accept ISO C89... none needed
#20 33.60 checking whether clang understands -c and -o together... yes
#20 33.63 checking dependency style of clang... gcc3
#20 33.68 checking for clang option to accept ISO C99... none needed
#20 33.75 checking for clang option to accept ISO Standard C... (cached) none needed
#20 33.75 checking how to run the C preprocessor... clang -E
#20 33.83 checking for grep that handles long lines and -e... /usr/bin/grep
#20 33.84 checking for egrep... /usr/bin/grep -E
#20 33.84 checking for ANSI C header files... yes
#20 34.08 checking for sys/types.h... yes
#20 34.13 checking for sys/stat.h... yes
#20 34.18 checking for stdlib.h... yes
#20 34.24 checking for string.h... yes
#20 34.29 checking for memory.h... yes
#20 34.35 checking for strings.h... yes
#20 34.41 checking for inttypes.h... yes
#20 34.47 checking for stdint.h... yes
#20 34.53 checking for unistd.h... yes
#20 34.59 checking minix/config.h usability... no
#20 34.66 checking minix/config.h presence... no
#20 34.68 checking for minix/config.h... no
#20 34.68 checking whether it is safe to define __EXTENSIONS__... yes
#20 34.74 checking for ar... ar
#20 34.74 checking the archiver (ar) interface... ar
#20 34.79 checking build system type... x86_64-pc-linux-gnu
#20 34.85 checking host system type... x86_64-pc-linux-gnu
#20 34.86 checking how to print strings... printf
#20 34.91 checking for a sed that does not truncate output... /usr/bin/sed
#20 34.92 checking for fgrep... /usr/bin/grep -F
#20 34.92 checking for ld used by clang... /usr/bin/ld
#20 34.94 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 34.94 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 34.94 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 34.97 checking whether ln -s works... yes
#20 34.97 checking the maximum length of command line arguments... 1572864
#20 34.98 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 34.99 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 34.99 checking for /usr/bin/ld option to reload object files... -r
#20 34.99 checking for objdump... objdump
#20 34.99 checking how to recognize dependent libraries... pass_all
#20 34.99 checking for dlltool... no
#20 34.99 checking how to associate runtime and link libraries... printf %s\n
#20 34.99 checking for archiver @FILE support... @
#20 35.03 checking for strip... strip
#20 35.03 checking for ranlib... ranlib
#20 35.03 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 35.20 checking for sysroot... no
#20 35.20 checking for a working dd... /usr/bin/dd
#20 35.20 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 35.23 checking for mt... no
#20 35.23 checking if : is a manifest tool... no
#20 35.24 checking for dlfcn.h... yes
#20 35.31 checking for objdir... .libs
#20 35.48 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 35.51 checking for clang option to produce PIC... -fPIC -DPIC
#20 35.51 checking if clang PIC flag -fPIC -DPIC works... yes
#20 35.54 checking if clang static flag -static works... yes
#20 35.74 checking if clang supports -c -o file.o... yes
#20 35.78 checking if clang supports -c -o file.o... (cached) yes
#20 35.79 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 35.81 checking whether -lc should be explicitly linked in... no
#20 35.87 checking dynamic linker characteristics... GNU/Linux ld.so
#20 36.06 checking how to hardcode library paths into programs... immediate
#20 36.06 checking whether stripping libraries is possible... yes
#20 36.06 checking if libtool supports shared libraries... yes
#20 36.06 checking whether to build shared libraries... yes
#20 36.06 checking whether to build static libraries... yes
#20 36.06 checking dependency style of clang... gcc3
#20 36.18 checking whether we are using the GNU C++ compiler... yes
#20 36.21 checking whether clang++ accepts -g... yes
#20 36.23 checking dependency style of clang++... gcc3
#20 36.28 checking how to run the C++ preprocessor... clang++ -E
#20 36.59 checking for ld used by clang++... /usr/bin/ld -m elf_x86_64
#20 36.61 checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
#20 36.63 checking whether the clang++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 36.77 checking for clang++ option to produce PIC... -fPIC -DPIC
#20 36.77 checking if clang++ PIC flag -fPIC -DPIC works... yes
#20 36.80 checking if clang++ static flag -static works... yes
#20 37.08 checking if clang++ supports -c -o file.o... yes
#20 37.12 checking if clang++ supports -c -o file.o... (cached) yes
#20 37.13 checking whether the clang++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 37.13 checking dynamic linker characteristics... (cached) GNU/Linux ld.so
#20 37.13 checking how to hardcode library paths into programs... immediate
#20 37.13 checking whether we are using the CLANG C compiler... yes
#20 37.33 checking whether make sets $(MAKE)... (cached) yes
#20 37.33 checking for special C compiler options needed for large files... no
#20 37.33 checking for _FILE_OFFSET_BITS value needed for large files... no
#20 37.37 checking for _LARGEFILE_SOURCE value needed for large files... no
#20 37.51 checking size of off_t... 8
#20 37.71 checking size of void*... 8
#20 37.89 checking for library containing lround... none required
#20 38.03 checking for variable-length arrays... yes
#20 38.07 checking for ANSI C header files... (cached) yes
#20 38.07 checking for inline... inline
#20 38.10 checking for variable-length arrays... (cached) yes
#20 38.10 checking for typeof syntax and keyword spelling... typeof
#20 38.13 checking for stdint.h... (cached) yes
#20 38.14 checking for inttypes.h... (cached) yes
#20 38.15 checking byteswap.h usability... yes
#20 38.22 checking byteswap.h presence... yes
#20 38.24 checking for byteswap.h... yes
#20 38.25 checking sys/param.h usability... yes
#20 38.33 checking sys/param.h presence... yes
#20 38.35 checking for sys/param.h... yes
#20 38.37 checking sys/ioctl.h usability... yes
#20 38.43 checking sys/ioctl.h presence... yes
#20 38.46 checking for sys/ioctl.h... yes
#20 38.47 checking termios.h usability... yes
#20 38.54 checking termios.h presence... yes
#20 38.56 checking for termios.h... yes
#20 38.57 checking x86intrin.h usability... yes
#20 39.34 checking x86intrin.h presence... yes
#20 39.45 checking for x86intrin.h... yes
#20 39.46 checking cpuid.h usability... yes
#20 39.53 checking cpuid.h presence... yes
#20 39.55 checking for cpuid.h... yes
#20 39.55 checking for bswap32 intrinsic... yes
#20 39.69 checking for bswap16 intrinsic... yes
#20 39.83 checking whether byte ordering is bigendian... no
#20 39.94 checking for socklen_t... yes
#20 40.09 checking for getopt_long... yes
#20 40.23 checking size of void*... (cached) 8
#20 40.24 checking for doxygen... no
#20 40.24 checking for xmms-config... no
#20 40.24 checking for XMMS - version >= 0.9.5.1... no
#20 40.24 *** The xmms-config script installed by XMMS could not be found.
#20 40.24 *** If XMMS was installed in PREFIX, make sure PREFIX/bin is in
#20 40.24 *** your path, or set the XMMS_CONFIG environment variable to the
#20 40.24 configure: WARNING: *** XMMS >= 0.9.5.1 not installed - XMMS support will not be built
#20 40.24 *** full path to xmms-config.
#20 40.24 checking for Ogg... yes
#20 40.41 checking for ld used by clang... /usr/bin/ld -m elf_x86_64
#20 40.43 checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
#20 40.43 checking for shared library run path origin... done
#20 40.46 checking for iconv... yes
#20 40.61 checking for working iconv... yes
#20 40.78 checking for iconv declaration... 
#20 40.83          extern size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
#20 40.83 checking for nl_langinfo and CODESET... yes
#20 40.98 checking for docbook-to-man... no
#20 40.98 checking for docbook2man... no
#20 40.98 checking for clock_gettime in -lrt... yes
#20 41.12 checking for nasm... no
#20 41.12 checking if clang accepts -Wdeclaration-after-statement... yes
#20 41.18 checking whether to add -D_FORTIFY_SOURCE=2 to CPPFLAGS... yes
#20 41.32 checking if clang++ accepts -Weffc++... yes
#20 41.45 checking if clang accepts -msse2... yes
#20 41.57 checking that generated files are newer than configure... done
#20 41.57 configure: creating ./config.status
#20 42.54 config.status: creating Makefile
#20 42.56 config.status: creating src/Makefile
#20 42.58 config.status: creating src/libFLAC/Makefile
#20 42.61 config.status: creating src/libFLAC/flac.pc
#20 42.63 config.status: creating src/libFLAC/ia32/Makefile
#20 42.65 config.status: creating src/libFLAC/include/Makefile
#20 42.67 config.status: creating src/libFLAC/include/private/Makefile
#20 42.70 config.status: creating src/libFLAC/include/protected/Makefile
#20 42.72 config.status: creating src/libFLAC++/Makefile
#20 42.74 config.status: creating src/libFLAC++/flac++.pc
#20 42.77 config.status: creating src/flac/Makefile
#20 42.79 config.status: creating src/metaflac/Makefile
#20 42.82 config.status: creating src/plugin_common/Makefile
#20 42.84 config.status: creating src/plugin_xmms/Makefile
#20 42.87 config.status: creating src/share/Makefile
#20 42.89 config.status: creating src/test_grabbag/Makefile
#20 42.91 config.status: creating src/test_grabbag/cuesheet/Makefile
#20 42.94 config.status: creating src/test_grabbag/picture/Makefile
#20 42.96 config.status: creating src/test_libs_common/Makefile
#20 42.99 config.status: creating src/test_libFLAC/Makefile
#20 43.01 config.status: creating src/test_libFLAC++/Makefile
#20 43.03 config.status: creating src/test_seeking/Makefile
#20 43.06 config.status: creating src/test_streams/Makefile
#20 43.08 config.status: creating src/utils/Makefile
#20 43.10 config.status: creating src/utils/flacdiff/Makefile
#20 43.13 config.status: creating src/utils/flactimer/Makefile
#20 43.15 config.status: creating examples/Makefile
#20 43.18 config.status: creating examples/c/Makefile
#20 43.20 config.status: creating examples/c/decode/Makefile
#20 43.22 config.status: creating examples/c/decode/file/Makefile
#20 43.25 config.status: creating examples/c/encode/Makefile
#20 43.27 config.status: creating examples/c/encode/file/Makefile
#20 43.30 config.status: creating examples/cpp/Makefile
#20 43.32 config.status: creating examples/cpp/decode/Makefile
#20 43.34 config.status: creating examples/cpp/decode/file/Makefile
#20 43.37 config.status: creating examples/cpp/encode/Makefile
#20 43.39 config.status: creating examples/cpp/encode/file/Makefile
#20 43.41 config.status: creating include/Makefile
#20 43.44 config.status: creating include/FLAC/Makefile
#20 43.46 config.status: creating include/FLAC++/Makefile
#20 43.49 config.status: creating include/share/Makefile
#20 43.51 config.status: creating include/share/grabbag/Makefile
#20 43.53 config.status: creating include/test_libs_common/Makefile
#20 43.56 config.status: creating doc/Doxyfile
#20 43.59 config.status: creating doc/Makefile
#20 43.61 config.status: creating doc/html/Makefile
#20 43.63 config.status: creating doc/html/images/Makefile
#20 43.66 config.status: creating m4/Makefile
#20 43.68 config.status: creating man/Makefile
#20 43.70 config.status: creating test/common.sh
#20 43.73 config.status: creating test/Makefile
#20 43.75 config.status: creating test/cuesheets/Makefile
#20 43.78 config.status: creating test/flac-to-flac-metadata-test-files/Makefile
#20 43.80 config.status: creating test/metaflac-test-files/Makefile
#20 43.82 config.status: creating test/pictures/Makefile
#20 43.84 config.status: creating build/Makefile
#20 43.87 config.status: creating microbench/Makefile
#20 43.89 config.status: creating oss-fuzz/Makefile
#20 43.91 config.status: creating config.h
#20 43.92 config.status: executing depfiles commands
#20 44.93 config.status: executing libtool commands
#20 44.95 
#20 44.95 -=-=-=-=-=-=-=-=-=-= Configuration Complete =-=-=-=-=-=-=-=-=-=-
#20 44.95 
#20 44.95   Configuration summary :
#20 44.95 
#20 44.95     FLAC version : ............................ 1.3.3
#20 44.95 
#20 44.95     Host CPU : ................................ x86_64
#20 44.95     Host Vendor : ............................. pc
#20 44.95     Host OS : ................................. linux-gnu
#20 44.95 
#20 44.95     Compiler is GCC : ......................... no
#20 44.95     Compiler is Clang : ....................... yes
#20 44.95     SSE optimizations : ....................... yes
#20 44.95     Asm optimizations : ....................... yes
#20 44.95     Ogg/FLAC support : ........................ yes
#20 44.95     Stack protector  : ........................ no
#20 44.95     Fuzzing support (Clang only) : ............ no
#20 44.95 
#20 45.03 ++ nproc
#20 45.04 + make -j8
#20 45.04 make  all-recursive
#20 45.05 make[1]: Entering directory '/src/flac'
#20 45.05 Making all in doc
#20 45.05 make[2]: Entering directory '/src/flac/doc'
#20 45.06 Making all in .
#20 45.06 make[3]: Entering directory '/src/flac/doc'
#20 45.06 touch FLAC.tag
#20 45.07 mkdir -p html/api
#20 45.07 make[3]: Leaving directory '/src/flac/doc'
#20 45.07 Making all in html
#20 45.07 make[3]: Entering directory '/src/flac/doc/html'
#20 45.08 Making all in images
#20 45.08 make[4]: Entering directory '/src/flac/doc/html/images'
#20 45.08 make[4]: Nothing to be done for 'all'.
#20 45.08 make[4]: Leaving directory '/src/flac/doc/html/images'
#20 45.09 make[4]: Entering directory '/src/flac/doc/html'
#20 45.09 make[4]: Nothing to be done for 'all-am'.
#20 45.09 make[4]: Leaving directory '/src/flac/doc/html'
#20 45.09 make[3]: Leaving directory '/src/flac/doc/html'
#20 45.09 make[2]: Leaving directory '/src/flac/doc'
#20 45.09 Making all in include
#20 45.09 make[2]: Entering directory '/src/flac/include'
#20 45.10 Making all in FLAC
#20 45.10 make[3]: Entering directory '/src/flac/include/FLAC'
#20 45.10 make[3]: Nothing to be done for 'all'.
#20 45.10 make[3]: Leaving directory '/src/flac/include/FLAC'
#20 45.10 Making all in FLAC++
#20 45.10 make[3]: Entering directory '/src/flac/include/FLAC++'
#20 45.10 make[3]: Nothing to be done for 'all'.
#20 45.10 make[3]: Leaving directory '/src/flac/include/FLAC++'
#20 45.10 Making all in share
#20 45.11 make[3]: Entering directory '/src/flac/include/share'
#20 45.11 Making all in grabbag
#20 45.11 make[4]: Entering directory '/src/flac/include/share/grabbag'
#20 45.11 make[4]: Nothing to be done for 'all'.
#20 45.11 make[4]: Leaving directory '/src/flac/include/share/grabbag'
#20 45.12 make[4]: Entering directory '/src/flac/include/share'
#20 45.12 make[4]: Nothing to be done for 'all-am'.
#20 45.12 make[4]: Leaving directory '/src/flac/include/share'
#20 45.12 make[3]: Leaving directory '/src/flac/include/share'
#20 45.12 Making all in test_libs_common
#20 45.12 make[3]: Entering directory '/src/flac/include/test_libs_common'
#20 45.12 make[3]: Nothing to be done for 'all'.
#20 45.12 make[3]: Leaving directory '/src/flac/include/test_libs_common'
#20 45.12 make[3]: Entering directory '/src/flac/include'
#20 45.12 make[3]: Nothing to be done for 'all-am'.
#20 45.12 make[3]: Leaving directory '/src/flac/include'
#20 45.12 make[2]: Leaving directory '/src/flac/include'
#20 45.13 Making all in m4
#20 45.13 make[2]: Entering directory '/src/flac/m4'
#20 45.13 make[2]: Nothing to be done for 'all'.
#20 45.13 make[2]: Leaving directory '/src/flac/m4'
#20 45.13 Making all in man
#20 45.13 make[2]: Entering directory '/src/flac/man'
#20 45.13 make[2]: Nothing to be done for 'all'.
#20 45.13 make[2]: Leaving directory '/src/flac/man'
#20 45.13 Making all in src
#20 45.14 make[2]: Entering directory '/src/flac/src'
#20 45.14 Making all in libFLAC
#20 45.15 make[3]: Entering directory '/src/flac/src/libFLAC'
#20 45.15 Making all in include
#20 45.15 make[4]: Entering directory '/src/flac/src/libFLAC/include'
#20 45.16 Making all in private
#20 45.16 make[5]: Entering directory '/src/flac/src/libFLAC/include/private'
#20 45.16 make[5]: Nothing to be done for 'all'.
#20 45.16 make[5]: Leaving directory '/src/flac/src/libFLAC/include/private'
#20 45.16 Making all in protected
#20 45.17 make[5]: Entering directory '/src/flac/src/libFLAC/include/protected'
#20 45.17 make[5]: Nothing to be done for 'all'.
#20 45.17 make[5]: Leaving directory '/src/flac/src/libFLAC/include/protected'
#20 45.17 make[5]: Entering directory '/src/flac/src/libFLAC/include'
#20 45.17 make[5]: Nothing to be done for 'all-am'.
#20 45.17 make[5]: Leaving directory '/src/flac/src/libFLAC/include'
#20 45.17 make[4]: Leaving directory '/src/flac/src/libFLAC/include'
#20 45.17 Making all in .
#20 45.18 make[4]: Entering directory '/src/flac/src/libFLAC'
#20 45.18   CC       bitreader.lo
#20 45.18   CC       bitmath.lo
#20 45.18   CC       bitwriter.lo
#20 45.18   CC       cpu.lo
#20 45.18   CC       crc.lo
#20 45.18   CC       fixed.lo
#20 45.18   CC       fixed_intrin_sse2.lo
#20 45.18   CC       fixed_intrin_ssse3.lo
#20 45.82   CC       float.lo
#20 45.89   CC       format.lo
#20 45.91   CC       lpc.lo
#20 46.28   CC       lpc_intrin_sse.lo
#20 46.41   CC       lpc_intrin_sse2.lo
#20 46.52   CC       lpc_intrin_sse41.lo
#20 46.63   CC       lpc_intrin_avx2.lo
#20 46.63   CC       lpc_intrin_vsx.lo
#20 46.96   CC       md5.lo
#20 46.98 lpc_intrin_sse41.c:1167:51: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 summ = _mm_mullo_epi32(q11, _mm_loadu_si128((const __m128i*)(data+i-12)));
#20 46.99                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 46.99 lpc_intrin_sse41.c:1168:51: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 mull = _mm_mullo_epi32(q10, _mm_loadu_si128((const __m128i*)(data+i-11))); summ = _mm_add_epi32(summ, mull);
#20 46.99                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 46.99 lpc_intrin_sse41.c:1169:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 mull = _mm_mullo_epi32(q9, _mm_loadu_si128((const __m128i*)(data+i-10))); summ = _mm_add_epi32(summ, mull);
#20 46.99                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 46.99 lpc_intrin_sse41.c:1170:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 mull = _mm_mullo_epi32(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 46.99                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 46.99 lpc_intrin_sse41.c:1171:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 mull = _mm_mullo_epi32(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 46.99                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 46.99 lpc_intrin_sse41.c:1172:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 mull = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 46.99                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 46.99 lpc_intrin_sse41.c:1173:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 46.99                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 46.99 lpc_intrin_sse41.c:1174:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 46.99                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 46.99 lpc_intrin_sse41.c:1175:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 46.99                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 46.99 lpc_intrin_sse41.c:1176:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 46.99                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 46.99 lpc_intrin_sse41.c:1177:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 46.99                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 46.99 lpc_intrin_sse41.c:1178:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 46.99                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 46.99 lpc_intrin_sse41.c:1180:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 46.99                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 46.99 lpc_intrin_sse41.c:1180:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 46.99                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 46.99 lpc_intrin_sse41.c:1199:51: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 summ = _mm_mullo_epi32(q10, _mm_loadu_si128((const __m128i*)(data+i-11)));
#20 46.99                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 46.99 lpc_intrin_sse41.c:1200:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 mull = _mm_mullo_epi32(q9, _mm_loadu_si128((const __m128i*)(data+i-10))); summ = _mm_add_epi32(summ, mull);
#20 46.99                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 46.99 lpc_intrin_sse41.c:1201:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 mull = _mm_mullo_epi32(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 46.99                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 46.99 lpc_intrin_sse41.c:1202:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 mull = _mm_mullo_epi32(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 46.99                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 46.99 lpc_intrin_sse41.c:1203:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 mull = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 46.99                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 46.99 lpc_intrin_sse41.c:1204:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 46.99                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 46.99 lpc_intrin_sse41.c:1205:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 46.99                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 46.99                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.00 lpc_intrin_sse41.c:1206:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.00                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.00                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.00 lpc_intrin_sse41.c:1207:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.00                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.00                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.00 lpc_intrin_sse41.c:1208:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.00                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.00                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.00 lpc_intrin_sse41.c:1209:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.00                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.00                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.00 lpc_intrin_sse41.c:1211:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.00                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.00                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.00 lpc_intrin_sse41.c:1211:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.00                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.00                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.00 lpc_intrin_sse41.c:1231:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.00                                                 summ = _mm_mullo_epi32(q9, _mm_loadu_si128((const __m128i*)(data+i-10)));
#20 47.00                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.00 lpc_intrin_sse41.c:1232:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.00                                                 mull = _mm_mullo_epi32(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 47.00                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.00 lpc_intrin_sse2.c:83:50: warning: lpc_intrin_sse41.ccast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.00 :1233:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.00                                                 summ = _mm_madd_epi16(q11, _mm_loadu_si128((const __m128i*)(data+i-12)));                                                mull = _mm_mullo_epi32(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 47.00                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.00 
#20 47.00                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.00 lpc_intrin_sse2.c:84:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.00 lpc_intrin_sse41.c:1234:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.00                                                 mull = _mm_madd_epi16(q10, _mm_loadu_si128((const __m128i*)(data+i-11))); summ = _mm_add_epi32(summ, mull);
#20 47.00                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.00                                                 mull = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 47.00                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.00 lpc_intrin_sse2.c:85:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.00 lpc_intrin_sse41.c:1235:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.00                                                 mull = _mm_madd_epi16(q9, _mm_loadu_si128((const __m128i*)(data+i-10))); summ = _mm_add_epi32(summ, mull);
#20 47.00                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.00                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 47.00                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.00 lpc_intrin_sse2.c:86:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.00 lpc_intrin_sse41.c:1236:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.00                                                 mull = _mm_madd_epi16(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 47.00                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.00                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.00                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.00 lpc_intrin_sse2.c:87:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.00 lpc_intrin_sse41.c:1237:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.00                                                 mull = _mm_madd_epi16(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 47.00                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.00                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.00                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse2.c:88:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse41.c:1238:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse2.c:89:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse41.c:1239:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse2.c:90:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse41.c:1240:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse2.c:91:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse41.c:1242:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.01                                                                  ^~~~~~~~~~~~~~~~~~~~~~lpc_intrin_sse2.c
#20 47.01 :92:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse41.c:1242:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.01                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse2.c:93:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse2.c:94:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse2.c:96:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.01                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse2.c:96:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.01                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse41.c:1259:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 summ = _mm_mullo_epi32(q8, _mm_loadu_si128((const __m128i*)(data+i-9)));
#20 47.01                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse41.c:1260:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_mullo_epi32(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse41.c:1261:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse41.c:1262:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse41.c:1263:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse41.c:1264:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse2.c:115:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 summ = _mm_madd_epi16(q10, _mm_loadu_si128((const __m128i*)(data+i-11)));
#20 47.01                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse41.c:1265:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01 lpc_intrin_sse2.c:116:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01                                                 mull = _mm_madd_epi16(q9, _mm_loadu_si128((const __m128i*)(data+i-10))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse41.c:1266:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01 lpc_intrin_sse2.c:117:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01                                                 mull = _mm_madd_epi16(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse41.c:1267:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01 lpc_intrin_sse2.c:118:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01                                                 mull = _mm_madd_epi16(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse41.c:1269:24: warning: lpc_intrin_sse2.ccast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01 :119:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.01                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.01                                                 mull = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse41.c:1269:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.01                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse2.c:120:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse2.c:121:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse2.c:122:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse2.c:123:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse2.c:124:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse2.c:125:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse2.c:127:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.01                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse2.c:127:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.01                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse2.c:147:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 summ = _mm_madd_epi16(q9, _mm_loadu_si128((const __m128i*)(data+i-10)));
#20 47.01                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.01 lpc_intrin_sse2.c:148:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.01                                                 mull = _mm_madd_epi16(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 47.01                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse2.c:149:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 mull = _mm_madd_epi16(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 47.02                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse2.c:150:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 mull = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 47.02                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse2.c:151:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 47.02                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse2.c:152:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.02                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse2.c:153:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.02                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse2.c:154:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.02                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse2.c:155:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.02                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse41.c:1289:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 summ = _mm_mullo_epi32(q7, _mm_loadu_si128((const __m128i*)(data+i-8)));
#20 47.02                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse2.c:156:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02 lpc_intrin_sse41.c:1290:50                                                mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);:
#20 47.02                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~warning: 
#20 47.02 cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 mull = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 47.02                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse2.c:158:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02 lpc_intrin_sse41.c:1291:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.02                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.02                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 47.02                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse2.c:158:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.02                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse41.c:1292:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.02                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse41.c:1293:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.02                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse41.c:1294:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.02                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse41.c:1295:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.02                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse41.c:1296:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.02                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse41.c:1298:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.02                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse41.c:1298:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.02                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse2.c:175:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 summ = _mm_madd_epi16(q8, _mm_loadu_si128((const __m128i*)(data+i-9)));
#20 47.02                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse2.c:176:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 mull = _mm_madd_epi16(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 47.02                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse2.c:177:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 mull = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 47.02                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse41.c:1313:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02 lpc_intrin_sse2.c:178:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]                                                summ = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7)));
#20 47.02 
#20 47.02                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 47.02                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse41.c:1314:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 47.02                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse2.c:179:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.02                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.02 lpc_intrin_sse41.c:1315:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.02                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.02                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse2.c:180:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.03                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse2.c:181:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.03                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse2.c:182:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.03                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse2.c:183:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.03                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse2.c:185:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.03                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse2.c:185:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.03                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse2.c:205:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 summ = _mm_madd_epi16(q7, _mm_loadu_si128((const __m128i*)(data+i-8)));
#20 47.03                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse2.c:206:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 mull = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 47.03                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse2.c:207:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 47.03                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse2.c:208:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.03                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse2.c:209:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.03                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse2.c:210:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.03                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse2.c:211:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.03                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse2.c:212:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.03                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse2.c:214:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.03                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse2.c:214:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.03                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse41.c:1316:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.03                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse41.c:1317:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.03                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse41.c:1318:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.03                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse41.c:1319:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.03                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse41.c:1321:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.03                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse41.c:1321:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.03                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.03                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.03 lpc_intrin_sse2.c:229:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 summ = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7)));
#20 47.04                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse2.c:230:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse2.c:231:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse2.c:232:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse2.c:233:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04 lpc_intrin_sse41.c:1337:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);                                                summ = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6)));
#20 47.04 
#20 47.04                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 
#20 47.04 lpc_intrin_sse41.c:1338:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.04 lpc_intrin_sse2.c                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 :234:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse41.c:1339:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse41.c:1340:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse41.c:1341:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse41.c:1342:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse2.c:235:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04 lpc_intrin_sse41.c:1344:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.04                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse41.c:1344:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.04                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse2.c:237:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.04                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse2.c:237:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.04                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse41.c:1357:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 summ = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5)));
#20 47.04                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse41.c:1358:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse41.c:1359:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse2.c:253:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04 lpc_intrin_sse41.c:1360:50: warning:                                                 summ = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6)));cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04 
#20 47.04                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse41.c:1361:lpc_intrin_sse2.c50:: 254warning: :cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]49
#20 47.04 : warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse2.c:255:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04 lpc_intrin_sse41.c:1363:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.04                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse41.c:1363:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.04                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse2.c:256:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse2.c:257:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse2.c:258:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse2.c:260:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.04                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse2.c:260:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.04                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse41.c:1379:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 summ = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4)));
#20 47.04                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse41.c:1380:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse41.c:1381:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse41.c:1382:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.04                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse41.c:1384:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.04                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse41.c:1384:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.04                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.04 lpc_intrin_sse41.clpc_intrin_sse2.c:273:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.04                                                 summ = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5)));
#20 47.04                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse2.c:274:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.05                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse2.c:275:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.05                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse2.c:276:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.05                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse2.c:277:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.05                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse2.c:279:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.05                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse2.c:279:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.05                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse2.c:295:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 summ = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4)));
#20 47.05                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse2.c:296:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.05                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse2.c:297:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.05                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse2.c:298:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.05                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse2.c:300:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.05                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse2.c:300:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.05                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05 :1395:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 summ = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3)));
#20 47.05                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse41.c:1396:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05 lpc_intrin_sse2.c:                                                mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);311
#20 47.05 :49                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~:
#20 47.05  warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 summ = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3)));
#20 47.05                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse41.c:1397:50:lpc_intrin_sse2.c warning: :cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]312
#20 47.05 :49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.05                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.05                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse2.c:313:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05 lpc_intrin_sse41.c:1399:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.05                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.05                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse41.c:1399:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.05                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse2.c:315:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.05                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse2.c:315:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.05                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse41.c:1411:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 summ = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2)));
#20 47.05                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse2.c:327:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 summ = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2)));
#20 47.05 lpc_intrin_sse41.c                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05 :1412:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.05                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse2.c:328:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.05                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.05 lpc_intrin_sse41.c:1414:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.05 lpc_intrin_sse2.c:330:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.06                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.06                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.06                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.06                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.06 lpc_intrin_sse2.c:330:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.06 lpc_intrin_sse41.c                                                _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));:
#20 47.06 1414:                                                                                                                       ^~~~~~~~~~~~~~~~~~~~~~~~78
#20 47.06 : warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.06                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.06                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.06 lpc_intrin_sse2.c:339:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.06 lpc_intrin_sse41.c                                                summ = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1)));
#20 47.06 :                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~1423
#20 47.06 :50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.06                                                 summ = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1)));
#20 47.06                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.06 lpc_intrin_sse2.c:341:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.06                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.06                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.06 lpc_intrin_sse41.c:1425:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.06 lpc_intrin_sse2.c:                                                _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));341
#20 47.06 :                                                                 ^~~~~~~~~~~~~~~~~~~~~~78
#20 47.06 : warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.06                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.06                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.07 lpc_intrin_sse41.c:1425:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.07                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.07                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.09 lpc_intrin_sse2.c:420:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.09                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));  // 0  0  q[1]  q[0]
#20 47.09                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.09 lpc_intrin_sse2.c:421:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.09                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));  // 0  0  q[3]  q[2]
#20 47.09                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.09 lpc_intrin_sse2.c:422:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.09                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));  // 0  0  q[5]  q[4]
#20 47.09                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.09 lpc_intrin_sse2.c:423:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.09                                         xmm3 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+6));  // 0  0  q[7]  q[6]
#20 47.09                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.09 lpc_intrin_sse2.c:424:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.09                                         xmm4 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+8));  // 0  0  q[9]  q[8]
#20 47.09                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.09 lpc_intrin_sse2.c:425:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.09                                         xmm5 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+10)); // 0  0  q[11] q[10]
#20 47.09                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.09 lpc_intrin_sse2.c:438:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.09                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-12));  // 0   0        d[i-11]  d[i-12]
#20 47.09                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.09 lpc_intrin_sse2.c:444:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.09                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-10));
#20 47.09                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.09 lpc_intrin_sse2.c:451:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.09                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-8));
#20 47.09                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.09 lpc_intrin_sse2.c:458:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.09                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 47.09                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.09 lpc_intrin_sse2.c:465:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.09                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 47.09                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.10 lpc_intrin_sse2.c:472:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.10                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.10                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.10 lpc_intrin_sse2.c:483:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.10                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 47.10                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.10 lpc_intrin_sse2.c:484:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.10                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 47.10                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.10 lpc_intrin_sse2.c:485:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.10                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 47.10                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.10 lpc_intrin_sse2.c:486:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.10                                         xmm3 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+6));
#20 47.10                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.10 lpc_intrin_sse2.c:487:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.10                                         xmm4 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+8));
#20 47.10                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.10 lpc_intrin_sse2.c:504:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.10                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-10));
#20 47.10                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.10 lpc_intrin_sse2.c:511:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.10                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-8));
#20 47.10                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.10 lpc_intrin_sse2.c:518:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.10                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 47.10                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.10 lpc_intrin_sse2.c:525:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.10                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 47.10                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.11 lpc_intrin_sse2.c:532:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.11                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.11                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.11 lpc_intrin_sse2.c:545:29: warning:   CC       memory.lo
#20 47.11 cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.11                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 47.11                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.11 lpc_intrin_sse2.c:546:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.11                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 47.11                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.11 lpc_intrin_sse2.c:547:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.11                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 47.11                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.11 lpc_intrin_sse2.c:548:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.11                                         xmm3 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+6));
#20 47.11                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.11 lpc_intrin_sse2.c:549:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.11                                         xmm4 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+8));
#20 47.11                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.11 lpc_intrin_sse2.c:561:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.11                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-10));
#20 47.11                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.11 lpc_intrin_sse2.c:567:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.11                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-8));
#20 47.11                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.11 lpc_intrin_sse2.c:574:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.11                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 47.11                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.11 lpc_intrin_sse2.c:581:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.11                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 47.11                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.11 lpc_intrin_sse2.c:588:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.11                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.11                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.11 lpc_intrin_sse2.c:599:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.11                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 47.11                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.11 lpc_intrin_sse2.c:600:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.11                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 47.11                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.11 lpc_intrin_sse2.c:601:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.11                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 47.11                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.11 lpc_intrin_sse2.c:602:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.11                                         xmm3 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+6));
#20 47.11                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.11 lpc_intrin_sse2.c:618:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.11                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-8));
#20 47.11                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.11 lpc_intrin_sse2.c:625:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.11                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 47.11                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.11 lpc_intrin_sse2.c:632:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.11                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 47.11                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.11 lpc_intrin_sse2.c:639:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.11                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.11                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.12 lpc_intrin_sse2.c:654:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.12                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 47.12                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.12 lpc_intrin_sse2.c:655:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.12                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 47.12                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.12 lpc_intrin_sse2.c:656:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.12                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 47.12                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.12 lpc_intrin_sse2.c:657:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.12                                         xmm3 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+6));
#20 47.12                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.12 lpc_intrin_sse2.c:668:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.12                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-8));
#20 47.12                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.12 lpc_intrin_sse2.c:674:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.12                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 47.12                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.12 lpc_intrin_sse2.c:681:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.12                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 47.12                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.12 lpc_intrin_sse2.c:688:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.12                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.12                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.12 lpc_intrin_sse2.c:699:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.12                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 47.12                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.12 lpc_intrin_sse2.c:700:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.12                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 47.12                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.13 lpc_intrin_sse2.c:701:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.13                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 47.13                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.13 lpc_intrin_sse2.c:716:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.13                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 47.13                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.13 lpc_intrin_sse2.c:723:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.13                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 47.13                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.13 lpc_intrin_sse2.c:730:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.13                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.13                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.13 lpc_intrin_sse2.c:743:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.13                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 47.13                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.13 lpc_intrin_sse2.c:744:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.13                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 47.13                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.13 lpc_intrin_sse2.c:745:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.13                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 47.13                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.13 lpc_intrin_sse2.c:755:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.13                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 47.13                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.13 lpc_intrin_sse2.c:761:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.13                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 47.13                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.13 lpc_intrin_sse2.c:768:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.13                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.13                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.13 lpc_intrin_sse2.c:779:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.13                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 47.13                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.13 lpc_intrin_sse2.c:780:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.13                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 47.13                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.13 lpc_intrin_sse2.c:794:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.13                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 47.13                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.13 lpc_intrin_sse2.c:801:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.13                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.13                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.13 lpc_intrin_sse2.c:816:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.14                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 47.14                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.14 lpc_intrin_sse2.c:817:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.14                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 47.14                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.14 lpc_intrin_sse2.c:826:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.14                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 47.14                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.14 lpc_intrin_sse2.c:832:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.14                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.14                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.14 lpc_intrin_sse2.c:843:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.14                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 47.14                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.14 lpc_intrin_sse2.c:856:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.14                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.14                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.14 lpc_intrin_sse2.c:869:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.14                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 47.14                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.14 lpc_intrin_sse2.c:876:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.14                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.14                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.18   CC       metadata_iterators.lo
#20 47.40   CC       metadata_object.lo
#20 47.54 102 warnings generated.
#20 47.83 174 warnings generated.
#20 47.89   CC       stream_decoder.lo
#20 47.96 lpc_intrin_avx2.c:80:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.96                                                 summ = _mm256_madd_epi16(q11, _mm256_loadu_si256((const __m256i*)(data+i-12)));
#20 47.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.96 lpc_intrin_avx2.c:81:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.96                                                 mull = _mm256_madd_epi16(q10, _mm256_loadu_si256((const __m256i*)(data+i-11))); summ = _mm256_add_epi32(summ, mull);
#20 47.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.96 lpc_intrin_avx2.c:82:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.96                                                 mull = _mm256_madd_epi16(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10))); summ = _mm256_add_epi32(summ, mull);
#20 47.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.96 lpc_intrin_avx2.c:83:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.96                                                 mull = _mm256_madd_epi16(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.96 lpc_intrin_avx2.c:84:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.96                                                 mull = _mm256_madd_epi16(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.96 lpc_intrin_avx2.c:85:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.96                                                 mull = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.96 lpc_intrin_avx2.c:86:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.96                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.96 lpc_intrin_avx2.c:87:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.96                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.96 lpc_intrin_avx2.c:88:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.96                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.96 lpc_intrin_avx2.c:89:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.96                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.96 lpc_intrin_avx2.c:90:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.96                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.96 lpc_intrin_avx2.c:91:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.96                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.96 lpc_intrin_avx2.c:93:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.96                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 47.96                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 47.96 lpc_intrin_avx2.c:93:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.96                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 47.96                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.97 lpc_intrin_avx2.c:112:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.97                                                 summ = _mm256_madd_epi16(q10, _mm256_loadu_si256((const __m256i*)(data+i-11)));
#20 47.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.97 lpc_intrin_avx2.c:113:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.97                                                 mull = _mm256_madd_epi16(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10))); summ = _mm256_add_epi32(summ, mull);
#20 47.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.97 lpc_intrin_avx2.c:114:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.97                                                 mull = _mm256_madd_epi16(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.97 lpc_intrin_avx2.c:115:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.97                                                 mull = _mm256_madd_epi16(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.97 lpc_intrin_avx2.c:116:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.97                                                 mull = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.97 lpc_intrin_avx2.c:117:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.97                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.97 lpc_intrin_avx2.c:118:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.97                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.97 lpc_intrin_avx2.c:119:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.97                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.97 lpc_intrin_avx2.c:120:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.97                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.97 lpc_intrin_avx2.c:121:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.97                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.97 lpc_intrin_avx2.c:122:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.97                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.97 lpc_intrin_avx2.c:124:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.97                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 47.97                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 47.97 lpc_intrin_avx2.c:124:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.97                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 47.97                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.97 lpc_intrin_avx2.c:144:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.97                                                 summ = _mm256_madd_epi16(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10)));
#20 47.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.97 lpc_intrin_avx2.c:145:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.97                                                 mull = _mm256_madd_epi16(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.97 lpc_intrin_avx2.c:146:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.97                                                 mull = _mm256_madd_epi16(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.97 lpc_intrin_avx2.c:147:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.97                                                 mull = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.97 lpc_intrin_avx2.c:148:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.97                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.97 lpc_intrin_avx2.c:149:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.97                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.97 lpc_intrin_avx2.c:150:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.97                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.98 lpc_intrin_avx2.c:151:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.98                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.98                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.98 lpc_intrin_avx2.c:152:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.98                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.98                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.98 lpc_intrin_avx2.c:153:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.98                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.98                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.98 lpc_intrin_avx2.c:155:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.98                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 47.98                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 47.98 lpc_intrin_avx2.c:155:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.98                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 47.98                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.98 lpc_intrin_avx2.c:172:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.98                                                 summ = _mm256_madd_epi16(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9 )));
#20 47.98                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.98 lpc_intrin_avx2.c:173:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.98                                                 mull = _mm256_madd_epi16(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.98                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.98 lpc_intrin_avx2.c:174:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.98                                                 mull = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.98                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.98 lpc_intrin_avx2.c:175:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.98                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.98                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.98 lpc_intrin_avx2.c:176:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.98                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.98                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.98 lpc_intrin_avx2.c:177:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.98                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.98                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.98 lpc_intrin_avx2.c:178:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.98                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.98                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.98 lpc_intrin_avx2.c:179:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.98                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.98                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.98 lpc_intrin_avx2.c:180:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.98                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.98                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.98 lpc_intrin_avx2.c:182:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.98                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 47.98                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 47.98 lpc_intrin_avx2.c:182:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.98                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 47.98                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.98 lpc_intrin_avx2.c:202:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.98                                                 summ = _mm256_madd_epi16(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8 )));
#20 47.98                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.98 lpc_intrin_avx2.c:203:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.98                                                 mull = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.98                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.98 lpc_intrin_avx2.c:204:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.98                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.99                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.99 lpc_intrin_avx2.c:205:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.99                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.99                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.99 lpc_intrin_avx2.c:206:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.99                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.99                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.99 lpc_intrin_avx2.c:207:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.99                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.99                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.99 lpc_intrin_avx2.c:208:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.99                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.99                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.99 lpc_intrin_avx2.c:209:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.99                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.99                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.99 lpc_intrin_avx2.c:211:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.99                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 47.99                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 47.99 lpc_intrin_avx2.c:211:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.99                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 47.99                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.99 lpc_intrin_avx2.c:226:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.99                                                 summ = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 )));
#20 47.99                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.99 lpc_intrin_avx2.c:227:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.99                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.99                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.99 lpc_intrin_avx2.c:228:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.99                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.99                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.99 lpc_intrin_avx2.c:229:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 47.99                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 47.99                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.99 lpc_intrin_avx2.c:230:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:231:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:232:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:234:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.00                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:234:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.00                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:250:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 summ = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 )));
#20 48.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:251:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:252:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:253:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:254:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:255:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:257:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.00                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:257:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.00                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:270:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 summ = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 )));
#20 48.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:271:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:272:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:273:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:274:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:276:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.00                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:276:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.00                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:292:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 summ = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 )));
#20 48.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:293:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:294:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:295:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:297:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.00                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:297:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.00                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:308:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.00                                                 summ = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 )));
#20 48.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.00 lpc_intrin_avx2.c:309:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.01                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.01                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.01 lpc_intrin_avx2.c:310:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.01                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.01                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.01 lpc_intrin_avx2.c:312:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.01                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.01                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.01 lpc_intrin_avx2.c:312:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.01                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.01                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.01 lpc_intrin_avx2.c:324:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.01                                                 summ = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 )));
#20 48.01                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.01 lpc_intrin_avx2.c:325:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.01                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.01                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.01 lpc_intrin_avx2.c:327:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.01                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.01                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.01 lpc_intrin_avx2.c:327:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.01                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.01                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.01 lpc_intrin_avx2.c:336:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.01                                                 summ = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 )));
#20 48.01                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.01 lpc_intrin_avx2.c:338:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.01                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.01                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.01 lpc_intrin_avx2.c:338:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.01                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.01                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_avx2.c:435:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.09                                                 summ = _mm256_mullo_epi32(q11, _mm256_loadu_si256((const __m256i*)(data+i-12)));
#20 48.09                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_avx2.c:436:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.09                                                 mull = _mm256_mullo_epi32(q10, _mm256_loadu_si256((const __m256i*)(data+i-11))); summ = _mm256_add_epi32(summ, mull);
#20 48.09                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_avx2.c:437:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.09                                                 mull = _mm256_mullo_epi32(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10))); summ = _mm256_add_epi32(summ, mull);
#20 48.09                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_avx2.c:438:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.09                                                 mull = _mm256_mullo_epi32(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9)));  summ = _mm256_add_epi32(summ, mull);
#20 48.09                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_avx2.c:439:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.09                                                 mull = _mm256_mullo_epi32(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8)));  summ = _mm256_add_epi32(summ, mull);
#20 48.09                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_avx2.c:440:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.10                                                 mull = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));  summ = _mm256_add_epi32(summ, mull);
#20 48.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_avx2.c:441:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.10                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 48.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_avx2.c:442:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.10                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 48.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_avx2.c:443:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.10                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 48.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_avx2.c:444:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.10                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 48.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_avx2.c:445:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.10                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 48.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_avx2.c:446:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.10                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_avx2.c:448:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.10                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.10                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_avx2.c:448:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.10                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.10                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_avx2.c:467:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.10                                                 summ = _mm256_mullo_epi32(q10, _mm256_loadu_si256((const __m256i*)(data+i-11)));
#20 48.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_avx2.c:468:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.10                                                 mull = _mm256_mullo_epi32(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10))); summ = _mm256_add_epi32(summ, mull);
#20 48.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_avx2.c:469:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.10                                                 mull = _mm256_mullo_epi32(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9)));  summ = _mm256_add_epi32(summ, mull);
#20 48.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_avx2.c:470:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.10                                                 mull = _mm256_mullo_epi32(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8)));  summ = _mm256_add_epi32(summ, mull);
#20 48.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_avx2.c:471:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.10                                                 mull = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));  summ = _mm256_add_epi32(summ, mull);
#20 48.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_avx2.c:472:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.10                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 48.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_avx2.c:473:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.10                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 48.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_avx2.c:474:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.10                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 48.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_avx2.c:475:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.11                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 48.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_avx2.c:476:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.11                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 48.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_avx2.c:477:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.11                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_avx2.c:479:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.11                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.11                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_avx2.c:479:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.11                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.11                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_avx2.c:499:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.11                                                 summ = _mm256_mullo_epi32(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10)));
#20 48.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_avx2.c:500:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.11                                                 mull = _mm256_mullo_epi32(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9)));  summ = _mm256_add_epi32(summ, mull);
#20 48.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_avx2.c:501:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.11                                                 mull = _mm256_mullo_epi32(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8)));  summ = _mm256_add_epi32(summ, mull);
#20 48.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_avx2.c:502:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.11                                                 mull = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));  summ = _mm256_add_epi32(summ, mull);
#20 48.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_avx2.c:503:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.11                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 48.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_avx2.c:504:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.11                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 48.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_avx2.c:505:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.11                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 48.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_avx2.c:506:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.11                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 48.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_avx2.c:507:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.12                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 48.12                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_avx2.c:508:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.12                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.12                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_avx2.c:510:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.12                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.12                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_avx2.c:510:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.12                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.12                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_avx2.c:527:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.12                                                 summ = _mm256_mullo_epi32(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9)));
#20 48.12                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_avx2.c:528:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.12                                                 mull = _mm256_mullo_epi32(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8)));  summ = _mm256_add_epi32(summ, mull);
#20 48.12                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_avx2.c:529:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.12                                                 mull = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));  summ = _mm256_add_epi32(summ, mull);
#20 48.12                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_avx2.c:530:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.12                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 48.12                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_avx2.c:531:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.12                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 48.12                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_avx2.c:532:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.12                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 48.12                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_avx2.c:533:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.12                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 48.12                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:534:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:535:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:537:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.13                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:537:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.13                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:557:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 summ = _mm256_mullo_epi32(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8)));
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:558:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:559:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:560:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:561:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:562:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:563:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:564:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:566:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.13                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:566:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.13                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:581:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 summ = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:582:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:583:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:584:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:585:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:586:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:587:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:589:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.13                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:589:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.13                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:605:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 summ = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:606:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:607:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:608:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:609:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:610:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:612:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.13                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:612:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.13                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:625:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 summ = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_avx2.c:626:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.13                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 48.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_avx2.c:627:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.14                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 48.14                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_avx2.c:628:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.14                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 48.14                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_avx2.c:629:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.14                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.14                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_avx2.c:631:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.14                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.14                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_avx2.c:631:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.14                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.14                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_avx2.c:647:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.14                                                 summ = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));
#20 48.14                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_avx2.c:648:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.14                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 48.14                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_avx2.c:649:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.14                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 48.14                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_avx2.c:650:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.14                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.14                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_avx2.c:652:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.14                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.14                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_avx2.c:652:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.14                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.14                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_avx2.c:663:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.15                                                 summ = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));
#20 48.15                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_avx2.c:664:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.15                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 48.15                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_avx2.c:665:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.15                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.15                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_avx2.c:667:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.15                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.15                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_avx2.c:667:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.15                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.15                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_avx2.c:679:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.15                                                 summ = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));
#20 48.15                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_avx2.c:680:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.15                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.15                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_avx2.c:682:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.15                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.15                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_avx2.c:682:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.15                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.15                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_avx2.c:691:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.15                                                 summ = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));
#20 48.15                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_avx2.c:693:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.15                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.15                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_avx2.c:693:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.15                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.15                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:768:42: warning: cast from 'FLAC__int32 *' (aka 'int *') to 'const __m256i *' increases required alignment from 16 to 32 [-Wcast-align]
#20 48.20         const __m256i pack = _mm256_loadu_si256((const __m256i *)pack_arr);
#20 48.20                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:794:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 summ = _mm256_mul_epi32(q11, _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-12))));
#20 48.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:795:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 mull = _mm256_mul_epi32(q10, _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-11)))); summ = _mm256_add_epi64(summ, mull);
#20 48.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:796:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 mull = _mm256_mul_epi32(q9,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-10)))); summ = _mm256_add_epi64(summ, mull);
#20 48.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:797:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 mull = _mm256_mul_epi32(q8,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-9 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:798:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 mull = _mm256_mul_epi32(q7,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-8 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:799:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 mull = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:800:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:801:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:802:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:803:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:804:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:805:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:807:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.20                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:807:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.20                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:826:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 summ = _mm256_mul_epi32(q10, _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-11))));
#20 48.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:827:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 mull = _mm256_mul_epi32(q9,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-10)))); summ = _mm256_add_epi64(summ, mull);
#20 48.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:828:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 mull = _mm256_mul_epi32(q8,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-9 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:829:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 mull = _mm256_mul_epi32(q7,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-8 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:830:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 mull = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:831:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:832:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:833:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:834:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:835:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:836:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:838:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.21                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:838:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.21                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:858:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 summ = _mm256_mul_epi32(q9,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-10))));
#20 48.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:859:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm256_mul_epi32(q8,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-9 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:860:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm256_mul_epi32(q7,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-8 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:861:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:862:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:863:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:864:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:865:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:866:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:867:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:869:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.21                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:869:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.21                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:886:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 summ = _mm256_mul_epi32(q8,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-9 ))));
#20 48.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:887:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm256_mul_epi32(q7,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-8 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:888:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:889:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_avx2.c:890:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:891:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:892:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:893:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:894:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:896:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.22                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:896:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.22                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:916:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 summ = _mm256_mul_epi32(q7,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-8 ))));
#20 48.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:917:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:918:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:919:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:920:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:921:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:922:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:923:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:925:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.22                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:925:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.22                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:940:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 summ = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 ))));
#20 48.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:941:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:942:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:943:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_avx2.c:944:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_avx2.c:945:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.23                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_avx2.c:946:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.23                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_avx2.c:948:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.23                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_avx2.c:948:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.23                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_avx2.c:964:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 summ = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 ))));
#20 48.23                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_avx2.c:965:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.23                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_avx2.c:966:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.23                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_avx2.c:967:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.23                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_avx2.c:968:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.23                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:969:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:971:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.24                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:971:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.24                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:984:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 summ = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 ))));
#20 48.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:985:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:986:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:987:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:988:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:990:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.24                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:990:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.24                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:1006:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 summ = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 ))));
#20 48.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:1007:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:1008:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:1009:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:1011:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.24                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:1011:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.24                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:1022:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 summ = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 ))));
#20 48.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:1023:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:1024:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:1026:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.24                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:1026:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.24                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:1038:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 summ = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 ))));
#20 48.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:1039:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:1041:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.24                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:1041:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.24                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:1050:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 summ = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 ))));
#20 48.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:1052:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.24                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:1052:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.24                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.24                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.41   CC       stream_encoder.lo
#20 48.63 stream_decoder.c:2172:13: warning: variable 'crc8' set but not used [-Wunused-but-set-variable]
#20 48.63         FLAC__byte crc8, raw_header[16]; /* MAGIC NUMBER based on the maximum frame header size, including CRC */
#20 48.63                    ^
#20 49.02   CC       stream_encoder_intrin_sse2.lo
#20 49.52   CC       stream_encoder_intrin_ssse3.lo
#20 49.65 307 warnings generated.
#20 49.65 stream_encoder_intrin_sse2.c:91:55: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.65                                         __m128i mm_res = local_abs_epi32(_mm_loadu_si128((const __m128i*)(residual+residual_sample)));
#20 49.65                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.65 stream_encoder_intrin_sse2.c:124:55: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.65                                         __m128i mm_res = local_abs_epi32(_mm_loadl_epi64((const __m128i*)(residual+residual_sample))); /*  0   0  |r1|   |r0| */
#20 49.65                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.65 stream_encoder_intrin_sse2.c:135:22: warning: cast from 'FLAC__uint64 *' (aka 'unsigned long *') to '__m128i *' increases required alignment from 8 to 16 [-Wcast-align]
#20 49.66                                 _mm_storel_epi64((__m128i*)(abs_residual_partition_sums+partition), mm_sum);
#20 49.66                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.84 3 warnings generated.
#20 49.99 stream_encoder_intrin_ssse3.c:80:53: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.99                                         __m128i mm_res = _mm_abs_epi32(_mm_loadu_si128((const __m128i*)(residual+residual_sample)));
#20 49.99                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.99 stream_encoder_intrin_ssse3.c:113:53: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.99                                         __m128i mm_res = _mm_abs_epi32(_mm_loadl_epi64((const __m128i*)(residual+residual_sample))); /*  0   0  |r1|   |r0| */
#20 49.99                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.99 stream_encoder_intrin_ssse3.c:124:22: warning: cast from 'FLAC__uint64 *' (aka 'unsigned long *') to '__m128i *' increases required alignment from 8 to 16 [-Wcast-align]
#20 49.99                                 _mm_storel_epi64((__m128i*)(abs_residual_partition_sums+partition), mm_sum);
#20 49.99                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 50.18 3 warnings generated.
#20 50.32   CC       stream_encoder_intrin_avx2.lo
#20 50.62   CC       stream_encoder_framing.lo
#20 50.63   CC       window.lo
#20 50.91 1 warning generated.
#20 50.99   CC       ogg_decoder_aspect.lo
#20 51.61   CC       ogg_encoder_aspect.lo
#20 52.13 stream_encoder_intrin_avx2.c:70:59: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 52.13                                         __m256i res256 = _mm256_abs_epi32(_mm256_loadu_si256((const __m256i*)(residual+residual_sample)));
#20 52.13                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.13 stream_encoder_intrin_avx2.c:77:53: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 52.13                                         __m128i res128 = _mm_abs_epi32(_mm_loadu_si128((const __m128i*)(residual+residual_sample)));
#20 52.13                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.13 stream_encoder_intrin_avx2.c:102:53: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 52.13                                         __m128i res128 = _mm_abs_epi32(_mm_loadu_si128((const __m128i*)(residual+residual_sample)));
#20 52.13                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.13 stream_encoder_intrin_avx2.c:110:53: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 52.13                                         __m128i res128 = _mm_abs_epi32(_mm_loadl_epi64((const __m128i*)(residual+residual_sample)));
#20 52.13                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.13 stream_encoder_intrin_avx2.c:121:22: warning: cast from 'FLAC__uint64 *' (aka 'unsigned long *') to '__m128i *' increases required alignment from 8 to 16 [-Wcast-align]
#20 52.13                                 _mm_storel_epi64((__m128i*)(abs_residual_partition_sums+partition), sum128);
#20 52.13                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 52.23   CC       ogg_helper.lo
#20 52.29   CC       ogg_mapping.lo
#20 52.34 5 warnings generated.
#20 54.31   CCLD     libFLAC.la
#20 54.31   CCLD     libFLAC-static.la
#20 54.72 make[4]: Leaving directory '/src/flac/src/libFLAC'
#20 54.72 make[3]: Leaving directory '/src/flac/src/libFLAC'
#20 54.72 Making all in share
#20 54.73 make[3]: Entering directory '/src/flac/src/share'
#20 54.74   CC       getopt/getopt.lo
#20 54.74   CC       getopt/getopt1.lo
#20 54.74   CC       grabbag/alloc.lo
#20 54.75   CC       grabbag/cuesheet.lo
#20 54.75   CC       grabbag/picture.lo
#20 54.75   CC       grabbag/replaygain.lo
#20 54.75   CC       grabbag/file.lo
#20 54.75   CC       grabbag/seektable.lo
#20 55.08   CC       grabbag/snprintf.lo
#20 55.12   CC       utf8/charset.lo
#20 55.33   CC       utf8/iconvert.lo
#20 55.34   CC       utf8/utf8.lo
#20 55.50   CC       replaygain_analysis/replaygain_analysis.lo
#20 55.54   CC       replaygain_synthesis/libreplaygain_synthesis_la-replaygain_synthesis.lo
#20 56.19   CCLD     getopt/libgetopt.la
#20 56.20   CCLD     utf8/libutf8.la
#20 56.52   CCLD     replaygain_synthesis/libreplaygain_synthesis.la
#20 56.73   CCLD     grabbag/libgrabbag.la
#20 56.82   CCLD     replaygain_analysis/libreplaygain_analysis.la
#20 56.98 make[3]: Leaving directory '/src/flac/src/share'
#20 56.98 Making all in flac
#20 56.99 make[3]: Entering directory '/src/flac/src/flac'
#20 56.99   CC       analyze.o
#20 56.99   CC       decode.o
#20 56.99   CC       encode.o
#20 56.99   CC       foreign_metadata.o
#20 56.99   CC       main.o
#20 56.99   CC       local_string_utils.o
#20 56.99   CC       utils.o
#20 57.00   CC       vorbiscomment.o
#20 58.77   CCLD     flac
#20 59.31 make[3]: Leaving directory '/src/flac/src/flac'
#20 59.31 Making all in metaflac
#20 59.32 make[3]: Entering directory '/src/flac/src/metaflac'
#20 59.32   CC       main.o
#20 59.32   CC       operations.o
#20 59.32   CC       operations_shorthand_cuesheet.o
#20 59.32   CC       operations_shorthand_picture.o
#20 59.32   CC       operations_shorthand_seektable.o
#20 59.32   CC       options.o
#20 59.32   CC       operations_shorthand_vorbiscomment.o
#20 59.32   CC       operations_shorthand_streaminfo.o
#20 59.55   CC       usage.o
#20 59.57   CC       utils.o
#20 60.22   CCLD     metaflac
#20 60.58 make[3]: Leaving directory '/src/flac/src/metaflac'
#20 60.58 Making all in test_grabbag
#20 60.58 make[3]: Entering directory '/src/flac/src/test_grabbag'
#20 60.58 Making all in cuesheet
#20 60.59 make[4]: Entering directory '/src/flac/src/test_grabbag/cuesheet'
#20 60.59 make[4]: Nothing to be done for 'all'.
#20 60.59 make[4]: Leaving directory '/src/flac/src/test_grabbag/cuesheet'
#20 60.59 Making all in picture
#20 60.59 make[4]: Entering directory '/src/flac/src/test_grabbag/picture'
#20 60.59 make[4]: Nothing to be done for 'all'.
#20 60.59 make[4]: Leaving directory '/src/flac/src/test_grabbag/picture'
#20 60.59 make[4]: Entering directory '/src/flac/src/test_grabbag'
#20 60.59 make[4]: Nothing to be done for 'all-am'.
#20 60.59 make[4]: Leaving directory '/src/flac/src/test_grabbag'
#20 60.59 make[3]: Leaving directory '/src/flac/src/test_grabbag'
#20 60.59 Making all in test_libs_common
#20 60.60 make[3]: Entering directory '/src/flac/src/test_libs_common'
#20 60.60   CC       file_utils_flac.lo
#20 60.60   CC       metadata_utils.lo
#20 61.28   CCLD     libtest_libs_common.la
#20 61.43 make[3]: Leaving directory '/src/flac/src/test_libs_common'
#20 61.44 Making all in test_libFLAC
#20 61.44 make[3]: Entering directory '/src/flac/src/test_libFLAC'
#20 61.44 make[3]: Nothing to be done for 'all'.
#20 61.44 make[3]: Leaving directory '/src/flac/src/test_libFLAC'
#20 61.45 Making all in test_seeking
#20 61.45 make[3]: Entering directory '/src/flac/src/test_seeking'
#20 61.45 make[3]: Nothing to be done for 'all'.
#20 61.45 make[3]: Leaving directory '/src/flac/src/test_seeking'
#20 61.45 Making all in test_streams
#20 61.45 make[3]: Entering directory '/src/flac/src/test_streams'
#20 61.46 make[3]: Nothing to be done for 'all'.
#20 61.46 make[3]: Leaving directory '/src/flac/src/test_streams'
#20 61.46 Making all in utils
#20 61.46 make[3]: Entering directory '/src/flac/src/utils'
#20 61.47 Making all in flacdiff
#20 61.47 make[4]: Entering directory '/src/flac/src/utils/flacdiff'
#20 61.47 make[4]: Nothing to be done for 'all'.
#20 61.47 make[4]: Leaving directory '/src/flac/src/utils/flacdiff'
#20 61.47 Making all in flactimer
#20 61.48 make[4]: Entering directory '/src/flac/src/utils/flactimer'
#20 61.48 make[4]: Nothing to be done for 'all'.
#20 61.48 make[4]: Leaving directory '/src/flac/src/utils/flactimer'
#20 61.48 make[4]: Entering directory '/src/flac/src/utils'
#20 61.48 make[4]: Nothing to be done for 'all-am'.
#20 61.48 make[4]: Leaving directory '/src/flac/src/utils'
#20 61.48 make[3]: Leaving directory '/src/flac/src/utils'
#20 61.48 Making all in libFLAC++
#20 61.48 make[3]: Entering directory '/src/flac/src/libFLAC++'
#20 61.48   CXX      metadata.lo
#20 61.49   CXX      stream_decoder.lo
#20 61.49   CXX      stream_encoder.lo
#20 64.05   CXXLD    libFLAC++.la
#20 64.05   CXXLD    libFLAC++-static.la
#20 64.26 clang-14: warning: argument unused during compilation: '-pthread' [-Wunused-command-line-argument]
#20 64.26 clang-14: warning: argument unused during compilation: '-pthread' [-Wunused-command-line-argument]
#20 64.28 copying selected object files to avoid basename conflicts...
#20 64.42 make[3]: Leaving directory '/src/flac/src/libFLAC++'
#20 64.42 Making all in test_libFLAC++
#20 64.42 make[3]: Entering directory '/src/flac/src/test_libFLAC++'
#20 64.42 make[3]: Nothing to be done for 'all'.
#20 64.42 make[3]: Leaving directory '/src/flac/src/test_libFLAC++'
#20 64.42 make[3]: Entering directory '/src/flac/src'
#20 64.42 make[3]: Nothing to be done for 'all-am'.
#20 64.42 make[3]: Leaving directory '/src/flac/src'
#20 64.42 make[2]: Leaving directory '/src/flac/src'
#20 64.42 Making all in test
#20 64.43 make[2]: Entering directory '/src/flac/test'
#20 64.43 Making all in cuesheets
#20 64.44 make[3]: Entering directory '/src/flac/test/cuesheets'
#20 64.44 make[3]: Nothing to be done for 'all'.
#20 64.44 make[3]: Leaving directory '/src/flac/test/cuesheets'
#20 64.44 Making all in flac-to-flac-metadata-test-files
#20 64.44 make[3]: Entering directory '/src/flac/test/flac-to-flac-metadata-test-files'
#20 64.44 make[3]: Nothing to be done for 'all'.
#20 64.44 make[3]: Leaving directory '/src/flac/test/flac-to-flac-metadata-test-files'
#20 64.44 Making all in metaflac-test-files
#20 64.44 make[3]: Entering directory '/src/flac/test/metaflac-test-files'
#20 64.44 make[3]: Nothing to be done for 'all'.
#20 64.44 make[3]: Leaving directory '/src/flac/test/metaflac-test-files'
#20 64.44 Making all in pictures
#20 64.44 make[3]: Entering directory '/src/flac/test/pictures'
#20 64.44 make[3]: Nothing to be done for 'all'.
#20 64.44 make[3]: Leaving directory '/src/flac/test/pictures'
#20 64.45 make[3]: Entering directory '/src/flac/test'
#20 64.45 make[3]: Nothing to be done for 'all-am'.
#20 64.45 make[3]: Leaving directory '/src/flac/test'
#20 64.45 make[2]: Leaving directory '/src/flac/test'
#20 64.45 Making all in build
#20 64.45 make[2]: Entering directory '/src/flac/build'
#20 64.45 make[2]: Nothing to be done for 'all'.
#20 64.45 make[2]: Leaving directory '/src/flac/build'
#20 64.45 Making all in microbench
#20 64.46 make[2]: Entering directory '/src/flac/microbench'
#20 64.46   CC       benchmark_residual.o
#20 64.46   CC       util.o
#20 64.70   CCLD     benchmark_residual
#20 64.92 make[2]: Leaving directory '/src/flac/microbench'
#20 64.92 Making all in oss-fuzz
#20 64.93 make[2]: Entering directory '/src/flac/oss-fuzz'
#20 64.93 make[2]: Nothing to be done for 'all'.
#20 64.93 make[2]: Leaving directory '/src/flac/oss-fuzz'
#20 64.93 Making all in examples
#20 64.93 make[2]: Entering directory '/src/flac/examples'
#20 64.94 Making all in c
#20 64.94 make[3]: Entering directory '/src/flac/examples/c'
#20 64.94 Making all in decode
#20 64.95 make[4]: Entering directory '/src/flac/examples/c/decode'
#20 64.95 Making all in file
#20 64.96 make[5]: Entering directory '/src/flac/examples/c/decode/file'
#20 64.96   CC       main.o
#20 65.11   CCLD     example_c_decode_file
#20 65.38 make[5]: Leaving directory '/src/flac/examples/c/decode/file'
#20 65.38 make[5]: Entering directory '/src/flac/examples/c/decode'
#20 65.38 make[5]: Nothing to be done for 'all-am'.
#20 65.38 make[5]: Leaving directory '/src/flac/examples/c/decode'
#20 65.38 make[4]: Leaving directory '/src/flac/examples/c/decode'
#20 65.38 Making all in encode
#20 65.39 make[4]: Entering directory '/src/flac/examples/c/encode'
#20 65.39 Making all in file
#20 65.40 make[5]: Entering directory '/src/flac/examples/c/encode/file'
#20 65.40   CC       main.o
#20 65.57   CCLD     example_c_encode_file
#20 65.88 make[5]: Leaving directory '/src/flac/examples/c/encode/file'
#20 65.88 make[5]: Entering directory '/src/flac/examples/c/encode'
#20 65.88 make[5]: Nothing to be done for 'all-am'.
#20 65.88 make[5]: Leaving directory '/src/flac/examples/c/encode'
#20 65.88 make[4]: Leaving directory '/src/flac/examples/c/encode'
#20 65.89 make[4]: Entering directory '/src/flac/examples/c'
#20 65.89 make[4]: Nothing to be done for 'all-am'.
#20 65.89 make[4]: Leaving directory '/src/flac/examples/c'
#20 65.89 make[3]: Leaving directory '/src/flac/examples/c'
#20 65.89 Making all in cpp
#20 65.89 make[3]: Entering directory '/src/flac/examples/cpp'
#20 65.90 Making all in decode
#20 65.90 make[4]: Entering directory '/src/flac/examples/cpp/decode'
#20 65.90 Making all in file
#20 65.91 make[5]: Entering directory '/src/flac/examples/cpp/decode/file'
#20 65.91   CXX      main.o
#20 66.94   CXXLD    example_cpp_decode_file
#20 67.34 make[5]: Leaving directory '/src/flac/examples/cpp/decode/file'
#20 67.35 make[5]: Entering directory '/src/flac/examples/cpp/decode'
#20 67.35 make[5]: Nothing to be done for 'all-am'.
#20 67.35 make[5]: Leaving directory '/src/flac/examples/cpp/decode'
#20 67.35 make[4]: Leaving directory '/src/flac/examples/cpp/decode'
#20 67.35 Making all in encode
#20 67.35 make[4]: Entering directory '/src/flac/examples/cpp/encode'
#20 67.36 Making all in file
#20 67.36 make[5]: Entering directory '/src/flac/examples/cpp/encode/file'
#20 67.36   CXX      main.o
#20 68.50   CXXLD    example_cpp_encode_file
#20 68.91 make[5]: Leaving directory '/src/flac/examples/cpp/encode/file'
#20 68.91 make[5]: Entering directory '/src/flac/examples/cpp/encode'
#20 68.91 make[5]: Nothing to be done for 'all-am'.
#20 68.91 make[5]: Leaving directory '/src/flac/examples/cpp/encode'
#20 68.91 make[4]: Leaving directory '/src/flac/examples/cpp/encode'
#20 68.92 make[4]: Entering directory '/src/flac/examples/cpp'
#20 68.92 make[4]: Nothing to be done for 'all-am'.
#20 68.92 make[4]: Leaving directory '/src/flac/examples/cpp'
#20 68.92 make[3]: Leaving directory '/src/flac/examples/cpp'
#20 68.92 make[3]: Entering directory '/src/flac/examples'
#20 68.92 make[3]: Nothing to be done for 'all-am'.
#20 68.92 make[3]: Leaving directory '/src/flac/examples'
#20 68.92 make[2]: Leaving directory '/src/flac/examples'
#20 68.92 make[2]: Entering directory '/src/flac'
#20 68.93 make[2]: Leaving directory '/src/flac'
#20 68.93 make[1]: Leaving directory '/src/flac'
#20 68.93 + cd /src/fuzzing-headers
#20 68.93 + ./install.sh
#20 68.95 + cd /src/flac-fuzzers/
#20 68.95 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -D_GLIBCXX_DEBUG -I /src/flac/include/ fuzzer_decoder.cpp /src/flac/src/libFLAC++/.libs/libFLAC++.a /src/flac/src/libFLAC/.libs/libFLAC.a /src/libogg-install/lib/libogg.a /libAFL.a -o /out/fuzzer_decoder
#20 70.65 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 71.2s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:e484bb9fdd619f5e36875214adce4fa4db6f8000f2456770b0ccf72420686395 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:af440324c7e81ac72dec6c26ca22cc98c358057ceaf09b2561aa235e7b6d3988
#1 transferring dockerfile: 45B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:1cfd20227b2309a4b665e596b51c86d8d11e2bc4364e7759f94f40389d68e992
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo-intermediate
#4 sha256:11e9733fbe6c6b94192914144f583232bbdb10b38a7eb0bf5a887182da57334f
#4 ERROR: gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo-intermediate:latest: not found

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f done
#6 naming to gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo-intermediate:
------
#2 [internal] load .dockerignore
#2 sha256:baca1b194347f4ef1ebd52c18db5c74b49c961d5b453d6a44c62c8ece4178ffb
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:41916694a93ae5ecc8ba501191d4eb915628961078b5311521b93b1041c47291
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo-intermediate:latest
#3 sha256:b72625e6d56460398dae873c808f631126dcb4f9e46ab74eb04c37ad761fc721
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo:latest
#4 sha256:1f1ff3ee809b6666c46ddcd58193d37bd6af9881ba4b2ab658af995b0a4d4990
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:061b5df555fb5c6480a3dc7fc1ca24330916b420d680f7c97f0f57474fc43916
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo-intermediate
#6 sha256:78bad5289b309eba0068294e0401ca0c98306e12fec91cde36a3649b50816c9e
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo
#10 sha256:6e4e6aea243b50611f36039a87d951c89dc1ae319d6a2a1648be1fb856e26d6d
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo
#5 sha256:15c861a7b68b0bdd2f1b8d8a199acc0d0686399c09a02b4da5f986b6a3c8156d
#5 ERROR: gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo:latest: not found

#12 [internal] load build context
#12 sha256:061b5df555fb5c6480a3dc7fc1ca24330916b420d680f7c97f0f57474fc43916
#12 transferring context: 17.64MB 0.6s done
#12 DONE 0.7s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo
#10 sha256:6e4e6aea243b50611f36039a87d951c89dc1ae319d6a2a1648be1fb856e26d6d
#10 DONE 2.2s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:b73ac577900a38ff2c259857fd3958f621dde22f59b604db0ab8f06a7b92d254
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:6a05d47487b0c33e347764e5909fce7c379a899a2c77915cd11e15583ef05de0
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:2ba6acba482456705a04c55fb6069d857c37226d740d328982aa371fa2552066
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:ece744ed5c9eb42ab508a05373b33d46e3ac72484d6446b668f4ee899eba4eeb
#11 DONE 0.2s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:903dff4457fe929fd208ba0c61042b24224a1147d5474056472f7c2327a9dfec
#13 DONE 0.7s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:e21e9e0924e4fcfa891efc44ad2efdbe4cc9f503e4ffc58d5d2e91e1453f2295
#14 DONE 0.2s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:f443c1edaaaeda0d8e6df23a7ca113fce8c72d0a9fc74cb7dc4381bc1b824c2b
#15 DONE 0.6s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:e257429379001bb4fbe474bb7c5f2d6c5237a2bebc349af5d69b5b39f786ba3a
#16 DONE 0.7s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:fcdd60c73175743a8a6d79200e649b97dfbd52502b06d683555149db638adbde
#17 DONE 0.3s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:ae22ebbc75e5bc460fb95d51bb14b7cee90e99697bac2b02b12117e1a67d765b
#18 DONE 0.2s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:60d410d3dba51162a9211d9a4ae484e666676f5b26307574e465944cc2245509
#19 DONE 0.2s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:b510710ec86370b0a71e77361bb8b2e00ce01121bd7df49f41b7dd3fc232cd0e
#20 DONE 3.1s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:a837486bb171d81ed1f6022cbde7ce9cb815c81e24f95f4a8b3b85d1bc6a7cf7 done
#21 naming to gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7fba1050ff70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:22f894753a79d9b2b8a3dc5888d690b850105997a8ff2f19543707bf37ed8243
#2 transferring context: 2B done
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:b454dd15b907158321d1e93169a4e8f176e8c5493d7118c9b0eed44716e2a279
#1 transferring dockerfile: 32B done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:22f894753a79d9b2b8a3dc5888d690b850105997a8ff2f19543707bf37ed8243
#2 DONE 0.3s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo
#4 sha256:a2fbe73c3833545b45b576c9992dfb705a0693cbfe0f8d0d14ecbbfb8e22a4c2
#4 DONE 0.0s

#5 [1/7] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#11 [internal] load build context
#11 sha256:d5818e650e0238cd8f384146b234ca5b2e2085eccaa0e9dde7932286780ee53c
#11 transferring context: 30B done
#11 DONE 0.1s

#6 [2/7] RUN apt-get update && apt-get install -y make autoconf automake libtool libtool-bin pkg-config gettext sudo
#6 sha256:cf4cf36dc427e50cf8d862a59b23e8905d0bb90f0ee93db68bdcbc101414cae3
#6 CACHED

#7 [3/7] RUN git clone --depth 1 https://github.com/xiph/flac.git
#7 sha256:0ed5b13c40ae159e86af44a58886a684947b11a7b4fc444d79df5fd6b253ef5b
#7 CACHED

#8 [4/7] RUN git clone --depth 1 https://github.com/xiph/ogg.git
#8 sha256:281ada0474cd672602aba24eee565dcc2e8b66c1cf406288a01972070a0a5744
#8 CACHED

#9 [5/7] RUN git clone --depth 1 https://github.com/guidovranken/fuzzing-headers.git
#9 sha256:641642142aa1c88e89b9baff285f7dc74c7f0eceaff3b3500b12d3c6e6d86e21
#9 CACHED

#10 [6/7] RUN git clone --depth 1 https://github.com/guidovranken/flac-fuzzers.git
#10 sha256:8340a5890971b05c713ee1c6e587a013fc8cb435330b99e5ea0c726f5c0d7681
#10 CACHED

#12 [7/7] COPY build.sh /src/
#12 sha256:ba53f731578647638a9bd84e4bf27b119821fa1b68d3a26237c4ccf96a22007f
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:bd810bb9c7f0037ac9186ae1a0f9e8eeae24eea2561388eb528d76d3c123da36
#13 writing image sha256:bd810bb9c7f0037ac9186ae1a0f9e8eeae24eea2561388eb528d76d3c123da36 0.0s done
#13 naming to gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo done
#13 DONE 0.3s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:6c2f49f4cdecafc861c0e2c9136bd764bfc66b9767e87a863fb7709236886710
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:db35caeda86070dda412f8e8c089040e3d9a02dca7548af460fab1ba96cf1098
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo:latest
#3 sha256:75851e499ee75ab0c843bda8ada84e920846da943fe81e9e508b8b4131a58852
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate
#4 sha256:236679cb9d9e071be2329edd700fc5970b426d1521f4cecaed39bcffe88c4d18
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo
#5 sha256:90673f88336bbc1921494a0e989d3a05f86833fb50693e01e204a48f3faaa2a5
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:07c39a69203b6eeb52ba4c79eb515491df80c6877733b5daac806584e4f85a25
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:2806afed7fd6e4d15ae611dde90a37ad06ee457e240feb73e87f2e34fd8a9824
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:769ffb2d5db083454b0fce94b739ba77c372908b23cc470206f66f6e23c9e04e done
#8 naming to gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:7db86121bb3183ed95ab5d9d49621ad03af613184cd4c3cab417267df4f87846
#2 transferring context: 34B done
#2 DONE 0.3s

#1 [internal] load build definition from Dockerfile
#1 sha256:b198a5990377e3d60f45505430e5b7c1d5772f237bb9222a18c5cc6e335b481f
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.3s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:f24df379503293f21134b5a6f3aaca1a2878285f6d7da8de2e295092767bfd4b
#8 transferring context: 559B 0.1s done
#8 DONE 0.2s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:63bd549120f8b47f4a598fc021da229fa939a94040fdb1b72dc60935197ec0d7
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:469cceb07ddd77655940cc97bc35a00313f1651f96e34c8b49daf15f581ae0bd
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:dd457bc2e9f8004988b6bf221a05a256940a730d2234718692ee16c71729a78e
#9 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:d9b30132afc3b260e0ad19f0b008c6f4a635f29bf692adec2aa4ebe0cb796933
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.2s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:b281b72303919ab1b042c0284aff00851f58a4f0add1ed410423a0226a793e32
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:d9b02dacf6fb7d04374ed30d880cf8fff8861669fd6b4c8930e3ef29218b14bf
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate:latest
#3 sha256:65786f6db6a2c621e280d2502d33fa2ff2695d4b3e9de78d38de10034c4f2fc5
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate
#6 sha256:074800b24ebc8e3fa3f627e2d93118f682b8bad32b8b0e132c94655fdc5f71ab
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo
#5 sha256:56d3c0d9d52a62d251865c34d45bcc2bdc9b8031b30f17bbbbeb6d7fd9c0bcff
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:ac500cb51974293bcedbab8ebdfbcbc307323a62be4756974433a02f1961f583
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.2s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:06f8b4e46f269cc71b6828c8968ee529e7ce94107d90ee0323f2430c83790f88
#8 CACHED

#15 [stage-1  8/13] COPY benchmarks/flac_fuzzer_exo/benchmark.yaml /
#15 sha256:790748ca0ae15c89d9a1846e2ac92fcb617915e2f0db0d76b5f9b1739108ec33
#15 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:527e5871f1898dc68f91f671505b9ac9fcb04ed7452b162a0d6c326ad4117613
#10 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:cc71890f3f1b96e33fdc0f75ae3ce24d84625cfa00a4e73d9c44e2ba611a084f
#17 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:b3164ae089828579e4b51a9f77d140614a20e78743da43cd91f14824efbee1ba
#18 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:9010f2cf4cd507d8e93a797f5c261b07baba9e7c35765592b827fe4632d66ab5
#13 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:10bb0a3ca18f4d0d322ae7969514ed97d4b23c3c8a19a2ec4f246c0d0c495183
#9 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:1aaf39dd1fc2e1332f6da1080f2d5cd5d80239e989daf5ca36d2240bca78a637
#11 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:c1ea4e55cb540c20730ce2b00325968b4238f30f4d5ef4ceb25db9a621b5ba97
#16 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:bb0bba254db8d5587ae198429b74a058b9e8d35258dbfb92fbcc5900bb176a7d
#19 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:2f6164a812bb6ab1bcdfeabb39a43c54379960c8f0da7962a2d2f834ea68e752
#14 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:c2336bef1fae00a36f928ba6a5bf1a2b83b98c412480e2e2829561014261f84c
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:e484bb9fdd619f5e36875214adce4fa4db6f8000f2456770b0ccf72420686395 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo done
#21 DONE 0.7s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:cd4080e048e1d26a275d90abf3fb19d712cdd7082de0704b0a855420937b80ce
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:94b19999e0ec8a3843e8ccf9e1b99e79f65fba3ae3ffd4fe92ac3821d530a7e2
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo-intermediate
#4 sha256:11e9733fbe6c6b94192914144f583232bbdb10b38a7eb0bf5a887182da57334f
#4 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:b34f71c48dadabc1ca46a2603d1ec8f8f72bfc9d94a9b102b82df106fe7923d9
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:a8c66c7d1c203f6749a6f8fa61aef054b263351c82a030815290af9ece00b665
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo-intermediate:latest
#3 sha256:b72625e6d56460398dae873c808f631126dcb4f9e46ab74eb04c37ad761fc721
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo:latest
#4 sha256:1f1ff3ee809b6666c46ddcd58193d37bd6af9881ba4b2ab658af995b0a4d4990
#4 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo-intermediate
#6 sha256:78bad5289b309eba0068294e0401ca0c98306e12fec91cde36a3649b50816c9e
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo
#5 sha256:15c861a7b68b0bdd2f1b8d8a199acc0d0686399c09a02b4da5f986b6a3c8156d
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo
#10 sha256:6e4e6aea243b50611f36039a87d951c89dc1ae319d6a2a1648be1fb856e26d6d
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:276069ce17050154668e7bacca2e3ada3da297e47139710ec6a1b32eedcadeeb
#12 transferring context: 17.64MB 0.7s done
#12 DONE 0.7s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:9d6a1f3375a8ec0fa864ccadda8089f51d459ab65d9b816b0de76c864f43ec7d
#14 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:108075f0cc5f0176de17c5116d14dac9824bbc3a47870f9fa28ba1cd8f3f235d
#17 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:b73ac577900a38ff2c259857fd3958f621dde22f59b604db0ab8f06a7b92d254
#7 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:ece744ed5c9eb42ab508a05373b33d46e3ac72484d6446b668f4ee899eba4eeb
#11 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:57eec5888baf7d245d7b3be1e8d73c5fd5f7fa0d8f552bafc0c92b0c489b9131
#15 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:15dce4cf42eda6a985caf2a33434e73148dfb3729ff816ac60c14979a38d751e
#19 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:2ba6acba482456705a04c55fb6069d857c37226d740d328982aa371fa2552066
#9 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:a37783f47d96e3780fa27e93d5a44ce84da5f928b22ac47ff1a78e3e24563f5c
#18 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:6a05d47487b0c33e347764e5909fce7c379a899a2c77915cd11e15583ef05de0
#8 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:7cdd53526dd1fc446049a7fd189102afa680687f04d602cb6e076c26ec5fbc1c
#13 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:034c337d416792042058b81208a484283b3f6620c962610871ae41b249ebc6ba
#16 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:1f264a218555eeebcf37f1e3b5cdca5b51071a1a2854eeca75d4171ad6aa6fdf
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:a837486bb171d81ed1f6022cbde7ce9cb815c81e24f95f4a8b3b85d1bc6a7cf7
#21 writing image sha256:a837486bb171d81ed1f6022cbde7ce9cb815c81e24f95f4a8b3b85d1bc6a7cf7 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/flac_fuzzer_exo done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7fa21bb22f70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
