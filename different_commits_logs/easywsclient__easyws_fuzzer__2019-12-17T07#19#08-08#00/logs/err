WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: easywsclient_easyws_fuzzer.
INFO:root:Please run "make test-run-afl-easywsclient_easyws_fuzzer" to test integration.
#2 [internal] load .dockerignore
#2 sha256:0a91047a501812c8d461f43863c95bae8700aad49708c0de7c5c739917d18f21
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:9a80c7ff146fcd8bf467f801897699692de66fdd61fe1e729a3405ba6ea8d336
#1 transferring dockerfile: 963B done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:0a91047a501812c8d461f43863c95bae8700aad49708c0de7c5c739917d18f21
#2 transferring context: 2B done
#2 DONE 0.3s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#9 [internal] load build context
#9 sha256:6415c7a8a0bdddad3604fef0b4740e6bd6eda84ec7a00598b633b5d56e7b62d3
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/easywsclient_easyws_fuzzer
#4 sha256:b62cfd012d2ce9be5b2a5b4f4121254bdf0b896ac8a8d27b667b87c11df90bc6
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/easywsclient_easyws_fuzzer:latest: not found

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:e94c22665874d420ced0c3b871f4947e168d3bab9afd9b749baffcff0f8f695f
#6 ...

#9 [internal] load build context
#9 sha256:6415c7a8a0bdddad3604fef0b4740e6bd6eda84ec7a00598b633b5d56e7b62d3
#9 transferring context: 1.85kB done
#9 DONE 0.3s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:e94c22665874d420ced0c3b871f4947e168d3bab9afd9b749baffcff0f8f695f
#6 0.819 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 0.819 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#6 0.819 Get:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#6 0.904 Get:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#6 0.934 Get:5 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#6 1.360 Get:6 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1973 kB]
#6 1.550 Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [752 kB]
#6 1.606 Get:8 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [827 kB]
#6 1.667 Get:9 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1134 kB]
#6 1.750 Get:10 http://archive.ubuntu.com/ubuntu focal-backports/universe i386 Packages [13.1 kB]
#6 1.751 Get:11 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [24.8 kB]
#6 1.753 Get:12 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1547 kB]
#6 2.299 Fetched 6607 kB in 2s (4195 kB/s)
#6 2.299 Reading package lists...
#6 3.826 Reading package lists...
#6 5.268 Building dependency tree...
#6 5.480 Reading state information...
#6 5.692 make is already the newest version (4.2.1-1.2).
#6 5.692 make set to manually installed.
#6 5.692 The following additional packages will be installed:
#6 5.693   autotools-dev libltdl-dev libltdl7 libsigsegv2 m4
#6 5.695 Suggested packages:
#6 5.695   autoconf-archive gnu-standards autoconf-doc gettext libtool-doc gfortran
#6 5.695   | fortran95-compiler gcj-jdk m4-doc
#6 5.739 The following NEW packages will be installed:
#6 5.741   autoconf automake autotools-dev libltdl-dev libltdl7 libsigsegv2 libtool m4
#6 5.817 0 upgraded, 8 newly installed, 0 to remove and 0 not upgraded.
#6 5.817 Need to get 1457 kB of archives.
#6 5.817 After this operation, 6651 kB of additional disk space will be used.
#6 5.817 Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 libsigsegv2 amd64 2.12-2 [13.9 kB]
#6 5.844 Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 m4 amd64 1.4.18-4 [199 kB]
#6 5.915 Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 autoconf all 2.69-11.1 [321 kB]
#6 5.950 Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 autotools-dev all 20180224.1 [39.6 kB]
#6 5.953 Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 automake all 1:1.16.1-4ubuntu6 [522 kB]
#6 6.076 Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl7 amd64 2.4.6-14 [38.5 kB]
#6 6.076 Get:7 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl-dev amd64 2.4.6-14 [162 kB]
#6 6.079 Get:8 http://archive.ubuntu.com/ubuntu focal/main amd64 libtool all 2.4.6-14 [161 kB]
#6 6.797 debconf: delaying package configuration, since apt-utils is not installed
#6 7.143 Fetched 1457 kB in 0s (4407 kB/s)
#6 7.895 Selecting previously unselected package libsigsegv2:amd64.
#6 7.895 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21291 files and directories currently installed.)
#6 7.916 Preparing to unpack .../0-libsigsegv2_2.12-2_amd64.deb ...
#6 8.148 Unpacking libsigsegv2:amd64 (2.12-2) ...
#6 9.613 Selecting previously unselected package m4.
#6 9.616 Preparing to unpack .../1-m4_1.4.18-4_amd64.deb ...
#6 9.891 Unpacking m4 (1.4.18-4) ...
#6 10.07 Selecting previously unselected package autoconf.
#6 10.08 Preparing to unpack .../2-autoconf_2.69-11.1_all.deb ...
#6 10.09 Unpacking autoconf (2.69-11.1) ...
#6 10.24 Selecting previously unselected package autotools-dev.
#6 10.25 Preparing to unpack .../3-autotools-dev_20180224.1_all.deb ...
#6 10.26 Unpacking autotools-dev (20180224.1) ...
#6 10.46 Selecting previously unselected package automake.
#6 10.46 Preparing to unpack .../4-automake_1%3a1.16.1-4ubuntu6_all.deb ...
#6 10.48 Unpacking automake (1:1.16.1-4ubuntu6) ...
#6 10.67 Selecting previously unselected package libltdl7:amd64.
#6 10.67 Preparing to unpack .../5-libltdl7_2.4.6-14_amd64.deb ...
#6 10.69 Unpacking libltdl7:amd64 (2.4.6-14) ...
#6 10.81 Selecting previously unselected package libltdl-dev:amd64.
#6 10.81 Preparing to unpack .../6-libltdl-dev_2.4.6-14_amd64.deb ...
#6 10.83 Unpacking libltdl-dev:amd64 (2.4.6-14) ...
#6 10.97 Selecting previously unselected package libtool.
#6 10.97 Preparing to unpack .../7-libtool_2.4.6-14_all.deb ...
#6 10.98 Unpacking libtool (2.4.6-14) ...
#6 11.15 Setting up autotools-dev (20180224.1) ...
#6 11.20 Setting up libsigsegv2:amd64 (2.12-2) ...
#6 11.24 Setting up libltdl7:amd64 (2.4.6-14) ...
#6 11.29 Setting up libtool (2.4.6-14) ...
#6 11.34 Setting up m4 (1.4.18-4) ...
#6 11.38 Setting up autoconf (2.69-11.1) ...
#6 11.43 Setting up automake (1:1.16.1-4ubuntu6) ...
#6 11.47 update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
#6 11.47 update-alternatives: warning: skip creation of /usr/share/man/man1/automake.1.gz because associated file /usr/share/man/man1/automake-1.16.1.gz (of link group automake) doesn't exist
#6 11.47 update-alternatives: warning: skip creation of /usr/share/man/man1/aclocal.1.gz because associated file /usr/share/man/man1/aclocal-1.16.1.gz (of link group automake) doesn't exist
#6 11.50 Setting up libltdl-dev:amd64 (2.4.6-14) ...
#6 11.54 Processing triggers for libc-bin (2.31-0ubuntu9.2) ...
#6 DONE 12.2s

#7 [3/5] RUN git clone --depth 1 https://github.com/dhbaird/easywsclient easywsclient
#7 sha256:06891c4131972fb7cf997b81c1fe0eb5e7da2b4c423487f0c60885838c9f2449
#7 0.539 Cloning into 'easywsclient'...
#7 DONE 1.5s

#8 [4/5] WORKDIR easywsclient
#8 sha256:3c576b5769494f45749bc4307c9f186ec3c58bc3bb29ceef4575e4f2fe2dafb7
#8 DONE 0.8s

#10 [5/5] COPY build.sh *.cpp /src/
#10 sha256:03273427ab865162bce2cc50fb3a97b4072fe84011eceee47477e3bb2a089127
#10 DONE 0.3s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:5773b1768d441aec9b495b4b2322b78da022a61d8934fe0f102bb0f2b02826c5 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/easywsclient_easyws_fuzzer done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/easywsclient_easyws_fuzzer:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:fa0a44b9cc035fe0176980c894d91980aa19d30b199d02a7fd0d1ee4da0cf17f
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:5f13eb1745dfd5e2ca0f0908df8c521087120e5fc49322bbac58a1a2bf2cec58
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/easywsclient_easyws_fuzzer:latest
#3 sha256:7ed1bc231479c43fc9cb628bb3eb45c11924757ad30b18a5ae7a68b04091622e
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/easywsclient_easyws_fuzzer
#5 sha256:5f3dcc35b9b809b720ee10d7f242945ed3a1f2ebabaad2c8d5876ea452578db5
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer-intermediate
#4 sha256:38bc6ebf542e6fbeef3a663b7866f75bba602b20ecd943a404a722ccc1573200
#4 ERROR: gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/easywsclient_easyws_fuzzer
#5 sha256:5f3dcc35b9b809b720ee10d7f242945ed3a1f2ebabaad2c8d5876ea452578db5
#5 DONE 0.6s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:2ecb425445d381cdd68c2278592ae5be917218116002741b650d8386b448625b
#6 0.388 Cloning into '/afl'...
#6 1.149 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.149 
#6 1.149 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.149 changes and commit them, and you can discard any commits you make in this
#6 1.149 state without impacting any branches by switching back to a branch.
#6 1.149 
#6 1.149 If you want to create a new branch to retain commits you create, you may
#6 1.149 do so (now or later) by using -c with the switch command. Example:
#6 1.149 
#6 1.149   git switch -c <new-branch-name>
#6 1.149 
#6 1.149 Or undo this operation with:
#6 1.149 
#6 1.149   git switch -
#6 1.149 
#6 1.149 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.149 
#6 1.149 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.180 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.181 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.358 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.373 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.843 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.159 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.583 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.723 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.117 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.351 ln -sf afl-as as
#6 5.353 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.356 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.357 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.0s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:a6e0d589ec8ce067daa041ad7cbd5921f846f7ebdd898b88e42c4aa7c33c8a52
#7 0.750 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.750 Hit:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.750 Hit:3 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 0.751 Hit:4 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.838 Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 1.733 Reading package lists...
#7 3.214 Reading package lists...
#7 4.621 Building dependency tree...
#7 4.830 Reading state information...
#7 5.077 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.077 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 5.089 --2022-02-17 01:26:51--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.091 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...
#7 5.093 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.
#7 5.115 HTTP request sent, awaiting response... 200 OK
#7 5.134 Length: 9177 (9.0K) [text/plain]
#7 5.134 Saving to: '/afl/afl_driver.cpp'
#7 5.135 
#7 5.135      0K ........                                              100% 6.30M=0.001s
#7 5.136 
#7 5.136 2022-02-17 01:26:51 (6.30 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.136 
#7 6.885 ar: creating /libAFL.a
#7 DONE 7.3s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:a744eeb8ad1e29244d95965c4697e60c23636ee450393b858066071576dd91ca 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:1c7ee434ef0a885e88421ca735a534c6de71a5019acf52bb9e1266bbae6b8c1b
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:c9746be40660bd132b4c5ee22bb846dd181a3cc22d0c5dee60b8a101b6d96e4f
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:24c4739466cd5aec46b29bd8b7848b7dd3c9814298355287dd2d75b3dcad0a13
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:19563699246196ad616141bc696510c132a8fb4b1c0d8ad24507ec0c309ae0ff
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:e2c06e4df0687c22ef03f11789a1531ab0e87853c0b63aeaab53e396752bfdb7
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:70c4440b6de67934b33c02f000fd5bb214634d481975477f33ca9fd2ae76710f
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:6ab4ab28e735f168f21a4b5fed7f7643a23bfbf9df9550e970ce848702aff5f6
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:f0a6e2c90b9429076cded82fb18e115d226dbe158d519383e4bc5f9803ae5b00
#13 writing image sha256:f0a6e2c90b9429076cded82fb18e115d226dbe158d519383e4bc5f9803ae5b00 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:5d4595748d0090610154ae0f31fda0b79c80fa4122f554c6b7b8c83bbfe1d8f6
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:bf76ac4fbb2869f683505ddbca938f3e2ec2e83f36e768a705462b5887978624
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer-intermediate:latest
#3 sha256:143c60c92e5d9e1c5de234501bec0fbb0d12883d4f3862af14964541f25dbb17
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:082581181adf7eb36491534162ac9f3e1c2a88363c352be54bf9d54815929f4e
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer-intermediate
#6 sha256:ff827db7ed10be66272de60b7068365350d689c083511e02197be9ac3685f73e
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer
#5 sha256:cf2d2bae490a8bd7393ac4f15ba9b1e67526ec9a816b56a14163e7039f6b581d
#5 ERROR: gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:082581181adf7eb36491534162ac9f3e1c2a88363c352be54bf9d54815929f4e
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.3s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer-intermediate
#6 sha256:ff827db7ed10be66272de60b7068365350d689c083511e02197be9ac3685f73e
#6 DONE 1.2s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:22501b13b5e401942aa2508d988f5ece5dbadf5d631573ffa004873489b4f764
#8 DONE 0.8s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:fdcaf62f11171a7ce3b99079405a8be6770e7801c06bf5d48fbbc28d41defdcf
#9 DONE 14.7s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:a614e5c59265ea8845cd98a230c05b3aad914e190a9636ebe2b9f6efc43caad9
#10 DONE 0.4s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:fbe1eb37064f87ffcb126807031fdb635a5868c8824e5b64f55ec47cc05110af
#11 DONE 27.3s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:cb77a31ea86610c2ea0d31e69c1ef598c6554803d979b13149445cb19ad40fc7
#13 DONE 0.4s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:c921288c4a48d64a0392c07e6b0ee52557641469d7634f5133905043b17688c1
#14 DONE 2.3s

#15 [stage-1  8/13] COPY benchmarks/easywsclient_easyws_fuzzer/benchmark.yaml /
#15 sha256:90ce4660ab583474f1512069c637757e0c7e39d4021fe966907e13d3f4432157
#15 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:61efc7c6c92f75aface59dad12d8b775266df42d4b6ad9f792b68891c589e143
#16 DONE 0.8s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:93e137ba280ae8028d8ca1365726eb9cb1cfc4d2ccadc0cd311b905759a2f7a6
#17 DONE 0.7s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:a4349a47df2868c58875ec59c613bd8772d09bd57340d766fd00267c9daee643
#18 0.540 Checking out commit f54817dc
#18 1.132 error: pathspec 'f54817dc' did not match any file(s) known to git
#18 1.146 error: pathspec 'f54817dc' did not match any file(s) known to git
#18 1.153 error: pathspec 'f54817dc' did not match any file(s) known to git
#18 1.230 Checkout unsuccessful.
#18 DONE 1.5s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:056214bf455bdede76e346c508a288595566ef8c63b881a2e7e08eab0c6ad1f0
#19 DONE 1.5s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:6b98d1ff24e6ff3a7b6d0fd05e58c9535a47af5f77bc3126fda9a9c02b151885
#20 0.536 Run fuzzer_build to build the target
#20 0.645 FUZZ_TARGET = easyws_fuzzer
#20 0.645 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.645 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.669 Building benchmark easywsclient_easyws_fuzzer with fuzzer afl
#20 0.673 ++ find /src -name '*_fuzzer.cpp'
#20 0.694 + for f in $(find $SRC -name '*_fuzzer.cpp')
#20 0.695 ++ basename -s .cpp /src/easyws_fuzzer.cpp
#20 0.696 + b=easyws_fuzzer
#20 0.696 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -g easywsclient.cpp -I. /src/easyws_fuzzer.cpp -o /out/easyws_fuzzer /libAFL.a
#20 3.890 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 4.5s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:c29fa87ffc086a14e114de39212890a20cb7d3f24461a9d92d7588208cbd0f23 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer
#21 naming to gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer:
------
#2 [internal] load .dockerignore
#2 sha256:d1800457d461eee60d22a09c89caa267975ce967b8c2af282205e57429b8cb55
#2 transferring context: 2B done
#2 DONE 0.2s

#1 [internal] load build definition from runner.Dockerfile
#1 sha256:c0758aa31f2b6d83920b36b3639f103d2761783d38b7e9f549105813a3425422
#1 transferring dockerfile: 656B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer-intermediate
#5 sha256:79a66bc7441b9dcb3b39dd1e772b2a34ffb07f6102dd988c9e300236d122a410
#5 ERROR: gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer-intermediate:latest: not found

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:0141915220e4784464cbf5b4df45ebe0ca86417eb51733f6e5b060f061ce7857
#6 writing image sha256:0141915220e4784464cbf5b4df45ebe0ca86417eb51733f6e5b060f061ce7857 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer-intermediate:
------
#2 [internal] load .dockerignore
#2 sha256:87e80343b2579133dc74f5a115615b8ac546f6dd5b85316c8399cbe58d97002a
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:a9969a67b4d3e93a23a44bc0c6b58a155bbec0b91cd86cdc48c72e5d1d6d1f18
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer-intermediate:latest
#3 sha256:da1dcbc6fc8cd12f84d06aa2f49da2e12e877d0c9361118e8865b818b3395489
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer:latest
#4 sha256:9bb1fb5acbb8641269b94a499d6ea3432ec8320b72f623f53fe4caa8ea2bfb33
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:cb33bacdac8f9605e9665a77716090ff85ace55dc49b8482770cae7dd2f21f2e
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer-intermediate
#6 sha256:511e10928291dcaa68b4b199d2ea664303056340e4745802beaf5fd39591e347
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer
#10 sha256:c582c50547adee2c68596f1bc74a01288577450c96f4f13ff9e49d43a833a8bd
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer
#5 sha256:ae73779a6cee7918be92eb42c723fc58c25ef69b2b18d974a00ffd6ad1e43879
#5 ERROR: gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:cb33bacdac8f9605e9665a77716090ff85ace55dc49b8482770cae7dd2f21f2e
#12 transferring context: 18.36MB 0.6s done
#12 DONE 0.7s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer
#10 sha256:c582c50547adee2c68596f1bc74a01288577450c96f4f13ff9e49d43a833a8bd
#10 DONE 1.7s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:4e78311b4099dd3af4a0b7af3654c6bd9d25c67ebfaae37d2a8767efa0f2d7a9
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:305a5e4836b160afeb236a482317a70e6971a10d957bcc3e53884187d33d9bd1
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:7077dd499229edbe639fa305cd0599217ee69690482175f3bfa7c13844ea1f66
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:787dca3a618ef76afd3b834cb315e21116f92d44577e62f3cdecef9697509d30
#11 DONE 0.3s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:d2f65fdcf7fcbc1a62ed35c4f787bd0757aee579e6ff6201460a67a3b99b511d
#13 DONE 1.2s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:4fec370c403d59a1b25faf8c859621e8aa9824501c78dfdcc2a3978a0d4ebd1d
#14 DONE 0.2s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:d662c651ef40d744dc313433a4e6a2e8e0d05174d7fcfd4f9012d47773b0f74b
#15 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:38d3b8b40d58e56b1b4dd5cd7ae488b0bdefe4f13e80d88569d05230ba90c01a
#16 DONE 0.6s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:c4fae49818beef855c98d478fa6b963dbc4bb4e6ecf5887be1f989e55b747612
#17 DONE 0.2s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:3f657ec467274164c48ebab4ba9cf2d4eb54936cd9ad3dfa0ce1ab1eb27e7c6c
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:b52fcf03bcc5918ec07c356e21ce50a3286ad6b6ce3c4064f24f6712dee9fc35
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:863bf5c730b8a4b773c13c405844a00e209e81c69fce7f5f0675768f398852c2
#20 DONE 0.5s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:e209e91c2344baaeab952362a0b13b166f5ab6bb5713346b5cd0a62cbfe0c943 done
#21 naming to gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer done
#21 DONE 0.0s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Doing final sync.
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:a5a7403e9af9781ca98b315dcd8bfc4c26dbaadcc83b56a67912edc0e3e244cb
#1 transferring dockerfile: 32B done
#1 DONE 0.8s

#2 [internal] load .dockerignore
#2 sha256:5f1a988d8ec615c73ea66a482a946a1bdbead8574018f462f86e892823eb46ab
#2 transferring context: 2B done
#2 DONE 0.8s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#10 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/easywsclient_easyws_fuzzer
#10 sha256:b62cfd012d2ce9be5b2a5b4f4121254bdf0b896ac8a8d27b667b87c11df90bc6
#10 DONE 0.0s

#4 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#4 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:1ce7aa82d45ec5e57f0d7bd9d8a06062779ae1731327e13f40e693ccf8cbce64
#8 transferring context: 67B done
#8 DONE 0.1s

#7 [4/5] WORKDIR easywsclient
#7 sha256:3c576b5769494f45749bc4307c9f186ec3c58bc3bb29ceef4575e4f2fe2dafb7
#7 CACHED

#5 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#5 sha256:e94c22665874d420ced0c3b871f4947e168d3bab9afd9b749baffcff0f8f695f
#5 CACHED

#6 [3/5] RUN git clone --depth 1 https://github.com/dhbaird/easywsclient easywsclient
#6 sha256:06891c4131972fb7cf997b81c1fe0eb5e7da2b4c423487f0c60885838c9f2449
#6 CACHED

#9 [5/5] COPY build.sh *.cpp /src/
#9 sha256:d5a615c7a5d3f39407e83c01576c37a501524aea674bb4d04df5618896477ecf
#9 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:5773b1768d441aec9b495b4b2322b78da022a61d8934fe0f102bb0f2b02826c5
#11 writing image sha256:5773b1768d441aec9b495b4b2322b78da022a61d8934fe0f102bb0f2b02826c5 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/easywsclient_easyws_fuzzer done
#11 DONE 0.3s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:e69d92dca507d137d47f31de24250c5ed81bb5a3e4490904afc578050968b847
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:cb31ebb8f0194e77f0e0c622dfc44e3b3bcfad7aaa0a789a92b70d6b63363860
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/easywsclient_easyws_fuzzer:latest
#3 sha256:7ed1bc231479c43fc9cb628bb3eb45c11924757ad30b18a5ae7a68b04091622e
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer-intermediate
#4 sha256:38bc6ebf542e6fbeef3a663b7866f75bba602b20ecd943a404a722ccc1573200
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/easywsclient_easyws_fuzzer
#5 sha256:5f3dcc35b9b809b720ee10d7f242945ed3a1f2ebabaad2c8d5876ea452578db5
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:2ecb425445d381cdd68c2278592ae5be917218116002741b650d8386b448625b
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:a6e0d589ec8ce067daa041ad7cbd5921f846f7ebdd898b88e42c4aa7c33c8a52
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:a744eeb8ad1e29244d95965c4697e60c23636ee450393b858066071576dd91ca 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer-intermediate done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:c28f38789d89e0127c3734a16df132914551504ca41545b3871a2ba16b9987a9
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:68e8819d624b16cc1b9d086589d59f1c98e85d2904b8c276554d7fb819713512
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:e905b96d5ad6d401a2611bb058cbb6b700be20f78258740b63017850604dd193
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:723e55695ad0b895f1a6032c780b5f3e5b57074d30cea3e2c3f91f7401510546
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:b478fd41f571eb23acb7b8f92cba2e4bf4fe813291570155fe29fd6d1a3239d7
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:3f92d2dffad06ef585c1a0a5b9b068392a66cc0fbd784b698f2feac492fbd51d
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:51007eafa401506e124ff0352f4858a722329a65f8347ecf9029f2bd042d1032
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:f0a6e2c90b9429076cded82fb18e115d226dbe158d519383e4bc5f9803ae5b00
#13 writing image sha256:f0a6e2c90b9429076cded82fb18e115d226dbe158d519383e4bc5f9803ae5b00 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:f17b041108a09f4aa3134a3ec939ade1042109f2cffda86b869c04ff57566a1f
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:f57238b9c4bb884064de5197e44f835e8e07b21b5873e16d625dde3b427bf082
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.2s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer-intermediate:latest
#3 sha256:143c60c92e5d9e1c5de234501bec0fbb0d12883d4f3862af14964541f25dbb17
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer-intermediate
#6 sha256:ff827db7ed10be66272de60b7068365350d689c083511e02197be9ac3685f73e
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer
#5 sha256:cf2d2bae490a8bd7393ac4f15ba9b1e67526ec9a816b56a14163e7039f6b581d
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:a6398541f100f00c12c25dd9f2e8ec0bd22883649acbe2dd89720a3f7aa989d0
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.2s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:fdcaf62f11171a7ce3b99079405a8be6770e7801c06bf5d48fbbc28d41defdcf
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:a614e5c59265ea8845cd98a230c05b3aad914e190a9636ebe2b9f6efc43caad9
#10 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:c37e5a6bf69e3c3321c13039e2fae41ab6649b5a18ca411dbc07c6c9708d661a
#14 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:1e2c3ea709d4e6a03cf039e07f0747cead2a2f08aeefea325b1f53180945d556
#13 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:fbe1eb37064f87ffcb126807031fdb635a5868c8824e5b64f55ec47cc05110af
#11 CACHED

#15 [stage-1  8/13] COPY benchmarks/easywsclient_easyws_fuzzer/benchmark.yaml /
#15 sha256:0d7593468143221c8a21001c5899f5cbd5426b4c4ac964c4509ffc1cd1a1edb0
#15 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:df759c5d23a53b6ff31d564ef7d9bbaf908339ab76098842a6d9ccd3d539d36c
#18 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:22501b13b5e401942aa2508d988f5ece5dbadf5d631573ffa004873489b4f764
#8 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:f55a190b50aa728d967b0aeec2696f02b083a5ca961de113a08b293bc319d6e8
#19 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:63414712f74466ec929abaf10bbfde86afb3c124dbd4950dc587cd615c3e4732
#17 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:28e4070c2631757b11636c97b1357451bf6804c7a79b832671d4d26e8b2cf04b
#16 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:d22cccd4c1c334f7a178801a20ad0cfebb97a24d5c370e8e4628c6ebb9702561
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:c29fa87ffc086a14e114de39212890a20cb7d3f24461a9d92d7588208cbd0f23 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:d0abb3aa123cf5feefffc55bc59385c881b4ca614e1739ae21a4618697fdbe7b
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:34acf8f1921fad2f6a22dbc0aad1e75f38389c9d28cd653467612d8c23b45d44
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer-intermediate
#4 sha256:79a66bc7441b9dcb3b39dd1e772b2a34ffb07f6102dd988c9e300236d122a410
#4 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:0141915220e4784464cbf5b4df45ebe0ca86417eb51733f6e5b060f061ce7857 done
#6 naming to gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:a071802653cdae8c1a9f60511e1d78e4fd6dfd5748ec1ed2909191b2d2220fc1
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:a5ced128d88571a86d522d093c80fe43737d5eb5c803b217e6f69e10346127cc
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer:latest
#4 sha256:9bb1fb5acbb8641269b94a499d6ea3432ec8320b72f623f53fe4caa8ea2bfb33
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer-intermediate:latest
#3 sha256:da1dcbc6fc8cd12f84d06aa2f49da2e12e877d0c9361118e8865b818b3395489
#3 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer-intermediate
#6 sha256:511e10928291dcaa68b4b199d2ea664303056340e4745802beaf5fd39591e347
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer
#5 sha256:ae73779a6cee7918be92eb42c723fc58c25ef69b2b18d974a00ffd6ad1e43879
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/easywsclient_easyws_fuzzer
#10 sha256:c582c50547adee2c68596f1bc74a01288577450c96f4f13ff9e49d43a833a8bd
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:ef9b640c8a30ab49ec8bf0cc0b19ae151cbc0b469b12afb83a3e16aff1b4ac11
#12 transferring context: 18.36MB 0.6s done
#12 DONE 0.8s

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:7077dd499229edbe639fa305cd0599217ee69690482175f3bfa7c13844ea1f66
#9 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:e2f49d6d95bc648ca978e0c9c0b4233e01dd02923cc5ef05be9d95f55cdc54d3
#17 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:f97f6b21a7e7d05009f49e4e693916796d3df43f72f6a8ac2051e300253660e7
#18 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:047b58d86fbc7ea696801720935d347ef02db5ec140f0385452a322d5e7e2655
#14 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:943274c71bcb6dad1d54a1e62d9fba6bd23aae644186f99aef8cd8c17859427c
#15 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:4e78311b4099dd3af4a0b7af3654c6bd9d25c67ebfaae37d2a8767efa0f2d7a9
#7 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:ed4ce06d15ecd66b68debefefe9fcadad558afdde9908cd5807f8920a2d23ecc
#19 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:db6ec7fdcfe32933a9c30ef62e5049f1e935caeeb6c04fbbb302d24157ce2a02
#16 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:013236e9f12b6d62e4c0b68a2a1c1607c2489ffaa422cb6d45360a2775b18b43
#13 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:305a5e4836b160afeb236a482317a70e6971a10d957bcc3e53884187d33d9bd1
#8 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:787dca3a618ef76afd3b834cb315e21116f92d44577e62f3cdecef9697509d30
#11 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:dce4ce2b3968377be5bf4f65c0bfe1ae9fb34bc3d8124ecf2a84cef1cb522e1d
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:e209e91c2344baaeab952362a0b13b166f5ab6bb5713346b5cd0a62cbfe0c943 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/easywsclient_easyws_fuzzer done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Doing final sync.
