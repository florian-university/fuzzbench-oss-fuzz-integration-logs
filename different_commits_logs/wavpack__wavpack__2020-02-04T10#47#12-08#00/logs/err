WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: wavpack_wavpack.
INFO:root:Please run "make test-run-afl-wavpack_wavpack" to test integration.
#2 [internal] load .dockerignore
#2 sha256:791d3787c3b5a6f6d727179dd63cc67c439791216a7565ce50e24915e808aecd
#2 transferring context:
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:7c222dcb3a3e2cb9856cc92f786aa625d721524c9ca91acd6b396e7bf3dd7f84
#1 transferring dockerfile: 960B done
#1 DONE 0.7s

#2 [internal] load .dockerignore
#2 sha256:791d3787c3b5a6f6d727179dd63cc67c439791216a7565ce50e24915e808aecd
#2 transferring context: 2B done
#2 DONE 0.7s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack
#4 sha256:59dc3870deb515f732a2b1758e2ecd5aa472d2c1068d5737010c1ddc11d80126
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack:latest: not found

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:e94c22665874d420ced0c3b871f4947e168d3bab9afd9b749baffcff0f8f695f
#6 0.666 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#6 0.666 Get:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#6 0.666 Hit:3 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 0.742 Get:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#6 0.773 Get:5 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#6 1.516 Fetched 336 kB in 1s (350 kB/s)
#6 1.516 Reading package lists...
#6 3.016 Reading package lists...
#6 4.436 Building dependency tree...
#6 4.646 Reading state information...
#6 4.856 make is already the newest version (4.2.1-1.2).
#6 4.856 make set to manually installed.
#6 4.856 The following additional packages will be installed:
#6 4.858   autotools-dev libltdl-dev libltdl7 libsigsegv2 m4
#6 4.860 Suggested packages:
#6 4.860   autoconf-archive gnu-standards autoconf-doc gettext libtool-doc gfortran
#6 4.860   | fortran95-compiler gcj-jdk m4-doc
#6 4.902 The following NEW packages will be installed:
#6 4.905   autoconf automake autotools-dev libltdl-dev libltdl7 libsigsegv2 libtool m4
#6 4.977 0 upgraded, 8 newly installed, 0 to remove and 0 not upgraded.
#6 4.977 Need to get 1457 kB of archives.
#6 4.977 After this operation, 6651 kB of additional disk space will be used.
#6 4.977 Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 libsigsegv2 amd64 2.12-2 [13.9 kB]
#6 5.002 Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 m4 amd64 1.4.18-4 [199 kB]
#6 5.071 Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 autoconf all 2.69-11.1 [321 kB]
#6 5.101 Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 autotools-dev all 20180224.1 [39.6 kB]
#6 5.104 Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 automake all 1:1.16.1-4ubuntu6 [522 kB]
#6 5.143 Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl7 amd64 2.4.6-14 [38.5 kB]
#6 5.146 Get:7 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl-dev amd64 2.4.6-14 [162 kB]
#6 5.158 Get:8 http://archive.ubuntu.com/ubuntu focal/main amd64 libtool all 2.4.6-14 [161 kB]
#6 5.501 debconf: delaying package configuration, since apt-utils is not installed
#6 5.621 Fetched 1457 kB in 0s (5743 kB/s)
#6 5.826 Selecting previously unselected package libsigsegv2:amd64.
#6 5.826 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21291 files and directories currently installed.)
#6 5.848 Preparing to unpack .../0-libsigsegv2_2.12-2_amd64.deb ...
#6 5.922 Unpacking libsigsegv2:amd64 (2.12-2) ...
#6 6.065 Selecting previously unselected package m4.
#6 6.068 Preparing to unpack .../1-m4_1.4.18-4_amd64.deb ...
#6 6.096 Unpacking m4 (1.4.18-4) ...
#6 6.291 Selecting previously unselected package autoconf.
#6 6.294 Preparing to unpack .../2-autoconf_2.69-11.1_all.deb ...
#6 6.312 Unpacking autoconf (2.69-11.1) ...
#6 6.806 Selecting previously unselected package autotools-dev.
#6 6.810 Preparing to unpack .../3-autotools-dev_20180224.1_all.deb ...
#6 6.836 Unpacking autotools-dev (20180224.1) ...
#6 7.011 Selecting previously unselected package automake.
#6 7.014 Preparing to unpack .../4-automake_1%3a1.16.1-4ubuntu6_all.deb ...
#6 7.035 Unpacking automake (1:1.16.1-4ubuntu6) ...
#6 7.238 Selecting previously unselected package libltdl7:amd64.
#6 7.242 Preparing to unpack .../5-libltdl7_2.4.6-14_amd64.deb ...
#6 7.257 Unpacking libltdl7:amd64 (2.4.6-14) ...
#6 7.379 Selecting previously unselected package libltdl-dev:amd64.
#6 7.382 Preparing to unpack .../6-libltdl-dev_2.4.6-14_amd64.deb ...
#6 7.409 Unpacking libltdl-dev:amd64 (2.4.6-14) ...
#6 7.579 Selecting previously unselected package libtool.
#6 7.582 Preparing to unpack .../7-libtool_2.4.6-14_all.deb ...
#6 7.606 Unpacking libtool (2.4.6-14) ...
#6 7.791 Setting up autotools-dev (20180224.1) ...
#6 7.872 Setting up libsigsegv2:amd64 (2.12-2) ...
#6 7.947 Setting up libltdl7:amd64 (2.4.6-14) ...
#6 8.027 Setting up libtool (2.4.6-14) ...
#6 8.099 Setting up m4 (1.4.18-4) ...
#6 8.158 Setting up autoconf (2.69-11.1) ...
#6 8.229 Setting up automake (1:1.16.1-4ubuntu6) ...
#6 8.278 update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
#6 8.278 update-alternatives: warning: skip creation of /usr/share/man/man1/automake.1.gz because associated file /usr/share/man/man1/automake-1.16.1.gz (of link group automake) doesn't exist
#6 8.278 update-alternatives: warning: skip creation of /usr/share/man/man1/aclocal.1.gz because associated file /usr/share/man/man1/aclocal-1.16.1.gz (of link group automake) doesn't exist
#6 8.297 Setting up libltdl-dev:amd64 (2.4.6-14) ...
#6 8.360 Processing triggers for libc-bin (2.31-0ubuntu9.2) ...
#6 DONE 8.7s

#7 [3/5] RUN git clone --depth 1 https://github.com/dbry/WavPack.git wavpack
#7 sha256:2cf011693086b8994539d64c64671aff32ff82b8d3c09ea22ce1f8491a1ae5db
#7 0.462 Cloning into 'wavpack'...
#7 DONE 1.8s

#8 [4/5] RUN cp wavpack/fuzzing/build.sh /src
#8 sha256:9d167afa4282e8ed1e85fb0601f6014f77f1f7009a904d9389f21129e72ee69e
#8 DONE 0.7s

#9 [5/5] WORKDIR wavpack
#9 sha256:c89af2b87af59a67fdb54e298b6bbe7cd74249f9a48c0be90bd73710f5723225
#9 DONE 0.2s

#10 exporting to image
#10 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#10 exporting layers done
#10 writing image sha256:531311f26fe78fb05d3fd5ec1c1b9130553f2f14ad3e663fac8317f90809c30e done
#10 naming to gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack done
#10 DONE 0.1s

#11 exporting cache
#11 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#11 preparing build cache for export done
#11 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack:
------
#2 [internal] load .dockerignore
#2 sha256:c3a99304771f570ed85b2f577dcb4ea9e89595222d0dbcdfd89e2abce6e54e1b
#2 transferring context: 2B done
#2 DONE 0.1s

#1 [internal] load build definition from builder.Dockerfile
#1 sha256:29202149ddf6e28c9df6aead370e8001a19206532016eb44e4b07324aa057079
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack:latest
#3 sha256:95d1858a9ccfc68daef92357e366b4c692b664944e3c32a6f15feac6c76ffe8d
#3 DONE 0.0s

#7 importing cache manifest from gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate
#7 sha256:1413b91e7e4360516392750de94ab71f525f973430e80c1f77f3249c0d7b9f9f
#7 ...

#4 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack
#4 sha256:b32b6a1ca9765fc0052b04283881f93bc36c3e0c2497cca30bc8c06c780e5f8f
#4 DONE 0.0s

#7 importing cache manifest from gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate
#7 sha256:1413b91e7e4360516392750de94ab71f525f973430e80c1f77f3249c0d7b9f9f
#7 ERROR: gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate:latest: not found

#4 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack
#4 sha256:b32b6a1ca9765fc0052b04283881f93bc36c3e0c2497cca30bc8c06c780e5f8f
#4 DONE 0.9s

#5 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#5 sha256:8434bb9c97f8eaf152b377ba1cec65e9b5baffa9d4912e197177419cffaa8ce7
#5 0.424 Cloning into '/afl'...
#5 1.287 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#5 1.287 
#5 1.287 You are in 'detached HEAD' state. You can look around, make experimental
#5 1.287 changes and commit them, and you can discard any commits you make in this
#5 1.287 state without impacting any branches by switching back to a branch.
#5 1.287 
#5 1.287 If you want to create a new branch to retain commits you create, you may
#5 1.287 do so (now or later) by using -c with the switch command. Example:
#5 1.287 
#5 1.287   git switch -c <new-branch-name>
#5 1.287 
#5 1.287 Or undo this operation with:
#5 1.287 
#5 1.287   git switch -
#5 1.287 
#5 1.287 Turn off this advice by setting config variable advice.detachedHead to false
#5 1.287 
#5 1.287 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#5 1.305 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#5 1.305 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#5 1.495 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#5 1.499 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#5 3.873 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#5 4.186 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#5 4.620 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#5 4.770 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#5 5.159 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#5 5.396 ln -sf afl-as as
#5 5.398 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#5 5.401 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#5 5.402 [+] All done! Be sure to review README - it's pretty short and useful.
#5 DONE 6.0s

#6 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#6 sha256:3f0f8874ac6c7436f91e1e4d21da9d821a936cf296405d4e2d4491096c13e00a
#6 0.684 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 0.684 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#6 0.688 Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#6 0.713 Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#6 0.807 Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease
#6 1.756 Reading package lists...
#6 3.254 Reading package lists...
#6 4.679 Building dependency tree...
#6 4.899 Reading state information...
#6 5.147 wget is already the newest version (1.20.3-1ubuntu2).
#6 5.147 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#6 5.152 --2022-02-16 06:01:48--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#6 5.155 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.109.133, 185.199.110.133, 185.199.111.133, ...
#6 5.168 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.109.133|:443... connected.
#6 5.191 HTTP request sent, awaiting response... 200 OK
#6 5.351 Length: 9177 (9.0K) [text/plain]
#6 5.351 Saving to: '/afl/afl_driver.cpp'
#6 5.351 
#6 5.351      0K ........                                              100% 11.2M=0.001s
#6 5.351 
#6 5.351 2022-02-16 06:01:48 (11.2 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#6 5.351 
#6 7.135 ar: creating /libAFL.a
#6 DONE 8.7s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:2f0cd2a3ffb466d0073ea84bb91bb9282e5814c176fc688a96bc066787861c43 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate:
------
#2 [internal] load .dockerignore
#2 sha256:a9c0f53daffb8bcba8610b5ecc59b81bae87d73e83f6d5be85acf3dd4304168d
#2 transferring context: 34B done
#2 DONE 0.1s

#1 [internal] load build definition from Dockerfile
#1 sha256:84df34a38390ebcf8c4b12fc8344a563769109d546a2d130439af5a5c3491287
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:27a1b3170ee5f39effef8c36050637b74aa6293828f558bf370b11ae384ee226
#8 transferring context: 559B 0.1s done
#8 DONE 0.2s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:020997e84f21e10685da5d70eac6c2ee199ced7fd4e53e848464cb8930ddffaf
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:239f50858f3ede7514ddcb1dda4eefad89e9b05148c35e8a109fd64cd16da53a
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:ee5db376a662d4d45fa1c026508ff75e2a978f395360ecaf470e650bbf4ff49f
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:058cb18a4a71a43724940686ec8cb6c125c8a9ae2770e72c5f9b4562df0ea8fb
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.2s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:7100c8f25c9d33b0aa47d6db81b491c40608470c82b11214e532b2b4d02018eb
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:b5e7f2012ef668520ee96b20295238464a9d3bef4ce345f0e25c7bb4bd0bfc63
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate:latest
#3 sha256:64507a805cf2a57d95258a07576e25ad4f0fb90f4b5dcd73babf7702fd1ce42b
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:ca07cd976dd88ef1c7b565244e438eec695580de8a2881f98c5fca015ea503ea
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate
#6 sha256:1efd61360fff5cda447d58472a5726ea69db235771551ae4a7fa11b4360e402b
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/wavpack_wavpack
#5 sha256:9548840cb98875a2f1d16616df9ba240016006d3fb6fbddd54749c8e01a0050d
#5 ERROR: gcr.io/fuzzbench/builders/afl/wavpack_wavpack:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:ca07cd976dd88ef1c7b565244e438eec695580de8a2881f98c5fca015ea503ea
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.2s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate
#6 sha256:1efd61360fff5cda447d58472a5726ea69db235771551ae4a7fa11b4360e402b
#6 DONE 0.7s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:aaf676dff53c2626ce7cc0752650f4bff4fc5e18146db12808ef44f3163e91fa
#8 DONE 0.8s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:637ade824826bba449343b899b761b1714b30d5af7d51565003bb86e36186c7a
#9 DONE 15.1s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:01f562f1911e731ab37d601410e08b58fb40e6d3e30fe0a709e708390b218b04
#10 DONE 0.1s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:9dcd4fc7500d0492fdbecbe21fb924f321b56a0092c15b82f05a94490aecac26
#11 DONE 30.4s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:f13ffc0371d1339694e80c476ca311593144623c3ca18e150cbf2fbf1e0e851d
#13 DONE 0.4s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:45be92d6b0908e043dcdd4aa34a84eedfcdd3b79a71e22f30d3752186127d3bf
#14 DONE 0.6s

#15 [stage-1  8/13] COPY benchmarks/wavpack_wavpack/benchmark.yaml /
#15 sha256:112a3ba09a1d1b414c99cb50ae7252a10abd621e519caf957479c982dfeccd80
#15 DONE 0.3s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:a4436923b60c5d4f441272abbff78114fd063410655a7fd6086e0a92fd4df36b
#16 DONE 1.5s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:3dad166ef02e597b48f636fa47e2e9dc60f468d63495c46fe604658e992e460b
#17 DONE 0.3s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:49db3255fbf58348298ce71eb0eb5697c509b8ba5005cd7fac29285e9c2e9d05
#18 0.506 Checking out commit 43121ce0
#18 3.399 From https://github.com/dbry/WavPack
#18 3.399  * [new tag]         4.70.0       -> 4.70.0
#18 3.399  * [new tag]         4.70.0-rc    -> 4.70.0-rc
#18 3.400  * [new tag]         4.75.0       -> 4.75.0
#18 3.400  * [new tag]         4.75.0-rc    -> 4.75.0-rc
#18 3.400  * [new tag]         4.75.2       -> 4.75.2
#18 3.400  * [new tag]         4.80.0       -> 4.80.0
#18 3.401  * [new tag]         4.80.0-rc    -> 4.80.0-rc
#18 3.401  * [new tag]         5.0.0        -> 5.0.0
#18 3.401  * [new tag]         5.0.0-alpha  -> 5.0.0-alpha
#18 3.402  * [new tag]         5.0.0-alpha2 -> 5.0.0-alpha2
#18 3.402  * [new tag]         5.0.0-alpha3 -> 5.0.0-alpha3
#18 3.402  * [new tag]         5.0.0-alpha4 -> 5.0.0-alpha4
#18 3.403  * [new tag]         5.0.0-alpha5 -> 5.0.0-alpha5
#18 3.403  * [new tag]         5.1.0        -> 5.1.0
#18 3.403  * [new tag]         5.2.0        -> 5.2.0
#18 3.403  * [new tag]         5.3.0        -> 5.3.0
#18 3.404  * [new tag]         5.4.0        -> 5.4.0
#18 3.411 error: pathspec '43121ce0' did not match any file(s) known to git
#18 3.415 error: pathspec '43121ce0' did not match any file(s) known to git
#18 3.422 error: pathspec '43121ce0' did not match any file(s) known to git
#18 3.472 Checkout unsuccessful.
#18 DONE 3.7s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:701d3e73f94a5f57a42ded54f606f462dc0a9f769b406891d77af17f68987c29
#19 DONE 1.2s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:10587a83d44117be82aae7a9d730a8f1d4f408e8b76e25298fbb9d2cad5285b3
#20 0.551 Run fuzzer_build to build the target
#20 0.664 FUZZ_TARGET = wavpack
#20 0.664 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.664 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.669 Building benchmark wavpack_wavpack with fuzzer afl
#20 0.672 + ./autogen.sh --disable-apps --disable-shared --enable-static
#20 1.024 autoreconf: Entering directory `.'
#20 1.025 autoreconf: configure.ac: not using Gettext
#20 2.026 autoreconf: running: aclocal 
#20 2.424 configure.ac:67: warning: macro 'AM_ICONV' not found in library
#20 3.017 autoreconf: configure.ac: tracing
#20 3.599 autoreconf: running: libtoolize --copy
#20 3.913 libtoolize: putting auxiliary files in '.'.
#20 3.913 libtoolize: copying file './ltmain.sh'
#20 4.153 libtoolize: Consider adding 'AC_CONFIG_MACRO_DIRS([m4])' to configure.ac,
#20 4.153 libtoolize: and rerunning libtoolize and aclocal.
#20 4.153 libtoolize: Consider adding '-I m4' to ACLOCAL_AMFLAGS in Makefile.am.
#20 4.549 configure.ac:67: warning: macro 'AM_ICONV' not found in library
#20 5.078 autoreconf: running: /usr/bin/autoconf
#20 5.538 configure.ac:67: error: possibly undefined macro: AM_ICONV
#20 5.538       If this token and others are legitimate, please use m4_pattern_allow.
#20 5.538       See the Autoconf documentation.
#20 5.542 autoreconf: /usr/bin/autoconf failed with exit status: 1
#20 5.546 Traceback (most recent call last):
#20 5.546   File "<string>", line 1, in <module>
#20 5.546   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 5.547     utils.build_benchmark()
#20 5.547   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 5.547     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 5.547   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 5.547     raise CalledProcessError(retcode, cmd)
#20 5.547 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/wavpack_wavpack:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2743872: .afl-wavpack_wavpack-builder] Error 1
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:7747167e7c4b32d7df652f24e21866d4f40cf3a9d867b22599435fd98f48d043
#1 transferring dockerfile: 32B done
#1 DONE 0.4s

#2 [internal] load .dockerignore
#2 sha256:eb5738d7d66f6f1d9b503c1fb60a60e27453ed03a6c49ab8a524714d8b75e372
#2 transferring context: 2B done
#2 DONE 0.3s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack
#4 sha256:59dc3870deb515f732a2b1758e2ecd5aa472d2c1068d5737010c1ddc11d80126
#4 DONE 0.0s

#8 [4/5] RUN cp wavpack/fuzzing/build.sh /src
#8 sha256:9d167afa4282e8ed1e85fb0601f6014f77f1f7009a904d9389f21129e72ee69e
#8 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:e94c22665874d420ced0c3b871f4947e168d3bab9afd9b749baffcff0f8f695f
#6 CACHED

#7 [3/5] RUN git clone --depth 1 https://github.com/dbry/WavPack.git wavpack
#7 sha256:2cf011693086b8994539d64c64671aff32ff82b8d3c09ea22ce1f8491a1ae5db
#7 CACHED

#9 [5/5] WORKDIR wavpack
#9 sha256:c89af2b87af59a67fdb54e298b6bbe7cd74249f9a48c0be90bd73710f5723225
#9 CACHED

#10 exporting to image
#10 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#10 exporting layers done
#10 writing image sha256:531311f26fe78fb05d3fd5ec1c1b9130553f2f14ad3e663fac8317f90809c30e
#10 writing image sha256:531311f26fe78fb05d3fd5ec1c1b9130553f2f14ad3e663fac8317f90809c30e 0.0s done
#10 naming to gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack done
#10 DONE 0.3s

#11 exporting cache
#11 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#11 preparing build cache for export done
#11 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:d7d8da44b872e84a7f7b3bef414270fb4988e5aee7e15d8d26b9b39190e5410a
#2 transferring context: 2B done
#2 DONE 0.3s

#1 [internal] load build definition from builder.Dockerfile
#1 sha256:c2b7b68b978aba6c4a54407109fcf664203a620f32d68a25a79b30f395dade45
#1 transferring dockerfile: 46B done
#1 DONE 0.4s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack:latest
#3 sha256:95d1858a9ccfc68daef92357e366b4c692b664944e3c32a6f15feac6c76ffe8d
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack
#5 sha256:b32b6a1ca9765fc0052b04283881f93bc36c3e0c2497cca30bc8c06c780e5f8f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate
#4 sha256:1413b91e7e4360516392750de94ab71f525f973430e80c1f77f3249c0d7b9f9f
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:8434bb9c97f8eaf152b377ba1cec65e9b5baffa9d4912e197177419cffaa8ce7
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:3f0f8874ac6c7436f91e1e4d21da9d821a936cf296405d4e2d4491096c13e00a
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:2f0cd2a3ffb466d0073ea84bb91bb9282e5814c176fc688a96bc066787861c43 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:4b55ee964270b5497ff50d02c096a1205dbf91a78f9685928f01a48c1e179d83
#2 transferring context: 34B done
#2 DONE 0.1s

#1 [internal] load build definition from Dockerfile
#1 sha256:e32ad0ba0545645f2e40e2ca79ac3dc47061d59aafb77d3d3f6bfb278ab062d2
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:a5be53a6581cc66e0dfa3ea925145492a8c0e55dbf1810ea82a8e0b512b8f71c
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:5b77e91822dbcf7521f6be3a003209f54d27bbafc1ce664f4809300292210f5d
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:a51341a99c361b0fd8155c0fcebb1b39dfbe701bd0d67a3196b78aee8acefb72
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:8da60ed791a3e937a500edce68844760a15e65c4a62732a37e78228cb3932a1a
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:6613b3ddc1b8a468f4d1b48f5178501b6904fbfcbd71912e4eb879877ea7aa95
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:3006f4b90bde936c5c087a40f7f4c7eae44cb0696d298d8f9fdc2ed714cd28c0
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:610bf9e5e564975314ac6964101567a5c1f703e7464ba2be12956b84136056ac
#2 transferring context: 34B done
#2 DONE 0.2s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate:latest
#3 sha256:64507a805cf2a57d95258a07576e25ad4f0fb90f4b5dcd73babf7702fd1ce42b
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:f638fe93ad44aa53e52543116ba36f71c757c9d12b1152a84b96ff12963688d9
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate
#6 sha256:1efd61360fff5cda447d58472a5726ea69db235771551ae4a7fa11b4360e402b
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/wavpack_wavpack
#5 sha256:9548840cb98875a2f1d16616df9ba240016006d3fb6fbddd54749c8e01a0050d
#5 ERROR: gcr.io/fuzzbench/builders/afl/wavpack_wavpack:latest: not found

#12 [internal] load build context
#12 sha256:f638fe93ad44aa53e52543116ba36f71c757c9d12b1152a84b96ff12963688d9
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.2s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:3c772985c5802aac545612436820f3ea84c1b4fb81e2f16ed457325f1a0a6a15
#14 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:aaf676dff53c2626ce7cc0752650f4bff4fc5e18146db12808ef44f3163e91fa
#8 CACHED

#15 [stage-1  8/13] COPY benchmarks/wavpack_wavpack/benchmark.yaml /
#15 sha256:e250322585a6f835f5947dfc4e53ba40c7f8f6fca33c59a673a6053ad1d1384a
#15 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:01f562f1911e731ab37d601410e08b58fb40e6d3e30fe0a709e708390b218b04
#10 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:123adf711dc7dcf9b2b976b2e7ee74d95a136043429dc855b73a79d642a084a6
#16 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:43df2ade7e2fb1468e53ffd1d05abb8c39fe365d1033eec2d0d8fab1a1d49602
#17 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:1707016d2419568cb1478ca8755276655d5566f44256c4fefcaaebb5dba26f02
#18 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:c8807ecffd4e3136c4d02edf6fc4f8ed5eb3a595beec62ba6ea859926eac631a
#13 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:637ade824826bba449343b899b761b1714b30d5af7d51565003bb86e36186c7a
#9 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:9dcd4fc7500d0492fdbecbe21fb924f321b56a0092c15b82f05a94490aecac26
#11 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:74e4c7e7d0d325a1c2da8ee213caabc69538a5657d96dd13b854708bd7aa6b3f
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:44ccd67cd0a99b69822e75b2ab19471ee31709d440e3fa5daab4b116b86b1e67
#20 0.985 Run fuzzer_build to build the target
#20 1.098 FUZZ_TARGET = wavpack
#20 1.098 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 1.098 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 1.103 Building benchmark wavpack_wavpack with fuzzer afl
#20 1.106 + ./autogen.sh --disable-apps --disable-shared --enable-static
#20 1.456 autoreconf: Entering directory `.'
#20 1.457 autoreconf: configure.ac: not using Gettext
#20 2.458 autoreconf: running: aclocal 
#20 2.851 configure.ac:67: warning: macro 'AM_ICONV' not found in library
#20 3.392 autoreconf: configure.ac: tracing
#20 3.969 autoreconf: running: libtoolize --copy
#20 4.292 libtoolize: putting auxiliary files in '.'.
#20 4.292 libtoolize: copying file './ltmain.sh'
#20 4.533 libtoolize: Consider adding 'AC_CONFIG_MACRO_DIRS([m4])' to configure.ac,
#20 4.533 libtoolize: and rerunning libtoolize and aclocal.
#20 4.533 libtoolize: Consider adding '-I m4' to ACLOCAL_AMFLAGS in Makefile.am.
#20 4.927 configure.ac:67: warning: macro 'AM_ICONV' not found in library
#20 5.621 autoreconf: running: /usr/bin/autoconf
#20 6.087 configure.ac:67: error: possibly undefined macro: AM_ICONV
#20 6.087       If this token and others are legitimate, please use m4_pattern_allow.
#20 6.087       See the Autoconf documentation.
#20 6.090 autoreconf: /usr/bin/autoconf failed with exit status: 1
#20 6.094 Traceback (most recent call last):
#20 6.094   File "<string>", line 1, in <module>
#20 6.094   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 6.095     utils.build_benchmark()
#20 6.095   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 6.095     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 6.095   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 6.095     raise CalledProcessError(retcode, cmd)
#20 6.095 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/wavpack_wavpack:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2743872: .afl-wavpack_wavpack-builder] Error 1
