WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: pillow_pillow.
INFO:root:Please run "make test-run-afl-pillow_pillow" to test integration.
#2 [internal] load .dockerignore
#2 sha256:72c7a4e92d1d8abe284f5f596e60fdc36647712ef3df039ceaaf1e953b8454bb
#2 transferring context:
#2 transferring context: 2B done
#2 DONE 0.8s

#1 [internal] load build definition from Dockerfile
#1 sha256:fd2dc849223a49b0512efd6bc2a6280d19a3af8c312395bfaaac03c879f35e98
#1 transferring dockerfile: 915B done
#1 DONE 0.8s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#9 [internal] load build context
#9 sha256:12153047426603a9a79da31ace47091749254d7d550bc320356d470038bf4ad8
#9 DONE 0.0s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/pillow_pillow
#4 sha256:91fad67c061985ad1d9fcf304aef8f621a70ec675347e49cc9acfe8a63bf0921
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/pillow_pillow:latest: not found

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 CACHED

#9 [internal] load build context
#9 sha256:12153047426603a9a79da31ace47091749254d7d550bc320356d470038bf4ad8
#9 transferring context: 48.83kB done
#9 DONE 0.7s

#6 [2/6] RUN apt-get install -y libjpeg-dev zlib1g-dev libpng-dev
#6 sha256:e49427fe68b6b129a7fc2320ec54b12ebdec4fafb3e2ccbb392d0012411d2645
#6 0.607 Reading package lists...
#6 2.184 Building dependency tree...
#6 2.397 Reading state information...
#6 2.616 The following additional packages will be installed:
#6 2.616   libjpeg-turbo8 libjpeg-turbo8-dev libjpeg8 libjpeg8-dev libpng-tools
#6 2.617   libpng16-16
#6 2.681 The following NEW packages will be installed:
#6 2.682   libjpeg-dev libjpeg-turbo8 libjpeg-turbo8-dev libjpeg8 libjpeg8-dev
#6 2.683   libpng-dev libpng-tools libpng16-16 zlib1g-dev
#6 2.791 0 upgraded, 9 newly installed, 0 to remove and 0 not upgraded.
#6 2.791 Need to get 897 kB of archives.
#6 2.791 After this operation, 3421 kB of additional disk space will be used.
#6 2.791 Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 libpng16-16 amd64 1.6.37-2 [179 kB]
#6 2.906 Get:2 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libjpeg-turbo8 amd64 2.0.3-0ubuntu1.20.04.1 [117 kB]
#6 2.916 Get:3 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libjpeg-turbo8-dev amd64 2.0.3-0ubuntu1.20.04.1 [238 kB]
#6 2.942 Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 libjpeg8 amd64 8c-2ubuntu8 [2194 B]
#6 2.942 Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 libjpeg8-dev amd64 8c-2ubuntu8 [1552 B]
#6 2.943 Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 libjpeg-dev amd64 8c-2ubuntu8 [1546 B]
#6 2.943 Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 zlib1g-dev amd64 1:1.2.11.dfsg-2ubuntu1.2 [155 kB]
#6 2.954 Get:8 http://archive.ubuntu.com/ubuntu focal/main amd64 libpng-dev amd64 1.6.37-2 [175 kB]
#6 2.967 Get:9 http://archive.ubuntu.com/ubuntu focal/main amd64 libpng-tools amd64 1.6.37-2 [26.1 kB]
#6 3.282 debconf: delaying package configuration, since apt-utils is not installed
#6 3.393 Fetched 897 kB in 0s (3274 kB/s)
#6 3.470 Selecting previously unselected package libpng16-16:amd64.
#6 3.470 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21291 files and directories currently installed.)
#6 3.491 Preparing to unpack .../0-libpng16-16_1.6.37-2_amd64.deb ...
#6 3.517 Unpacking libpng16-16:amd64 (1.6.37-2) ...
#6 3.609 Selecting previously unselected package libjpeg-turbo8:amd64.
#6 3.612 Preparing to unpack .../1-libjpeg-turbo8_2.0.3-0ubuntu1.20.04.1_amd64.deb ...
#6 3.615 Unpacking libjpeg-turbo8:amd64 (2.0.3-0ubuntu1.20.04.1) ...
#6 3.671 Selecting previously unselected package libjpeg-turbo8-dev:amd64.
#6 3.674 Preparing to unpack .../2-libjpeg-turbo8-dev_2.0.3-0ubuntu1.20.04.1_amd64.deb ...
#6 3.677 Unpacking libjpeg-turbo8-dev:amd64 (2.0.3-0ubuntu1.20.04.1) ...
#6 3.746 Selecting previously unselected package libjpeg8:amd64.
#6 3.749 Preparing to unpack .../3-libjpeg8_8c-2ubuntu8_amd64.deb ...
#6 3.753 Unpacking libjpeg8:amd64 (8c-2ubuntu8) ...
#6 3.788 Selecting previously unselected package libjpeg8-dev:amd64.
#6 3.791 Preparing to unpack .../4-libjpeg8-dev_8c-2ubuntu8_amd64.deb ...
#6 3.794 Unpacking libjpeg8-dev:amd64 (8c-2ubuntu8) ...
#6 3.827 Selecting previously unselected package libjpeg-dev:amd64.
#6 3.830 Preparing to unpack .../5-libjpeg-dev_8c-2ubuntu8_amd64.deb ...
#6 3.834 Unpacking libjpeg-dev:amd64 (8c-2ubuntu8) ...
#6 3.871 Selecting previously unselected package zlib1g-dev:amd64.
#6 3.874 Preparing to unpack .../6-zlib1g-dev_1%3a1.2.11.dfsg-2ubuntu1.2_amd64.deb ...
#6 3.877 Unpacking zlib1g-dev:amd64 (1:1.2.11.dfsg-2ubuntu1.2) ...
#6 3.937 Selecting previously unselected package libpng-dev:amd64.
#6 3.940 Preparing to unpack .../7-libpng-dev_1.6.37-2_amd64.deb ...
#6 3.943 Unpacking libpng-dev:amd64 (1.6.37-2) ...
#6 4.007 Selecting previously unselected package libpng-tools.
#6 4.010 Preparing to unpack .../8-libpng-tools_1.6.37-2_amd64.deb ...
#6 4.014 Unpacking libpng-tools (1.6.37-2) ...
#6 4.077 Setting up libpng16-16:amd64 (1.6.37-2) ...
#6 4.097 Setting up libjpeg-turbo8:amd64 (2.0.3-0ubuntu1.20.04.1) ...
#6 4.110 Setting up zlib1g-dev:amd64 (1:1.2.11.dfsg-2ubuntu1.2) ...
#6 4.125 Setting up libjpeg8:amd64 (8c-2ubuntu8) ...
#6 4.137 Setting up libjpeg-turbo8-dev:amd64 (2.0.3-0ubuntu1.20.04.1) ...
#6 4.148 Setting up libpng-tools (1.6.37-2) ...
#6 4.158 Setting up libpng-dev:amd64 (1.6.37-2) ...
#6 4.169 Setting up libjpeg8-dev:amd64 (8c-2ubuntu8) ...
#6 4.180 Setting up libjpeg-dev:amd64 (8c-2ubuntu8) ...
#6 4.192 Processing triggers for libc-bin (2.31-0ubuntu9.2) ...
#6 DONE 4.5s

#7 [3/6] RUN git clone --depth 1 https://github.com/python-pillow/Pillow
#7 sha256:e15335492eb29069f3118f7dac4770fd96dec1474bced5ac0c024e5b9755be69
#7 0.485 Cloning into 'Pillow'...
#7 DONE 6.6s

#8 [4/6] WORKDIR /src
#8 sha256:f0511fdb98a25d850a1febdb0c15c059cdd9bfd5fa0908583c1d619be8da66e2
#8 DONE 0.1s

#10 [5/6] COPY build.sh /src/
#10 sha256:f4dea09a6714a201a126abaf66f748ca252791c80d446dff01bfb36a13bd12e8
#10 DONE 0.1s

#11 [6/6] COPY fuzz_* /src/Pillow
#11 sha256:1cbb9a1c41f8095ece84135be199c0e2db85997f28b34353556b1408cddb8f50
#11 DONE 0.1s

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:d90f864ea92dccb0761c816cb013222f3a3ef877a483dbfee555ebeb5eb7cba8 done
#12 naming to gcr.io/fuzzbench/builders/benchmark/pillow_pillow done
#12 DONE 0.2s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/pillow_pillow:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:9b106e3f28ad74e365f5bc1a0148ee5f2dddc0919f0ac2c52978b1b7ff52f41f
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:f1a7334217e5d85f19bc1b7f551c6c368ac2444e9aaf2b943c1ea8146bcc60f9
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/pillow_pillow:latest
#3 sha256:0bcaf43eb6724ab7e04008a3b5dceb8e2f6e0580c3f607660713dbc716774609
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/pillow_pillow
#5 sha256:956421e4b7a459ce1b4adff4bc8e77eea3503312cf40af027ecd960c9285ed55
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/pillow_pillow-intermediate
#4 sha256:fc85fba0896cb470e8dfdf4d70b8b3f01e7868c8060ef9290e05e19aa172af05
#4 ERROR: gcr.io/fuzzbench/builders/afl/pillow_pillow-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/pillow_pillow
#5 sha256:956421e4b7a459ce1b4adff4bc8e77eea3503312cf40af027ecd960c9285ed55
#5 DONE 0.5s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:1386b3a6eab77f36dcf14e0894177a945b2b95efeb1efa33f7219f709d3e04a7
#6 0.438 Cloning into '/afl'...
#6 1.263 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.263 
#6 1.263 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.263 changes and commit them, and you can discard any commits you make in this
#6 1.263 state without impacting any branches by switching back to a branch.
#6 1.263 
#6 1.263 If you want to create a new branch to retain commits you create, you may
#6 1.263 do so (now or later) by using -c with the switch command. Example:
#6 1.263 
#6 1.263   git switch -c <new-branch-name>
#6 1.263 
#6 1.263 Or undo this operation with:
#6 1.263 
#6 1.263   git switch -
#6 1.263 
#6 1.263 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.263 
#6 1.263 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.301 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.301 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.490 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.504 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.965 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.307 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.744 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.902 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.310 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.555 ln -sf afl-as as
#6 5.557 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.560 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.561 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.0s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:17c4591ec9f89d7724dad6e1817436c8042657257d12d3a81cb34e16580f5d86
#7 0.689 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.689 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.689 Get:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#7 0.689 Get:4 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#7 0.771 Get:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#7 1.234 Get:6 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1547 kB]
#7 1.393 Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1973 kB]
#7 1.576 Get:8 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [752 kB]
#7 1.632 Get:9 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [827 kB]
#7 1.693 Get:10 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1134 kB]
#7 1.777 Get:11 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [24.8 kB]
#7 1.943 Get:12 http://archive.ubuntu.com/ubuntu focal-backports/universe i386 Packages [13.1 kB]
#7 2.018 Fetched 6606 kB in 1s (4758 kB/s)
#7 2.018 Reading package lists...
#7 3.574 Reading package lists...
#7 4.986 Building dependency tree...
#7 5.198 Reading state information...
#7 5.469 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.469 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 5.474 --2022-02-16 20:03:09--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.477 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.109.133, 185.199.110.133, 185.199.111.133, ...
#7 5.489 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.109.133|:443... connected.
#7 5.565 HTTP request sent, awaiting response... 200 OK
#7 5.633 Length: 9177 (9.0K) [text/plain]
#7 5.633 Saving to: '/afl/afl_driver.cpp'
#7 5.633 
#7 5.633      0K ........                                              100% 1.58M=0.006s
#7 5.638 
#7 5.638 2022-02-16 20:03:09 (1.58 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.638 
#7 7.398 ar: creating /libAFL.a
#7 DONE 7.8s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:d0d6ee2a451f6a87d1499efa329a629ec8b12180fa3faf79e972982586bc1380 done
#8 naming to gcr.io/fuzzbench/builders/afl/pillow_pillow-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/pillow_pillow-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:eaae3b5206d4a4dfd878c87b4feea753912b3445c19e7d9d9e1dbdc7eca1ae5b
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:8092bdc9eff72e165393e2bee8e9a91e4bd1f7c05152d32150bb916564462b38
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:8854a0552cf7d9b408b2025adf3877d112059dcd28d37a18137b63d2b7aed865
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#9 [4/7] COPY ./requirements.txt /
#9 sha256:3ee785b3ab9d08a4b05d89c106d08ed666fbff7fb209e575f9288f65d5fda017
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:81371a6cb48387465082f2e4d6de0591b2db7abd8f7688c28ad0eb7dc659e5db
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:048103feceff5eaddb8d84a04f3b7695e393dae9cbaf0e66bdc2245c45992b5d
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:0c358553d09f435a4dccf41fb88c498d7941cbcf7c4227d1e6b016388ea11dd8
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:58c9b7d138a6d89f20676ae2713d51cede314c56788bf61e70c824fa82720cbe
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:6b36938cdf5bad4658f3118e05d779fb40948cedc68789736d27572617a00d62
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/pillow_pillow-intermediate:latest
#3 sha256:b1367819fb3f2ff890e7d8a0910714352427be52ce74554044413115665bd091
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:b549722ae4b538a7a875cc541a5003901b773ce76a50edcca50d536a53b01f6a
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/pillow_pillow-intermediate
#6 sha256:970797f60469aebb9f8fe78b9104e56d16d32950b8766c89e22370441f7dfe59
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/pillow_pillow
#5 sha256:3aede2fd7ab8627cd0c4c81cd51b9c44c48e8b3d82fd5b8555e3258482b2e884
#5 ERROR: gcr.io/fuzzbench/builders/afl/pillow_pillow:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:b549722ae4b538a7a875cc541a5003901b773ce76a50edcca50d536a53b01f6a
#12 transferring context: 669.86kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/pillow_pillow-intermediate
#6 sha256:970797f60469aebb9f8fe78b9104e56d16d32950b8766c89e22370441f7dfe59
#6 DONE 0.5s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:32a6a947c5cd33116a47226b1a036a887e0358a366d36ce2fc456fa7bf6798c3
#8 DONE 0.4s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:717ee1421ab5fc985bbb4b7db463b1e968bbdf761f767c49f6175070ad2178a3
#9 DONE 15.3s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:a937d344074b6de0754fb8b79e608dff42f9c563aa9d63ca91f51cd0503e1e91
#10 DONE 0.3s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:901b33a35b443d44b96e58eb3964244019e3f6000f8e8a31fdbfa02b933de4a3
#11 DONE 18.9s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:88798f7e505da20ce3d1d38fd1b2fd9df994d81697dfffb82b02a279300de24b
#13 DONE 0.2s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:25402fb49bdaa2a47affbd2fb6bddebb3132528a6b0564e75255318da1410248
#14 DONE 0.6s

#15 [stage-1  8/13] COPY benchmarks/pillow_pillow/benchmark.yaml /
#15 sha256:65ef3f6123c139582ed5ab95d9c5a7a9c5daf68b9f1861cce2e37f2fe8d90fec
#15 DONE 0.1s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:da0f3cc8f4cf8f4ef2ce99ae973b9c8bf8d006bc83c011c74e2223765f288409
#16 DONE 0.6s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:56d3e28bcffbf91ed3a84bd09d73d7db112f624fd58169b29083a91cb007eeea
#17 DONE 0.1s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:763e3fd992627b17b7132755f29490a7f5a3800545ce28fefb56df888e6036a9
#18 0.486 Checking out commit 0f3d1484
#18 19.31 From https://github.com/python-pillow/Pillow
#18 19.31  * [new tag]           1.0        -> 1.0
#18 19.31  * [new tag]           1.2        -> 1.2
#18 19.32  * [new tag]           1.7.6      -> 1.7.6
#18 19.32  * [new tag]           1.7.7      -> 1.7.7
#18 19.32  * [new tag]           1.7.8      -> 1.7.8
#18 19.32  * [new tag]           2.0.0      -> 2.0.0
#18 19.32  * [new tag]           2.1.0      -> 2.1.0
#18 19.32  * [new tag]           2.2.0      -> 2.2.0
#18 19.32  * [new tag]           2.2.1      -> 2.2.1
#18 19.32  * [new tag]           2.2.2      -> 2.2.2
#18 19.32  * [new tag]           2.3.0      -> 2.3.0
#18 19.32  * [new tag]           2.5.0      -> 2.5.0
#18 19.32  * [new tag]           2.6.0      -> 2.6.0
#18 19.32  * [new tag]           2.6.0-rc1  -> 2.6.0-rc1
#18 19.32  * [new tag]           2.7.0      -> 2.7.0
#18 19.32  * [new tag]           2.8.0      -> 2.8.0
#18 19.32  * [new tag]           2.8.1      -> 2.8.1
#18 19.32  * [new tag]           2.9.0      -> 2.9.0
#18 19.32  * [new tag]           2.9.0.dev0 -> 2.9.0.dev0
#18 19.32  * [new tag]           2.9.0.dev1 -> 2.9.0.dev1
#18 19.32  * [new tag]           2.9.0.dev2 -> 2.9.0.dev2
#18 19.32  * [new tag]           3.0.0      -> 3.0.0
#18 19.32  * [new tag]           3.1.0      -> 3.1.0
#18 19.32  * [new tag]           3.1.0-rc1  -> 3.1.0-rc1
#18 19.32  * [new tag]           3.2.0      -> 3.2.0
#18 19.32  * [new tag]           3.3.0      -> 3.3.0
#18 19.32  * [new tag]           3.3.1      -> 3.3.1
#18 19.32  * [new tag]           3.4.0      -> 3.4.0
#18 19.32  * [new tag]           4.0.0      -> 4.0.0
#18 19.32  * [new tag]           4.0.0a     -> 4.0.0a
#18 19.32  * [new tag]           4.1.0      -> 4.1.0
#18 19.32  * [new tag]           4.2.0      -> 4.2.0
#18 19.33  * [new tag]           4.3.0      -> 4.3.0
#18 19.33  * [new tag]           5.0.0      -> 5.0.0
#18 19.33  * [new tag]           5.1.0      -> 5.1.0
#18 19.33  * [new tag]           5.2.0      -> 5.2.0
#18 19.33  * [new tag]           5.3.0      -> 5.3.0
#18 19.33  * [new tag]           5.4.0      -> 5.4.0
#18 19.33  * [new tag]           6.0.0      -> 6.0.0
#18 19.33  * [new tag]           6.1.0      -> 6.1.0
#18 19.33  * [new tag]           6.2.0      -> 6.2.0
#18 19.33  * [new tag]           7.0.0      -> 7.0.0
#18 19.33  * [new tag]           7.1.0      -> 7.1.0
#18 19.33  * [new tag]           7.2.0      -> 7.2.0
#18 19.33  * [new tag]           8.0.0      -> 8.0.0
#18 19.33  * [new tag]           8.1.0      -> 8.1.0
#18 19.33  * [new tag]           8.2.0      -> 8.2.0
#18 19.33  * [new tag]           8.3.0      -> 8.3.0
#18 19.33  * [new tag]           8.4.0      -> 8.4.0
#18 19.33  * [new tag]           9.0.0      -> 9.0.0
#18 19.34 error: pathspec '0f3d1484' did not match any file(s) known to git
#18 19.36 error: pathspec '0f3d1484' did not match any file(s) known to git
#18 19.37 error: pathspec '0f3d1484' did not match any file(s) known to git
#18 19.42 Checkout unsuccessful.
#18 DONE 19.8s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:9f2573aef9cd392e59410f04451391fe65cc81bc2af4e49b76cae98c6c234015
#19 DONE 0.8s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:5dc54a0cf786b56fdab5e0861ed63ed841b07a825dad6cdaf70b6adef2284f20
#20 0.603 Run fuzzer_build to build the target
#20 0.728 FUZZ_TARGET = pillow
#20 0.728 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.728 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.736 Building benchmark pillow_pillow with fuzzer afl
#20 0.739 + cd Pillow
#20 0.739 + make install-req
#20 0.745 python3 -m pip install -r requirements.txt
#20 1.543 WARNING: pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available.
#20 1.697 WARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/black/
#20 2.198 WARNING: Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/black/
#20 3.200 WARNING: Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/black/
#20 5.202 WARNING: Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/black/
#20 9.205 WARNING: Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/black/
#20 9.205 Could not fetch URL https://pypi.org/simple/black/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/black/ (Caused by SSLError("Can't connect to HTTPS URL because the SSL module is not available.")) - skipping
#20 9.208 ERROR: Could not find a version that satisfies the requirement black (from -r requirements.txt (line 2)) (from versions: none)
#20 9.208 ERROR: No matching distribution found for black (from -r requirements.txt (line 2))
#20 9.290 WARNING: pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available.
#20 9.292 Could not fetch URL https://pypi.org/simple/pip/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/pip/ (Caused by SSLError("Can't connect to HTTPS URL because the SSL module is not available.")) - skipping
#20 9.347 make: *** [Makefile:75: install-req] Error 1
#20 9.348 Traceback (most recent call last):
#20 9.348   File "<string>", line 1, in <module>
#20 9.349   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 9.349     utils.build_benchmark()
#20 9.349   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 9.349     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 9.349   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 9.350     raise CalledProcessError(retcode, cmd)
#20 9.350 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 2.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/pillow_pillow:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2765961: .afl-pillow_pillow-builder] Error 1
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:30ce8f0d0eec1104b79f26e2944a326e03091a26469861002dad46e38e028b61
#2 transferring context: 2B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:9a81421816eb95591d93fd99ffa581ea398963f10cf76945048484aacfff8505
#1 transferring dockerfile: 32B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/pillow_pillow
#4 sha256:91fad67c061985ad1d9fcf304aef8f621a70ec675347e49cc9acfe8a63bf0921
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:d1f435e9fdc13d04adb23f378fdde8298aed0b7c3a5b40b58a7195f3761ab9e9
#9 transferring context: 65B done
#9 DONE 0.1s

#6 [2/6] RUN apt-get install -y libjpeg-dev zlib1g-dev libpng-dev
#6 sha256:e49427fe68b6b129a7fc2320ec54b12ebdec4fafb3e2ccbb392d0012411d2645
#6 CACHED

#7 [3/6] RUN git clone --depth 1 https://github.com/python-pillow/Pillow
#7 sha256:e15335492eb29069f3118f7dac4770fd96dec1474bced5ac0c024e5b9755be69
#7 CACHED

#8 [4/6] WORKDIR /src
#8 sha256:f0511fdb98a25d850a1febdb0c15c059cdd9bfd5fa0908583c1d619be8da66e2
#8 CACHED

#10 [5/6] COPY build.sh /src/
#10 sha256:23d7d2d63ab224d96494c1185c6eaca4f8699e4c491c1bf7911fbcc54101381b
#10 CACHED

#11 [6/6] COPY fuzz_* /src/Pillow
#11 sha256:b4eacb9e60b663d6709242fa773399ac4781844e332a52e97dc8311572e355aa
#11 CACHED

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:d90f864ea92dccb0761c816cb013222f3a3ef877a483dbfee555ebeb5eb7cba8 0.0s done
#12 naming to gcr.io/fuzzbench/builders/benchmark/pillow_pillow done
#12 DONE 0.4s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:d2120640383e2330ebb4f1393791c185269a3fb6709c23031ca4ef58e21515b5
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:fcba7bbfecb612f03efc22c763fa237584a8b4a007deae6b42a4897ab56a0558
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/pillow_pillow:latest
#3 sha256:0bcaf43eb6724ab7e04008a3b5dceb8e2f6e0580c3f607660713dbc716774609
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/pillow_pillow
#5 sha256:956421e4b7a459ce1b4adff4bc8e77eea3503312cf40af027ecd960c9285ed55
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/pillow_pillow-intermediate
#4 sha256:fc85fba0896cb470e8dfdf4d70b8b3f01e7868c8060ef9290e05e19aa172af05
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:1386b3a6eab77f36dcf14e0894177a945b2b95efeb1efa33f7219f709d3e04a7
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:17c4591ec9f89d7724dad6e1817436c8042657257d12d3a81cb34e16580f5d86
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:d0d6ee2a451f6a87d1499efa329a629ec8b12180fa3faf79e972982586bc1380 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/pillow_pillow-intermediate done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:e6c7c6d67d237c005a88765119daefb94558fdf554de4a006fd8e4420aea902e
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:b47ddd495adfd1eea9ee1cc0d7597b3653cd774029ae01f09d60b83e842c993a
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:8bf1b9bd22068973b1869460b76c94b3c2d527d6d412bc92f2e6e03c48fd3f64
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:00f03b7c59d4ea0e044271e18f3504c4d4d16cbb19616240c214ca524f55e224
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:be036885bd880e8abf89e2483005275c27a8eac1c0bb37e1ca65e1cae94752a9
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:45320da3809dcf0c949315b43ab4ce038ab669b0f94c5341405ae1cb00665577
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:558888a6f7add781de9407961ae7eb6e20dde23d1cc176aab82f2eb1caf8c34f
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:263fe6ce0482f6796a1cfa7dc4437401781d77de07e2cca3ffd33b3864b273af
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:8bc1f8d6a09c346ecf7b7b2672f8fbbd6971533b85430bf68fb25bdc5dd61901
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/pillow_pillow-intermediate:latest
#3 sha256:b1367819fb3f2ff890e7d8a0910714352427be52ce74554044413115665bd091
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:cf8f58c782bd39b24b3aabfe11f8adf5e441ade4740ebe40f6fbd130d98dd719
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/pillow_pillow-intermediate
#6 sha256:970797f60469aebb9f8fe78b9104e56d16d32950b8766c89e22370441f7dfe59
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/pillow_pillow
#5 sha256:3aede2fd7ab8627cd0c4c81cd51b9c44c48e8b3d82fd5b8555e3258482b2e884
#5 ERROR: gcr.io/fuzzbench/builders/afl/pillow_pillow:latest: not found

#12 [internal] load build context
#12 sha256:cf8f58c782bd39b24b3aabfe11f8adf5e441ade4740ebe40f6fbd130d98dd719
#12 transferring context: 669.86kB 0.1s done
#12 DONE 0.2s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:f376be3ea1cbdb3430529032e82320d4b78b4e7e5500947da83d22cd55619601
#13 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:0d3ab50e0bf3982e6e611d302887360d136c672474872c8ae50554386bd42a46
#16 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:2ff237d6ac898d85db63e08db40d7ebe21149d39bf3dd487fe39166a59ee8d2d
#18 CACHED

#15 [stage-1  8/13] COPY benchmarks/pillow_pillow/benchmark.yaml /
#15 sha256:9f4d00f30917ba8c22592855707a13ec7dcaabaa4a4610495b77861755c14586
#15 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:717ee1421ab5fc985bbb4b7db463b1e968bbdf761f767c49f6175070ad2178a3
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:a937d344074b6de0754fb8b79e608dff42f9c563aa9d63ca91f51cd0503e1e91
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:901b33a35b443d44b96e58eb3964244019e3f6000f8e8a31fdbfa02b933de4a3
#11 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:62f6282fcd1b15c764f5c2d8c70ea611e68503f7994df36d0e2928211aa0b43b
#17 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:0ec1d8720f94d9aeb2d5c01351ede21f91680339a2a253d0d3abbacdcd4ec9ba
#14 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:32a6a947c5cd33116a47226b1a036a887e0358a366d36ce2fc456fa7bf6798c3
#8 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:5d9bee5f2090c847cabe303a8f7dc9eeb5c72f77059ca455cf5a6006876b3b1b
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:20de51add73f7bd88545187e51425495f8bc6b8f840ff5b43937561a5056f646
#20 0.507 Run fuzzer_build to build the target
#20 0.628 FUZZ_TARGET = pillow
#20 0.628 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.628 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.633 Building benchmark pillow_pillow with fuzzer afl
#20 0.636 + cd Pillow
#20 0.636 + make install-req
#20 0.639 python3 -m pip install -r requirements.txt
#20 1.334 WARNING: pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available.
#20 1.473 WARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/black/
#20 1.974 WARNING: Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/black/
#20 2.976 WARNING: Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/black/
#20 4.979 WARNING: Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/black/
#20 8.984 WARNING: Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/black/
#20 8.985 Could not fetch URL https://pypi.org/simple/black/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/black/ (Caused by SSLError("Can't connect to HTTPS URL because the SSL module is not available.")) - skipping
#20 8.987 ERROR: Could not find a version that satisfies the requirement black (from -r requirements.txt (line 2)) (from versions: none)
#20 8.987 ERROR: No matching distribution found for black (from -r requirements.txt (line 2))
#20 9.069 WARNING: pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available.
#20 9.071 Could not fetch URL https://pypi.org/simple/pip/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/pip/ (Caused by SSLError("Can't connect to HTTPS URL because the SSL module is not available.")) - skipping
#20 9.124 make: *** [Makefile:75: install-req] Error 1
#20 9.125 Traceback (most recent call last):
#20 9.125   File "<string>", line 1, in <module>
#20 9.125   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 9.126     utils.build_benchmark()
#20 9.126   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 9.126     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 9.126   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 9.126     raise CalledProcessError(retcode, cmd)
#20 9.126 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 2.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/pillow_pillow:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2765961: .afl-pillow_pillow-builder] Error 1
