WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: orbit_orbit.
INFO:root:Please run "make test-run-afl-orbit_orbit" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:d7d8b3c85c24e7ab5985490c4c83c100f03887a3d9c184f54a80c61a23bc3bb1
#1 transferring dockerfile: 1.47kB done
#1 DONE 0.8s

#2 [internal] load .dockerignore
#2 sha256:b2afe55f42041f4b121406d68904de6fdfc864fe4dab1bba40cf2aa6c3889694
#2 transferring context: 2B done
#2 DONE 0.8s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#11 [internal] load build context
#11 sha256:5672b86d1ee6a33c44cfe50fa6d84357e20841aba8cbf5fcfa4b018159c2bdb6
#11 DONE 0.0s

#5 [1/7] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#7 https://github.com/google/orbit/archive/master.tar.gz
#7 sha256:2c49689265635d4a949161c0fb207ba06533053ee988529a550b849191da4eea
#7 DONE 0.2s

#13 https://raw.githubusercontent.com/torvalds/linux/v5.7/include/linux/perf_event.h
#13 sha256:b3bf818c7cc07183ae76dca027268aff5ad2485f882093b4681b37f71b692e50
#13 ...

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/orbit_orbit
#4 sha256:81ac56408300a45debbb73ba4d271717d0b73c4ea142b58351032d794c162234
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/orbit_orbit:latest: not found

#11 [internal] load build context
#11 sha256:5672b86d1ee6a33c44cfe50fa6d84357e20841aba8cbf5fcfa4b018159c2bdb6
#11 transferring context: 2.19kB done
#11 DONE 0.1s

#13 https://raw.githubusercontent.com/torvalds/linux/v5.7/include/linux/perf_event.h
#13 sha256:b3bf818c7cc07183ae76dca027268aff5ad2485f882093b4681b37f71b692e50
#13 DONE 0.5s

#13 https://raw.githubusercontent.com/torvalds/linux/v5.7/include/linux/perf_event.h
#13 sha256:b3bf818c7cc07183ae76dca027268aff5ad2485f882093b4681b37f71b692e50
#13 DONE 0.0s

#6 [2/7] RUN apt-get update && apt-get install -y m4 libglu1-mesa-dev mesa-common-dev   libxmu-dev libxi-dev pkg-config libxxf86vm-dev patchelf
#6 sha256:f576f7a098ad4f7596e8a2e73e7e98965325f3e2786a4d23e6af30605c4ec42c
#6 CACHED

#8 [3/7] ADD https://github.com/google/orbit/archive/master.tar.gz /src/
#8 sha256:7841a4edac0e1950160411c609cdcfac259686cc333ca8ffd277edd2e730158e
#8 CACHED

#9 [4/7] RUN mkdir -p /src/orbit && tar -xzf /src/master.tar.gz   -C /src/orbit/ --strip-components 1; rm -f /src/master.tar.gz
#9 sha256:dd1e5f52c5799d860203ea8a3ecf1ec8e3fcd4765c3fca55c10873b918969137
#9 CACHED

#10 [5/7] WORKDIR /src
#10 sha256:0d75d68c6b8a9505286126e9fe3f4b36c141de5105a0bd02ab1e36032ce0fb46
#10 CACHED

#12 [6/7] COPY build.sh /src/
#12 sha256:957b173b73ea5d007afcf2f7f4abfc1d78da1fd16e951d31784dcf01cc9a4a96
#12 DONE 0.3s

#14 [7/7] ADD https://raw.githubusercontent.com/torvalds/linux/v5.7/include/linux/perf_event.h /usr/include/linux/perf_event.h
#14 sha256:091320785f7691d93ca4fe1762aa60df8fcf9cb0df8bdfa13dbf63bc1899de2d
#14 DONE 0.4s

#15 exporting to image
#15 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#15 exporting layers done
#15 writing image sha256:a3269062e8af85b97d3ffc217381e8bb62978c8f932e7f73339192e0e1c42e00 done
#15 naming to gcr.io/fuzzbench/builders/benchmark/orbit_orbit 0.0s done
#15 DONE 0.3s

#16 exporting cache
#16 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#16 preparing build cache for export done
#16 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/orbit_orbit:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:a3669af8c9f5670209860a18890b136a804da48164b533715578f9099a891e50
#1 transferring dockerfile: 46B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:6a04b2d8cc1a540fea91b286c0179ecab8b2f6fb46b99eaca7c8b962d5e86740
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/orbit_orbit:latest
#3 sha256:0d88c95d96a3c895241f2e2c158f98b3b3b49a00a1d8eb24d02ddedd8f076072
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/orbit_orbit
#5 sha256:f125e108ef10c849322a7314ab5bcf8b56847fe371334915a93cc101980a195d
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/orbit_orbit-intermediate
#4 sha256:88e1710ceb6e49cb86732b552f80c62de3114bf85104fddc90c78787ef6eceb1
#4 ERROR: gcr.io/fuzzbench/builders/afl/orbit_orbit-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/orbit_orbit
#5 sha256:f125e108ef10c849322a7314ab5bcf8b56847fe371334915a93cc101980a195d
#5 DONE 1.1s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:af727abb3f0b00032c9773d06a29a117da76d05abda2f41ef8ca6dd055e3dc1e
#6 0.427 Cloning into '/afl'...
#6 1.412 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.412 
#6 1.412 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.412 changes and commit them, and you can discard any commits you make in this
#6 1.412 state without impacting any branches by switching back to a branch.
#6 1.412 
#6 1.412 If you want to create a new branch to retain commits you create, you may
#6 1.412 do so (now or later) by using -c with the switch command. Example:
#6 1.412 
#6 1.412   git switch -c <new-branch-name>
#6 1.412 
#6 1.412 Or undo this operation with:
#6 1.412 
#6 1.412   git switch -
#6 1.412 
#6 1.412 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.412 
#6 1.412 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.482 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.482 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.683 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.688 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 4.056 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.366 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.800 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.947 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.342 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.584 ln -sf afl-as as
#6 5.586 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.589 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.590 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.6s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:53af7c47af407c59f8b08be294640ef2a02b4d3b81638911ce3d67612c8d76a6
#7 0.753 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.753 Get:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#7 0.753 Get:3 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#7 0.753 Hit:4 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.909 Get:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#7 2.595 Fetched 336 kB in 2s (173 kB/s)
#7 2.595 Reading package lists...
#7 4.108 Reading package lists...
#7 5.520 Building dependency tree...
#7 5.730 Reading state information...
#7 5.984 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.984 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 6.544 --2022-02-18 10:13:00--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 6.546 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...
#7 6.558 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.
#7 6.582 HTTP request sent, awaiting response... 200 OK
#7 6.601 Length: 9177 (9.0K) [text/plain]
#7 6.601 Saving to: '/afl/afl_driver.cpp'
#7 6.601 
#7 6.601      0K ........                                              100% 6.82M=0.001s
#7 6.603 
#7 6.603 2022-02-18 10:13:00 (6.82 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 6.603 
#7 9.146 ar: creating /libAFL.a
#7 DONE 10.0s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:c111837ccd77b5992aabb7eabad520067b2ce718963e7ce9cf0c9c1f0d6748d5 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/orbit_orbit-intermediate 0.0s done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/orbit_orbit-intermediate:
------
#2 [internal] load .dockerignore
#2 sha256:06f6d5507ef7e64e29e3aa8acb2fd09988653ed8f9ea3bc37b3b6aa6845ef2e9
#2 transferring context: 34B done
#2 DONE 0.1s

#1 [internal] load build definition from Dockerfile
#1 sha256:fee31b7894fba48f3d2107c9215e60ce37ae61aae12659a4ca2b697adfb5aa0d
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:a794476bf255c62dd5daf74808f1f63f93e08e322038463d716773cd4d76e019
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:2b1e5ad32129dbc2cff73641615976ed92dc9ac6a0e74aaa94fe1d4e7d90ca1b
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:39fa22b407fad7b14ad7efefd08b26ed064b49d4ad7000cecaf44d2f4990de2b
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:75d21c3e8650b1385b557e25852a9988dd7ed2329ddce2f5b75134593a5d261b
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:f12892258a635511bc25fe7c651ad814fde719b5efcebd9b2c72bbb63cf905b3
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:b0bf59e5a98d6281c53a32058db7d7b8c5940d51f877ed2658dddf314a949583
#13 writing image sha256:b0bf59e5a98d6281c53a32058db7d7b8c5940d51f877ed2658dddf314a949583 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:acffb0383494a51bff2028e52c4f3ac9f121ace533fcb2f9f1aff144be5f456e
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:cf197b0e58d546d50588416740cd52e0f129004fda3169f7735a575dedf201f0
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/orbit_orbit-intermediate:latest
#3 sha256:261d54da5ea0e49ccb8c63e6fe8076735c2dedb1f2e48eb46b6fd90297f372e9
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:5ece622fc4e033039298b96e1816075b369c89535c986658a8012aa4bb9e4023
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/orbit_orbit-intermediate
#6 sha256:681c0d045a395b6bb24193b8cb14efda3704fcff0c8fc6119fe99e8a0d502ae6
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/orbit_orbit
#5 sha256:a272a56b85f18ea606292b91b3432d24270245f8e6a6d5bc056e54d0427646c8
#5 ERROR: gcr.io/fuzzbench/builders/afl/orbit_orbit:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:5ece622fc4e033039298b96e1816075b369c89535c986658a8012aa4bb9e4023
#12 transferring context: 669.86kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/orbit_orbit-intermediate
#6 sha256:681c0d045a395b6bb24193b8cb14efda3704fcff0c8fc6119fe99e8a0d502ae6
#6 DONE 0.6s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:3b80aa0ba1485fefd573b8e0b846fbf129c4d82575e14417e12a1713405733cb
#8 DONE 0.7s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:0467a75d7411a41d28f4b1bca73901cf4def433bc035f45efff5c408160477d9
#9 DONE 25.8s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:4da5901784cb2288c2523a9d7ea7991b05e12a7c81761df7a69606977e9dd368
#10 DONE 0.1s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:0e7f645649e28f30b64923ae2a108203d7fb820b1234eb7c845d0e6d8ae1131c
#11 DONE 82.3s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:196b4fa00b497a7f47f05bc9985c1d280ee3fe97d38bd123dc4843f910b1f521
#13 DONE 0.4s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:9743daaa4278dc86d82c5a1edb4daedfab2f23766523cdc775f0658a50fb6d07
#14 DONE 0.8s

#15 [stage-1  8/13] COPY benchmarks/orbit_orbit/benchmark.yaml /
#15 sha256:93b3c4139f953a81c2743abd79a6b5f3faec2f60c7ac8c3e561a69222b0858a3
#15 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:1d6c1bd43dfd8638bb3ea41a03d6ad8c1c3e467dde180749684ded58f3abfbde
#16 DONE 0.9s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:416804dc5570c7fe61b3a368a39a225224ce0f6de13241c106cf7fbfefc8b725
#17 DONE 0.5s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:d37f45f37703347f89599279369af286978292bc49ee90a078f70456e66731a4
#18 1.686 Checking out commit 16b04c4a
#18 1.694 error: pathspec '16b04c4a' did not match any file(s) known to git
#18 1.700 error: pathspec '16b04c4a' did not match any file(s) known to git
#18 1.798 Checkout unsuccessful.
#18 DONE 2.1s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:34d9ad2de364ddb96f8363e47a4e988a8eb0146e59d67c5e5c8b6d8027f3368e
#19 DONE 3.6s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:6c13acda62a7b71912b1ba50b19c83f965efe310eb3b0eb1a5757c1c567b0b56
#20 2.425 Run fuzzer_build to build the target
#20 2.577 FUZZ_TARGET = orbit
#20 2.577 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 2.577 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 2.584 Building benchmark orbit_orbit with fuzzer afl
#20 2.587 + export PATH=/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/out
#20 2.587 + PATH=/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/out
#20 2.587 + /src/orbit/bootstrap-orbit.sh --force-public-remotes --dont-compile --ignore-system-requirements
#20 2.595 Checking if conan is available...
#20 2.597 Couldn't find conan. Trying to install via pip...
#20 3.193 WARNING: pip is being invoked by an old script wrapper. This will fail in a future version of pip.
#20 3.193 Please see https://github.com/pypa/pip/issues/5599 for advice on fixing the underlying issue.
#20 3.193 To avoid this problem you can invoke Python with '-m pip' instead of running pip directly.
#20 3.376 WARNING: pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available.
#20 3.512 WARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/conan/
#20 4.013 WARNING: Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/conan/
#20 5.014 WARNING: Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/conan/
#20 7.017 WARNING: Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/conan/
#20 11.02 WARNING: Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/conan/
#20 11.02 Could not fetch URL https://pypi.org/simple/conan/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/conan/ (Caused by SSLError("Can't connect to HTTPS URL because the SSL module is not available.")) - skipping
#20 11.03 ERROR: Could not find a version that satisfies the requirement conan==1.40.3 (from versions: none)
#20 11.03 ERROR: No matching distribution found for conan==1.40.3
#20 11.10 WARNING: pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available.
#20 11.11 Could not fetch URL https://pypi.org/simple/pip/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/pip/ (Caused by SSLError("Can't connect to HTTPS URL because the SSL module is not available.")) - skipping
#20 11.16 Traceback (most recent call last):
#20 11.16   File "<string>", line 1, in <module>
#20 11.16   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 11.16     utils.build_benchmark()
#20 11.16   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 11.16     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 11.16   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 11.16     raise CalledProcessError(retcode, cmd)
#20 11.16 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/orbit_orbit:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2852608: .afl-orbit_orbit-builder] Error 1
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:a1550f19040c9a35aeead41c056730d68bcd7f2d377f250893f6a47e65d4fe8b
#2 transferring context: 2B done
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:a3336f5e9b29582e514e1a04e26d4bcc04afd43b85004e2662cb0e563264c350
#1 transferring dockerfile: 32B done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:a1550f19040c9a35aeead41c056730d68bcd7f2d377f250893f6a47e65d4fe8b
#2 DONE 0.4s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#11 [internal] load build context
#11 sha256:b1b2aba4c4ec670b60fc42f91ce7a1499ebf4778ab56b369ec150e08aa0ea50f
#11 DONE 0.0s

#5 [1/7] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/orbit_orbit
#4 sha256:81ac56408300a45debbb73ba4d271717d0b73c4ea142b58351032d794c162234
#4 DONE 0.0s

#13 https://raw.githubusercontent.com/torvalds/linux/v5.7/include/linux/perf_event.h
#13 sha256:b3bf818c7cc07183ae76dca027268aff5ad2485f882093b4681b37f71b692e50
#13 DONE 0.0s

#7 https://github.com/google/orbit/archive/master.tar.gz
#7 sha256:2c49689265635d4a949161c0fb207ba06533053ee988529a550b849191da4eea
#7 DONE 0.6s

#11 [internal] load build context
#11 sha256:b1b2aba4c4ec670b60fc42f91ce7a1499ebf4778ab56b369ec150e08aa0ea50f
#11 transferring context: 30B done
#11 DONE 0.1s

#8 [3/7] ADD https://github.com/google/orbit/archive/master.tar.gz /src/
#8 sha256:7841a4edac0e1950160411c609cdcfac259686cc333ca8ffd277edd2e730158e
#8 CACHED

#9 [4/7] RUN mkdir -p /src/orbit && tar -xzf /src/master.tar.gz   -C /src/orbit/ --strip-components 1; rm -f /src/master.tar.gz
#9 sha256:dd1e5f52c5799d860203ea8a3ecf1ec8e3fcd4765c3fca55c10873b918969137
#9 CACHED

#10 [5/7] WORKDIR /src
#10 sha256:0d75d68c6b8a9505286126e9fe3f4b36c141de5105a0bd02ab1e36032ce0fb46
#10 CACHED

#12 [6/7] COPY build.sh /src/
#12 sha256:14d07fbc5efc057da2f2e21e13a372e4e5609310e52d199cf3790adee7027d8d
#12 CACHED

#6 [2/7] RUN apt-get update && apt-get install -y m4 libglu1-mesa-dev mesa-common-dev   libxmu-dev libxi-dev pkg-config libxxf86vm-dev patchelf
#6 sha256:f576f7a098ad4f7596e8a2e73e7e98965325f3e2786a4d23e6af30605c4ec42c
#6 CACHED

#14 [7/7] ADD https://raw.githubusercontent.com/torvalds/linux/v5.7/include/linux/perf_event.h /usr/include/linux/perf_event.h
#14 sha256:b9ed93918e0e8a3a0a2199c147f7f5676c335ac1818097f5bdb667d8ad722c23
#14 CACHED

#15 exporting to image
#15 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#15 exporting layers done
#15 writing image sha256:a3269062e8af85b97d3ffc217381e8bb62978c8f932e7f73339192e0e1c42e00 0.0s done
#15 naming to gcr.io/fuzzbench/builders/benchmark/orbit_orbit done
#15 DONE 0.4s

#16 exporting cache
#16 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#16 preparing build cache for export done
#16 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:67a4be8726c790b557a68747ce8ecaea60a20399cbcd55c33f44a0900b16d62d
#2 transferring context: 2B done
#2 DONE 0.1s

#1 [internal] load build definition from builder.Dockerfile
#1 sha256:ea211731161ab9c6a9e92cffa6a6965dc96503f5dbdd137f33de860c0acf65e2
#1 transferring dockerfile: 46B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/orbit_orbit:latest
#3 sha256:0d88c95d96a3c895241f2e2c158f98b3b3b49a00a1d8eb24d02ddedd8f076072
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/orbit_orbit
#5 sha256:f125e108ef10c849322a7314ab5bcf8b56847fe371334915a93cc101980a195d
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/orbit_orbit-intermediate
#4 sha256:88e1710ceb6e49cb86732b552f80c62de3114bf85104fddc90c78787ef6eceb1
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:af727abb3f0b00032c9773d06a29a117da76d05abda2f41ef8ca6dd055e3dc1e
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:53af7c47af407c59f8b08be294640ef2a02b4d3b81638911ce3d67612c8d76a6
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:c111837ccd77b5992aabb7eabad520067b2ce718963e7ce9cf0c9c1f0d6748d5 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/orbit_orbit-intermediate done
#8 DONE 0.5s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:8d9f8f2e093cdb88b101479d95c11ea91560eefbd697be1d76c12ef55cb784b1
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:71105457c0be8fc13e1fdfba029feede7f4f058463ae17bc9e182bb08dc446f7
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:337a48420f1f604087e03c5c8cdbec598cc44d1fced973965b42cc4e651754b8
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#9 [4/7] COPY ./requirements.txt /
#9 sha256:fa5a7ab34e4eb7ca391a59ad77aa11662524ded21e6625a2024e3bbe1ff1db5e
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:d03dab00e8136bc0133046956c99faa7f39763ead9eecc5bf27419c2adfc03a4
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:cc7c7d1e0fbb70001b088c86db26e4cd48a47d65167110976eb04cd2d08f9882
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:f72bef4e2a7e81abda0be39c1da70f88349e66a6c4ec0c898db99d414362986c
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:b0bf59e5a98d6281c53a32058db7d7b8c5940d51f877ed2658dddf314a949583
#13 writing image sha256:b0bf59e5a98d6281c53a32058db7d7b8c5940d51f877ed2658dddf314a949583 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:5b935ca969884aad3d1857b78d1c9f3072313badc06be03b1d92561e75f358a7
#2 transferring context: 34B done
#2 DONE 0.1s

#1 [internal] load build definition from Dockerfile
#1 sha256:8d915da2e8b4b6a48723f7201f27f142b1340f2abea2a4d79ef6eff89f9248c1
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.2s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/orbit_orbit-intermediate:latest
#3 sha256:261d54da5ea0e49ccb8c63e6fe8076735c2dedb1f2e48eb46b6fd90297f372e9
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:3cd15796f1680704ec30f502e016189287cce9d7e5395a2d2f9f1e045a8ad268
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/orbit_orbit-intermediate
#6 sha256:681c0d045a395b6bb24193b8cb14efda3704fcff0c8fc6119fe99e8a0d502ae6
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/orbit_orbit
#5 sha256:a272a56b85f18ea606292b91b3432d24270245f8e6a6d5bc056e54d0427646c8
#5 ERROR: gcr.io/fuzzbench/builders/afl/orbit_orbit:latest: not found

#12 [internal] load build context
#12 sha256:3cd15796f1680704ec30f502e016189287cce9d7e5395a2d2f9f1e045a8ad268
#12 transferring context: 669.86kB 0.1s done
#12 DONE 0.5s

#15 [stage-1  8/13] COPY benchmarks/orbit_orbit/benchmark.yaml /
#15 sha256:062ad3da97ad1fed108fe58f108ebe52e89d21505ab11aecb8587553a18ffdf8
#15 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:0db6517d34588e6f0d8e3626060245b7621d693f476c157cf8f920fb1e27e097
#17 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:0e7f645649e28f30b64923ae2a108203d7fb820b1234eb7c845d0e6d8ae1131c
#11 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:cde4ebeaa065a03d0c4aac228b177e56f7bfe5567d180580cd5da722b9fcc99f
#14 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:ae716c848e2a6112924d5a95776f7fdf1b97cd4b450d7da0972be915ded47f2f
#16 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:3b80aa0ba1485fefd573b8e0b846fbf129c4d82575e14417e12a1713405733cb
#8 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:4da5901784cb2288c2523a9d7ea7991b05e12a7c81761df7a69606977e9dd368
#10 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:0467a75d7411a41d28f4b1bca73901cf4def433bc035f45efff5c408160477d9
#9 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:48d6b89271ca613de4739d46393e96e192e45fe27bb484d1ad437bf7bb12f5d7
#13 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:e6df97991400c0961a72ee1eeeb7b64c153ac727df5f7594dd15de9204b29281
#18 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:9a155620151dced41cfce1f5de86f76b3e9cc012dfff9997a84c373c7d7b333a
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:84682c90f17ec7341ef4c2eb25d461b909138cb8e27de6c630a69763a9b61e29
#20 0.720 Run fuzzer_build to build the target
#20 0.850 FUZZ_TARGET = orbit
#20 0.850 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.850 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.855 Building benchmark orbit_orbit with fuzzer afl
#20 0.858 + export PATH=/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/out
#20 0.858 + PATH=/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/out
#20 0.858 + /src/orbit/bootstrap-orbit.sh --force-public-remotes --dont-compile --ignore-system-requirements
#20 0.866 Checking if conan is available...
#20 0.868 Couldn't find conan. Trying to install via pip...
#20 1.500 WARNING: pip is being invoked by an old script wrapper. This will fail in a future version of pip.
#20 1.500 Please see https://github.com/pypa/pip/issues/5599 for advice on fixing the underlying issue.
#20 1.500 To avoid this problem you can invoke Python with '-m pip' instead of running pip directly.
#20 1.630 WARNING: pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available.
#20 1.756 WARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/conan/
#20 2.257 WARNING: Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/conan/
#20 3.259 WARNING: Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/conan/
#20 5.262 WARNING: Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/conan/
#20 9.266 WARNING: Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError("Can't connect to HTTPS URL because the SSL module is not available.")': /simple/conan/
#20 9.267 Could not fetch URL https://pypi.org/simple/conan/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/conan/ (Caused by SSLError("Can't connect to HTTPS URL because the SSL module is not available.")) - skipping
#20 9.270 ERROR: Could not find a version that satisfies the requirement conan==1.40.3 (from versions: none)
#20 9.270 ERROR: No matching distribution found for conan==1.40.3
#20 9.363 WARNING: pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available.
#20 9.365 Could not fetch URL https://pypi.org/simple/pip/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/pip/ (Caused by SSLError("Can't connect to HTTPS URL because the SSL module is not available.")) - skipping
#20 9.423 Traceback (most recent call last):
#20 9.423   File "<string>", line 1, in <module>
#20 9.423   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 9.423     utils.build_benchmark()
#20 9.423   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 9.423     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 9.423   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 9.424     raise CalledProcessError(retcode, cmd)
#20 9.424 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/orbit_orbit:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2852608: .afl-orbit_orbit-builder] Error 1
