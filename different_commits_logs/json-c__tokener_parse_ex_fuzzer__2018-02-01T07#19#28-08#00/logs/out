WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: json-c_tokener_parse_ex_fuzzer.
INFO:root:Please run "make test-run-afl-json-c_tokener_parse_ex_fuzzer" to test integration.
#2 [internal] load .dockerignore
#2 sha256:05232a236cfd891e79182a42c9a5898418c0abb00674b66fce40617be91289ad
#2 transferring context: 2B done
#2 DONE 0.5s

#1 [internal] load build definition from Dockerfile
#1 sha256:2937cfdf5e3d09314bb1e389c4d6d2e9e4f86799f242db5935c3b50408c74d53
#1 transferring dockerfile: 958B done
#1 DONE 0.5s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#9 [internal] load build context
#9 sha256:e8fd91f3d652ed093f9d216a97c4596f19aecaba1ee2078040786e9b7f78400d
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer
#4 sha256:370a0b2b5e5a51766b20158a9aa4eb8c5e81d32d4bc758feb6e6b06b1a5b0403
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer:latest: not found

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:1b680dfd08ff668505b992cdb80d6a0ea43cbc2f7a85f533f40c1edf5f50c5ba
#6 ...

#9 [internal] load build context
#9 sha256:e8fd91f3d652ed093f9d216a97c4596f19aecaba1ee2078040786e9b7f78400d
#9 transferring context: 1.60kB done
#9 DONE 0.2s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:1b680dfd08ff668505b992cdb80d6a0ea43cbc2f7a85f533f40c1edf5f50c5ba
#6 0.817 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 0.817 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#6 0.817 Get:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#6 0.817 Get:4 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#6 0.914 Get:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#6 1.393 Get:6 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1557 kB]
#6 1.616 Get:7 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [828 kB]
#6 1.639 Get:8 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [841 kB]
#6 1.724 Get:9 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [974 kB]
#6 1.820 Get:10 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [657 kB]
#6 1.887 Get:11 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [467 kB]
#6 1.965 Get:12 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1135 kB]
#6 2.136 Get:13 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [1042 kB]
#6 2.248 Get:14 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [755 kB]
#6 2.326 Get:15 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1984 kB]
#6 3.033 Fetched 10.6 MB in 2s (5325 kB/s)
#6 3.033 Reading package lists...
#6 4.613 Reading package lists...
#6 6.023 Building dependency tree...
#6 6.233 Reading state information...
#6 6.442 make is already the newest version (4.2.1-1.2).
#6 6.442 make set to manually installed.
#6 6.442 The following additional packages will be installed:
#6 6.443   autotools-dev libltdl-dev libltdl7 libsigsegv2 m4
#6 6.445 Suggested packages:
#6 6.445   autoconf-archive gnu-standards autoconf-doc gettext libtool-doc gfortran
#6 6.445   | fortran95-compiler gcj-jdk m4-doc
#6 6.489 The following NEW packages will be installed:
#6 6.491   autoconf automake autotools-dev libltdl-dev libltdl7 libsigsegv2 libtool m4
#6 6.565 0 upgraded, 8 newly installed, 0 to remove and 1 not upgraded.
#6 6.565 Need to get 1457 kB of archives.
#6 6.565 After this operation, 6651 kB of additional disk space will be used.
#6 6.565 Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 libsigsegv2 amd64 2.12-2 [13.9 kB]
#6 6.590 Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 m4 amd64 1.4.18-4 [199 kB]
#6 6.659 Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 autoconf all 2.69-11.1 [321 kB]
#6 6.691 Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 autotools-dev all 20180224.1 [39.6 kB]
#6 6.694 Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 automake all 1:1.16.1-4ubuntu6 [522 kB]
#6 6.744 Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl7 amd64 2.4.6-14 [38.5 kB]
#6 6.747 Get:7 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl-dev amd64 2.4.6-14 [162 kB]
#6 6.765 Get:8 http://archive.ubuntu.com/ubuntu focal/main amd64 libtool all 2.4.6-14 [161 kB]
#6 7.099 debconf: delaying package configuration, since apt-utils is not installed
#6 7.233 Fetched 1457 kB in 0s (5204 kB/s)
#6 7.384 Selecting previously unselected package libsigsegv2:amd64.
#6 7.384 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21291 files and directories currently installed.)
#6 7.410 Preparing to unpack .../0-libsigsegv2_2.12-2_amd64.deb ...
#6 7.477 Unpacking libsigsegv2:amd64 (2.12-2) ...
#6 7.599 Selecting previously unselected package m4.
#6 7.602 Preparing to unpack .../1-m4_1.4.18-4_amd64.deb ...
#6 7.618 Unpacking m4 (1.4.18-4) ...
#6 7.767 Selecting previously unselected package autoconf.
#6 7.770 Preparing to unpack .../2-autoconf_2.69-11.1_all.deb ...
#6 7.788 Unpacking autoconf (2.69-11.1) ...
#6 7.988 Selecting previously unselected package autotools-dev.
#6 7.991 Preparing to unpack .../3-autotools-dev_20180224.1_all.deb ...
#6 8.019 Unpacking autotools-dev (20180224.1) ...
#6 8.193 Selecting previously unselected package automake.
#6 8.196 Preparing to unpack .../4-automake_1%3a1.16.1-4ubuntu6_all.deb ...
#6 8.215 Unpacking automake (1:1.16.1-4ubuntu6) ...
#6 8.415 Selecting previously unselected package libltdl7:amd64.
#6 8.418 Preparing to unpack .../5-libltdl7_2.4.6-14_amd64.deb ...
#6 8.435 Unpacking libltdl7:amd64 (2.4.6-14) ...
#6 8.543 Selecting previously unselected package libltdl-dev:amd64.
#6 8.546 Preparing to unpack .../6-libltdl-dev_2.4.6-14_amd64.deb ...
#6 8.564 Unpacking libltdl-dev:amd64 (2.4.6-14) ...
#6 8.704 Selecting previously unselected package libtool.
#6 8.707 Preparing to unpack .../7-libtool_2.4.6-14_all.deb ...
#6 8.725 Unpacking libtool (2.4.6-14) ...
#6 8.888 Setting up autotools-dev (20180224.1) ...
#6 8.975 Setting up libsigsegv2:amd64 (2.12-2) ...
#6 9.054 Setting up libltdl7:amd64 (2.4.6-14) ...
#6 9.114 Setting up libtool (2.4.6-14) ...
#6 9.316 Setting up m4 (1.4.18-4) ...
#6 9.407 Setting up autoconf (2.69-11.1) ...
#6 9.583 Setting up automake (1:1.16.1-4ubuntu6) ...
#6 9.695 update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
#6 9.695 update-alternatives: warning: skip creation of /usr/share/man/man1/automake.1.gz because associated file /usr/share/man/man1/automake-1.16.1.gz (of link group automake) doesn't exist
#6 9.695 update-alternatives: warning: skip creation of /usr/share/man/man1/aclocal.1.gz because associated file /usr/share/man/man1/aclocal-1.16.1.gz (of link group automake) doesn't exist
#6 9.736 Setting up libltdl-dev:amd64 (2.4.6-14) ...
#6 9.811 Processing triggers for libc-bin (2.31-0ubuntu9.2) ...
#6 DONE 14.9s

#7 [3/5] RUN git clone --depth 1 https://github.com/json-c/json-c.git json-c
#7 sha256:67d89b44b36825af50527903729e0975f9ba5b6cd546b189bf31204d558dc5d8
#7 0.893 Cloning into 'json-c'...
#7 DONE 2.2s

#8 [4/5] WORKDIR json-c
#8 sha256:42c03f78d658f7c2d0f5bc1d3e9fd456d75c680b93f94c59c5e0df5b5467ef8c
#8 DONE 0.4s

#10 [5/5] COPY build.sh *.cc *.dict /src/
#10 sha256:a4d0c174281c570f792643cece7c14fc0027a06f5ba09a6178b0581718ad8773
#10 DONE 0.5s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:ca9aa19e7b9482b56434a783784c9167ea180806387fc9ddfce9dfa5a81fadf8 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer done
#11 DONE 0.3s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:8f6bc6177e397a76530427d2df7226212ca40d740a1eab74d56a8f30e01facea
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:aee0d2cd539dd0ead82921d3ef732ad78ef0e84aa04c2da878a59ae58f1b561a
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer:latest
#3 sha256:fad29d874cadb4de45cc9fa47791a866cbdbb67450fb9c1cd3bd2d8a3295d91d
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer
#5 sha256:905b52b1335fbac54cab6153234a34b1cfe4857d69d845db4b93dc8979128b2c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate
#4 sha256:09b7f4de1d62c260641c81436e30fbd1d989ff3f3aa991b2e9c88d34201ca46c
#4 ERROR: gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer
#5 sha256:905b52b1335fbac54cab6153234a34b1cfe4857d69d845db4b93dc8979128b2c
#5 DONE 1.7s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:c28239a2af9ec2c9c557e8e16c152ecfb88a56ed566a975b297e3f6dabb6a8fd
#6 0.539 Cloning into '/afl'...
#6 1.385 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.385 
#6 1.385 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.385 changes and commit them, and you can discard any commits you make in this
#6 1.385 state without impacting any branches by switching back to a branch.
#6 1.385 
#6 1.385 If you want to create a new branch to retain commits you create, you may
#6 1.385 do so (now or later) by using -c with the switch command. Example:
#6 1.385 
#6 1.385   git switch -c <new-branch-name>
#6 1.385 
#6 1.385 Or undo this operation with:
#6 1.385 
#6 1.385   git switch -
#6 1.385 
#6 1.385 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.385 
#6 1.385 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.401 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.401 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.570 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.575 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 4.324 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.639 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 5.067 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 5.217 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.613 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.862 ln -sf afl-as as
#6 5.864 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.867 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.868 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.4s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:0ae8024ec304793a2f89b7505d07441cdfbcba3a29addbe5b32635d6d7b58b01
#7 0.814 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.814 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.814 Hit:3 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 0.830 Hit:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.852 Hit:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 1.712 Reading package lists...
#7 3.219 Reading package lists...
#7 4.636 Building dependency tree...
#7 4.845 Reading state information...
#7 5.090 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.090 0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
#7 5.101 --2022-02-17 20:11:44--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.103 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.110.133, 185.199.111.133, 185.199.108.133, ...
#7 5.105 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.110.133|:443... connected.
#7 5.144 HTTP request sent, awaiting response... 200 OK
#7 5.311 Length: 9177 (9.0K) [text/plain]
#7 5.311 Saving to: '/afl/afl_driver.cpp'
#7 5.311 
#7 5.311      0K ........                                              100% 10.0M=0.001s
#7 5.312 
#7 5.312 2022-02-17 20:11:44 (10.0 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.312 
#7 7.144 ar: creating /libAFL.a
#7 DONE 7.7s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:05c942115b0302338960d4b2d9565d6084bffd323bb1386e1f142985e9793066 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate 0.0s done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate:
------
#2 [internal] load .dockerignore
#2 sha256:d994219f9b99ed30dcdb9e40c0d00333c93ddcebefe66c0356f67378d207024f
#2 transferring context: 34B done
#2 DONE 0.3s

#1 [internal] load build definition from Dockerfile
#1 sha256:4feb598f8b0faca6a45dc2575ad6fb8039b1d1050882c032d9fe94884ba8b0a6
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.4s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:58bd06a1d8c353e70915070a7a94bf5e8c51b7b87a16b27e836158e478c1d79b
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:c0f6cd0895e25590f2c9de4f98f43e66cd788099b094e3d1564ba160d14bc252
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:fb2f12590691f49f1a319ea67d467eacaeaeb60a7d626bccec359ef8fedab2e4
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:1f132ed56e8ccb8bd3d96e75096db049ab8bc1d1270ddc211bd7348697dae5d0
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:bf3ef7c7f7f0403d2e751c3f5f87bc9707bce92335931ead1ca52b551d925f3a
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:278d1048be89ac10e6821499149688e394f017ddb53c5305e97cdbe9ed6d8c79 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.2s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:74d5a6cc6400b0a7f65bb0a9be2ff3effb3e9a2ec6de1f2a80a59f1c889ec5ed
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:f17fd5353a5b3f0c035e47807aaf3e10e2d906ecfa9afff12bf25d55e5330687
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate:latest
#3 sha256:2167d9e50509fbc159f3cbdd3ba70273e256e83ef9164ef5cbc305497360bb13
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:a1a61ad7db68137c3b7c7fd168a8c94413ba2e506ad69aa15ad687620aa71a74
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate
#6 sha256:fe1a1209bb11dc49fafad765c809e6262713d8bf8651391acb701fbcb3d35df7
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer
#5 sha256:9fe63b7def97b4fc7bcaf1b76abfbe8a4aa094dcf67c093fecf1fdd0964fc004
#5 ERROR: gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:a1a61ad7db68137c3b7c7fd168a8c94413ba2e506ad69aa15ad687620aa71a74
#12 transferring context: 669.91kB 0.1s done
#12 DONE 0.2s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate
#6 sha256:fe1a1209bb11dc49fafad765c809e6262713d8bf8651391acb701fbcb3d35df7
#6 DONE 1.0s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:46a234d2fc15eb7ba0480dc60634a18d4ab4ecaec935620a7cc818df76dcd19a
#8 DONE 0.9s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:29cf6a557e0ccd6bed067bed75a0f67eb625fc6db7ee1dd81ef2460c4995083b
#9 DONE 52.2s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:0d7b8754ee62ddc7bde5246b71b0f0e702268920d99ea3a7c4769f6b566eef31
#10 DONE 0.3s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:b994791b9d213cc5b9a88f0c8c919857e5a4967b7c0efc626eef17ef1382e99d
#11 DONE 59.7s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:e36da69d797b7d62ec1433ef9d90df1185bf2dd4d01eef653f305746e455a27f
#13 DONE 2.2s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:32b86bb312d2deafaf1dad6f136748e9120e8b89526785550dd0600273051bce
#14 DONE 0.9s

#15 [stage-1  8/13] COPY benchmarks/json-c_tokener_parse_ex_fuzzer/benchmark.yaml /
#15 sha256:b0681e34a5fd88f751b09fda02af7e799a8493d0fbef6675ce88f74894087067
#15 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:99d303b3ff6911df4af22efd57d8ec66c3ca22abf7d3e5e4ff1a25dc30d794b1
#16 DONE 0.8s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:efd60b7bc2e8e68986f5404bc2ee07c19d6495c14be056a3d654f92dd44767d3
#17 DONE 0.5s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:2438ac2775c7fd01e64da978765787d540447c43a5a11febe507f5af6c2bb010
#18 2.193 Checking out commit 31b00466
#18 3.782 error: pathspec '31b00466' did not match any file(s) known to git
#18 3.800 error: pathspec '31b00466' did not match any file(s) known to git
#18 3.808 error: pathspec '31b00466' did not match any file(s) known to git
#18 3.846 error: pathspec '31b00466' did not match any file(s) known to git
#18 3.867 Checkout unsuccessful.
#18 DONE 11.2s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:561ee7f8e8e77f5a135803e4b17adc30eb5d5e65e0cdb1dcbee4255194e9da2c
#19 DONE 5.8s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:0ca76432b5fd121e901b818b1832298181f41777713b2db85592d709ab2879e2
#20 1.954 Run fuzzer_build to build the target
#20 2.092 FUZZ_TARGET = tokener_parse_ex_fuzzer
#20 2.092 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 2.092 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 2.099 Building benchmark json-c_tokener_parse_ex_fuzzer with fuzzer afl
#20 2.102 + ./autogen.sh
#20 2.103 /src/build.sh: line 18: ./autogen.sh: No such file or directory
#20 2.103 Traceback (most recent call last):
#20 2.103   File "<string>", line 1, in <module>
#20 2.104   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 2.104     utils.build_benchmark()
#20 2.104   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 2.104     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 2.104   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 2.104     raise CalledProcessError(retcode, cmd)
#20 2.104 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 127.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2804973: .afl-json-c_tokener_parse_ex_fuzzer-builder] Error 1
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:a8fdbef20664772e72a9612226ca6355d8964609d3b3d83cda295de965b2d8e9
#1 transferring dockerfile: 32B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:7cdf29370b8afb62aae2daa0bc29129a183608974e517f4962452105a28a8047
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer
#4 sha256:370a0b2b5e5a51766b20158a9aa4eb8c5e81d32d4bc758feb6e6b06b1a5b0403
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:e26a12af8c45189aabcca90432a14420a378db93baca1ebcbe3d2df0725df567
#9 transferring context: 123B done
#9 DONE 0.1s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:1b680dfd08ff668505b992cdb80d6a0ea43cbc2f7a85f533f40c1edf5f50c5ba
#6 CACHED

#7 [3/5] RUN git clone --depth 1 https://github.com/json-c/json-c.git json-c
#7 sha256:67d89b44b36825af50527903729e0975f9ba5b6cd546b189bf31204d558dc5d8
#7 CACHED

#8 [4/5] WORKDIR json-c
#8 sha256:42c03f78d658f7c2d0f5bc1d3e9fd456d75c680b93f94c59c5e0df5b5467ef8c
#8 CACHED

#10 [5/5] COPY build.sh *.cc *.dict /src/
#10 sha256:f1e17dda5b491f0046789b6b5404c86e5365596c30d20f09323b80bb6f133ee0
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:ca9aa19e7b9482b56434a783784c9167ea180806387fc9ddfce9dfa5a81fadf8 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer done
#11 DONE 0.4s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:11bdf3771831a9c29f0e73e9caea15e4fc4752f853a6ab8e4447be0d97d680bb
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:00493872372d80cd66eab070bc306d2078307c85ed67efe5e4dabe8df58b832f
#2 transferring context: 2B done
#2 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer:latest
#3 sha256:fad29d874cadb4de45cc9fa47791a866cbdbb67450fb9c1cd3bd2d8a3295d91d
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer
#5 sha256:905b52b1335fbac54cab6153234a34b1cfe4857d69d845db4b93dc8979128b2c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate
#4 sha256:09b7f4de1d62c260641c81436e30fbd1d989ff3f3aa991b2e9c88d34201ca46c
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:c28239a2af9ec2c9c557e8e16c152ecfb88a56ed566a975b297e3f6dabb6a8fd
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:0ae8024ec304793a2f89b7505d07441cdfbcba3a29addbe5b32635d6d7b58b01
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:05c942115b0302338960d4b2d9565d6084bffd323bb1386e1f142985e9793066
#8 writing image sha256:05c942115b0302338960d4b2d9565d6084bffd323bb1386e1f142985e9793066 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:f827060615c91eb0f8b2caab3ca753056f67fe5beeb078eb7f6281a0d9e65cb2
#2 transferring context: 34B done
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:c2678b03498973920988802ee1b3cadb4008a6b29bbfc8905b90377f29a7ffd5
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.7s

#2 [internal] load .dockerignore
#2 sha256:f827060615c91eb0f8b2caab3ca753056f67fe5beeb078eb7f6281a0d9e65cb2
#2 DONE 0.8s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:fcc0d4604410a241fde78b783f7cda7b669bb0b44efd2b34328957d7fbcd5613
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:940c0866d32e5915e0b9250b647cf76fb1881136e7ad06b952efe134a28e9b62
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:9792a875991f29e1ff103470c82e03fb8f423ba91f1c29ebc1daa32941e47fe5
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:3d114946f91f1d0e73240d2d76b901edc0ac6e7cbedda7d0e74d21e39c08c3c6
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:67524ba70b6fcee597b2eda3dda84bd736d3737764aecc0f1a2cc5d737520463
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:278d1048be89ac10e6821499149688e394f017ddb53c5305e97cdbe9ed6d8c79
#13 writing image sha256:278d1048be89ac10e6821499149688e394f017ddb53c5305e97cdbe9ed6d8c79 0.1s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.3s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:096f1bcdee5456faa939b82506480f7c9bea38bb67617bac0010964702952825
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:051facc2d6d69ff5ab3ccaf92c6094690a96875780bd79554f4834a7e134ff22
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate:latest
#3 sha256:2167d9e50509fbc159f3cbdd3ba70273e256e83ef9164ef5cbc305497360bb13
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer
#5 sha256:9fe63b7def97b4fc7bcaf1b76abfbe8a4aa094dcf67c093fecf1fdd0964fc004
#5 ...

#12 [internal] load build context
#12 sha256:905dd56f1ab9312d5d13897407f7323c6a600abcd2e76c200f8579e9102456f6
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate
#6 sha256:fe1a1209bb11dc49fafad765c809e6262713d8bf8651391acb701fbcb3d35df7
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer
#5 sha256:9fe63b7def97b4fc7bcaf1b76abfbe8a4aa094dcf67c093fecf1fdd0964fc004
#5 ERROR: gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:905dd56f1ab9312d5d13897407f7323c6a600abcd2e76c200f8579e9102456f6
#12 transferring context: 669.91kB 0.1s done
#12 DONE 0.2s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:aedfeb70bf8a6396254826b54a70fce8efb9ed82e7c455f0ce94c8fbf88db16f
#17 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:29cf6a557e0ccd6bed067bed75a0f67eb625fc6db7ee1dd81ef2460c4995083b
#9 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:1e1052be9709a31bf8cc49b47f27d3c617ead1184e19299080167f4853a3f905
#13 CACHED

#15 [stage-1  8/13] COPY benchmarks/json-c_tokener_parse_ex_fuzzer/benchmark.yaml /
#15 sha256:3a6254990e31fad9e7e4aeb9bf15d16017c4732f9b0254b1644579db8a930e02
#15 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:c0aba510236246a280e5da6fc25d5c9b6d88b411aa2329ba7184e0349cec782d
#14 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:ae9315878dba693f8cf4c60032128828e6e1bbad4ac6a610e320e494c6f289e3
#16 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:b994791b9d213cc5b9a88f0c8c919857e5a4967b7c0efc626eef17ef1382e99d
#11 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:0d7b8754ee62ddc7bde5246b71b0f0e702268920d99ea3a7c4769f6b566eef31
#10 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:46a234d2fc15eb7ba0480dc60634a18d4ab4ecaec935620a7cc818df76dcd19a
#8 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:62d3596c694794ad77f6dd991fd05b4f58fbf2da76939779800576832bcaea53
#18 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:26521b19fcf21dac119da7bd5b8f87798fc97fb83e8bb916b2f4260d4e14e98e
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:29d50cb5211996c60f634e166335dbad01744b59d62bc240cb9e0f9520f6f3c1
#20 0.468 Run fuzzer_build to build the target
#20 0.583 FUZZ_TARGET = tokener_parse_ex_fuzzer
#20 0.583 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.583 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.588 Building benchmark json-c_tokener_parse_ex_fuzzer with fuzzer afl
#20 0.591 + ./autogen.sh
#20 0.592 /src/build.sh: line 18: ./autogen.sh: No such file or directory
#20 0.592 Traceback (most recent call last):
#20 0.592   File "<string>", line 1, in <module>
#20 0.592   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 0.593     utils.build_benchmark()
#20 0.593   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 0.593     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 0.593   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 0.593     raise CalledProcessError(retcode, cmd)
#20 0.593 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 127.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2804973: .afl-json-c_tokener_parse_ex_fuzzer-builder] Error 1
