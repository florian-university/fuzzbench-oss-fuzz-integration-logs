WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: astc-encoder_astc-encoder.
INFO:root:Please run "make test-run-afl-astc-encoder_astc-encoder" to test integration.
#2 [internal] load .dockerignore
#2 sha256:a03315d91345fd1f263ad965ae39378f46162b3da43c8bd025d9c7dbd24230f9
#2 transferring context: 2B done
#2 DONE 0.4s

#1 [internal] load build definition from Dockerfile
#1 sha256:20f5e87ee84d69e00ee3f0227d15d8a65726c6bff814efa383e5219bedc73a8c
#1 transferring dockerfile: 984B done
#1 DONE 0.3s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#9 [internal] load build context
#9 sha256:417485f6a7577b63b1eaf75ce575560642ccb04c6246f93f32dbf19cbcc36691
#9 DONE 0.0s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder
#4 sha256:00ba58a9f8b64de3d9b02857930a62fb6b25aa68ba310b6d3527b2c721e0fa15
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder:latest: not found

#9 [internal] load build context
#9 sha256:417485f6a7577b63b1eaf75ce575560642ccb04c6246f93f32dbf19cbcc36691
#9 transferring context: 7.36kB done
#9 DONE 0.1s

#6 [2/6] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:1b680dfd08ff668505b992cdb80d6a0ea43cbc2f7a85f533f40c1edf5f50c5ba
#6 CACHED

#7 [3/6] RUN git clone --depth 1 https://github.com/ARM-software/astc-encoder
#7 sha256:8b3938c20cd08863658d41e6ac85a36b6723d01b82c6a51b94f0ab2a7e29616d
#7 CACHED

#8 [4/6] WORKDIR astc-encoder/Source
#8 sha256:4e6f7aef4f72450ae0ecad360165eed7ed2982e4b9a0a2cf86ea40edfc11c3c6
#8 CACHED

#10 [5/6] COPY build.sh *_fuzzer.cc /src/
#10 sha256:1de7b26583e1b9e88145b44b8e8f2f728b39fd505fcf24476565cc22929ce0c5
#10 DONE 0.7s

#11 [6/6] COPY Makefile.patch /src/astc-encoder/Source
#11 sha256:2525de577585519aef3c77de50678e59993c24e4845d32d03ba8511992325305
#11 DONE 0.4s

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:8b79f64c67ee523a97c4038ff8a97dea531de01481a78e35d1e40c9000d17230 0.0s done
#12 naming to gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder 0.0s done
#12 DONE 0.3s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:05524501b2ea7ca409422aeba3010c65429687cd1954bb4eec3db04823e8018b
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:0d3c294544ac6568824fb2fcd4bc2498548f9d012224fef4bf0d5902812f820c
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder:latest
#3 sha256:f89a37d30b9c5299dc0aefbd01dbf198d4e819f8da88f8704b670fdf67b6bd1e
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder
#5 sha256:1a632afa0ca9b4273f58fc1ea334650e74441d185bac04f7ccb1991dfd23d8b8
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate
#4 sha256:89cf9300870ed6f7e42a60440ef58e197f697f7f01ce40f6d09f669995e84dfc
#4 ERROR: gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder
#5 sha256:1a632afa0ca9b4273f58fc1ea334650e74441d185bac04f7ccb1991dfd23d8b8
#5 DONE 0.8s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:88ab6987e0181b78ea8c93bc17553a012939d6db1466b011c42a6455d612b190
#6 0.522 Cloning into '/afl'...
#6 1.278 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.278 
#6 1.278 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.278 changes and commit them, and you can discard any commits you make in this
#6 1.278 state without impacting any branches by switching back to a branch.
#6 1.278 
#6 1.278 If you want to create a new branch to retain commits you create, you may
#6 1.278 do so (now or later) by using -c with the switch command. Example:
#6 1.278 
#6 1.278   git switch -c <new-branch-name>
#6 1.278 
#6 1.278 Or undo this operation with:
#6 1.278 
#6 1.278   git switch -
#6 1.278 
#6 1.278 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.278 
#6 1.278 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.302 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.302 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.498 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.503 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 4.112 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.426 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.867 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 5.021 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.414 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.651 ln -sf afl-as as
#6 5.653 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.655 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.657 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.3s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:5d93d1f992763d2d8f45b5d8e8b805bafb925d48c9b8d6ceff4593e03394d14a
#7 0.823 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.823 Get:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#7 0.823 Hit:3 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.911 Get:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#7 0.935 Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 1.760 Fetched 222 kB in 1s (212 kB/s)
#7 1.760 Reading package lists...
#7 3.411 Reading package lists...
#7 4.821 Building dependency tree...
#7 5.030 Reading state information...
#7 5.299 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.299 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 5.305 --2022-02-17 07:06:01--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.308 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.109.133, 185.199.111.133, 185.199.108.133, ...
#7 5.310 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.109.133|:443... connected.
#7 5.332 HTTP request sent, awaiting response... 200 OK
#7 5.524 Length: 9177 (9.0K) [text/plain]
#7 5.524 Saving to: '/afl/afl_driver.cpp'
#7 5.524 
#7 5.524      0K ........                                              100% 12.8M=0.001s
#7 5.525 
#7 5.525 2022-02-17 07:06:01 (12.8 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.525 
#7 7.291 ar: creating /libAFL.a
#7 DONE 7.7s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:ed9a88234d90a0e4ea40572f111a185eaa836728e8b125b0f8640db2f9e1c72f 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:29d445767419c1752fdcfe9c3ef542b00c2ca479de491b3c7d781c4f55c569e6
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:903419a17ccc0e012cc4d2e59ab89a3f965503ff8f512a49d3bd67f894ababaf
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:d96ba9105c3e9db2d72b0204bcb4af75d649ab7c948831ffad5097dabef4574d
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:8424a2f3839c7cbc39fd83eeb765d3d457dcd4e2217d10e0d62ed9970a4e0113
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:097153da02c91008a5a30203239908b4b5bf397be7e33f8838f4bbd5d464a86b
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:2afd3c579d4015b81525447fa4c603742c1c28fbd52bb5139c29ed0525a45091
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:1e992cb789e3c60478f1b5458d5a8b47bf5e99c669f23db8109d8083cb59e0dc
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:c3a86acdae3fb44919108890d4861f6d2bfdc827d3c1ebe37654229c98736ff3
#13 writing image sha256:c3a86acdae3fb44919108890d4861f6d2bfdc827d3c1ebe37654229c98736ff3 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:18e84fb53e6237cff750af274dbe2ec35f0e61668273f2b80d7d583e7e22cee9
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.4s

#2 [internal] load .dockerignore
#2 sha256:2f835666100f3cc4b6b8f6b5aa04216b9cadfd5071e2cc02027ea42456ef542f
#2 transferring context: 34B done
#2 DONE 0.3s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate:latest
#3 sha256:4e7ba8720de1938bcea2e7bf627af639c9847f5223dbce8940ee771cd7b16498
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:542f841b5c60633e566b508ff004d816e26c3ec56473585173bf435eacd83837
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate
#6 sha256:9fa84eae7a63eae92935e7b4f6364949af153abca8c82e1e149855b5f8fc34ed
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder
#5 sha256:706e2c450ee7b12ca444eee384482ff1594a29e2dafe9b95ec774432929e0e85
#5 ERROR: gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:542f841b5c60633e566b508ff004d816e26c3ec56473585173bf435eacd83837
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.2s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate
#6 sha256:9fa84eae7a63eae92935e7b4f6364949af153abca8c82e1e149855b5f8fc34ed
#6 DONE 0.9s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:d6a5ed65b4afbc655e045efc52ac2750244dd89244d0fb0ceaffd92029685516
#8 DONE 0.9s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:52427a53eefde775eab324643c3f8710f397a7377f880387d6a0c5ef073d0e52
#9 DONE 42.3s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:b7190728d678b1961e30311ec03428743e6d3ce634c499aa42ca8128ecbb1486
#10 DONE 0.4s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:0de2356e326cc7a338888f12c91af3efe0f2055c8e54626ebcc1d67bb4c603ce
#11 DONE 80.2s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:65b49a0b923c095ca30b572653cb039ae91a7f2e1f7b74aaa8ff1240613a1ff5
#13 DONE 0.7s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:bcb939c017033983d0649e5f3e0c699ac9ccd50c229381b0aa03cdaf0d758b43
#14 DONE 0.9s

#15 [stage-1  8/13] COPY benchmarks/astc-encoder_astc-encoder/benchmark.yaml /
#15 sha256:8d16cb6222b9246477a363e71a6a1423596e648e4d3a206a52a4403da495839f
#15 DONE 4.1s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:5e920dfb14aa07da24dd364a7b825db455c6c62facaa8f52812aaee7522ae454
#16 DONE 0.9s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:1fe3dd6556aeb451aa59c4cc9b3ac384eccf526783771311f0d7d4c153791b5c
#17 DONE 2.4s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:ac5ede9aa14229e8074cdbd4a0384251813010d6c235f8139d46187a54d41899
#18 0.615 Checking out commit f796236b
#18 5.132 From https://github.com/ARM-software/astc-encoder
#18 5.132  * [new tag]         1.3        -> 1.3
#18 5.132  * [new tag]         1.4        -> 1.4
#18 5.133  * [new tag]         1.5        -> 1.5
#18 5.133  * [new tag]         1.6        -> 1.6
#18 5.133  * [new tag]         1.7        -> 1.7
#18 5.133  * [new tag]         2.0        -> 2.0
#18 5.134  * [new tag]         2.1        -> 2.1
#18 5.134  * [new tag]         2.2        -> 2.2
#18 5.134  * [new tag]         2.3        -> 2.3
#18 5.134  * [new tag]         2.4        -> 2.4
#18 5.135  * [new tag]         2.5        -> 2.5
#18 5.135  * [new tag]         3.0        -> 3.0
#18 5.135  * [new tag]         3.1        -> 3.1
#18 5.135  * [new tag]         3.2        -> 3.2
#18 5.136  * [new tag]         3.3        -> 3.3
#18 5.202 error: pathspec 'f796236b' did not match any file(s) known to git
#18 5.216 error: pathspec 'f796236b' did not match any file(s) known to git
#18 5.227 error: pathspec 'f796236b' did not match any file(s) known to git
#18 5.273 Checkout unsuccessful.
#18 DONE 5.9s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:49f62263c3f60920cea6eeb95483e23f78f457024951cebd9afcf4377eff142f
#19 DONE 1.1s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:610275da424c925be22b7a12db4022738e3e9eac1ff85c98bdc2c824122085c7
#20 0.596 Run fuzzer_build to build the target
#20 0.751 FUZZ_TARGET = astc-encoder
#20 0.751 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.751 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.762 Building benchmark astc-encoder_astc-encoder with fuzzer afl
#20 0.765 + patch Makefile Makefile.patch
#20 0.770 patching file Makefile
#20 0.770 Hunk #1 FAILED at 92.
#20 0.770 1 out of 1 hunk FAILED -- saving rejects to file Makefile.rej
#20 0.771 patch: **** Can't reopen file Makefile : No such file or directory
#20 0.771 Traceback (most recent call last):
#20 0.771   File "<string>", line 1, in <module>
#20 0.772   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 0.772     utils.build_benchmark()
#20 0.772   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 0.772     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 0.772   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 0.772     raise CalledProcessError(retcode, cmd)
#20 0.772 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 2.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2762544: .afl-astc-encoder_astc-encoder-builder] Error 1
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:07dc06f90c636b0eae4eef0a90dce60996a38ef880ec6bc28f1b2c2a386566ec
#2 transferring context: 2B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:d35af531962fcd3d1a0dd0f2beb959bc0b9b9652ea44aac872f4452230d31369
#1 transferring dockerfile: 32B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder
#4 sha256:00ba58a9f8b64de3d9b02857930a62fb6b25aa68ba310b6d3527b2c721e0fa15
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:4b96fee650a9df2ff7f69bee05e7200736e5365e9c8e5e25b51d21ef317ad877
#9 transferring context: 172B done
#9 DONE 0.1s

#6 [2/6] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:1b680dfd08ff668505b992cdb80d6a0ea43cbc2f7a85f533f40c1edf5f50c5ba
#6 CACHED

#7 [3/6] RUN git clone --depth 1 https://github.com/ARM-software/astc-encoder
#7 sha256:8b3938c20cd08863658d41e6ac85a36b6723d01b82c6a51b94f0ab2a7e29616d
#7 CACHED

#8 [4/6] WORKDIR astc-encoder/Source
#8 sha256:4e6f7aef4f72450ae0ecad360165eed7ed2982e4b9a0a2cf86ea40edfc11c3c6
#8 CACHED

#10 [5/6] COPY build.sh *_fuzzer.cc /src/
#10 sha256:ab55b8826edb3ab5e5de01ff007dfaa2ecee7d26bc4384c048c091436a22384c
#10 CACHED

#11 [6/6] COPY Makefile.patch /src/astc-encoder/Source
#11 sha256:5e99ab47470197cb3c1901cd446134bb45d950e7cf291f2295e79601f3adf690
#11 CACHED

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:8b79f64c67ee523a97c4038ff8a97dea531de01481a78e35d1e40c9000d17230 0.0s done
#12 naming to gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder done
#12 DONE 0.3s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:feb7453efdedcf15e5da827e8378674cddf8b660372e3fc21d2c8e63021d8d85
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:2c963aacb3a3de2351910088199b744ab4e2cbf908029b3ccd355e23893b2886
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder:latest
#3 sha256:f89a37d30b9c5299dc0aefbd01dbf198d4e819f8da88f8704b670fdf67b6bd1e
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder
#5 sha256:1a632afa0ca9b4273f58fc1ea334650e74441d185bac04f7ccb1991dfd23d8b8
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate
#4 sha256:89cf9300870ed6f7e42a60440ef58e197f697f7f01ce40f6d09f669995e84dfc
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:88ab6987e0181b78ea8c93bc17553a012939d6db1466b011c42a6455d612b190
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:5d93d1f992763d2d8f45b5d8e8b805bafb925d48c9b8d6ceff4593e03394d14a
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:ed9a88234d90a0e4ea40572f111a185eaa836728e8b125b0f8640db2f9e1c72f
#8 writing image sha256:ed9a88234d90a0e4ea40572f111a185eaa836728e8b125b0f8640db2f9e1c72f 0.1s done
#8 naming to gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate done
#8 DONE 0.5s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:cbbe311c72e2614efb27bfca5eb58b324d0d74ea5b5b4e129dc79e9c2fe3e420
#2 transferring context: 34B done
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:732f34943d86b3da6c0b586fcbacb4cbe269d16025d12319aa78c980c45e7c97
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.2s

#2 [internal] load .dockerignore
#2 sha256:cbbe311c72e2614efb27bfca5eb58b324d0d74ea5b5b4e129dc79e9c2fe3e420
#2 DONE 0.7s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:789ca8436b41d087d9eb87a9e949052edd44cf7f7bf421da8552c2dd2c7df20b
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:fca8a6aa0337274396360fadfd7d4e1227c8801a4bace2594e487be1b89c50ca
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:f3670d3f326906066df753fca85e7c9dcacc767459a3e18448474f5fa116e0aa
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:a795ee3e548ca6d8c064b18b27d889a298d2a512d55bde2dca69330d3933c79a
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:b5af865fff41c8f26bdafc082c24408dc66e90a6d7af28aeba299ecf927a0b76
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:c3a86acdae3fb44919108890d4861f6d2bfdc827d3c1ebe37654229c98736ff3
#13 writing image sha256:c3a86acdae3fb44919108890d4861f6d2bfdc827d3c1ebe37654229c98736ff3 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:b9dca8ceaf87ff75c3aef9b3a0427818a10660f95a0d106ded189337f4fedfe9
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:bc7756cf0070f58f9383446a7e506a488e2b9d9a1fb78ebfe967e3907fce9822
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate:latest
#3 sha256:4e7ba8720de1938bcea2e7bf627af639c9847f5223dbce8940ee771cd7b16498
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:1830e31a2f5a093cbf61c726500f299a23d71976ca61d696c99f6cdb19bc64fa
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate
#6 sha256:9fa84eae7a63eae92935e7b4f6364949af153abca8c82e1e149855b5f8fc34ed
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder
#5 sha256:706e2c450ee7b12ca444eee384482ff1594a29e2dafe9b95ec774432929e0e85
#5 ERROR: gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder:latest: not found

#12 [internal] load build context
#12 sha256:1830e31a2f5a093cbf61c726500f299a23d71976ca61d696c99f6cdb19bc64fa
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.4s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:52427a53eefde775eab324643c3f8710f397a7377f880387d6a0c5ef073d0e52
#9 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:a4f770ccead87993063ca48ef7f61bf2c3a76ff22005562083524c5e1460f1aa
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:5f8bc537f7111828225cf6f60d9761c1531e9b10d04ce33701f3a857b4559e19
#14 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:18d04c6d348f89f56c11e0f830eaa91c2c406d61ffdd8a33a57a8ccd65c55f25
#17 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:b7190728d678b1961e30311ec03428743e6d3ce634c499aa42ca8128ecbb1486
#10 CACHED

#15 [stage-1  8/13] COPY benchmarks/astc-encoder_astc-encoder/benchmark.yaml /
#15 sha256:40d5ae337e5be6fc9066ff848d863ec524cc708c8bf647e52924638137c86c8c
#15 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:6fe7b7c528d6dc2a6465a0249258db383772ef9fe42ff71b32005c9d9aaa8cf5
#18 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:0de2356e326cc7a338888f12c91af3efe0f2055c8e54626ebcc1d67bb4c603ce
#11 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:d6a5ed65b4afbc655e045efc52ac2750244dd89244d0fb0ceaffd92029685516
#8 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:833338d4ed71ccbefc3f0644741b2337f5932dce7052c20e9f0f5bcb5447176f
#16 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:4ea6b761985782872777b3b05e714c27b9cecbb5b4de39cf4ebb9c2ebfbef672
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:ead5540da657d69558c79b9aa6831f57708680bb34c765cf33f3493b62385343
#20 1.907 Run fuzzer_build to build the target
#20 2.030 FUZZ_TARGET = astc-encoder
#20 2.030 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 2.030 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 2.035 Building benchmark astc-encoder_astc-encoder with fuzzer afl
#20 2.038 + patch Makefile Makefile.patch
#20 2.040 patching file Makefile
#20 2.040 Hunk #1 FAILED at 92.
#20 2.040 1 out of 1 hunk FAILED -- saving rejects to file Makefile.rej
#20 2.040 patch: **** Can't reopen file Makefile : No such file or directory
#20 2.041 Traceback (most recent call last):
#20 2.041   File "<string>", line 1, in <module>
#20 2.041   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 2.041     utils.build_benchmark()
#20 2.041   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 2.041     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 2.041   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 2.042     raise CalledProcessError(retcode, cmd)
#20 2.042 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 2.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2762544: .afl-astc-encoder_astc-encoder-builder] Error 1
