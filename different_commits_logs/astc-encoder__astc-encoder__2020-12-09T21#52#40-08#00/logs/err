WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: astc-encoder_astc-encoder.
INFO:root:Please run "make test-run-afl-astc-encoder_astc-encoder" to test integration.
#2 [internal] load .dockerignore
#2 sha256:25882557579181b81013417d7fa173e939874d0fd0a74c90f47d99208d910361
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:0109f87cfe12da1055e46893c17cbed236d8b455277ce198fa6a7ccd5eeed363
#1 transferring dockerfile: 927B done
#1 DONE 0.5s

#2 [internal] load .dockerignore
#2 sha256:25882557579181b81013417d7fa173e939874d0fd0a74c90f47d99208d910361
#2 transferring context: 2B done
#2 DONE 0.6s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#9 [internal] load build context
#9 sha256:23765a7a84b75a208554981addc107bb54c1cc9ac94df132c731b19b6c341a17
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder
#4 sha256:00ba58a9f8b64de3d9b02857930a62fb6b25aa68ba310b6d3527b2c721e0fa15
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder:latest: not found

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:1b680dfd08ff668505b992cdb80d6a0ea43cbc2f7a85f533f40c1edf5f50c5ba
#6 ...

#9 [internal] load build context
#9 sha256:23765a7a84b75a208554981addc107bb54c1cc9ac94df132c731b19b6c341a17
#9 transferring context: 799B done
#9 DONE 0.8s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:1b680dfd08ff668505b992cdb80d6a0ea43cbc2f7a85f533f40c1edf5f50c5ba
#6 1.237 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 1.237 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#6 1.237 Get:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#6 1.331 Get:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#6 1.358 Get:5 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#6 2.094 Fetched 336 kB in 1s (353 kB/s)
#6 2.094 Reading package lists...
#6 3.879 Reading package lists...
#6 5.312 Building dependency tree...
#6 5.530 Reading state information...
#6 5.752 make is already the newest version (4.2.1-1.2).
#6 5.752 make set to manually installed.
#6 5.752 The following additional packages will be installed:
#6 5.753   autotools-dev libltdl-dev libltdl7 libsigsegv2 m4
#6 5.755 Suggested packages:
#6 5.755   autoconf-archive gnu-standards autoconf-doc gettext libtool-doc gfortran
#6 5.755   | fortran95-compiler gcj-jdk m4-doc
#6 5.797 The following NEW packages will be installed:
#6 5.799   autoconf automake autotools-dev libltdl-dev libltdl7 libsigsegv2 libtool m4
#6 5.873 0 upgraded, 8 newly installed, 0 to remove and 0 not upgraded.
#6 5.873 Need to get 1457 kB of archives.
#6 5.873 After this operation, 6651 kB of additional disk space will be used.
#6 5.873 Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 libsigsegv2 amd64 2.12-2 [13.9 kB]
#6 5.899 Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 m4 amd64 1.4.18-4 [199 kB]
#6 5.972 Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 autoconf all 2.69-11.1 [321 kB]
#6 6.003 Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 autotools-dev all 20180224.1 [39.6 kB]
#6 6.006 Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 automake all 1:1.16.1-4ubuntu6 [522 kB]
#6 6.045 Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl7 amd64 2.4.6-14 [38.5 kB]
#6 6.047 Get:7 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl-dev amd64 2.4.6-14 [162 kB]
#6 6.059 Get:8 http://archive.ubuntu.com/ubuntu focal/main amd64 libtool all 2.4.6-14 [161 kB]
#6 6.429 debconf: delaying package configuration, since apt-utils is not installed
#6 6.544 Fetched 1457 kB in 0s (5589 kB/s)
#6 6.667 Selecting previously unselected package libsigsegv2:amd64.
#6 6.667 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21291 files and directories currently installed.)
#6 6.751 Preparing to unpack .../0-libsigsegv2_2.12-2_amd64.deb ...
#6 6.788 Unpacking libsigsegv2:amd64 (2.12-2) ...
#6 6.928 Selecting previously unselected package m4.
#6 6.930 Preparing to unpack .../1-m4_1.4.18-4_amd64.deb ...
#6 6.962 Unpacking m4 (1.4.18-4) ...
#6 7.139 Selecting previously unselected package autoconf.
#6 7.142 Preparing to unpack .../2-autoconf_2.69-11.1_all.deb ...
#6 7.160 Unpacking autoconf (2.69-11.1) ...
#6 7.293 Selecting previously unselected package autotools-dev.
#6 7.296 Preparing to unpack .../3-autotools-dev_20180224.1_all.deb ...
#6 7.308 Unpacking autotools-dev (20180224.1) ...
#6 7.431 Selecting previously unselected package automake.
#6 7.434 Preparing to unpack .../4-automake_1%3a1.16.1-4ubuntu6_all.deb ...
#6 7.452 Unpacking automake (1:1.16.1-4ubuntu6) ...
#6 7.642 Selecting previously unselected package libltdl7:amd64.
#6 7.645 Preparing to unpack .../5-libltdl7_2.4.6-14_amd64.deb ...
#6 7.660 Unpacking libltdl7:amd64 (2.4.6-14) ...
#6 7.752 Selecting previously unselected package libltdl-dev:amd64.
#6 7.755 Preparing to unpack .../6-libltdl-dev_2.4.6-14_amd64.deb ...
#6 7.768 Unpacking libltdl-dev:amd64 (2.4.6-14) ...
#6 7.925 Selecting previously unselected package libtool.
#6 7.928 Preparing to unpack .../7-libtool_2.4.6-14_all.deb ...
#6 7.952 Unpacking libtool (2.4.6-14) ...
#6 8.145 Setting up autotools-dev (20180224.1) ...
#6 8.231 Setting up libsigsegv2:amd64 (2.12-2) ...
#6 8.304 Setting up libltdl7:amd64 (2.4.6-14) ...
#6 8.382 Setting up libtool (2.4.6-14) ...
#6 8.454 Setting up m4 (1.4.18-4) ...
#6 8.522 Setting up autoconf (2.69-11.1) ...
#6 8.604 Setting up automake (1:1.16.1-4ubuntu6) ...
#6 8.664 update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
#6 8.664 update-alternatives: warning: skip creation of /usr/share/man/man1/automake.1.gz because associated file /usr/share/man/man1/automake-1.16.1.gz (of link group automake) doesn't exist
#6 8.664 update-alternatives: warning: skip creation of /usr/share/man/man1/aclocal.1.gz because associated file /usr/share/man/man1/aclocal-1.16.1.gz (of link group automake) doesn't exist
#6 8.700 Setting up libltdl-dev:amd64 (2.4.6-14) ...
#6 8.780 Processing triggers for libc-bin (2.31-0ubuntu9.2) ...
#6 DONE 9.4s

#7 [3/5] RUN git clone --depth 1 https://github.com/ARM-software/astc-encoder
#7 sha256:8b3938c20cd08863658d41e6ac85a36b6723d01b82c6a51b94f0ab2a7e29616d
#7 0.507 Cloning into 'astc-encoder'...
#7 DONE 5.9s

#8 [4/5] WORKDIR astc-encoder/Source
#8 sha256:4e6f7aef4f72450ae0ecad360165eed7ed2982e4b9a0a2cf86ea40edfc11c3c6
#8 DONE 0.5s

#10 [5/5] COPY build.sh /src/
#10 sha256:fe6ee50c1a39b5391cbe6f416995ffcc27ecd59ce528e44dd5d79e6a0e681e7d
#10 DONE 0.3s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:3b5a12714d8ad60912fcac6fdb455758e423a93605a1f9333120b0d72ec2d57f
#11 writing image sha256:3b5a12714d8ad60912fcac6fdb455758e423a93605a1f9333120b0d72ec2d57f done
#11 naming to gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder 0.0s done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:3fb79011968333c7af4131081194595899954257e30a450ae254dabbee0992b9
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:21b7cf4fab4cf76f7d56221e51220cc210bc451b77afd5d372c365817618eb43
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder:latest
#3 sha256:f89a37d30b9c5299dc0aefbd01dbf198d4e819f8da88f8704b670fdf67b6bd1e
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder
#5 sha256:1a632afa0ca9b4273f58fc1ea334650e74441d185bac04f7ccb1991dfd23d8b8
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate
#4 sha256:89cf9300870ed6f7e42a60440ef58e197f697f7f01ce40f6d09f669995e84dfc
#4 ERROR: gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder
#5 sha256:1a632afa0ca9b4273f58fc1ea334650e74441d185bac04f7ccb1991dfd23d8b8
#5 DONE 1.2s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:88ab6987e0181b78ea8c93bc17553a012939d6db1466b011c42a6455d612b190
#6 0.371 Cloning into '/afl'...
#6 1.199 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.199 
#6 1.199 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.199 changes and commit them, and you can discard any commits you make in this
#6 1.199 state without impacting any branches by switching back to a branch.
#6 1.199 
#6 1.199 If you want to create a new branch to retain commits you create, you may
#6 1.199 do so (now or later) by using -c with the switch command. Example:
#6 1.199 
#6 1.199   git switch -c <new-branch-name>
#6 1.199 
#6 1.199 Or undo this operation with:
#6 1.199 
#6 1.199   git switch -
#6 1.199 
#6 1.199 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.199 
#6 1.199 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.217 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.218 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.398 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.403 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.821 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.159 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.608 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.756 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.178 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.423 ln -sf afl-as as
#6 5.425 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.428 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.428 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.0s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:5d93d1f992763d2d8f45b5d8e8b805bafb925d48c9b8d6ceff4593e03394d14a
#7 0.763 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.763 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.763 Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.764 Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 0.843 Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 1.791 Reading package lists...
#7 3.337 Reading package lists...
#7 4.889 Building dependency tree...
#7 5.116 Reading state information...
#7 5.381 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.381 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 5.392 --2022-02-17 07:00:50--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.395 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.109.133, 185.199.111.133, 185.199.108.133, ...
#7 5.397 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.109.133|:443... connected.
#7 5.420 HTTP request sent, awaiting response... 200 OK
#7 5.588 Length: 9177 (9.0K) [text/plain]
#7 5.588 Saving to: '/afl/afl_driver.cpp'
#7 5.588 
#7 5.588      0K ........                                              100% 6.75M=0.001s
#7 5.589 
#7 5.589 2022-02-17 07:00:50 (6.75 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.589 
#7 7.502 ar: creating /libAFL.a
#7 DONE 8.1s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:a01c868c0a10672061c9148d3a07b2ac5dd0342c5b5898e858e5a2c7e79d9434 done
#8 naming to gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:70e451ca1b1f2947ae85fe3eec9e15b29fabfc52952f654145a6320b4b290027
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:6218c757f2aa0cddeaa5791accfafae3e33aa3e49116af36a2e1a1cee370df94
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:c49f0b0ef10ccfa62cf9fcc51694c2420386fb5c41bdcad766c4ff9ac1165316
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:34370f1e13a85ef1826cc087cbe74aa842a68f2baf36ab7f88ead6f0f09e86cd
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:dba56c698842526bb9e3b57f3fae960e4df087447298ec85ae461810ad81a3ba
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:3aa57d1f2d4c3e2b67a47f671fff00e9e6e1d628edb131b2a2a4a56522a47b13
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:0ece7459d849f863db9838cf42f9ee18054a66a2509de2aee1abeb46651c7ae8
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:c3a86acdae3fb44919108890d4861f6d2bfdc827d3c1ebe37654229c98736ff3 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:6378e67969ca27f8f7021c49e1cf4611cb665b58464d0201205556d3b62d2f7d
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:1d5cc1ccb03fce1095dfbb8d26b6131473d6d7de91f5d2103c53af30c06ef034
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate:latest
#3 sha256:4e7ba8720de1938bcea2e7bf627af639c9847f5223dbce8940ee771cd7b16498
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:cc5e327c03255843bdfc740feb5ac22ec7f89b4aa642a8183bd83c2adaf84306
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate
#6 sha256:9fa84eae7a63eae92935e7b4f6364949af153abca8c82e1e149855b5f8fc34ed
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder
#5 sha256:706e2c450ee7b12ca444eee384482ff1594a29e2dafe9b95ec774432929e0e85
#5 ERROR: gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:cc5e327c03255843bdfc740feb5ac22ec7f89b4aa642a8183bd83c2adaf84306
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate
#6 sha256:9fa84eae7a63eae92935e7b4f6364949af153abca8c82e1e149855b5f8fc34ed
#6 DONE 0.4s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:d6a5ed65b4afbc655e045efc52ac2750244dd89244d0fb0ceaffd92029685516
#8 DONE 0.5s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:52427a53eefde775eab324643c3f8710f397a7377f880387d6a0c5ef073d0e52
#9 DONE 14.2s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:b7190728d678b1961e30311ec03428743e6d3ce634c499aa42ca8128ecbb1486
#10 DONE 0.2s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:0de2356e326cc7a338888f12c91af3efe0f2055c8e54626ebcc1d67bb4c603ce
#11 DONE 27.7s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:2a0f7f176f0b95c92c791ec9f3f4891f15aa4ec1656b47613447d34046f11f5b
#13 DONE 1.9s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:19cd3769a06586b290f866a54edd2350131032543e1929c672ca0a880d50e0b7
#14 DONE 2.3s

#15 [stage-1  8/13] COPY benchmarks/astc-encoder_astc-encoder/benchmark.yaml /
#15 sha256:ebc98b38f4231d95cdfc2c6c303dd64a1046c10eb04fb6c70bf708d71e7ae459
#15 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:5e0fd70abab8670df4a3017bc214ba2754ebd44d1bba9bf389ab56e89f451fd3
#16 DONE 0.7s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:29d0ce3e59ecbc294abfd47740c140948c21822073a164a0f5118421c5ba0226
#17 DONE 0.3s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:e0b140c7140e09b9eeb90ed9f8d6c96b11227dd4a75e3054e60e254cfc94dd47
#18 0.534 Checking out commit 1d5a2cd8
#18 5.192 From https://github.com/ARM-software/astc-encoder
#18 5.192  * [new tag]         1.3        -> 1.3
#18 5.193  * [new tag]         1.4        -> 1.4
#18 5.193  * [new tag]         1.5        -> 1.5
#18 5.193  * [new tag]         1.6        -> 1.6
#18 5.193  * [new tag]         1.7        -> 1.7
#18 5.193  * [new tag]         2.0        -> 2.0
#18 5.194  * [new tag]         2.1        -> 2.1
#18 5.194  * [new tag]         2.2        -> 2.2
#18 5.194  * [new tag]         2.3        -> 2.3
#18 5.194  * [new tag]         2.4        -> 2.4
#18 5.194  * [new tag]         2.5        -> 2.5
#18 5.195  * [new tag]         3.0        -> 3.0
#18 5.195  * [new tag]         3.1        -> 3.1
#18 5.195  * [new tag]         3.2        -> 3.2
#18 5.195  * [new tag]         3.3        -> 3.3
#18 5.271 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 5.275 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 5.282 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 5.329 Checkout unsuccessful.
#18 DONE 5.7s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:5e6c597061a49ccbbd888acf4634b94eaa4e4b4e0b3bb61f9462239054ac6724
#19 DONE 3.8s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:dfaede054939c16d67e479d0ce2b0b359c5042c65433e16f3b1a7375ae403c32
#20 1.925 Run fuzzer_build to build the target
#20 2.057 FUZZ_TARGET = astc-encoder
#20 2.057 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 2.057 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 2.064 Building benchmark astc-encoder_astc-encoder with fuzzer afl
#20 2.068 + /src/astc-encoder/Source/Fuzzers/build.sh
#20 2.072 astcenc_averages_and_directions
#20 3.520 astcenc_block_sizes
#20 4.605 astcenc_color_quantize
#20 5.847 astcenc_color_unquantize
#20 7.016 astcenc_compress_symbolic
#20 8.451 astcenc_compute_variance
#20 9.707 astcenc_decompress_symbolic
#20 10.88 astcenc_diagnostic_trace
#20 10.92 astcenc_entry
#20 12.50 astcenc_find_best_partitioning
#20 13.64 astcenc_ideal_endpoints_and_weights
#20 15.20 astcenc_image
#20 16.62 astcenc_integer_sequence
#20 17.68 astcenc_mathlib
#20 18.43 astcenc_mathlib_softfloat
#20 19.21 astcenc_partition_tables
#20 20.26 astcenc_percentile_tables
#20 21.33 astcenc_pick_best_endpoint_format
#20 22.55 astcenc_platform_isa_detection
#20 23.57 astcenc_quantization
#20 24.63 astcenc_symbolic_physical
#20 25.68 astcenc_weight_align
#20 26.87 astcenc_weight_quant_xfer_tables
#20 27.91 astcenccli_error_metrics
#20 28.84 astcenccli_image
#20 29.67 astcenccli_image_external
#20 33.86 astcenccli_image_load_store
#20 35.61 astcenccli_platform_dependents
#20 36.42 astcenccli_toplevel
#20 38.02 astcenccli_toplevel_help
#20 40.54 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 42.2s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:54d5f7043e0745c88f704edd3151a37e710fe0e4f308b1821e5da5c91327f7bf 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:8615925dc68b6726a277f5b63d8bc484d3441de11e0ea1365276eb6da6452e9b
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:d644251549aaa38029b51ee3b066e8438fd08d8b88f5cd21405041a0fb02445d
#2 transferring context: 2B done
#2 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/astc-encoder_astc-encoder-intermediate
#4 sha256:e8775943962bef27e695839e73ea1b6dc4b06a08de07adb4ff9f819492eef51a
#4 ERROR: gcr.io/fuzzbench/runners/afl/astc-encoder_astc-encoder-intermediate:latest: not found

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:ef9ef982173dfad3d4f5416df839c3462a8e6768d8e25983af75422d67bd93d7 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/astc-encoder_astc-encoder-intermediate 0.0s done
#6 DONE 0.3s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/astc-encoder_astc-encoder-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:98e2e9900714440de58a68a22e250d2ebe66e9781d89179d4e71ca89433d2258
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:7d39e558a322e969fa22c749a2a312f78270a5b6ba66961ec70e73a67a4e89f5
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder:latest
#4 sha256:d6ffb44876ab8388596a4e7c79b0ddcc466cab5dd0b4e5270bba5fff7797bfe4
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/astc-encoder_astc-encoder-intermediate:latest
#3 sha256:ef5dc4af0f48e6664c04dce94b0525053963ce96cf489d0bb6c31ae706ca835c
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:69e2164727f9561bf3f875f111d7f1be62fa230d2149e940697babd49bf88eea
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/astc-encoder_astc-encoder-intermediate
#6 sha256:6f15fac55943b70fcc85ae528262b1712173b14e4adb86ba1cc21ad1031b844e
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder
#10 sha256:b04c5e6f9b8eb5cbed41bafc11a203221d84e5343c4067912fe96d67019f30c8
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/astc-encoder_astc-encoder
#5 sha256:0284d8ac479d94c6a30df8ff5e8352933745743636194b94efdacba291a83c31
#5 ERROR: gcr.io/fuzzbench/runners/afl/astc-encoder_astc-encoder:latest: not found

#12 [internal] load build context
#12 sha256:69e2164727f9561bf3f875f111d7f1be62fa230d2149e940697babd49bf88eea
#12 transferring context: 18.43MB 0.6s done
#12 DONE 0.9s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder
#10 sha256:b04c5e6f9b8eb5cbed41bafc11a203221d84e5343c4067912fe96d67019f30c8
#10 DONE 2.5s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:0b9827264f6789c62ed70df88f65d73f9ac5d4e476e34dd91932aba163f49e80
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:6df973ddba760103b67965c2eeb0563899dc9aff57301f0e7bd5948f401c03fb
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:e5424dacae99f546e738bca48228a40c184088c87d45859331757f9012714e19
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:37fb19b38d49d9cdc3ea3f16b80824260fc6d9d484e6da7c24f7087d59bdd608
#11 DONE 0.3s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:487dcd5c18674216026898c1c1567bd46307b520cf8f1edf3fd07ef9d8baf98f
#13 DONE 1.6s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:a2f915a3e1d162fbdd3163f172920d1d6c0e455bde6786a1da5c6dda263db791
#14 DONE 0.2s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:f5a66b722be29b8ef7bae9d52d5d3ece336575458bcfa5fd86625ec63123bd65
#15 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:9c2c73442c68ee0c99fd2fb855a2560a3f9b75926cbddce61de14fb56cc35dc7
#16 DONE 0.5s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:9880c7fd48eafc07bc123499df71d5d38931a83dfd22e41fcc732d7d4e19ac87
#17 DONE 0.1s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:df897dd3739061a5a83cfecea0a1f5b9afe22a856f6c77fbb7fb2ee6714b368b
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:adb65b43f79d0b132a51eceab4defe2f782b981d49b09b05649199003482ca78
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:60868099d7c4f2af6874b25220d02d8cf92eb7cf10bc6de5539c488b4b9a559b
#20 DONE 0.8s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:001f6f3b8f229a117f3cf1716e418b78aae75cbff960ce99e875058e69192525
#21 writing image sha256:001f6f3b8f229a117f3cf1716e418b78aae75cbff960ce99e875058e69192525 done
#21 naming to gcr.io/fuzzbench/runners/afl/astc-encoder_astc-encoder done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/astc-encoder_astc-encoder:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7fe06f09ff70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:9bc016d55404bf59be70df9a2922463f7378e0646f2aceefd10b67a2f5ec6261
#2 transferring context: 2B done
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:cc493ad37b997d076a16bcd6244f8514c2867a58c20bfcafff282149e594c323
#1 transferring dockerfile: 32B done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:9bc016d55404bf59be70df9a2922463f7378e0646f2aceefd10b67a2f5ec6261
#2 DONE 0.3s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.9s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder
#4 sha256:00ba58a9f8b64de3d9b02857930a62fb6b25aa68ba310b6d3527b2c721e0fa15
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:0dc33f934dc5edcaa7aca8ca43294d3b72dc855bf47b870da74dc8080dc2c8e3
#9 transferring context: 30B done
#9 DONE 0.1s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:1b680dfd08ff668505b992cdb80d6a0ea43cbc2f7a85f533f40c1edf5f50c5ba
#6 CACHED

#7 [3/5] RUN git clone --depth 1 https://github.com/ARM-software/astc-encoder
#7 sha256:8b3938c20cd08863658d41e6ac85a36b6723d01b82c6a51b94f0ab2a7e29616d
#7 CACHED

#8 [4/5] WORKDIR astc-encoder/Source
#8 sha256:4e6f7aef4f72450ae0ecad360165eed7ed2982e4b9a0a2cf86ea40edfc11c3c6
#8 CACHED

#10 [5/5] COPY build.sh /src/
#10 sha256:f27617f72d9cbb8779d1da21fa234353488c38412e9ceea174839f51e9510b3e
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:3b5a12714d8ad60912fcac6fdb455758e423a93605a1f9333120b0d72ec2d57f 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:8629af226fa06038835dd2527cee9ccca546431c6490d53bd742f5cdcbf1addd
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:2b95186f0f9c1eaf4a9ea398717b5a95425482c4c44af26a0417229081621daa
#2 transferring context: 2B done
#2 DONE 0.3s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder:latest
#3 sha256:f89a37d30b9c5299dc0aefbd01dbf198d4e819f8da88f8704b670fdf67b6bd1e
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate
#4 sha256:89cf9300870ed6f7e42a60440ef58e197f697f7f01ce40f6d09f669995e84dfc
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/astc-encoder_astc-encoder
#5 sha256:1a632afa0ca9b4273f58fc1ea334650e74441d185bac04f7ccb1991dfd23d8b8
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:88ab6987e0181b78ea8c93bc17553a012939d6db1466b011c42a6455d612b190
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:5d93d1f992763d2d8f45b5d8e8b805bafb925d48c9b8d6ceff4593e03394d14a
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:a01c868c0a10672061c9148d3a07b2ac5dd0342c5b5898e858e5a2c7e79d9434
#8 writing image sha256:a01c868c0a10672061c9148d3a07b2ac5dd0342c5b5898e858e5a2c7e79d9434 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:2e4856b4ba5595b2f724334429fe8747c43c957f89f3777739951e174e3ed58a
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:06593fdba6d848806a04f8a4570ca86e9629e5c820373f5be56c3ffd276c0fdb
#2 transferring context: 34B done
#2 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:cea99af446d91a66649613f4a9c89cf1cc09132250b205f331abfb8663784f53
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:f42aae5e97f6b1d24b7be1c28a5788142a1d342226d9db6b63efb3b4d94bb46e
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:9828e76c2d0c58f9402ca08098f4a2662201a8e819751ce3fb6adc529617aee6
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:9142a619902aa11ddfe0ce2888b060d8317dee76a9aa9f6084613d78febe11ad
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:ee1e577b548cdec4e69819e325e854795a1ad2988e65d44ecec0a9b061bddca1
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:c3a86acdae3fb44919108890d4861f6d2bfdc827d3c1ebe37654229c98736ff3
#13 writing image sha256:c3a86acdae3fb44919108890d4861f6d2bfdc827d3c1ebe37654229c98736ff3 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:4eabfa9b02df987c161508911645cccba68b64ecbb4ad3f6a1a4abe55468fa5e
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:28ba7cf1b07b123b793eb5a7620c684d208cd626967a3253ddb577b63aafbcd9
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate:latest
#3 sha256:4e7ba8720de1938bcea2e7bf627af639c9847f5223dbce8940ee771cd7b16498
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder-intermediate
#6 sha256:9fa84eae7a63eae92935e7b4f6364949af153abca8c82e1e149855b5f8fc34ed
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder
#5 sha256:706e2c450ee7b12ca444eee384482ff1594a29e2dafe9b95ec774432929e0e85
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:f5ac1160ecdfb1639b3af8fa3af6feb1d63136e374db69b43388a1683a8a98d5
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.2s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:0868f281199451af22cfafc9138e2d3ab15af80719b5ebd21309609c2e0b28c4
#13 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:b7190728d678b1961e30311ec03428743e6d3ce634c499aa42ca8128ecbb1486
#10 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:0b6518ca98bae87bf05f1b85f9a5c1483ba3f7b2053d0e2f128dcecbe0345f2d
#18 CACHED

#15 [stage-1  8/13] COPY benchmarks/astc-encoder_astc-encoder/benchmark.yaml /
#15 sha256:e4a395d4280bf2379b9cf9cea2c78ab52c641f5af698b05b1cc9682c5247e8a4
#15 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:22138b7bf93409fdcb120012a6601fcb32f08cf4dfecfd61c809ac48704d013d
#16 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:d6a5ed65b4afbc655e045efc52ac2750244dd89244d0fb0ceaffd92029685516
#8 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:2d1d83d99ebf4e213a96268a473d355d40d6683da579f86edc324cf3dfae2b04
#14 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:bc4856100582cfd1de951b5c442a075973975b4c0d6ea4a04155402cf46888d1
#17 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:6da33a28d800fe45f94c384e10b646bc8e8e5113c91fd8a3761abe8f3b1e457d
#19 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:52427a53eefde775eab324643c3f8710f397a7377f880387d6a0c5ef073d0e52
#9 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:0de2356e326cc7a338888f12c91af3efe0f2055c8e54626ebcc1d67bb4c603ce
#11 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:397be9bb302c1ea1823d2ab8258f88b9d9828dfb94dd66282a39c0df505e76ab
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:54d5f7043e0745c88f704edd3151a37e710fe0e4f308b1821e5da5c91327f7bf 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder done
#21 DONE 0.5s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:08820c699e10da2ffad42ce4b83ed9f72c9e0b1e5b89ccae029fb3bc94e28605
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:1e0534de52b875bfd1e542adc696ba4036e600bfe011877cd284a10f4bcb1bb3
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/astc-encoder_astc-encoder-intermediate
#4 sha256:e8775943962bef27e695839e73ea1b6dc4b06a08de07adb4ff9f819492eef51a
#4 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:ef9ef982173dfad3d4f5416df839c3462a8e6768d8e25983af75422d67bd93d7 done
#6 naming to gcr.io/fuzzbench/runners/afl/astc-encoder_astc-encoder-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:bab9b235e978897ea181acb3ec8a2b72148a2efe72bd0ca052310300472bd723
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:03d8ea5dde6b1aed708bdf0a2b42f896bd5d751e39b66d0fd84d1455c04bdb50
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/astc-encoder_astc-encoder-intermediate:latest
#3 sha256:ef5dc4af0f48e6664c04dce94b0525053963ce96cf489d0bb6c31ae706ca835c
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder:latest
#4 sha256:d6ffb44876ab8388596a4e7c79b0ddcc466cab5dd0b4e5270bba5fff7797bfe4
#4 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/astc-encoder_astc-encoder-intermediate
#6 sha256:6f15fac55943b70fcc85ae528262b1712173b14e4adb86ba1cc21ad1031b844e
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/astc-encoder_astc-encoder
#5 sha256:0284d8ac479d94c6a30df8ff5e8352933745743636194b94efdacba291a83c31
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/astc-encoder_astc-encoder
#10 sha256:b04c5e6f9b8eb5cbed41bafc11a203221d84e5343c4067912fe96d67019f30c8
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:f79bb4ed6e7ba354b9a49247b9414a2b5be2617065890cd4d98c07740450f976
#12 transferring context: 18.43MB 0.6s done
#12 DONE 0.8s

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:e5424dacae99f546e738bca48228a40c184088c87d45859331757f9012714e19
#9 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:8e4ac20a9cac6534309aad8dda4f557de3cab021d7481281c3925820b81e3ebe
#15 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:ef0b7358369d9cfdfde663762dde386ec3733e85eab41966933e464b42057d1d
#17 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:37fb19b38d49d9cdc3ea3f16b80824260fc6d9d484e6da7c24f7087d59bdd608
#11 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:46e17840f4260925be86449e25ce57054b73b20a032094174252b48d74115f65
#19 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:6df973ddba760103b67965c2eeb0563899dc9aff57301f0e7bd5948f401c03fb
#8 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:0b9827264f6789c62ed70df88f65d73f9ac5d4e476e34dd91932aba163f49e80
#7 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:b4e1fdb08938d09c7edd0ea6185eb686525ca5b22fcb08e9f886951d56dd96ab
#14 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:f402f4f39b531866cb52aabd7a69b9a08cadd1f03f147597e3b9581459ea3d47
#18 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:5b5cfe43969d954d89e17ab503fde082811bb6574634abccf9f0afe1455cbc4f
#13 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:c7e593899853b821bc7bbe3c9043b786b579f2075ff6da4e6c445cb820feaeca
#16 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:66ebe13844a48d52d879f6cd6263fb48400920da63385546a0bc701d677eeceb
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:001f6f3b8f229a117f3cf1716e418b78aae75cbff960ce99e875058e69192525 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/astc-encoder_astc-encoder done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7feb50e41f70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
