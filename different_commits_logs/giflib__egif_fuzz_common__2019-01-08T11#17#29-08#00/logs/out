WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: giflib_egif_fuzz_common.
INFO:root:Please run "make test-run-afl-giflib_egif_fuzz_common" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:1ee3d60f88ebbc17f43ed8afcadb98e7cc353fae81c75b822826e049a9f2f004
#1 transferring dockerfile: 955B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:71654a4dc17eaedbed1e22bb0c2bfbfc4e78516edfef67e531cdb5c60aeb10b1
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#8 [internal] load build context
#8 sha256:e18c6965ae551c3e465abc0c8a4bd4fcd1b5123ea144f5954cbc11a4dc0f4aec
#8 DONE 0.0s

#5 [1/4] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/giflib_egif_fuzz_common
#4 sha256:f7efcc5c6c69ef7aa197ed07a53c2a6d5aacb68776e29d51665103a87b06dcd8
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/giflib_egif_fuzz_common:latest: not found

#5 [1/4] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 CACHED

#8 [internal] load build context
#8 sha256:e18c6965ae551c3e465abc0c8a4bd4fcd1b5123ea144f5954cbc11a4dc0f4aec
#8 transferring context: 2.69kB done
#8 DONE 0.6s

#6 [2/4] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#6 sha256:a587be800eff3db9649c494a314142e0f82c6b32aaa614a59f9c6ea84c95a75a
#6 0.972 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#6 0.972 Get:2 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#6 0.972 Hit:3 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 0.977 Get:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#6 1.076 Get:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#6 1.510 Get:6 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1557 kB]
#6 1.673 Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [755 kB]
#6 1.684 Get:8 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [657 kB]
#6 1.744 Get:9 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [974 kB]
#6 1.835 Get:10 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [841 kB]
#6 1.917 Get:11 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [467 kB]
#6 1.963 Get:12 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1135 kB]
#6 2.054 Get:13 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [828 kB]
#6 2.116 Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [1042 kB]
#6 2.196 Get:15 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1984 kB]
#6 2.604 Fetched 10.6 MB in 2s (6285 kB/s)
#6 2.604 Reading package lists...
#6 4.101 Reading package lists...
#6 5.530 Building dependency tree...
#6 5.742 Reading state information...
#6 5.951 make is already the newest version (4.2.1-1.2).
#6 5.951 make set to manually installed.
#6 5.951 wget is already the newest version (1.20.3-1ubuntu2).
#6 5.951 The following additional packages will be installed:
#6 5.953   autotools-dev libltdl-dev libltdl7 libsigsegv2 m4
#6 5.955 Suggested packages:
#6 5.955   autoconf-archive gnu-standards autoconf-doc gettext libtool-doc gfortran
#6 5.955   | fortran95-compiler gcj-jdk m4-doc
#6 5.997 The following NEW packages will be installed:
#6 6.000   autoconf automake autotools-dev libltdl-dev libltdl7 libsigsegv2 libtool m4
#6 6.071 0 upgraded, 8 newly installed, 0 to remove and 1 not upgraded.
#6 6.071 Need to get 1457 kB of archives.
#6 6.071 After this operation, 6651 kB of additional disk space will be used.
#6 6.071 Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 libsigsegv2 amd64 2.12-2 [13.9 kB]
#6 6.096 Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 m4 amd64 1.4.18-4 [199 kB]
#6 6.165 Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 autoconf all 2.69-11.1 [321 kB]
#6 6.196 Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 autotools-dev all 20180224.1 [39.6 kB]
#6 6.199 Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 automake all 1:1.16.1-4ubuntu6 [522 kB]
#6 6.238 Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl7 amd64 2.4.6-14 [38.5 kB]
#6 6.241 Get:7 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl-dev amd64 2.4.6-14 [162 kB]
#6 6.253 Get:8 http://archive.ubuntu.com/ubuntu focal/main amd64 libtool all 2.4.6-14 [161 kB]
#6 6.476 debconf: delaying package configuration, since apt-utils is not installed
#6 6.528 Fetched 1457 kB in 0s (5756 kB/s)
#6 6.572 Selecting previously unselected package libsigsegv2:amd64.
#6 6.572 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21291 files and directories currently installed.)
#6 6.593 Preparing to unpack .../0-libsigsegv2_2.12-2_amd64.deb ...
#6 6.604 Unpacking libsigsegv2:amd64 (2.12-2) ...
#6 6.649 Selecting previously unselected package m4.
#6 6.652 Preparing to unpack .../1-m4_1.4.18-4_amd64.deb ...
#6 6.658 Unpacking m4 (1.4.18-4) ...
#6 6.723 Selecting previously unselected package autoconf.
#6 6.726 Preparing to unpack .../2-autoconf_2.69-11.1_all.deb ...
#6 6.729 Unpacking autoconf (2.69-11.1) ...
#6 6.809 Selecting previously unselected package autotools-dev.
#6 6.812 Preparing to unpack .../3-autotools-dev_20180224.1_all.deb ...
#6 6.818 Unpacking autotools-dev (20180224.1) ...
#6 6.872 Selecting previously unselected package automake.
#6 6.875 Preparing to unpack .../4-automake_1%3a1.16.1-4ubuntu6_all.deb ...
#6 6.881 Unpacking automake (1:1.16.1-4ubuntu6) ...
#6 6.976 Selecting previously unselected package libltdl7:amd64.
#6 6.979 Preparing to unpack .../5-libltdl7_2.4.6-14_amd64.deb ...
#6 6.983 Unpacking libltdl7:amd64 (2.4.6-14) ...
#6 7.021 Selecting previously unselected package libltdl-dev:amd64.
#6 7.024 Preparing to unpack .../6-libltdl-dev_2.4.6-14_amd64.deb ...
#6 7.028 Unpacking libltdl-dev:amd64 (2.4.6-14) ...
#6 7.090 Selecting previously unselected package libtool.
#6 7.093 Preparing to unpack .../7-libtool_2.4.6-14_all.deb ...
#6 7.097 Unpacking libtool (2.4.6-14) ...
#6 7.172 Setting up autotools-dev (20180224.1) ...
#6 7.182 Setting up libsigsegv2:amd64 (2.12-2) ...
#6 7.193 Setting up libltdl7:amd64 (2.4.6-14) ...
#6 7.204 Setting up libtool (2.4.6-14) ...
#6 7.215 Setting up m4 (1.4.18-4) ...
#6 7.229 Setting up autoconf (2.69-11.1) ...
#6 7.251 Setting up automake (1:1.16.1-4ubuntu6) ...
#6 7.268 update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
#6 7.269 update-alternatives: warning: skip creation of /usr/share/man/man1/automake.1.gz because associated file /usr/share/man/man1/automake-1.16.1.gz (of link group automake) doesn't exist
#6 7.269 update-alternatives: warning: skip creation of /usr/share/man/man1/aclocal.1.gz because associated file /usr/share/man/man1/aclocal-1.16.1.gz (of link group automake) doesn't exist
#6 7.277 Setting up libltdl-dev:amd64 (2.4.6-14) ...
#6 7.295 Processing triggers for libc-bin (2.31-0ubuntu9.2) ...
#6 DONE 7.5s

#7 [3/4] RUN git clone --depth=1 https://git.code.sf.net/p/giflib/code /src/giflib-code
#7 sha256:f4e7eaea19103b0d6206c0962c428e33814ae7f358056e02d2c366863882b48c
#7 0.482 Cloning into '/src/giflib-code'...
#7 DONE 3.5s

#9 [4/4] COPY *.c *.options build.sh /src/
#9 sha256:fb5953b1db5c1655b67fdd10cb80a564f9572a8f524d2a17e31f36a0c6c88266
#9 DONE 0.1s

#10 exporting to image
#10 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#10 exporting layers done
#10 writing image sha256:b4209e8de57865e3e87571c2da6dce32b9dec53d03ab5f1115164c2f51b22093 done
#10 naming to gcr.io/fuzzbench/builders/benchmark/giflib_egif_fuzz_common done
#10 DONE 0.1s

#11 exporting cache
#11 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#11 preparing build cache for export done
#11 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/giflib_egif_fuzz_common:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:928d7b08656649dfc961fab337eeddbb54b08b3dd3ef308f694daa3333441223
#1 DONE 0.0s

#1 [internal] load build definition from builder.Dockerfile
#1 sha256:928d7b08656649dfc961fab337eeddbb54b08b3dd3ef308f694daa3333441223
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:3cd98aa570b9b09ae6ba3fe489eeff0bd3eb9abef21d919a8a43de92b1c4a9cb
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/giflib_egif_fuzz_common:latest
#3 sha256:91730388cb169e2effb90340e1124ca9872e87a9d51ec828742146c1cd2dae52
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/giflib_egif_fuzz_common
#5 sha256:cddb3469eff7ccdd6d169d9d214d9f713cf5e9982603dcb6a97c2a54ac379047
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/giflib_egif_fuzz_common-intermediate
#4 sha256:1bff89f2af7036b697b26279e4ce404d1589cc74e9e976d6fe9eae041d825b84
#4 ERROR: gcr.io/fuzzbench/builders/afl/giflib_egif_fuzz_common-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/giflib_egif_fuzz_common
#5 sha256:cddb3469eff7ccdd6d169d9d214d9f713cf5e9982603dcb6a97c2a54ac379047
#5 DONE 0.2s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:6a7ac23bb246275a1f89639b6877885bad1733c6e24ac8bda720fd9a86878c12
#6 0.360 Cloning into '/afl'...
#6 1.126 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.126 
#6 1.126 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.126 changes and commit them, and you can discard any commits you make in this
#6 1.126 state without impacting any branches by switching back to a branch.
#6 1.126 
#6 1.126 If you want to create a new branch to retain commits you create, you may
#6 1.126 do so (now or later) by using -c with the switch command. Example:
#6 1.126 
#6 1.126   git switch -c <new-branch-name>
#6 1.126 
#6 1.126 Or undo this operation with:
#6 1.126 
#6 1.126   git switch -
#6 1.126 
#6 1.126 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.126 
#6 1.126 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.144 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.144 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.327 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.332 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.697 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.019 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.446 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.600 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 4.998 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.235 ln -sf afl-as as
#6 5.237 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.240 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.241 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 5.4s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:009eaebc383fdc906121699ceca5285567432bf7f8c6b6eeb90bc380560132ba
#7 0.665 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.665 Hit:2 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 0.665 Hit:3 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.669 Hit:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.691 Hit:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 1.513 Reading package lists...
#7 3.006 Reading package lists...
#7 4.455 Building dependency tree...
#7 4.667 Reading state information...
#7 4.913 wget is already the newest version (1.20.3-1ubuntu2).
#7 4.913 0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
#7 4.918 --2022-02-17 21:50:13--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 4.920 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.110.133, 185.199.111.133, 185.199.108.133, ...
#7 4.923 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.110.133|:443... connected.
#7 4.946 HTTP request sent, awaiting response... 200 OK
#7 5.146 Length: 9177 (9.0K) [text/plain]
#7 5.146 Saving to: '/afl/afl_driver.cpp'
#7 5.147 
#7 5.147      0K ........                                              100% 11.8M=0.001s
#7 5.147 
#7 5.147 2022-02-17 21:50:13 (11.8 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.147 
#7 6.877 ar: creating /libAFL.a
#7 DONE 7.0s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:37a6e417d74265f6d66218e15e6d5c1a49ea6889417d694f70e92f8e76a7c8c7
#8 writing image sha256:37a6e417d74265f6d66218e15e6d5c1a49ea6889417d694f70e92f8e76a7c8c7 done
#8 naming to gcr.io/fuzzbench/builders/afl/giflib_egif_fuzz_common-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/giflib_egif_fuzz_common-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:b54199999bbd02591b15040fc0f2d5995990b1321db011d7c95959a1f0697b2c
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:97ec257e1f4a1e1482df3b861da5e3691f653023b5992bffcfb217702dec21b6
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:2cf2bcc7d8635ff90b73cad96a65db23dfd94afbaf70b029a9d973b08840b1e2
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:fdc325d70fee53aea52d9276e702dcd3ac6c53aaf5db95e16cdb1a951586f957
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:e672de2512344d62a0fe3c58f7d52c263a96b57287df16a614641e0ae2003d0f
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:8a8cde266dd4bdf11e61e0f9919a196928b43c37f7658a628b0e47e35daec7f5
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:e558e1fe8c388e37c612e486bdf91b40b3a95fb9917c264cea9f4fd1e42f93eb
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:e3cbf82bbc2eea9bcaeb0a2efba8829ab74e1fad630072948e4c61a55f2e7824 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:eb464b01239fc7d579a6603908b7d502909c18e1b97ae01ddfff1634777240e9
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:8b21e02a8de6b396c6c4b84daf7d4a1fbbfcd1abe55b3970df599e0d2af30208
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/giflib_egif_fuzz_common-intermediate:latest
#3 sha256:ba35042393764c5959a838173c87edf35c3cb6c1bdb0728ac58a46104f6373e5
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:e3c6d2fd5583fee4cd88da80ee572111da97c91d58dc6e758c7cbeb31c4892b2
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/giflib_egif_fuzz_common-intermediate
#6 sha256:cc9f73a34a470911578c9c055536c84c2739efe9bf9a6daecee44799c8900e23
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/giflib_egif_fuzz_common
#5 sha256:5f3ff707bc6af8ca0ffc5974319fc654ad78a91179e4f1c9e9a5a9c72c6695f6
#5 ERROR: gcr.io/fuzzbench/builders/afl/giflib_egif_fuzz_common:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:e3c6d2fd5583fee4cd88da80ee572111da97c91d58dc6e758c7cbeb31c4892b2
#12 transferring context: 669.89kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/giflib_egif_fuzz_common-intermediate
#6 sha256:cc9f73a34a470911578c9c055536c84c2739efe9bf9a6daecee44799c8900e23
#6 DONE 0.2s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:31152dd325ecc4d4db6dfc623d65041619517379fbaf498486addad8b6fb6ade
#8 DONE 0.4s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:f206d4ba18d72d4bab4d830923c5789aa7f0d786d9c79daad5ebbf76d52226d3
#9 DONE 12.4s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:89d3b1fc1ae174a423a5d47e924cdca4de0bf05ab237c318fe22d1953947235e
#10 DONE 0.3s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:8103a397b26e70f03de8df778cbc1510e194c610028651fb4204b11d80810650
#11 DONE 19.4s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:aac70d6e5ddebb67495e895e269aefc7e3f6d31f5e7a1e56711ebdeb1e087a42
#13 DONE 0.5s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:180b3b518e3327e6bdb020496d59cc781f45ab20b757b3a1eec165da19fc6e95
#14 DONE 1.4s

#15 [stage-1  8/13] COPY benchmarks/giflib_egif_fuzz_common/benchmark.yaml /
#15 sha256:fe3407cf87b3f6903a52ff88e518d6894be55e1c8d2fecca3429867d66854c5f
#15 DONE 0.4s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:f866dd3d3720131eeb8f92290af9385ddf9b6337374b6884fbe1aa455a7e41e1
#16 DONE 0.8s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:0a568658b924042ea3ef263ca48bbc32707e6ed800d7b5ad97737552391c05b5
#17 DONE 0.4s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:c5a26b252702a443b1f0b9ece5ef3c951a712e64e0c7facd2349db8320a3d366
#18 0.625 Checking out commit 834a138b
#18 10.13 error: pathspec '834a138b' did not match any file(s) known to git
#18 10.13 error: pathspec '834a138b' did not match any file(s) known to git
#18 10.14 error: pathspec '834a138b' did not match any file(s) known to git
#18 10.22 Checkout unsuccessful.
#18 DONE 11.2s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:ba5633ed2abd6b23ea380a6013ccbd6c3132b76db67918f9171a7a3248a4c418
#19 DONE 1.0s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:f259a6042e363c973ad0dca08d7843da1c7520b84a843a6f636c0ca79c64c0e8
#20 0.552 Run fuzzer_build to build the target
#20 0.709 FUZZ_TARGET = egif_fuzz_common
#20 0.709 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.709 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.718 Building benchmark giflib_egif_fuzz_common with fuzzer afl
#20 0.721 + cd /src/giflib-code
#20 0.721 + ./autogen.sh
#20 0.722 /src/build.sh: line 2: ./autogen.sh: No such file or directory
#20 0.722 Traceback (most recent call last):
#20 0.722   File "<string>", line 1, in <module>
#20 0.723   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 0.723     utils.build_benchmark()
#20 0.723   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 0.723     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 0.723   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 0.723     raise CalledProcessError(retcode, cmd)
#20 0.723 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 127.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/giflib_egif_fuzz_common:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2798981: .afl-giflib_egif_fuzz_common-builder] Error 1
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:5abed21fd6cdb81ee0e86da1954dd22272d6c34828a43cd3d87cdbc09e32e382
#1 transferring dockerfile: 32B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:4565e938150db2db6b85a61a15152b3e3d2eb57928588f99d771fd9ed3286aee
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.7s

#5 [1/4] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/giflib_egif_fuzz_common
#4 sha256:f7efcc5c6c69ef7aa197ed07a53c2a6d5aacb68776e29d51665103a87b06dcd8
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:5ca2b6bf7fe235d2961cb76baf9c9411f7ee213ca82259dce418790964b8035e
#8 transferring context: 101B done
#8 DONE 0.6s

#6 [2/4] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#6 sha256:a587be800eff3db9649c494a314142e0f82c6b32aaa614a59f9c6ea84c95a75a
#6 CACHED

#7 [3/4] RUN git clone --depth=1 https://git.code.sf.net/p/giflib/code /src/giflib-code
#7 sha256:f4e7eaea19103b0d6206c0962c428e33814ae7f358056e02d2c366863882b48c
#7 CACHED

#9 [4/4] COPY *.c *.options build.sh /src/
#9 sha256:0ccd3545eab32b12a957cb33aeacebc385f10bb515513c4e8c0ac1e0632ffa2d
#9 CACHED

#10 exporting to image
#10 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#10 exporting layers done
#10 writing image sha256:b4209e8de57865e3e87571c2da6dce32b9dec53d03ab5f1115164c2f51b22093
#10 writing image sha256:b4209e8de57865e3e87571c2da6dce32b9dec53d03ab5f1115164c2f51b22093 0.1s done
#10 naming to gcr.io/fuzzbench/builders/benchmark/giflib_egif_fuzz_common done
#10 DONE 1.8s

#11 exporting cache
#11 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#11 preparing build cache for export done
#11 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:472ce6da2e6e54a294f5005b75ac0ab110a555ab276b63387cf85809e35bfef1
#1 transferring dockerfile:
#1 transferring dockerfile: 46B done
#1 DONE 0.8s

#2 [internal] load .dockerignore
#2 sha256:810b1b1289d6bdb6435376488b6e149b7c78d847813a9fed369410515dba9f32
#2 transferring context: 2B done
#2 DONE 1.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/giflib_egif_fuzz_common:latest
#3 sha256:91730388cb169e2effb90340e1124ca9872e87a9d51ec828742146c1cd2dae52
#3 DONE 0.0s

#7 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/giflib_egif_fuzz_common
#7 sha256:cddb3469eff7ccdd6d169d9d214d9f713cf5e9982603dcb6a97c2a54ac379047
#7 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/giflib_egif_fuzz_common-intermediate
#4 sha256:1bff89f2af7036b697b26279e4ce404d1589cc74e9e976d6fe9eae041d825b84
#4 DONE 0.0s

#5 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#5 sha256:6a7ac23bb246275a1f89639b6877885bad1733c6e24ac8bda720fd9a86878c12
#5 CACHED

#6 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#6 sha256:009eaebc383fdc906121699ceca5285567432bf7f8c6b6eeb90bc380560132ba
#6 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:37a6e417d74265f6d66218e15e6d5c1a49ea6889417d694f70e92f8e76a7c8c7 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/giflib_egif_fuzz_common-intermediate done
#8 DONE 1.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:ba46543f1347cbb26431eb57f1ba08eebe1c9e983fc3c3234372a827ed26ed9a
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:6334cdb55142b690450d37933944f37bf092132eb8c372c8af3ec156a8c94cb2
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:5fc4636fa7f95f3019b9181e1085d830539d62e5d6f846158a575834dad4728d
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:d064ad85b0c520219b9cae8a60e4826420107d783fb13b9ed590335fbbc4d080
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:843e847f1fd0c707f80e8c00b2313c187ff43ac313afdc5ad65c9412b901bc16
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:66490dbfe0ec52725ea4cd687cead997acea0debb1595fd85d8703004b5221f6
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:ecfe58472b16e14db9bf5178196ab7a7edc30635de41f91baa1c5db62f0353a4
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:e3cbf82bbc2eea9bcaeb0a2efba8829ab74e1fad630072948e4c61a55f2e7824
#13 writing image sha256:e3cbf82bbc2eea9bcaeb0a2efba8829ab74e1fad630072948e4c61a55f2e7824 done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:d4ac353a7ff77128813d823cc211a46a5e3ae7d4b453a84b91905f98e5716e64
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:3ad094f69623b0d09029956ff4e0b10efd24441f90a7fec4aa0a0fea91eb2449
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/giflib_egif_fuzz_common-intermediate:latest
#3 sha256:ba35042393764c5959a838173c87edf35c3cb6c1bdb0728ac58a46104f6373e5
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:85d4f8af8edb3e0acb17098ec5c6feda2b7adf67c2a965c1055c1de5fd810d61
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/giflib_egif_fuzz_common-intermediate
#6 sha256:cc9f73a34a470911578c9c055536c84c2739efe9bf9a6daecee44799c8900e23
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/giflib_egif_fuzz_common
#5 sha256:5f3ff707bc6af8ca0ffc5974319fc654ad78a91179e4f1c9e9a5a9c72c6695f6
#5 ERROR: gcr.io/fuzzbench/builders/afl/giflib_egif_fuzz_common:latest: not found

#12 [internal] load build context
#12 sha256:85d4f8af8edb3e0acb17098ec5c6feda2b7adf67c2a965c1055c1de5fd810d61
#12 transferring context: 669.89kB 0.1s done
#12 DONE 0.8s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:0fe563d21f0c1ce8c43ba4b4d87b6864db30e730f133b4fe8660f79856e064e8
#17 CACHED

#15 [stage-1  8/13] COPY benchmarks/giflib_egif_fuzz_common/benchmark.yaml /
#15 sha256:6ef3ba048dbccaba62502fa7ec175da63cfdc565d3f91e8abc7ac5a8b3748e46
#15 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:31152dd325ecc4d4db6dfc623d65041619517379fbaf498486addad8b6fb6ade
#8 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:89d3b1fc1ae174a423a5d47e924cdca4de0bf05ab237c318fe22d1953947235e
#10 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:a63a1c7727affad2af7ffaab8e5c5a1c3010ce0017069611e167e25190085f77
#14 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:06d4f1bb2b4e30ec3d5aef87821d24e521750b70625e885431fba2b0251139d5
#16 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:f206d4ba18d72d4bab4d830923c5789aa7f0d786d9c79daad5ebbf76d52226d3
#9 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:8103a397b26e70f03de8df778cbc1510e194c610028651fb4204b11d80810650
#11 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:b8b1797db1be3da858f8d809b639807f7843959e5750cfbaa56efadbb79f5b72
#18 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:32eb3a9fcf4eda8b99c03f71ac7cfe790eae9d9e1da4a9228ea1259b0b486578
#13 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:86d81d4fcf5006f51f6ffa38f255e074f101f30839256941c8cd141915a38eca
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:49ce984a37131861f5702053cd7bef23dffaf0f85402c081c6b50c86b4881f55
#20 0.456 Run fuzzer_build to build the target
#20 0.580 FUZZ_TARGET = egif_fuzz_common
#20 0.580 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.580 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.585 Building benchmark giflib_egif_fuzz_common with fuzzer afl
#20 0.588 + cd /src/giflib-code
#20 0.588 + ./autogen.sh
#20 0.589 /src/build.sh: line 2: ./autogen.sh: No such file or directory
#20 0.589 Traceback (most recent call last):
#20 0.589   File "<string>", line 1, in <module>
#20 0.589   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 0.590     utils.build_benchmark()
#20 0.590   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 0.590     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 0.590   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 0.590     raise CalledProcessError(retcode, cmd)
#20 0.590 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 127.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/giflib_egif_fuzz_common:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2798981: .afl-giflib_egif_fuzz_common-builder] Error 1
