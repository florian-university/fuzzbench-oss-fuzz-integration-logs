WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: example_example.
INFO:root:Please run "make test-run-afl-example_example" to test integration.
#2 [internal] load .dockerignore
#2 sha256:f25cb0cbd9b5998fbf4822d7d74e626b6c7c0aabd8684119d99594315264b044
#2 transferring context: 2B done
#2 DONE 0.1s

#1 [internal] load build definition from Dockerfile
#1 sha256:0c36bec4ae67f885ec5a6b7ccc70d541dcce7ab7eb79d7198c85c40975688fc6
#1 transferring dockerfile: 32B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#9 [internal] load build context
#9 sha256:65578ab0f884fe7dd87799d1ab77f6c5d2ff7c4f66d0538a262c2fd3da770c93
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:f4e5ea12494fab091c5d830cf803b3421f2860f729b9d1b07da44924396cf8cf
#5 sha256:ef290950573a2779ee526af357b28fbddfc20d7409aa51f58f777c9e972cba29
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/example_example
#4 sha256:fee6f207abbeb47bb7bd3b02d1b477250838d9840b3281959d3fb57bdbff2ed0
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/example_example:latest: not found

#9 [internal] load build context
#9 sha256:65578ab0f884fe7dd87799d1ab77f6c5d2ff7c4f66d0538a262c2fd3da770c93
#9 transferring context: 1.38kB done
#9 DONE 0.1s

#7 [3/5] RUN git clone https://github.com/google/oss-fuzz.git my-git-repo
#7 sha256:15eb201c20ac354c2d73bb9b5e82ad2a07faffabcab2c9f293379986dabe5237
#7 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make
#6 sha256:c655d45ce477be96b5f3a9f7ab5c78e25aa68f6ca8d817add7b8a6700bcfa389
#6 CACHED

#8 [4/5] WORKDIR my-git-repo
#8 sha256:8a0fb832d74c5be84fe305021da0718077399fac99b8e66a0453ed6f0774810e
#8 CACHED

#10 [5/5] COPY build.sh /src/
#10 sha256:225ddafab2d159022f4e77cbadad60774926d2164dc933beb28c381dd5a5feb9
#10 DONE 0.3s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:9e13da6e1fd504fc780e1690c08090bc07f2b4b5b1c3ca3e5bc4fd0ed6c46db8 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/example_example done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/example_example:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:7d9825e55af93cb608e600cb7eb166ba825667f7119cb41ed78681e8d1f46a42
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:73b9918540b7d5bd1538c4a812e4c2631d6631079536ac672f20cbc74fa79032
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/example_example:latest
#3 sha256:df176d56e8a51f436b3c86f96291547209b1b5db7e4c33909b19098aed62efc8
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/example_example
#5 sha256:5b6528e636d73d74d9ab1e353858392f2a9c07477c844af0e75cd09ab245a0a2
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/example_example-intermediate
#4 sha256:43ee9f70b6b973c6ed65ff4fec8a248e151a9aa033c91c1bd6a5bc9f0359a7cb
#4 ERROR: gcr.io/fuzzbench/builders/afl/example_example-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/example_example
#5 sha256:5b6528e636d73d74d9ab1e353858392f2a9c07477c844af0e75cd09ab245a0a2
#5 DONE 0.2s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:b285f1142e5daee217deec12dab7e8d29098dab8a15653f2c6e258d45084ac44
#6 0.409 Cloning into '/afl'...
#6 1.247 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.247 
#6 1.247 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.247 changes and commit them, and you can discard any commits you make in this
#6 1.247 state without impacting any branches by switching back to a branch.
#6 1.247 
#6 1.247 If you want to create a new branch to retain commits you create, you may
#6 1.247 do so (now or later) by using -c with the switch command. Example:
#6 1.247 
#6 1.247   git switch -c <new-branch-name>
#6 1.247 
#6 1.247 Or undo this operation with:
#6 1.247 
#6 1.247   git switch -
#6 1.247 
#6 1.247 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.247 
#6 1.247 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.302 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.303 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.483 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.488 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.872 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.185 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.614 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.774 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.168 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.405 ln -sf afl-as as
#6 5.407 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.409 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.410 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.0s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:c8e4aa17d13d970420faa6fbab5de9065dcf5fde84cc3f84625114a57d569279
#7 0.773 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.773 Get:2 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#7 0.988 Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease
#7 1.012 Get:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#7 1.116 Get:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#7 1.650 Fetched 336 kB in 1s (343 kB/s)
#7 1.650 Reading package lists...
#7 3.748 Reading package lists...
#7 5.164 Building dependency tree...
#7 5.374 Reading state information...
#7 5.620 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.620 0 upgraded, 0 newly installed, 0 to remove and 3 not upgraded.
#7 5.765 --2022-02-16 00:37:07--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.766 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...
#7 5.768 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.
#7 5.790 HTTP request sent, awaiting response... 200 OK
#7 5.809 Length: 9177 (9.0K) [text/plain]
#7 5.809 Saving to: '/afl/afl_driver.cpp'
#7 5.810 
#7 5.810      0K ........                                              100% 9.97M=0.001s
#7 5.810 
#7 5.810 2022-02-16 00:37:08 (9.97 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.810 
#7 7.570 ar: creating /libAFL.a
#7 DONE 7.9s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:d4cc85d9f0639b34087e43ffa928d75e177f190cdbc71eb7e0597358eda7fc4b done
#8 naming to gcr.io/fuzzbench/builders/afl/example_example-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/example_example-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:b0dca678335d3178678b510bf0aa9057d404d6ce2b31f685c3a298ae839b6c82
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:f4624df5975b66972a3e317037ca57becd36df15cfdb464eced9de19ada2bd5f
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:2efb77c924dee7f543261b6fb1ff0c89d980a4da56a5bdc1c6d41abc20136e84
#8 transferring context: 559B 0.1s done
#8 DONE 0.2s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:c35f374fc7495b9f95542655d02016ccc0bd740d4855c5e2a24ce858ce4dd02c
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:77ec27bee0bdbe59f065d0ce3eb94d1c5efb8bde68b04f235fe1de0669164e4d
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:db6f4cfe77612b91a15ccd06a399e4ec70a7dbf89a64f5a9dcdad36621d33027
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:b6cc895c92cf27ba50e909539259004a44174fecff43e94d0f1bb649027160fe
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:6064e81d05bab96a20f65f4aa65baa43809db26b42dc27734dc971bb5c1e7ddc
#2 transferring context: 34B done
#2 DONE 0.1s

#1 [internal] load build definition from Dockerfile
#1 sha256:4bbefb161a80917c61f1fc7deddcc4927f754c83b591cf181c780f419dda5c26
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.2s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/example_example-intermediate:latest
#3 sha256:4278bbecc26eae4743ecc1a35d647ebf1810777349471b081a5c7fa3951ea7a8
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:20ff6143cbd1151525f458ecee57680ea48824c2f9c7a7b0632a564d9677bf14
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/example_example-intermediate
#6 sha256:f2a483c23e71fe387dbac1e71cf5a28c14701b914a5e2fdddac1acb1d7d76ab9
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/example_example
#5 sha256:55081e2dd948c0bab9d8c2a25515e4d9adc2b2265ee0db17c431ae2796c7e8ac
#5 ERROR: gcr.io/fuzzbench/builders/afl/example_example:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:20ff6143cbd1151525f458ecee57680ea48824c2f9c7a7b0632a564d9677bf14
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/example_example-intermediate
#6 sha256:f2a483c23e71fe387dbac1e71cf5a28c14701b914a5e2fdddac1acb1d7d76ab9
#6 DONE 0.7s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:4896968d5cd5a94c0ff8f033be4a7d24d84ba1b7a28a1abb5607dc4a1f6b4471
#8 DONE 0.5s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:0a49bea0f1aa9814824a83afdc468fa0be7acb095b2f46bff92f8c5396338970
#9 DONE 15.1s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:a40f61f3e0adcd2cf162813d51c8e4626bf1e5d97bf5ebc29d4b3bc3790ff439
#10 DONE 0.2s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:f136f0a67383a9f4d3400ad0b6c105aec3f7c1f2fa9c396fe5ebf7c346543305
#11 DONE 32.0s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:14d250eb82b49ad0eb82ed6f6a949af842d85f8caf7eadbc809593afbf95de6c
#13 DONE 0.5s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:59a38f160def3dd5b2c5ffb2588cf08c4019dbb3b3846f4b3bf20a6198b0ab96
#14 DONE 0.8s

#15 [stage-1  8/13] COPY benchmarks/example_example/benchmark.yaml /
#15 sha256:573cf3dbcdf740ca7079b1ee2e8a381f1d026baec78cb62013000fd391834bf0
#15 DONE 0.4s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:a3273b9bc74149d82dea0f5092e16d26c3ca9371274f349c25fe3d76cb9695af
#16 DONE 0.9s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:83575f40969a92e499762138ec1bcfff530366614e99fe6a4bd23dd97fc95c43
#17 DONE 0.3s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:0672cd97452d683ef757fab644c71bfaa8800e3c3f6468b0873b818aa5a9af9e
#18 0.462 Checking out commit 71f4914c
#18 0.980 Note: switching to '71f4914c'.
#18 0.980 
#18 0.980 You are in 'detached HEAD' state. You can look around, make experimental
#18 0.980 changes and commit them, and you can discard any commits you make in this
#18 0.980 state without impacting any branches by switching back to a branch.
#18 0.980 
#18 0.980 If you want to create a new branch to retain commits you create, you may
#18 0.980 do so (now or later) by using -c with the switch command. Example:
#18 0.980 
#18 0.980   git switch -c <new-branch-name>
#18 0.980 
#18 0.980 Or undo this operation with:
#18 0.980 
#18 0.980   git switch -
#18 0.980 
#18 0.980 Turn off this advice by setting config variable advice.detachedHead to false
#18 0.980 
#18 0.980 HEAD is now at 71f4914c [presubmit] Enforce language attribute in project.yaml to be always set. (#3477)
#18 DONE 1.4s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:5daa7cc3451379c7e33720d7c99b93a9912f61ac1faf5a5526a916d66e41a323
#19 DONE 1.0s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:b5943fb5dbffc146f23b0199e82e46d029f9864b295b25f8de9d1b033ef915ad
#20 0.563 Run fuzzer_build to build the target
#20 0.674 FUZZ_TARGET = example
#20 0.674 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.674 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.681 Building benchmark example_example with fuzzer afl
#20 0.684 + cd projects/example/my-api-repo
#20 0.684 + make clean
#20 0.688 rm -fv *.a *.o *unittest *_fuzzer *_seed_corpus.zip crash-* *.zip
#20 0.691 ++ nproc
#20 0.695 + make -j8 all
#20 0.697 clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 my_api.cpp -c
#20 0.698 clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11   -c -o standalone_fuzz_target_runner.o standalone_fuzz_target_runner.cpp
#20 1.624 ar ruv my_api.a my_api.o
#20 1.656 ar: `u' modifier ignored since `D' is the default (see `U')
#20 1.656 ar: creating my_api.a
#20 1.658 a - my_api.o
#20 1.658 clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 do_stuff_unittest.cpp my_api.a -o do_stuff_unittest
#20 2.416 clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 do_stuff_fuzzer.cpp my_api.a /libAFL.a -o do_stuff_fuzzer
#20 3.486 zip -q -r do_stuff_fuzzer_seed_corpus.zip do_stuff_test_data
#20 3.506 ++ nproc
#20 3.507 + make -j8 check
#20 3.510 ./do_stuff_unittest
#20 3.513  => 0
#20 3.513 foo => 1
#20 3.513 omg => 1
#20 3.513 bar => 1
#20 3.513 ouch => 1
#20 3.513 foobar => 3
#20 3.513 foouchbar => 4
#20 3.514 ./do_stuff_fuzzer do_stuff_test_data/*
#20 3.518 ======================= INFO =========================
#20 3.518 This binary is built for AFL-fuzz.
#20 3.518 To run the target function on individual input(s) execute this:
#20 3.518   ./do_stuff_fuzzer < INPUT_FILE
#20 3.518 or
#20 3.518   ./do_stuff_fuzzer INPUT_FILE1 [INPUT_FILE2 ... ]
#20 3.518 To fuzz with afl-fuzz execute this:
#20 3.518   afl-fuzz [afl-flags] ./do_stuff_fuzzer [-N]
#20 3.518 afl-fuzz will run N iterations before re-spawning the process (default: 1000)
#20 3.518 ======================================================
#20 3.518 Reading 5 bytes from do_stuff_test_data/410c23d234e7f97a2dd6265eb2909324deb8c13a
#20 3.518 Execution successful
#20 3.518 Reading 44 bytes from do_stuff_test_data/7a74862169c3375f4149daff75187cbca7372a38
#20 3.518 Execution successful
#20 3.518 Reading 3 bytes from do_stuff_test_data/a835d6f1c6b2ae4a35e8c0a4a0576715c8b27283
#20 3.518 Execution successful
#20 3.518 Reading 6 bytes from do_stuff_test_data/e8fb273916196a5e29967af0b5826daffb9b3765
#20 3.518 Execution successful
#20 3.518 Reading 6 bytes from do_stuff_test_data/fc09d362f05ab97efdfcd873dacad6a9c29e57ff
#20 3.518 Execution successful
#20 3.519 + find . -name '*_fuzzer' -exec cp -v '{}' /out ';'
#20 3.528 './do_stuff_fuzzer' -> '/out/do_stuff_fuzzer'
#20 3.529 + find . -name '*_fuzzer.dict' -exec cp -v '{}' /out ';'
#20 3.533 './do_stuff_fuzzer.dict' -> '/out/do_stuff_fuzzer.dict'
#20 3.534 + find . -name '*_fuzzer.options' -exec cp -v '{}' /out ';'
#20 3.536 + find . -name '*_fuzzer_seed_corpus.zip' -exec cp -v '{}' /out ';'
#20 3.540 './do_stuff_fuzzer_seed_corpus.zip' -> '/out/do_stuff_fuzzer_seed_corpus.zip'
#20 3.541 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 4.0s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:7e2f995b309e497df8c921472213e5a54b63ddb4a9fe27223fbb8a5a42716b61 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/example_example 0.0s done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/example_example:
------
#2 [internal] load .dockerignore
#2 sha256:314f4fa6ebefee93957831466828bb874b4d0e724ef9fd8323ea792d140ff36f
#2 transferring context: 2B done
#2 DONE 0.2s

#1 [internal] load build definition from runner.Dockerfile
#1 sha256:c8a25794652bdb2aafa33432fff5c0df92b668b33d8ff9aece1a80701c1339bb
#1 transferring dockerfile: 656B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/example_example-intermediate
#4 sha256:54243b4e511a9d2007c841ec6659665dc9fc757fe0402b56318d75b7476037e3
#4 ERROR: gcr.io/fuzzbench/runners/afl/example_example-intermediate:latest: not found

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/example_example-intermediate 0.0s done
#6 DONE 0.2s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/example_example-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:d46db2c385b38c0c6f228185baa8315853b1677ee38bca9cbe7f092601e5f5d6
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:bc42155f68bf59ea230245f72bf58988b2cfbab7a401b40814fed6e137d914ba
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/example_example-intermediate:latest
#3 sha256:c45e6c0afb6cf6730ca75e6a608475b5191ade4054899696d68d2a1080f4079c
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/example_example:latest
#4 sha256:729212e34e7e08d303e02e4fbf2f114ce5b62092482265198b985b17c77b0b88
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:ffdf71ebb926c68bcbfade4143d0b7c463be44ec64ad4a02e2abe954c2030574
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/example_example-intermediate
#6 sha256:5c971355c9670b0e75cd02fd46b70b8dd6347006961651834dc03b682d542de3
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/example_example
#10 sha256:84cb974faae3dadfb6e64ee56197e48b1ee6897521162c6289df74328d005bff
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/example_example
#5 sha256:33e3cf37da7151eaad835011b330a184b11c28270dafd57e6118de0731e2fe4d
#5 ERROR: gcr.io/fuzzbench/runners/afl/example_example:latest: not found

#12 [internal] load build context
#12 sha256:ffdf71ebb926c68bcbfade4143d0b7c463be44ec64ad4a02e2abe954c2030574
#12 transferring context: 17.58MB 0.6s done
#12 DONE 0.8s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/example_example
#10 sha256:84cb974faae3dadfb6e64ee56197e48b1ee6897521162c6289df74328d005bff
#10 DONE 2.1s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:b930715e5a2899e452f696bf1b7c4a21455c9122da7da54af1c91769ab76aac5
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:13ee8362915af35cc78f0347c74f6fe05a8446353d50f8b1ff5964f356f04613
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:ebed41f689212deba62b2da5ccfc2f97f794faca1c9f8a65a0bf62dc07fac5ac
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:23ed78cc75278e50142dd3cd2caeaf36569fd179e1185ae44552d0f83bf0cca8
#11 DONE 0.3s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:a97bb61a0ee632492a1e67619bb549ee81ebbbd33985d103bf2fabd906c56682
#13 DONE 1.4s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:db22d4ec8330c391ab7182b4e118cc1ac8b41c1f45882086c06ef16337873937
#14 DONE 0.3s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:b1d194f8148517bb18ac0bd449676bfac030a56f0f38571d24d977daff4277ae
#15 DONE 0.6s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:ccb8d4a95dcfb9d395d1c6d5a5bd5e5f5211ecc2b5dc64497f7bbceebb56dc14
#16 DONE 0.8s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:3b46ae6618f72c542f150e94308634d13f772a8ac111cb20f05a8615e21b72da
#17 DONE 0.3s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:da3d550923e220c8e60b0364b2a974bb3ca923fa0489719bfcc500fd8a8e3832
#18 DONE 0.3s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:c9defa0a3b541444996285c7337f9b9fbc9ecb40932694c993454e21223b4470
#19 DONE 0.2s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:3674da26f72584d3af5b4d54570819b65e83c1f956849bc317720dac86cb9af3
#20 DONE 0.5s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:b2fb0e2dce649970874d1edc0887d407f4adc1faaa5e449490fc4c298e6ccf7d
#21 writing image sha256:b2fb0e2dce649970874d1edc0887d407f4adc1faaa5e449490fc4c298e6ccf7d done
#21 naming to gcr.io/fuzzbench/runners/afl/example_example done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/example_example:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f6758bd0f70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:ed6528870a0bf098b7ed5a5eac9768fb29e7f4f5d4283083f66c03d5b97c07bf
#2 transferring context: 2B done
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:59d76c429f93ef5aaa3813ac4de43464582bfa9e73f4e76c4d040e60e611ef4e
#1 transferring dockerfile: 32B done
#1 DONE 0.2s

#2 [internal] load .dockerignore
#2 sha256:ed6528870a0bf098b7ed5a5eac9768fb29e7f4f5d4283083f66c03d5b97c07bf
#2 DONE 0.3s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#9 [internal] load build context
#9 sha256:939b4ee3c5d2b304a359aacd05886b784617164cce91c2f1e2bb72df9a70edb0
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:f4e5ea12494fab091c5d830cf803b3421f2860f729b9d1b07da44924396cf8cf
#5 sha256:ef290950573a2779ee526af357b28fbddfc20d7409aa51f58f777c9e972cba29
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/example_example
#4 sha256:fee6f207abbeb47bb7bd3b02d1b477250838d9840b3281959d3fb57bdbff2ed0
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:939b4ee3c5d2b304a359aacd05886b784617164cce91c2f1e2bb72df9a70edb0
#9 transferring context: 30B done
#9 DONE 0.1s

#6 [2/5] RUN apt-get update && apt-get install -y make
#6 sha256:c655d45ce477be96b5f3a9f7ab5c78e25aa68f6ca8d817add7b8a6700bcfa389
#6 CACHED

#7 [3/5] RUN git clone https://github.com/google/oss-fuzz.git my-git-repo
#7 sha256:15eb201c20ac354c2d73bb9b5e82ad2a07faffabcab2c9f293379986dabe5237
#7 CACHED

#8 [4/5] WORKDIR my-git-repo
#8 sha256:8a0fb832d74c5be84fe305021da0718077399fac99b8e66a0453ed6f0774810e
#8 CACHED

#10 [5/5] COPY build.sh /src/
#10 sha256:f37229941cd6b1c6f26cbd463c486a235c7fe166721fd0cf518331a304e9ba2e
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:9e13da6e1fd504fc780e1690c08090bc07f2b4b5b1c3ca3e5bc4fd0ed6c46db8 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/example_example done
#11 DONE 0.3s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:67722cfff9c1eb7840cffd1ab68d7310d0b38105631f2817ed3d24f8aeb9554b
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:893fe4fdbc2bdac22a30c318a0f050eca71ca0db9ce6e348c288271293a70cb9
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/example_example:latest
#3 sha256:df176d56e8a51f436b3c86f96291547209b1b5db7e4c33909b19098aed62efc8
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/example_example
#5 sha256:5b6528e636d73d74d9ab1e353858392f2a9c07477c844af0e75cd09ab245a0a2
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/example_example-intermediate
#4 sha256:43ee9f70b6b973c6ed65ff4fec8a248e151a9aa033c91c1bd6a5bc9f0359a7cb
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:b285f1142e5daee217deec12dab7e8d29098dab8a15653f2c6e258d45084ac44
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:c8e4aa17d13d970420faa6fbab5de9065dcf5fde84cc3f84625114a57d569279
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:d4cc85d9f0639b34087e43ffa928d75e177f190cdbc71eb7e0597358eda7fc4b 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/example_example-intermediate done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:89e464b98a911d1a064526cd4823ae5bb107b06f17ae21c59aa84487e18996fa
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:f17bfa4ff36699fc9c30a8d9d3fa7b6a8f6078cc08650e15f0b3ba8fc8cb3a95
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:99f2ce950f1caa9f9f66d5b81085dcadc0b45496e9d01ae273b3490ee6371674
#8 transferring context: 559B 0.1s done
#8 DONE 0.2s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:2be81ef952d40e1c79d54f794b1aa2f32c898e81c086ddc2bfce96c1730195ea
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:fd9a118837abc48203231adc5f159ec672c37caf6892b7ff2f57ed7df9640054
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:7a4fbe6066278847321cb6db514a9bf3d7900454f036e502252010f084fe056a
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:bc52e94285c7b66a93ca15e216ca1327321b5984806d392382235e41ea42dded
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:bdcca8f1c5c61abe5e43c7e08c9c8a89fa1089ad69ac10fd3e37d7f4dd7cde28
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:02eacdcdaf6ed2015d39b5234c4b62553347c4b120cebe8b6962642b080b2646
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/example_example-intermediate:latest
#3 sha256:4278bbecc26eae4743ecc1a35d647ebf1810777349471b081a5c7fa3951ea7a8
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/example_example-intermediate
#6 sha256:f2a483c23e71fe387dbac1e71cf5a28c14701b914a5e2fdddac1acb1d7d76ab9
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/example_example
#5 sha256:55081e2dd948c0bab9d8c2a25515e4d9adc2b2265ee0db17c431ae2796c7e8ac
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:f9ffb425dd572aa6cafa11ab832ba39ef1ccd218a1212bdd215a3f9304cd0f47
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.1s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:f136f0a67383a9f4d3400ad0b6c105aec3f7c1f2fa9c396fe5ebf7c346543305
#11 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:3e299379d37ae5a3c67954e32366ed4d87c19ac0f1ba04556421125e5a0a32dc
#18 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:a40f61f3e0adcd2cf162813d51c8e4626bf1e5d97bf5ebc29d4b3bc3790ff439
#10 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:c90106374ac2503fcbcdb69f1969f87b8f1a8089a95ec230fd6c58a93e601e7a
#19 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:78ce4bbd0d74c3f7242de3acbc78d9a1aa8c3366f3d45cae09886b0069a0a863
#14 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:436b856c06677e5d71d0ea76b1e6e9a610a48fddc427975245c5603c5ff16539
#16 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:4092202d71de7a70f7cc52f31c8cdcf91568a05164309245c31bacced375f6c7
#13 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:0a49bea0f1aa9814824a83afdc468fa0be7acb095b2f46bff92f8c5396338970
#9 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:789ce20b66708a633ede39e3f050a048d3768afb85f0fedbd9c808c229012fe3
#17 CACHED

#15 [stage-1  8/13] COPY benchmarks/example_example/benchmark.yaml /
#15 sha256:2da30606a21c97977ad88d4de5145682a3e901f600ac65fb4eb3d780c19dd785
#15 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:4896968d5cd5a94c0ff8f033be4a7d24d84ba1b7a28a1abb5607dc4a1f6b4471
#8 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:97117563417c516a70df3672cccb0ceda2818df5ba8c81a5faffe62c79e70eb9
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:7e2f995b309e497df8c921472213e5a54b63ddb4a9fe27223fbb8a5a42716b61
#21 writing image sha256:7e2f995b309e497df8c921472213e5a54b63ddb4a9fe27223fbb8a5a42716b61 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/example_example done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:41e56fbee0b29e8afe6f1182e9a80d67707a4c2f5896da9c3af96fcd252d3ef8
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:d13eabb95af8a8206a9a34d23538c64732ce460e22b5c960b4faf77f97c92f18
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/example_example-intermediate
#4 sha256:54243b4e511a9d2007c841ec6659665dc9fc757fe0402b56318d75b7476037e3
#4 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f done
#6 naming to gcr.io/fuzzbench/runners/afl/example_example-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:8170040dad503be18682e69d6f3415023aaa8526581c38d3ed260448763eaadb
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:8b836ffdaae3991ebab4b42e44546ef49f7bf67cfeb7077b9fa490e7f91d2ff0
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.2s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/example_example:latest
#4 sha256:729212e34e7e08d303e02e4fbf2f114ce5b62092482265198b985b17c77b0b88
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/example_example-intermediate:latest
#3 sha256:c45e6c0afb6cf6730ca75e6a608475b5191ade4054899696d68d2a1080f4079c
#3 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/example_example-intermediate
#6 sha256:5c971355c9670b0e75cd02fd46b70b8dd6347006961651834dc03b682d542de3
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/example_example
#5 sha256:33e3cf37da7151eaad835011b330a184b11c28270dafd57e6118de0731e2fe4d
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/example_example
#10 sha256:84cb974faae3dadfb6e64ee56197e48b1ee6897521162c6289df74328d005bff
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:1a3bfa0778028114c60c10bf1103058a3d287bad5e0c9d9d1e6021c309028f9f
#12 transferring context: 17.58MB 0.6s done
#12 DONE 1.0s

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:13ee8362915af35cc78f0347c74f6fe05a8446353d50f8b1ff5964f356f04613
#8 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:23ed78cc75278e50142dd3cd2caeaf36569fd179e1185ae44552d0f83bf0cca8
#11 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:d6dfc6d0476e08b84e4b2a74d8a97ce7c502f8ea6b5f80917d6f691105c8127d
#18 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:ebed41f689212deba62b2da5ccfc2f97f794faca1c9f8a65a0bf62dc07fac5ac
#9 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:25797705f10082feb153664dd56da7c535bfb6ad1d269a78e3c20f3c2525c2c9
#16 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:b930715e5a2899e452f696bf1b7c4a21455c9122da7da54af1c91769ab76aac5
#7 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:213c1078e103f7984ec1b17f11871d2a004fcc980afb6d805978945a243c2a3c
#13 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:1d7474004c00cd6fecf9b81328f2333867cf7aae7612e11b1179abeab6145498
#14 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:659199f95e42c254a5288e6b3a41020fc0a0f8a387bd8606039d6d45c360d422
#15 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:d24b6dabb1040f97c89266335b20cb26ff9f99d75872ad61a7ed562571cb0333
#17 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:fc4dd22c59bfee2533ac68098a1f41ad9b8b3d15d4aa2949eca3e0cd3c557020
#19 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:9d21900529188bc471d96193145e2046a3e46d9bbd2e06401c344dfcc4c8e935
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:b2fb0e2dce649970874d1edc0887d407f4adc1faaa5e449490fc4c298e6ccf7d 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/example_example done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7fc3e4680f70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
