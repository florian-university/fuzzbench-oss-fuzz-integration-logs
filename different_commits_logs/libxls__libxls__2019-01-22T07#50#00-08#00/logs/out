WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: libxls_libxls.
INFO:root:Please run "make test-run-afl-libxls_libxls" to test integration.
#2 [internal] load .dockerignore
#2 sha256:a1fd6117453c6a763291fdb227df621a993e665e69c11ddfcd447276f038082e
#2 transferring context: 2B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:b0f00d0b1380d4875d965626a43a41f138d682ef1435b29554978e4e049a6c30
#1 transferring dockerfile: 32B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#9 [internal] load build context
#9 sha256:a4673252c717f5e803c7baf97a93ed974fdf61abc7fda3acace3fa5ecd27555f
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libxls_libxls
#4 sha256:8dfae0c1ca9a45b8c520600d45fbf2f75a597da0064c8e1e7330103ce62e3fcd
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/libxls_libxls:latest: not found

#9 [internal] load build context
#9 sha256:a4673252c717f5e803c7baf97a93ed974fdf61abc7fda3acace3fa5ecd27555f
#9 transferring context: 30B done
#9 DONE 0.1s

#7 [3/5] RUN git clone --depth 1 https://github.com/libxls/libxls libxls
#7 sha256:616bea7565c4357e3770a082b82671d0fbaf0d96271f860f3eb295786796b1c5
#7 CACHED

#8 [4/5] WORKDIR libxls
#8 sha256:da4094e5c00f7bca3ccf4507615e04ff4558cf2b9072ba5821762d15a8850cc3
#8 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf autoconf-archive automake gettext libtool
#6 sha256:e7fed44e0f87cee9aaed91acb7e12071e52458b28b301ffef13bfef61bfbb37f
#6 CACHED

#10 [5/5] COPY build.sh /src/
#10 sha256:b78d6b298f1af30041977c8b5539974a80de1593c6d272d56d1837a2574a4120
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:af100ff0359b4623356b5c345fffa7d9d6b3251668296e61e3bcc43c5219ad10
#11 writing image sha256:af100ff0359b4623356b5c345fffa7d9d6b3251668296e61e3bcc43c5219ad10 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/libxls_libxls done
#11 DONE 0.4s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libxls_libxls:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:82b730d4fdf68ede57e130e73aa117049a85d74f0d0488ce4355d52b9dfd6c40
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:77fad99870ab0a397b7eb92e8d88b228421378aef1fd0c3c5e4e7035c129b7ca
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/libxls_libxls:latest
#3 sha256:050cc1057571eedff6500c31de1eaf9e85105c5279b1f86aab36aad45cc23a07
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libxls_libxls
#5 sha256:de7e8f2b611225d2f49730923fc301ada54b7cc3005e370534facafed36f15ca
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate
#4 sha256:caf73f669ea0684a8d885080c9529a5453ffa241374d3d7cfe870e864cae4385
#4 ERROR: gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate:latest: not found

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:a5a214290a0ae3603d5e5ebf63ce64787c1e4a21f08dc19928c6b94ba4ee145e
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:a8b316188d1a489f8315df54efbbb9bda7549b0b7645b7eaf2d0a5f58c0ca53a
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:165b963638ed4b47a42d300151ab945939a02b556cf06eb3120f0a91c3a59d1f done
#8 naming to gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate 0.0s done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate:
------
#2 [internal] load .dockerignore
#2 sha256:3054f46fbeb2b3d159c798e3a0096b3964abe4c38540e730b569908c0b502e26
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:73a72a8fe2288c29dc3082b6705c387ff529e8a87e72c7bad258c002bedbeacf
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:4c7259b489af7f65a0e09bf1e5286b2080d8ea6077b774aa29563073a5437f39
#8 transferring context: 559B 0.1s done
#8 DONE 0.2s

#9 [4/7] COPY ./requirements.txt /
#9 sha256:0ec8443892773d0014700ee4e0e9fcaab0491f4b26226db625e3955297de1419
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:5fbc417b211a29dc4578264ef5dd18ee21da5fc9cd25276ae15e32c6e9215d2d
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:b5b878afa22c449c9001be9f95838b545641ec01a227728a135819cf67a9f4e5
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:52f5fb2d59b6394635e45224cc09607e78a5d75ae0f7f697470d7e003f772961
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:b0bf59e5a98d6281c53a32058db7d7b8c5940d51f877ed2658dddf314a949583 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:0a830e2d5dc6aa93a8f4781e880b2df35be662c2b50d8a0cf87b63ad941d62d1
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:408c424d409d448a8840bfd84a86048f05deb0b2c9b99406cef99969cdd8ac27
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate:latest
#3 sha256:b92e5b95b6efa8c0904ca95a80aa4d34fd68737798db872d7845971eac15c1e3
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:e445b46ff5ebdcf0573d599f360c9c9560714f0a1ca3a9fdb69004362662f8aa
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate
#6 sha256:ed739f324cf022c4cea312faeb578d9174d3a837f117ca761fa47ceadc2f1111
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/libxls_libxls
#5 sha256:6742af2323d3b93e2138889abb0616b919b2f19f27aeb9dfe87069ea04519f95
#5 ERROR: gcr.io/fuzzbench/builders/afl/libxls_libxls:latest: not found

#12 [internal] load build context
#12 sha256:e445b46ff5ebdcf0573d599f360c9c9560714f0a1ca3a9fdb69004362662f8aa
#12 transferring context: 669.86kB 0.1s done
#12 DONE 0.2s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:6c3e5552fe77e511ae253f882224f59b5b6645a2d319dae62dc47243b57d8315
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:49c71f43a000721d03959d1f464f590f0b36e21e6564c3c90967c147d31147f1
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:aee8e0c1310591b131e03c8d01cc7cdf7b46e5085a380e6df991b96501d41abf
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:40b7fc0dc21217e406bc9a5dc7a7c206eecd7ee48b153735414fabd205443a9b
#11 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:0fea7c986f7a68999688257818f85234603792fcc12e79b088aa8bcf109ccc98
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:dcf19a90cfdcd31d775d95c02a9dfb231dd5021cefdcb815203cec26634ee6af
#14 CACHED

#15 [stage-1  8/13] COPY benchmarks/libxls_libxls/benchmark.yaml /
#15 sha256:46d200c2315c2358ea7ad91c3968c009899ae7571db4e86e273b0e3aa21c5d76
#15 DONE 0.4s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:985cddbb042bcec4764cf5ae7e85c3b5b721c227aeb660f6fb7dbae168f031e0
#16 DONE 0.5s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:7620389a51efcba411e8663d8f11fc9953a3679198816ab57a8be3578956fc03
#17 DONE 0.7s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:d8de823fe4446b85f887dcf9716f778e21cb54e579dab4cdb94c208b39bdebb4
#18 0.434 Checking out commit a04edde6
#18 2.110 From https://github.com/libxls/libxls
#18 2.110  * [new tag]         v0.2.0     -> v0.2.0
#18 2.110  * [new tag]         v0.3.0     -> v0.3.0
#18 2.110  * [new tag]         v1.0.0     -> v1.0.0
#18 2.111  * [new tag]         v1.1.0     -> v1.1.0
#18 2.111  * [new tag]         v1.2.0     -> v1.2.0
#18 2.111  * [new tag]         v1.2.1     -> v1.2.1
#18 2.112  * [new tag]         v1.3.0     -> v1.3.0
#18 2.112  * [new tag]         v1.3.1     -> v1.3.1
#18 2.112  * [new tag]         v1.3.2     -> v1.3.2
#18 2.113  * [new tag]         v1.3.3     -> v1.3.3
#18 2.113  * [new tag]         v1.3.4     -> v1.3.4
#18 2.113  * [new tag]         v1.4.0     -> v1.4.0
#18 2.113  * [new tag]         v1.5.0     -> v1.5.0
#18 2.114  * [new tag]         v1.5.0-rc0 -> v1.5.0-rc0
#18 2.114  * [new tag]         v1.5.0-rc1 -> v1.5.0-rc1
#18 2.114  * [new tag]         v1.5.0-rc2 -> v1.5.0-rc2
#18 2.115  * [new tag]         v1.5.0-rc3 -> v1.5.0-rc3
#18 2.115  * [new tag]         v1.5.0-rc4 -> v1.5.0-rc4
#18 2.115  * [new tag]         v1.5.1     -> v1.5.1
#18 2.116  * [new tag]         v1.5.1-rc0 -> v1.5.1-rc0
#18 2.116  * [new tag]         v1.5.1-rc1 -> v1.5.1-rc1
#18 2.116  * [new tag]         v1.5.2     -> v1.5.2
#18 2.116  * [new tag]         v1.5.2-rc0 -> v1.5.2-rc0
#18 2.117  * [new tag]         v1.5.3     -> v1.5.3
#18 2.117  * [new tag]         v1.5.3-rc0 -> v1.5.3-rc0
#18 2.117  * [new tag]         v1.6.0     -> v1.6.0
#18 2.118  * [new tag]         v1.6.0-rc0 -> v1.6.0-rc0
#18 2.118  * [new tag]         v1.6.1     -> v1.6.1
#18 2.118  * [new tag]         v1.6.2-rc0 -> v1.6.2-rc0
#18 2.125 error: pathspec 'a04edde6' did not match any file(s) known to git
#18 2.136 error: pathspec 'a04edde6' did not match any file(s) known to git
#18 2.143 error: pathspec 'a04edde6' did not match any file(s) known to git
#18 2.160 error: pathspec 'a04edde6' did not match any file(s) known to git
#18 2.188 Checkout unsuccessful.
#18 DONE 2.4s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:7744f53ba6b73fdb471ca040b1579352a73dfa0e35aa45b0b822589050f02b2f
#19 DONE 0.8s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:6967b58f5ff966cdb86693fe2e11093ec93252247e86d97f00939d0835d8d528
#20 0.535 Run fuzzer_build to build the target
#20 0.645 FUZZ_TARGET = libxls
#20 0.645 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.645 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.650 Building benchmark libxls_libxls with fuzzer afl
#20 0.653 + ./bootstrap
#20 6.027 libtoolize: putting auxiliary files in '.'.
#20 6.027 libtoolize: copying file './ltmain.sh'
#20 6.261 libtoolize: Consider adding 'AC_CONFIG_MACRO_DIRS([m4])' to configure.ac,
#20 6.261 libtoolize: and rerunning libtoolize and aclocal.
#20 6.261 libtoolize: Consider adding '-I m4' to ACLOCAL_AMFLAGS in Makefile.am.
#20 11.78 configure.ac:28: installing './compile'
#20 11.78 configure.ac:28: installing './config.guess'
#20 11.79 configure.ac:28: installing './config.sub'
#20 11.79 configure.ac:25: installing './install-sh'
#20 11.79 configure.ac:25: installing './missing'
#20 11.85 Makefile.am: installing './depcomp'
#20 11.90 parallel-tests: installing './test-driver'
#20 11.96 + ./configure --enable-static
#20 12.18 checking for a BSD-compatible install... /usr/bin/install -c
#20 12.20 checking whether build environment is sane... yes
#20 12.21 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 12.22 checking for gawk... no
#20 12.22 checking for mawk... mawk
#20 12.22 checking whether make sets $(MAKE)... yes
#20 12.24 checking whether make supports nested variables... yes
#20 12.25 checking whether make supports nested variables... (cached) yes
#20 12.27 checking build system type... x86_64-pc-linux-gnu
#20 12.35 checking host system type... x86_64-pc-linux-gnu
#20 12.35 checking how to print strings... printf
#20 12.40 checking whether make supports the include directive... yes (GNU style)
#20 12.42 checking for gcc... clang
#20 12.48 checking whether the C compiler works... yes
#20 12.60 checking for C compiler default output file name... a.out
#20 12.61 checking for suffix of executables... 
#20 12.73 checking whether we are cross compiling... no
#20 12.86 checking for suffix of object files... o
#20 12.89 checking whether we are using the GNU C compiler... yes
#20 12.92 checking whether clang accepts -g... yes
#20 12.94 checking for clang option to accept ISO C89... none needed
#20 12.98 checking whether clang understands -c and -o together... yes
#20 13.02 checking dependency style of clang... gcc3
#20 13.08 checking for a sed that does not truncate output... /usr/bin/sed
#20 13.09 checking for grep that handles long lines and -e... /usr/bin/grep
#20 13.09 checking for egrep... /usr/bin/grep -E
#20 13.09 checking for fgrep... /usr/bin/grep -F
#20 13.10 checking for ld used by clang... /usr/bin/ld
#20 13.11 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 13.12 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 13.12 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 13.16 checking whether ln -s works... yes
#20 13.16 checking the maximum length of command line arguments... 1572864
#20 13.17 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 13.17 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 13.17 checking for /usr/bin/ld option to reload object files... -r
#20 13.17 checking for objdump... objdump
#20 13.17 checking how to recognize dependent libraries... pass_all
#20 13.17 checking for dlltool... no
#20 13.18 checking how to associate runtime and link libraries... printf %s\n
#20 13.18 checking for ar... ar
#20 13.18 checking for archiver @FILE support... @
#20 13.21 checking for strip... strip
#20 13.22 checking for ranlib... ranlib
#20 13.22 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 13.40 checking for sysroot... no
#20 13.40 checking for a working dd... /usr/bin/dd
#20 13.41 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 13.44 checking for mt... no
#20 13.44 checking if : is a manifest tool... no
#20 13.45 checking how to run the C preprocessor... clang -E
#20 13.55 checking for ANSI C header files... yes
#20 13.80 checking for sys/types.h... yes
#20 13.85 checking for sys/stat.h... yes
#20 13.90 checking for stdlib.h... yes
#20 13.96 checking for string.h... yes
#20 14.02 checking for memory.h... yes
#20 14.09 checking for strings.h... yes
#20 14.15 checking for inttypes.h... yes
#20 14.21 checking for stdint.h... yes
#20 14.27 checking for unistd.h... yes
#20 14.33 checking for dlfcn.h... yes
#20 14.39 checking for objdir... .libs
#20 14.57 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 14.60 checking for clang option to produce PIC... -fPIC -DPIC
#20 14.60 checking if clang PIC flag -fPIC -DPIC works... yes
#20 14.63 checking if clang static flag -static works... yes
#20 14.81 checking if clang supports -c -o file.o... yes
#20 14.85 checking if clang supports -c -o file.o... (cached) yes
#20 14.85 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 14.87 checking whether -lc should be explicitly linked in... no
#20 14.93 checking dynamic linker characteristics... GNU/Linux ld.so
#20 15.10 checking how to hardcode library paths into programs... immediate
#20 15.10 checking whether stripping libraries is possible... yes
#20 15.11 checking if libtool supports shared libraries... yes
#20 15.11 checking whether to build shared libraries... yes
#20 15.11 checking whether to build static libraries... yes
#20 15.11 checking for gcc... (cached) clang
#20 15.17 checking whether we are using the GNU C compiler... (cached) yes
#20 15.17 checking whether clang accepts -g... (cached) yes
#20 15.17 checking for clang option to accept ISO C89... (cached) none needed
#20 15.18 checking whether clang understands -c and -o together... (cached) yes
#20 15.18 checking dependency style of clang... (cached) gcc3
#20 15.18 checking for clang option to accept ISO C99... none needed
#20 15.31 checking whether we are using the GNU C++ compiler... yes
#20 15.34 checking whether clang++ accepts -g... yes
#20 15.37 checking dependency style of clang++... gcc3
#20 15.43 checking how to run the C++ preprocessor... clang++ -E
#20 15.73 checking for ld used by clang++... /usr/bin/ld -m elf_x86_64
#20 15.75 checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
#20 15.76 checking whether the clang++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 15.91 checking for clang++ option to produce PIC... -fPIC -DPIC
#20 15.91 checking if clang++ PIC flag -fPIC -DPIC works... yes
#20 15.95 checking if clang++ static flag -static works... yes
#20 16.16 checking if clang++ supports -c -o file.o... yes
#20 16.20 checking if clang++ supports -c -o file.o... (cached) yes
#20 16.20 checking whether the clang++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 16.20 checking dynamic linker characteristics... (cached) GNU/Linux ld.so
#20 16.21 checking how to hardcode library paths into programs... immediate
#20 16.21 checking whether clang++ supports C++11 features with -std=gnu++11... yes
#20 16.29 checking for strdup... yes
#20 16.43 checking for wcstombs_l... no
#20 16.56 checking wchar.h usability... yes
#20 16.63 checking wchar.h presence... yes
#20 16.65 checking for wchar.h... yes
#20 16.66 checking xlocale.h usability... no
#20 16.73 checking xlocale.h presence... no
#20 16.75 checking for xlocale.h... no
#20 16.75 checking for stdlib.h... (cached) yes
#20 16.76 checking for GNU libc compatible malloc... yes
#20 16.90 checking for stdlib.h... (cached) yes
#20 16.90 checking for GNU libc compatible realloc... yes
#20 17.04 checking for size_t... yes
#20 17.17 checking for ld used by clang... /usr/bin/ld -m elf_x86_64
#20 17.19 checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
#20 17.19 checking for shared library run path origin... done
#20 17.23 checking for iconv... yes
#20 17.37 checking for working iconv... yes
#20 17.52 checking for iconv declaration... 
#20 17.57          extern size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
#20 17.62 checking that generated files are newer than configure... done
#20 17.62 configure: creating ./config.status
#20 18.68 config.status: creating Makefile
#20 18.70 config.status: creating libxls.pc
#20 18.72 config.status: creating config.h
#20 18.74 config.status: executing depfiles commands
#20 18.84 config.status: executing libtool commands
#20 18.86 configure: ---
#20 18.86 configure: catdoc users: avoid xls2csv conflicts, use ./configure --program-prefix=lib to get libxls2csv
#20 18.86 configure: ---
#20 18.86 
#20 18.86 Configuration:
#20 18.86 
#20 18.86 C compiler: clang
#20 18.86 C++ compiler: clang++ -std=gnu++11
#20 18.86 CFLAGS: -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard
#20 18.86 CXXFLAGS: -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard
#20 18.86 LIBS:  
#20 18.86 
#20 18.86 Host: x86_64-pc-linux-gnu
#20 18.86 Extra ld flags: 
#20 18.93 + make clean
#20 18.94  rm -f xls2csv
#20 18.94  rm -f test_libxls test2_libxls test_cpp
#20 18.94 test -z "libxlsreader.la" || rm -f libxlsreader.la
#20 18.95 rm -f ./so_locations
#20 18.95 rm -rf .libs _libs
#20 18.96 rm -rf src/.libs src/_libs
#20 18.96  rm -f test_libxls test2_libxls test_cpp
#20 18.96 rm -f *.o
#20 18.96 rm -f cplusplus/*.o
#20 18.97 rm -f fuzz/*.o
#20 18.97 rm -f src/*.o
#20 18.97 rm -f src/*.lo
#20 18.98 rm -f test/*.o
#20 18.98 test -z "test_libxls.log" || rm -f test_libxls.log
#20 18.98 test -z "test_libxls.trs" || rm -f test_libxls.trs
#20 18.99 test -z "test-suite.log" || rm -f test-suite.log
#20 18.99 rm -f *.lo
#20 18.99 + make
#20 19.00 make  all-am
#20 19.01 make[1]: Entering directory '/src/libxls'
#20 19.02   CC       src/xls2csv.o
#20 19.16   CC       src/libxlsreader_la-xlstool.lo
#20 19.72   CC       src/libxlsreader_la-endian.lo
#20 19.96   CC       src/libxlsreader_la-locale.lo
#20 20.11   CC       src/libxlsreader_la-ole.lo
#20 20.72   CC       src/libxlsreader_la-xls.lo
#20 22.15   CCLD     libxlsreader.la
#20 22.38   CCLD     xls2csv
#20 22.63   CC       test/test.o
#20 22.71   CCLD     test_libxls
#20 22.95   CC       test/test2.o
#20 23.03   CCLD     test2_libxls
#20 23.30   CXX      cplusplus/main.o
#20 24.39   CXX      cplusplus/XlsReader.o
#20 25.32   CXXLD    test_cpp
#20 25.69 make[1]: Leaving directory '/src/libxls'
#20 25.69 + zip /out/fuzz_xls_seed_corpus.zip test/files/test2.xls fuzz/corpus/65536-rows-xls.xls fuzz/corpus/biff5-label-records.xls fuzz/corpus/big-texty-numbers-xls.xls fuzz/corpus/blanks.xls fuzz/corpus/dates-1900.xls fuzz/corpus/dates-1904.xls fuzz/corpus/dates-leap-year-1900-xls.xls fuzz/corpus/datetime-rounding.xls fuzz/corpus/empty-named-column.xls fuzz/corpus/empty-sheets.xls fuzz/corpus/geometry.xls fuzz/corpus/iris-excel-xls.xls fuzz/corpus/list_type.xls fuzz/corpus/missing-first-column.xls fuzz/corpus/missing-values-xls.xls fuzz/corpus/more-than-256-unique-strings-xls.xls fuzz/corpus/mtcars.xls fuzz/corpus/names-need-repair-xls.xls fuzz/corpus/no-yes-col-names.xls fuzz/corpus/numbers-as-na-and-shared-strings-xls.xls fuzz/corpus/skipping.xls fuzz/corpus/style-only-cells.xls fuzz/corpus/texty-dates-xls.xls fuzz/corpus/types.xls fuzz/corpus/unnamed-duplicated-columns.xls fuzz/corpus/utf8-sheet-names.xls fuzz/corpus/vietnamese-utf8.xls fuzz/corpus/whitespace-xls.xls fuzz/corpus/xls2csv_ole_ole2_fread_327.xls fuzz/corpus/xls2csv_ole_read_MSAT_772.xls fuzz/corpus/xls2csv_ole_read_MSAT_body_637.xls fuzz/corpus/xls2csv_ole_read_MSAT_body_687.xls
#20 25.69   adding: test/files/test2.xls (deflated 80%)
#20 25.69   adding: fuzz/corpus/65536-rows-xls.xls (deflated 65%)
#20 25.70   adding: fuzz/corpus/biff5-label-records.xls (deflated 83%)
#20 25.70   adding: fuzz/corpus/big-texty-numbers-xls.xls (deflated 83%)
#20 25.70   adding: fuzz/corpus/blanks.xls (deflated 86%)
#20 25.70   adding: fuzz/corpus/dates-1900.xls (deflated 76%)
#20 25.70   adding: fuzz/corpus/dates-1904.xls (deflated 77%)
#20 25.70   adding: fuzz/corpus/dates-leap-year-1900-xls.xls (deflated 80%)
#20 25.70   adding: fuzz/corpus/datetime-rounding.xls (deflated 83%)
#20 25.71   adding: fuzz/corpus/empty-named-column.xls (deflated 66%)
#20 25.71   adding: fuzz/corpus/empty-sheets.xls (deflated 87%)
#20 25.71   adding: fuzz/corpus/geometry.xls (deflated 86%)
#20 25.71   adding: fuzz/corpus/iris-excel-xls.xls (deflated 77%)
#20 25.71   adding: fuzz/corpus/list_type.xls (deflated 68%)
#20 25.71   adding: fuzz/corpus/missing-first-column.xls (deflated 67%)
#20 25.71   adding: fuzz/corpus/missing-values-xls.xls (deflated 86%)
#20 25.71   adding: fuzz/corpus/more-than-256-unique-strings-xls.xls (deflated 85%)
#20 25.72   adding: fuzz/corpus/mtcars.xls (deflated 81%)
#20 25.72   adding: fuzz/corpus/names-need-repair-xls.xls (deflated 74%)
#20 25.72   adding: fuzz/corpus/no-yes-col-names.xls (deflated 87%)
#20 25.72   adding: fuzz/corpus/numbers-as-na-and-shared-strings-xls.xls (deflated 87%)
#20 25.72   adding: fuzz/corpus/skipping.xls (deflated 86%)
#20 25.72   adding: fuzz/corpus/style-only-cells.xls (deflated 67%)
#20 25.72   adding: fuzz/corpus/texty-dates-xls.xls (deflated 66%)
#20 25.72   adding: fuzz/corpus/types.xls (deflated 81%)
#20 25.72   adding: fuzz/corpus/unnamed-duplicated-columns.xls (deflated 86%)
#20 25.73   adding: fuzz/corpus/utf8-sheet-names.xls (deflated 71%)
#20 25.73   adding: fuzz/corpus/vietnamese-utf8.xls (deflated 64%)
#20 25.73   adding: fuzz/corpus/whitespace-xls.xls (deflated 87%)
#20 25.73   adding: fuzz/corpus/xls2csv_ole_ole2_fread_327.xls (deflated 96%)
#20 25.73   adding: fuzz/corpus/xls2csv_ole_read_MSAT_772.xls (deflated 52%)
#20 25.73   adding: fuzz/corpus/xls2csv_ole_read_MSAT_body_637.xls (deflated 66%)
#20 25.74   adding: fuzz/corpus/xls2csv_ole_read_MSAT_body_687.xls (deflated 52%)
#20 25.74 + make fuzz_xls
#20 25.76   CC       fuzz/xls-fuzz_xls.o
#20 25.83   CXXLD    fuzz_xls
#20 26.24 + cp fuzz_xls /out/fuzz_xls
#20 26.24 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 26.5s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:0b47f12a515147498d37ac3ddf3afb19f1b51a6cc3f67fe99fa89d241ddd4f55
#21 writing image sha256:0b47f12a515147498d37ac3ddf3afb19f1b51a6cc3f67fe99fa89d241ddd4f55 done
#21 naming to gcr.io/fuzzbench/builders/afl/libxls_libxls done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libxls_libxls:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:588fb1d2510e127f0bb15f635a590e55b99aef08786784543cb8b7bbf6b7fe21
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:c1a0b8ac9a735546cb01b5044f6b5388059f013686c21d4c25163df6e2b8445d
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate
#5 sha256:bb04f5cd7153e254f0f71be383f2244651c02bf0a866ee5b6ce76de260d3b6e8
#5 ERROR: gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate:latest: not found

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:e220a4b9567b0a0836860ee7f491ba5549eb67a6e0a94d974a01a34191e2baab
#6 writing image sha256:e220a4b9567b0a0836860ee7f491ba5549eb67a6e0a94d974a01a34191e2baab done
#6 naming to gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:557e5964f002cc33ebdd4559b4140dbcd7747225a6ec2817cdffaf3606588d08
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:89c4788ba5f247fd2cacfa85fc004b9d5f5503c3599e0ada29e90ee442b18c36
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate:latest
#3 sha256:bb5b034e98101ac8b73a0b47c380e7d08baf28286f0d539cb9685cd6901af9e9
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libxls_libxls:latest
#4 sha256:99ffb8a75701dddc01848112ab9cb36df61ff54fccd0c0e34457f5be271fb91c
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:3e84b71514e0fbea02b5fc7cc7ee1b3cfef776177b9819c5003806d0d2866387
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate
#6 sha256:79a8784e7ff4694456f0970caf899ac0fb93eaa531a0c518303a869c2db63e28
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/libxls_libxls
#10 sha256:599e163d5ce49576d0a06e487422f1495b081c3ba9d43210c85082072bbc7441
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/libxls_libxls
#5 sha256:1122433a95fbb846a9576017a8a8a3298150d306a3169d8753b5eb611906077d
#5 ERROR: gcr.io/fuzzbench/runners/afl/libxls_libxls:latest: not found

#12 [internal] load build context
#12 sha256:3e84b71514e0fbea02b5fc7cc7ee1b3cfef776177b9819c5003806d0d2866387
#12 transferring context: 18.99MB 0.6s done
#12 DONE 0.8s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/libxls_libxls
#10 sha256:599e163d5ce49576d0a06e487422f1495b081c3ba9d43210c85082072bbc7441
#10 DONE 0.9s

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:3d534029ce676d48267b0cc1859c163b9f0f2f7f996509da9e18584dfaa452b6
#9 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:df83269d02eaba7240fc9899ccd15c20cc5fb574778d06a7e81a9020df4df214
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:7976f4e4cb2e6079b071b5dd89ded06ae5d7b46d8da8cfba104c79b6e4720d72
#8 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:8298b6083578657cfb921ab069111ae9375d45eb16613449e42f1be9d9c332bd
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:e95f1d6df8898902c8b476c3b0e96d70043f1eade673f357932c9ac044e06ac3
#13 DONE 1.3s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:cbadb49d6e9b6f15930c848da117ebad94474c3ca1b169a3301d809c6a561b3a
#14 DONE 0.3s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:ac5efd5cb36cc6813dd23610e82ddb0ad90f476a35d10c06f1d9ddf5980002e4
#15 DONE 0.8s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:56050c0c8cf8ab05dd6f20d8cd1bbd44206ff20beb94c321bcb73604fee19eaf
#16 DONE 0.6s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:cf41bbc0a673a89fb4e525bd0ef35f4944c1ed9307aeafbc9d18da9508dc9ede
#17 DONE 0.1s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:0e881f5819631dca432bc50450b2eb5984e395570e1d69b32835f2ed1efd6840
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:42bc23ac2e9de84334fd2997a34b4ef385418c826b3f032cc876b8e3cd9c921f
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:a39a6ac557638c679f3f13145a5b75e10fd38012c11e19e0cc2d896b4b17ce26
#20 DONE 0.7s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:d910380d949644d00146cd41e794a81027c280e8c431e5df5f2bbe1b7535a35d done
#21 naming to gcr.io/fuzzbench/runners/afl/libxls_libxls done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/libxls_libxls:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f01143f3ee0> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:7350b842c7ec2501ef74714b2278a480e6963b4da360608514ae67ff864371b7
#1 transferring dockerfile: 32B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:6005a14068b7de22c23f200f67078c34c7c4faae6edbffa3fb6fd00342bc5423
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#9 [internal] load build context
#9 sha256:63a2fddb3cb6d96e2e98d1a68573570fc165d460e5ca07d3cea068f4b5779fd3
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libxls_libxls
#4 sha256:8dfae0c1ca9a45b8c520600d45fbf2f75a597da0064c8e1e7330103ce62e3fcd
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:63a2fddb3cb6d96e2e98d1a68573570fc165d460e5ca07d3cea068f4b5779fd3
#9 transferring context: 30B done
#9 DONE 0.0s

#7 [3/5] RUN git clone --depth 1 https://github.com/libxls/libxls libxls
#7 sha256:616bea7565c4357e3770a082b82671d0fbaf0d96271f860f3eb295786796b1c5
#7 CACHED

#8 [4/5] WORKDIR libxls
#8 sha256:da4094e5c00f7bca3ccf4507615e04ff4558cf2b9072ba5821762d15a8850cc3
#8 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf autoconf-archive automake gettext libtool
#6 sha256:e7fed44e0f87cee9aaed91acb7e12071e52458b28b301ffef13bfef61bfbb37f
#6 CACHED

#10 [5/5] COPY build.sh /src/
#10 sha256:64ea93038931b9a2bda205b302e72b6cc1e59e63919437d90f1c137c6874bc7e
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:af100ff0359b4623356b5c345fffa7d9d6b3251668296e61e3bcc43c5219ad10 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/libxls_libxls done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:beca1375651737ced225036defd75863d12a823db7d3161275f4326d9a633b52
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:11d823cddb5e1ec0e86889291a33b6a12dd4c27d9a301da8e40676f847a846a6
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/libxls_libxls:latest
#3 sha256:050cc1057571eedff6500c31de1eaf9e85105c5279b1f86aab36aad45cc23a07
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libxls_libxls
#5 sha256:de7e8f2b611225d2f49730923fc301ada54b7cc3005e370534facafed36f15ca
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate
#4 sha256:caf73f669ea0684a8d885080c9529a5453ffa241374d3d7cfe870e864cae4385
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:a5a214290a0ae3603d5e5ebf63ce64787c1e4a21f08dc19928c6b94ba4ee145e
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:a8b316188d1a489f8315df54efbbb9bda7549b0b7645b7eaf2d0a5f58c0ca53a
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:165b963638ed4b47a42d300151ab945939a02b556cf06eb3120f0a91c3a59d1f done
#8 naming to gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:546e2bd34a33b76e074328a5367c17538c235b64f01e9842648714cb57254049
#2 transferring context: 34B done
#2 DONE 0.7s

#1 [internal] load build definition from Dockerfile
#1 sha256:77ba661cb74e3cfd9712d879d72ef925ab93e6e554bc60a7c050357831a04b3d
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.7s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:3dda2ae49f148a2123ec122c32ce90938bbded9d40efd12c65fb65bc90a78640
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:39f9cd3d46417c5ae41684f3144ece5c29a23837069fc649aadf438d3f9c0614
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:a88496bf3dba16ffb9568e011915c5d067e79bb19899e28c7dfb26bda29b8cfa
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:eb1190c75b2e991dbe21f80febb321453a85d35ffc2355ae26e12e5c3b71c3c2
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:fbc478abc6fadd22c8feec7e217ec667c2582434de1a90a4a64f4cd88a1b37a1
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:b0bf59e5a98d6281c53a32058db7d7b8c5940d51f877ed2658dddf314a949583 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:4a46f6a0b97eacb0ace88ba50ef82199719b10b1a248dc5ef8f1d1a489970d3d
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:f877535ac6047ad2fbf52014c61e858946a2622b6c4ff3a7f62afb859ee842c6
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate:latest
#3 sha256:b92e5b95b6efa8c0904ca95a80aa4d34fd68737798db872d7845971eac15c1e3
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/libxls_libxls
#5 sha256:6742af2323d3b93e2138889abb0616b919b2f19f27aeb9dfe87069ea04519f95
#5 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate
#6 sha256:ed739f324cf022c4cea312faeb578d9174d3a837f117ca761fa47ceadc2f1111
#6 DONE 0.0s

#12 [internal] load build context
#12 sha256:241d292f28e9309b01b9905fa63b554cdbe18158e4da6187189f29436422d4d0
#12 transferring context: 669.86kB 0.1s done
#12 DONE 0.1s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:6e2b11ab65554804367264dda5dd340fb590b37729eef45c0866c99d95ac8c8f
#17 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:db3b27c52a5234bffd49b35702b0498e57fbde7a2c60bd552abac447395058ff
#18 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:fe2d8251cecf110df4a79ee7687b260212c57e963121ddeafb94644713371f14
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:25391225f857d01de574c6c5c43d142cb35aef28ac6bf739ae2c3b5853ad6b39
#14 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:a98b13bf2766798bd60d2ac0cc119e20d09078ce1eb94f7e51bc7cff09ccb85b
#16 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:40b7fc0dc21217e406bc9a5dc7a7c206eecd7ee48b153735414fabd205443a9b
#11 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:aee8e0c1310591b131e03c8d01cc7cdf7b46e5085a380e6df991b96501d41abf
#10 CACHED

#15 [stage-1  8/13] COPY benchmarks/libxls_libxls/benchmark.yaml /
#15 sha256:5856dee2ad013ea3837e81c85a7cff0213bdb87f15601fc50d784fc9280cc425
#15 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:3a0b45829063c3ac36ff1454e5c7e122cfe838bb86e6545383d8b91b05b0b6fd
#19 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:6c3e5552fe77e511ae253f882224f59b5b6645a2d319dae62dc47243b57d8315
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:49c71f43a000721d03959d1f464f590f0b36e21e6564c3c90967c147d31147f1
#9 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:3034817d89c9bfe8399c490b8eecf5242a943ac0907c2ecf75ecf1cc85903f32
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:0b47f12a515147498d37ac3ddf3afb19f1b51a6cc3f67fe99fa89d241ddd4f55 done
#21 naming to gcr.io/fuzzbench/builders/afl/libxls_libxls done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:f0512c177a81f0635763350cf545d35fb956efdd037d58d29ea40aaf2ec54e68
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:6600a2f258299971e782c406f03b9220fbe97e09fb798e726b150aa042c088a4
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate
#4 sha256:bb04f5cd7153e254f0f71be383f2244651c02bf0a866ee5b6ce76de260d3b6e8
#4 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:e220a4b9567b0a0836860ee7f491ba5549eb67a6e0a94d974a01a34191e2baab
#6 writing image sha256:e220a4b9567b0a0836860ee7f491ba5549eb67a6e0a94d974a01a34191e2baab done
#6 naming to gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:f4d3c4d683e1c82805324835252799640ae302f76646add09a407d98c23d76c6
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:54df598e4081ff28051045d3afa607de1347ae189442a0e31260cda358d40c15
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate:latest
#3 sha256:bb5b034e98101ac8b73a0b47c380e7d08baf28286f0d539cb9685cd6901af9e9
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libxls_libxls:latest
#4 sha256:99ffb8a75701dddc01848112ab9cb36df61ff54fccd0c0e34457f5be271fb91c
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:b8461d12f24d10798ffc09d747cec4d1a8af0c5e66bfd11ad1c3521dc4930933
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate
#6 sha256:79a8784e7ff4694456f0970caf899ac0fb93eaa531a0c518303a869c2db63e28
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/libxls_libxls
#5 sha256:1122433a95fbb846a9576017a8a8a3298150d306a3169d8753b5eb611906077d
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/libxls_libxls
#10 sha256:599e163d5ce49576d0a06e487422f1495b081c3ba9d43210c85082072bbc7441
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:b8461d12f24d10798ffc09d747cec4d1a8af0c5e66bfd11ad1c3521dc4930933
#12 transferring context: 18.99MB 0.7s done
#12 DONE 0.9s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:11c0695191750b1cde05d5f6a2dcb22ca35cf9f727bd22a48a869d00ece0df4c
#15 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:fe5990ab413281da4482179da6827106d989a6d4d8559fa16ee4ea12efb5347f
#14 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:7976f4e4cb2e6079b071b5dd89ded06ae5d7b46d8da8cfba104c79b6e4720d72
#8 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:8298b6083578657cfb921ab069111ae9375d45eb16613449e42f1be9d9c332bd
#11 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:d0d5ccff1aff9548a41b50c04780a6491818e880b04ee96c0ea8f364970dd4ca
#17 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:50e2d7542a2e13ba0f002a637bf47f0616c0186010c2e62ed6cc176d04b64e8b
#19 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:d4b82a3d51fe9c1a3e598b637d3a9f9949c8e9f1677c507736b28a407e82a637
#16 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:e7d7edec5939eb899b81ada8c8d784e14d9328b9da821f55a8f98cf1e554db52
#13 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:3d534029ce676d48267b0cc1859c163b9f0f2f7f996509da9e18584dfaa452b6
#9 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:415701461c4f4aba0cec4d81cc053f29b93ad58d7827f649bd112b96fde24453
#18 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:df83269d02eaba7240fc9899ccd15c20cc5fb574778d06a7e81a9020df4df214
#7 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:57560121331c5e643616e74d07c265b9fd2b29b0c9606b7642ac894a24b91f6e
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:d910380d949644d00146cd41e794a81027c280e8c431e5df5f2bbe1b7535a35d
#21 writing image sha256:d910380d949644d00146cd41e794a81027c280e8c431e5df5f2bbe1b7535a35d 0.2s done
#21 naming to gcr.io/fuzzbench/runners/afl/libxls_libxls done
#21 DONE 1.5s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f7f847e5ee0> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
