WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: zlib_zlib_uncompress_fuzzer.
INFO:root:Please run "make test-run-afl-zlib_zlib_uncompress_fuzzer" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:a5fa4cb77a2aea43be8d8deca07504b675f0fa2b70e6b74aff378ddcbe5e39e4
#1 transferring dockerfile:
#1 transferring dockerfile: 925B 0.0s done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:356b8894d9ac9b94c3c22bb6244918efe59f93b2e419cc9222dee85919d24db4
#2 transferring context: 2B done
#2 DONE 0.4s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#9 [internal] load build context
#9 sha256:70af6e6e6cda080a8bc914971195181ea3ca6acd7e93fb0a97fb44dad5072a8e
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:77750d283f2957d1beeddda2e8f6c5604ab5f969a3616e9cac40f4261ca04c0a
#5 sha256:7999addb2cd81975cd6421c6aaef5643a901995c540a40e8df741ab4c30f6043
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/zlib_zlib_uncompress_fuzzer
#4 sha256:f39d5d9aa9c234b5a86a1595de069dba9e5a5c2d551e6f3aa58c38eb463682b9
#4 DONE 1.7s

#9 [internal] load build context
#9 sha256:70af6e6e6cda080a8bc914971195181ea3ca6acd7e93fb0a97fb44dad5072a8e
#9 transferring context: 34.45kB done
#9 DONE 0.5s

#7 [3/5] RUN git clone --depth 1 -b develop https://github.com/madler/zlib.git
#7 sha256:f0bc315b74d41abe7af8731ffa647bc6fe9bf8a67b7a4851eacf3d1ca44b4120
#7 CACHED

#8 [4/5] WORKDIR zlib
#8 sha256:64713c70ad922c74cc30dabac865ace84eb0dd0f10ba324f819d64d403c1585f
#8 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:52e32c454805a8c94e441551d01b16d090304920e0b4ce6b465dec91bafa72a3
#6 CACHED

#10 [5/5] COPY build.sh *_fuzzer.c* /src/
#10 sha256:43b8e8222df7304b326fbbccceae20583cdd1a2da3c23c7561df71d82c840a8f
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:62efc2de0b5969692ab4d69d20102e44a9338594321db16cb83fc2b696faefd2 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/zlib_zlib_uncompress_fuzzer done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:861766d528346ca5342b7631ed36cdf0d1b70afd458d2400c9e1f99b4c9a42b8
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:a28e293b7f626f261f1fab9d29f1f40ac7e6c8c393d0b88e09134de0eee62d24
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/zlib_zlib_uncompress_fuzzer:latest
#3 sha256:5efe1ea8e1a50051368ebfb512b7cb21dd6255327a3736a118c8faa866aadb2c
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/zlib_zlib_uncompress_fuzzer
#5 sha256:a63794270842643cd5b982999f5194003a4579b729e4020578c8d7eee3ecb939
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress_fuzzer-intermediate
#4 sha256:ca3ab7af68c414c6701f594a1b001313092cbfef597c27f213deeb97c0337ed2
#4 DONE 1.4s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:2a8e9fbfc48335fe30be5c3847ecd499eab6bbae86547b94f54c91cf8dfef941
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:7490a15d9cc30a8ded3afb45aaab8f78280d941ff3560c0b378cb451a75afcfb
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:6efaf047c93c939bc3378fb38fb1464ad52e9d75158d5ffb2389df1bdd807b96 done
#8 naming to gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress_fuzzer-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:57e49ecfac51d10d0d2cfc2776eced05ffa52f08c4bfd0acea08d3943676c31f
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:b5336f26f294fb47f29e85f7c6826a3e9772d3126f283507599da841615fd325
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:fb9ff88653f5563fa0c26f4192d3fb7fdb3fc3b86be93e1c7a52f869b11077ec
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:6332ff6f4e3d199109b09b76a03aa8f08d16faacebfadd2d8f64cdabe741b76a
#11 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:c2b2e3653661fb5016a78ca35f6fff32e2515d0e2606619226f2029e10ac9163
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:842d3212e37c3f25c9c4cfcb0dca99f11a33e686f4dfb6bf6c4cc7625ffa44d0
#10 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:ae301428673c62b01f9572929434a81dfffadd9b3649a6a4a9fe4933058a4b42
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:db37108b741762d6fc963c78f4ea99d80edbbe38f2ea9e4cf93847b349417cfa 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:6703dedfbbc5a4ef472078586bda7fe243948d285211ad5844ea9556701a99fd
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:924a16aef743740f754e4a4adaef4745232b19be6660eb824ec6683285d83e2f
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress_fuzzer-intermediate:latest
#3 sha256:27cbce30be9aae6857b9cf4d229880e0fc42efdf9200ee113f087301a1c8011b
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress_fuzzer
#5 sha256:70e68119651ed983b9eb42a6ab7cc8259726b79e3102085643f94c2fa25f2c96
#5 ...

#12 [internal] load build context
#12 sha256:438ba0723102c00891c6f9bfb1fdefecdca5e4a1094e8fb99985b2dbacf14620
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress_fuzzer-intermediate
#6 sha256:9ea644ee64e9a92ac78c8fbe9aa39ba96c0624f64e0eb6d4772f4a170e2ec13d
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress_fuzzer
#5 sha256:70e68119651ed983b9eb42a6ab7cc8259726b79e3102085643f94c2fa25f2c96
#5 DONE 1.3s

#12 [internal] load build context
#12 sha256:438ba0723102c00891c6f9bfb1fdefecdca5e4a1094e8fb99985b2dbacf14620
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.1s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:ad68ef103b61010f7dcf37eafd50160304c3a468db9535d936fc681909c2c24a
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:fdea01a83a4ec9549b6c4fb06d74a5b13023704dca2984f450d584a53a8105e5
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:4f2782305cf8bf517220f0a27eff7d40f159ca0c508f8019e6e465421b47bfea
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:5a3108bee9924dac52ea8055097edaeecd79f48ef3b6da3e520973dac7bfd52b
#11 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:63cf0f4f3bb1a18d95d46615d66ac331af7528bfa01c84f9a6f2df1a1c592874
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:cf5e377d6ebb9c94b53433ae616db22953e50ec59eb7d2dff0ffa1a34a753200
#14 DONE 1.0s

#15 [stage-1  8/13] COPY benchmarks/zlib_zlib_uncompress_fuzzer/benchmark.yaml /
#15 sha256:54222cc92d6d1bdfbfc0124e7d456a08f9c6a93cf521d01c177e116d3f9e2659
#15 DONE 0.1s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:6fe19387b77a58fce52789a81e6deff1c321f8f16142825758461c8462bf7220
#16 DONE 0.5s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:39ef1b3603228476d54c4f0b75b6510b459d5d9fa99a9c5a538fc4b84e1e451b
#17 DONE 0.1s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:d1a9e662a2b8ff14947ad89ac6f5d8b1edd6ff916d993ef19d2c51c5fcd65705
#18 0.507 Checking out commit 1d5a2cd8
#18 2.843 From https://github.com/madler/zlib
#18 2.843  * [new tag]         v0.71       -> v0.71
#18 2.843  * [new tag]         v0.79       -> v0.79
#18 2.844  * [new tag]         v0.8        -> v0.8
#18 2.844  * [new tag]         v0.9        -> v0.9
#18 2.844  * [new tag]         v0.91       -> v0.91
#18 2.845  * [new tag]         v0.92       -> v0.92
#18 2.845  * [new tag]         v0.93       -> v0.93
#18 2.845  * [new tag]         v0.94       -> v0.94
#18 2.846  * [new tag]         v0.95       -> v0.95
#18 2.846  * [new tag]         v0.99       -> v0.99
#18 2.846  * [new tag]         v1.0-pre    -> v1.0-pre
#18 2.847  * [new tag]         v1.0.1      -> v1.0.1
#18 2.847  * [new tag]         v1.0.2      -> v1.0.2
#18 2.847  * [new tag]         v1.0.4      -> v1.0.4
#18 2.847  * [new tag]         v1.0.5      -> v1.0.5
#18 2.848  * [new tag]         v1.0.7      -> v1.0.7
#18 2.848  * [new tag]         v1.0.8      -> v1.0.8
#18 2.849  * [new tag]         v1.0.9      -> v1.0.9
#18 2.849  * [new tag]         v1.1.0      -> v1.1.0
#18 2.849  * [new tag]         v1.1.1      -> v1.1.1
#18 2.850  * [new tag]         v1.1.2      -> v1.1.2
#18 2.850  * [new tag]         v1.1.3      -> v1.1.3
#18 2.850  * [new tag]         v1.1.4      -> v1.1.4
#18 2.850  * [new tag]         v1.2.0      -> v1.2.0
#18 2.851  * [new tag]         v1.2.0.1    -> v1.2.0.1
#18 2.851  * [new tag]         v1.2.0.2    -> v1.2.0.2
#18 2.851  * [new tag]         v1.2.0.3    -> v1.2.0.3
#18 2.851  * [new tag]         v1.2.0.4    -> v1.2.0.4
#18 2.852  * [new tag]         v1.2.0.5    -> v1.2.0.5
#18 2.852  * [new tag]         v1.2.0.6    -> v1.2.0.6
#18 2.852  * [new tag]         v1.2.0.7    -> v1.2.0.7
#18 2.852  * [new tag]         v1.2.0.8    -> v1.2.0.8
#18 2.853  * [new tag]         v1.2.1      -> v1.2.1
#18 2.853  * [new tag]         v1.2.1.1    -> v1.2.1.1
#18 2.853  * [new tag]         v1.2.1.2    -> v1.2.1.2
#18 2.853  * [new tag]         v1.2.10     -> v1.2.10
#18 2.854  * [new tag]         v1.2.11     -> v1.2.11
#18 2.854  * [new tag]         v1.2.2      -> v1.2.2
#18 2.854  * [new tag]         v1.2.2.1    -> v1.2.2.1
#18 2.855  * [new tag]         v1.2.2.2    -> v1.2.2.2
#18 2.855  * [new tag]         v1.2.2.3    -> v1.2.2.3
#18 2.855  * [new tag]         v1.2.2.4    -> v1.2.2.4
#18 2.855  * [new tag]         v1.2.3      -> v1.2.3
#18 2.855  * [new tag]         v1.2.3.1    -> v1.2.3.1
#18 2.856  * [new tag]         v1.2.3.2    -> v1.2.3.2
#18 2.856  * [new tag]         v1.2.3.3    -> v1.2.3.3
#18 2.856  * [new tag]         v1.2.3.4    -> v1.2.3.4
#18 2.857  * [new tag]         v1.2.3.5    -> v1.2.3.5
#18 2.857  * [new tag]         v1.2.3.6    -> v1.2.3.6
#18 2.857  * [new tag]         v1.2.3.7    -> v1.2.3.7
#18 2.857  * [new tag]         v1.2.3.8    -> v1.2.3.8
#18 2.858  * [new tag]         v1.2.3.9    -> v1.2.3.9
#18 2.858  * [new tag]         v1.2.4      -> v1.2.4
#18 2.858  * [new tag]         v1.2.4-pre1 -> v1.2.4-pre1
#18 2.858  * [new tag]         v1.2.4-pre2 -> v1.2.4-pre2
#18 2.859  * [new tag]         v1.2.4.1    -> v1.2.4.1
#18 2.859  * [new tag]         v1.2.4.2    -> v1.2.4.2
#18 2.859  * [new tag]         v1.2.4.3    -> v1.2.4.3
#18 2.859  * [new tag]         v1.2.4.4    -> v1.2.4.4
#18 2.860  * [new tag]         v1.2.4.5    -> v1.2.4.5
#18 2.860  * [new tag]         v1.2.5      -> v1.2.5
#18 2.860  * [new tag]         v1.2.5.1    -> v1.2.5.1
#18 2.860  * [new tag]         v1.2.5.2    -> v1.2.5.2
#18 2.861  * [new tag]         v1.2.5.3    -> v1.2.5.3
#18 2.861  * [new tag]         v1.2.6      -> v1.2.6
#18 2.861  * [new tag]         v1.2.6.1    -> v1.2.6.1
#18 2.862  * [new tag]         v1.2.7      -> v1.2.7
#18 2.862  * [new tag]         v1.2.7.1    -> v1.2.7.1
#18 2.862  * [new tag]         v1.2.7.2    -> v1.2.7.2
#18 2.862  * [new tag]         v1.2.7.3    -> v1.2.7.3
#18 2.862  * [new tag]         v1.2.8      -> v1.2.8
#18 2.863  * [new tag]         v1.2.9      -> v1.2.9
#18 2.869 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 2.873 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 2.880 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 2.924 Checkout unsuccessful.
#18 DONE 3.1s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:11e18c1880dcde47f7e90585e19f8dc04ff18e4f765cfe46a0403d8547275187
#19 DONE 0.5s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:1972fa263e9299c688b430ce04c1cac0899b6dda8e2b8799d75dd942572945e6
#20 0.472 Run fuzzer_build to build the target
#20 0.591 FUZZ_TARGET = zlib_uncompress_fuzzer
#20 0.591 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.591 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.596 Building benchmark zlib_zlib_uncompress_fuzzer with fuzzer afl
#20 0.600 + ./configure
#20 0.702 Checking for shared library support...
#20 0.774 Building shared library libz.so.1.2.11.1-motley with clang.
#20 0.819 Checking for size_t... Yes.
#20 0.843 Checking for off64_t... Yes.
#20 0.844 Checking for fseeko... Yes.
#20 0.983 Checking for strerror... Yes.
#20 1.024 Checking for unistd.h... Yes.
#20 1.054 Checking for stdarg.h... Yes.
#20 1.098 Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().
#20 1.250 Checking for vsnprintf() in stdio.h... Yes.
#20 1.286 Checking for return value of vsnprintf()... Yes.
#20 1.312 Checking for attribute(visibility) support... Yes.
#20 1.326 ++ nproc
#20 1.327 + make -j8 clean
#20 1.330 rm -f *.o *.lo *~ \
#20 1.330    example minigzip examplesh minigzipsh \
#20 1.330    example64 minigzip64 \
#20 1.330    infcover \
#20 1.330    libz.* foo.gz so_locations \
#20 1.330    _match.s maketree contrib/infback9/*.o
#20 1.333 rm -rf objs
#20 1.334 rm -f *.gcda *.gcno *.gcov
#20 1.336 rm -f contrib/infback9/*.gcda contrib/infback9/*.gcno contrib/infback9/*.gcov
#20 1.338 ++ nproc
#20 1.339 + make -j8 all
#20 1.343 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -c -o example.o test/example.c
#20 1.344 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o adler32.o adler32.c
#20 1.344 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o crc32.o crc32.c
#20 1.345 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o deflate.o deflate.c
#20 1.345 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o infback.o infback.c
#20 1.346 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o inffast.o inffast.c
#20 1.347 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o inflate.o inflate.c
#20 1.347 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o inftrees.o inftrees.c
#20 1.537 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o trees.o trees.c
#20 1.560 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o zutil.o zutil.c
#20 1.580 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o compress.o compress.c
#20 1.647 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o uncompr.o uncompr.c
#20 1.648 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzclose.o gzclose.c
#20 1.661 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzlib.o gzlib.c
#20 1.686 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzread.o gzread.c
#20 1.721 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzwrite.o gzwrite.c
#20 1.730 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -c -o minigzip.o test/minigzip.c
#20 1.903 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/adler32.o adler32.c
#20 1.909 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/crc32.o crc32.c
#20 1.916 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/deflate.o deflate.c
#20 2.009 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/infback.o infback.c
#20 2.049 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/inffast.o inffast.c
#20 2.107 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/inflate.o inflate.c
#20 2.224 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/inftrees.o inftrees.c
#20 2.295 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/trees.o trees.c
#20 2.407 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/zutil.o zutil.c
#20 2.452 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/compress.o compress.c
#20 2.501 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/uncompr.o uncompr.c
#20 2.532 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzclose.o gzclose.c
#20 2.537 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzlib.o gzlib.c
#20 2.580 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzread.o gzread.c
#20 2.619 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzwrite.o gzwrite.c
#20 2.663 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -D_FILE_OFFSET_BITS=64 -c -o example64.o test/example.c
#20 2.731 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -D_FILE_OFFSET_BITS=64 -c -o minigzip64.o test/minigzip.c
#20 2.781 ar rc libz.a adler32.o crc32.o deflate.o infback.o inffast.o inflate.o inftrees.o trees.o zutil.o compress.o uncompr.o gzclose.o gzlib.o gzread.o gzwrite.o 
#20 2.805 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o example example.o -L. libz.a
#20 2.903 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o minigzip minigzip.o -L. libz.a
#20 2.910 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o example64 example64.o -L. libz.a
#20 2.911 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o minigzip64 minigzip64.o -L. libz.a
#20 3.327 clang -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o libz.so.1.2.11.1-motley adler32.lo crc32.lo deflate.lo infback.lo inffast.lo inflate.lo inftrees.lo trees.lo zutil.lo compress.lo uncompr.lo gzclose.lo gzlib.lo gzread.lo gzwrite.lo  -lc 
#20 3.386 rm -f libz.so libz.so.1
#20 3.387 ln -s libz.so.1.2.11.1-motley libz.so
#20 3.389 ln -s libz.so.1.2.11.1-motley libz.so.1
#20 3.391 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o examplesh example.o -L. libz.so.1.2.11.1-motley
#20 3.392 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o minigzipsh minigzip.o -L. libz.so.1.2.11.1-motley
#20 3.508 ++ find /src -name '*_fuzzer.cc'
#20 3.534 + for f in $(find $SRC -name '*_fuzzer.cc')
#20 3.534 ++ basename -s .cc /src/zlib_uncompress2_fuzzer.cc
#20 3.535 + b=zlib_uncompress2_fuzzer
#20 3.535 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I. /src/zlib_uncompress2_fuzzer.cc -o /out/zlib_uncompress2_fuzzer /libAFL.a ./libz.a
#20 3.820 + for f in $(find $SRC -name '*_fuzzer.cc')
#20 3.821 ++ basename -s .cc /src/zlib_uncompress_fuzzer.cc
#20 3.822 + b=zlib_uncompress_fuzzer
#20 3.822 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I. /src/zlib_uncompress_fuzzer.cc -o /out/zlib_uncompress_fuzzer /libAFL.a ./libz.a
#20 4.118 + zip /out/seed_corpus.zip CMakeLists.txt Makefile.in adler32.c adler32.lo adler32.o compress.c compress.lo compress.o configure.log crc32.c crc32.h crc32.lo crc32.o deflate.c deflate.h deflate.lo deflate.o example.o example64.o gzclose.c gzclose.lo gzclose.o gzguts.h gzlib.c gzlib.lo gzlib.o gzread.c gzread.lo gzread.o gzwrite.c gzwrite.lo gzwrite.o infback.c infback.lo infback.o inffast.c inffast.h inffast.lo inffast.o inffixed.h inflate.c inflate.h inflate.lo inflate.o inftrees.c inftrees.h inftrees.lo inftrees.o libz.a libz.so libz.so.1 libz.so.1.2.11.1-motley make_vms.com minigzip.o minigzip64.o treebuild.xml trees.c trees.h trees.lo trees.o uncompr.c uncompr.lo uncompr.o zconf.h zconf.h.cmakein zconf.h.in zlib.3 zlib.3.pdf zlib.h zlib.map zlib.pc zlib.pc.cmakein zlib.pc.in zutil.c zutil.h zutil.lo zutil.o
#20 4.121   adding: CMakeLists.txt (deflated 68%)
#20 4.122   adding: Makefile.in (deflated 77%)
#20 4.122   adding: adler32.c (deflated 69%)
#20 4.122   adding: adler32.lo (deflated 70%)
#20 4.123   adding: adler32.o (deflated 70%)
#20 4.123   adding: compress.c (deflated 63%)
#20 4.123   adding: compress.lo (deflated 71%)
#20 4.124   adding: compress.o (deflated 71%)
#20 4.124   adding: configure.log (deflated 79%)
#20 4.124   adding: crc32.c (deflated 75%)
#20 4.126   adding: crc32.h (deflated 61%)
#20 4.163   adding: crc32.lo (deflated 43%)
#20 4.164   adding: crc32.o (deflated 47%)
#20 4.165   adding: deflate.c (deflated 76%)
#20 4.169   adding: deflate.h (deflated 64%)
#20 4.169   adding: deflate.lo (deflated 77%)
#20 4.174   adding: deflate.o (deflated 79%)
#20 4.179   adding: example.o (deflated 77%)
#20 4.180   adding: example64.o (deflated 77%)
#20 4.181   adding: gzclose.c (deflated 41%)
#20 4.181   adding: gzclose.lo (deflated 67%)
#20 4.182   adding: gzclose.o (deflated 67%)
#20 4.182   adding: gzguts.h (deflated 63%)
#20 4.182   adding: gzlib.c (deflated 73%)
#20 4.183   adding: gzlib.lo (deflated 77%)
#20 4.184   adding: gzlib.o (deflated 78%)
#20 4.185   adding: gzread.c (deflated 74%)
#20 4.186   adding: gzread.lo (deflated 74%)
#20 4.187   adding: gzread.o (deflated 74%)
#20 4.189   adding: gzwrite.c (deflated 79%)
#20 4.189   adding: gzwrite.lo (deflated 75%)
#20 4.191   adding: gzwrite.o (deflated 75%)
#20 4.192   adding: infback.c (deflated 76%)
#20 4.193   adding: infback.lo (deflated 69%)
#20 4.194   adding: infback.o (deflated 69%)
#20 4.196   adding: inffast.c (deflated 75%)
#20 4.196   adding: inffast.h (deflated 32%)
#20 4.196   adding: inffast.lo (deflated 69%)
#20 4.197   adding: inffast.o (deflated 66%)
#20 4.197   adding: inffixed.h (deflated 75%)
#20 4.198   adding: inflate.c (deflated 77%)
#20 4.200   adding: inflate.h (deflated 67%)
#20 4.200   adding: inflate.lo (deflated 73%)
#20 4.204   adding: inflate.o (deflated 73%)
#20 4.207   adding: inftrees.c (deflated 67%)
#20 4.208   adding: inftrees.h (deflated 58%)
#20 4.208   adding: inftrees.lo (deflated 67%)
#20 4.208   adding: inftrees.o (deflated 66%)
#20 4.209   adding: libz.a (deflated 73%)
#20 4.229   adding: libz.so (deflated 55%)
#20 4.241   adding: libz.so.1 (deflated 55%)
#20 4.253   adding: libz.so.1.2.11.1-motley (deflated 55%)
#20 4.265   adding: make_vms.com (deflated 72%)
#20 4.266   adding: minigzip.o (deflated 74%)
#20 4.267   adding: minigzip64.o (deflated 74%)
#20 4.267   adding: treebuild.xml (deflated 80%)
#20 4.267   adding: trees.c (deflated 73%)
#20 4.269   adding: trees.h (deflated 83%)
#20 4.270   adding: trees.lo (deflated 72%)
#20 4.272   adding: trees.o (deflated 71%)
#20 4.273   adding: uncompr.c (deflated 62%)
#20 4.274   adding: uncompr.lo (deflated 66%)
#20 4.274   adding: uncompr.o (deflated 66%)
#20 4.274   adding: zconf.h (deflated 73%)
#20 4.275   adding: zconf.h.cmakein (deflated 73%)
#20 4.276   adding: zconf.h.in (deflated 73%)
#20 4.276   adding: zlib.3 (deflated 54%)
#20 4.276   adding: zlib.3.pdf (deflated 17%)
#20 4.277   adding: zlib.h (deflated 73%)
#20 4.282   adding: zlib.map (deflated 68%)
#20 4.282   adding: zlib.pc (deflated 38%)
#20 4.282   adding: zlib.pc.cmakein (deflated 39%)
#20 4.282   adding: zlib.pc.in (deflated 38%)
#20 4.282   adding: zutil.c (deflated 65%)
#20 4.283   adding: zutil.h (deflated 63%)
#20 4.283   adding: zutil.lo (deflated 72%)
#20 4.283   adding: zutil.o (deflated 73%)
#20 4.285 ++ find /src -name '*_fuzzer.c'
#20 4.304 + for f in $(find $SRC -name '*_fuzzer.c')
#20 4.304 ++ basename -s .c /src/checksum_fuzzer.c
#20 4.305 + b=checksum_fuzzer
#20 4.305 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/checksum_fuzzer.c -c -o /tmp/checksum_fuzzer.o
#20 4.383 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/checksum_fuzzer /tmp/checksum_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 4.629 + rm -f /tmp/checksum_fuzzer.o
#20 4.631 + ln -sf /out/seed_corpus.zip /out/checksum_fuzzer_seed_corpus.zip
#20 4.633 + for f in $(find $SRC -name '*_fuzzer.c')
#20 4.633 ++ basename -s .c /src/compress_fuzzer.c
#20 4.634 + b=compress_fuzzer
#20 4.634 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/compress_fuzzer.c -c -o /tmp/compress_fuzzer.o
#20 4.699 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/compress_fuzzer /tmp/compress_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 4.940 + rm -f /tmp/compress_fuzzer.o
#20 4.941 + ln -sf /out/seed_corpus.zip /out/compress_fuzzer_seed_corpus.zip
#20 4.942 + for f in $(find $SRC -name '*_fuzzer.c')
#20 4.943 ++ basename -s .c /src/example_small_fuzzer.c
#20 4.944 + b=example_small_fuzzer
#20 4.944 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/example_small_fuzzer.c -c -o /tmp/example_small_fuzzer.o
#20 5.027 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/example_small_fuzzer /tmp/example_small_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 5.268 + rm -f /tmp/example_small_fuzzer.o
#20 5.270 + ln -sf /out/seed_corpus.zip /out/example_small_fuzzer_seed_corpus.zip
#20 5.272 + for f in $(find $SRC -name '*_fuzzer.c')
#20 5.272 ++ basename -s .c /src/example_large_fuzzer.c
#20 5.273 + b=example_large_fuzzer
#20 5.273 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/example_large_fuzzer.c -c -o /tmp/example_large_fuzzer.o
#20 5.362 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/example_large_fuzzer /tmp/example_large_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 5.602 + rm -f /tmp/example_large_fuzzer.o
#20 5.603 + ln -sf /out/seed_corpus.zip /out/example_large_fuzzer_seed_corpus.zip
#20 5.604 + for f in $(find $SRC -name '*_fuzzer.c')
#20 5.605 ++ basename -s .c /src/example_flush_fuzzer.c
#20 5.606 + b=example_flush_fuzzer
#20 5.606 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/example_flush_fuzzer.c -c -o /tmp/example_flush_fuzzer.o
#20 5.680 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/example_flush_fuzzer /tmp/example_flush_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 5.925 + rm -f /tmp/example_flush_fuzzer.o
#20 5.927 + ln -sf /out/seed_corpus.zip /out/example_flush_fuzzer_seed_corpus.zip
#20 5.929 + for f in $(find $SRC -name '*_fuzzer.c')
#20 5.929 ++ basename -s .c /src/example_dict_fuzzer.c
#20 5.931 + b=example_dict_fuzzer
#20 5.931 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/example_dict_fuzzer.c -c -o /tmp/example_dict_fuzzer.o
#20 6.013 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/example_dict_fuzzer /tmp/example_dict_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 6.250 + rm -f /tmp/example_dict_fuzzer.o
#20 6.251 + ln -sf /out/seed_corpus.zip /out/example_dict_fuzzer_seed_corpus.zip
#20 6.253 + for f in $(find $SRC -name '*_fuzzer.c')
#20 6.253 ++ basename -s .c /src/minigzip_fuzzer.c
#20 6.254 + b=minigzip_fuzzer
#20 6.254 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/minigzip_fuzzer.c -c -o /tmp/minigzip_fuzzer.o
#20 6.355 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/minigzip_fuzzer /tmp/minigzip_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 6.596 + rm -f /tmp/minigzip_fuzzer.o
#20 6.597 + ln -sf /out/seed_corpus.zip /out/minigzip_fuzzer_seed_corpus.zip
#20 6.599 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 6.9s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:fabd412f422f7f2eff66c45ddae7893989d745d8d1ef744fb3a3963651e83fce done
#21 naming to gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress_fuzzer done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:bf6cad666793196070d53e0a8153b722cccdd5f18ef0dda6cfcf3fa821fc0134
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:e9ca7a8b2feafcbdeb3499169431f22dcbffd98b7748f8902c5548106f57f2da
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress_fuzzer-intermediate
#5 sha256:39059e120bf7c0fa3d133e85bc0976f30c2e13f832601bc1cbb4e59b9ea30afa
#5 DONE 1.1s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:70686c9e833fdcefe0775f583d9dcefc617acd878b5bc490ac010e4c1ee4d56c
#6 writing image sha256:70686c9e833fdcefe0775f583d9dcefc617acd878b5bc490ac010e4c1ee4d56c done
#6 naming to gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress_fuzzer-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:cce346db38ef96f1f428b00777d78374f3c10fb5f2236b39dfa2ef904099a2ed
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:a9605aa9fe16d3f3c7c01c8a01674f2feeb689270f3b83c5c00c1c07e519ac25
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress_fuzzer-intermediate:latest
#3 sha256:30715d39b62cdcb3e993e6be6488739729840bf1a904b92e3015d513afccc258
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress_fuzzer:latest
#4 sha256:ae06c8c8ab2ca34969d0308b82ae96afb0333558aa6b0e84f4822e046b468b7d
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:944ad94314c79f4d670ff5c8a75cdab2012fe41069b76350be7ba33c5f1cf871
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress_fuzzer-intermediate
#6 sha256:11392512876c620e36ac03e96510557e24b78691ccdcd452da116ea7bd82d3e4
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress_fuzzer
#10 sha256:3f6e8ff22d9c00af48b4842f7d7a7b9772ac414d6fb81ac23ebbab2d420c13ac
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress_fuzzer
#5 sha256:f07ff84ef6cac32fcc6f119192c61086df742d885e3e549607b0b98503e8681f
#5 DONE 1.4s

#12 [internal] load build context
#12 sha256:944ad94314c79f4d670ff5c8a75cdab2012fe41069b76350be7ba33c5f1cf871
#12 ...

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress_fuzzer
#10 sha256:3f6e8ff22d9c00af48b4842f7d7a7b9772ac414d6fb81ac23ebbab2d420c13ac
#10 DONE 0.4s

#12 [internal] load build context
#12 sha256:944ad94314c79f4d670ff5c8a75cdab2012fe41069b76350be7ba33c5f1cf871
#12 transferring context: 17.52MB 0.6s done
#12 DONE 0.7s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:9481485d072b519d4a66b2b6a29a7603e2ff88ae789e4ce9b8b6ac0c013f72d3
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:185a1f43e0d41c867203d735381f1c197de4f9053485a808a299feae364403a7
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:2f14b0e5ed1ce3660e13352fb1f1c292b9898b3f07412a2584e1a4920695141e
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:c5ac709f516ac2acb079fa6202bf070578d6e2b7ce9d87b2120e25d47c67cdf6
#11 DONE 0.2s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:1c49b2718bc8ede3cc45b5e4d6f31661441d12359178b7dad9a31a194a9b875a
#13 DONE 1.0s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:8ca63ef6d1ae6cfe2df74515ac19f3b9e19e26029a8e13be0423c054bf715187
#14 DONE 0.4s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:9263090ebcad16cc44e83ac840753e59f080366b9e7435f4b8d0c043cab8aa5d
#15 DONE 0.6s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:82858201c6ecdc2ab19d1c60a20f5142b83b0640911a038503222aba1403c975
#16 DONE 0.7s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:24d7e4336d550cb76b69a8f85dba48684febc101ddb88a3912884289e1519e6e
#17 DONE 0.3s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:a9d718f02c5b6750ac433ea2a749eb37d8e461f451f3305bdae5f3cd1a5d8e8c
#18 DONE 0.2s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:4ec3e89a4bac23e5d770252656961127a315335a80e34e6b0cfb0f1f2941a309
#19 DONE 0.2s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:7044dd11dc810d79b300d4fa39873d925101bcfdfc30aa3cad91450d20cd8fd0
#20 DONE 0.5s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:5447447f5852908cf226ff0a6238d83fc1641ba57372c5f1290998b307789c48 done
#21 naming to gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress_fuzzer done
#21 DONE 0.0s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Doing final sync.
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:4965c66e8e44728a16985fc2cddce45cb9e22433827d8018d7d7f4c57adcaa4e
#1 transferring dockerfile: 32B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:ba68dcd1c1a86026956a80dd236e97b830555a0297dc7062cd42d1aa24366ef8
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:77750d283f2957d1beeddda2e8f6c5604ab5f969a3616e9cac40f4261ca04c0a
#5 sha256:7999addb2cd81975cd6421c6aaef5643a901995c540a40e8df741ab4c30f6043
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/zlib_zlib_uncompress_fuzzer
#4 sha256:f39d5d9aa9c234b5a86a1595de069dba9e5a5c2d551e6f3aa58c38eb463682b9
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:645bdb23878c9a26fddafad200aa29d6c0f33edd94490894f9cdc5bfa841e40d
#9 transferring context: 399B done
#9 DONE 0.1s

#8 [4/5] WORKDIR zlib
#8 sha256:64713c70ad922c74cc30dabac865ace84eb0dd0f10ba324f819d64d403c1585f
#8 CACHED

#7 [3/5] RUN git clone --depth 1 -b develop https://github.com/madler/zlib.git
#7 sha256:f0bc315b74d41abe7af8731ffa647bc6fe9bf8a67b7a4851eacf3d1ca44b4120
#7 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:52e32c454805a8c94e441551d01b16d090304920e0b4ce6b465dec91bafa72a3
#6 CACHED

#10 [5/5] COPY build.sh *_fuzzer.c* /src/
#10 sha256:9a469af858503a6079fd168470ab532ebb9d6a9faabd30d817f50fe9580d4931
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:62efc2de0b5969692ab4d69d20102e44a9338594321db16cb83fc2b696faefd2 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/zlib_zlib_uncompress_fuzzer done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:22441f7c495b67a8675d8028f45ff9230c002abac462361083a626ea3437fbe7
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:1638fa7e740b5c042b469a8e2b4e1175180478e1c9076f3d37f1addbb94ebfae
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/zlib_zlib_uncompress_fuzzer:latest
#3 sha256:5efe1ea8e1a50051368ebfb512b7cb21dd6255327a3736a118c8faa866aadb2c
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/zlib_zlib_uncompress_fuzzer
#5 sha256:a63794270842643cd5b982999f5194003a4579b729e4020578c8d7eee3ecb939
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress_fuzzer-intermediate
#4 sha256:ca3ab7af68c414c6701f594a1b001313092cbfef597c27f213deeb97c0337ed2
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:2a8e9fbfc48335fe30be5c3847ecd499eab6bbae86547b94f54c91cf8dfef941
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:7490a15d9cc30a8ded3afb45aaab8f78280d941ff3560c0b378cb451a75afcfb
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:6efaf047c93c939bc3378fb38fb1464ad52e9d75158d5ffb2389df1bdd807b96 done
#8 naming to gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress_fuzzer-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:e3e5a9024175e4d1786a8afe80f407649814d504e3fa85b6f2d808755a6fde33
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:46edea1ff0143723e81bbf844f94a27038d31f0e4308405966aeea16ba8522bd
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:52000f73e68ffe62948eed00b73d54317f43a5c192a97792d3a637d3ff71b9ed
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:a49d8ead1d09cff81d4b9e667c7832c52dc80cee0d1eca5578aacbeec068fc1d
#11 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:8de8d0fe01e42d841638fe76abe04cbc05ba71d96b68dc7ea97ee48be47a81d3
#10 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:ef6464b293870d8e1d8cb1e335060e2d1517d1db14079a4dd5eeb5c9513d487f
#9 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:9a6e2bfc7a5ad1cb3e4a42bdcfe35047fe16f75619be8292ef083e8a43883fc7
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:db37108b741762d6fc963c78f4ea99d80edbbe38f2ea9e4cf93847b349417cfa 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:40a0f14d5fae3e9ffcc86ea309a3a25df90df1b501d6cf35e2b7dab198a2445e
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:81be57de417c84c491005d1c81d3dc102d2fe0233aa6357f183aa5fcabfdf71b
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress_fuzzer-intermediate:latest
#3 sha256:27cbce30be9aae6857b9cf4d229880e0fc42efdf9200ee113f087301a1c8011b
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:d3e6be0f2d08fb238f50470fcd42350a803ef369f474e77408faf692fd1220da
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress_fuzzer-intermediate
#6 sha256:9ea644ee64e9a92ac78c8fbe9aa39ba96c0624f64e0eb6d4772f4a170e2ec13d
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress_fuzzer
#5 sha256:70e68119651ed983b9eb42a6ab7cc8259726b79e3102085643f94c2fa25f2c96
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:d3e6be0f2d08fb238f50470fcd42350a803ef369f474e77408faf692fd1220da
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.1s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:b6076ed59fb1fa6ed27ad55bb346e0bbe04cd82a568a24faff9591c01745a3a3
#14 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:095123f1ebabc220da2f069a99019601a9c213e3cd9ad0b9b7eca14ead7966b0
#19 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:4f2782305cf8bf517220f0a27eff7d40f159ca0c508f8019e6e465421b47bfea
#10 CACHED

#15 [stage-1  8/13] COPY benchmarks/zlib_zlib_uncompress_fuzzer/benchmark.yaml /
#15 sha256:27753319ed42471572246f7d5735b09a67edd6179b820bba2dbb193023493acc
#15 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:86884ce4739fee06159fd2ebea25c5fbbab4a7ce4bf59339519842e4be926e08
#18 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:5a3108bee9924dac52ea8055097edaeecd79f48ef3b6da3e520973dac7bfd52b
#11 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:fdea01a83a4ec9549b6c4fb06d74a5b13023704dca2984f450d584a53a8105e5
#9 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:05bfb5725b09ea8075de5d9b167477118255f02effa281a39cc6c361059e69fb
#16 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:9721480e17b6397c8c7220f95d256153455c897d85a23189226ef673c7cc54fe
#17 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:ad68ef103b61010f7dcf37eafd50160304c3a468db9535d936fc681909c2c24a
#8 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:130fa1766df8d6dac7f85c59129d6989fdca359d86311b84bd1ec8b6ee01e37f
#13 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:4c6fa8da21fbe39bb9b9b1b9e142569784dacf505273b3d9c3f40f8e068eceab
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:fabd412f422f7f2eff66c45ddae7893989d745d8d1ef744fb3a3963651e83fce
#21 writing image sha256:fabd412f422f7f2eff66c45ddae7893989d745d8d1ef744fb3a3963651e83fce done
#21 naming to gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress_fuzzer done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:8a129761399b4d990eab6ffc074bd995e42b6fe7c350317142ec369852db7fec
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:2964413108d5babb47fba1d447efd9dd4bb7f6c6b059300712c731ab8a27eb61
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress_fuzzer-intermediate
#5 sha256:39059e120bf7c0fa3d133e85bc0976f30c2e13f832601bc1cbb4e59b9ea30afa
#5 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:70686c9e833fdcefe0775f583d9dcefc617acd878b5bc490ac010e4c1ee4d56c
#6 writing image sha256:70686c9e833fdcefe0775f583d9dcefc617acd878b5bc490ac010e4c1ee4d56c done
#6 naming to gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress_fuzzer-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:ecc7c62078e7f4501679b03219c87283f3920cca8195fe870200553de11f913e
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:48decb0a900fb1cf1a528fd409bf8daeec54ee210904a2fd898e098068c8a4b3
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress_fuzzer-intermediate:latest
#4 sha256:30715d39b62cdcb3e993e6be6488739729840bf1a904b92e3015d513afccc258
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress_fuzzer:latest
#3 sha256:ae06c8c8ab2ca34969d0308b82ae96afb0333558aa6b0e84f4822e046b468b7d
#3 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress_fuzzer-intermediate
#6 sha256:11392512876c620e36ac03e96510557e24b78691ccdcd452da116ea7bd82d3e4
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress_fuzzer
#5 sha256:f07ff84ef6cac32fcc6f119192c61086df742d885e3e549607b0b98503e8681f
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/zlib_zlib_uncompress_fuzzer
#10 sha256:3f6e8ff22d9c00af48b4842f7d7a7b9772ac414d6fb81ac23ebbab2d420c13ac
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:28c6bd3d573cc1c992a3d893932eee73f10e093416900953e2e7b4e2aa348f13
#12 transferring context: 17.52MB 0.6s done
#12 DONE 0.6s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:cb4203c5f8bc003e038d314cd815fe8d9be92e0bae7f327b5fc050ffc61eb7f7
#13 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:32c4df32b7c31520eb5c2667b9cb96fd99231cfe35baba7d9a1cb8bcc7776e75
#18 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:9481485d072b519d4a66b2b6a29a7603e2ff88ae789e4ce9b8b6ac0c013f72d3
#7 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:30948f54452d267060fbbd543022f7de1736c01bceb42d75463a7a433e233a0f
#17 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:2f14b0e5ed1ce3660e13352fb1f1c292b9898b3f07412a2584e1a4920695141e
#9 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:33861d6d895950982d863eb5da80efab11ada8214e7de5ed518e649694badf48
#15 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:185a1f43e0d41c867203d735381f1c197de4f9053485a808a299feae364403a7
#8 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:15e1b2bfd8282cc3f5bf60285a28731c9c346a9ca49e5a1beb2a1de2d99199d4
#14 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:3343e615c8c4a375764c7400b7c2d2f7256a40d1a924a01ba37b58cfa301f056
#19 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:c5ac709f516ac2acb079fa6202bf070578d6e2b7ce9d87b2120e25d47c67cdf6
#11 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:fcf91b2ef7b076f4f2aa8190a9777d1eb29d0b5f9f924512413b28fe334b1273
#16 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:825a0809e395307be08cd2dd089055919b42ffd9feee5cbeea7dbd717dfebdc2
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:5447447f5852908cf226ff0a6238d83fc1641ba57372c5f1290998b307789c48 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/zlib_zlib_uncompress_fuzzer done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Doing final sync.
