WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: example_example.
INFO:root:Please run "make test-run-afl-example_example" to test integration.
#2 [internal] load .dockerignore
#2 sha256:19e56185693920317b70ca9aa5104481ddc142175be56553fb0e0cac086df2bb
#2 transferring context: 2B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:881d90b025193dd66cf1eb5034ff4fb7555bdfc098eedd2e414d9ac0bc5bf2b8
#1 transferring dockerfile: 32B done
#1 DONE 0.8s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#9 [internal] load build context
#9 sha256:7d8cd922745880e4eed355c540240481e8cb9cbd6168e1439d2d90e285022ab1
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:f4e5ea12494fab091c5d830cf803b3421f2860f729b9d1b07da44924396cf8cf
#5 sha256:ef290950573a2779ee526af357b28fbddfc20d7409aa51f58f777c9e972cba29
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/example_example
#4 sha256:fee6f207abbeb47bb7bd3b02d1b477250838d9840b3281959d3fb57bdbff2ed0
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/example_example:latest: not found

#9 [internal] load build context
#9 sha256:7d8cd922745880e4eed355c540240481e8cb9cbd6168e1439d2d90e285022ab1
#9 transferring context: 1.12kB done
#9 DONE 0.2s

#6 [2/5] RUN apt-get update && apt-get install -y make
#6 sha256:c655d45ce477be96b5f3a9f7ab5c78e25aa68f6ca8d817add7b8a6700bcfa389
#6 CACHED

#7 [3/5] RUN git clone https://github.com/google/oss-fuzz.git my-git-repo
#7 sha256:15eb201c20ac354c2d73bb9b5e82ad2a07faffabcab2c9f293379986dabe5237
#7 CACHED

#8 [4/5] WORKDIR my-git-repo
#8 sha256:8a0fb832d74c5be84fe305021da0718077399fac99b8e66a0453ed6f0774810e
#8 CACHED

#10 [5/5] COPY build.sh /src/
#10 sha256:30a05bf84b0c0a95ba771141b342c1fdf07e3ab7b17c82c19037a4a62b744400
#10 DONE 0.2s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:4eaa63f22f860005fb8803bfb3877a3b9c4798747560f937793839d476de0964
#11 writing image sha256:4eaa63f22f860005fb8803bfb3877a3b9c4798747560f937793839d476de0964 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/example_example done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/example_example:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:93adee5ca37ac423ce23a4b52ab9893b349951ec8a958792242877ab98b9f9a7
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:f59d214b1d31d0a7bbec5f3e2b25c3a88b15be283dd790770a07fac064ddebf5
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/example_example:latest
#3 sha256:df176d56e8a51f436b3c86f96291547209b1b5db7e4c33909b19098aed62efc8
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/example_example
#5 sha256:5b6528e636d73d74d9ab1e353858392f2a9c07477c844af0e75cd09ab245a0a2
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/example_example-intermediate
#4 sha256:43ee9f70b6b973c6ed65ff4fec8a248e151a9aa033c91c1bd6a5bc9f0359a7cb
#4 ERROR: gcr.io/fuzzbench/builders/afl/example_example-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/example_example
#5 sha256:5b6528e636d73d74d9ab1e353858392f2a9c07477c844af0e75cd09ab245a0a2
#5 DONE 0.4s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:b285f1142e5daee217deec12dab7e8d29098dab8a15653f2c6e258d45084ac44
#6 0.470 Cloning into '/afl'...
#6 1.539 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.539 
#6 1.539 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.539 changes and commit them, and you can discard any commits you make in this
#6 1.539 state without impacting any branches by switching back to a branch.
#6 1.539 
#6 1.539 If you want to create a new branch to retain commits you create, you may
#6 1.539 do so (now or later) by using -c with the switch command. Example:
#6 1.539 
#6 1.539   git switch -c <new-branch-name>
#6 1.539 
#6 1.539 Or undo this operation with:
#6 1.539 
#6 1.539   git switch -
#6 1.539 
#6 1.539 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.539 
#6 1.539 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.563 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.563 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.769 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.773 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 4.162 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.476 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.897 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 5.192 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.592 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.839 ln -sf afl-as as
#6 5.841 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.843 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.844 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.2s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:c8e4aa17d13d970420faa6fbab5de9065dcf5fde84cc3f84625114a57d569279
#7 0.780 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.780 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.800 Get:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#7 0.892 Get:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#7 0.913 Get:5 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#7 1.662 Fetched 336 kB in 1s (351 kB/s)
#7 1.662 Reading package lists...
#7 3.724 Reading package lists...
#7 5.136 Building dependency tree...
#7 5.348 Reading state information...
#7 5.594 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.594 0 upgraded, 0 newly installed, 0 to remove and 3 not upgraded.
#7 5.602 --2022-02-16 00:39:36--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.605 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...
#7 5.607 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.
#7 5.630 HTTP request sent, awaiting response... 200 OK
#7 5.649 Length: 9177 (9.0K) [text/plain]
#7 5.649 Saving to: '/afl/afl_driver.cpp'
#7 5.649 
#7 5.649      0K ........                                              100% 6.29M=0.001s
#7 5.650 
#7 5.650 2022-02-16 00:39:36 (6.29 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.650 
#7 7.436 ar: creating /libAFL.a
#7 DONE 8.0s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:a1a634f9ac01cb071bc61d79fb14362cb658792b63ad2f821b16f9fb87d20115 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/example_example-intermediate 0.0s done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/example_example-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:e4014e5941aa4f8452c6b067ac27b71d9636ca10c39ce6a66c83db57a2167285
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:e488a3e20e32df527c19385b246b895eec36e99c5e4f0e01199740ac9b1a04f8
#2 transferring context: 34B done
#2 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:29659918a21032ab50f0c7a82cf7f3e0a63d492eb327e48f0cf5e7daae9c5d24
#8 transferring context: 559B 0.1s done
#8 DONE 0.2s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:72a5808a661e3925ed1930c9fe02bbfd3df7eb96bf58af1bab09d31de18c45f3
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:05986e1d61f57b2c9534a6ed8616af79aecc703f5e582ea05e07cdfa0cc53a54
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:8cd9719e7745442f8ba15b159fab74c17199fa5b21d271d113882247cb0357d5
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:40fcd96c38817798b0571c017e1ef09e5bb258989ac5ac98f2fc5d17e5f9030c
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:fdad3c224024f20296b0daaf3c6ceeddb238951d00d92572559084824044f956
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:c44554bc1b79132797bba2271435732b57f08a99665af7686aab0ad63b8149ab
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/example_example-intermediate:latest
#3 sha256:4278bbecc26eae4743ecc1a35d647ebf1810777349471b081a5c7fa3951ea7a8
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:4d46e8ec330e4aa0848660c2b1fe76e4d09a1fb9e21235df7dd4792ae3076e4f
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/example_example-intermediate
#6 sha256:f2a483c23e71fe387dbac1e71cf5a28c14701b914a5e2fdddac1acb1d7d76ab9
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/example_example
#5 sha256:55081e2dd948c0bab9d8c2a25515e4d9adc2b2265ee0db17c431ae2796c7e8ac
#5 ERROR: gcr.io/fuzzbench/builders/afl/example_example:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:4d46e8ec330e4aa0848660c2b1fe76e4d09a1fb9e21235df7dd4792ae3076e4f
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.2s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/example_example-intermediate
#6 sha256:f2a483c23e71fe387dbac1e71cf5a28c14701b914a5e2fdddac1acb1d7d76ab9
#6 DONE 1.0s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:4896968d5cd5a94c0ff8f033be4a7d24d84ba1b7a28a1abb5607dc4a1f6b4471
#8 DONE 0.9s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:0a49bea0f1aa9814824a83afdc468fa0be7acb095b2f46bff92f8c5396338970
#9 DONE 22.2s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:a40f61f3e0adcd2cf162813d51c8e4626bf1e5d97bf5ebc29d4b3bc3790ff439
#10 DONE 0.2s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:f136f0a67383a9f4d3400ad0b6c105aec3f7c1f2fa9c396fe5ebf7c346543305
#11 DONE 35.5s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:16f60a204b6c840074efbaef0511fcd1ab91372a345bfc2bb8795091d27b04d9
#13 DONE 0.6s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:cca5f6cfb4b99a9d2064c620d07c069f9d8d55958fe6afc280a54a3e4368261a
#14 DONE 1.0s

#15 [stage-1  8/13] COPY benchmarks/example_example/benchmark.yaml /
#15 sha256:c1781836fd84956fedcd367b3c6158518f2073be4134976e2bce4ac9c10d7575
#15 DONE 0.3s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:dac8ebddb49a967127801b5e46a0931d21e4df3b4e1f9580aa2bac09aefd36db
#16 DONE 0.6s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:50c4e630bf9453dc6e8584375cec3b3bd51a18b2efae4318be1e9721ccce06c8
#17 DONE 1.1s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:a96b7c3a768768c86f25d1959ede187cba0b9e742e32b1bf44070e2a4e86d203
#18 0.525 Checking out commit ca437a20
#18 1.045 Note: switching to 'ca437a20'.
#18 1.045 
#18 1.045 You are in 'detached HEAD' state. You can look around, make experimental
#18 1.045 changes and commit them, and you can discard any commits you make in this
#18 1.045 state without impacting any branches by switching back to a branch.
#18 1.045 
#18 1.045 If you want to create a new branch to retain commits you create, you may
#18 1.045 do so (now or later) by using -c with the switch command. Example:
#18 1.045 
#18 1.045   git switch -c <new-branch-name>
#18 1.045 
#18 1.045 Or undo this operation with:
#18 1.045 
#18 1.045   git switch -
#18 1.045 
#18 1.045 Turn off this advice by setting config variable advice.detachedHead to false
#18 1.045 
#18 1.045 HEAD is now at ca437a20 Update README.md
#18 DONE 1.5s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:2b208b1a244d325f7a6add86103f51bc3ec2bba802fa3614d8a705acd3f303d0
#19 DONE 0.9s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:5ec86fcfb7832d7724e710ddcd4af047fe26d429f7ca822c11db71f6670f087f
#20 0.482 Run fuzzer_build to build the target
#20 0.604 FUZZ_TARGET = example
#20 0.604 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.604 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.622 Building benchmark example_example with fuzzer afl
#20 0.626 + cd projects/example/my-api-repo
#20 0.626 + make clean
#20 0.630 rm -fv *.a *.o *unittest *_fuzzer *_seed_corpus.zip crash-* *.zip
#20 0.633 ++ nproc
#20 0.636 + make -j8 all
#20 0.639 clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 my_api.cpp -c
#20 0.640 clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11   -c -o standalone_fuzz_taget_runner.o standalone_fuzz_taget_runner.cpp
#20 1.576 ar ruv my_api.a my_api.o
#20 1.588 ar: `u' modifier ignored since `D' is the default (see `U')
#20 1.588 ar: creating my_api.a
#20 1.589 a - my_api.o
#20 1.590 clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 do_stuff_unittest.cpp my_api.a -o do_stuff_unittest
#20 2.369 clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 do_stuff_fuzzer.cpp my_api.a /libAFL.a -o do_stuff_fuzzer
#20 3.356 zip -q -r do_stuff_fuzzer_seed_corpus.zip do_stuff_test_data
#20 3.372 ++ nproc
#20 3.374 + make -j8 check
#20 3.376 ./do_stuff_unittest
#20 3.378  => 0
#20 3.378 foo => 1
#20 3.378 omg => 1
#20 3.378 bar => 1
#20 3.378 ouch => 1
#20 3.378 foobar => 3
#20 3.378 foouchbar => 4
#20 3.379 ./do_stuff_fuzzer do_stuff_test_data/*
#20 3.382 ======================= INFO =========================
#20 3.382 This binary is built for AFL-fuzz.
#20 3.382 To run the target function on individual input(s) execute this:
#20 3.382   ./do_stuff_fuzzer < INPUT_FILE
#20 3.382 or
#20 3.382   ./do_stuff_fuzzer INPUT_FILE1 [INPUT_FILE2 ... ]
#20 3.382 To fuzz with afl-fuzz execute this:
#20 3.382   afl-fuzz [afl-flags] ./do_stuff_fuzzer [-N]
#20 3.382 afl-fuzz will run N iterations before re-spawning the process (default: 1000)
#20 3.382 ======================================================
#20 3.382 Reading 5 bytes from do_stuff_test_data/410c23d234e7f97a2dd6265eb2909324deb8c13a
#20 3.382 Execution successful
#20 3.383 Reading 44 bytes from do_stuff_test_data/7a74862169c3375f4149daff75187cbca7372a38
#20 3.383 Execution successful
#20 3.383 Reading 3 bytes from do_stuff_test_data/a835d6f1c6b2ae4a35e8c0a4a0576715c8b27283
#20 3.383 Execution successful
#20 3.383 Reading 6 bytes from do_stuff_test_data/e8fb273916196a5e29967af0b5826daffb9b3765
#20 3.383 Execution successful
#20 3.383 Reading 6 bytes from do_stuff_test_data/fc09d362f05ab97efdfcd873dacad6a9c29e57ff
#20 3.383 Execution successful
#20 3.384 + find . -name '*_fuzzer' -exec cp -v '{}' /out ';'
#20 3.392 './do_stuff_fuzzer' -> '/out/do_stuff_fuzzer'
#20 3.393 + find . -name '*_fuzzer_seed_corpus.zip' -exec cp -v '{}' /out ';'
#20 3.397 './do_stuff_fuzzer_seed_corpus.zip' -> '/out/do_stuff_fuzzer_seed_corpus.zip'
#20 3.398 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 4.3s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:5f0f131672573a87543f6d7b5e1790a759091ba7f7f3da30c4d4c11aca5c2f78 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/example_example done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/example_example:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:0aee808f99683b3bcd59874f888ce7daed86b787ca78c452dd8f621089d898ed
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:d2bbaa6f45df61a001b318eff193857e45270120c6540efba137347c2f81eff5
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/example_example-intermediate
#5 sha256:54243b4e511a9d2007c841ec6659665dc9fc757fe0402b56318d75b7476037e3
#5 ERROR: gcr.io/fuzzbench/runners/afl/example_example-intermediate:latest: not found

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f done
#6 naming to gcr.io/fuzzbench/runners/afl/example_example-intermediate 0.0s done
#6 DONE 0.2s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/example_example-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:db1eecc5d3af21b15c4d621e80d5b666886b1a6b468ddd4bd6929fb3266b7534
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:0683bb7c655c70c770c645bab77274ebee111c1044e3df8c7f64bfff8f08fcf5
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/example_example-intermediate:latest
#3 sha256:c45e6c0afb6cf6730ca75e6a608475b5191ade4054899696d68d2a1080f4079c
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/example_example:latest
#4 sha256:729212e34e7e08d303e02e4fbf2f114ce5b62092482265198b985b17c77b0b88
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:293c19cdb73b50caf0dfa591addf63cf33587334fb583456a8903da73c9bbca2
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/example_example-intermediate
#6 sha256:5c971355c9670b0e75cd02fd46b70b8dd6347006961651834dc03b682d542de3
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/example_example
#10 sha256:84cb974faae3dadfb6e64ee56197e48b1ee6897521162c6289df74328d005bff
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/example_example
#5 sha256:33e3cf37da7151eaad835011b330a184b11c28270dafd57e6118de0731e2fe4d
#5 ERROR: gcr.io/fuzzbench/runners/afl/example_example:latest: not found

#12 [internal] load build context
#12 sha256:293c19cdb73b50caf0dfa591addf63cf33587334fb583456a8903da73c9bbca2
#12 transferring context: 17.58MB 0.6s done
#12 DONE 0.9s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/example_example
#10 sha256:84cb974faae3dadfb6e64ee56197e48b1ee6897521162c6289df74328d005bff
#10 DONE 1.7s

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:ebed41f689212deba62b2da5ccfc2f97f794faca1c9f8a65a0bf62dc07fac5ac
#9 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:b930715e5a2899e452f696bf1b7c4a21455c9122da7da54af1c91769ab76aac5
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:13ee8362915af35cc78f0347c74f6fe05a8446353d50f8b1ff5964f356f04613
#8 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:23ed78cc75278e50142dd3cd2caeaf36569fd179e1185ae44552d0f83bf0cca8
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:d8ba99353d743408450684558ebfec1350e9762fe027c106c988c84cb8f54712
#13 DONE 1.1s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:be4bf5b5ddd28cf7d18c3d21d6834e661f4af03ca74945f2fdce052bd36457bb
#14 DONE 0.3s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:3ae3e6c97cf15d7a24c6498baf4d7b6f499dbda7e8aec102d5ab0978011303a7
#15 DONE 0.7s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:267e3c67db9ed1cbc4062aaba81ad2f7c72e5c6edece2b03b79b666f89dca570
#16 DONE 1.2s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:c0b48e8e4338f49a3e17d9574b50eb115399334f0010779c7b2827b9f781a8b5
#17 DONE 0.2s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:0eafd7055cf4a5c1b85171c9d580969f0ddff58a780fd5f94ea922a67bee8d56
#18 DONE 0.2s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:e8cb7c5013e2297aa0d0600aebea6a1745af84d1b3c91a7badcc1ea8222325f0
#19 DONE 0.2s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:7ae37dcd87b85df2509bc1b172a50a7e1da583194bf3fd50204959a7fe43e719
#20 DONE 0.7s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:f01a241a842dc6836ce1009dfe221565f856146af856cc765540187ce03ac5c9 done
#21 naming to gcr.io/fuzzbench/runners/afl/example_example done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/example_example:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f8aea08ef70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:87d798d90d740099dd718acfd7c2c4019c9e928e3811f0c6d4fce40ff35ffcb4
#2 transferring context: 2B done
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:49cf9b4db994f7edbee0f8e330aeb7489926dc73de41f9d2ef743da4ad99dca6
#1 transferring dockerfile: 32B done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:87d798d90d740099dd718acfd7c2c4019c9e928e3811f0c6d4fce40ff35ffcb4
#2 DONE 0.3s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:f4e5ea12494fab091c5d830cf803b3421f2860f729b9d1b07da44924396cf8cf
#5 sha256:ef290950573a2779ee526af357b28fbddfc20d7409aa51f58f777c9e972cba29
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/example_example
#4 sha256:fee6f207abbeb47bb7bd3b02d1b477250838d9840b3281959d3fb57bdbff2ed0
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:d7bd6963b95c8005049efb3a1522ee56a96318845f379af657e9b5060f59a91f
#9 transferring context: 30B done
#9 DONE 0.1s

#8 [4/5] WORKDIR my-git-repo
#8 sha256:8a0fb832d74c5be84fe305021da0718077399fac99b8e66a0453ed6f0774810e
#8 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make
#6 sha256:c655d45ce477be96b5f3a9f7ab5c78e25aa68f6ca8d817add7b8a6700bcfa389
#6 CACHED

#7 [3/5] RUN git clone https://github.com/google/oss-fuzz.git my-git-repo
#7 sha256:15eb201c20ac354c2d73bb9b5e82ad2a07faffabcab2c9f293379986dabe5237
#7 CACHED

#10 [5/5] COPY build.sh /src/
#10 sha256:355980b6bb33f41fb6c3cd1f3712543969a74bd82348ae3085dbeb3b156d0869
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:4eaa63f22f860005fb8803bfb3877a3b9c4798747560f937793839d476de0964 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/example_example done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:3be4b8ce577576e7d38f49334f791e671f90a266eb65fcc45e9e0e556958bb19
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:2394ffc34fe8b85aa2d633ea225cf8ae9f87ff211caad5fd42c57025d649de93
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/example_example:latest
#3 sha256:df176d56e8a51f436b3c86f96291547209b1b5db7e4c33909b19098aed62efc8
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/example_example
#5 sha256:5b6528e636d73d74d9ab1e353858392f2a9c07477c844af0e75cd09ab245a0a2
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/example_example-intermediate
#4 sha256:43ee9f70b6b973c6ed65ff4fec8a248e151a9aa033c91c1bd6a5bc9f0359a7cb
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:b285f1142e5daee217deec12dab7e8d29098dab8a15653f2c6e258d45084ac44
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:c8e4aa17d13d970420faa6fbab5de9065dcf5fde84cc3f84625114a57d569279
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:a1a634f9ac01cb071bc61d79fb14362cb658792b63ad2f821b16f9fb87d20115 done
#8 naming to gcr.io/fuzzbench/builders/afl/example_example-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:4c2fa07576f4b55c7f6c58f7e1e7877388929bcd065c76093fa4f2480ba26161
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:c4d266a88f23ca2efd151ca54292525ab6a86c05ba998ee9a4b63815b762c433
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:40ec5da964524ac5b238b2be72357028e8fde095572db193a9425294f03d386f
#8 transferring context: 559B 0.1s done
#8 DONE 0.2s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:7d2adbb2df586ba6e75acacbd07f4075da304153384f18cc2055adc4210d94b9
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:37845cf2c4de7f1c6f940a2c36b24d1ba8dbdf1ae9bc7babedbf0ff6aa0d2aef
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:1d9fca6fc5f84a470a316e4d8b50b3832053a4a9490918ca877158d51fcd45fd
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:7849c64425a7f149ba97c8ec50e2c39dc1806a5dc01fc44d20e714bfe9bbc180
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:1e9abb29351107840b4789fcdeda3da06a25f6a2c96c5e66fbe9cf25815d47a3
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:eec85ea182b3dcd99dd50412e9dd964d10f4e069a386e17b1b8bd41faffc8d22
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/example_example-intermediate:latest
#3 sha256:4278bbecc26eae4743ecc1a35d647ebf1810777349471b081a5c7fa3951ea7a8
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/example_example-intermediate
#6 sha256:f2a483c23e71fe387dbac1e71cf5a28c14701b914a5e2fdddac1acb1d7d76ab9
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/example_example
#5 sha256:55081e2dd948c0bab9d8c2a25515e4d9adc2b2265ee0db17c431ae2796c7e8ac
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:09f7b8e519ee4dfb41576d4235183d2101297b70fde04181dc09911964832b1c
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.2s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:38dc4912c5c08635582a5b8028b3ac5cb07fd9ced09c40a25bfb0165759b6979
#16 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:0a49bea0f1aa9814824a83afdc468fa0be7acb095b2f46bff92f8c5396338970
#9 CACHED

#15 [stage-1  8/13] COPY benchmarks/example_example/benchmark.yaml /
#15 sha256:c519237b65cee57fb391ce890422df91442ae917defdaf62420fd94e9904c695
#15 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:23c8d5c8c1fa59e128dc6fa1605b1f3ad646a8a759ce84d6b57aecb51c53b89c
#17 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:a40f61f3e0adcd2cf162813d51c8e4626bf1e5d97bf5ebc29d4b3bc3790ff439
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:f136f0a67383a9f4d3400ad0b6c105aec3f7c1f2fa9c396fe5ebf7c346543305
#11 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:606f2a796f9d942432b5cc7ddc7d33853e931ae21d48a34c97cc6ee08f3e552d
#18 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:4896968d5cd5a94c0ff8f033be4a7d24d84ba1b7a28a1abb5607dc4a1f6b4471
#8 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:9dccd2ab6596c3f08e5421e2c57454a065faf8182bc1c874b3670f223d81b463
#14 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:4012e6ba296bdb093618a92b338cc16c1b4b54ef594a734e863a037307137102
#13 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:eb1684977b5c0803e6cde09f3b706e555ee08db15f386cf4f4595ae636919634
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:5cc1727f1ac7baf0cd81c3631f1c147c9298f65ec1e51f487e3450300f007387
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:5f0f131672573a87543f6d7b5e1790a759091ba7f7f3da30c4d4c11aca5c2f78 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/example_example done
#21 DONE 0.5s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:07a48ce8882d434d0481bb4c93baa383de39225b3a15ea1e0608a1fe9f318843
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:edc38137496c4493d30cce44de423ebfa0c8b5a550ddace3c026818710b2e532
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/example_example-intermediate
#5 sha256:54243b4e511a9d2007c841ec6659665dc9fc757fe0402b56318d75b7476037e3
#5 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f done
#6 naming to gcr.io/fuzzbench/runners/afl/example_example-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:71a8d46451deb18a6fc93f884d63560da98eb7f8fb219035cb5d94507b825e49
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:a9c90d9f83bc54c7df6e05a5f437a098261e9f6ccfa25ea399d28f2e16077248
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/example_example-intermediate:latest
#3 sha256:c45e6c0afb6cf6730ca75e6a608475b5191ade4054899696d68d2a1080f4079c
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/example_example:latest
#4 sha256:729212e34e7e08d303e02e4fbf2f114ce5b62092482265198b985b17c77b0b88
#4 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/example_example-intermediate
#6 sha256:5c971355c9670b0e75cd02fd46b70b8dd6347006961651834dc03b682d542de3
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/example_example
#5 sha256:33e3cf37da7151eaad835011b330a184b11c28270dafd57e6118de0731e2fe4d
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/example_example
#10 sha256:84cb974faae3dadfb6e64ee56197e48b1ee6897521162c6289df74328d005bff
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:b9ba8cd08655ac8d0f4295fc81d1fbbdf9461a2125d28da060854ed9c75f363e
#12 transferring context: 17.58MB 0.6s done
#12 DONE 0.8s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:64609ea8390384a33ff83fffa388cbddc32c914ad3b9ffc446a1c58f60d6348d
#13 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:ebed41f689212deba62b2da5ccfc2f97f794faca1c9f8a65a0bf62dc07fac5ac
#9 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:3035d2e86c6386afa92276ef315614bf299d71aeb0e4544ed817f5e22b4b6500
#16 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:9616e47f8941a863e804cfbb14d9ff62b525d22394146e7646a663692042d17d
#17 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:78db20b35c3262ce2e585e7d13de99af4324117381ce020d1e4d47ba5325e999
#14 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:b930715e5a2899e452f696bf1b7c4a21455c9122da7da54af1c91769ab76aac5
#7 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:23ed78cc75278e50142dd3cd2caeaf36569fd179e1185ae44552d0f83bf0cca8
#11 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:13ee8362915af35cc78f0347c74f6fe05a8446353d50f8b1ff5964f356f04613
#8 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:9acf91b3b98d40735b10183f4358664f93a22647499dbaef898bd5fb93bbd643
#19 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:537a4a68580d760047d95359986f1b52b0572e914e2b3f9bcc9dc2cbd893fbce
#18 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:bf8767802c57f0afacd3215ee3320faece8845fa838398c9b23d1ad611f328e6
#15 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:dc93c038e9273b90e58e3a973016412fc3b9a402b4125103ccdc89da50c63894
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:f01a241a842dc6836ce1009dfe221565f856146af856cc765540187ce03ac5c9 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/example_example done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f0093de3f70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
