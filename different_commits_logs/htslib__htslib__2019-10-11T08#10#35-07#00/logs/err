WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: htslib_htslib.
INFO:root:Please run "make test-run-afl-htslib_htslib" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:3844092796319230498030e72e6ae2ffcaf275cb92ccabbc564841d76d5836bb
#1 transferring dockerfile: 1.00kB done
#1 DONE 1.1s

#2 [internal] load .dockerignore
#2 sha256:e666136e1cbc2c863307d639ae837586052e2b487344862d31c079e0d0e08891
#2 transferring context: 2B done
#2 DONE 1.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#9 [internal] load build context
#9 sha256:1728eb844b1ca83bb50e4fd97af508ffae6a7fc4a28f509d42d56c31221128b4
#9 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/htslib_htslib
#4 sha256:a4c0045a93fd3222dffbadb552dd4856824f7c942512898e5b3cdcb2d033d59c
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/htslib_htslib:latest: not found

#9 [internal] load build context
#9 sha256:1728eb844b1ca83bb50e4fd97af508ffae6a7fc4a28f509d42d56c31221128b4
#9 transferring context: 30B done
#9 DONE 0.1s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake zlib1g-dev libbz2-dev liblzma-dev libcurl4-gnutls-dev libssl-dev
#6 sha256:e76b65d89b3ae0ddc8ff5eac1a09700ed7c415d02b99ce05d2610646d80de336
#6 CACHED

#7 [3/5] RUN git clone --depth 1 https://github.com/samtools/htslib.git htslib
#7 sha256:b6fb46a6088f5507c14a7c7527bfa5b398f0581f54e5adbb46f9c3fe5308ccbf
#7 CACHED

#8 [4/5] WORKDIR htslib
#8 sha256:d9c3197e663d72fbb7c1bc31f414fc4d7c46e6d93d8992114f49f1eb9d21d9f5
#8 CACHED

#10 [5/5] COPY build.sh /src/
#10 sha256:b6c8c5dd1e9f7608d7bf865b3afb7c48c7f17c96fa0a282a4e4c95dac32a6a37
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:ad1da5668e4e76966692209929ea9902b73a6787f7724e1b585c15ef51af877f
#11 writing image sha256:ad1da5668e4e76966692209929ea9902b73a6787f7724e1b585c15ef51af877f 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/htslib_htslib done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/htslib_htslib:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:9705a5fb7601af47dc84a8f3702a577f6d3396942bb9920324252f6a855e2448
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:8229cee75c4c9d4da79107c40a09a1bef45b0b9ec1881077f98a4f5feb4d2874
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/htslib_htslib:latest
#3 sha256:9f05841540f234ac5a76e1653e248715cbbc4f587bc4f3a87da27d321dc9f93b
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/htslib_htslib
#5 sha256:41e6733868a79b013438aeaabe7c602478d0570651eab60b3569ceef128aa42a
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/htslib_htslib-intermediate
#4 sha256:43042e381169cbd3a3efc487f7180bb4489fa2f5374bfb75a4b9a7f21487f06f
#4 ERROR: gcr.io/fuzzbench/builders/afl/htslib_htslib-intermediate:latest: not found

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:6c046ebdc58cd7677acf5df263ba018aef81182b87b4ba661c4313a9a26fea37
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:5f78713e5edf18e15480eaa17c4b791d793f9926a32cf6ad852eeee26ba523f2
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:d06a319065e8a0aa3b7915a6ac46f6c62f8b4f00c9e956414795ac7664677390 done
#8 naming to gcr.io/fuzzbench/builders/afl/htslib_htslib-intermediate done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/htslib_htslib-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:c34bc7b40b5ee1973790938dc0cc25216364e03365f19d21816850d10de93f76
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:4c90c364c20b08bc64478d977b6ad8887d1fc7486885f121ef08ce0944bceb2e
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#11 [1/7] FROM docker.io/library/ubuntu:xenial
#11 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#11 DONE 0.0s

#12 importing cache manifest from gcr.io/fuzzbench/base-image
#12 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#12 DONE 0.0s

#6 [internal] load build context
#6 sha256:083a226aa2576c056568ea1bf52e8c4a6d599f0628969b2d7d2b13c50281cb53
#6 transferring context: 559B 0.0s done
#6 DONE 0.2s

#7 [4/7] COPY ./requirements.txt /
#7 sha256:1d38132969e0d93b605eec6ebcbc0123ff999ee2fe161288e158444c79893871
#7 CACHED

#8 [5/7] RUN pip3 install -r /requirements.txt
#8 sha256:54c17b632a034a459765309a40c875ab68c0db772a76c2a810ff68a616e045f7
#8 CACHED

#9 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#9 sha256:6a3ba3de6187af9923a74521c0ac7a8e2610eb89eb9d306e531a54728d977001
#9 CACHED

#4 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#4 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#4 CACHED

#5 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#5 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#5 CACHED

#10 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#10 sha256:0d8238a3f59f14af299f5f40a853b74bbfa4f7a27bd006ed6cc8b0ac3a3f6732
#10 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:ccaab23fee99e2873558246c9af16a799fa9bb41f3c8ca1abfa401c679b4444f
#13 writing image sha256:ccaab23fee99e2873558246c9af16a799fa9bb41f3c8ca1abfa401c679b4444f 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:981930e8a39f2cfef66486efd3743c0e8eccb8cc648473f31cdec3a88bb063a8
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:89ed0fee2549cd3cf54395d9088833b7393c12246114080ae17db43faa533ba2
#2 transferring context:
#2 transferring context: 34B done
#2 DONE 0.1s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/htslib_htslib-intermediate:latest
#3 sha256:30e53f910329e6131e8e5c66b2864fa7117d3b98deefb50466c33616b10ca591
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:9f3755ebf545f513c6c6cd994f2f92f7f34a7313dce15f4ff588a0eae6f32d99
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/htslib_htslib-intermediate
#6 sha256:1218d125b1db2b6bbd0f00d3a6a7e7b71f0b8c7c46b9be32c759570ff82dce62
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/htslib_htslib
#5 sha256:8a88bcf942984a8742bfa782e59d2278348d377a46ec27eeae576006e30243c9
#5 ERROR: gcr.io/fuzzbench/builders/afl/htslib_htslib:latest: not found

#12 [internal] load build context
#12 sha256:9f3755ebf545f513c6c6cd994f2f92f7f34a7313dce15f4ff588a0eae6f32d99
#12 transferring context: 669.86kB 0.3s done
#12 DONE 0.4s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:d86e1f415155b0e7ef03bd8466137b9ad2993e0a3177f20932f4584d6fea410b
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:c63dbfbaab8f855bc2ef422b0a7312e9c34770de72694f87ba1ef3df8f7b9ce5
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:bb36f442781dac5a9a4fb833aebbc2ebe370e95bb87ecd9bf8b1f400ac8197a5
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:dd6f4f3170c7df003adac37f1d11d2f081a536f68e34bc5804f9d4f750c36bb7
#11 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:5e07bf2d4a2e3bf41d0ccc4ed0d7509a1302f06d59eb185e017da4ffd6b77b9c
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:5d111a58dccb4874e19405e41625629c6d16423b5ed04c5b9e0d2038267ac368
#14 CACHED

#15 [stage-1  8/13] COPY benchmarks/htslib_htslib/benchmark.yaml /
#15 sha256:76ea3aac39b20ed7864b5ad1cd451717bf748a0b989258aaa8faac98af97011b
#15 DONE 0.7s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:f028d5f6b46f61715295b1d86ce25f7d73ec107ad2cd83d2d51522c4637ca7da
#16 DONE 1.6s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:21dbbaec7db26984539367393b50dd16ef04fdcade1aea1de90be890fcb8d140
#17 DONE 0.4s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:16b62035d05f3550fceb69a1d1237bf28649cafc0fff0e27954cd86e010a5038
#18 1.342 Checking out commit af319543
#18 9.245 From https://github.com/samtools/htslib
#18 9.245  * [new tag]         0.2.0-rc1        -> 0.2.0-rc1
#18 9.246  * [new tag]         0.2.0-rc10       -> 0.2.0-rc10
#18 9.246  * [new tag]         0.2.0-rc11       -> 0.2.0-rc11
#18 9.247  * [new tag]         0.2.0-rc12       -> 0.2.0-rc12
#18 9.247  * [new tag]         0.2.0-rc2        -> 0.2.0-rc2
#18 9.247  * [new tag]         0.2.0-rc3        -> 0.2.0-rc3
#18 9.248  * [new tag]         0.2.0-rc4        -> 0.2.0-rc4
#18 9.248  * [new tag]         0.2.0-rc5        -> 0.2.0-rc5
#18 9.249  * [new tag]         0.2.0-rc6        -> 0.2.0-rc6
#18 9.249  * [new tag]         0.2.0-rc7        -> 0.2.0-rc7
#18 9.250  * [new tag]         0.2.0-rc8        -> 0.2.0-rc8
#18 9.250  * [new tag]         0.2.0-rc9        -> 0.2.0-rc9
#18 9.251  * [new tag]         1.0              -> 1.0
#18 9.251  * [new tag]         1.1              -> 1.1
#18 9.252  * [new tag]         1.10             -> 1.10
#18 9.252  * [new tag]         1.10.1           -> 1.10.1
#18 9.252  * [new tag]         1.10.2           -> 1.10.2
#18 9.254  * [new tag]         1.11             -> 1.11
#18 9.255  * [new tag]         1.11.0           -> 1.11.0
#18 9.255  * [new tag]         1.12             -> 1.12
#18 9.256  * [new tag]         1.13             -> 1.13
#18 9.256  * [new tag]         1.14             -> 1.14
#18 9.257  * [new tag]         1.2              -> 1.2
#18 9.257  * [new tag]         1.2.1            -> 1.2.1
#18 9.257  * [new tag]         1.3              -> 1.3
#18 9.258  * [new tag]         1.3.1            -> 1.3.1
#18 9.258  * [new tag]         1.3.2            -> 1.3.2
#18 9.259  * [new tag]         1.4              -> 1.4
#18 9.259  * [new tag]         1.4.1            -> 1.4.1
#18 9.260  * [new tag]         1.5              -> 1.5
#18 9.260  * [new tag]         1.6              -> 1.6
#18 9.261  * [new tag]         1.7              -> 1.7
#18 9.261  * [new tag]         1.8              -> 1.8
#18 9.262  * [new tag]         1.9              -> 1.9
#18 9.262  * [new tag]         stable1          -> stable1
#18 9.263  * [new tag]         stable2          -> stable2
#18 9.263  * [new tag]         vcf-direct-final -> vcf-direct-final
#18 9.605 error: pathspec 'af319543' did not match any file(s) known to git
#18 9.630 error: pathspec 'af319543' did not match any file(s) known to git
#18 9.641 error: pathspec 'af319543' did not match any file(s) known to git
#18 9.671 error: pathspec 'af319543' did not match any file(s) known to git
#18 9.730 Checkout unsuccessful.
#18 DONE 10.8s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:43588f2fff8fa10b77381df9b4eacf2983d4f79ccfb3e4a48d1755215a5aa76c
#19 DONE 2.1s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:64c2f22185c5824494fe68b2f3a261e407b7f54106f5ea979535dbd0b18198f7
#20 1.679 Run fuzzer_build to build the target
#20 1.926 FUZZ_TARGET = htslib
#20 1.926 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 1.926 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 1.937 Building benchmark htslib_htslib with fuzzer afl
#20 1.941 + autoconf
#20 3.197 + autoheader
#20 3.685 + ./configure
#20 4.742 checking for gcc... clang
#20 4.949 checking whether the C compiler works... yes
#20 5.233 checking for C compiler default output file name... a.out
#20 5.236 checking for suffix of executables... 
#20 5.476 checking whether we are cross compiling... no
#20 5.751 checking for suffix of object files... o
#20 5.810 checking whether we are using the GNU C compiler... yes
#20 5.862 checking whether clang accepts -g... yes
#20 5.933 checking for clang option to accept ISO C89... none needed
#20 6.034 checking for ranlib... ranlib
#20 6.036 checking for grep that handles long lines and -e... /usr/bin/grep
#20 6.048 checking for C compiler warning flags... -Wall
#20 6.123 checking for pkg-config... no
#20 6.126 checking for special C compiler options needed for large files... no
#20 6.127 checking for _FILE_OFFSET_BITS value needed for large files... no
#20 6.213 checking shared library type for unknown-Linux... plain .so
#20 6.215 checking whether the compiler accepts -fvisibility=hidden... yes
#20 6.486 checking how to run the C preprocessor... clang -E
#20 6.623 checking for egrep... /usr/bin/grep -E
#20 6.630 checking for ANSI C header files... yes
#20 7.169 checking for sys/types.h... yes
#20 7.326 checking for sys/stat.h... yes
#20 7.481 checking for stdlib.h... yes
#20 7.650 checking for string.h... yes
#20 7.809 checking for memory.h... yes
#20 7.977 checking for strings.h... yes
#20 8.134 checking for inttypes.h... yes
#20 8.290 checking for stdint.h... yes
#20 8.438 checking for unistd.h... yes
#20 8.593 checking for stdlib.h... (cached) yes
#20 8.625 checking for unistd.h... (cached) yes
#20 8.681 checking for sys/param.h... yes
#20 8.863 checking for getpagesize... yes
#20 9.128 checking for working mmap... yes
#20 9.535 checking for gmtime_r... yes
#20 9.796 checking for fsync... yes
#20 10.11 checking for drand48... yes
#20 10.43 checking for srand48_deterministic... no
#20 10.81 checking whether fdatasync is declared... yes
#20 10.97 checking for fdatasync... yes
#20 11.24 checking for library containing log... none required
#20 11.54 checking for zlib.h... yes
#20 11.63 checking for inflate in -lz... yes
#20 11.89 checking for library containing recv... none required
#20 12.18 checking for bzlib.h... yes
#20 12.26 checking for BZ2_bzBuffToBuffCompress in -lbz2... yes
#20 12.54 checking for lzma.h... yes
#20 12.64 checking for lzma_easy_buffer_encode in -llzma... yes
#20 12.92 checking whether htscodecs files are present... no
#20 12.92 configure: error: htscodecs submodule files not present.
#20 12.92 
#20 12.92 HTSlib uses some functions from the htscodecs project, which is normally
#20 12.92 included as a submodule.  Try running:
#20 12.92 
#20 12.92   git submodule update --init --recursive
#20 12.92 
#20 12.92 in  the top-level htslib directory to update it, and then re-run configure.
#20 12.92 
#20 13.05 Traceback (most recent call last):
#20 13.05   File "<string>", line 1, in <module>
#20 13.05   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 13.05     utils.build_benchmark()
#20 13.05   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 13.05     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 13.05   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 13.05     raise CalledProcessError(retcode, cmd)
#20 13.05 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/htslib_htslib:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2831903: .afl-htslib_htslib-builder] Error 1
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:2a09d18eb32638bbe1ca2c3d650ca0d54b7c1cb663c488508f51657984231750
#1 transferring dockerfile:
#1 transferring dockerfile: 32B done
#1 DONE 0.6s

#2 [internal] load .dockerignore
#2 sha256:c7a1ff0587da5d2a2dcb72955d61bddf78219f5efb9890c4653ebc830a1c4e66
#2 transferring context: 2B done
#2 DONE 0.8s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.6s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/htslib_htslib
#4 sha256:a4c0045a93fd3222dffbadb552dd4856824f7c942512898e5b3cdcb2d033d59c
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:16675bf2aaa439683f1d05fe6ee364d29fd8a5a74581e6823527080d2782c0e3
#9 transferring context: 30B done
#9 DONE 0.1s

#7 [3/5] RUN git clone --depth 1 https://github.com/samtools/htslib.git htslib
#7 sha256:b6fb46a6088f5507c14a7c7527bfa5b398f0581f54e5adbb46f9c3fe5308ccbf
#7 CACHED

#8 [4/5] WORKDIR htslib
#8 sha256:d9c3197e663d72fbb7c1bc31f414fc4d7c46e6d93d8992114f49f1eb9d21d9f5
#8 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake zlib1g-dev libbz2-dev liblzma-dev libcurl4-gnutls-dev libssl-dev
#6 sha256:e76b65d89b3ae0ddc8ff5eac1a09700ed7c415d02b99ce05d2610646d80de336
#6 CACHED

#10 [5/5] COPY build.sh /src/
#10 sha256:58234443c5cf5cb8db2c21ba13d1dfcd65297da25b8d78d244173a913cc32689
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:ad1da5668e4e76966692209929ea9902b73a6787f7724e1b585c15ef51af877f
#11 writing image sha256:ad1da5668e4e76966692209929ea9902b73a6787f7724e1b585c15ef51af877f 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/htslib_htslib done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:5d70e6a65a5bb73c75e1ffb3bb5ad494d27d83f61873e175f81edc6302b9b569
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:5a559b43075d06e293ff1f85df8246d1b6bb7f288786ef088287e9f178b3ee13
#2 transferring context: 2B 0.0s done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/htslib_htslib:latest
#3 sha256:9f05841540f234ac5a76e1653e248715cbbc4f587bc4f3a87da27d321dc9f93b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/htslib_htslib-intermediate
#4 sha256:43042e381169cbd3a3efc487f7180bb4489fa2f5374bfb75a4b9a7f21487f06f
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/htslib_htslib
#5 sha256:41e6733868a79b013438aeaabe7c602478d0570651eab60b3569ceef128aa42a
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:6c046ebdc58cd7677acf5df263ba018aef81182b87b4ba661c4313a9a26fea37
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:5f78713e5edf18e15480eaa17c4b791d793f9926a32cf6ad852eeee26ba523f2
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:d06a319065e8a0aa3b7915a6ac46f6c62f8b4f00c9e956414795ac7664677390 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/htslib_htslib-intermediate done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:0521ef8b3309cb8249e3c9e5b0987f78cc9e6a9eb919a15b150de282569c6277
#1 transferring dockerfile:
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.8s

#2 [internal] load .dockerignore
#2 sha256:f4649db3f1afbdfd34e1e09ff277857c51c75f1df139452588c85da56136f86f
#2 transferring context: 34B done
#2 DONE 1.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#12 importing cache manifest from gcr.io/fuzzbench/base-image
#12 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#12 DONE 0.0s

#4 [1/7] FROM docker.io/library/ubuntu:xenial
#4 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#4 DONE 0.0s

#7 [internal] load build context
#7 sha256:0e90f11770b3c98cebaea5dae67f82705b64b53fc8881a2443e726e8f10f6ca1
#7 transferring context: 559B 0.0s done
#7 DONE 0.7s

#8 [4/7] COPY ./requirements.txt /
#8 sha256:2d290d207387304d5bc2df72a613b17f00107b967ae36641be279d6f2093bc39
#8 CACHED

#9 [5/7] RUN pip3 install -r /requirements.txt
#9 sha256:8208f752ed2d35dc12bc6a9493c9ac2769218f02f327a6d1b238765f5d4a68da
#9 CACHED

#10 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#10 sha256:fd9f7fd9d2ff34a352dd035b80c3f9953069944de1122dd7871e2fb7367780e8
#10 CACHED

#5 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#5 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#5 CACHED

#6 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#6 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#6 CACHED

#11 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#11 sha256:c8d35ad40bdbc1f72804f7c6ae947d9c49979e371d3e3353dcfa0d43781cba0d
#11 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:ccaab23fee99e2873558246c9af16a799fa9bb41f3c8ca1abfa401c679b4444f
#13 writing image sha256:ccaab23fee99e2873558246c9af16a799fa9bb41f3c8ca1abfa401c679b4444f 0.1s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 1.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:209df8bbda7fe4637be32a5ef6b658a27a0f55c4ebb1b62c1493a6eee90b016b
#1 transferring dockerfile: 2.22kB done
#1 ...

#2 [internal] load .dockerignore
#2 sha256:09091c778edfd9bf35ce733ae1b387ee6995c67a75510bffb7d9d604da498345
#2 transferring context: 34B done
#2 DONE 0.6s

#1 [internal] load build definition from Dockerfile
#1 sha256:209df8bbda7fe4637be32a5ef6b658a27a0f55c4ebb1b62c1493a6eee90b016b
#1 DONE 0.8s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/htslib_htslib-intermediate:latest
#3 sha256:30e53f910329e6131e8e5c66b2864fa7117d3b98deefb50466c33616b10ca591
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:d01a3a6684eeaced7ffd3dffecb4a761ae08075ca15e31db18b61cb7d924db1d
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/htslib_htslib-intermediate
#6 sha256:1218d125b1db2b6bbd0f00d3a6a7e7b71f0b8c7c46b9be32c759570ff82dce62
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/htslib_htslib
#5 sha256:8a88bcf942984a8742bfa782e59d2278348d377a46ec27eeae576006e30243c9
#5 ERROR: gcr.io/fuzzbench/builders/afl/htslib_htslib:latest: not found

#12 [internal] load build context
#12 sha256:d01a3a6684eeaced7ffd3dffecb4a761ae08075ca15e31db18b61cb7d924db1d
#12 transferring context: 669.86kB 0.2s done
#12 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:2be3f40f2531f82fc32eab64bf0b1a09dc1175593f3536deca175b4b40b032bc
#16 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:bb36f442781dac5a9a4fb833aebbc2ebe370e95bb87ecd9bf8b1f400ac8197a5
#10 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:3fdb927f256935594a1f13820e7475e7249e4481f70f4c26631ef5c677442cb3
#17 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:d86e1f415155b0e7ef03bd8466137b9ad2993e0a3177f20932f4584d6fea410b
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:c63dbfbaab8f855bc2ef422b0a7312e9c34770de72694f87ba1ef3df8f7b9ce5
#9 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:6c76602e22fe64ba023ec5ae2a269ac9e99d24519a3cbc03492b88f6f134c2f3
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:feca49740c730880d21bb30537a0c4a4de05aadede862f98877f2868a3b4b365
#14 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:dd6f4f3170c7df003adac37f1d11d2f081a536f68e34bc5804f9d4f750c36bb7
#11 CACHED

#15 [stage-1  8/13] COPY benchmarks/htslib_htslib/benchmark.yaml /
#15 sha256:8544640c16f85df9faa6aaff4e3541cafe3b97911b1248faf048a12c9ce973ce
#15 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:6f87a9187980b6ad307ed193d81b120bd478ce018f1d41a1ed52d848b0d68a1e
#18 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:44495ab7877508b12d270b0c11e2184852cea9b4a1029c531348a0df54dfe0c3
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:dd0f73abd78ae47367e11276981687d53f237e46a19ec2392eb00ad001701519
#20 1.692 Run fuzzer_build to build the target
#20 1.925 FUZZ_TARGET = htslib
#20 1.925 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 1.925 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 1.935 Building benchmark htslib_htslib with fuzzer afl
#20 1.940 + autoconf
#20 3.002 + autoheader
#20 3.482 + ./configure
#20 3.777 checking for gcc... clang
#20 3.873 checking whether the C compiler works... yes
#20 4.112 checking for C compiler default output file name... a.out
#20 4.117 checking for suffix of executables... 
#20 4.347 checking whether we are cross compiling... no
#20 4.604 checking for suffix of object files... o
#20 4.650 checking whether we are using the GNU C compiler... yes
#20 4.693 checking whether clang accepts -g... yes
#20 4.727 checking for clang option to accept ISO C89... none needed
#20 4.803 checking for ranlib... ranlib
#20 4.804 checking for grep that handles long lines and -e... /usr/bin/grep
#20 4.812 checking for C compiler warning flags... -Wall
#20 4.852 checking for pkg-config... no
#20 4.855 checking for special C compiler options needed for large files... no
#20 4.856 checking for _FILE_OFFSET_BITS value needed for large files... no
#20 4.914 checking shared library type for unknown-Linux... plain .so
#20 4.916 checking whether the compiler accepts -fvisibility=hidden... yes
#20 5.157 checking how to run the C preprocessor... clang -E
#20 5.292 checking for egrep... /usr/bin/grep -E
#20 5.297 checking for ANSI C header files... yes
#20 5.730 checking for sys/types.h... yes
#20 5.814 checking for sys/stat.h... yes
#20 5.901 checking for stdlib.h... yes
#20 5.966 checking for string.h... yes
#20 6.029 checking for memory.h... yes
#20 6.093 checking for strings.h... yes
#20 6.157 checking for inttypes.h... yes
#20 6.223 checking for stdint.h... yes
#20 6.290 checking for unistd.h... yes
#20 6.364 checking for stdlib.h... (cached) yes
#20 6.375 checking for unistd.h... (cached) yes
#20 6.386 checking for sys/param.h... yes
#20 6.464 checking for getpagesize... yes
#20 6.621 checking for working mmap... yes
#20 6.875 checking for gmtime_r... yes
#20 7.038 checking for fsync... yes
#20 7.201 checking for drand48... yes
#20 7.365 checking for srand48_deterministic... no
#20 7.619 checking whether fdatasync is declared... yes
#20 7.688 checking for fdatasync... yes
#20 7.916 checking for library containing log... none required
#20 8.081 checking for zlib.h... yes
#20 8.121 checking for inflate in -lz... yes
#20 8.261 checking for library containing recv... none required
#20 8.415 checking for bzlib.h... yes
#20 8.447 checking for BZ2_bzBuffToBuffCompress in -lbz2... yes
#20 8.605 checking for lzma.h... yes
#20 8.642 checking for lzma_easy_buffer_encode in -llzma... yes
#20 8.781 checking whether htscodecs files are present... no
#20 8.783 configure: error: htscodecs submodule files not present.
#20 8.783 
#20 8.783 HTSlib uses some functions from the htscodecs project, which is normally
#20 8.783 included as a submodule.  Try running:
#20 8.783 
#20 8.783   git submodule update --init --recursive
#20 8.783 
#20 8.783 in  the top-level htslib directory to update it, and then re-run configure.
#20 8.783 
#20 8.819 Traceback (most recent call last):
#20 8.819   File "<string>", line 1, in <module>
#20 8.819   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 8.819     utils.build_benchmark()
#20 8.819   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 8.820     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 8.820   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 8.820     raise CalledProcessError(retcode, cmd)
#20 8.820 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/htslib_htslib:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2831903: .afl-htslib_htslib-builder] Error 1
