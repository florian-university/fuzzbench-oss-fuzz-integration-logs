WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: libmpeg2_libmpeg2.
INFO:root:Please run "make test-run-afl-libmpeg2_libmpeg2" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:198d71f1a18f0eac5ba8cb51efd862bf8652664209c703bf8f2e9f3fa08f255d
#1 transferring dockerfile: 942B done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:1eb2c15e93252e2f5126c8c8f2069436da44802833dd7d4dc751b9a29ce72d74
#2 transferring context: 2B done
#2 DONE 0.4s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#8 [internal] load build context
#8 sha256:f7704a5448f1074ee70685eaaf418ab23bc34ac61910df2d3110623632786beb
#8 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libmpeg2_libmpeg2
#4 sha256:96fe2880e973bbbb2b9179a0f1671ebdf7c07c9c397ebab2dc3658494db1e02e
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/libmpeg2_libmpeg2:latest: not found

#6 [2/5] RUN apt-get update && apt-get install -y wget cmake
#6 sha256:c4b44e9b0c9203412d75b4a203850922e6410569659e041c058ae4101df118f5
#6 CACHED

#7 [3/5] RUN git clone https://android.googlesource.com/platform/external/libmpeg2
#7 sha256:6bea68076031de0fa3256e239865bb98c8b7c27af66490345e4f9d3416217d31
#7 CACHED

#8 [internal] load build context
#8 sha256:f7704a5448f1074ee70685eaaf418ab23bc34ac61910df2d3110623632786beb
#8 transferring context: 1.22kB done
#8 DONE 0.1s

#9 [4/5] COPY build.sh /src/
#9 sha256:81b658be63ee2ccdc7160342256990f42a829a4a4874ce55d918b12b644d165a
#9 DONE 0.4s

#10 [5/5] WORKDIR libmpeg2
#10 sha256:c578989a9992ba905a8f903428be882105c4cbbfd9521aa0093fde7349d6722c
#10 DONE 0.4s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:34973026c9e6fa546f94b5e19b9f39c46b4bce7810071b855f56a403aa160cb9 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/libmpeg2_libmpeg2 0.0s done
#11 DONE 0.3s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libmpeg2_libmpeg2:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:43e5ba79ab75f573b165072b30ab9707f163a27c543c82b2ac81a976953ded6b
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:d6b8acee082e2123dd2d5d421c745fee42160bfd9bf9aecffe8291326c1df84e
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/libmpeg2_libmpeg2:latest
#3 sha256:b6b8c5a78deaec9bc44bd9ba881a63b5af6e4e0c5fa7cd5f277d42a781033aa6
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libmpeg2_libmpeg2
#5 sha256:47513ee8fd1bd9bac807b8dca4d004959022cb70f0d1bda0c9848d021e38cb34
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2-intermediate
#4 sha256:9b896b251f2346fc5ea2a63cbd0360b71550e049e8c6a5dd1c1721fbf077ee19
#4 ERROR: gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libmpeg2_libmpeg2
#5 sha256:47513ee8fd1bd9bac807b8dca4d004959022cb70f0d1bda0c9848d021e38cb34
#5 DONE 0.8s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:ccc9e97cba415c4190cfa2221194b1b434d5ce73b5c776f853fca87f9db3c4ff
#6 0.437 Cloning into '/afl'...
#6 1.243 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.243 
#6 1.243 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.243 changes and commit them, and you can discard any commits you make in this
#6 1.243 state without impacting any branches by switching back to a branch.
#6 1.243 
#6 1.243 If you want to create a new branch to retain commits you create, you may
#6 1.243 do so (now or later) by using -c with the switch command. Example:
#6 1.243 
#6 1.243   git switch -c <new-branch-name>
#6 1.243 
#6 1.243 Or undo this operation with:
#6 1.243 
#6 1.243   git switch -
#6 1.243 
#6 1.243 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.243 
#6 1.243 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.309 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.309 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.503 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.508 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.952 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.268 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.713 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.976 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.422 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.680 ln -sf afl-as as
#6 5.682 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.685 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.686 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.0s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:0a736e333dede0ade59fcb636834dc54ec48a43bb6e2b779d0b93b8e806e1f36
#7 0.712 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.712 Hit:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.712 Hit:3 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.733 Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 0.853 Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 2.196 Reading package lists...
#7 3.842 Reading package lists...
#7 5.337 Building dependency tree...
#7 5.563 Reading state information...
#7 5.817 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.817 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 5.924 --2022-02-16 16:41:56--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.925 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.111.133, 185.199.109.133, 185.199.110.133, ...
#7 5.927 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.111.133|:443... connected.
#7 5.951 HTTP request sent, awaiting response... 200 OK
#7 5.973 Length: 9177 (9.0K) [text/plain]
#7 5.973 Saving to: '/afl/afl_driver.cpp'
#7 5.973 
#7 5.973      0K ........                                              100% 9.49M=0.001s
#7 5.975 
#7 5.975 2022-02-16 16:41:56 (9.49 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.975 
#7 7.773 ar: creating /libAFL.a
#7 DONE 8.0s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:cc4c8dc6d23512fa0d59ebef0e4e99aacdc76395c5e619e79addce8ba964c81b
#8 writing image sha256:cc4c8dc6d23512fa0d59ebef0e4e99aacdc76395c5e619e79addce8ba964c81b done
#8 naming to gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2-intermediate done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:6188300ee4a68b4a81271dee0eadfd569b0d9154c2ad1c56bd08cbbe919b624f
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:c32f3052d94abb90e5ec300d814aea000f5cdaa526d9fe102a61213a4dc802bc
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:0873fbccab19587d2f057dd3ea773835478cea97d2448665432f8b5c2da6b9f6
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:1ab54eaa6c9368209fe79a95fcd3a933b27797aae49a6e8eece03960c8e1ba28
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:df3d36fe606a15679449c9e3cc690454d0080fc0a06d0695c6e0755b22ebcd57
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:c7e3267b91b62a99f74fa5b3f0a19724fb1d71a805a0380c5935f8e633e38760
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:92bd63baa2e63a826341f9b6b89dffc175e2c2f9e739b1a20bcff1f0e104c734
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.2s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:bf0b5cdb6c8f22227aee244033a7d9dba6b7ed7ec56f3bfa625c889f6f650da2
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:94adb063ebb4b48abfb367aca22da333f3efe2f7d83ef325c308c5957a8016ff
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2-intermediate:latest
#3 sha256:f2635edcb0f34539dbae812ff58dcdfc44a20fa2b701f955afc043fb0d5e7836
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:36956a6b20e73f940a0f915ae2a0da2232d26026468c49a58da958f4753767ea
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2-intermediate
#6 sha256:cc5033dd57d99f7247a8ef3dc04fcdb31029a9f11d011ce2c246f89c34fd3e7b
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2
#5 sha256:3c9ed9556f285cf21150cb63723c628b79d3f85d30fe63e51c8a9324d6c35a9e
#5 ERROR: gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:36956a6b20e73f940a0f915ae2a0da2232d26026468c49a58da958f4753767ea
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.3s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2-intermediate
#6 sha256:cc5033dd57d99f7247a8ef3dc04fcdb31029a9f11d011ce2c246f89c34fd3e7b
#6 DONE 1.1s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:313dc5521dd3b4c40e5a2ec699f1dc9be828678577bc80eed1a2e10742463203
#8 DONE 1.0s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:9928e8c919853b53d12780b2ab329af51dd31bdf11f48ff83951c2eb546532f6
#9 DONE 31.8s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:d2e47ec234894a23f9dc24c1c6e6f76ffb9b4aecc09860543ecafffd2932c8c0
#10 DONE 0.3s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:57a830c5c442ba8dd0ad11adf1c34cd61c6705dc7142263deaa470bf47444fad
#11 DONE 44.5s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:db0dfc1f56d8a85d8c31a1010b283514df23ebca3a8c7f1faed0d5240f7d5501
#13 DONE 0.4s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:f1045c787e00532f6eb6baa77400d28f0a6d61104e0f71421501db39df288252
#14 DONE 1.2s

#15 [stage-1  8/13] COPY benchmarks/libmpeg2_libmpeg2/benchmark.yaml /
#15 sha256:e6abfb83afa5d253f2d0cdae6af9edf9a3ccbf94c1e36094eeebbe7dad4e2cc9
#15 DONE 2.0s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:3d05c2c5483f84e7fc330b814b36b7ced7b28b9aff1d6c99d22590da7932f520
#16 DONE 2.4s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:15aebf9641524d2ba449698ac6713ac719423147e5a940dc524e2eb7ddf8ed86
#17 DONE 0.5s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:c2f2c29b11e1698a85067ba967f128943ac57359b15374dad3703cfc64be2f6f
#18 0.599 Checking out commit d19a42cd
#18 0.634 error: pathspec 'd19a42cd' did not match any file(s) known to git
#18 0.640 error: pathspec 'd19a42cd' did not match any file(s) known to git
#18 0.648 error: pathspec 'd19a42cd' did not match any file(s) known to git
#18 0.707 Checkout unsuccessful.
#18 DONE 1.0s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:aedb9c05cb80129c515e494fc3f8393b0614939f4d2ecb49af3a8b009bdfec02
#19 DONE 1.1s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:f89e0114e0edad4f949aedc5b3d891159880949e9d6016ba8167fde5fc26a018
#20 0.575 Run fuzzer_build to build the target
#20 0.717 FUZZ_TARGET = libmpeg2
#20 0.717 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.717 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.728 Building benchmark libmpeg2_libmpeg2 with fuzzer afl
#20 0.731 + build_dir=/work/build
#20 0.731 + rm -rf /work/build
#20 0.734 + mkdir -p /work/build
#20 0.737 + pushd /work/build
#20 0.737 + cmake /src/libmpeg2
#20 0.737 /work/build /src/libmpeg2
#20 0.742 CMake Warning (dev) in CMakeLists.txt:
#20 0.742   No project() command is present.  The top-level CMakeLists.txt file must
#20 0.742   contain a literal, direct call to the project() command.  Add a line of
#20 0.742   code such as
#20 0.742 
#20 0.742     project(ProjectName)
#20 0.742 
#20 0.742   near the top of the file, but after cmake_minimum_required().
#20 0.742 
#20 0.742   CMake is pretending there is a "project(Project)" command on the first
#20 0.742   line.
#20 0.742 This warning is for project developers.  Use -Wno-dev to suppress it.
#20 0.742 
#20 1.034 -- The C compiler identification is Clang 14.0.0
#20 1.306 -- The CXX compiler identification is Clang 14.0.0
#20 1.320 -- Detecting C compiler ABI info
#20 1.472 -- Detecting C compiler ABI info - done
#20 1.529 -- Check for working C compiler: /usr/local/bin/clang - skipped
#20 1.530 -- Detecting C compile features
#20 1.530 -- Detecting C compile features - done
#20 1.538 -- Detecting CXX compiler ABI info
#20 1.732 -- Detecting CXX compiler ABI info - done
#20 1.799 -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
#20 1.800 -- Detecting CXX compile features
#20 1.801 -- Detecting CXX compile features - done
#20 1.808 -- Looking for pthread.h
#20 1.980 -- Looking for pthread.h - found
#20 1.981 -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
#20 2.158 -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
#20 2.161 -- Found Threads: TRUE  
#20 2.185 -- Configuring done
#20 2.201 -- Generating done
#20 2.202 -- Build files have been written to: /work/build
#20 2.208 ++ nproc
#20 2.217 + make -j8
#20 2.249 [  2%] Building C object CMakeFiles/libmpeg2dec.dir/common/impeg2_buf_mgr.c.o
#20 2.250 [  4%] Building C object CMakeFiles/libmpeg2dec.dir/common/impeg2_disp_mgr.c.o
#20 2.250 [  6%] Building C object CMakeFiles/libmpeg2dec.dir/common/impeg2_format_conv.c.o
#20 2.251 [ 10%] Building C object CMakeFiles/libmpeg2dec.dir/common/impeg2_idct.c.o
#20 2.251 [ 10%] Building C object CMakeFiles/libmpeg2dec.dir/common/impeg2_globals.c.o
#20 2.252 [ 14%] Building C object CMakeFiles/libmpeg2dec.dir/common/impeg2_inter_pred.c.o
#20 2.252 [ 14%] Building C object CMakeFiles/libmpeg2dec.dir/common/impeg2_job_queue.c.o
#20 2.252 [ 16%] Building C object CMakeFiles/libmpeg2dec.dir/common/impeg2_mem_func.c.o
#20 2.301 [ 18%] Building C object CMakeFiles/libmpeg2dec.dir/common/ithread.c.o
#20 2.307 [ 20%] Building C object CMakeFiles/libmpeg2dec.dir/decoder/impeg2d_api_main.c.o
#20 2.323 [ 22%] Building C object CMakeFiles/libmpeg2dec.dir/decoder/impeg2d_bitstream.c.o
#20 2.362 [ 24%] Building C object CMakeFiles/libmpeg2dec.dir/decoder/impeg2d_debug.c.o
#20 2.385 [ 26%] Building C object CMakeFiles/libmpeg2dec.dir/decoder/impeg2d_dec_hdr.c.o
#20 2.404 [ 28%] Building C object CMakeFiles/libmpeg2dec.dir/decoder/impeg2d_decoder.c.o
#20 2.422 [ 30%] Building C object CMakeFiles/libmpeg2dec.dir/decoder/impeg2d_d_pic.c.o
#20 2.438 [ 32%] Building C object CMakeFiles/libmpeg2dec.dir/decoder/impeg2d_function_selector_generic.c.o
#20 2.512 [ 34%] Building C object CMakeFiles/libmpeg2dec.dir/decoder/impeg2d_globals.c.o
#20 2.520 [ 36%] Building C object CMakeFiles/libmpeg2dec.dir/decoder/impeg2d_i_pic.c.o
#20 2.527 [ 38%] Building C object CMakeFiles/libmpeg2dec.dir/decoder/impeg2d_mc.c.o
#20 2.548 [ 40%] Building C object CMakeFiles/libmpeg2dec.dir/decoder/impeg2d_mv_dec.c.o
#20 2.553 [ 42%] Building C object CMakeFiles/libmpeg2dec.dir/decoder/impeg2d_pic_proc.c.o
#20 2.582 [ 44%] Building C object CMakeFiles/libmpeg2dec.dir/decoder/impeg2d_pnb_pic.c.o
#20 2.642 [ 46%] Building C object CMakeFiles/libmpeg2dec.dir/decoder/impeg2d_vld.c.o
#20 2.712 [ 48%] Building C object CMakeFiles/libmpeg2dec.dir/decoder/impeg2d_vld_tables.c.o
#20 2.764 [ 51%] Building C object CMakeFiles/libmpeg2dec.dir/decoder/impeg2d_deinterlace.c.o
#20 2.784 [ 53%] Building C object CMakeFiles/libmpeg2dec.dir/common/icv_sad.c.o
#20 2.795 [ 55%] Building C object CMakeFiles/libmpeg2dec.dir/common/icv_variance.c.o
#20 2.820 [ 57%] Building C object CMakeFiles/libmpeg2dec.dir/common/ideint.c.o
#20 2.895 [ 59%] Building C object CMakeFiles/libmpeg2dec.dir/common/ideint_cac.c.o
#20 2.910 [ 61%] Building C object CMakeFiles/libmpeg2dec.dir/common/ideint_debug.c.o
#20 2.944 [ 63%] Building C object CMakeFiles/libmpeg2dec.dir/common/ideint_function_selector_generic.c.o
#20 2.984 [ 65%] Building C object CMakeFiles/libmpeg2dec.dir/common/ideint_utils.c.o
#20 3.000 [ 67%] Building C object CMakeFiles/libmpeg2dec.dir/decoder/x86/impeg2d_function_selector.c.o
#20 3.016 [ 71%] Building C object CMakeFiles/libmpeg2dec.dir/decoder/x86/impeg2d_function_selector_avx2.c.o
#20 3.016 [ 71%] Building C object CMakeFiles/libmpeg2dec.dir/decoder/x86/impeg2d_function_selector_ssse3.c.o
#20 3.017 [ 73%] Building C object CMakeFiles/libmpeg2dec.dir/decoder/x86/impeg2d_function_selector_sse42.c.o
#20 3.081 [ 77%] Building C object CMakeFiles/libmpeg2dec.dir/common/x86/ideint_function_selector.c.o
#20 3.081 [ 77%] Building C object CMakeFiles/libmpeg2dec.dir/common/x86/ideint_function_selector_ssse3.c.o
#20 3.106 [ 81%] Building C object CMakeFiles/libmpeg2dec.dir/common/x86/icv_variance_ssse3.c.o
#20 3.106 [ 81%] Building C object CMakeFiles/libmpeg2dec.dir/common/x86/ideint_function_selector_sse42.c.o
#20 3.106 [ 83%] Building C object CMakeFiles/libmpeg2dec.dir/common/x86/icv_sad_ssse3.c.o
#20 3.127 [ 85%] Building C object CMakeFiles/libmpeg2dec.dir/common/x86/ideint_cac_ssse3.c.o
#20 3.152 [ 89%] Building C object CMakeFiles/libmpeg2dec.dir/common/x86/ideint_spatial_filter_ssse3.c.o
#20 3.152 [ 89%] Building C object CMakeFiles/libmpeg2dec.dir/common/x86/impeg2_idct_recon_sse42_intr.c.o
#20 3.167 [ 91%] Building C object CMakeFiles/libmpeg2dec.dir/common/x86/impeg2_inter_pred_sse42_intr.c.o
#20 3.188 [ 93%] Building C object CMakeFiles/libmpeg2dec.dir/common/x86/impeg2_mem_func_sse42_intr.c.o
#20 4.218 [ 95%] Linking C static library libmpeg2dec.a
#20 4.489 [ 95%] Built target libmpeg2dec
#20 4.503 [ 97%] Building C object CMakeFiles/mpeg2dec.dir/test/decoder/main.c.o
#20 4.945 [100%] Linking C executable mpeg2dec
#20 5.113 [100%] Built target mpeg2dec
#20 5.131 + popd
#20 5.131 /src/libmpeg2
#20 5.131 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I/src/libmpeg2 -I/src/libmpeg2/common -I/src/libmpeg2/decoder -I/work/build -Wl,--start-group /libAFL.a /src/libmpeg2/fuzzer/mpeg2_dec_fuzzer.cpp -o /out/mpeg2_dec_fuzzer /work/build/libmpeg2dec.a -Wl,--end-group
#20 6.151 + cp /src/libmpeg2/fuzzer/mpeg2_dec_fuzzer.dict /out/mpeg2_dec_fuzzer.dict
#20 6.164 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 6.7s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:512a3dbf56d975ae0bc52a646a5417f8d2314c948e3fcaeb81f5977befb94623
#21 writing image sha256:512a3dbf56d975ae0bc52a646a5417f8d2314c948e3fcaeb81f5977befb94623 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2 done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:9eb86334a1f77cd2014deffc4d2a5dd616b9db3b33c34f362d215ed2737106e0
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:8d4caefeb2008e4d3eb343345f99cf9c9a12d5985671568d4231d93c1f9622e3
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/libmpeg2_libmpeg2-intermediate
#4 sha256:1d5ef7e59b89ec68e64d1036ef4fb09c8f9ea7a058e3f67b357eb195d29d8235
#4 ERROR: gcr.io/fuzzbench/runners/afl/libmpeg2_libmpeg2-intermediate:latest: not found

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f done
#6 naming to gcr.io/fuzzbench/runners/afl/libmpeg2_libmpeg2-intermediate 0.0s done
#6 DONE 0.2s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/libmpeg2_libmpeg2-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:106260d7c19ba2d68c0269cb1a3d82900db3c130f7213dadfab64396c90e4c83
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:f5e4666598bd275cb1bc7a86efac94e5a622a4a5e15596a7956ccb81d0d5eb15
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2:latest
#4 sha256:c07aece00cc59cc4d938616b767168c4c1eb04fdb2196fb5f1502735d3d49115
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/libmpeg2_libmpeg2-intermediate:latest
#3 sha256:ef6da3dedcbef64357f3c4e84e2772c074857773274df8f8ae06fb44c715d1f6
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:513de1b9c85f69c0e010158842b3f8ad7236698711a5280328de73df1d6360f5
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/libmpeg2_libmpeg2-intermediate
#6 sha256:d64cbdd9425aa909264833a775d9adf4dbb228a3e392871ae19ce80ccf54225f
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2
#10 sha256:b5f4814cb42f894e1497ea76ad99764a6caeedf70cf3a427f99f21f05c6a9630
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/libmpeg2_libmpeg2
#5 sha256:53f3ac56800c410f459337ccfeb257d1cf812a6e001c9745c1341359c5773892
#5 ERROR: gcr.io/fuzzbench/runners/afl/libmpeg2_libmpeg2:latest: not found

#12 [internal] load build context
#12 sha256:513de1b9c85f69c0e010158842b3f8ad7236698711a5280328de73df1d6360f5
#12 transferring context: 17.65MB 0.6s done
#12 DONE 0.8s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2
#10 sha256:b5f4814cb42f894e1497ea76ad99764a6caeedf70cf3a427f99f21f05c6a9630
#10 DONE 3.7s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:f5f203a370210d0ef343f73eb730c935841702ee39035785fb755e598c37c99a
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:a1e63713c75dca78a4424918c4b9c86783b9532a1f8b511e2e96b99282e453fb
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:59cf8670141d062eb1b7c0e19a7c8d2d6b3e3f1b0838b8a68d469b80e09954cf
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:dfc7c56ac430cdcc33cefd6461d005c876d15405a8916419bed21544f6dabe58
#11 DONE 0.4s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:21c772f58e2f9f23652ad6e5003732b34f66bcac918e3a0f873e9b24403c2b7d
#13 DONE 1.2s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:fd5169bfc421b984da73063f8ccdfac85cf543c940833b721c57a01b114984eb
#14 DONE 0.4s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:62828484d581b037d339c22af03d8cda39a7e318ed3ec61460eaf4af2e7542f6
#15 DONE 1.1s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:9040e8197edd32fcc9b6fa47f54d767d92b05761620aea3962fb4bc2487fa4dc
#16 DONE 0.6s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:bf672c0754b092932f44c8c7683e81e2414f6a4a28b09d710751a49f2c4ea2e2
#17 DONE 0.1s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:c32d3810f2c0282d05ba5ac1ede823a30d97f40bdda8bd2f9d00b1a6817ef3a1
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:5a91901799b0658ad13deefe63036740a5dc65d39dee8f1e99a355af7f37d4e7
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:29eaa43121b622297ed0ad247d0f8f8b2137f0ea96babea641d1ce2741cd12ac
#20 DONE 0.4s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:b78de20182be8d66214b80ddaa8b1bd934d1d00c2e53c0a8c0829559219df879 done
#21 naming to gcr.io/fuzzbench/runners/afl/libmpeg2_libmpeg2 done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/libmpeg2_libmpeg2:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f542b341f70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:620d7ce5b8229b9dc990b543b280550c578a165906ee5dc2ae0c9046c976db54
#2 transferring context: 2B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:14e6a6297102c12c645edf906b3e03bd067a3dfeb83e6a82c1d269aad4c6d076
#1 transferring dockerfile: 32B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 1.5s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libmpeg2_libmpeg2
#4 sha256:96fe2880e973bbbb2b9179a0f1671ebdf7c07c9c397ebab2dc3658494db1e02e
#4 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:2ead33a4492aa65aa64a4b6b47307e88b8c79b1cf6a1b1fdc6335234503ee42f
#8 transferring context: 30B done
#8 DONE 0.0s

#7 [3/5] RUN git clone https://android.googlesource.com/platform/external/libmpeg2
#7 sha256:6bea68076031de0fa3256e239865bb98c8b7c27af66490345e4f9d3416217d31
#7 CACHED

#9 [4/5] COPY build.sh /src/
#9 sha256:c035edc478a6999962fe3ecfbf4d3c77bd30c1b8d2d888a47b067edf54efb36a
#9 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y wget cmake
#6 sha256:c4b44e9b0c9203412d75b4a203850922e6410569659e041c058ae4101df118f5
#6 CACHED

#10 [5/5] WORKDIR libmpeg2
#10 sha256:14fc6ad7a13dc27eb03bae99ed2901dbe4e6942f89279df84287efa3fc657121
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:34973026c9e6fa546f94b5e19b9f39c46b4bce7810071b855f56a403aa160cb9
#11 writing image sha256:34973026c9e6fa546f94b5e19b9f39c46b4bce7810071b855f56a403aa160cb9 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/libmpeg2_libmpeg2 done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:5414cd786d8e834c42eea8bfd4e99a4ccd0824bd71fd3801b15b8d80b4c7e491
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:4657172d1910fd02f11263deb8f81e6ae216a54e2bed08f0aefa4e7ed2c16d5a
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/libmpeg2_libmpeg2:latest
#3 sha256:b6b8c5a78deaec9bc44bd9ba881a63b5af6e4e0c5fa7cd5f277d42a781033aa6
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libmpeg2_libmpeg2
#5 sha256:47513ee8fd1bd9bac807b8dca4d004959022cb70f0d1bda0c9848d021e38cb34
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2-intermediate
#4 sha256:9b896b251f2346fc5ea2a63cbd0360b71550e049e8c6a5dd1c1721fbf077ee19
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:ccc9e97cba415c4190cfa2221194b1b434d5ce73b5c776f853fca87f9db3c4ff
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:0a736e333dede0ade59fcb636834dc54ec48a43bb6e2b779d0b93b8e806e1f36
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:cc4c8dc6d23512fa0d59ebef0e4e99aacdc76395c5e619e79addce8ba964c81b
#8 writing image sha256:cc4c8dc6d23512fa0d59ebef0e4e99aacdc76395c5e619e79addce8ba964c81b 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:f6ecf3db96392a735cd1e123da72fd01abaccd179273e587d3a2935597750c60
#2 transferring context: 34B done
#2 DONE 0.6s

#1 [internal] load build definition from Dockerfile
#1 sha256:e2a9a06c8224d32a0758596fc50d412b5b5c459f9e81b68f3da5d802e0974ce0
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.6s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:f32fa0d9b584262a7a3d4eab81e0e7122b3501b256a8ad9d472d433ca393c8f3
#8 transferring context: 559B 0.1s done
#8 DONE 0.2s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:5f6572c2d9a3bc272da0cbb9d3986aff026357740e23e7335cd7d31d20f41b9c
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:00950def3c2831548f14f79851a6c6cb223094a4c4c25ff724cb53fad81f2d59
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:acdc569290ffa20fa69bf5737965a538fc022527c9a4e39387d9225048d8fbef
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:4a4b2ad367de4f62bcb2704eb93197bb6ff97e88f53bc9f75ed685ca0ec8a141
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.2s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:b9320620fda4e81139d64fe54ebe464be163c78ec1bc1dbdb8c7a715b1fa747a
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:5c022274d771045f8e7c0c35e5edbdaa2c8aebda14b74ac4f27ae884990b321e
#2 transferring context: 34B done
#2 DONE 0.2s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2-intermediate:latest
#3 sha256:f2635edcb0f34539dbae812ff58dcdfc44a20fa2b701f955afc043fb0d5e7836
#3 DONE 0.0s

#20 importing cache manifest from gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2
#20 sha256:3c9ed9556f285cf21150cb63723c628b79d3f85d30fe63e51c8a9324d6c35a9e
#20 DONE 0.0s

#5 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2-intermediate
#5 sha256:cc5033dd57d99f7247a8ef3dc04fcdb31029a9f11d011ce2c246f89c34fd3e7b
#5 DONE 0.0s

#6 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#6 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#6 DONE 0.0s

#11 [internal] load build context
#11 sha256:34715309247bbe6efe783a69cbb5da368920f7426a3baf280af7f8435270e9b2
#11 transferring context: 669.87kB 0.1s done
#11 DONE 0.2s

#13 [stage-1  7/13] RUN touch /src/__init__.py
#13 sha256:f3e55b951ba07a2a93a7aae78c82b3220f7d7dd381219d3ec97cb05ec6a4aabc
#13 CACHED

#15 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#15 sha256:1d8d8e27541668d42c8efabe3d411a340a6432233ce01a6e5fc03328bb64812f
#15 CACHED

#14 [stage-1  8/13] COPY benchmarks/libmpeg2_libmpeg2/benchmark.yaml /
#14 sha256:5d614dd5310904bbd8790d43d37f47420811974820bbab012e4884e52488958c
#14 CACHED

#7 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#7 sha256:313dc5521dd3b4c40e5a2ec699f1dc9be828678577bc80eed1a2e10742463203
#7 CACHED

#8 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#8 sha256:9928e8c919853b53d12780b2ab329af51dd31bdf11f48ff83951c2eb546532f6
#8 CACHED

#10 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#10 sha256:57a830c5c442ba8dd0ad11adf1c34cd61c6705dc7142263deaa470bf47444fad
#10 CACHED

#16 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#16 sha256:a391fedb803cc3886b2fbae398f751d8efd3e24f51794414dada56daaf7c6084
#16 CACHED

#17 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#17 sha256:f09df919cec1d9e113ffbcf41181cfa6a3ddcb546d2cc70d5ad3f7ad84581c98
#17 CACHED

#18 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#18 sha256:2dbb293e8232c589eac166af2080d3d9e4197a8bf8c9bdc85cee2a44ba2e7f73
#18 CACHED

#9 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#9 sha256:d2e47ec234894a23f9dc24c1c6e6f76ffb9b4aecc09860543ecafffd2932c8c0
#9 CACHED

#12 [stage-1  6/13] COPY fuzzers /src/fuzzers
#12 sha256:1616fd3919aad2832d8bd5a4486b17ed9644e68cd3b75497f8a526492e6071e7
#12 CACHED

#19 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#19 sha256:89315ea551babf77fad50ed1f2af02b0cdef6e2f79798ec6a6da7d31f58dccfa
#19 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:512a3dbf56d975ae0bc52a646a5417f8d2314c948e3fcaeb81f5977befb94623
#21 writing image sha256:512a3dbf56d975ae0bc52a646a5417f8d2314c948e3fcaeb81f5977befb94623 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2 done
#21 DONE 0.6s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:2a127ef09685995af5a9a4f349e15b144bb63512c2f7e059ce95a352aee94749
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:af3107bc0f1d2e7bd320eed3ef4a4e159f1171d504e55b4f317adf7a731683ed
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/libmpeg2_libmpeg2-intermediate
#4 sha256:1d5ef7e59b89ec68e64d1036ef4fb09c8f9ea7a058e3f67b357eb195d29d8235
#4 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/libmpeg2_libmpeg2-intermediate done
#6 DONE 0.5s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:f10a00fd03bf2f65001007409c0d82541965b3456780ad98921ed1738e2c8401
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:c5e1b67f62303217a2db0a1ecdcac9541bd9f072eca9b087ca07e83a5d3f4e69
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2:latest
#4 sha256:c07aece00cc59cc4d938616b767168c4c1eb04fdb2196fb5f1502735d3d49115
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/libmpeg2_libmpeg2-intermediate:latest
#3 sha256:ef6da3dedcbef64357f3c4e84e2772c074857773274df8f8ae06fb44c715d1f6
#3 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/libmpeg2_libmpeg2-intermediate
#6 sha256:d64cbdd9425aa909264833a775d9adf4dbb228a3e392871ae19ce80ccf54225f
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/libmpeg2_libmpeg2
#5 sha256:53f3ac56800c410f459337ccfeb257d1cf812a6e001c9745c1341359c5773892
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/libmpeg2_libmpeg2
#10 sha256:b5f4814cb42f894e1497ea76ad99764a6caeedf70cf3a427f99f21f05c6a9630
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:51e538f8ae9cd89f4cac452f1b10faa23b1720bbeda14f04f3663c355968f7c9
#12 transferring context: 17.65MB 0.6s done
#12 DONE 0.7s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:602e6d4251856d794d156eb1fd719020cf595d96721c4c3d90e290cfcef350de
#18 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:60cb54977fb31d2db3c8765ffc568dcb47cf910ecd52a43784366a56b7250f8d
#19 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:f5f203a370210d0ef343f73eb730c935841702ee39035785fb755e598c37c99a
#7 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:59cf8670141d062eb1b7c0e19a7c8d2d6b3e3f1b0838b8a68d469b80e09954cf
#9 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:cbbba2e2ab024cda7d94c5d497db8cc6f82a22230fc40dc8f5b4edf14bf6e870
#13 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:f5dc157e27baa112ec34fd227356857f7335b719a7b11f20b31e6e3b4cac0721
#17 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:ac9336341ae79df26c4473a73d65d52e4685eaaa7c740d6656ea6eee0db1648f
#16 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:a1e63713c75dca78a4424918c4b9c86783b9532a1f8b511e2e96b99282e453fb
#8 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:dfc7c56ac430cdcc33cefd6461d005c876d15405a8916419bed21544f6dabe58
#11 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:52ba270dbc3fd5e2aee1b2382c84e72762a011969c482ebb2627f295a307c3be
#14 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:d22c63c3eabae653c0360c384e279370352013305a03fd59afb95bc870ab7b39
#15 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:222b0b2a0700f8134423fd22e845893fa85c4caa840f12d459c777e9cd1ecb7a
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:b78de20182be8d66214b80ddaa8b1bd934d1d00c2e53c0a8c0829559219df879 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/libmpeg2_libmpeg2 done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f22fd815f70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
