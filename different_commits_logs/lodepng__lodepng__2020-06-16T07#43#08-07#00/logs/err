WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: lodepng_lodepng.
INFO:root:Please run "make test-run-afl-lodepng_lodepng" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:3d463d2b53ad3d2ed7c189b73dcf2c233ee43ddab2aaa28db6eb737ffec760da
#1 transferring dockerfile: 1.18kB done
#1 DONE 0.8s

#2 [internal] load .dockerignore
#2 sha256:7384728172ecdbed6ab48852ddfa879f16916165780eac1f086d999f024ded72
#2 transferring context: 2B done
#2 DONE 0.9s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#13 [internal] load build context
#13 sha256:51e1358d6a9c75b0cb343e8701cbf688229b63027383acbe6fb228b99fb9c980
#13 DONE 0.0s

#5 [1/7] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#9 http://oss-fuzz-corpus.storage.googleapis.com/lodepng/lodepng_fuzzer_seed_corpus.zip
#9 sha256:8621f56d76add255d2d3962444a6c6e9d6a080305826141b160f8f13cf034996
#9 DONE 0.1s

#11 https://raw.githubusercontent.com/google/AFL/master/dictionaries/png.dict
#11 sha256:e131809fa2c619c24afcbc2144cdb5eca482915108e9e0fe51892581d69729b9
#11 DONE 0.2s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lodepng_lodepng
#4 sha256:a2a36fbb9386a3840bf4eaf9a73be60b791035ad3dc73df903a5239b805beade
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/lodepng_lodepng:latest: not found

#13 [internal] load build context
#13 sha256:51e1358d6a9c75b0cb343e8701cbf688229b63027383acbe6fb228b99fb9c980
#13 transferring context: 1.10kB done
#13 DONE 0.0s

#6 [2/7] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:e94c22665874d420ced0c3b871f4947e168d3bab9afd9b749baffcff0f8f695f
#6 CACHED

#7 [3/7] RUN git clone --depth 1 https://github.com/lvandeve/lodepng.git lodepng     # or use other version control
#7 sha256:6131766292f07232b562972023c4eb40343b2622b2854e1f02a0a59429bdafed
#7 CACHED

#8 [4/7] WORKDIR lodepng
#8 sha256:624b23ddf01e6e8fb5b2b8f815655a60ba7cdcffef3652c7fc8bda6bf7613fde
#8 CACHED

#10 [5/7] ADD http://oss-fuzz-corpus.storage.googleapis.com/lodepng/lodepng_fuzzer_seed_corpus.zip /src/
#10 sha256:7787d34af35590653c9b35c5e2c230f8dbe76031ce0b76030305d04b1523695c
#10 CACHED

#12 [6/7] ADD https://raw.githubusercontent.com/google/AFL/master/dictionaries/png.dict /src/lodepng_fuzzer.dict
#12 sha256:fa830bd1f645ecd677b7a4a246998728cbe0448db752d1f6fa80f7f21b9ace3d
#12 CACHED

#14 [7/7] COPY build.sh /src/
#14 sha256:70795b2f2e393d83cdc0f46d45f77a8492eae2c2cc00b19e300c4ba57dcd7203
#14 DONE 0.2s

#15 exporting to image
#15 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#15 exporting layers done
#15 writing image sha256:6e0ad4e2608aa37b995d2d7193e0a5134bdd1d8f7c166e2b60032ac290d14741
#15 writing image sha256:6e0ad4e2608aa37b995d2d7193e0a5134bdd1d8f7c166e2b60032ac290d14741 0.0s done
#15 naming to gcr.io/fuzzbench/builders/benchmark/lodepng_lodepng 0.0s done
#15 DONE 0.2s

#16 exporting cache
#16 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#16 preparing build cache for export done
#16 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lodepng_lodepng:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:a453277e1c7498b9210cc48aa8c022a4a1cbcf6a37f1a27856577b4288d8dc0d
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:7b8417e5b4f88ba450a8d9cd17c3f49acc6ad535c81ef28a0e69f9ef97fe222d
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/lodepng_lodepng:latest
#3 sha256:caaecb9b4197f430b7c1fddb9f33c660aac5eb5934462f41c246cfce43f0d316
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/lodepng_lodepng
#5 sha256:ab46471a6952191c4c4368b8552ea97b9ce5e934b0c0e30c7d211dc9e06949c7
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/lodepng_lodepng-intermediate
#4 sha256:47828ce2d10ca4e469922491f35a940e6d80cd25481ccc634496cf9197b9e75c
#4 ERROR: gcr.io/fuzzbench/builders/afl/lodepng_lodepng-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/lodepng_lodepng
#5 sha256:ab46471a6952191c4c4368b8552ea97b9ce5e934b0c0e30c7d211dc9e06949c7
#5 DONE 0.4s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:da265663c18e149fb04a88579ad9b83edd0e4e3f1f1618146b653f1da42332d7
#6 0.371 Cloning into '/afl'...
#6 1.295 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.295 
#6 1.295 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.295 changes and commit them, and you can discard any commits you make in this
#6 1.295 state without impacting any branches by switching back to a branch.
#6 1.295 
#6 1.295 If you want to create a new branch to retain commits you create, you may
#6 1.295 do so (now or later) by using -c with the switch command. Example:
#6 1.295 
#6 1.295   git switch -c <new-branch-name>
#6 1.295 
#6 1.295 Or undo this operation with:
#6 1.295 
#6 1.295   git switch -
#6 1.295 
#6 1.295 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.295 
#6 1.295 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.343 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.344 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.548 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.558 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.937 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.252 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.686 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.841 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.239 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.476 ln -sf afl-as as
#6 5.478 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.480 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.481 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.0s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:e31ddaef13a919f064b4cff1694c7133acaab875535780fb0157156959b671f6
#7 0.816 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.816 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.822 Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.844 Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 0.953 Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 1.734 Reading package lists...
#7 3.507 Reading package lists...
#7 4.922 Building dependency tree...
#7 5.131 Reading state information...
#7 5.380 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.380 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 5.702 --2022-02-16 07:38:33--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.703 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.111.133, 185.199.109.133, ...
#7 5.705 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.
#7 5.730 HTTP request sent, awaiting response... 200 OK
#7 5.897 Length: 9177 (9.0K) [text/plain]
#7 5.897 Saving to: '/afl/afl_driver.cpp'
#7 5.897 
#7 5.897      0K ........                                              100% 7.07M=0.001s
#7 5.898 
#7 5.898 2022-02-16 07:38:33 (7.07 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.898 
#7 7.813 ar: creating /libAFL.a
#7 DONE 8.1s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:04a89a7a431ce7f48c8d157d15c80dbb7f252cbfde8c4ba655f15443baf7c0ad 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/lodepng_lodepng-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/lodepng_lodepng-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:f63b25466091b1569fa68a7edbc9c7df996b430531bf681c7f282a680eb71c1a
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:d33374a97f8a014c6a937b690fa0098a4c41e4cd41bfe9d8c705673cb0548236
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:48823e8e731fad8c73df44fae3538b00c6332ad18cc80ac1a44b1a6cfd221627
#8 transferring context: 559B 0.2s done
#8 DONE 0.3s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:fcea28aec0ac7e4eb5a91211dbe5d104fdfe1f9afdf9ee22cd5342c042e8021b
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:b22ceb96b98bff744cfe73577db76bcaffaa5b106af6c2ec4fc2cadfa1a8aec4
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:6412a9b6ce1dbe2b8f865f0c2746776537e398a215efaea659b1f0311f0809db
#9 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:b2aa04ea3f4016873a7d62e3953f2ef567ed8970c9fc76f7cbbc7d0852259ce2
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:868d670606db213d1b2e2237d7b46e0d1b9ce30399bea0541e0e5186fb25100f
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:cc0d4b5ad5deecf13ece5397fe6ac225cd5bde2558ac58441d07c227639ce867
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lodepng_lodepng-intermediate:latest
#4 sha256:45235dad49b4a64eef4146c31bf396a165440c3051d49fe97869f43a367fa689
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:dc53723cc2054d66a6f481b9a86c7e52ffad15ab969e8871d1dc5cd0b77b64c1
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/lodepng_lodepng-intermediate
#6 sha256:21eacb5c0fd3d7e6f1f5acf751497753fd2e746f396f757d704be84be56e47c1
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/lodepng_lodepng
#5 sha256:c4a5566308df6af5d7c49b73e246f7a5984bd2da98940a0dbddbcd220e4fb9aa
#5 ERROR: gcr.io/fuzzbench/builders/afl/lodepng_lodepng:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:dc53723cc2054d66a6f481b9a86c7e52ffad15ab969e8871d1dc5cd0b77b64c1
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.2s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/lodepng_lodepng-intermediate
#6 sha256:21eacb5c0fd3d7e6f1f5acf751497753fd2e746f396f757d704be84be56e47c1
#6 DONE 0.7s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:929a080e063cfbbf1d0fb5559aaba4a49fb47e5510a22a7f91bac037ad98ca57
#8 DONE 0.6s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:fdc5878f5dda16100c3c1198b1082b06f3586130ef42d27760c888eb719cf91b
#9 DONE 20.1s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:22de9c5d522d0c80d16ab784befbd7589a4a56843fc015fa82950c5cbc10b931
#10 DONE 0.9s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:a7d53b6dd61bbf5ec4d3867158cdc0b4e46b5ff7ac6c458e078648dc0d08d438
#11 DONE 36.0s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:db75220e25f271cde9e80863e17c6176b9ba3183a9d5a4ff8eb00072e32049bc
#13 DONE 0.5s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:63d1c5ba912808791df5d3c5b6e213a879a5bf3285a1d85c198731a68cfc7143
#14 DONE 2.2s

#15 [stage-1  8/13] COPY benchmarks/lodepng_lodepng/benchmark.yaml /
#15 sha256:bc8545881ba597650a56645a14bd06dfc690215dcc3e5e4cafc518ac1bf01d90
#15 DONE 0.3s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:6d7458c07bd07e42457af823ed5e301f3ebcfcf2ac38629a6b81ca941b7cea02
#16 DONE 0.7s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:230cf886ff409be9ed4443066f72db81ebab0b5467e02eaba53947152198f674
#17 DONE 0.3s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:ee36fef368c3ea6a39ec72d602d99c245d0de943af12d012b4c745fe6b757484
#18 0.534 Checking out commit e4420e00
#18 2.001 error: pathspec 'e4420e00' did not match any file(s) known to git
#18 2.010 error: pathspec 'e4420e00' did not match any file(s) known to git
#18 2.016 error: pathspec 'e4420e00' did not match any file(s) known to git
#18 2.068 Checkout unsuccessful.
#18 DONE 2.5s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:372a2e3047c0c0b9e301a724ec0a98fe4c8e61d3137b4e6c9aa8e9495c95e91a
#19 DONE 0.9s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:e6ef858fbb31331641193917002ad444bcc3cc1ec2baa703c743b1d3c4134d48
#20 0.600 Run fuzzer_build to build the target
#20 0.723 FUZZ_TARGET = lodepng
#20 0.723 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.723 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.737 Building benchmark lodepng_lodepng with fuzzer afl
#20 0.740 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -DLODEPNG_MAX_ALLOC=100000000 lodepng.cpp lodepng_fuzzer.cpp -o /out/lodepng_fuzzer /libAFL.a
#20 8.686 + cp /src/lodepng_fuzzer_seed_corpus.zip /out/
#20 8.688 + cp /src/lodepng_fuzzer.dict /out/
#20 8.690 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 10.0s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:681c2496105125dd4327828c413e1161a57865941e349e9510a1792359204ab0 done
#21 naming to gcr.io/fuzzbench/builders/afl/lodepng_lodepng done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/lodepng_lodepng:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:7e04d27fee7cb1c7b6f268c2621db113d35c07e8ca46072746d2a9263c817653
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:e6ab23fcfa40b7f22b1d25db4a99df943506e830bf65f8ecb77e3dc28ccc8054
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/lodepng_lodepng-intermediate
#4 sha256:878e16bca3d7f2d9849ad21429cd81f45de616e5913011163dd2146eabc7363a
#4 ERROR: gcr.io/fuzzbench/runners/afl/lodepng_lodepng-intermediate:latest: not found

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/lodepng_lodepng-intermediate 0.0s done
#6 DONE 0.2s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/lodepng_lodepng-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:63fcc1a01f567bff647b06b37a1e3801aa5851aeed2ddeb05da7f0c5ca62f1d4
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:2c7f7e754afb7ef529355a1be4b163da13cf434ba957bc5a998ddc718607b07c
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lodepng_lodepng:latest
#4 sha256:c39aaa29d29aa0ae66a2217738af3c0fdca6a5fbdd1440aa3b9b407903d1e28a
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/lodepng_lodepng-intermediate:latest
#3 sha256:0ae2e98d4e8c469a7040d302e95c6df427c421dd5b2078a1b35df245ae7be88b
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:4004c2e03191ec9abd6decff734b142c2cdbc7570d7eee03aa69e2f2db8bfdb3
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/lodepng_lodepng-intermediate
#6 sha256:45cc5d9626a89954480c8dbbc14614b1869e43b8de6953968add76ace4704548
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lodepng_lodepng
#10 sha256:e1d86a199f99bf25ec0d99261f1a7d1fd60e5e1890b60b632e90101df433c726
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lodepng_lodepng
#5 sha256:b63c568ad9e6745f1aacf0620c8e2b93d15832b93588527e1bdef36855e85f31
#5 ERROR: gcr.io/fuzzbench/runners/afl/lodepng_lodepng:latest: not found

#12 [internal] load build context
#12 sha256:4004c2e03191ec9abd6decff734b142c2cdbc7570d7eee03aa69e2f2db8bfdb3
#12 transferring context: 17.62MB 0.6s done
#12 DONE 0.8s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lodepng_lodepng
#10 sha256:e1d86a199f99bf25ec0d99261f1a7d1fd60e5e1890b60b632e90101df433c726
#10 DONE 2.8s

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:3ac61d7e54919730dbb98993fdb0c6022f956c9a52f905fddcb68f10f0483705
#9 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:e2a195a09a0097fadde8bd30d8a1215bd0c933b64681374a70b11dd72ca37524
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:7ea41781b0b03a6eb7c46d7a8ae899d3c9d8e2f76f30a32f771c298f3a42fa8b
#8 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:bf6a6213397d4f68254173dfd9705b3209609f850cfe5e6f370dbea9b1792f51
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:34ff7b5d2d7ef4e399f454f645ed46b670d37ad08e4093f98dd5c852f057b680
#13 DONE 0.9s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:6f2c0fe166e1db254ab5cab9279e98084d746fd2cadea5a92fa51053462e142d
#14 DONE 0.2s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:1d4cc52c02f4e19d7ddf50c3e2c0edbbcd01f752fd68ab38fff1585359576f2a
#15 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:4142b3ecbdeb2bb6fc32d49a0f9ec834e4e69be7d4658b1bb0428817aa55d20a
#16 DONE 0.7s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:e3a84ecb94fcbc1d4875714334b2671b1c92dd5bf7381c5cc309bf6417520c51
#17 DONE 0.1s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:abc3d7ac77490d1c5a048e6adbf038793fb5f1cff33c1d9f6ead1c55bb56ffe6
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:926f7086b5edaaf55486c5b5ac3e74228043de5846d3f4cc55769c3019f6ee35
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:6f3ee5181111055355f0a4e0e55b3b194ff59f552f1667a1b98924786632e968
#20 DONE 0.5s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:58a77edaffd1acb7bb9ff477933953cf5c6f92938d1ce9c3a433d2a3336ff949
#21 writing image sha256:58a77edaffd1acb7bb9ff477933953cf5c6f92938d1ce9c3a433d2a3336ff949 done
#21 naming to gcr.io/fuzzbench/runners/afl/lodepng_lodepng done
#21 DONE 0.0s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/lodepng_lodepng:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f5d70fc9f70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:81641ec809c6b1f4f5e27c1a66f977a4efeb2426d1c39e9fa7c62271c9f6356e
#1 transferring dockerfile: 32B done
#1 DONE 0.4s

#2 [internal] load .dockerignore
#2 sha256:bffeb316a489e84d1e61cd756bfdbdb55943f28d2c160d149f07aa836163ad73
#2 transferring context: 2B done
#2 DONE 0.4s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.6s

#5 [1/7] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lodepng_lodepng
#4 sha256:a2a36fbb9386a3840bf4eaf9a73be60b791035ad3dc73df903a5239b805beade
#4 DONE 0.0s

#9 http://oss-fuzz-corpus.storage.googleapis.com/lodepng/lodepng_fuzzer_seed_corpus.zip
#9 sha256:8621f56d76add255d2d3962444a6c6e9d6a080305826141b160f8f13cf034996
#9 DONE 0.0s

#13 [internal] load build context
#13 sha256:ca71db212b372e40c894a17930457408579bacb50a1806a04345021b92e15983
#13 transferring context: 30B done
#13 DONE 0.2s

#11 https://raw.githubusercontent.com/google/AFL/master/dictionaries/png.dict
#11 sha256:e131809fa2c619c24afcbc2144cdb5eca482915108e9e0fe51892581d69729b9
#11 DONE 0.2s

#6 [2/7] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:e94c22665874d420ced0c3b871f4947e168d3bab9afd9b749baffcff0f8f695f
#6 CACHED

#7 [3/7] RUN git clone --depth 1 https://github.com/lvandeve/lodepng.git lodepng     # or use other version control
#7 sha256:6131766292f07232b562972023c4eb40343b2622b2854e1f02a0a59429bdafed
#7 CACHED

#8 [4/7] WORKDIR lodepng
#8 sha256:624b23ddf01e6e8fb5b2b8f815655a60ba7cdcffef3652c7fc8bda6bf7613fde
#8 CACHED

#10 [5/7] ADD http://oss-fuzz-corpus.storage.googleapis.com/lodepng/lodepng_fuzzer_seed_corpus.zip /src/
#10 sha256:7787d34af35590653c9b35c5e2c230f8dbe76031ce0b76030305d04b1523695c
#10 CACHED

#12 [6/7] ADD https://raw.githubusercontent.com/google/AFL/master/dictionaries/png.dict /src/lodepng_fuzzer.dict
#12 sha256:fa830bd1f645ecd677b7a4a246998728cbe0448db752d1f6fa80f7f21b9ace3d
#12 CACHED

#14 [7/7] COPY build.sh /src/
#14 sha256:5d207fa1fbe560f799f43667e81795528d49c7fef492016a1dce8716913f3274
#14 CACHED

#15 exporting to image
#15 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#15 exporting layers done
#15 writing image sha256:6e0ad4e2608aa37b995d2d7193e0a5134bdd1d8f7c166e2b60032ac290d14741
#15 writing image sha256:6e0ad4e2608aa37b995d2d7193e0a5134bdd1d8f7c166e2b60032ac290d14741 0.0s done
#15 naming to gcr.io/fuzzbench/builders/benchmark/lodepng_lodepng done
#15 DONE 2.2s

#16 exporting cache
#16 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#16 preparing build cache for export done
#16 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:8606d5e8d85c1af4728e53b884bb23297a5de8646901d5f3add3fbda500dca88
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:3ee6b53601788ea91ad26a735cb60339fe1eefd8227852c5df099d35c7a04920
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/lodepng_lodepng:latest
#3 sha256:caaecb9b4197f430b7c1fddb9f33c660aac5eb5934462f41c246cfce43f0d316
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/lodepng_lodepng-intermediate
#4 sha256:47828ce2d10ca4e469922491f35a940e6d80cd25481ccc634496cf9197b9e75c
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/lodepng_lodepng
#5 sha256:ab46471a6952191c4c4368b8552ea97b9ce5e934b0c0e30c7d211dc9e06949c7
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:da265663c18e149fb04a88579ad9b83edd0e4e3f1f1618146b653f1da42332d7
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:e31ddaef13a919f064b4cff1694c7133acaab875535780fb0157156959b671f6
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:04a89a7a431ce7f48c8d157d15c80dbb7f252cbfde8c4ba655f15443baf7c0ad
#8 writing image sha256:04a89a7a431ce7f48c8d157d15c80dbb7f252cbfde8c4ba655f15443baf7c0ad 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/lodepng_lodepng-intermediate done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:0096e82751dfa2d5f73aa7129e42dab6e0e74ea25fe1a7475677334ef7797f04
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:cc31364164e13d8d7bc46999fa5605238fe9dffaeb61fbaa196dbecb843b1194
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:ed3e4cca4cc86d039c5863bae5a127bc9c77626f25e5431b54e2ec5f9d05a986
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:b63d6f9d7ae8f2e82ae266a49a414aac09a733c0ce51ae3d92a95d45542a3f1c
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:5687fbac5ba297be1d8aec8c7bf99066954dd66674bddf11dec7f38223538294
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:1fe56c90f71be0f4942582e8c74e8b93a98eb22b354f4d9bf6d8fdbe40351691
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:a95320c0f68dc9dea5b7238e832a030bf487af5bb6d7a1125955ad21e0bbdf1b
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:c096b46805d86bf6e475070bbf6800c72120db6c51de697002fc41e31c90caf0
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:cd9e3727d3f29158797c6297cfe2ce1ceb70fe5ffaaece4dc6852c481e30451c
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lodepng_lodepng-intermediate:latest
#3 sha256:45235dad49b4a64eef4146c31bf396a165440c3051d49fe97869f43a367fa689
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/lodepng_lodepng-intermediate
#6 sha256:21eacb5c0fd3d7e6f1f5acf751497753fd2e746f396f757d704be84be56e47c1
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/lodepng_lodepng
#5 sha256:c4a5566308df6af5d7c49b73e246f7a5984bd2da98940a0dbddbcd220e4fb9aa
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:a9d59f48fa89144f52babbf063b3092dc4ee607a939093540e0dc2dbb6a4c152
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.1s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:22de9c5d522d0c80d16ab784befbd7589a4a56843fc015fa82950c5cbc10b931
#10 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:5d12fcdacbe541ef71cb08403e253bd602cf128d3a93aeed1b08ebdfd7b751b2
#16 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:f8c93a141b2bcd54084eba4b7d16cec0e8b0ad1345068be1a12d92f5cc0dd992
#18 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:929a080e063cfbbf1d0fb5559aaba4a49fb47e5510a22a7f91bac037ad98ca57
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:fdc5878f5dda16100c3c1198b1082b06f3586130ef42d27760c888eb719cf91b
#9 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:4f80761780b769498b02fcbd88420edab088d49d8ec8a162768ef9584a4a01b1
#17 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:1b206dfdadcc52b174090fb6ba53114931abe39607aceb9348b0156b7529e618
#13 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:a7d53b6dd61bbf5ec4d3867158cdc0b4e46b5ff7ac6c458e078648dc0d08d438
#11 CACHED

#15 [stage-1  8/13] COPY benchmarks/lodepng_lodepng/benchmark.yaml /
#15 sha256:96809c43f1f29c869b3214ad37c6b9c30e534acbbbc8ae50b0f6bf2ad63c41dc
#15 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:eed3585708395fa3abe52a6ab06d82b85aabf01d3407da905eda177d6b6b5a92
#19 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:efe07310d929d3f622a4427c910f3ccb10b13ff17f826e2e48fdac3178880223
#14 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:eea54651a9ed2aacc6f8b8edf6e4581f59ade75419a99c0196c997a3ad85e685
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:681c2496105125dd4327828c413e1161a57865941e349e9510a1792359204ab0 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/lodepng_lodepng done
#21 DONE 0.5s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:2df94e82a56089d09810d6bc7588971e2bfea7fb88aa76c88c6cf0e0feee332b
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:7a5c71abbc84c76d63e6fd78db88f94518789f0cc17a6a53269b9ec508babd27
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/lodepng_lodepng-intermediate
#4 sha256:878e16bca3d7f2d9849ad21429cd81f45de616e5913011163dd2146eabc7363a
#4 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/lodepng_lodepng-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:4ef514ff80b2f44e588039c322efee37e6c4e39bd1e0385086b8510f92c0eaa0
#2 transferring context: 34B done
#2 DONE 0.1s

#1 [internal] load build definition from Dockerfile
#1 sha256:7a420df9983c12fbbb5ecb2e8b8f09a45163fd8affc05c1b34021736e878a686
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.2s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lodepng_lodepng:latest
#4 sha256:c39aaa29d29aa0ae66a2217738af3c0fdca6a5fbdd1440aa3b9b407903d1e28a
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/lodepng_lodepng-intermediate:latest
#3 sha256:0ae2e98d4e8c469a7040d302e95c6df427c421dd5b2078a1b35df245ae7be88b
#3 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/lodepng_lodepng-intermediate
#6 sha256:45cc5d9626a89954480c8dbbc14614b1869e43b8de6953968add76ace4704548
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lodepng_lodepng
#5 sha256:b63c568ad9e6745f1aacf0620c8e2b93d15832b93588527e1bdef36855e85f31
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lodepng_lodepng
#10 sha256:e1d86a199f99bf25ec0d99261f1a7d1fd60e5e1890b60b632e90101df433c726
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:b1f04108996839140f0ae821ff4de7288ead617689a333a0f3af2069dffa7e1f
#12 transferring context: 17.62MB 0.6s done
#12 DONE 0.8s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:e2a195a09a0097fadde8bd30d8a1215bd0c933b64681374a70b11dd72ca37524
#7 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:10d2f736408a2b6caa2e0c68a8553c73f31fb059f3950dac039129db4992d9a0
#16 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:940c00c8512db91cf9bd261da5c7319a844695e1485f573a869555264c3fb185
#18 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:3ac61d7e54919730dbb98993fdb0c6022f956c9a52f905fddcb68f10f0483705
#9 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:b00ea0b25ba61309cc16ef4d7817006d36e638d99130f8d09c2d69a0309f10b6
#14 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:3811912a8a55a45d633b41ce4ade5efd29be5adc3762849904832dd33bbc61ec
#17 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:7fa6df5826f01127d5f6cd9684f5e0ade532597417d60ca08a15599d1ff03f42
#19 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:8a201ec0087720f7ed0055ffa5445aadb56ca1d2400ad8a66fff18190294381c
#15 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:7ea41781b0b03a6eb7c46d7a8ae899d3c9d8e2f76f30a32f771c298f3a42fa8b
#8 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:bf6a6213397d4f68254173dfd9705b3209609f850cfe5e6f370dbea9b1792f51
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:e9e8a0d2237571ad3d10ad862c648893d7416aa3b08116ed1d48f0184fb6d365
#13 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:a8fad59deb824a886554fd45f928e82facd51edceea1d83c89401cadf2f7418c
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:58a77edaffd1acb7bb9ff477933953cf5c6f92938d1ce9c3a433d2a3336ff949 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/lodepng_lodepng done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f0cdcacff70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
