WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: lzo_lzo_decompress_target.
INFO:root:Please run "make test-run-afl-lzo_lzo_decompress_target" to test integration.
#2 [internal] load .dockerignore
#2 sha256:1a2889666af2992e84d4318e9413932fb78f4d50162d472bc5c5a3cce5a458d8
#2 transferring context: 2B done
#2 DONE 0.4s

#1 [internal] load build definition from Dockerfile
#1 sha256:3114456cea484d99c6641447f8ea571d55061ec9b7340e9d77e797598ba4392d
#1 transferring dockerfile: 1.04kB done
#1 DONE 0.4s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#8 [internal] load build context
#8 sha256:8fc7624ddd0d3ac85ccf7f211733d65ad5607d5f31166c8f0e3159361d704f33
#8 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target
#4 sha256:36daac9b393d9d9f74e34b6fb93568b32ced6541d5477d44db637835a17878dd
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target:latest: not found

#8 [internal] load build context
#8 sha256:8fc7624ddd0d3ac85ccf7f211733d65ad5607d5f31166c8f0e3159361d704f33
#8 transferring context: 7.09kB done
#8 DONE 0.1s

#9 [4/5] COPY *.c *.options build.sh /src/
#9 sha256:28b3f72e60039227bcf86d2e4b7d9bdc3a5cd39ecbb531c469d066569fe4a1b7
#9 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#6 sha256:4f84a0ce69ee663e95cd1295ccb0c22599aeb66f813cea39811e39dcebbc0ef1
#6 CACHED

#7 [3/5] RUN wget -O lzo.tar.gz     http://www.oberhumer.com/opensource/lzo/download/lzo-2.10.tar.gz
#7 sha256:a43c89546416d010bc5b9d695ab5a9bf5530c91e0201187b3c518bde8e76f8c3
#7 CACHED

#10 [5/5] COPY lzo_decompress_target_seeds /src/lzo_decompress_target_seeds
#10 sha256:34ad7f984be18f666b1ae55ddf52e9e762cf52b72c6e5fb9e216939167a5e0eb
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:3f8b4fb4850fc4d2f02668a9862cff17bdee6c2fd572168553c5ebd2a79cae31 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:a0c6a376848a9539c9b6644bc46d65d0c2e7f46f3fee50094d3d6c211c9751da
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:fa94c1634bbe0049d66ca94fcb274f398829bb877c6f70a99fd781867ab13a1e
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target:latest
#3 sha256:80acfac66a8714350cbac83e1e50abe969e83e5472cd4693fcb9ddb15af4851b
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target
#5 sha256:243f7de1b7f1c36ab66e56a787aba7344bec81161eb0a6c7b58acade3918f981
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate
#4 sha256:790a0798dc94d5890fdb88db33339399be52c6d0de53e377f887d3a9eef793f7
#4 ERROR: gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate:latest: not found

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:b7058d8f1b6e2ee16a622571f7335adbc5b7b7028407daf9bbe224e3f7606466
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:772cdcb967a6f639e6fab1787d43399fbb7e05f8f268229e88b5a1e8bcc90aa6
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:ed049d774220da89afd26559314c15ea4361ed4a4e86a9a4711efc67bdc962c6 done
#8 naming to gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:bd5aa93e0c43f1775719ac993a3c47dcd58d64e64360cfc8cac353aed86d381f
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:a05193c554630f23a8d6bbf52c9b48c2fbdcef7e73f2d6a931d376e745e0d14f
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:dc393cef93df22d1ed36f18fbe55b2cb425ba77fc3f5a77d9de0252afce3585d
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#9 [4/7] COPY ./requirements.txt /
#9 sha256:b9381ae5eefc8d660f0fa3d6ef2e3f379342dcdbe7d03ff5c1ba6fc591beaeb3
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:7b6a2f82ec8352329b439f64f5157d4fc285aa722c2d47c80e4fe6c47fe6f39e
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:940ce5e84e41b47616c0c2856176e50c813ca5434e55eda08922ae197dee2860
#11 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:ebf59e1297079d3344151e5bf031818c5dee313c43959d703e6e1741d6409b8a
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:5dc85c66b74f60d1770fb4d8a2f0cf89b872162f5c4ad8fde1e9774f9306976f 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:fddfc5557eb5a70b9a001bf01b6f21b76ec9327450b92ea87d1770568548bdcb
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:c57f4c97bf7bba3ac26e4923d72b386632af195451162663b67d61e5402056d2
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate:latest
#3 sha256:57277ad610ff2521191e75da22afb9064f4a9cf1f1cf01d5bb679fea15a74973
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:04da483648d7433bdd3b5fc66efd59cdc65b9115bde09da6b2b9d8855f4bca55
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate
#6 sha256:0431697bc05bb7dd576b8c033524251400cc829120bf34576c4f5bcdf1f41695
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target
#5 sha256:f5ad800077a190aafdad177ae8d36c9409387967f4c03cc6e231d67b6f6f03f9
#5 ERROR: gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target:latest: not found

#12 [internal] load build context
#12 sha256:04da483648d7433bdd3b5fc66efd59cdc65b9115bde09da6b2b9d8855f4bca55
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.1s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:fecde7b439d88f9341f9a0f44b1783e0cc85a2c596199ab96d93e9ed4a72174e
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:df4068d2096acf7ce14b6b0bfb8c97bdd5f67a7789badf68b66cc3b5c44309a7
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:2551bc1000e391b57ca9c3138c085a4af7e7336e79998f941824d50fa9edcf05
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:dd5429ca0285b084777db6fe279ac9a5dd4001d2ac19e458af0eb9b823f5d9b2
#11 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:45ae14aa8467bedf921f58e10a9374a657e55af0719dcbe5bbd94792fd70264d
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:42426dce2409d86cb498bb578e4a4be8ca1ef88ad87216c658f78bd276c3d051
#14 DONE 0.5s

#15 [stage-1  8/13] COPY benchmarks/lzo_lzo_decompress_target/benchmark.yaml /
#15 sha256:59a8a6195570f97e2e31bcf61b6ef444b180c28330fd52f6ec775ac5a9af48d4
#15 DONE 0.1s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:a089af5fe6d176aed0efb4d0cf2da659359078f8790adb3e270a06199cb224a5
#16 DONE 0.6s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:40bab0ca7f26a9d00e0aaf2c69bf203f8f9101eab907104973fbce9aa661958b
#17 DONE 0.2s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:2b5f432cd83a9266d3ffcebdfd28364048af053f2d44726a7048d2bcd08417fc
#18 0.504 Checking out commit 3049c50d
#18 0.513 error: pathspec '3049c50d' did not match any file(s) known to git
#18 0.519 error: pathspec '3049c50d' did not match any file(s) known to git
#18 0.603 Checkout unsuccessful.
#18 DONE 0.7s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:70334103563a4e69de919ed78c3d9fbcd20b82d64655a96a559e79eb4c1d75c9
#19 DONE 0.7s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:d5ea3f4ebbd6a72315b45ebb838e7729b6fe5c3f13c37658a33b2b1009c32b35
#20 0.540 Run fuzzer_build to build the target
#20 0.648 FUZZ_TARGET = lzo_decompress_target
#20 0.648 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.648 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.653 Building benchmark lzo_lzo_decompress_target with fuzzer afl
#20 0.655 + cd /src
#20 0.655 + tar xzf lzo.tar.gz
#20 0.713 + cd lzo-2.10
#20 0.713 + ./configure
#20 0.921 configure: Configuring LZO 2.10
#20 0.941 checking build system type... x86_64-pc-linux-gnu
#20 1.014 checking host system type... x86_64-pc-linux-gnu
#20 1.014 checking target system type... x86_64-pc-linux-gnu
#20 1.015 checking whether to enable maintainer-specific portions of Makefiles... no
#20 1.017 checking for gcc... clang
#20 1.088 checking whether the C compiler works... yes
#20 1.213 checking for C compiler default output file name... a.out
#20 1.215 checking for suffix of executables... 
#20 1.338 checking whether we are cross compiling... no
#20 1.471 checking for suffix of object files... o
#20 1.499 checking whether we are using the GNU C compiler... yes
#20 1.527 checking whether clang accepts -g... yes
#20 1.550 checking for clang option to accept ISO C89... none needed
#20 1.597 checking whether clang understands -c and -o together... yes
#20 1.641 checking for ar... ar
#20 1.642 checking the archiver (ar) interface... ar
#20 1.678 checking for style of include used by make... GNU
#20 1.686 checking dependency style of clang... gcc3
#20 1.741 checking how to run the C preprocessor... clang -E
#20 1.832 checking whether the C preprocessor needs special flags... none needed
#20 1.862 checking for an ANSI C-conforming const... yes
#20 1.893 checking for grep that handles long lines and -e... /usr/bin/grep
#20 1.897 checking for egrep... /usr/bin/grep -E
#20 1.900 checking for ANSI C header files... yes
#20 2.147 checking for sys/types.h... yes
#20 2.200 checking for sys/stat.h... yes
#20 2.255 checking for stdlib.h... yes
#20 2.311 checking for string.h... yes
#20 2.373 checking for memory.h... yes
#20 2.432 checking for strings.h... yes
#20 2.490 checking for inttypes.h... yes
#20 2.550 checking for stdint.h... yes
#20 2.611 checking for unistd.h... yes
#20 2.673 checking whether byte ordering is bigendian... no
#20 2.786 checking for special C compiler options needed for large files... no
#20 2.786 checking for _FILE_OFFSET_BITS value needed for large files... no
#20 2.819 checking for a BSD-compatible install... /usr/bin/install -c
#20 2.833 checking whether build environment is sane... yes
#20 2.850 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 2.854 checking for gawk... no
#20 2.855 checking for mawk... mawk
#20 2.855 checking whether make sets $(MAKE)... yes
#20 2.867 checking whether make supports nested variables... yes
#20 2.878 checking dependency style of clang... gcc3
#20 2.937 checking whether make supports nested variables... (cached) yes
#20 2.940 checking how to print strings... printf
#20 2.993 checking for a sed that does not truncate output... /usr/bin/sed
#20 3.002 checking for fgrep... /usr/bin/grep -F
#20 3.005 checking for ld used by clang... /usr/bin/ld
#20 3.023 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 3.028 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 3.033 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 3.065 checking whether ln -s works... yes
#20 3.066 checking the maximum length of command line arguments... 1572864
#20 3.078 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 3.078 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 3.079 checking for /usr/bin/ld option to reload object files... -r
#20 3.080 checking for objdump... objdump
#20 3.081 checking how to recognize dependent libraries... pass_all
#20 3.083 checking for dlltool... no
#20 3.084 checking how to associate runtime and link libraries... printf %s\n
#20 3.085 checking for archiver @FILE support... @
#20 3.124 checking for strip... strip
#20 3.126 checking for ranlib... ranlib
#20 3.126 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 3.304 checking for sysroot... no
#20 3.330 checking for mt... no
#20 3.331 checking if : is a manifest tool... no
#20 3.340 checking for dlfcn.h... yes
#20 3.399 checking for objdir... .libs
#20 3.565 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 3.598 checking for clang option to produce PIC... -fPIC -DPIC
#20 3.598 checking if clang PIC flag -fPIC -DPIC works... yes
#20 3.630 checking if clang static flag -static works... yes
#20 3.806 checking if clang supports -c -o file.o... yes
#20 3.849 checking if clang supports -c -o file.o... (cached) yes
#20 3.850 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 3.871 checking dynamic linker characteristics... GNU/Linux ld.so
#20 4.040 checking how to hardcode library paths into programs... immediate
#20 4.040 checking whether stripping libraries is possible... yes
#20 4.043 checking if libtool supports shared libraries... yes
#20 4.043 checking whether to build shared libraries... no
#20 4.044 checking whether to build static libraries... yes
#20 4.045 checking whether time.h and sys/time.h may both be included... yes
#20 4.087 checking assert.h usability... yes
#20 4.147 checking assert.h presence... yes
#20 4.170 checking for assert.h... yes
#20 4.182 checking ctype.h usability... yes
#20 4.240 checking ctype.h presence... yes
#20 4.263 checking for ctype.h... yes
#20 4.276 checking dirent.h usability... yes
#20 4.331 checking dirent.h presence... yes
#20 4.352 checking for dirent.h... yes
#20 4.363 checking errno.h usability... yes
#20 4.423 checking errno.h presence... yes
#20 4.446 checking for errno.h... yes
#20 4.457 checking fcntl.h usability... yes
#20 4.514 checking fcntl.h presence... yes
#20 4.537 checking for fcntl.h... yes
#20 4.548 checking float.h usability... yes
#20 4.602 checking float.h presence... yes
#20 4.622 checking for float.h... yes
#20 4.634 checking limits.h usability... yes
#20 4.691 checking limits.h presence... yes
#20 4.713 checking for limits.h... yes
#20 4.725 checking malloc.h usability... yes
#20 4.786 checking malloc.h presence... yes
#20 4.810 checking for malloc.h... yes
#20 4.823 checking for memory.h... (cached) yes
#20 4.834 checking setjmp.h usability... yes
#20 4.894 checking setjmp.h presence... yes
#20 4.915 checking for setjmp.h... yes
#20 4.928 checking signal.h usability... yes
#20 4.987 checking signal.h presence... yes
#20 5.012 checking for signal.h... yes
#20 5.031 checking stdarg.h usability... yes
#20 5.084 checking stdarg.h presence... yes
#20 5.104 checking for stdarg.h... yes
#20 5.115 checking stddef.h usability... yes
#20 5.170 checking stddef.h presence... yes
#20 5.190 checking for stddef.h... yes
#20 5.199 checking for stdint.h... (cached) yes
#20 5.210 checking stdio.h usability... yes
#20 5.265 checking stdio.h presence... yes
#20 5.288 checking for stdio.h... yes
#20 5.300 checking for stdlib.h... (cached) yes
#20 5.312 checking for string.h... (cached) yes
#20 5.323 checking for strings.h... (cached) yes
#20 5.334 checking time.h usability... yes
#20 5.389 checking time.h presence... yes
#20 5.413 checking for time.h... yes
#20 5.424 checking for unistd.h... (cached) yes
#20 5.435 checking utime.h usability... yes
#20 5.495 checking utime.h presence... yes
#20 5.515 checking for utime.h... yes
#20 5.527 checking sys/mman.h usability... yes
#20 5.580 checking sys/mman.h presence... yes
#20 5.603 checking for sys/mman.h... yes
#20 5.613 checking sys/resource.h usability... yes
#20 5.671 checking sys/resource.h presence... yes
#20 5.691 checking for sys/resource.h... yes
#20 5.701 checking for sys/stat.h... (cached) yes
#20 5.712 checking sys/time.h usability... yes
#20 5.765 checking sys/time.h presence... yes
#20 5.788 checking for sys/time.h... yes
#20 5.800 checking for sys/types.h... (cached) yes
#20 5.811 checking sys/wait.h usability... yes
#20 5.871 checking sys/wait.h presence... yes
#20 5.898 checking for sys/wait.h... yes
#20 5.903 checking whether limits.h is sane... yes
#20 5.933 checking for off_t... yes
#20 6.065 checking for ptrdiff_t... yes
#20 6.189 checking for size_t... yes
#20 6.317 checking return type of signal handlers... void
#20 6.360 checking size of short... 2
#20 6.537 checking size of int... 4
#20 6.707 checking size of long... 8
#20 6.874 checking size of long long... 8
#20 7.037 checking size of __int16... 0
#20 7.110 checking size of __int32... 0
#20 7.183 checking size of __int64... 0
#20 7.262 checking size of void *... 8
#20 7.428 checking size of size_t... 8
#20 7.598 checking size of ptrdiff_t... 8
#20 7.760 checking size of __int32... (cached) 0
#20 7.763 checking size of intmax_t... 8
#20 7.936 checking size of uintmax_t... 8
#20 8.101 checking size of intptr_t... 8
#20 8.268 checking size of uintptr_t... 8
#20 8.436 checking size of float... 4
#20 8.615 checking size of double... 8
#20 8.794 checking size of long double... 16
#20 8.967 checking size of dev_t... 8
#20 9.135 checking size of fpos_t... 16
#20 9.294 checking size of mode_t... 4
#20 9.470 checking size of off_t... 8
#20 9.642 checking size of ssize_t... 8
#20 9.809 checking size of time_t... 8
#20 9.983 checking for access... yes
#20 10.12 checking for alloca... no
#20 10.27 checking for atexit... yes
#20 10.40 checking for atoi... yes
#20 10.55 checking for atol... yes
#20 10.69 checking for chmod... yes
#20 10.83 checking for chown... yes
#20 10.96 checking for clock_getcpuclockid... yes
#20 11.09 checking for clock_getres... yes
#20 11.23 checking for clock_gettime... yes
#20 11.36 checking for ctime... yes
#20 11.50 checking for difftime... yes
#20 11.64 checking for fstat... yes
#20 11.78 checking for getenv... yes
#20 11.92 checking for getpagesize... yes
#20 12.06 checking for getrusage... yes
#20 12.20 checking for gettimeofday... yes
#20 12.34 checking for gmtime... yes
#20 12.49 checking for isatty... yes
#20 12.63 checking for localtime... yes
#20 12.77 checking for longjmp... yes
#20 12.91 checking for lstat... yes
#20 13.05 checking for memcmp... yes
#20 13.19 checking for memcpy... yes
#20 13.34 checking for memmove... yes
#20 13.49 checking for memset... yes
#20 13.63 checking for mkdir... yes
#20 13.77 checking for mktime... yes
#20 13.91 checking for mmap... yes
#20 14.05 checking for mprotect... yes
#20 14.20 checking for munmap... yes
#20 14.34 checking for qsort... yes
#20 14.47 checking for raise... yes
#20 14.60 checking for rmdir... yes
#20 14.74 checking for setjmp... yes
#20 14.89 checking for signal... yes
#20 15.03 checking for snprintf... yes
#20 15.18 checking for strcasecmp... yes
#20 15.32 checking for strchr... yes
#20 15.47 checking for strdup... yes
#20 15.61 checking for strerror... yes
#20 15.76 checking for strftime... yes
#20 15.91 checking for stricmp... no
#20 16.05 checking for strncasecmp... yes
#20 16.20 checking for strnicmp... no
#20 16.33 checking for strrchr... yes
#20 16.47 checking for strstr... yes
#20 16.62 checking for time... yes
#20 16.76 checking for umask... yes
#20 16.90 checking for utime... yes
#20 17.03 checking for vsnprintf... yes
#20 17.18 checking whether to build assembly versions... no
#20 17.21 checking whether your compiler passes the LZO conformance test... yes
#20 17.42 checking that generated files are newer than configure... done
#20 17.42 configure: creating ./config.status
#20 18.18 config.status: creating Makefile
#20 18.20 config.status: creating lzo2.pc
#20 18.22 config.status: creating config.h
#20 18.24 config.status: executing depfiles commands
#20 18.48 config.status: executing libtool commands
#20 18.50 
#20 18.50    LZO configuration summary
#20 18.50    -------------------------
#20 18.50    LZO version                : 2.10
#20 18.50    configured for host        : x86_64-pc-linux-gnu
#20 18.50    source code location       : .
#20 18.50    compiler                   : clang
#20 18.50    preprocessor definitions   : -DLZO_HAVE_CONFIG_H=1
#20 18.50    preprocessor flags         : 
#20 18.50    compiler flags             : -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard
#20 18.50    build static library       : yes
#20 18.50    build shared library       : no
#20 18.50    enable i386 assembly code  : no
#20 18.50 
#20 18.50 
#20 18.50    LZO 2.10 configured.
#20 18.50 
#20 18.50    Copyright (C) 1996-2017 Markus Franz Xaver Johannes Oberhumer
#20 18.50    All Rights Reserved.
#20 18.50 
#20 18.50    The LZO library is free software; you can redistribute it and/or
#20 18.50    modify it under the terms of the GNU General Public License as
#20 18.50    published by the Free Software Foundation; either version 2 of
#20 18.50    the License, or (at your option) any later version.
#20 18.50 
#20 18.50    The LZO library is distributed in the hope that it will be useful,
#20 18.50    but WITHOUT ANY WARRANTY; without even the implied warranty of
#20 18.50    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#20 18.50    GNU General Public License for more details.
#20 18.50 
#20 18.50    Markus F.X.J. Oberhumer
#20 18.50    <markus@oberhumer.com>
#20 18.50    http://www.oberhumer.com/opensource/lzo/
#20 18.50 
#20 18.50 
#20 18.50 Type 'make' to build LZO.
#20 18.50 Type 'make check' and 'make test' to test LZO.
#20 18.50 Type 'make install' to install LZO.
#20 18.50 After installing LZO, please have a look at 'examples/simple.c'.
#20 18.50 
#20 18.57 ++ nproc
#20 18.57 + make -j8
#20 18.58 make  all-am
#20 18.60 make[1]: Entering directory '/src/lzo-2.10'
#20 18.61   CC       src/lzo1.lo
#20 18.61   CC       src/lzo1_99.lo
#20 18.61   CC       src/lzo1a.lo
#20 18.61   CC       src/lzo1a_99.lo
#20 18.61   CC       src/lzo1b_2.lo
#20 18.61   CC       src/lzo1b_3.lo
#20 18.61   CC       src/lzo1b_1.lo
#20 18.61   CC       src/lzo1b_4.lo
#20 19.26   CC       src/lzo1b_5.lo
#20 19.26   CC       src/lzo1b_6.lo
#20 19.29   CC       src/lzo1b_7.lo
#20 19.31   CC       src/lzo1b_8.lo
#20 19.31   CC       src/lzo1b_9.lo
#20 19.32   CC       src/lzo1b_99.lo
#20 19.42   CC       src/lzo1b_9x.lo
#20 19.44   CC       src/lzo1b_cc.lo
#20 19.95   CC       src/lzo1b_d1.lo
#20 19.98   CC       src/lzo1b_d2.lo
#20 19.98   CC       src/lzo1b_rr.lo
#20 20.00   CC       src/lzo1b_xx.lo
#20 20.01   CC       src/lzo1c_1.lo
#20 20.05   CC       src/lzo1c_2.lo
#20 20.06   CC       src/lzo1c_3.lo
#20 20.19   CC       src/lzo1c_4.lo
#20 20.53   CC       src/lzo1c_5.lo
#20 20.56   CC       src/lzo1c_6.lo
#20 20.66   CC       src/lzo1c_7.lo
#20 20.68   CC       src/lzo1c_8.lo
#20 20.74   CC       src/lzo1c_9.lo
#20 20.78   CC       src/lzo1c_99.lo
#20 20.79   CC       src/lzo1c_9x.lo
#20 20.92   CC       src/lzo1c_cc.lo
#20 21.25   CC       src/lzo1c_d1.lo
#20 21.33   CC       src/lzo1c_d2.lo
#20 21.44   CC       src/lzo1c_rr.lo
#20 21.44   CC       src/lzo1c_xx.lo
#20 21.49   CC       src/lzo1f_1.lo
#20 21.50   CC       src/lzo1f_9x.lo
#20 21.54   CC       src/lzo1f_d1.lo
#20 21.60   CC       src/lzo1f_d2.lo
#20 21.97   CC       src/lzo1x_1.lo
#20 22.00   CC       src/lzo1x_1k.lo
#20 22.05   CC       src/lzo1x_1l.lo
#20 22.13   CC       src/lzo1x_1o.lo
#20 22.20   CC       src/lzo1x_9x.lo
#20 22.26   CC       src/lzo1x_d1.lo
#20 22.34   CC       src/lzo1x_d2.lo
#20 22.36   CC       src/lzo1x_d3.lo
#20 22.74   CC       src/lzo1x_o.lo
#20 22.77   CC       src/lzo1y_1.lo
#20 22.79   CC       src/lzo1y_9x.lo
#20 22.90   CC       src/lzo1y_d1.lo
#20 22.93   CC       src/lzo1y_d2.lo
#20 23.03   CC       src/lzo1y_d3.lo
#20 23.22   CC       src/lzo1y_o.lo
#20 23.33   CC       src/lzo1z_9x.lo
#20 23.49   CC       src/lzo1z_d1.lo
#20 23.52   CC       src/lzo1z_d2.lo
#20 23.55   CC       src/lzo1z_d3.lo
#20 23.68   CC       src/lzo2a_9x.lo
#20 23.85   CC       src/lzo2a_d1.lo
#20 23.99   CC       src/lzo2a_d2.lo
#20 24.01   CC       src/lzo_crc.lo
#20 24.16   CC       src/lzo_init.lo
#20 24.19   CC       src/lzo_ptr.lo
#20 24.40   CC       src/lzo_str.lo
#20 24.46   CC       src/lzo_util.lo
#20 24.51   CC       examples/dict.o
#20 24.56   CC       examples/lzopack.o
#20 24.61   CC       examples/overlap.o
#20 24.63   CC       examples/precomp.o
#20 24.73   CC       examples/precomp2.o
#20 24.74   CC       examples/simple.o
#20 24.80   CC       lzotest/lzotest.o
#20 24.83   CC       tests/align.o
#20 24.84   CC       tests/chksum.o
#20 24.88   CC       tests/promote.o
#20 24.92   CC       tests/sizes.o
#20 24.93   CC       minilzo/t-testmini.o
#20 24.93   CC       minilzo/t-minilzo.o
#20 24.97   CCLD     tests/promote
#20 25.01   CCLD     tests/sizes
#20 25.05   CCLD     src/liblzo2.la
#20 25.47   CCLD     minilzo/testmini
#20 25.59 ar: `u' modifier ignored since `D' is the default (see `U')
#20 25.65   CCLD     examples/dict
#20 25.65   CCLD     examples/lzopack
#20 25.65   CCLD     examples/precomp
#20 25.65   CCLD     examples/overlap
#20 25.65   CCLD     examples/precomp2
#20 25.65   CCLD     examples/simple
#20 26.04   CCLD     tests/align
#20 26.15   CCLD     tests/chksum
#20 26.36   CCLD     lzotest/lzotest
#20 26.87 make[1]: Leaving directory '/src/lzo-2.10'
#20 26.87 + for file in $SRC/*.c
#20 26.87 ++ basename /src/lzo_compress_target.c .c
#20 26.87 + name=lzo_compress_target
#20 26.87 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -I include -I minilzo -I include/lzo /src/lzo_compress_target.c -o lzo_compress_target.o
#20 26.93 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I include -I minilzo -I include/lzo lzo_compress_target.o -o /out/lzo_compress_target /libAFL.a src/.libs/liblzo2.a
#20 27.18 + for file in $SRC/*.c
#20 27.18 ++ basename /src/lzo_decompress_target.c .c
#20 27.18 + name=lzo_decompress_target
#20 27.18 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -I include -I minilzo -I include/lzo /src/lzo_decompress_target.c -o lzo_decompress_target.o
#20 27.24 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I include -I minilzo -I include/lzo lzo_decompress_target.o -o /out/lzo_decompress_target /libAFL.a src/.libs/liblzo2.a
#20 27.48 + cp /src/lzo_compress_target.options /src/lzo_decompress_target.options /out/
#20 27.48 + zip -j /out/lzo_decompress_target_seed_corpus.zip /src/lzo_decompress_target_seeds/seed.lzo
#20 27.48   adding: seed.lzo (deflated 6%)
#20 27.48 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 27.6s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:f3af14ebf315b8e0e489ba892f89de2882319d841a330c7eb6ba3555b79a012c
#21 writing image sha256:f3af14ebf315b8e0e489ba892f89de2882319d841a330c7eb6ba3555b79a012c done
#21 naming to gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:3562dd47840c01273377ffdfa3a1fbd5c5565d792d9e3bcfe315a8a310a2e35e
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:28bd12f03c8d0d011379ff76744d21bac2d8a30b716ecaeb8e4b6427672e3e8b
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate
#4 sha256:c4ed430e28f11ea8d5c6c58c9b5ba67039ccb652fb409a3df4c19c0e24a5788f
#4 ERROR: gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate:latest: not found

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:460de8759a450eba6fbeb388ea7b433485c57144929f60f90d8fad3292e3a801 done
#6 naming to gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:e56bc6cfbdffd2f8f4c42ceade87d67ae894851ef738d1363fa1b75813978fa8
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:12e4096e292a94a769a7b32559b764d0ff60fdcc799755a4a6bccc99712fa419
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate:latest
#3 sha256:2bd3c1473c0b46c80adf5f44c76f5170c1a1c6a5b0407c436634ec46fb1a2479
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target:latest
#4 sha256:ff9f16c2770d2e26006f04c530cb11894ed73123f078196236ac718a17ca0892
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:fabeb5a999881a9ba33300d00707d6983b3e068faf0c9a9e6d1e419becb7418f
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate
#6 sha256:1f01e4df7001fe17bb56f959af14a80030f698c6534dcdfa477c96269267f825
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target
#10 sha256:28689005e55c7bb7608ffc481c505f2f8e3f5880dd06a7c608e6e20ad7accb35
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target
#5 sha256:e2d20e3fdd5c06f6f1f660580709a0a32251c925314e95f27f780d5a59e9683d
#5 ERROR: gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target:latest: not found

#12 [internal] load build context
#12 sha256:fabeb5a999881a9ba33300d00707d6983b3e068faf0c9a9e6d1e419becb7418f
#12 ...

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target
#10 sha256:28689005e55c7bb7608ffc481c505f2f8e3f5880dd06a7c608e6e20ad7accb35
#10 DONE 0.3s

#12 [internal] load build context
#12 sha256:fabeb5a999881a9ba33300d00707d6983b3e068faf0c9a9e6d1e419becb7418f
#12 transferring context: 19.00MB 0.7s done
#12 DONE 0.7s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:5298844308dde8f0c46d0a037c2a4eccebe2f1acc6435a22b5a5a0247e046512
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:d7611944ed4e960d15365bc6b859c437e7a6015d9899cae1dbe0105e3af9e75f
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:ea89c4fb466d21e7c79571e8bf55b65cc4ad82fa01eafb8e2970d4f9f84caf6e
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:5531f874c3d9a2a416c6f844ab6c7bfc489b2a05e77e857b693cc462efb37b7d
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:8cac998297a7ab12d0deb96b8fe15cb874f110a079dcfd4106aa67662410baf3
#13 DONE 1.7s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:19086cb28508d2bd15d4f44b0198cf2c9aad26c65d1a964e92b1794cf0756f70
#14 DONE 0.2s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:2ad10831c5a86ca18807dc5dacb3ada05a713f10772e9a1d6e65d0dcde642a72
#15 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:ee6348c895c630817eeecee9318d3939854e6135f5e6c1c6901cad7800a2f3c3
#16 DONE 0.5s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:f5296b76d82c8097c3251962504802ef6632c73571d08b07ffd8e13ac32f5fa5
#17 DONE 0.1s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:92e8487a70179ebff4d4e3eb34be265defef6a66597ca0988a002bf8b260c629
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:d09f5994d232297e71ef416a33aa4ef106d23154ec24189f07b883148ffb61d3
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:fc168a43b0667b5437c16294a7dbdeb582e14cbc51257b0aab6df254e94369b2
#20 DONE 0.6s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:544efbb50277b505ee04118bb97757f77395345acc7915a79dcb1da35d47af7a done
#21 naming to gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target done
#21 DONE 0.0s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Unarchived 1 files from seed corpus /out/lzo_decompress_target_seed_corpus.zip.
INFO:root:Doing final sync.
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:1c8fc3ca586cc69067a47f951311fe0b48735b28719b5bff88b86e8311c87af8
#1 transferring dockerfile: 32B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:03becd4e9bbdb82e5e98da6d92c8f0a77aa003207a759ac2b2270a330b49a5a0
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target
#4 sha256:36daac9b393d9d9f74e34b6fb93568b32ced6541d5477d44db637835a17878dd
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:c33a9c990a285041a6fc9a691f2ff64e2c7a76db561612259ddf9ad01fe3f8cf
#8 transferring context: 311B done
#8 DONE 0.0s

#9 [4/5] COPY *.c *.options build.sh /src/
#9 sha256:6f67dc152d5cc7b15c2973802153034fe6fc03a4c8684e9f522d3a1e1a11e226
#9 CACHED

#7 [3/5] RUN wget -O lzo.tar.gz     http://www.oberhumer.com/opensource/lzo/download/lzo-2.10.tar.gz
#7 sha256:a43c89546416d010bc5b9d695ab5a9bf5530c91e0201187b3c518bde8e76f8c3
#7 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#6 sha256:4f84a0ce69ee663e95cd1295ccb0c22599aeb66f813cea39811e39dcebbc0ef1
#6 CACHED

#10 [5/5] COPY lzo_decompress_target_seeds /src/lzo_decompress_target_seeds
#10 sha256:2603bf0d493c46377411e2c3008e7e5ccb389c6a9af3559b18a7c18fad0ad079
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:3f8b4fb4850fc4d2f02668a9862cff17bdee6c2fd572168553c5ebd2a79cae31 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:a06085a016680e27c094e3026aaef132ba0ea121603850dc358e3c0fd753607f
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:5a511f99572d56d5517b620a683d83412f9c625a84e5ed237930e749d1a6750b
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target:latest
#3 sha256:80acfac66a8714350cbac83e1e50abe969e83e5472cd4693fcb9ddb15af4851b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate
#4 sha256:790a0798dc94d5890fdb88db33339399be52c6d0de53e377f887d3a9eef793f7
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target
#5 sha256:243f7de1b7f1c36ab66e56a787aba7344bec81161eb0a6c7b58acade3918f981
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:b7058d8f1b6e2ee16a622571f7335adbc5b7b7028407daf9bbe224e3f7606466
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:772cdcb967a6f639e6fab1787d43399fbb7e05f8f268229e88b5a1e8bcc90aa6
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:ed049d774220da89afd26559314c15ea4361ed4a4e86a9a4711efc67bdc962c6 done
#8 naming to gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:589d16c5c93aa052e19b1065215a97dbb546c3104fdb6cdae45cb561f24217bc
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:8263918554da8471a80227b1ac416e66647908b70e0aaad8f1f61597e0e9fb6f
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:dc614ae2e8e88ba047daa1636eb3b798e5c85d429ba5a1bbb1249f15c0e4ac23
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:25280dfa786bf15bc91370c46496ec86e01541731f693106d40c04698003e7d4
#11 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:925e4e548a252f31226afd460ae1a325c8ec40458bd0071d617cf36014217ea1
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:ebca7bb1b8bb41379791c00651ff66d04d45e3398afc41a1301aa360c33898b4
#10 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:fc0fd268d6bfd01c78be8108de9314c7ff2938f63de72690b34455a1488242e3
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:5dc85c66b74f60d1770fb4d8a2f0cf89b872162f5c4ad8fde1e9774f9306976f 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:7cd10ea4663eedcccdac86b1a5ba7ed3fac7f229c531d2388d147f1f19826d93
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:e8a1235f65d8d3c51dcdb03ccd287ef4896d57e0f25c6b5980f5ee6c5ae65c11
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate:latest
#3 sha256:57277ad610ff2521191e75da22afb9064f4a9cf1f1cf01d5bb679fea15a74973
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate
#6 sha256:0431697bc05bb7dd576b8c033524251400cc829120bf34576c4f5bcdf1f41695
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target
#5 sha256:f5ad800077a190aafdad177ae8d36c9409387967f4c03cc6e231d67b6f6f03f9
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:439810f7fa7e97af475795e4407fd61c211202f2342424cd34a77e5e9e8763be
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.1s

#15 [stage-1  8/13] COPY benchmarks/lzo_lzo_decompress_target/benchmark.yaml /
#15 sha256:b58aaac508504c5306dbc1da059ecb234e823757975196ebd96a82425675345c
#15 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:a4b50ef3724d219272eb6993a199ec3c5fd44a009869a5819128894fd3088901
#17 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:fecde7b439d88f9341f9a0f44b1783e0cc85a2c596199ab96d93e9ed4a72174e
#8 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:5a4a64d4b6521a1122fe8481cc2500fbe65aaf9e05e192194c1eac4d8f79c074
#14 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:98a147c06dfcaa541f8d0da8833d7c739667d271b56598b8b2a74b27dea7fe1a
#16 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:dbaa17cdab2faad7eb2ed6a2a61c82757f095141fb3de231427dd65ded503be3
#19 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:2551bc1000e391b57ca9c3138c085a4af7e7336e79998f941824d50fa9edcf05
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:dd5429ca0285b084777db6fe279ac9a5dd4001d2ac19e458af0eb9b823f5d9b2
#11 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:df4068d2096acf7ce14b6b0bfb8c97bdd5f67a7789badf68b66cc3b5c44309a7
#9 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:681b94d65934e9535eaa33b8b7fb13ebafbc9c9f02a9147f6ca3a1cab7cd0e59
#13 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:1da50b39a7a2a70800fa3266dde2665cf0603b68ac086d3a904dcb337330aee7
#18 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:d1014ec33c377961b35f6be74b581e6ab3721b78d042c6bdb28f930789d1a7e9
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:f3af14ebf315b8e0e489ba892f89de2882319d841a330c7eb6ba3555b79a012c
#21 writing image sha256:f3af14ebf315b8e0e489ba892f89de2882319d841a330c7eb6ba3555b79a012c done
#21 naming to gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:1cbc26f49b53bdbd222b3b910edb543ff8027896f9e12b235817684b5d209f3e
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:31d3ab0a511348296498780cf59175708896ebd035ec086e45f773f0a84c8f1a
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate
#5 sha256:c4ed430e28f11ea8d5c6c58c9b5ba67039ccb652fb409a3df4c19c0e24a5788f
#5 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:460de8759a450eba6fbeb388ea7b433485c57144929f60f90d8fad3292e3a801 done
#6 naming to gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:60b3dc62d4744e3c75c38befd7c60efc0f1844c06b39cbd7e689b15b00eb1333
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:f3513022b2fabb3b4468da9e5094e5efc4c342db439e969decea2904264c92bc
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target:latest
#4 sha256:ff9f16c2770d2e26006f04c530cb11894ed73123f078196236ac718a17ca0892
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate:latest
#3 sha256:2bd3c1473c0b46c80adf5f44c76f5170c1a1c6a5b0407c436634ec46fb1a2479
#3 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate
#6 sha256:1f01e4df7001fe17bb56f959af14a80030f698c6534dcdfa477c96269267f825
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target
#5 sha256:e2d20e3fdd5c06f6f1f660580709a0a32251c925314e95f27f780d5a59e9683d
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target
#10 sha256:28689005e55c7bb7608ffc481c505f2f8e3f5880dd06a7c608e6e20ad7accb35
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:6b538b18894984bb246e74839b44ee7a3781c0946ce8913af5f87f53df8f3e07
#12 transferring context: 19.00MB 0.6s done
#12 DONE 0.7s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:11575dd12a398e2e2b45a89173b735ff14ad24bf91616b935fe46a409f994720
#19 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:08020bb5e14f32125057eada8bf9ed59f4872fa3edc7d40f3ae0782b85311292
#16 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:5298844308dde8f0c46d0a037c2a4eccebe2f1acc6435a22b5a5a0247e046512
#7 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:41b588e09cf39fea5c9725ed15e7e7caabe72832db94e9971fde161c3a2281e5
#15 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:391f11cbebe79845938f70dc09a35280174454b27434d0336bfe1eff0755dbe5
#18 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:1890b742c7e1c34927e811bd2dc9086d4cdeed8e95d17aa5df8bc1e8d0deb657
#13 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:cd93ff2534e64c29b2143083ada0dd2511e6e0d5e75ae181c7e6557592b35dc7
#14 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:0572c82b2ac4c45df16e0c7c677b85984dfeb1bcff060d4fd6975a99be70041c
#17 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:d7611944ed4e960d15365bc6b859c437e7a6015d9899cae1dbe0105e3af9e75f
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:ea89c4fb466d21e7c79571e8bf55b65cc4ad82fa01eafb8e2970d4f9f84caf6e
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:5531f874c3d9a2a416c6f844ab6c7bfc489b2a05e77e857b693cc462efb37b7d
#11 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:8f17499f11adcb874b6831eaf75899c6a8c795617ab2f9e3027ab2e3764a5241
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:544efbb50277b505ee04118bb97757f77395345acc7915a79dcb1da35d47af7a done
#21 naming to gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Unarchived 1 files from seed corpus /out/lzo_decompress_target_seed_corpus.zip.
INFO:root:Doing final sync.
