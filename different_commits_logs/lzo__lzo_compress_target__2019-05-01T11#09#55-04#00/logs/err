WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: lzo_lzo_compress_target.
INFO:root:Please run "make test-run-afl-lzo_lzo_compress_target" to test integration.
#2 [internal] load .dockerignore
#2 sha256:fda3496443f9b72e85bb2ca70ee491e6dd0f9055f4ccd15ad4d3477e2200ce4c
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:bc765de63b113d6f230c4ab1635c7b4fc736c79b50cda6cfd3c94980a4c7a5ce
#1 transferring dockerfile: 1.04kB done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:fda3496443f9b72e85bb2ca70ee491e6dd0f9055f4ccd15ad4d3477e2200ce4c
#2 transferring context: 2B done
#2 DONE 0.3s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#8 [internal] load build context
#8 sha256:ddd6ccc5f1fadae11bb282695ff61c3475160622bbcc52d76e377b6f9f669a26
#8 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lzo_lzo_compress_target
#4 sha256:276fd8f0620ec45df579251a6bddd529674f0fe3edd7a9274abdd10af97797c3
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/lzo_lzo_compress_target:latest: not found

#8 [internal] load build context
#8 sha256:ddd6ccc5f1fadae11bb282695ff61c3475160622bbcc52d76e377b6f9f669a26
#8 transferring context: 7.09kB done
#8 DONE 0.1s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#6 sha256:4f84a0ce69ee663e95cd1295ccb0c22599aeb66f813cea39811e39dcebbc0ef1
#6 CACHED

#7 [3/5] RUN wget -O lzo.tar.gz     http://www.oberhumer.com/opensource/lzo/download/lzo-2.10.tar.gz
#7 sha256:a43c89546416d010bc5b9d695ab5a9bf5530c91e0201187b3c518bde8e76f8c3
#7 CACHED

#9 [4/5] COPY *.c *.options build.sh /src/
#9 sha256:78422e2399b485842b35c69856c97b88eea867f62d33c0f8498d1d7622abf3c6
#9 CACHED

#10 [5/5] COPY lzo_decompress_target_seeds /src/lzo_decompress_target_seeds
#10 sha256:13fa059f538e897c4f8f6dd79736f6ac72fd232ec150c00aa4d0fc7e566c7b30
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:3f8b4fb4850fc4d2f02668a9862cff17bdee6c2fd572168553c5ebd2a79cae31 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/lzo_lzo_compress_target done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lzo_lzo_compress_target:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:ccd2ab6b31b74efd32c5f619f06c901a0d3d27170b53206863c8ef80154c9055
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:fc0d022b7e16f7e5943aa6c0869c76741ee6e3ae73488fa0b3ebda99cf352fce
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/lzo_lzo_compress_target:latest
#3 sha256:f5ec9e9359a442a727946f3234dbfb899ed5b34bc9f541ece787396431ef4a09
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/lzo_lzo_compress_target
#5 sha256:5a0b540267164f01412c68661ee673b3502a28b875dc82df0f28757504417cb3
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target-intermediate
#4 sha256:0533b6d2c0d8819eeae0f115054effff180491b8dab752588b4f3559b76d007f
#4 ERROR: gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target-intermediate:latest: not found

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:2b349f777ab5462b39ee4aa55ff0ce6af1271583ccedde0ce7e12ae8bba09714
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:d731994ca1364899ccdd43a6d1a0bf62adc2bd7f54e537a9a7bfeefb48e71c07
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:ed049d774220da89afd26559314c15ea4361ed4a4e86a9a4711efc67bdc962c6
#8 writing image sha256:ed049d774220da89afd26559314c15ea4361ed4a4e86a9a4711efc67bdc962c6 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target-intermediate 0.0s done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:2709d5ce460c9276c80074f93fbe98416a7665057b6b19389614972d97fa8124
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:a3ca70e45cbf8f7a938303a16f9784288f67b5fd23e838fe3ed36d4cb903e407
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:2dc45fcef471305e02e3781ae8369a97e096803a5371d5ad1395c2cf0668e46a
#8 transferring context: 559B 0.2s done
#8 DONE 0.3s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:16de3624fb9c0034990f640ebcace2ea9b662ec6feb73f5bb8c0379663248e4b
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:2584edb1238bc7d8e40f4927143123bd2d869d88f5785c44f1a2489c19f45571
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:8f0a77916137fe3830f66001306332e63e38f4c7391ebe5886bf9b9be6ff09fe
#9 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:9d527e03d8908912184ea8dad8231db2d93c0539951de4a0bc58a166ab613ba4
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:5dc85c66b74f60d1770fb4d8a2f0cf89b872162f5c4ad8fde1e9774f9306976f 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:a282dc3e10fb3b9d6933a9ea8a789e431f8ac56cf154aa9102eff8bb212aac86
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:cea432841843ffaae3117e1730a2867599db4ca1708452c6f851b14cb6675963
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target-intermediate:latest
#3 sha256:5b354102f9d5380fb85d8ba845e889176a82bfa2d1f5d6d962a6834fb5f2cb24
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:56a42c5f5c1dacaffe167b0affa499c758d7a14e3c837c815eb205465942bc2d
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target-intermediate
#6 sha256:727babeddead958b31f63abd0b42ca9d6747b6f38c12a2997c1d3fcacd73fca6
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target
#5 sha256:e623f8feb5c1d5fcad8c18f4b4cdd912880b962ac9b31b70cc56dc1f1913934a
#5 ERROR: gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target:latest: not found

#12 [internal] load build context
#12 sha256:56a42c5f5c1dacaffe167b0affa499c758d7a14e3c837c815eb205465942bc2d
#12 transferring context: 669.89kB 0.1s done
#12 DONE 0.1s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:b9276b00dc7f5f9c077b8d983d4cfefa98cffe470e558323c92ca74e8414a744
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:04f93d97e5ff833527f258b02953b459f2be482540faf490d5684d484700d69b
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:8bfebcbdab8cbdfe718501416c25412cb66610f50b388d8c83a31a8f6211f4ab
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:63aac8e984f0fffa57d1f946a38c876d1e5bca6333f6f8961643c4dc2734b1c6
#11 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:5f45e020781dada63195d21d354b1c8a566c69259e31df99ca164e0bfff47600
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:e40fbc8edcc7f054d07149b2a78e6c0aed8ef074053fc0ee3b62620b0e439681
#14 DONE 0.9s

#15 [stage-1  8/13] COPY benchmarks/lzo_lzo_compress_target/benchmark.yaml /
#15 sha256:30d2046ec1febff79376c2b8f17e3e484a89564b9c5b84109951ad32cd1f8491
#15 DONE 0.3s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:921886781d8679128b5c8ca970c99e90c7082856429e35df0c57b7a68218f7a2
#16 DONE 0.6s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:ea2890699f8b60fc52baae60a7dd171cc83382fda2afb5e10da48d775c4b9bea
#17 DONE 0.2s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:17bc2c7681cbe0721dbf01932ee40c23ee373c71a2b2557e99336d0eb89f99b4
#18 0.453 Checking out commit 3049c50d
#18 0.465 error: pathspec '3049c50d' did not match any file(s) known to git
#18 0.472 error: pathspec '3049c50d' did not match any file(s) known to git
#18 0.604 Checkout unsuccessful.
#18 DONE 0.9s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:f12b08f68008634c898168315c93884c69561a1728e073fb1296f3a51d237f27
#19 DONE 0.9s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:c6b18dcf24336f08d63aa0d36bb4a687f7be382b50a69c3c59760a56ab6718d6
#20 0.586 Run fuzzer_build to build the target
#20 0.699 FUZZ_TARGET = lzo_compress_target
#20 0.699 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.699 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.703 Building benchmark lzo_lzo_compress_target with fuzzer afl
#20 0.706 + cd /src
#20 0.706 + tar xzf lzo.tar.gz
#20 0.760 + cd lzo-2.10
#20 0.760 + ./configure
#20 0.969 configure: Configuring LZO 2.10
#20 0.988 checking build system type... x86_64-pc-linux-gnu
#20 1.058 checking host system type... x86_64-pc-linux-gnu
#20 1.058 checking target system type... x86_64-pc-linux-gnu
#20 1.059 checking whether to enable maintainer-specific portions of Makefiles... no
#20 1.061 checking for gcc... clang
#20 1.132 checking whether the C compiler works... yes
#20 1.249 checking for C compiler default output file name... a.out
#20 1.251 checking for suffix of executables... 
#20 1.373 checking whether we are cross compiling... no
#20 1.519 checking for suffix of object files... o
#20 1.548 checking whether we are using the GNU C compiler... yes
#20 1.576 checking whether clang accepts -g... yes
#20 1.602 checking for clang option to accept ISO C89... none needed
#20 1.648 checking whether clang understands -c and -o together... yes
#20 1.690 checking for ar... ar
#20 1.691 checking the archiver (ar) interface... ar
#20 1.727 checking for style of include used by make... GNU
#20 1.735 checking dependency style of clang... gcc3
#20 1.790 checking how to run the C preprocessor... clang -E
#20 1.965 checking whether the C preprocessor needs special flags... none needed
#20 1.996 checking for an ANSI C-conforming const... yes
#20 2.026 checking for grep that handles long lines and -e... /usr/bin/grep
#20 2.030 checking for egrep... /usr/bin/grep -E
#20 2.033 checking for ANSI C header files... yes
#20 2.273 checking for sys/types.h... yes
#20 2.331 checking for sys/stat.h... yes
#20 2.386 checking for stdlib.h... yes
#20 2.441 checking for string.h... yes
#20 2.502 checking for memory.h... yes
#20 2.570 checking for strings.h... yes
#20 2.629 checking for inttypes.h... yes
#20 2.690 checking for stdint.h... yes
#20 2.756 checking for unistd.h... yes
#20 2.817 checking whether byte ordering is bigendian... no
#20 2.930 checking for special C compiler options needed for large files... no
#20 2.930 checking for _FILE_OFFSET_BITS value needed for large files... no
#20 2.963 checking for a BSD-compatible install... /usr/bin/install -c
#20 2.977 checking whether build environment is sane... yes
#20 2.994 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 2.998 checking for gawk... no
#20 2.999 checking for mawk... mawk
#20 2.999 checking whether make sets $(MAKE)... yes
#20 3.011 checking whether make supports nested variables... yes
#20 3.022 checking dependency style of clang... gcc3
#20 3.081 checking whether make supports nested variables... (cached) yes
#20 3.083 checking how to print strings... printf
#20 3.137 checking for a sed that does not truncate output... /usr/bin/sed
#20 3.145 checking for fgrep... /usr/bin/grep -F
#20 3.148 checking for ld used by clang... /usr/bin/ld
#20 3.166 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 3.171 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 3.176 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 3.209 checking whether ln -s works... yes
#20 3.209 checking the maximum length of command line arguments... 1572864
#20 3.220 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 3.220 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 3.221 checking for /usr/bin/ld option to reload object files... -r
#20 3.222 checking for objdump... objdump
#20 3.223 checking how to recognize dependent libraries... pass_all
#20 3.225 checking for dlltool... no
#20 3.226 checking how to associate runtime and link libraries... printf %s\n
#20 3.227 checking for archiver @FILE support... @
#20 3.265 checking for strip... strip
#20 3.266 checking for ranlib... ranlib
#20 3.267 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 3.443 checking for sysroot... no
#20 3.470 checking for mt... no
#20 3.470 checking if : is a manifest tool... no
#20 3.480 checking for dlfcn.h... yes
#20 3.540 checking for objdir... .libs
#20 3.713 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 3.743 checking for clang option to produce PIC... -fPIC -DPIC
#20 3.743 checking if clang PIC flag -fPIC -DPIC works... yes
#20 3.775 checking if clang static flag -static works... yes
#20 3.955 checking if clang supports -c -o file.o... yes
#20 3.998 checking if clang supports -c -o file.o... (cached) yes
#20 3.998 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 4.034 checking dynamic linker characteristics... GNU/Linux ld.so
#20 4.205 checking how to hardcode library paths into programs... immediate
#20 4.205 checking whether stripping libraries is possible... yes
#20 4.208 checking if libtool supports shared libraries... yes
#20 4.208 checking whether to build shared libraries... no
#20 4.208 checking whether to build static libraries... yes
#20 4.210 checking whether time.h and sys/time.h may both be included... yes
#20 4.249 checking assert.h usability... yes
#20 4.305 checking assert.h presence... yes
#20 4.326 checking for assert.h... yes
#20 4.336 checking ctype.h usability... yes
#20 4.395 checking ctype.h presence... yes
#20 4.417 checking for ctype.h... yes
#20 4.429 checking dirent.h usability... yes
#20 4.488 checking dirent.h presence... yes
#20 4.509 checking for dirent.h... yes
#20 4.521 checking errno.h usability... yes
#20 4.579 checking errno.h presence... yes
#20 4.602 checking for errno.h... yes
#20 4.612 checking fcntl.h usability... yes
#20 4.673 checking fcntl.h presence... yes
#20 4.695 checking for fcntl.h... yes
#20 4.707 checking float.h usability... yes
#20 4.766 checking float.h presence... yes
#20 4.788 checking for float.h... yes
#20 4.800 checking limits.h usability... yes
#20 4.856 checking limits.h presence... yes
#20 4.878 checking for limits.h... yes
#20 4.890 checking malloc.h usability... yes
#20 4.945 checking malloc.h presence... yes
#20 4.969 checking for malloc.h... yes
#20 4.982 checking for memory.h... (cached) yes
#20 4.993 checking setjmp.h usability... yes
#20 5.134 checking setjmp.h presence... yes
#20 5.157 checking for setjmp.h... yes
#20 5.168 checking signal.h usability... yes
#20 5.226 checking signal.h presence... yes
#20 5.249 checking for signal.h... yes
#20 5.262 checking stdarg.h usability... yes
#20 5.318 checking stdarg.h presence... yes
#20 5.337 checking for stdarg.h... yes
#20 5.349 checking stddef.h usability... yes
#20 5.408 checking stddef.h presence... yes
#20 5.429 checking for stddef.h... yes
#20 5.439 checking for stdint.h... (cached) yes
#20 5.451 checking stdio.h usability... yes
#20 5.511 checking stdio.h presence... yes
#20 5.536 checking for stdio.h... yes
#20 5.549 checking for stdlib.h... (cached) yes
#20 5.560 checking for string.h... (cached) yes
#20 5.571 checking for strings.h... (cached) yes
#20 5.583 checking time.h usability... yes
#20 5.644 checking time.h presence... yes
#20 5.666 checking for time.h... yes
#20 5.678 checking for unistd.h... (cached) yes
#20 5.690 checking utime.h usability... yes
#20 5.743 checking utime.h presence... yes
#20 5.764 checking for utime.h... yes
#20 5.775 checking sys/mman.h usability... yes
#20 5.830 checking sys/mman.h presence... yes
#20 5.853 checking for sys/mman.h... yes
#20 5.863 checking sys/resource.h usability... yes
#20 5.917 checking sys/resource.h presence... yes
#20 5.940 checking for sys/resource.h... yes
#20 5.952 checking for sys/stat.h... (cached) yes
#20 5.964 checking sys/time.h usability... yes
#20 6.020 checking sys/time.h presence... yes
#20 6.043 checking for sys/time.h... yes
#20 6.053 checking for sys/types.h... (cached) yes
#20 6.065 checking sys/wait.h usability... yes
#20 6.130 checking sys/wait.h presence... yes
#20 6.157 checking for sys/wait.h... yes
#20 6.164 checking whether limits.h is sane... yes
#20 6.196 checking for off_t... yes
#20 6.329 checking for ptrdiff_t... yes
#20 6.455 checking for size_t... yes
#20 6.584 checking return type of signal handlers... void
#20 6.632 checking size of short... 2
#20 6.802 checking size of int... 4
#20 7.141 checking size of long... 8
#20 7.308 checking size of long long... 8
#20 7.472 checking size of __int16... 0
#20 7.546 checking size of __int32... 0
#20 7.617 checking size of __int64... 0
#20 7.690 checking size of void *... 8
#20 7.856 checking size of size_t... 8
#20 8.029 checking size of ptrdiff_t... 8
#20 8.200 checking size of __int32... (cached) 0
#20 8.203 checking size of intmax_t... 8
#20 8.368 checking size of uintmax_t... 8
#20 8.532 checking size of intptr_t... 8
#20 8.698 checking size of uintptr_t... 8
#20 8.871 checking size of float... 4
#20 9.033 checking size of double... 8
#20 9.199 checking size of long double... 16
#20 9.361 checking size of dev_t... 8
#20 9.535 checking size of fpos_t... 16
#20 9.706 checking size of mode_t... 4
#20 9.881 checking size of off_t... 8
#20 10.06 checking size of ssize_t... 8
#20 10.23 checking size of time_t... 8
#20 10.41 checking for access... yes
#20 10.56 checking for alloca... no
#20 10.70 checking for atexit... yes
#20 10.84 checking for atoi... yes
#20 10.99 checking for atol... yes
#20 11.12 checking for chmod... yes
#20 11.26 checking for chown... yes
#20 11.40 checking for clock_getcpuclockid... yes
#20 11.54 checking for clock_getres... yes
#20 11.68 checking for clock_gettime... yes
#20 11.81 checking for ctime... yes
#20 11.97 checking for difftime... yes
#20 12.10 checking for fstat... yes
#20 12.24 checking for getenv... yes
#20 12.37 checking for getpagesize... yes
#20 12.52 checking for getrusage... yes
#20 12.65 checking for gettimeofday... yes
#20 12.79 checking for gmtime... yes
#20 12.93 checking for isatty... yes
#20 13.06 checking for localtime... yes
#20 13.20 checking for longjmp... yes
#20 13.34 checking for lstat... yes
#20 13.48 checking for memcmp... yes
#20 13.62 checking for memcpy... yes
#20 13.76 checking for memmove... yes
#20 13.91 checking for memset... yes
#20 14.04 checking for mkdir... yes
#20 14.18 checking for mktime... yes
#20 14.33 checking for mmap... yes
#20 14.47 checking for mprotect... yes
#20 14.61 checking for munmap... yes
#20 14.74 checking for qsort... yes
#20 14.88 checking for raise... yes
#20 15.02 checking for rmdir... yes
#20 15.17 checking for setjmp... yes
#20 15.31 checking for signal... yes
#20 15.46 checking for snprintf... yes
#20 15.60 checking for strcasecmp... yes
#20 15.75 checking for strchr... yes
#20 15.89 checking for strdup... yes
#20 16.04 checking for strerror... yes
#20 16.18 checking for strftime... yes
#20 16.33 checking for stricmp... no
#20 16.47 checking for strncasecmp... yes
#20 16.61 checking for strnicmp... no
#20 16.76 checking for strrchr... yes
#20 16.90 checking for strstr... yes
#20 17.04 checking for time... yes
#20 17.18 checking for umask... yes
#20 17.32 checking for utime... yes
#20 17.45 checking for vsnprintf... yes
#20 17.59 checking whether to build assembly versions... no
#20 17.63 checking whether your compiler passes the LZO conformance test... yes
#20 17.83 checking that generated files are newer than configure... done
#20 17.83 configure: creating ./config.status
#20 18.61 config.status: creating Makefile
#20 18.63 config.status: creating lzo2.pc
#20 18.65 config.status: creating config.h
#20 18.67 config.status: executing depfiles commands
#20 18.91 config.status: executing libtool commands
#20 18.94 
#20 18.94    LZO configuration summary
#20 18.94    -------------------------
#20 18.94    LZO version                : 2.10
#20 18.94    configured for host        : x86_64-pc-linux-gnu
#20 18.94    source code location       : .
#20 18.94    compiler                   : clang
#20 18.94    preprocessor definitions   : -DLZO_HAVE_CONFIG_H=1
#20 18.94    preprocessor flags         : 
#20 18.94    compiler flags             : -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard
#20 18.94    build static library       : yes
#20 18.94    build shared library       : no
#20 18.94    enable i386 assembly code  : no
#20 18.94 
#20 18.94 
#20 18.94    LZO 2.10 configured.
#20 18.94 
#20 18.94    Copyright (C) 1996-2017 Markus Franz Xaver Johannes Oberhumer
#20 18.94    All Rights Reserved.
#20 18.94 
#20 18.94    The LZO library is free software; you can redistribute it and/or
#20 18.94    modify it under the terms of the GNU General Public License as
#20 18.94    published by the Free Software Foundation; either version 2 of
#20 18.94    the License, or (at your option) any later version.
#20 18.94 
#20 18.94    The LZO library is distributed in the hope that it will be useful,
#20 18.94    but WITHOUT ANY WARRANTY; without even the implied warranty of
#20 18.94    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#20 18.94    GNU General Public License for more details.
#20 18.94 
#20 18.94    Markus F.X.J. Oberhumer
#20 18.94    <markus@oberhumer.com>
#20 18.94    http://www.oberhumer.com/opensource/lzo/
#20 18.94 
#20 18.94 
#20 18.94 Type 'make' to build LZO.
#20 18.94 Type 'make check' and 'make test' to test LZO.
#20 18.94 Type 'make install' to install LZO.
#20 18.94 After installing LZO, please have a look at 'examples/simple.c'.
#20 18.94 
#20 19.00 ++ nproc
#20 19.01 + make -j8
#20 19.02 make  all-am
#20 19.04 make[1]: Entering directory '/src/lzo-2.10'
#20 19.05   CC       src/lzo1.lo
#20 19.05   CC       src/lzo1_99.lo
#20 19.05   CC       src/lzo1a.lo
#20 19.05   CC       src/lzo1a_99.lo
#20 19.05   CC       src/lzo1b_1.lo
#20 19.05   CC       src/lzo1b_2.lo
#20 19.05   CC       src/lzo1b_3.lo
#20 19.06   CC       src/lzo1b_4.lo
#20 19.70   CC       src/lzo1b_5.lo
#20 19.70   CC       src/lzo1b_6.lo
#20 19.70   CC       src/lzo1b_7.lo
#20 19.74   CC       src/lzo1b_8.lo
#20 19.75   CC       src/lzo1b_9.lo
#20 19.77   CC       src/lzo1b_99.lo
#20 19.84   CC       src/lzo1b_9x.lo
#20 19.88   CC       src/lzo1b_cc.lo
#20 20.61   CC       src/lzo1b_d1.lo
#20 20.77   CC       src/lzo1b_d2.lo
#20 20.79   CC       src/lzo1b_rr.lo
#20 20.79   CC       src/lzo1b_xx.lo
#20 20.82   CC       src/lzo1c_1.lo
#20 20.84   CC       src/lzo1c_2.lo
#20 20.86   CC       src/lzo1c_3.lo
#20 20.87   CC       src/lzo1c_4.lo
#20 21.29   CC       src/lzo1c_5.lo
#20 21.36   CC       src/lzo1c_6.lo
#20 21.37   CC       src/lzo1c_7.lo
#20 21.48   CC       src/lzo1c_8.lo
#20 21.53   CC       src/lzo1c_99.lo
#20 21.53   CC       src/lzo1c_9.lo
#20 21.55   CC       src/lzo1c_9x.lo
#20 21.60   CC       src/lzo1c_cc.lo
#20 22.03   CC       src/lzo1c_d1.lo
#20 22.09   CC       src/lzo1c_d2.lo
#20 22.12   CC       src/lzo1c_rr.lo
#20 22.15   CC       src/lzo1c_xx.lo
#20 22.22   CC       src/lzo1f_1.lo
#20 22.28   CC       src/lzo1f_9x.lo
#20 22.32   CC       src/lzo1f_d1.lo
#20 22.37   CC       src/lzo1f_d2.lo
#20 22.67   CC       src/lzo1x_1.lo
#20 22.74   CC       src/lzo1x_1k.lo
#20 22.80   CC       src/lzo1x_1l.lo
#20 22.90   CC       src/lzo1x_1o.lo
#20 22.92   CC       src/lzo1x_9x.lo
#20 23.06   CC       src/lzo1x_d1.lo
#20 23.13   CC       src/lzo1x_d2.lo
#20 23.15   CC       src/lzo1x_d3.lo
#20 23.39   CC       src/lzo1x_o.lo
#20 23.48   CC       src/lzo1y_1.lo
#20 23.55   CC       src/lzo1y_9x.lo
#20 23.64   CC       src/lzo1y_d1.lo
#20 23.73   CC       src/lzo1y_d2.lo
#20 23.89   CC       src/lzo1y_d3.lo
#20 23.98   CC       src/lzo1y_o.lo
#20 24.12   CC       src/lzo1z_9x.lo
#20 24.13   CC       src/lzo1z_d1.lo
#20 24.22   CC       src/lzo1z_d2.lo
#20 24.32   CC       src/lzo1z_d3.lo
#20 24.46   CC       src/lzo2a_9x.lo
#20 24.73   CC       src/lzo2a_d1.lo
#20 24.73   CC       src/lzo2a_d2.lo
#20 24.77   CC       src/lzo_crc.lo
#20 24.82   CC       src/lzo_init.lo
#20 24.95   CC       src/lzo_ptr.lo
#20 25.15   CC       src/lzo_str.lo
#20 25.29   CC       src/lzo_util.lo
#20 25.31   CC       examples/dict.o
#20 25.33   CC       examples/lzopack.o
#20 25.33   CC       examples/overlap.o
#20 25.35   CC       examples/precomp.o
#20 25.47   CC       examples/precomp2.o
#20 25.48   CC       examples/simple.o
#20 25.52   CC       lzotest/lzotest.o
#20 25.55   CC       tests/align.o
#20 25.55   CC       tests/chksum.o
#20 25.63   CC       tests/promote.o
#20 25.66   CC       tests/sizes.o
#20 25.68   CC       minilzo/t-testmini.o
#20 25.68   CC       minilzo/t-minilzo.o
#20 25.71   CCLD     tests/promote
#20 25.74   CCLD     tests/sizes
#20 25.88   CCLD     src/liblzo2.la
#20 26.22   CCLD     minilzo/testmini
#20 26.41 ar: `u' modifier ignored since `D' is the default (see `U')
#20 26.52   CCLD     examples/lzopack
#20 26.52   CCLD     examples/precomp
#20 26.52   CCLD     examples/precomp2
#20 26.52   CCLD     examples/overlap
#20 26.52   CCLD     examples/simple
#20 26.52   CCLD     examples/dict
#20 26.69   CCLD     tests/align
#20 26.73   CCLD     tests/chksum
#20 27.22   CCLD     lzotest/lzotest
#20 27.71 make[1]: Leaving directory '/src/lzo-2.10'
#20 27.71 + for file in $SRC/*.c
#20 27.72 ++ basename /src/lzo_compress_target.c .c
#20 27.72 + name=lzo_compress_target
#20 27.72 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -I include -I minilzo -I include/lzo /src/lzo_compress_target.c -o lzo_compress_target.o
#20 27.77 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I include -I minilzo -I include/lzo lzo_compress_target.o -o /out/lzo_compress_target /libAFL.a src/.libs/liblzo2.a
#20 28.01 + for file in $SRC/*.c
#20 28.01 ++ basename /src/lzo_decompress_target.c .c
#20 28.01 + name=lzo_decompress_target
#20 28.01 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -I include -I minilzo -I include/lzo /src/lzo_decompress_target.c -o lzo_decompress_target.o
#20 28.06 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I include -I minilzo -I include/lzo lzo_decompress_target.o -o /out/lzo_decompress_target /libAFL.a src/.libs/liblzo2.a
#20 28.30 + cp /src/lzo_compress_target.options /src/lzo_decompress_target.options /out/
#20 28.30 + zip -j /out/lzo_decompress_target_seed_corpus.zip /src/lzo_decompress_target_seeds/seed.lzo
#20 28.30   adding: seed.lzo (deflated 6%)
#20 28.30 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 33.1s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:4a443ed240fe0b62cd14acadc0f37c46bd3363cc55918ba2a8029300e4d601cb done
#21 naming to gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:4d241e25876084b2b9830c9f05e8a7079a3b67eed51d84d587204f22e71e98c2
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:eca89f47f3b18661fd47fdec9e6967da7b13fe5b5ee8cb31ea37bfa4e2fa464d
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target-intermediate
#5 sha256:984b8733a3f35ce35176e1ce91a09a5f427a5b9fe8ca96b7ce6c1186d62c7580
#5 ERROR: gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target-intermediate:latest: not found

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:460de8759a450eba6fbeb388ea7b433485c57144929f60f90d8fad3292e3a801 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target-intermediate 0.0s done
#6 DONE 0.3s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:4f8de4f2b649284c6125f127c2a0f1ab08aed74d11b4192d4025d57a96ec88b0
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:e546297b453cd805d538dac0723840179d582c7ce8aefdc0bb9845a127a96466
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target-intermediate:latest
#3 sha256:97a36ef8d19d92615cc79cb6ac74ba707dd146f6388c452ffc1ff91cd0a8d3d8
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target:latest
#4 sha256:84a9e25f2b5b36df5f3ff113346521dd60880e2132124c5a01bd556f50a4a486
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:23e995a998fe6cbc48984d120d615f7f101c4e5f08f4d249e2c2687b916ca0a3
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target-intermediate
#6 sha256:0437d568ce64fc268441b04623bc639bff417f46529de3b41c185553b25c0f8c
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target
#10 sha256:387dbceced38672d6a9002362988778094031314ff004ddf11344cc91db4e80e
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target
#5 sha256:93da7dfefbae7c843951b953fb16a242ba95d46bf039ced3eaedb5ce466f0784
#5 ERROR: gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target:latest: not found

#12 [internal] load build context
#12 sha256:23e995a998fe6cbc48984d120d615f7f101c4e5f08f4d249e2c2687b916ca0a3
#12 transferring context: 19.00MB 0.6s done
#12 DONE 0.7s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target
#10 sha256:387dbceced38672d6a9002362988778094031314ff004ddf11344cc91db4e80e
#10 DONE 1.0s

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:403847561eb2f5388ecbceeb9828c7be277cb93ee5dc6a74a783f6098dba69b7
#9 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:eec26aa3a06a9d73a3679fe088d803b45fdb0f2e5bf9131d30dbd57a01daf0d1
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:b5148ee283555d98ff60be89d37cf6ef87e377a6782ca773ff9f61d814d94391
#8 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:e87fcb9a37f42638bcb37e5e009373ec74d1bc169a1e5c40a555c4998c7a14a7
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:2de761bf0d3a4dcb114ea151b56e0d8aca5c52a6c9928f350968b7983f2e4eea
#13 DONE 0.7s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:5d17c3d7b95996abc49d294e674c8d6f5ad2851e25c167c515b17272030de584
#14 DONE 0.3s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:de97d266042991f8c96918721d9127efb8be24e9142eeb4fce5a75561aabc395
#15 DONE 0.8s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:0c7dadc141bea5c5e7887d6b065f03807a419388f6ca1d1b0d75a66957e36dc0
#16 DONE 0.8s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:ddcb6a5c770a1030605fa8ce2b50e98fa7a60c78e22073ce0db98a38773d82c8
#17 DONE 0.3s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:e47668a4e13536042b21750259c7de7315a919a4735e235b0588b578e0bfeff4
#18 DONE 0.2s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:cdfac414640b98046da45a9503e0bf31f1bf8bc6b052ae79af0fe40172839922
#19 DONE 0.2s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:818d0dac40f0c53b4880b94ee83f9e3323f94d676ca7622d8975556b98f8cabd
#20 DONE 0.6s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:eeb56d49e7bdcf2762acf1c1ac9fc17120ef36d489e0c42e88311fa689be71a4
#21 writing image sha256:eeb56d49e7bdcf2762acf1c1ac9fc17120ef36d489e0c42e88311fa689be71a4 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target 0.0s done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Doing final sync.
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:cda066b2201714c9ade1396d37c158227872fcdf3754094e6145dbc673ef6c9f
#2 transferring context:
#2 transferring context: 2B done
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:c586598d5e6442ebf258bcf8c80fa1b7c7f74e65485d843240cf4b21c0582a3b
#1 transferring dockerfile: 32B done
#1 DONE 1.5s

#2 [internal] load .dockerignore
#2 sha256:cda066b2201714c9ade1396d37c158227872fcdf3754094e6145dbc673ef6c9f
#2 DONE 2.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.8s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lzo_lzo_compress_target
#4 sha256:276fd8f0620ec45df579251a6bddd529674f0fe3edd7a9274abdd10af97797c3
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:37dc2a38881d000643e4355e4fe65ebc14e4093a2f694ae1ff1ae7f08c0ff932
#8 transferring context: 311B done
#8 DONE 0.2s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#6 sha256:4f84a0ce69ee663e95cd1295ccb0c22599aeb66f813cea39811e39dcebbc0ef1
#6 CACHED

#7 [3/5] RUN wget -O lzo.tar.gz     http://www.oberhumer.com/opensource/lzo/download/lzo-2.10.tar.gz
#7 sha256:a43c89546416d010bc5b9d695ab5a9bf5530c91e0201187b3c518bde8e76f8c3
#7 CACHED

#9 [4/5] COPY *.c *.options build.sh /src/
#9 sha256:d061f5f4756b2e28ba10fb58be998cc6447803e5ef0c60711f9b305f4b41a18c
#9 CACHED

#10 [5/5] COPY lzo_decompress_target_seeds /src/lzo_decompress_target_seeds
#10 sha256:3046157260142a5377b163237a384c4c79450e370d5d79d77a9af44e2bc8cd1c
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:3f8b4fb4850fc4d2f02668a9862cff17bdee6c2fd572168553c5ebd2a79cae31 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/lzo_lzo_compress_target done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:7f98648b74c61601699a8631efbca4b2673c7145b98569bc511831f2b8e91930
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:5c99d2de3f6131372a8e024ab9db2a645a5367afd4b0fbb0a4974bc9cf326e09
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/lzo_lzo_compress_target:latest
#3 sha256:f5ec9e9359a442a727946f3234dbfb899ed5b34bc9f541ece787396431ef4a09
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/lzo_lzo_compress_target
#5 sha256:5a0b540267164f01412c68661ee673b3502a28b875dc82df0f28757504417cb3
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target-intermediate
#4 sha256:0533b6d2c0d8819eeae0f115054effff180491b8dab752588b4f3559b76d007f
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:2b349f777ab5462b39ee4aa55ff0ce6af1271583ccedde0ce7e12ae8bba09714
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:d731994ca1364899ccdd43a6d1a0bf62adc2bd7f54e537a9a7bfeefb48e71c07
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:ed049d774220da89afd26559314c15ea4361ed4a4e86a9a4711efc67bdc962c6
#8 writing image sha256:ed049d774220da89afd26559314c15ea4361ed4a4e86a9a4711efc67bdc962c6 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target-intermediate done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:e7f57ca8349909984fbb37c87584bf9e95a903cd22518b721fd26d4fed6c4816
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:9e3420b7bd261dee782f6d578430d5dd2a99c8c65f546bbcd032026c13849ef9
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:3d6d7a598029f91b1059625291d9b53b01934805a0c1b2df0bd07244e3bcd315
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:0f3e1a4f82b45fda70818f4fba825d7273faeb4f402e12802df779938740e339
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:a0bcf3bf9dd331ab8557064fdeda307493c73bb7b7e77a725c7888589b049a89
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:35b7d3126223903907a85bd17bf2a0d6c13adf12d91261661b6ca1c1ae832896
#9 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:242ec6aa8da68ed50597ce7ce2110ee0243c0e240dad4ecc56af9d2c4142217d
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:5dc85c66b74f60d1770fb4d8a2f0cf89b872162f5c4ad8fde1e9774f9306976f
#13 writing image sha256:5dc85c66b74f60d1770fb4d8a2f0cf89b872162f5c4ad8fde1e9774f9306976f 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.2s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:b5df6ef9ffc1ef54f5e376b7e1fceb907e88d7a8e9f64e1d8ebfa39878abf75a
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:1adb91b4cfe651a465fd251b31b369cd4efd4a35861339280a226734161fa6a3
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target-intermediate:latest
#3 sha256:5b354102f9d5380fb85d8ba845e889176a82bfa2d1f5d6d962a6834fb5f2cb24
#3 DONE 0.0s

#20 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target
#20 sha256:e623f8feb5c1d5fcad8c18f4b4cdd912880b962ac9b31b70cc56dc1f1913934a
#20 DONE 0.0s

#6 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#6 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#6 DONE 0.0s

#5 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target-intermediate
#5 sha256:727babeddead958b31f63abd0b42ca9d6747b6f38c12a2997c1d3fcacd73fca6
#5 DONE 0.0s

#11 [internal] load build context
#11 sha256:80a1fe280af80e3c66ca6d163d643e1267e42972e0630bfd7d3eaf57c4179070
#11 transferring context: 669.89kB 0.1s done
#11 DONE 0.1s

#10 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#10 sha256:63aac8e984f0fffa57d1f946a38c876d1e5bca6333f6f8961643c4dc2734b1c6
#10 CACHED

#18 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#18 sha256:3c167173429f2018ed00d2a602be79fe91697c7a185eb8edf63c34859f496ee6
#18 CACHED

#9 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#9 sha256:8bfebcbdab8cbdfe718501416c25412cb66610f50b388d8c83a31a8f6211f4ab
#9 CACHED

#13 [stage-1  7/13] RUN touch /src/__init__.py
#13 sha256:45929b9ed5bfe897e6bb32177aa228c3388c3984e92963b2e0a2e559051022d0
#13 CACHED

#8 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#8 sha256:04f93d97e5ff833527f258b02953b459f2be482540faf490d5684d484700d69b
#8 CACHED

#14 [stage-1  8/13] COPY benchmarks/lzo_lzo_compress_target/benchmark.yaml /
#14 sha256:56527a0dedc969389d9e64dccf26c49471ec3a1f5426596831abe92ec02c3134
#14 CACHED

#12 [stage-1  6/13] COPY fuzzers /src/fuzzers
#12 sha256:b575b9092f7b0e1ebd26ea347b13e9187d0627253047726a7ef1e874daa09ce6
#12 CACHED

#16 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#16 sha256:f3a593aed588c37e0c026880cd3161e222979b80472279b0cc83dc2dd7a2af74
#16 CACHED

#15 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#15 sha256:7525970d249d82ded509cb45cd98add1cd5f48d41b08749620f0c5e006605840
#15 CACHED

#17 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#17 sha256:bbd74428f6924b7f7c476da6e38662c2d674bf3e7755bcc6d260f634b9f26ad1
#17 CACHED

#7 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#7 sha256:b9276b00dc7f5f9c077b8d983d4cfefa98cffe470e558323c92ca74e8414a744
#7 CACHED

#19 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#19 sha256:c0bb714455bc9c1450a7cc8ea4a91df7d8d80e4fd1ebc4c5f1b8dcd56874483b
#19 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:4a443ed240fe0b62cd14acadc0f37c46bd3363cc55918ba2a8029300e4d601cb
#21 writing image sha256:4a443ed240fe0b62cd14acadc0f37c46bd3363cc55918ba2a8029300e4d601cb done
#21 naming to gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:aa72f8c775dea5901b59b356931020685cbbf032c59198015d289038438f7a7b
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:18f9df5c78794ddd27e6552f031a06cf5ef07f2b13a13e2c1c43d7bcb004ce63
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target-intermediate
#4 sha256:984b8733a3f35ce35176e1ce91a09a5f427a5b9fe8ca96b7ce6c1186d62c7580
#4 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:460de8759a450eba6fbeb388ea7b433485c57144929f60f90d8fad3292e3a801
#6 writing image sha256:460de8759a450eba6fbeb388ea7b433485c57144929f60f90d8fad3292e3a801 done
#6 naming to gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:adc77424e2fd787fa761224f6d4a9686510f15eac2cbad73646f4fc1912c2898
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:0c75c5210449857ea4cb78e56a2d20827314bf2a693bfd4f8970399cee3d951c
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target-intermediate:latest
#3 sha256:97a36ef8d19d92615cc79cb6ac74ba707dd146f6388c452ffc1ff91cd0a8d3d8
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target:latest
#4 sha256:84a9e25f2b5b36df5f3ff113346521dd60880e2132124c5a01bd556f50a4a486
#4 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target-intermediate
#6 sha256:0437d568ce64fc268441b04623bc639bff417f46529de3b41c185553b25c0f8c
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target
#5 sha256:93da7dfefbae7c843951b953fb16a242ba95d46bf039ced3eaedb5ce466f0784
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_compress_target
#10 sha256:387dbceced38672d6a9002362988778094031314ff004ddf11344cc91db4e80e
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:2e2760f23d2518d0b794bb73bcc90cfd6412bc7b7c3551933838abc638fe27ae
#12 transferring context: 19.00MB 0.7s done
#12 DONE 0.7s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:367e39051dfb6b482485f12526fe4a90dbe6946270420c7f9ef0a997691b4357
#13 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:af47af11601c07c7462ec5a860aafbd31c5087d90aeda1f12e1f0096215d50a0
#19 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:403847561eb2f5388ecbceeb9828c7be277cb93ee5dc6a74a783f6098dba69b7
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:e87fcb9a37f42638bcb37e5e009373ec74d1bc169a1e5c40a555c4998c7a14a7
#11 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:58a141944e33d8e2be96dec1b9459e7dffd0b70c2699e6d70101409651751f3a
#14 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:15eeded7f5b31ddc710379f77828643e31c78401af064a4f850e5220a6424090
#18 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:b5148ee283555d98ff60be89d37cf6ef87e377a6782ca773ff9f61d814d94391
#8 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:5b2258fb0d58333d64fb99f315c592d27fa07d47d4d8343115ce7a8fb11306eb
#15 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:eec26aa3a06a9d73a3679fe088d803b45fdb0f2e5bf9131d30dbd57a01daf0d1
#7 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:4ea54b7dbf85b8959d75b4a17118b8b0c5c96ba9bc728e93595dbb0678e3083b
#16 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:5e3735ef3be44a745c8bfd948717996527964ab48ef1727e442f5d31c74bfee3
#17 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:cbb368675affc1ae5ae4045f797847e1859a0ecd82e8c18df44f34d5b1edf41c
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:eeb56d49e7bdcf2762acf1c1ac9fc17120ef36d489e0c42e88311fa689be71a4
#21 writing image sha256:eeb56d49e7bdcf2762acf1c1ac9fc17120ef36d489e0c42e88311fa689be71a4 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/lzo_lzo_compress_target done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Doing final sync.
