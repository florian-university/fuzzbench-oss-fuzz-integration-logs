WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: wavpack_wavpack.
INFO:root:Please run "make test-run-afl-wavpack_wavpack" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:dc59ad25e518ece617d3f1f1659434243ce63343c6699893e949c66bf7732b83
#1 transferring dockerfile: 32B done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:b40fbb7cfaa8dd1129b0818a02643c60e911866104fb58cc1ee02daf0f3fb9ac
#2 transferring context: 2B done
#2 DONE 0.4s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack
#4 sha256:59dc3870deb515f732a2b1758e2ecd5aa472d2c1068d5737010c1ddc11d80126
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack:latest: not found

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:e94c22665874d420ced0c3b871f4947e168d3bab9afd9b749baffcff0f8f695f
#6 CACHED

#7 [3/5] RUN git clone --depth 1 https://github.com/dbry/WavPack.git wavpack
#7 sha256:2cf011693086b8994539d64c64671aff32ff82b8d3c09ea22ce1f8491a1ae5db
#7 CACHED

#8 [4/5] RUN cp wavpack/fuzzing/build.sh /src
#8 sha256:9d167afa4282e8ed1e85fb0601f6014f77f1f7009a904d9389f21129e72ee69e
#8 CACHED

#9 [5/5] WORKDIR wavpack
#9 sha256:c89af2b87af59a67fdb54e298b6bbe7cd74249f9a48c0be90bd73710f5723225
#9 CACHED

#10 exporting to image
#10 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#10 exporting layers done
#10 writing image sha256:47f7aedee00b60ea69c099966cdad7c9212a85100ffc529a1c2623f77193cd5b 0.0s done
#10 naming to gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack 0.0s done
#10 DONE 0.4s

#11 exporting cache
#11 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#11 preparing build cache for export done
#11 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:1b2314e72d3fad26caafe20cb24ac1a8fbe775fea03a12714f6c0308bea5a653
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:8f7e5570c1e8971b195f927f1c4f92e866dbdf42c5f753c2fe221c84f28f07cf
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack:latest
#3 sha256:95d1858a9ccfc68daef92357e366b4c692b664944e3c32a6f15feac6c76ffe8d
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack
#5 sha256:b32b6a1ca9765fc0052b04283881f93bc36c3e0c2497cca30bc8c06c780e5f8f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate
#4 sha256:1413b91e7e4360516392750de94ab71f525f973430e80c1f77f3249c0d7b9f9f
#4 ERROR: gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate:latest: not found

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:8434bb9c97f8eaf152b377ba1cec65e9b5baffa9d4912e197177419cffaa8ce7
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:3f0f8874ac6c7436f91e1e4d21da9d821a936cf296405d4e2d4491096c13e00a
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:c343cd55f936b3d53346c7e3a435e7aba9483309ad705aa5417f4abfadb0f449
#8 writing image sha256:c343cd55f936b3d53346c7e3a435e7aba9483309ad705aa5417f4abfadb0f449 done
#8 naming to gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:0e083170af1bda9cc4ffbabc59e6a52fa294aa395b6bb63c02b7e6a5b71224f2
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:21d170fb9bbd97c64bc2d8ff475c9c9f6d14236d04bab175422632830b4961ff
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:873f2863850a721611307ab04551bac2a76587e7b9d13e4b2892cfe0bb6d1938
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:b4d5449b3ebe4e1b9a336fc9902a9ccd2343c7e5570527ffe1de2a8389d66019
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:b00064783e7c47f1a13d950de7d51c679bf33e7e8105d3ef6434884662d64be2
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:d574b6a4e9cf434ee1b3191d49ca3f1c02baa4a1e51860ec1865c516e8ff0546
#9 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:1652d20fb07979d13eaf2e2fbc94c9c0c212bf1e6f9bdda590aed07b60f9b0d4
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:b8dabdf020642b2fc9ec835dde6edb9900548609bfbd2a87b9101a44aa563091
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:f916cf61f573263e658b99a5e7986c4d7b0727fb45458071005f008f519f03a7
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate:latest
#3 sha256:64507a805cf2a57d95258a07576e25ad4f0fb90f4b5dcd73babf7702fd1ce42b
#3 DONE 0.0s

#20 importing cache manifest from gcr.io/fuzzbench/builders/afl/wavpack_wavpack
#20 sha256:9548840cb98875a2f1d16616df9ba240016006d3fb6fbddd54749c8e01a0050d
#20 ...

#5 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate
#5 sha256:1efd61360fff5cda447d58472a5726ea69db235771551ae4a7fa11b4360e402b
#5 DONE 0.0s

#11 [internal] load build context
#11 sha256:5e29901d136f89781ac1742290fd930d1c4da4fd113b7a6da1f480da7bcda77a
#11 DONE 0.0s

#6 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#6 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#6 DONE 0.0s

#20 importing cache manifest from gcr.io/fuzzbench/builders/afl/wavpack_wavpack
#20 sha256:9548840cb98875a2f1d16616df9ba240016006d3fb6fbddd54749c8e01a0050d
#20 ERROR: gcr.io/fuzzbench/builders/afl/wavpack_wavpack:latest: not found

#11 [internal] load build context
#11 sha256:5e29901d136f89781ac1742290fd930d1c4da4fd113b7a6da1f480da7bcda77a
#11 transferring context: 669.87kB 0.1s done
#11 DONE 0.2s

#10 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#10 sha256:9dcd4fc7500d0492fdbecbe21fb924f321b56a0092c15b82f05a94490aecac26
#10 CACHED

#12 [stage-1  6/13] COPY fuzzers /src/fuzzers
#12 sha256:68b8276d5a4444fdf7f90b035dd34ee18db9497b367bc04fdd9d24222722eb9e
#12 CACHED

#7 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#7 sha256:aaf676dff53c2626ce7cc0752650f4bff4fc5e18146db12808ef44f3163e91fa
#7 CACHED

#8 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#8 sha256:637ade824826bba449343b899b761b1714b30d5af7d51565003bb86e36186c7a
#8 CACHED

#9 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#9 sha256:01f562f1911e731ab37d601410e08b58fb40e6d3e30fe0a709e708390b218b04
#9 CACHED

#13 [stage-1  7/13] RUN touch /src/__init__.py
#13 sha256:cf814c509ad009bfd09dbdd9ed2cd7af846d706946c87099226f43eb659a10ce
#13 CACHED

#14 [stage-1  8/13] COPY benchmarks/wavpack_wavpack/benchmark.yaml /
#14 sha256:c63341e4ce1f84e1c5c34a7d1ffa2bd95a1f248af6afba6874664b55caeae144
#14 DONE 0.6s

#15 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#15 sha256:a40b73d2d9d14a935d7e1ffe5e5f69c5c986662f52b8a76f0a07073ae63e678c
#15 DONE 0.6s

#16 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#16 sha256:8a68a1f19b882d743e31d7d12569f416114c1050a03d89882c09fef4536f4845
#16 DONE 0.2s

#17 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#17 sha256:44d4ebb26ade577a8286d1dc67f19327fea48edab5f71a7f95d5045084907edc
#17 0.470 Checking out commit ce05d644
#17 3.262 From https://github.com/dbry/WavPack
#17 3.262  * [new tag]         4.70.0       -> 4.70.0
#17 3.262  * [new tag]         4.70.0-rc    -> 4.70.0-rc
#17 3.262  * [new tag]         4.75.0       -> 4.75.0
#17 3.263  * [new tag]         4.75.0-rc    -> 4.75.0-rc
#17 3.263  * [new tag]         4.75.2       -> 4.75.2
#17 3.263  * [new tag]         4.80.0       -> 4.80.0
#17 3.264  * [new tag]         4.80.0-rc    -> 4.80.0-rc
#17 3.264  * [new tag]         5.0.0        -> 5.0.0
#17 3.264  * [new tag]         5.0.0-alpha  -> 5.0.0-alpha
#17 3.265  * [new tag]         5.0.0-alpha2 -> 5.0.0-alpha2
#17 3.265  * [new tag]         5.0.0-alpha3 -> 5.0.0-alpha3
#17 3.265  * [new tag]         5.0.0-alpha4 -> 5.0.0-alpha4
#17 3.265  * [new tag]         5.0.0-alpha5 -> 5.0.0-alpha5
#17 3.266  * [new tag]         5.1.0        -> 5.1.0
#17 3.266  * [new tag]         5.2.0        -> 5.2.0
#17 3.266  * [new tag]         5.3.0        -> 5.3.0
#17 3.267  * [new tag]         5.4.0        -> 5.4.0
#17 3.273 error: pathspec 'ce05d644' did not match any file(s) known to git
#17 3.277 error: pathspec 'ce05d644' did not match any file(s) known to git
#17 3.285 error: pathspec 'ce05d644' did not match any file(s) known to git
#17 3.325 Checkout unsuccessful.
#17 DONE 3.6s

#18 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#18 sha256:13d0e3c6582369dfcdf9fd9e7f13eace65840985502c176d3c39adea7c21bd95
#18 DONE 0.8s

#19 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#19 sha256:7ec785fba38d1adc902edaee9a681e4a719dde552f392e75cc18a41af708d40a
#19 0.528 Run fuzzer_build to build the target
#19 0.640 FUZZ_TARGET = wavpack
#19 0.640 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#19 0.640 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#19 0.645 Building benchmark wavpack_wavpack with fuzzer afl
#19 0.648 + ./autogen.sh --disable-apps --disable-shared --enable-static
#19 0.984 autoreconf: Entering directory `.'
#19 0.985 autoreconf: configure.ac: not using Gettext
#19 1.986 autoreconf: running: aclocal 
#19 2.382 configure.ac:67: warning: macro 'AM_ICONV' not found in library
#19 2.927 autoreconf: configure.ac: tracing
#19 3.505 autoreconf: running: libtoolize --copy
#19 3.822 libtoolize: putting auxiliary files in '.'.
#19 3.822 libtoolize: copying file './ltmain.sh'
#19 4.061 libtoolize: Consider adding 'AC_CONFIG_MACRO_DIRS([m4])' to configure.ac,
#19 4.061 libtoolize: and rerunning libtoolize and aclocal.
#19 4.061 libtoolize: Consider adding '-I m4' to ACLOCAL_AMFLAGS in Makefile.am.
#19 4.460 configure.ac:67: warning: macro 'AM_ICONV' not found in library
#19 4.996 autoreconf: running: /usr/bin/autoconf
#19 5.455 configure.ac:67: error: possibly undefined macro: AM_ICONV
#19 5.455       If this token and others are legitimate, please use m4_pattern_allow.
#19 5.455       See the Autoconf documentation.
#19 5.458 autoreconf: /usr/bin/autoconf failed with exit status: 1
#19 5.462 Traceback (most recent call last):
#19 5.462   File "<string>", line 1, in <module>
#19 5.462   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#19 5.463     utils.build_benchmark()
#19 5.463   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#19 5.463     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#19 5.463   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#19 5.463     raise CalledProcessError(retcode, cmd)
#19 5.463 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#19 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/wavpack_wavpack:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2743872: .afl-wavpack_wavpack-builder] Error 1
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:aa74523efdbe9ca0e037cdee68e0590105fbc9788bed362fb5ebe265f6e15ebf
#2 transferring context: 2B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:27770d6704b8962df8ada4a389e354b13bb9a08c431000d9620eb85305ba8c24
#1 transferring dockerfile: 32B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack
#4 sha256:59dc3870deb515f732a2b1758e2ecd5aa472d2c1068d5737010c1ddc11d80126
#4 DONE 0.0s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:e94c22665874d420ced0c3b871f4947e168d3bab9afd9b749baffcff0f8f695f
#6 CACHED

#7 [3/5] RUN git clone --depth 1 https://github.com/dbry/WavPack.git wavpack
#7 sha256:2cf011693086b8994539d64c64671aff32ff82b8d3c09ea22ce1f8491a1ae5db
#7 CACHED

#8 [4/5] RUN cp wavpack/fuzzing/build.sh /src
#8 sha256:9d167afa4282e8ed1e85fb0601f6014f77f1f7009a904d9389f21129e72ee69e
#8 CACHED

#9 [5/5] WORKDIR wavpack
#9 sha256:c89af2b87af59a67fdb54e298b6bbe7cd74249f9a48c0be90bd73710f5723225
#9 CACHED

#10 exporting to image
#10 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#10 exporting layers done
#10 writing image sha256:47f7aedee00b60ea69c099966cdad7c9212a85100ffc529a1c2623f77193cd5b done
#10 naming to gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack done
#10 DONE 0.3s

#11 exporting cache
#11 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#11 preparing build cache for export done
#11 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:d68da71046efced94cb95ac34ec3138691dc3393e647d3a9f6ada6536d8713cb
#1 transferring dockerfile: 46B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:4f033d10ace37ae9b86d0ac6f1028db2bdaac466ec9805a82eae4ac086f91e6a
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack:latest
#3 sha256:95d1858a9ccfc68daef92357e366b4c692b664944e3c32a6f15feac6c76ffe8d
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/wavpack_wavpack
#5 sha256:b32b6a1ca9765fc0052b04283881f93bc36c3e0c2497cca30bc8c06c780e5f8f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate
#4 sha256:1413b91e7e4360516392750de94ab71f525f973430e80c1f77f3249c0d7b9f9f
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:8434bb9c97f8eaf152b377ba1cec65e9b5baffa9d4912e197177419cffaa8ce7
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:3f0f8874ac6c7436f91e1e4d21da9d821a936cf296405d4e2d4491096c13e00a
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:c343cd55f936b3d53346c7e3a435e7aba9483309ad705aa5417f4abfadb0f449 done
#8 naming to gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:62d32a682e95446bc610173b43d1fab2022e0ecc61bb7adb6667acf8c59c9cd9
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:865b3c4ea8c38d751711e7a498ff17e8947a33aa5edfd81acf8e540c7889b69c
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:dee9eb6352a102162c488c08921d2e6b23adcb98c3342e12d2147c19666cfd0d
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:74df41042123f38ad971c7f14edcc9c8e551a1fdf09351cc26f566327f906a11
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:c5e35bf5ad0af35593b5816931679762c0e09c59b9a2a18a22321e73fefc82f3
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:af86043f6128e9e9602d0db1e2b5b72972afb3c6166f177c0197e19b3d60bb09
#9 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:7fe8f1c3f64aa2e5fb7ae11fe7ee2b1c812750a5bd40f9a20c8e5c2f2f7f3203
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.2s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:664a2899c7d1f50ce42cbc1d80b214c17d22253324d11be6ec6275aeecd5e41a
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:47f316f399cb80caea173f6903c4babd6a0c02e04194f5f162f7bfc5ac88870f
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate:latest
#3 sha256:64507a805cf2a57d95258a07576e25ad4f0fb90f4b5dcd73babf7702fd1ce42b
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:2a0fcb31c07745abd3ddee850956e7655e14fb300d9d9a616293640dd78f460c
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/wavpack_wavpack-intermediate
#6 sha256:1efd61360fff5cda447d58472a5726ea69db235771551ae4a7fa11b4360e402b
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/wavpack_wavpack
#5 sha256:9548840cb98875a2f1d16616df9ba240016006d3fb6fbddd54749c8e01a0050d
#5 ERROR: gcr.io/fuzzbench/builders/afl/wavpack_wavpack:latest: not found

#12 [internal] load build context
#12 sha256:2a0fcb31c07745abd3ddee850956e7655e14fb300d9d9a616293640dd78f460c
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.2s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:aaf676dff53c2626ce7cc0752650f4bff4fc5e18146db12808ef44f3163e91fa
#8 CACHED

#15 [stage-1  8/13] COPY benchmarks/wavpack_wavpack/benchmark.yaml /
#15 sha256:7bf2c1dac39f32270a259413051c2b3e22ea88a4c5ccf7fd56104f9a70a2fab7
#15 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:637ade824826bba449343b899b761b1714b30d5af7d51565003bb86e36186c7a
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:01f562f1911e731ab37d601410e08b58fb40e6d3e30fe0a709e708390b218b04
#10 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:11acad1c02e5a9746ed32b43c2429377176109e641ee92708971fca8a49bb7e5
#13 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:e678f93decc0e6fbbbd72b8e688fd363e141cac3fd9b081875930ce468661e4e
#16 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:d6d25db17cb05cfeee17567fc7822d484a631dab490a6b5242788a8ed4293229
#14 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:d7ccb32223af1f3e62e70e68b7ef5b59c25a8e318f2b5b5ce7720f6fc9714aab
#18 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:9dcd4fc7500d0492fdbecbe21fb924f321b56a0092c15b82f05a94490aecac26
#11 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:002c8733a5aeda8a04881e69af5f31b20891d4562f656d11ae4dcc900ea66ad6
#17 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:8e98c6270ad0f81365c8e734fdb4df4179490e1eb1a6c478369f9e875566ee19
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:c73274aa2e36c7782071eedd94e5ad3e5c21249e0bb9e2ee01c219ec9c36fea3
#20 0.469 Run fuzzer_build to build the target
#20 0.579 FUZZ_TARGET = wavpack
#20 0.579 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.579 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.584 Building benchmark wavpack_wavpack with fuzzer afl
#20 0.587 + ./autogen.sh --disable-apps --disable-shared --enable-static
#20 0.937 autoreconf: Entering directory `.'
#20 0.939 autoreconf: configure.ac: not using Gettext
#20 1.939 autoreconf: running: aclocal 
#20 2.334 configure.ac:67: warning: macro 'AM_ICONV' not found in library
#20 2.877 autoreconf: configure.ac: tracing
#20 3.462 autoreconf: running: libtoolize --copy
#20 3.780 libtoolize: putting auxiliary files in '.'.
#20 3.780 libtoolize: copying file './ltmain.sh'
#20 4.021 libtoolize: Consider adding 'AC_CONFIG_MACRO_DIRS([m4])' to configure.ac,
#20 4.021 libtoolize: and rerunning libtoolize and aclocal.
#20 4.021 libtoolize: Consider adding '-I m4' to ACLOCAL_AMFLAGS in Makefile.am.
#20 4.425 configure.ac:67: warning: macro 'AM_ICONV' not found in library
#20 4.963 autoreconf: running: /usr/bin/autoconf
#20 5.868 configure.ac:67: error: possibly undefined macro: AM_ICONV
#20 5.868       If this token and others are legitimate, please use m4_pattern_allow.
#20 5.868       See the Autoconf documentation.
#20 5.871 autoreconf: /usr/bin/autoconf failed with exit status: 1
#20 5.875 Traceback (most recent call last):
#20 5.875   File "<string>", line 1, in <module>
#20 5.875   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 5.876     utils.build_benchmark()
#20 5.876   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 5.876     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 5.876   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 5.876     raise CalledProcessError(retcode, cmd)
#20 5.876 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/wavpack_wavpack:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2743872: .afl-wavpack_wavpack-builder] Error 1
