WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: nanopb_nanopb.
INFO:root:Please run "make test-run-afl-nanopb_nanopb" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:20ffa745119c47b83efdfb6aa9ed1a7bd2b7d731b61a7d74d93ebed904918f6f
#1 transferring dockerfile: 1.09kB done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:9c80fda6bcc8d19628ebceac03fe02ee0ee627678f42105ed9a52bd6f9215939
#2 transferring context: 2B done
#2 DONE 0.3s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#11 [internal] load build context
#11 sha256:be0609e668f79d4e7c29d2d439dcf633b933a1ca626235e4edd2bebdeb433491
#11 DONE 0.0s

#5 [1/7] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/nanopb_nanopb
#4 sha256:f352c03aeb9caf5f571d3ec72ed606ff31a643e0c9484e1c1800c533c1ad2e00
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/nanopb_nanopb:latest: not found

#6 [2/7] RUN apt-get update && apt-get install -y python3-pip git wget
#6 sha256:5cec3343c7b724861ba6173a08314beb2c09285f0c243bc9260531f1df5ed63c
#6 CACHED

#7 [3/7] RUN python3 -m pip install --upgrade pip
#7 sha256:4a6dd49ea65ff0285289d6aafd582ba6c3dbcece4077253de68aab5dd27de28f
#7 CACHED

#8 [4/7] RUN pip3 install protobuf grpcio-tools scons
#8 sha256:f16f8bb9175fc531de918623a00adb2e5f90385d44bf2caac08e623b722436e3
#8 CACHED

#11 [internal] load build context
#11 sha256:be0609e668f79d4e7c29d2d439dcf633b933a1ca626235e4edd2bebdeb433491
#11 transferring context: 1.85kB done
#11 DONE 0.1s

#9 [5/7] RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 100
#9 sha256:988b0a0e111ebadc69726437db47e3909d1e098b16b79a1a713ae465cfd186bc
#9 0.516 update-alternatives: using /usr/bin/python3 to provide /usr/bin/python (python) in auto mode
#9 DONE 1.0s

#10 [6/7] RUN git clone --depth 1 https://github.com/nanopb/nanopb /src/nanopb
#10 sha256:b03b51c4d35da1263ca671480e6cfdfce3242befa4a9f5cf71a24da94d43993b
#10 0.571 Cloning into '/src/nanopb'...
#10 DONE 1.9s

#12 [7/7] COPY build.sh /src/
#12 sha256:b4c8e2eff2e06fe79f1c876a563a733d5f59a12700481575fde6c0d3326629dc
#12 DONE 0.4s

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:908cb10031d8d32c0af3e3e17a285fecc800b0e03ff6a97a2e32dc4e669f4fda done
#13 naming to gcr.io/fuzzbench/builders/benchmark/nanopb_nanopb done
#13 DONE 0.2s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/nanopb_nanopb:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:2e015a93864f2d98ec16f67414a28012b76404092c6260bf478e25f4a27b8beb
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:2a8033c13a095a9233b0170708cdb76d9b266e098ea58dc7c11c7e73dba56904
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/nanopb_nanopb:latest
#3 sha256:2c8e342102f911cbd8017b533cc837d3c9ad0cac66c5e98085d7f38ecb4a64be
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/nanopb_nanopb
#5 sha256:72f2e24a38abd266bff84655eef677d5d84303924ff5cbbb9e3fd6e84533b7f2
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/nanopb_nanopb-intermediate
#4 sha256:d706ed2954b39918cdb867183021d0937845c0d8efb05f14f5e42c55c0ed13cb
#4 ERROR: gcr.io/fuzzbench/builders/afl/nanopb_nanopb-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/nanopb_nanopb
#5 sha256:72f2e24a38abd266bff84655eef677d5d84303924ff5cbbb9e3fd6e84533b7f2
#5 DONE 1.7s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:5c9c1a2733fee3a66eec769b1795dfa14a1951b18caf1b3c929bf24137135414
#6 0.465 Cloning into '/afl'...
#6 1.226 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.226 
#6 1.226 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.226 changes and commit them, and you can discard any commits you make in this
#6 1.226 state without impacting any branches by switching back to a branch.
#6 1.226 
#6 1.226 If you want to create a new branch to retain commits you create, you may
#6 1.226 do so (now or later) by using -c with the switch command. Example:
#6 1.226 
#6 1.226   git switch -c <new-branch-name>
#6 1.226 
#6 1.226 Or undo this operation with:
#6 1.226 
#6 1.226   git switch -
#6 1.226 
#6 1.226 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.226 
#6 1.226 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.243 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.244 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.421 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.426 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.795 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.113 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.540 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.686 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.078 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.313 ln -sf afl-as as
#6 5.315 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.317 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.319 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.0s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:ce94a18eaa0dc03f17062e72f5c09f60389f1c75b40728d4eb78583e04093b1d
#7 0.913 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.913 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.913 Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.913 Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 0.913 Get:5 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#7 1.838 Fetched 114 kB in 1s (100 kB/s)
#7 1.838 Reading package lists...
#7 3.558 Reading package lists...
#7 4.987 Building dependency tree...
#7 5.199 Reading state information...
#7 5.448 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.448 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 5.511 --2022-02-18 07:44:31--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.513 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.111.133, ...
#7 5.515 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.
#7 5.537 HTTP request sent, awaiting response... 200 OK
#7 5.559 Length: 9177 (9.0K) [text/plain]
#7 5.559 Saving to: '/afl/afl_driver.cpp'
#7 5.560 
#7 5.560      0K ........                                              100% 10.4M=0.001s
#7 5.560 
#7 5.560 2022-02-18 07:44:31 (10.4 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.560 
#7 7.325 ar: creating /libAFL.a
#7 DONE 7.6s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:7dd6d4bd4831a07e409f219a9e207cb47c636183133728a184c646df72321daf done
#8 naming to gcr.io/fuzzbench/builders/afl/nanopb_nanopb-intermediate 0.0s done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/nanopb_nanopb-intermediate:
------
#2 [internal] load .dockerignore
#2 sha256:2a4bf5ef8b171aa6d1c3829b7832a7e1708fc82cc5d6c7a9276eac3456c22921
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:033271bc001d46eead5d22822e9ff9f87bac40445d72faa407e7a4d07ee5296c
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:e071dd57e5913628a793df1ddd146cd1b63bcc8386a1ba6f3e2309f90f0fb424
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:12103784b1cdc3a75a560a920439c15a252cba132b0de6d52151fb72618a2f74
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:0f0a4a97421b4e4e45c08b0e8e9eb1d9fd4a332b128fa631f7736ae698de5208
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:be8d4b3f85d235f16639ec257b68486f2d511c84288b07bb60e0f4f39f29cca5
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:753ab8f3a18e4d479e9a5485ab4b34a4129049318077e06da3b5d77e5cea3a90
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:7c312afc0c92be055a6e596de5bde5bb2ff79522f51f5d5c5b849c01586f4ff7
#13 writing image sha256:7c312afc0c92be055a6e596de5bde5bb2ff79522f51f5d5c5b849c01586f4ff7 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:5a721504b67c2ccad7b69e140c7bb3405ad9d6a5c20e9e774021b455508c8191
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:cc956b23396664a4bc00f91628eec4b70dd5b270f83cf03fb7bec5cccb38ede7
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/nanopb_nanopb-intermediate:latest
#3 sha256:300d65f70f8339611dc8f033ef48723b9b2e6ff6edc2406e08392683461af5c3
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:30e36d11dc45c77c2be7b13702f92d8e7576c6ec7e03347235aacfd3102daa3d
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/nanopb_nanopb-intermediate
#6 sha256:281552ea56dd0435597902f7c080789acaa6473e0c5c7576f2919edf65d60826
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/nanopb_nanopb
#5 sha256:51b97ef322b61cb67d1de4b74beb902ca6425dd77047aba81bb69e0bcb45473d
#5 ERROR: gcr.io/fuzzbench/builders/afl/nanopb_nanopb:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:30e36d11dc45c77c2be7b13702f92d8e7576c6ec7e03347235aacfd3102daa3d
#12 transferring context: 669.86kB 0.1s done
#12 DONE 0.8s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/nanopb_nanopb-intermediate
#6 sha256:281552ea56dd0435597902f7c080789acaa6473e0c5c7576f2919edf65d60826
#6 DONE 1.5s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:169eeada27970ed9d01c115d4e7867b5565465034f997a4fb331eb578ba96fa7
#8 DONE 0.7s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:a4ca8025d09bc197c3db025d48619de8d8674e1443fbbfbdd8f423095a485641
#9 DONE 18.3s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:f33c36dfdb0399f35d73a77235a9c80732b06675cd1d21765a7c138764959498
#10 DONE 0.3s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:4fd45452f5422ee464f1e429bfd647972578f683bf5379462685e11697c3d34c
#11 DONE 33.0s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:4ee852b4b2e7d2bbbab52cfb1ccc6c747bdfb69e3c4ead9d05a3a6428b6304ab
#13 DONE 2.3s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:f716a6cda0d1d2f31fbc152a8cc5a9e8d59d700b0aa7c5f776c4a748d77d1579
#14 DONE 1.2s

#15 [stage-1  8/13] COPY benchmarks/nanopb_nanopb/benchmark.yaml /
#15 sha256:bd8d91553f2bd5c39271b1d9f00b4c97f3ab6d80718caed4e1f8145969dfbb30
#15 DONE 0.4s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:b27b060ee4bbde360884807e88b4f361ec1f1def1b1a156e6e72cd79534ca59d
#16 DONE 0.7s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:bfcc970956b31994814bc69f684c4298573e6d03e9779f3e73a89bcab77e4458
#17 DONE 0.5s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:68c8eecc0de97e196dd1620fcdb409efe7e9a4569419115ea05b37434e19b944
#18 0.745 Checking out commit e0613217
#18 2.982 From https://github.com/nanopb/nanopb
#18 2.982  * [new tag]         0.3.6            -> 0.3.6
#18 2.982  * [new tag]         0.3.7            -> 0.3.7
#18 2.983  * [new tag]         0.3.8            -> 0.3.8
#18 2.983  * [new tag]         0.3.9            -> 0.3.9
#18 2.983  * [new tag]         0.3.9.2          -> 0.3.9.2
#18 2.983  * [new tag]         0.4.0            -> 0.4.0
#18 2.984  * [new tag]         0.4.1            -> 0.4.1
#18 2.984  * [new tag]         0.4.2            -> 0.4.2
#18 2.984  * [new tag]         0.4.3            -> 0.4.3
#18 2.984  * [new tag]         0.4.4            -> 0.4.4
#18 2.985  * [new tag]         0.4.5            -> 0.4.5
#18 2.985  * [new tag]         nanopb-0.1.0     -> nanopb-0.1.0
#18 2.985  * [new tag]         nanopb-0.1.1     -> nanopb-0.1.1
#18 2.985  * [new tag]         nanopb-0.1.2     -> nanopb-0.1.2
#18 2.986  * [new tag]         nanopb-0.1.3     -> nanopb-0.1.3
#18 2.986  * [new tag]         nanopb-0.1.4     -> nanopb-0.1.4
#18 2.986  * [new tag]         nanopb-0.1.5     -> nanopb-0.1.5
#18 2.986  * [new tag]         nanopb-0.1.6     -> nanopb-0.1.6
#18 2.987  * [new tag]         nanopb-0.1.7     -> nanopb-0.1.7
#18 2.987  * [new tag]         nanopb-0.1.8     -> nanopb-0.1.8
#18 2.987  * [new tag]         nanopb-0.1.9     -> nanopb-0.1.9
#18 2.987  * [new tag]         nanopb-0.2.0     -> nanopb-0.2.0
#18 2.988  * [new tag]         nanopb-0.2.1     -> nanopb-0.2.1
#18 2.988  * [new tag]         nanopb-0.2.2     -> nanopb-0.2.2
#18 2.988  * [new tag]         nanopb-0.2.3     -> nanopb-0.2.3
#18 2.988  * [new tag]         nanopb-0.2.4     -> nanopb-0.2.4
#18 2.989  * [new tag]         nanopb-0.2.5     -> nanopb-0.2.5
#18 2.989  * [new tag]         nanopb-0.2.6     -> nanopb-0.2.6
#18 2.989  * [new tag]         nanopb-0.2.7     -> nanopb-0.2.7
#18 2.989  * [new tag]         nanopb-0.2.8     -> nanopb-0.2.8
#18 2.990  * [new tag]         nanopb-0.2.9     -> nanopb-0.2.9
#18 2.990  * [new tag]         nanopb-0.3.0     -> nanopb-0.3.0
#18 2.990  * [new tag]         nanopb-0.3.1     -> nanopb-0.3.1
#18 2.991  * [new tag]         nanopb-0.3.2     -> nanopb-0.3.2
#18 2.991  * [new tag]         nanopb-0.3.3     -> nanopb-0.3.3
#18 2.991  * [new tag]         nanopb-0.3.4     -> nanopb-0.3.4
#18 2.991  * [new tag]         nanopb-0.3.5     -> nanopb-0.3.5
#18 2.991  * [new tag]         nanopb-0.3.6     -> nanopb-0.3.6
#18 2.992  * [new tag]         nanopb-0.3.7     -> nanopb-0.3.7
#18 2.992  * [new tag]         nanopb-0.3.8     -> nanopb-0.3.8
#18 2.992  * [new tag]         nanopb-0.3.9     -> nanopb-0.3.9
#18 2.993  * [new tag]         nanopb-0.3.9.2   -> nanopb-0.3.9.2
#18 2.993  * [new tag]         nanopb-0.4.0     -> nanopb-0.4.0
#18 2.993  * [new tag]         nanopb-0.4.0-dev -> nanopb-0.4.0-dev
#18 2.993  * [new tag]         nanopb-0.4.1     -> nanopb-0.4.1
#18 2.994  * [new tag]         nanopb-0.4.2     -> nanopb-0.4.2
#18 2.994  * [new tag]         nanopb-0.4.3     -> nanopb-0.4.3
#18 2.994  * [new tag]         nanopb-0.4.4     -> nanopb-0.4.4
#18 2.995  * [new tag]         nanopb-0.4.5     -> nanopb-0.4.5
#18 3.002 error: pathspec 'e0613217' did not match any file(s) known to git
#18 3.014 error: pathspec 'e0613217' did not match any file(s) known to git
#18 3.021 error: pathspec 'e0613217' did not match any file(s) known to git
#18 3.058 error: pathspec 'e0613217' did not match any file(s) known to git
#18 3.090 Checkout unsuccessful.
#18 DONE 3.4s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:3dc169c9dac6227986c0742ff9fb66e7af8a691bf955a55170b9e70edc2407c1
#19 DONE 1.2s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:7748dd147685c24ec50fec5803bbb02d993ba17b0cb1ed925d7806c1cd2c3311
#20 0.629 Run fuzzer_build to build the target
#20 0.749 FUZZ_TARGET = nanopb
#20 0.749 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.749 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.762 Building benchmark nanopb_nanopb with fuzzer afl
#20 0.766 + cd /src/nanopb/tests
#20 0.766 + rm -rf build
#20 0.767 + scons build/alltypes/encode_alltypes build/fuzztest/generate_message
#20 0.950 scons: Reading SConscript files ...
#20 1.095 Mkdir("build")
#20 1.115 Checking for C header file stdbool.h... yes
#20 1.170 Checking for C header file stdint.h... yes
#20 1.210 Checking for C header file stddef.h... yes
#20 1.251 Checking for C header file string.h... yes
#20 1.292 Checking for C header file stdlib.h... yes
#20 1.340 Checking for C header file limits.h... yes
#20 1.380 Checking protoc version... error: 
#20 1.788 Checking for C library mudflap... no
#20 1.870 Checking support for CCFLAGS="-Wcast-qual -Wlogical-op -Wconversion -fstrict-aliasing -Wstrict-aliasing=1 -Wmissing-prototypes -Wmissing-declarations -Wredundant-decls -Wstack-protector "... yes
#20 2.346 Checking whether the C++ compiler works... yes
#20 2.400 Checking for C++ header file vector... yes
#20 2.594 Checking whether the C++ compiler works... yes
#20 2.640 Checking for C++ header file vector... yes
#20 2.834 Checking whether the C++ compiler works... yes
#20 2.881 Checking for C++ header file vector... yes
#20 3.094 Checking whether the C++ compiler works... no
#20 3.114 Skipping c++20 test - compiler doesn't support it
#20 3.162 Checking whether the C++ compiler works... yes
#20 3.216 Checking whether the C++ compiler works... yes
#20 3.270 Checking whether the C++ compiler works... yes
#20 3.324 Checking whether the C++ compiler works... yes
#20 3.381 Checking whether the C++ compiler works... no
#20 3.402 Skipping c++20 test - compiler doesn't support it
#20 5.309 scons: done reading SConscript files.
#20 5.309 scons: Building targets ...
#20 5.387 os.chdir('build/alltypes')
#20 5.387 "/src/nanopb/generator/protoc" -I. -I"../.." -I"/src/nanopb/generator/proto" -I"/src/nanopb/generator" --nanopb_out=--source-extension=.c,--header-extension=.h:. "alltypes.proto"
#20 5.701 
#20 5.701          *************************************************************
#20 5.701          *** Could not import the Google protobuf Python libraries ***
#20 5.701          *** Try installing package 'python3-protobuf' or similar.  ***
#20 5.701          *************************************************************
#20 5.701     
#20 5.701 Traceback (most recent call last):
#20 5.701   File "/src/nanopb/generator/protoc", line 6, in <module>
#20 5.701     from nanopb_generator import invoke_protoc
#20 5.701   File "/src/nanopb/generator/nanopb_generator.py", line 36, in <module>
#20 5.701     import google.protobuf.text_format as text_format
#20 5.701   File "/usr/local/lib/python3.8/site-packages/google/protobuf/text_format.py", line 53, in <module>
#20 5.701     from google.protobuf.internal import type_checkers
#20 5.701   File "/usr/local/lib/python3.8/site-packages/google/protobuf/internal/type_checkers.py", line 48, in <module>
#20 5.701     import ctypes
#20 5.701   File "/usr/local/lib/python3.8/ctypes/__init__.py", line 7, in <module>
#20 5.701     from _ctypes import Union, Structure, Array
#20 5.701 ImportError: libffi.so.6: cannot open shared object file: No such file or directory
#20 5.717 os.chdir('/src/nanopb/tests')
#20 5.717 scons: *** [build/alltypes/alltypes.pb.c] Error 1
#20 5.717 scons: building terminated because of errors.
#20 5.787 Traceback (most recent call last):
#20 5.787   File "<string>", line 1, in <module>
#20 5.788   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 5.788     utils.build_benchmark()
#20 5.788   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 5.788     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 5.788   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 5.789     raise CalledProcessError(retcode, cmd)
#20 5.789 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 2.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/nanopb_nanopb:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2846467: .afl-nanopb_nanopb-builder] Error 1
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:f5f24138edcc995b2a8c6cba6142670d6f42089ae05b797de9fdb769acf4aef6
#1 transferring dockerfile: 32B done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:8a22d589b6d979ff21b9ce05079ed3cced0ee9d80972af6e451c3d9f98fd4974
#2 transferring context: 2B done
#2 DONE 0.3s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.7s

#5 [1/7] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/nanopb_nanopb
#4 sha256:f352c03aeb9caf5f571d3ec72ed606ff31a643e0c9484e1c1800c533c1ad2e00
#4 DONE 0.0s

#11 [internal] load build context
#11 sha256:5c06f1bbf9c4ba4188c4a8096999de24ad42ef86b28bef03891bde0512327238
#11 transferring context: 30B done
#11 DONE 0.3s

#6 [2/7] RUN apt-get update && apt-get install -y python3-pip git wget
#6 sha256:5cec3343c7b724861ba6173a08314beb2c09285f0c243bc9260531f1df5ed63c
#6 CACHED

#7 [3/7] RUN python3 -m pip install --upgrade pip
#7 sha256:4a6dd49ea65ff0285289d6aafd582ba6c3dbcece4077253de68aab5dd27de28f
#7 CACHED

#8 [4/7] RUN pip3 install protobuf grpcio-tools scons
#8 sha256:f16f8bb9175fc531de918623a00adb2e5f90385d44bf2caac08e623b722436e3
#8 CACHED

#9 [5/7] RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 100
#9 sha256:988b0a0e111ebadc69726437db47e3909d1e098b16b79a1a713ae465cfd186bc
#9 CACHED

#10 [6/7] RUN git clone --depth 1 https://github.com/nanopb/nanopb /src/nanopb
#10 sha256:b03b51c4d35da1263ca671480e6cfdfce3242befa4a9f5cf71a24da94d43993b
#10 CACHED

#12 [7/7] COPY build.sh /src/
#12 sha256:4c3718c49473f557d991910ecfeec5a0463b530b93b6283d17352d57aa932e3e
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:908cb10031d8d32c0af3e3e17a285fecc800b0e03ff6a97a2e32dc4e669f4fda 0.0s done
#13 naming to gcr.io/fuzzbench/builders/benchmark/nanopb_nanopb done
#13 DONE 0.6s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:c4035ccb883cf9d18c5f988121471e9185c2e3fb0bf669a55a55782cccb47fcb
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:3f1fc28cbf62333dcb82f40aeb6088e65d4c7db8a3422ef6264f5d9a6865069f
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/nanopb_nanopb:latest
#3 sha256:2c8e342102f911cbd8017b533cc837d3c9ad0cac66c5e98085d7f38ecb4a64be
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/nanopb_nanopb
#5 sha256:72f2e24a38abd266bff84655eef677d5d84303924ff5cbbb9e3fd6e84533b7f2
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/nanopb_nanopb-intermediate
#4 sha256:d706ed2954b39918cdb867183021d0937845c0d8efb05f14f5e42c55c0ed13cb
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:5c9c1a2733fee3a66eec769b1795dfa14a1951b18caf1b3c929bf24137135414
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:ce94a18eaa0dc03f17062e72f5c09f60389f1c75b40728d4eb78583e04093b1d
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:7dd6d4bd4831a07e409f219a9e207cb47c636183133728a184c646df72321daf 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/nanopb_nanopb-intermediate done
#8 DONE 0.5s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:44848531148ae18c68264da047975252152ad44d5a9458ac32ee52450feef881
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:ae4192cf952b18dfea7a85ee496eb6dbca442d3ee38cfa7379e4c319e00845ea
#2 transferring context: 34B done
#2 DONE 0.3s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:b2b0617bfec921191e829ee0b92ea66a3401ca3994934270ddf675f632f19c54
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:fd2b5fec949e2ef2f8761be1d424173bd0a50958f9b6180742bf3ee201a5fe77
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:96dbb3a1b3abe54af61ba51d78a7e8acbd3d68735ab5a3b1fad035b371ad8bae
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:331303caa33a2f93ea4623c7b0828dec574bd7ebb40a507911527beb7d3c4bab
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:6d92cbde33813ae871fa64da5604e5344df6ecdf2556ea9f84bfe4bb3345a350
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:7c312afc0c92be055a6e596de5bde5bb2ff79522f51f5d5c5b849c01586f4ff7
#13 writing image sha256:7c312afc0c92be055a6e596de5bde5bb2ff79522f51f5d5c5b849c01586f4ff7 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:7e4cd2cbeb51feb6682e495736be33e7de69c172abfdbd6e5aece7b82fa71bc3
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:62cd8293cd053b806d6b2fca205da2e521bb1145b62eaf296f513eb8cbc7256e
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/nanopb_nanopb-intermediate:latest
#3 sha256:300d65f70f8339611dc8f033ef48723b9b2e6ff6edc2406e08392683461af5c3
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/nanopb_nanopb
#5 sha256:51b97ef322b61cb67d1de4b74beb902ca6425dd77047aba81bb69e0bcb45473d
#5 ...

#12 [internal] load build context
#12 sha256:54dbf0dd758f4bed6b419c8c04d976d5653426b9e4bb298e6e8d3b58e5da73fc
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/nanopb_nanopb-intermediate
#6 sha256:281552ea56dd0435597902f7c080789acaa6473e0c5c7576f2919edf65d60826
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/nanopb_nanopb
#5 sha256:51b97ef322b61cb67d1de4b74beb902ca6425dd77047aba81bb69e0bcb45473d
#5 ERROR: gcr.io/fuzzbench/builders/afl/nanopb_nanopb:latest: not found

#12 [internal] load build context
#12 sha256:54dbf0dd758f4bed6b419c8c04d976d5653426b9e4bb298e6e8d3b58e5da73fc
#12 transferring context: 669.86kB 0.1s done
#12 DONE 0.2s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:6b15792789f616ca9d6f51093679d94b73f72fbd06a5d9d7c5b69aae2ee30a48
#16 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:f33c36dfdb0399f35d73a77235a9c80732b06675cd1d21765a7c138764959498
#10 CACHED

#15 [stage-1  8/13] COPY benchmarks/nanopb_nanopb/benchmark.yaml /
#15 sha256:ad5d0f16c7b1855ca52944a4590e692c5773906948ab0319aafdd8e96ee1ecb6
#15 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:fad26362a63f5371ad28d0fcfaf62a69c2e5be48bedcf9a3deb55ad446213fb1
#13 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:890b34fe5c7e6c2e00cad3869a05e31a7367dff58cce45e6bae6c76305600b66
#18 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:4fd45452f5422ee464f1e429bfd647972578f683bf5379462685e11697c3d34c
#11 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:3554901fb270bf7b899d21b6131659faf7d79208b6da09b5fa298a2b249ecd54
#14 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:8e3f41499c79bfab2b3cbc72020f966500bcda8e3c6f38a3e932a9ad35363612
#17 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:a4ca8025d09bc197c3db025d48619de8d8674e1443fbbfbdd8f423095a485641
#9 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:169eeada27970ed9d01c115d4e7867b5565465034f997a4fb331eb578ba96fa7
#8 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:7bfaa2f762b8e11913758fa4c42e650ab289e301a8bb259116ebc4bc97021a20
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:b3c300e41e106216270b1ba2e1e5f6d62484eb091009f69cd49dd877884a9b0a
#20 0.599 Run fuzzer_build to build the target
#20 0.714 FUZZ_TARGET = nanopb
#20 0.714 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.714 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.719 Building benchmark nanopb_nanopb with fuzzer afl
#20 0.723 + cd /src/nanopb/tests
#20 0.723 + rm -rf build
#20 0.724 + scons build/alltypes/encode_alltypes build/fuzztest/generate_message
#20 0.892 scons: Reading SConscript files ...
#20 1.014 Mkdir("build")
#20 1.027 Checking for C header file stdbool.h... yes
#20 1.069 Checking for C header file stdint.h... yes
#20 1.112 Checking for C header file stddef.h... yes
#20 1.150 Checking for C header file string.h... yes
#20 1.192 Checking for C header file stdlib.h... yes
#20 1.240 Checking for C header file limits.h... yes
#20 1.279 Checking protoc version... error: 
#20 1.667 Checking for C library mudflap... no
#20 1.745 Checking support for CCFLAGS="-Wcast-qual -Wlogical-op -Wconversion -fstrict-aliasing -Wstrict-aliasing=1 -Wmissing-prototypes -Wmissing-declarations -Wredundant-decls -Wstack-protector "... yes
#20 2.454 Checking whether the C++ compiler works... yes
#20 2.505 Checking for C++ header file vector... yes
#20 2.692 Checking whether the C++ compiler works... yes
#20 2.738 Checking for C++ header file vector... yes
#20 2.930 Checking whether the C++ compiler works... yes
#20 2.976 Checking for C++ header file vector... yes
#20 3.184 Checking whether the C++ compiler works... no
#20 3.202 Skipping c++20 test - compiler doesn't support it
#20 3.231 Checking whether the C++ compiler works... yes
#20 3.286 Checking whether the C++ compiler works... yes
#20 3.341 Checking whether the C++ compiler works... yes
#20 3.394 Checking whether the C++ compiler works... yes
#20 3.442 Checking whether the C++ compiler works... no
#20 3.464 Skipping c++20 test - compiler doesn't support it
#20 6.139 scons: done reading SConscript files.
#20 6.139 scons: Building targets ...
#20 6.216 os.chdir('build/alltypes')
#20 6.216 "/src/nanopb/generator/protoc" -I. -I"../.." -I"/src/nanopb/generator/proto" -I"/src/nanopb/generator" --nanopb_out=--source-extension=.c,--header-extension=.h:. "alltypes.proto"
#20 6.528 
#20 6.528          *************************************************************
#20 6.528          *** Could not import the Google protobuf Python libraries ***
#20 6.528          *** Try installing package 'python3-protobuf' or similar.  ***
#20 6.528          *************************************************************
#20 6.528     
#20 6.529 Traceback (most recent call last):
#20 6.529   File "/src/nanopb/generator/protoc", line 6, in <module>
#20 6.529     from nanopb_generator import invoke_protoc
#20 6.529   File "/src/nanopb/generator/nanopb_generator.py", line 36, in <module>
#20 6.529     import google.protobuf.text_format as text_format
#20 6.529   File "/usr/local/lib/python3.8/site-packages/google/protobuf/text_format.py", line 53, in <module>
#20 6.529     from google.protobuf.internal import type_checkers
#20 6.529   File "/usr/local/lib/python3.8/site-packages/google/protobuf/internal/type_checkers.py", line 48, in <module>
#20 6.529     import ctypes
#20 6.529   File "/usr/local/lib/python3.8/ctypes/__init__.py", line 7, in <module>
#20 6.529     from _ctypes import Union, Structure, Array
#20 6.529 ImportError: libffi.so.6: cannot open shared object file: No such file or directory
#20 6.546 os.chdir('/src/nanopb/tests')
#20 6.546 scons: *** [build/alltypes/alltypes.pb.c] Error 1
#20 6.547 scons: building terminated because of errors.
#20 6.616 Traceback (most recent call last):
#20 6.616   File "<string>", line 1, in <module>
#20 6.616   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 6.617     utils.build_benchmark()
#20 6.617   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 6.617     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 6.617   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 6.617     raise CalledProcessError(retcode, cmd)
#20 6.617 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 2.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/nanopb_nanopb:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2846467: .afl-nanopb_nanopb-builder] Error 1
