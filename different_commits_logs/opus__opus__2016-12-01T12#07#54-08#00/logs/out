WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: opus_opus.
INFO:root:Please run "make test-run-afl-opus_opus" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:5584da8f54ab5ab650bf7e55f3cd34ca70b742ecc6cc256a2c4ef18924c7eaa4
#1 transferring dockerfile: 992B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:09c0a9afec2b32ad46fe6aa926c231984d6eb14f2a222b36e16fbf0029149126
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.3s

#10 [internal] load build context
#10 sha256:9887bf1b3a3a20b9605ebad5f3e703dfd773211de1ae1270eda453026960637f
#10 DONE 0.0s

#5 [1/7] FROM gcr.io/oss-fuzz-base/base-builder@sha256:f4e5ea12494fab091c5d830cf803b3421f2860f729b9d1b07da44924396cf8cf
#5 sha256:ef290950573a2779ee526af357b28fbddfc20d7409aa51f58f777c9e972cba29
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/opus_opus
#4 sha256:419f080ca1bc4f38b4fb1856ca18f33747fbd5985c201e6e3d2daf1c901db986
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/opus_opus:latest: not found

#6 [2/7] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#6 sha256:5105b70670ffd051b8883c33b3686d6c1245811bcf75b95a95fa1ff10043da9f
#6 CACHED

#10 [internal] load build context
#10 sha256:9887bf1b3a3a20b9605ebad5f3e703dfd773211de1ae1270eda453026960637f
#10 transferring context: 4.69kB done
#10 DONE 0.0s

#7 [3/7] RUN git clone https://gitlab.xiph.org/xiph/opus.git
#7 sha256:0d801ef68f8ce2b29496ae60b879e3e15321e72b70538abe6c9b289a8e55bd69
#7 0.363 Cloning into 'opus'...
#7 DONE 4.6s

#8 [4/7] RUN wget https://opus-codec.org/static/testvectors/opus_testvectors.tar.gz
#8 sha256:c0c8237ef8133eff5506bc402f3cc7c0f21ed70fa9beeab925deb6c9fd7033b7
#8 0.428 --2022-02-15 15:49:48--  https://opus-codec.org/static/testvectors/opus_testvectors.tar.gz
#8 0.431 Resolving opus-codec.org (opus-codec.org)... 140.211.166.31, 2001:470:eb26:42::1
#8 1.104 Connecting to opus-codec.org (opus-codec.org)|140.211.166.31|:443... connected.
#8 1.447 HTTP request sent, awaiting response... 200 OK
#8 1.954 Length: 39001148 (37M) [application/octet-stream]
#8 1.954 Saving to: 'opus_testvectors.tar.gz'
#8 1.954 
#8 1.954      0K .......... .......... .......... .......... ..........  0%  294K 2m9s
#8 2.124     50K .......... .......... .......... .......... ..........  0%  297K 2m8s
#8 2.292    100K .......... .......... .......... .......... ..........  0% 12.8M 86s
#8 2.296    150K .......... .......... .......... .......... ..........  0% 13.6M 65s
#8 2.300    200K .......... .......... .......... .......... ..........  0%  305K 77s
#8 2.463    250K .......... .......... .......... .......... ..........  0% 13.2M 65s
#8 2.467    300K .......... .......... .......... .......... ..........  0% 13.6M 56s
#8 2.471    350K .......... .......... .......... .......... ..........  1% 10.3M 49s
#8 2.476    400K .......... .......... .......... .......... ..........  1%  322K 57s
#8 2.631    450K .......... .......... .......... .......... ..........  1% 13.8M 51s
#8 2.634    500K .......... .......... .......... .......... ..........  1% 13.6M 47s
#8 2.638    550K .......... .......... .......... .......... ..........  1% 13.3M 43s
#8 2.641    600K .......... .......... .......... .......... ..........  1% 13.5M 40s
#8 2.645    650K .......... .......... .......... .......... ..........  1% 12.7M 37s
#8 2.649    700K .......... .......... .......... .......... ..........  1% 13.8M 35s
#8 2.652    750K .......... .......... .......... .......... ..........  2% 10.1M 33s
#8 2.657    800K .......... .......... .......... .......... ..........  2% 12.8M 31s
#8 2.661    850K .......... .......... .......... .......... ..........  2%  362K 35s
#8 2.799    900K .......... .......... .......... .......... ..........  2% 13.9M 33s
#8 2.803    950K .......... .......... .......... .......... ..........  2% 13.6M 32s
#8 2.806   1000K .......... .......... .......... .......... ..........  2% 14.9M 30s
#8 2.810   1050K .......... .......... .......... .......... ..........  2% 12.6M 29s
#8 2.813   1100K .......... .......... .......... .......... ..........  3% 13.5M 28s
#8 2.817   1150K .......... .......... .......... .......... ..........  3% 10.2M 27s
#8 2.822   1200K .......... .......... .......... .......... ..........  3% 12.8M 26s
#8 2.826   1250K .......... .......... .......... .......... ..........  3% 13.7M 25s
#8 2.829   1300K .......... .......... .......... .......... ..........  3% 14.7M 24s
#8 2.833   1350K .......... .......... .......... .......... ..........  3% 12.4M 23s
#8 2.836   1400K .......... .......... .......... .......... ..........  3% 14.9M 22s
#8 2.840   1450K .......... .......... .......... .......... ..........  3% 11.6M 22s
#8 2.844   1500K .......... .......... .......... .......... ..........  4% 14.7M 21s
#8 2.847   1550K .......... .......... .......... .......... ..........  4% 9.51M 20s
#8 2.852   1600K .......... .......... .......... .......... ..........  4% 13.6M 20s
#8 2.856   1650K .......... .......... .......... .......... ..........  4% 13.7M 19s
#8 2.860   1700K .......... .......... .......... .......... ..........  4% 12.9M 19s
#8 2.863   1750K .......... .......... .......... .......... ..........  4%  479K 20s
#8 2.968   1800K .......... .......... .......... .......... ..........  4% 12.8M 20s
#8 2.972   1850K .......... .......... .......... .......... ..........  4% 13.1M 19s
#8 2.975   1900K .......... .......... .......... .......... ..........  5% 14.1M 19s
#8 2.979   1950K .......... .......... .......... .......... ..........  5% 10.0M 19s
#8 2.984   2000K .......... .......... .......... .......... ..........  5% 13.9M 18s
#8 2.987   2050K .......... .......... .......... .......... ..........  5% 13.3M 18s
#8 2.991   2100K .......... .......... .......... .......... ..........  5% 13.4M 17s
#8 2.995   2150K .......... .......... .......... .......... ..........  5% 13.2M 17s
#8 2.998   2200K .......... .......... .......... .......... ..........  5% 13.6M 17s
#8 3.002   2250K .......... .......... .......... .......... ..........  6% 13.6M 16s
#8 3.005   2300K .......... .......... .......... .......... ..........  6% 13.8M 16s
#8 3.009   2350K .......... .......... .......... .......... ..........  6% 10.1M 16s
#8 3.014   2400K .......... .......... .......... .......... ..........  6% 14.9M 15s
#8 3.017   2450K .......... .......... .......... .......... ..........  6% 12.7M 15s
#8 3.021   2500K .......... .......... .......... .......... ..........  6% 14.2M 15s
#8 3.024   2550K .......... .......... .......... .......... ..........  6% 11.7M 15s
#8 3.028   2600K .......... .......... .......... .......... ..........  6% 14.4M 14s
#8 3.032   2650K .......... .......... .......... .......... ..........  7% 12.3M 14s
#8 3.036   2700K .......... .......... .......... .......... ..........  7% 13.7M 14s
#8 3.039   2750K .......... .......... .......... .......... ..........  7% 7.74M 14s
#8 3.046   2800K .......... .......... .......... .......... ..........  7% 24.4M 14s
#8 3.048   2850K .......... .......... .......... .......... ..........  7% 13.7M 13s
#8 3.051   2900K .......... .......... .......... .......... ..........  7% 13.6M 13s
#8 3.055   2950K .......... .......... .......... .......... ..........  7% 13.5M 13s
#8 3.058   3000K .......... .......... .......... .......... ..........  8% 13.6M 13s
#8 3.062   3050K .......... .......... .......... .......... ..........  8% 13.2M 13s
#8 3.066   3100K .......... .......... .......... .......... ..........  8% 12.8M 12s
#8 3.070   3150K .......... .......... .......... .......... ..........  8% 10.7M 12s
#8 3.074   3200K .......... .......... .......... .......... ..........  8% 13.2M 12s
#8 3.078   3250K .......... .......... .......... .......... ..........  8% 13.0M 12s
#8 3.082   3300K .......... .......... .......... .......... ..........  8% 14.5M 12s
#8 3.085   3350K .......... .......... .......... .......... ..........  8% 12.3M 12s
#8 3.089   3400K .......... .......... .......... .......... ..........  9% 14.8M 11s
#8 3.092   3450K .......... .......... .......... .......... ..........  9% 13.5M 11s
#8 3.096   3500K .......... .......... .......... .......... ..........  9% 12.0M 11s
#8 3.100   3550K .......... .......... .......... .......... ..........  9% 1.30M 11s
#8 3.137   3600K .......... .......... .......... .......... ..........  9% 13.8M 11s
#8 3.141   3650K .......... .......... .......... .......... ..........  9% 13.5M 11s
#8 3.145   3700K .......... .......... .......... .......... ..........  9% 13.6M 11s
#8 3.148   3750K .......... .......... .......... .......... ..........  9% 13.2M 11s
#8 3.152   3800K .......... .......... .......... .......... .......... 10% 12.9M 11s
#8 3.156   3850K .......... .......... .......... .......... .......... 10% 14.5M 11s
#8 3.159   3900K .......... .......... .......... .......... .......... 10% 11.6M 10s
#8 3.163   3950K .......... .......... .......... .......... .......... 10% 10.7M 10s
#8 3.168   4000K .......... .......... .......... .......... .......... 10% 14.9M 10s
#8 3.171   4050K .......... .......... .......... .......... .......... 10% 12.5M 10s
#8 3.175   4100K .......... .......... .......... .......... .......... 10% 13.8M 10s
#8 3.179   4150K .......... .......... .......... .......... .......... 11% 13.0M 10s
#8 3.183   4200K .......... .......... .......... .......... .......... 11% 13.5M 10s
#8 3.186   4250K .......... .......... .......... .......... .......... 11% 13.3M 10s
#8 3.190   4300K .......... .......... .......... .......... .......... 11% 13.6M 10s
#8 3.193   4350K .......... .......... .......... .......... .......... 11% 10.7M 10s
#8 3.198   4400K .......... .......... .......... .......... .......... 11% 12.6M 9s
#8 3.202   4450K .......... .......... .......... .......... .......... 11% 14.8M 9s
#8 3.205   4500K .......... .......... .......... .......... .......... 11% 12.5M 9s
#8 3.209   4550K .......... .......... .......... .......... .......... 12% 13.7M 9s
#8 3.212   4600K .......... .......... .......... .......... .......... 12% 12.8M 9s
#8 3.216   4650K .......... .......... .......... .......... .......... 12% 14.8M 9s
#8 3.219   4700K .......... .......... .......... .......... .......... 12% 12.7M 9s
#8 3.223   4750K .......... .......... .......... .......... .......... 12% 9.59M 9s
#8 3.228   4800K .......... .......... .......... .......... .......... 12% 13.4M 9s
#8 3.232   4850K .......... .......... .......... .......... .......... 12% 14.9M 9s
#8 3.235   4900K .......... .......... .......... .......... .......... 12% 12.8M 9s
#8 3.239   4950K .......... .......... .......... .......... .......... 13% 13.2M 9s
#8 3.243   5000K .......... .......... .......... .......... .......... 13% 13.7M 8s
#8 3.246   5050K .......... .......... .......... .......... .......... 13% 13.7M 8s
#8 3.250   5100K .......... .......... .......... .......... .......... 13% 13.6M 8s
#8 3.254   5150K .......... .......... .......... .......... .......... 13% 10.7M 8s
#8 3.258   5200K .......... .......... .......... .......... .......... 13% 11.9M 8s
#8 3.262   5250K .......... .......... .......... .......... .......... 13% 14.8M 8s
#8 3.266   5300K .......... .......... .......... .......... .......... 14% 13.1M 8s
#8 3.269   5350K .......... .......... .......... .......... .......... 14% 13.4M 8s
#8 3.273   5400K .......... .......... .......... .......... .......... 14% 12.6M 8s
#8 3.277   5450K .......... .......... .......... .......... .......... 14% 13.8M 8s
#8 3.280   5500K .......... .......... .......... .......... .......... 14% 14.6M 8s
#8 3.284   5550K .......... .......... .......... .......... .......... 14% 9.65M 8s
#8 3.289   5600K .......... .......... .......... .......... .......... 14% 12.4M 8s
#8 3.293   5650K .......... .......... .......... .......... .......... 14% 13.8M 8s
#8 3.296   5700K .......... .......... .......... .......... .......... 15% 12.5M 8s
#8 3.300   5750K .......... .......... .......... .......... .......... 15% 14.6M 8s
#8 3.303   5800K .......... .......... .......... .......... .......... 15% 12.8M 7s
#8 3.307   5850K .......... .......... .......... .......... .......... 15% 13.5M 7s
#8 3.311   5900K .......... .......... .......... .......... .......... 15% 12.7M 7s
#8 3.315   5950K .......... .......... .......... .......... .......... 15% 10.1M 7s
#8 3.319   6000K .......... .......... .......... .......... .......... 15% 13.8M 7s
#8 3.323   6050K .......... .......... .......... .......... .......... 16% 14.0M 7s
#8 3.326   6100K .......... .......... .......... .......... .......... 16% 12.3M 7s
#8 3.330   6150K .......... .......... .......... .......... .......... 16% 14.2M 7s
#8 3.334   6200K .......... .......... .......... .......... .......... 16% 12.9M 7s
#8 3.338   6250K .......... .......... .......... .......... .......... 16% 13.4M 7s
#8 3.341   6300K .......... .......... .......... .......... .......... 16% 12.8M 7s
#8 3.345   6350K .......... .......... .......... .......... .......... 16% 10.1M 7s
#8 3.350   6400K .......... .......... .......... .......... .......... 16% 13.7M 7s
#8 3.354   6450K .......... .......... .......... .......... .......... 17% 13.3M 7s
#8 3.357   6500K .......... .......... .......... .......... .......... 17% 12.7M 7s
#8 3.361   6550K .......... .......... .......... .......... .......... 17% 14.4M 7s
#8 3.364   6600K .......... .......... .......... .......... .......... 17% 12.7M 7s
#8 3.368   6650K .......... .......... .......... .......... .......... 17% 14.3M 7s
#8 3.372   6700K .......... .......... .......... .......... .......... 17% 12.6M 7s
#8 3.376   6750K .......... .......... .......... .......... .......... 17% 9.92M 7s
#8 3.381   6800K .......... .......... .......... .......... .......... 17% 13.4M 7s
#8 3.384   6850K .......... .......... .......... .......... .......... 18% 13.4M 6s
#8 3.388   6900K .......... .......... .......... .......... .......... 18% 12.9M 6s
#8 3.392   6950K .......... .......... .......... .......... .......... 18% 13.3M 6s
#8 3.395   7000K .......... .......... .......... .......... .......... 18% 13.9M 6s
#8 3.399   7050K .......... .......... .......... .......... .......... 18% 12.9M 6s
#8 3.402   7100K .......... .......... .......... .......... .......... 18% 13.7M 6s
#8 3.406   7150K .......... .......... .......... .......... .......... 18% 10.0M 6s
#8 3.411   7200K .......... .......... .......... .......... .......... 19% 12.9M 6s
#8 3.415   7250K .......... .......... .......... .......... .......... 19% 13.8M 6s
#8 3.418   7300K .......... .......... .......... .......... .......... 19% 12.7M 6s
#8 3.422   7350K .......... .......... .......... .......... .......... 19% 12.3M 6s
#8 3.426   7400K .......... .......... .......... .......... .......... 19% 14.7M 6s
#8 3.429   7450K .......... .......... .......... .......... .......... 19% 13.5M 6s
#8 3.433   7500K .......... .......... .......... .......... .......... 19% 13.3M 6s
#8 3.437   7550K .......... .......... .......... .......... .......... 19% 10.2M 6s
#8 3.441   7600K .......... .......... .......... .......... .......... 20% 12.5M 6s
#8 3.445   7650K .......... .......... .......... .......... .......... 20% 13.6M 6s
#8 3.449   7700K .......... .......... .......... .......... .......... 20% 13.7M 6s
#8 3.453   7750K .......... .......... .......... .......... .......... 20% 12.4M 6s
#8 3.456   7800K .......... .......... .......... .......... .......... 20% 14.7M 6s
#8 3.460   7850K .......... .......... .......... .......... .......... 20% 12.7M 6s
#8 3.464   7900K .......... .......... .......... .......... .......... 20% 12.4M 6s
#8 3.468   7950K .......... .......... .......... .......... .......... 21% 10.7M 6s
#8 3.472   8000K .......... .......... .......... .......... .......... 21% 13.6M 6s
#8 3.476   8050K .......... .......... .......... .......... .......... 21% 13.0M 6s
#8 3.480   8100K .......... .......... .......... .......... .......... 21% 13.0M 6s
#8 3.483   8150K .......... .......... .......... .......... .......... 21% 12.3M 6s
#8 3.487   8200K .......... .......... .......... .......... .......... 21% 13.8M 6s
#8 3.491   8250K .......... .......... .......... .......... .......... 21% 13.5M 6s
#8 3.494   8300K .......... .......... .......... .......... .......... 21% 13.9M 5s
#8 3.498   8350K .......... .......... .......... .......... .......... 22% 10.1M 5s
#8 3.503   8400K .......... .......... .......... .......... .......... 22% 13.4M 5s
#8 3.506   8450K .......... .......... .......... .......... .......... 22% 12.7M 5s
#8 3.510   8500K .......... .......... .......... .......... .......... 22% 14.1M 5s
#8 3.514   8550K .......... .......... .......... .......... .......... 22% 12.5M 5s
#8 3.518   8600K .......... .......... .......... .......... .......... 22% 14.3M 5s
#8 3.521   8650K .......... .......... .......... .......... .......... 22% 13.1M 5s
#8 3.525   8700K .......... .......... .......... .......... .......... 22% 12.7M 5s
#8 3.529   8750K .......... .......... .......... .......... .......... 23% 10.7M 5s
#8 3.533   8800K .......... .......... .......... .......... .......... 23% 13.6M 5s
#8 3.537   8850K .......... .......... .......... .......... .......... 23% 12.6M 5s
#8 3.541   8900K .......... .......... .......... .......... .......... 23% 13.5M 5s
#8 3.544   8950K .......... .......... .......... .......... .......... 23% 12.2M 5s
#8 3.548   9000K .......... .......... .......... .......... .......... 23% 13.6M 5s
#8 3.552   9050K .......... .......... .......... .......... .......... 23% 12.6M 5s
#8 3.556   9100K .......... .......... .......... .......... .......... 24% 14.5M 5s
#8 3.559   9150K .......... .......... .......... .......... .......... 24% 10.3M 5s
#8 3.564   9200K .......... .......... .......... .......... .......... 24% 13.4M 5s
#8 3.567   9250K .......... .......... .......... .......... .......... 24% 12.5M 5s
#8 3.571   9300K .......... .......... .......... .......... .......... 24% 13.9M 5s
#8 3.575   9350K .......... .......... .......... .......... .......... 24% 13.2M 5s
#8 3.579   9400K .......... .......... .......... .......... .......... 24% 13.2M 5s
#8 3.582   9450K .......... .......... .......... .......... .......... 24% 12.7M 5s
#8 3.586   9500K .......... .......... .......... .......... .......... 25% 14.6M 5s
#8 3.589   9550K .......... .......... .......... .......... .......... 25% 9.26M 5s
#8 3.595   9600K .......... .......... .......... .......... .......... 25% 13.4M 5s
#8 3.598   9650K .......... .......... .......... .......... .......... 25% 15.1M 5s
#8 3.602   9700K .......... .......... .......... .......... .......... 25% 12.8M 5s
#8 3.605   9750K .......... .......... .......... .......... .......... 25% 12.2M 5s
#8 3.609   9800K .......... .......... .......... .......... .......... 25% 12.7M 5s
#8 3.613   9850K .......... .......... .......... .......... .......... 25% 13.7M 5s
#8 3.617   9900K .......... .......... .......... .......... .......... 26% 13.5M 5s
#8 3.620   9950K .......... .......... .......... .......... .......... 26% 10.8M 5s
#8 3.625  10000K .......... .......... .......... .......... .......... 26% 12.5M 5s
#8 3.629  10050K .......... .......... .......... .......... .......... 26% 13.8M 5s
#8 3.633  10100K .......... .......... .......... .......... .......... 26% 12.6M 5s
#8 3.636  10150K .......... .......... .......... .......... .......... 26% 14.2M 5s
#8 3.640  10200K .......... .......... .......... .......... .......... 26% 13.9M 5s
#8 3.643  10250K .......... .......... .......... .......... .......... 27% 12.6M 5s
#8 3.647  10300K .......... .......... .......... .......... .......... 27% 13.6M 5s
#8 3.651  10350K .......... .......... .......... .......... .......... 27% 10.1M 5s
#8 3.656  10400K .......... .......... .......... .......... .......... 27% 13.0M 5s
#8 3.659  10450K .......... .......... .......... .......... .......... 27% 13.5M 4s
#8 3.663  10500K .......... .......... .......... .......... .......... 27% 12.7M 4s
#8 3.667  10550K .......... .......... .......... .......... .......... 27% 14.3M 4s
#8 3.670  10600K .......... .......... .......... .......... .......... 27% 12.7M 4s
#8 3.674  10650K .......... .......... .......... .......... .......... 28% 12.6M 4s
#8 3.678  10700K .......... .......... .......... .......... .......... 28% 13.7M 4s
#8 3.681  10750K .......... .......... .......... .......... .......... 28% 10.2M 4s
#8 3.686  10800K .......... .......... .......... .......... .......... 28% 13.6M 4s
#8 3.690  10850K .......... .......... .......... .......... .......... 28% 13.6M 4s
#8 3.693  10900K .......... .......... .......... .......... .......... 28% 12.6M 4s
#8 3.697  10950K .......... .......... .......... .......... .......... 28% 13.2M 4s
#8 3.701  11000K .......... .......... .......... .......... .......... 29% 14.8M 4s
#8 3.704  11050K .......... .......... .......... .......... .......... 29% 11.6M 4s
#8 3.708  11100K .......... .......... .......... .......... .......... 29% 14.0M 4s
#8 3.712  11150K .......... .......... .......... .......... .......... 29% 10.8M 4s
#8 3.716  11200K .......... .......... .......... .......... .......... 29% 12.6M 4s
#8 3.720  11250K .......... .......... .......... .......... .......... 29% 13.5M 4s
#8 3.724  11300K .......... .......... .......... .......... .......... 29% 12.8M 4s
#8 3.728  11350K .......... .......... .......... .......... .......... 29% 14.3M 4s
#8 3.731  11400K .......... .......... .......... .......... .......... 30% 12.0M 4s
#8 3.735  11450K .......... .......... .......... .......... .......... 30% 13.5M 4s
#8 3.739  11500K .......... .......... .......... .......... .......... 30% 12.3M 4s
#8 3.743  11550K .......... .......... .......... .......... .......... 30% 9.61M 4s
#8 3.748  11600K .......... .......... .......... .......... .......... 30% 15.2M 4s
#8 3.751  11650K .......... .......... .......... .......... .......... 30% 13.6M 4s
#8 3.755  11700K .......... .......... .......... .......... .......... 30% 12.5M 4s
#8 3.759  11750K .......... .......... .......... .......... .......... 30% 14.4M 4s
#8 3.762  11800K .......... .......... .......... .......... .......... 31% 12.7M 4s
#8 3.766  11850K .......... .......... .......... .......... .......... 31% 14.7M 4s
#8 3.769  11900K .......... .......... .......... .......... .......... 31% 12.7M 4s
#8 3.773  11950K .......... .......... .......... .......... .......... 31% 10.4M 4s
#8 3.778  12000K .......... .......... .......... .......... .......... 31% 13.4M 4s
#8 3.781  12050K .......... .......... .......... .......... .......... 31% 13.6M 4s
#8 3.785  12100K .......... .......... .......... .......... .......... 31% 12.7M 4s
#8 3.789  12150K .......... .......... .......... .......... .......... 32% 13.4M 4s
#8 3.792  12200K .......... .......... .......... .......... .......... 32% 12.7M 4s
#8 3.796  12250K .......... .......... .......... .......... .......... 32% 13.6M 4s
#8 3.800  12300K .......... .......... .......... .......... .......... 32% 12.4M 4s
#8 3.804  12350K .......... .......... .......... .......... .......... 32% 9.21M 4s
#8 3.809  12400K .......... .......... .......... .......... .......... 32% 14.8M 4s
#8 3.812  12450K .......... .......... .......... .......... .......... 32% 12.7M 4s
#8 3.816  12500K .......... .......... .......... .......... .......... 32% 14.7M 4s
#8 3.820  12550K .......... .......... .......... .......... .......... 33% 13.5M 4s
#8 3.823  12600K .......... .......... .......... .......... .......... 33% 12.7M 4s
#8 3.827  12650K .......... .......... .......... .......... .......... 33% 14.4M 4s
#8 3.830  12700K .......... .......... .......... .......... .......... 33% 12.6M 4s
#8 3.834  12750K .......... .......... .......... .......... .......... 33% 10.3M 4s
#8 3.839  12800K .......... .......... .......... .......... .......... 33% 13.7M 4s
#8 3.843  12850K .......... .......... .......... .......... .......... 33% 14.4M 4s
#8 3.846  12900K .......... .......... .......... .......... .......... 34% 12.7M 4s
#8 3.850  12950K .......... .......... .......... .......... .......... 34% 12.8M 4s
#8 3.854  13000K .......... .......... .......... .......... .......... 34% 13.1M 4s
#8 3.857  13050K .......... .......... .......... .......... .......... 34% 13.8M 4s
#8 3.861  13100K .......... .......... .......... .......... .......... 34% 12.8M 4s
#8 3.865  13150K .......... .......... .......... .......... .......... 34% 9.98M 4s
#8 3.870  13200K .......... .......... .......... .......... .......... 34% 13.6M 4s
#8 3.873  13250K .......... .......... .......... .......... .......... 34% 12.5M 4s
#8 3.877  13300K .......... .......... .......... .......... .......... 35% 14.3M 4s
#8 3.881  13350K .......... .......... .......... .......... .......... 35% 13.7M 4s
#8 3.884  13400K .......... .......... .......... .......... .......... 35% 12.1M 4s
#8 3.888  13450K .......... .......... .......... .......... .......... 35% 13.9M 4s
#8 3.892  13500K .......... .......... .......... .......... .......... 35% 12.8M 4s
#8 3.895  13550K .......... .......... .......... .......... .......... 35% 10.3M 4s
#8 3.900  13600K .......... .......... .......... .......... .......... 35% 13.4M 3s
#8 3.904  13650K .......... .......... .......... .......... .......... 35% 12.5M 3s
#8 3.908  13700K .......... .......... .......... .......... .......... 36% 14.1M 3s
#8 3.911  13750K .......... .......... .......... .......... .......... 36% 14.7M 3s
#8 3.914  13800K .......... .......... .......... .......... .......... 36% 12.7M 3s
#8 3.918  13850K .......... .......... .......... .......... .......... 36% 13.3M 3s
#8 3.922  13900K .......... .......... .......... .......... .......... 36% 12.7M 3s
#8 3.926  13950K .......... .......... .......... .......... .......... 36% 10.1M 3s
#8 3.931  14000K .......... .......... .......... .......... .......... 36% 13.3M 3s
#8 3.934  14050K .......... .......... .......... .......... .......... 37% 12.4M 3s
#8 3.938  14100K .......... .......... .......... .......... .......... 37% 14.0M 3s
#8 3.942  14150K .......... .......... .......... .......... .......... 37% 13.1M 3s
#8 3.946  14200K .......... .......... .......... .......... .......... 37% 13.4M 3s
#8 3.949  14250K .......... .......... .......... .......... .......... 37% 14.5M 3s
#8 3.953  14300K .......... .......... .......... .......... .......... 37% 12.0M 3s
#8 3.957  14350K .......... .......... .......... .......... .......... 37% 10.8M 3s
#8 3.961  14400K .......... .......... .......... .......... .......... 37% 13.1M 3s
#8 3.965  14450K .......... .......... .......... .......... .......... 38% 12.8M 3s
#8 3.969  14500K .......... .......... .......... .......... .......... 38% 14.8M 3s
#8 3.972  14550K .......... .......... .......... .......... .......... 38% 11.4M 3s
#8 3.976  14600K .......... .......... .......... .......... .......... 38% 15.0M 3s
#8 3.980  14650K .......... .......... .......... .......... .......... 38% 12.8M 3s
#8 3.983  14700K .......... .......... .......... .......... .......... 38% 13.8M 3s
#8 3.987  14750K .......... .......... .......... .......... .......... 38% 10.1M 3s
#8 3.992  14800K .......... .......... .......... .......... .......... 38% 13.3M 3s
#8 3.995  14850K .......... .......... .......... .......... .......... 39% 11.8M 3s
#8 4.000  14900K .......... .......... .......... .......... .......... 39% 14.8M 3s
#8 4.003  14950K .......... .......... .......... .......... .......... 39% 12.4M 3s
#8 4.007  15000K .......... .......... .......... .......... .......... 39% 13.6M 3s
#8 4.010  15050K .......... .......... .......... .......... .......... 39% 13.9M 3s
#8 4.014  15100K .......... .......... .......... .......... .......... 39% 13.1M 3s
#8 4.018  15150K .......... .......... .......... .......... .......... 39% 10.3M 3s
#8 4.022  15200K .......... .......... .......... .......... .......... 40% 13.5M 3s
#8 4.026  15250K .......... .......... .......... .......... .......... 40% 13.1M 3s
#8 4.030  15300K .......... .......... .......... .......... .......... 40% 13.2M 3s
#8 4.033  15350K .......... .......... .......... .......... .......... 40% 12.4M 3s
#8 4.037  15400K .......... .......... .......... .......... .......... 40% 13.5M 3s
#8 4.041  15450K .......... .......... .......... .......... .......... 40% 13.9M 3s
#8 4.045  15500K .......... .......... .......... .......... .......... 40% 13.7M 3s
#8 4.048  15550K .......... .......... .......... .......... .......... 40% 10.1M 3s
#8 4.053  15600K .......... .......... .......... .......... .......... 41% 13.9M 3s
#8 4.057  15650K .......... .......... .......... .......... .......... 41% 12.6M 3s
#8 4.060  15700K .......... .......... .......... .......... .......... 41% 13.7M 3s
#8 4.064  15750K .......... .......... .......... .......... .......... 41% 12.1M 3s
#8 4.068  15800K .......... .......... .......... .......... .......... 41% 13.5M 3s
#8 4.072  15850K .......... .......... .......... .......... .......... 41% 13.1M 3s
#8 4.075  15900K .......... .......... .......... .......... .......... 41% 13.9M 3s
#8 4.079  15950K .......... .......... .......... .......... .......... 42% 10.1M 3s
#8 4.084  16000K .......... .......... .......... .......... .......... 42% 12.7M 3s
#8 4.088  16050K .......... .......... .......... .......... .......... 42% 13.6M 3s
#8 4.091  16100K .......... .......... .......... .......... .......... 42% 14.9M 3s
#8 4.094  16150K .......... .......... .......... .......... .......... 42% 12.1M 3s
#8 4.098  16200K .......... .......... .......... .......... .......... 42% 13.5M 3s
#8 4.102  16250K .......... .......... .......... .......... .......... 42% 12.7M 3s
#8 4.106  16300K .......... .......... .......... .......... .......... 42% 14.7M 3s
#8 4.109  16350K .......... .......... .......... .......... .......... 43% 9.54M 3s
#8 4.114  16400K .......... .......... .......... .......... .......... 43% 13.8M 3s
#8 4.118  16450K .......... .......... .......... .......... .......... 43% 13.4M 3s
#8 4.122  16500K .......... .......... .......... .......... .......... 43% 12.4M 3s
#8 4.125  16550K .......... .......... .......... .......... .......... 43% 13.4M 3s
#8 4.129  16600K .......... .......... .......... .......... .......... 43% 13.9M 3s
#8 4.133  16650K .......... .......... .......... .......... .......... 43% 12.4M 3s
#8 4.136  16700K .......... .......... .......... .......... .......... 43% 14.7M 3s
#8 4.140  16750K .......... .......... .......... .......... .......... 44% 9.54M 3s
#8 4.145  16800K .......... .......... .......... .......... .......... 44% 13.7M 3s
#8 4.149  16850K .......... .......... .......... .......... .......... 44% 14.7M 3s
#8 4.152  16900K .......... .......... .......... .......... .......... 44% 12.7M 3s
#8 4.156  16950K .......... .......... .......... .......... .......... 44% 13.2M 3s
#8 4.159  17000K .......... .......... .......... .......... .......... 44% 13.8M 3s
#8 4.163  17050K .......... .......... .......... .......... .......... 44% 12.6M 3s
#8 4.167  17100K .......... .......... .......... .......... .......... 45% 13.2M 3s
#8 4.170  17150K .......... .......... .......... .......... .......... 45% 10.0M 3s
#8 4.175  17200K .......... .......... .......... .......... .......... 45% 13.4M 3s
#8 4.179  17250K .......... .......... .......... .......... .......... 45% 13.9M 3s
#8 4.183  17300K .......... .......... .......... .......... .......... 45% 12.4M 3s
#8 4.187  17350K .......... .......... .......... .......... .......... 45% 13.4M 3s
#8 4.190  17400K .......... .......... .......... .......... .......... 45% 11.9M 3s
#8 4.194  17450K .......... .......... .......... .......... .......... 45% 14.9M 3s
#8 4.198  17500K .......... .......... .......... .......... .......... 46% 13.8M 3s
#8 4.201  17550K .......... .......... .......... .......... .......... 46% 10.1M 3s
#8 4.206  17600K .......... .......... .......... .......... .......... 46% 13.5M 3s
#8 4.210  17650K .......... .......... .......... .......... .......... 46% 13.4M 3s
#8 4.213  17700K .......... .......... .......... .......... .......... 46% 12.8M 3s
#8 4.217  17750K .......... .......... .......... .......... .......... 46% 13.3M 3s
#8 4.221  17800K .......... .......... .......... .......... .......... 46% 12.6M 3s
#8 4.224  17850K .......... .......... .......... .......... .......... 46% 13.0M 3s
#8 4.228  17900K .......... .......... .......... .......... .......... 47% 13.4M 3s
#8 4.232  17950K .......... .......... .......... .......... .......... 47% 10.8M 3s
#8 4.236  18000K .......... .......... .......... .......... .......... 47% 12.7M 3s
#8 4.240  18050K .......... .......... .......... .......... .......... 47% 14.5M 3s
#8 4.244  18100K .......... .......... .......... .......... .......... 47% 12.9M 3s
#8 4.247  18150K .......... .......... .......... .......... .......... 47% 13.5M 3s
#8 4.251  18200K .......... .......... .......... .......... .......... 47% 11.7M 3s
#8 4.255  18250K .......... .......... .......... .......... .......... 48% 14.0M 2s
#8 4.259  18300K .......... .......... .......... .......... .......... 48% 12.6M 2s
#8 4.263  18350K .......... .......... .......... .......... .......... 48% 10.1M 2s
#8 4.268  18400K .......... .......... .......... .......... .......... 48% 14.9M 2s
#8 4.271  18450K .......... .......... .......... .......... .......... 48% 13.4M 2s
#8 4.274  18500K .......... .......... .......... .......... .......... 48% 13.6M 2s
#8 4.278  18550K .......... .......... .......... .......... .......... 48% 14.4M 2s
#8 4.281  18600K .......... .......... .......... .......... .......... 48% 11.7M 2s
#8 4.286  18650K .......... .......... .......... .......... .......... 49% 13.6M 2s
#8 4.289  18700K .......... .......... .......... .......... .......... 49% 12.8M 2s
#8 4.293  18750K .......... .......... .......... .......... .......... 49% 10.4M 2s
#8 4.298  18800K .......... .......... .......... .......... .......... 49% 13.4M 2s
#8 4.301  18850K .......... .......... .......... .......... .......... 49% 13.6M 2s
#8 4.305  18900K .......... .......... .......... .......... .......... 49% 13.0M 2s
#8 4.309  18950K .......... .......... .......... .......... .......... 49% 13.1M 2s
#8 4.312  19000K .......... .......... .......... .......... .......... 50% 13.7M 2s
#8 4.316  19050K .......... .......... .......... .......... .......... 50% 13.1M 2s
#8 4.320  19100K .......... .......... .......... .......... .......... 50% 12.3M 2s
#8 4.324  19150K .......... .......... .......... .......... .......... 50% 10.4M 2s
#8 4.328  19200K .......... .......... .......... .......... .......... 50% 13.9M 2s
#8 4.332  19250K .......... .......... .......... .......... .......... 50% 12.7M 2s
#8 4.336  19300K .......... .......... .......... .......... .......... 50% 14.0M 2s
#8 4.339  19350K .......... .......... .......... .......... .......... 50% 14.2M 2s
#8 4.343  19400K .......... .......... .......... .......... .......... 51% 12.5M 2s
#8 4.347  19450K .......... .......... .......... .......... .......... 51% 13.7M 2s
#8 4.350  19500K .......... .......... .......... .......... .......... 51% 12.6M 2s
#8 4.354  19550K .......... .......... .......... .......... .......... 51% 10.2M 2s
#8 4.359  19600K .......... .......... .......... .......... .......... 51% 13.6M 2s
#8 4.362  19650K .......... .......... .......... .......... .......... 51% 12.6M 2s
#8 4.366  19700K .......... .......... .......... .......... .......... 51% 13.7M 2s
#8 4.370  19750K .......... .......... .......... .......... .......... 51% 13.6M 2s
#8 4.373  19800K .......... .......... .......... .......... .......... 52% 12.5M 2s
#8 4.377  19850K .......... .......... .......... .......... .......... 52% 14.9M 2s
#8 4.381  19900K .......... .......... .......... .......... .......... 52% 11.9M 2s
#8 4.385  19950K .......... .......... .......... .......... .......... 52% 9.51M 2s
#8 4.390  20000K .......... .......... .......... .......... .......... 52% 14.6M 2s
#8 4.393  20050K .......... .......... .......... .......... .......... 52% 13.5M 2s
#8 4.397  20100K .......... .......... .......... .......... .......... 52% 13.8M 2s
#8 4.400  20150K .......... .......... .......... .......... .......... 53% 12.5M 2s
#8 4.404  20200K .......... .......... .......... .......... .......... 53% 12.6M 2s
#8 4.408  20250K .......... .......... .......... .......... .......... 53% 14.9M 2s
#8 4.411  20300K .......... .......... .......... .......... .......... 53% 12.6M 2s
#8 4.415  20350K .......... .......... .......... .......... .......... 53% 10.8M 2s
#8 4.420  20400K .......... .......... .......... .......... .......... 53% 13.4M 2s
#8 4.423  20450K .......... .......... .......... .......... .......... 53% 12.9M 2s
#8 4.427  20500K .......... .......... .......... .......... .......... 53% 12.4M 2s
#8 4.431  20550K .......... .......... .......... .......... .......... 54% 13.6M 2s
#8 4.435  20600K .......... .......... .......... .......... .......... 54% 13.7M 2s
#8 4.438  20650K .......... .......... .......... .......... .......... 54% 13.6M 2s
#8 4.442  20700K .......... .......... .......... .......... .......... 54% 13.5M 2s
#8 4.445  20750K .......... .......... .......... .......... .......... 54% 9.70M 2s
#8 4.451  20800K .......... .......... .......... .......... .......... 54% 13.6M 2s
#8 4.454  20850K .......... .......... .......... .......... .......... 54% 12.7M 2s
#8 4.458  20900K .......... .......... .......... .......... .......... 55% 14.5M 2s
#8 4.461  20950K .......... .......... .......... .......... .......... 55% 12.4M 2s
#8 4.465  21000K .......... .......... .......... .......... .......... 55% 13.7M 2s
#8 4.469  21050K .......... .......... .......... .......... .......... 55% 14.5M 2s
#8 4.472  21100K .......... .......... .......... .......... .......... 55% 12.3M 2s
#8 4.476  21150K .......... .......... .......... .......... .......... 55% 10.3M 2s
#8 4.481  21200K .......... .......... .......... .......... .......... 55% 13.0M 2s
#8 4.485  21250K .......... .......... .......... .......... .......... 55% 13.4M 2s
#8 4.488  21300K .......... .......... .......... .......... .......... 56% 13.4M 2s
#8 4.492  21350K .......... .......... .......... .......... .......... 56% 12.4M 2s
#8 4.496  21400K .......... .......... .......... .......... .......... 56% 13.8M 2s
#8 4.499  21450K .......... .......... .......... .......... .......... 56% 13.1M 2s
#8 4.503  21500K .......... .......... .......... .......... .......... 56% 13.0M 2s
#8 4.507  21550K .......... .......... .......... .......... .......... 56% 9.75M 2s
#8 4.512  21600K .......... .......... .......... .......... .......... 56% 13.8M 2s
#8 4.516  21650K .......... .......... .......... .......... .......... 56% 12.4M 2s
#8 4.519  21700K .......... .......... .......... .......... .......... 57% 14.8M 2s
#8 4.523  21750K .......... .......... .......... .......... .......... 57% 12.7M 2s
#8 4.527  21800K .......... .......... .......... .......... .......... 57% 14.3M 2s
#8 4.530  21850K .......... .......... .......... .......... .......... 57% 12.6M 2s
#8 4.534  21900K .......... .......... .......... .......... .......... 57% 13.6M 2s
#8 4.537  21950K .......... .......... .......... .......... .......... 57% 10.2M 2s
#8 4.542  22000K .......... .......... .......... .......... .......... 57% 13.6M 2s
#8 4.546  22050K .......... .......... .......... .......... .......... 58% 13.9M 2s
#8 4.549  22100K .......... .......... .......... .......... .......... 58% 13.4M 2s
#8 4.553  22150K .......... .......... .......... .......... .......... 58% 12.8M 2s
#8 4.557  22200K .......... .......... .......... .......... .......... 58% 13.2M 2s
#8 4.560  22250K .......... .......... .......... .......... .......... 58% 12.8M 2s
#8 4.564  22300K .......... .......... .......... .......... .......... 58% 13.6M 2s
#8 4.568  22350K .......... .......... .......... .......... .......... 58% 10.1M 2s
#8 4.573  22400K .......... .......... .......... .......... .......... 58% 12.9M 2s
#8 4.577  22450K .......... .......... .......... .......... .......... 59% 13.5M 2s
#8 4.580  22500K .......... .......... .......... .......... .......... 59% 13.5M 2s
#8 4.584  22550K .......... .......... .......... .......... .......... 59% 13.3M 2s
#8 4.587  22600K .......... .......... .......... .......... .......... 59% 12.6M 2s
#8 4.591  22650K .......... .......... .......... .......... .......... 59% 13.5M 2s
#8 4.595  22700K .......... .......... .......... .......... .......... 59% 13.6M 2s
#8 4.599  22750K .......... .......... .......... .......... .......... 59% 10.2M 2s
#8 4.603  22800K .......... .......... .......... .......... .......... 59% 12.8M 2s
#8 4.607  22850K .......... .......... .......... .......... .......... 60% 13.5M 2s
#8 4.611  22900K .......... .......... .......... .......... .......... 60% 15.1M 2s
#8 4.614  22950K .......... .......... .......... .......... .......... 60% 12.3M 2s
#8 4.618  23000K .......... .......... .......... .......... .......... 60% 13.6M 2s
#8 4.621  23050K .......... .......... .......... .......... .......... 60% 12.6M 2s
#8 4.625  23100K .......... .......... .......... .......... .......... 60% 13.7M 2s
#8 4.629  23150K .......... .......... .......... .......... .......... 60% 10.1M 2s
#8 4.634  23200K .......... .......... .......... .......... .......... 61% 12.6M 2s
#8 4.638  23250K .......... .......... .......... .......... .......... 61% 12.9M 2s
#8 4.641  23300K .......... .......... .......... .......... .......... 61% 13.3M 2s
#8 4.645  23350K .......... .......... .......... .......... .......... 61% 13.5M 2s
#8 4.649  23400K .......... .......... .......... .......... .......... 61% 13.6M 2s
#8 4.652  23450K .......... .......... .......... .......... .......... 61% 12.7M 2s
#8 4.656  23500K .......... .......... .......... .......... .......... 61% 13.4M 2s
#8 4.660  23550K .......... .......... .......... .......... .......... 61% 10.3M 2s
#8 4.665  23600K .......... .......... .......... .......... .......... 62% 13.6M 2s
#8 4.668  23650K .......... .......... .......... .......... .......... 62% 13.2M 2s
#8 4.672  23700K .......... .......... .......... .......... .......... 62% 12.9M 2s
#8 4.676  23750K .......... .......... .......... .......... .......... 62% 13.6M 2s
#8 4.679  23800K .......... .......... .......... .......... .......... 62% 13.8M 2s
#8 4.683  23850K .......... .......... .......... .......... .......... 62% 12.4M 2s
#8 4.687  23900K .......... .......... .......... .......... .......... 62% 14.6M 2s
#8 4.690  23950K .......... .......... .......... .......... .......... 63% 10.2M 2s
#8 4.695  24000K .......... .......... .......... .......... .......... 63% 12.5M 2s
#8 4.699  24050K .......... .......... .......... .......... .......... 63% 13.7M 2s
#8 4.702  24100K .......... .......... .......... .......... .......... 63% 12.6M 2s
#8 4.706  24150K .......... .......... .......... .......... .......... 63% 12.7M 2s
#8 4.710  24200K .......... .......... .......... .......... .......... 63% 13.4M 2s
#8 4.714  24250K .......... .......... .......... .......... .......... 63% 14.6M 2s
#8 4.717  24300K .......... .......... .......... .......... .......... 63% 12.5M 2s
#8 4.721  24350K .......... .......... .......... .......... .......... 64% 10.3M 2s
#8 4.726  24400K .......... .......... .......... .......... .......... 64% 12.6M 2s
#8 4.729  24450K .......... .......... .......... .......... .......... 64% 14.7M 2s
#8 4.733  24500K .......... .......... .......... .......... .......... 64% 12.3M 2s
#8 4.737  24550K .......... .......... .......... .......... .......... 64% 13.8M 2s
#8 4.740  24600K .......... .......... .......... .......... .......... 64% 12.5M 2s
#8 4.744  24650K .......... .......... .......... .......... .......... 64% 14.6M 2s
#8 4.748  24700K .......... .......... .......... .......... .......... 64% 12.9M 2s
#8 4.751  24750K .......... .......... .......... .......... .......... 65% 10.8M 2s
#8 4.756  24800K .......... .......... .......... .......... .......... 65% 12.5M 1s
#8 4.760  24850K .......... .......... .......... .......... .......... 65% 13.6M 1s
#8 4.763  24900K .......... .......... .......... .......... .......... 65% 11.9M 1s
#8 4.768  24950K .......... .......... .......... .......... .......... 65% 13.5M 1s
#8 4.771  25000K .......... .......... .......... .......... .......... 65% 12.7M 1s
#8 4.775  25050K .......... .......... .......... .......... .......... 65% 14.6M 1s
#8 4.778  25100K .......... .......... .......... .......... .......... 66% 12.8M 1s
#8 4.782  25150K .......... .......... .......... .......... .......... 66% 9.99M 1s
#8 4.787  25200K .......... .......... .......... .......... .......... 66% 14.3M 1s
#8 4.790  25250K .......... .......... .......... .......... .......... 66% 13.6M 1s
#8 4.794  25300K .......... .......... .......... .......... .......... 66% 12.4M 1s
#8 4.798  25350K .......... .......... .......... .......... .......... 66% 13.6M 1s
#8 4.801  25400K .......... .......... .......... .......... .......... 66% 13.4M 1s
#8 4.805  25450K .......... .......... .......... .......... .......... 66% 13.5M 1s
#8 4.809  25500K .......... .......... .......... .......... .......... 67% 13.4M 1s
#8 4.812  25550K .......... .......... .......... .......... .......... 67% 9.79M 1s
#8 4.817  25600K .......... .......... .......... .......... .......... 67% 14.5M 1s
#8 4.821  25650K .......... .......... .......... .......... .......... 67% 11.8M 1s
#8 4.825  25700K .......... .......... .......... .......... .......... 67% 14.9M 1s
#8 4.828  25750K .......... .......... .......... .......... .......... 67% 12.6M 1s
#8 4.832  25800K .......... .......... .......... .......... .......... 67% 12.7M 1s
#8 4.836  25850K .......... .......... .......... .......... .......... 68% 13.2M 1s
#8 4.840  25900K .......... .......... .......... .......... .......... 68% 14.2M 1s
#8 4.843  25950K .......... .......... .......... .......... .......... 68% 10.1M 1s
#8 4.848  26000K .......... .......... .......... .......... .......... 68% 13.7M 1s
#8 4.851  26050K .......... .......... .......... .......... .......... 68% 14.8M 1s
#8 4.855  26100K .......... .......... .......... .......... .......... 68% 12.6M 1s
#8 4.859  26150K .......... .......... .......... .......... .......... 68% 13.5M 1s
#8 4.862  26200K .......... .......... .......... .......... .......... 68% 12.6M 1s
#8 4.866  26250K .......... .......... .......... .......... .......... 69% 12.5M 1s
#8 4.870  26300K .......... .......... .......... .......... .......... 69% 13.7M 1s
#8 4.873  26350K .......... .......... .......... .......... .......... 69% 9.62M 1s
#8 4.879  26400K .......... .......... .......... .......... .......... 69% 14.6M 1s
#8 4.882  26450K .......... .......... .......... .......... .......... 69% 11.9M 1s
#8 4.886  26500K .......... .......... .......... .......... .......... 69% 14.6M 1s
#8 4.889  26550K .......... .......... .......... .......... .......... 69% 12.6M 1s
#8 4.893  26600K .......... .......... .......... .......... .......... 69% 12.8M 1s
#8 4.897  26650K .......... .......... .......... .......... .......... 70% 13.7M 1s
#8 4.901  26700K .......... .......... .......... .......... .......... 70% 13.3M 1s
#8 4.904  26750K .......... .......... .......... .......... .......... 70% 10.1M 1s
#8 4.909  26800K .......... .......... .......... .......... .......... 70% 13.7M 1s
#8 4.913  26850K .......... .......... .......... .......... .......... 70% 13.6M 1s
#8 4.916  26900K .......... .......... .......... .......... .......... 70% 14.0M 1s
#8 4.920  26950K .......... .......... .......... .......... .......... 70% 12.2M 1s
#8 4.924  27000K .......... .......... .......... .......... .......... 71% 13.5M 1s
#8 4.927  27050K .......... .......... .......... .......... .......... 71% 14.9M 1s
#8 4.931  27100K .......... .......... .......... .......... .......... 71% 12.7M 1s
#8 4.935  27150K .......... .......... .......... .......... .......... 71% 10.0M 1s
#8 4.939  27200K .......... .......... .......... .......... .......... 71% 12.6M 1s
#8 4.943  27250K .......... .......... .......... .......... .......... 71% 14.4M 1s
#8 4.947  27300K .......... .......... .......... .......... .......... 71% 12.7M 1s
#8 4.951  27350K .......... .......... .......... .......... .......... 71% 11.8M 1s
#8 4.955  27400K .......... .......... .......... .......... .......... 72% 14.3M 1s
#8 4.958  27450K .......... .......... .......... .......... .......... 72% 11.9M 1s
#8 4.962  27500K .......... .......... .......... .......... .......... 72% 14.6M 1s
#8 4.965  27550K .......... .......... .......... .......... .......... 72% 9.79M 1s
#8 4.971  27600K .......... .......... .......... .......... .......... 72% 14.8M 1s
#8 4.974  27650K .......... .......... .......... .......... .......... 72% 13.7M 1s
#8 4.977  27700K .......... .......... .......... .......... .......... 72% 11.1M 1s
#8 4.982  27750K .......... .......... .......... .......... .......... 72% 16.9M 1s
#8 4.985  27800K .......... .......... .......... .......... .......... 73% 13.3M 1s
#8 4.988  27850K .......... .......... .......... .......... .......... 73% 12.6M 1s
#8 4.992  27900K .......... .......... .......... .......... .......... 73% 14.0M 1s
#8 4.996  27950K .......... .......... .......... .......... .......... 73% 10.1M 1s
#8 5.000  28000K .......... .......... .......... .......... .......... 73% 12.7M 1s
#8 5.004  28050K .......... .......... .......... .......... .......... 73% 13.3M 1s
#8 5.008  28100K .......... .......... .......... .......... .......... 73% 13.5M 1s
#8 5.012  28150K .......... .......... .......... .......... .......... 74% 12.4M 1s
#8 5.016  28200K .......... .......... .......... .......... .......... 74% 14.8M 1s
#8 5.019  28250K .......... .......... .......... .......... .......... 74% 12.0M 1s
#8 5.023  28300K .......... .......... .......... .......... .......... 74% 13.2M 1s
#8 5.027  28350K .......... .......... .......... .......... .......... 74% 10.1M 1s
#8 5.031  28400K .......... .......... .......... .......... .......... 74% 12.4M 1s
#8 5.036  28450K .......... .......... .......... .......... .......... 74% 15.1M 1s
#8 5.039  28500K .......... .......... .......... .......... .......... 74% 13.6M 1s
#8 5.042  28550K .......... .......... .......... .......... .......... 75% 13.1M 1s
#8 5.046  28600K .......... .......... .......... .......... .......... 75% 13.5M 1s
#8 5.050  28650K .......... .......... .......... .......... .......... 75% 13.3M 1s
#8 5.053  28700K .......... .......... .......... .......... .......... 75% 13.5M 1s
#8 5.057  28750K .......... .......... .......... .......... .......... 75% 10.2M 1s
#8 5.062  28800K .......... .......... .......... .......... .......... 75% 13.0M 1s
#8 5.065  28850K .......... .......... .......... .......... .......... 75% 13.5M 1s
#8 5.069  28900K .......... .......... .......... .......... .......... 76% 13.8M 1s
#8 5.073  28950K .......... .......... .......... .......... .......... 76% 12.8M 1s
#8 5.076  29000K .......... .......... .......... .......... .......... 76% 13.1M 1s
#8 5.080  29050K .......... .......... .......... .......... .......... 76% 13.5M 1s
#8 5.084  29100K .......... .......... .......... .......... .......... 76% 13.6M 1s
#8 5.087  29150K .......... .......... .......... .......... .......... 76% 9.26M 1s
#8 5.093  29200K .......... .......... .......... .......... .......... 76% 13.7M 1s
#8 5.096  29250K .......... .......... .......... .......... .......... 76% 13.0M 1s
#8 5.100  29300K .......... .......... .......... .......... .......... 77% 12.7M 1s
#8 5.104  29350K .......... .......... .......... .......... .......... 77% 15.0M 1s
#8 5.107  29400K .......... .......... .......... .......... .......... 77% 13.4M 1s
#8 5.111  29450K .......... .......... .......... .......... .......... 77% 12.6M 1s
#8 5.114  29500K .......... .......... .......... .......... .......... 77% 14.6M 1s
#8 5.118  29550K .......... .......... .......... .......... .......... 77% 9.51M 1s
#8 5.123  29600K .......... .......... .......... .......... .......... 77% 14.5M 1s
#8 5.126  29650K .......... .......... .......... .......... .......... 77% 12.5M 1s
#8 5.130  29700K .......... .......... .......... .......... .......... 78% 12.6M 1s
#8 5.134  29750K .......... .......... .......... .......... .......... 78% 14.7M 1s
#8 5.137  29800K .......... .......... .......... .......... .......... 78% 13.5M 1s
#8 5.141  29850K .......... .......... .......... .......... .......... 78% 12.4M 1s
#8 5.145  29900K .......... .......... .......... .......... .......... 78% 13.6M 1s
#8 5.149  29950K .......... .......... .......... .......... .......... 78% 9.69M 1s
#8 5.154  30000K .......... .......... .......... .......... .......... 78% 13.1M 1s
#8 5.157  30050K .......... .......... .......... .......... .......... 79% 13.9M 1s
#8 5.161  30100K .......... .......... .......... .......... .......... 79% 12.3M 1s
#8 5.165  30150K .......... .......... .......... .......... .......... 79% 14.4M 1s
#8 5.168  30200K .......... .......... .......... .......... .......... 79% 13.7M 1s
#8 5.172  30250K .......... .......... .......... .......... .......... 79% 13.2M 1s
#8 5.175  30300K .......... .......... .......... .......... .......... 79% 13.8M 1s
#8 5.179  30350K .......... .......... .......... .......... .......... 79% 10.1M 1s
#8 5.184  30400K .......... .......... .......... .......... .......... 79% 12.5M 1s
#8 5.188  30450K .......... .......... .......... .......... .......... 80% 14.1M 1s
#8 5.191  30500K .......... .......... .......... .......... .......... 80% 12.6M 1s
#8 5.195  30550K .......... .......... .......... .......... .......... 80% 13.6M 1s
#8 5.199  30600K .......... .......... .......... .......... .......... 80% 14.8M 1s
#8 5.202  30650K .......... .......... .......... .......... .......... 80% 12.6M 1s
#8 5.206  30700K .......... .......... .......... .......... .......... 80% 11.7M 1s
#8 5.210  30750K .......... .......... .......... .......... .......... 80% 10.7M 1s
#8 5.215  30800K .......... .......... .......... .......... .......... 80% 12.1M 1s
#8 5.219  30850K .......... .......... .......... .......... .......... 81% 14.3M 1s
#8 5.222  30900K .......... .......... .......... .......... .......... 81% 12.7M 1s
#8 5.226  30950K .......... .......... .......... .......... .......... 81% 12.8M 1s
#8 5.230  31000K .......... .......... .......... .......... .......... 81% 13.7M 1s
#8 5.233  31050K .......... .......... .......... .......... .......... 81% 13.8M 1s
#8 5.237  31100K .......... .......... .......... .......... .......... 81% 12.6M 1s
#8 5.241  31150K .......... .......... .......... .......... .......... 81% 11.3M 1s
#8 5.245  31200K .......... .......... .......... .......... .......... 82% 12.6M 1s
#8 5.249  31250K .......... .......... .......... .......... .......... 82% 13.4M 1s
#8 5.253  31300K .......... .......... .......... .......... .......... 82% 12.2M 1s
#8 5.257  31350K .......... .......... .......... .......... .......... 82% 14.0M 1s
#8 5.260  31400K .......... .......... .......... .......... .......... 82% 13.8M 1s
#8 5.264  31450K .......... .......... .......... .......... .......... 82% 12.7M 1s
#8 5.267  31500K .......... .......... .......... .......... .......... 82% 12.9M 1s
#8 5.271  31550K .......... .......... .......... .......... .......... 82% 10.7M 1s
#8 5.276  31600K .......... .......... .......... .......... .......... 83% 12.8M 1s
#8 5.280  31650K .......... .......... .......... .......... .......... 83% 13.4M 1s
#8 5.283  31700K .......... .......... .......... .......... .......... 83% 12.7M 1s
#8 5.287  31750K .......... .......... .......... .......... .......... 83% 13.4M 1s
#8 5.291  31800K .......... .......... .......... .......... .......... 83% 13.9M 1s
#8 5.294  31850K .......... .......... .......... .......... .......... 83% 13.6M 1s
#8 5.298  31900K .......... .......... .......... .......... .......... 83% 12.8M 1s
#8 5.302  31950K .......... .......... .......... .......... .......... 84% 10.1M 1s
#8 5.306  32000K .......... .......... .......... .......... .......... 84% 13.8M 1s
#8 5.310  32050K .......... .......... .......... .......... .......... 84% 13.2M 1s
#8 5.314  32100K .......... .......... .......... .......... .......... 84% 14.0M 1s
#8 5.317  32150K .......... .......... .......... .......... .......... 84% 12.3M 1s
#8 5.321  32200K .......... .......... .......... .......... .......... 84% 13.6M 1s
#8 5.325  32250K .......... .......... .......... .......... .......... 84% 13.4M 1s
#8 5.328  32300K .......... .......... .......... .......... .......... 84% 13.3M 1s
#8 5.332  32350K .......... .......... .......... .......... .......... 85% 9.60M 1s
#8 5.337  32400K .......... .......... .......... .......... .......... 85% 15.0M 1s
#8 5.340  32450K .......... .......... .......... .......... .......... 85% 12.6M 1s
#8 5.344  32500K .......... .......... .......... .......... .......... 85% 12.7M 1s
#8 5.348  32550K .......... .......... .......... .......... .......... 85% 13.5M 1s
#8 5.352  32600K .......... .......... .......... .......... .......... 85% 12.7M 1s
#8 5.356  32650K .......... .......... .......... .......... .......... 85% 14.4M 1s
#8 5.359  32700K .......... .......... .......... .......... .......... 85% 13.6M 1s
#8 5.362  32750K .......... .......... .......... .......... .......... 86% 9.97M 1s
#8 5.368  32800K .......... .......... .......... .......... .......... 86% 13.7M 1s
#8 5.371  32850K .......... .......... .......... .......... .......... 86% 12.7M 1s
#8 5.375  32900K .......... .......... .......... .......... .......... 86% 13.8M 1s
#8 5.378  32950K .......... .......... .......... .......... .......... 86% 12.4M 1s
#8 5.382  33000K .......... .......... .......... .......... .......... 86% 13.5M 1s
#8 5.386  33050K .......... .......... .......... .......... .......... 86% 13.4M 1s
#8 5.390  33100K .......... .......... .......... .......... .......... 87% 13.4M 1s
#8 5.393  33150K .......... .......... .......... .......... .......... 87% 9.71M 1s
#8 5.398  33200K .......... .......... .......... .......... .......... 87% 14.4M 1s
#8 5.402  33250K .......... .......... .......... .......... .......... 87% 13.5M 0s
#8 5.405  33300K .......... .......... .......... .......... .......... 87% 12.5M 0s
#8 5.409  33350K .......... .......... .......... .......... .......... 87% 12.6M 0s
#8 5.413  33400K .......... .......... .......... .......... .......... 87% 13.5M 0s
#8 5.417  33450K .......... .......... .......... .......... .......... 87% 13.5M 0s
#8 5.420  33500K .......... .......... .......... .......... .......... 88% 13.8M 0s
#8 5.424  33550K .......... .......... .......... .......... .......... 88% 10.4M 0s
#8 5.429  33600K .......... .......... .......... .......... .......... 88% 12.8M 0s
#8 5.432  33650K .......... .......... .......... .......... .......... 88% 13.3M 0s
#8 5.436  33700K .......... .......... .......... .......... .......... 88% 13.8M 0s
#8 5.440  33750K .......... .......... .......... .......... .......... 88% 12.3M 0s
#8 5.443  33800K .......... .......... .......... .......... .......... 88% 13.8M 0s
#8 5.447  33850K .......... .......... .......... .......... .......... 89% 12.5M 0s
#8 5.451  33900K .......... .......... .......... .......... .......... 89% 14.8M 0s
#8 5.454  33950K .......... .......... .......... .......... .......... 89% 10.2M 0s
#8 5.459  34000K .......... .......... .......... .......... .......... 89% 13.3M 0s
#8 5.463  34050K .......... .......... .......... .......... .......... 89% 12.8M 0s
#8 5.467  34100K .......... .......... .......... .......... .......... 89% 13.0M 0s
#8 5.470  34150K .......... .......... .......... .......... .......... 89% 13.8M 0s
#8 5.474  34200K .......... .......... .......... .......... .......... 89% 12.2M 0s
#8 5.478  34250K .......... .......... .......... .......... .......... 90% 12.9M 0s
#8 5.482  34300K .......... .......... .......... .......... .......... 90% 14.6M 0s
#8 5.485  34350K .......... .......... .......... .......... .......... 90% 10.3M 0s
#8 5.490  34400K .......... .......... .......... .......... .......... 90% 13.6M 0s
#8 5.493  34450K .......... .......... .......... .......... .......... 90% 13.3M 0s
#8 5.497  34500K .......... .......... .......... .......... .......... 90% 13.7M 0s
#8 5.501  34550K .......... .......... .......... .......... .......... 90% 12.3M 0s
#8 5.505  34600K .......... .......... .......... .......... .......... 90% 13.6M 0s
#8 5.508  34650K .......... .......... .......... .......... .......... 91% 12.4M 0s
#8 5.512  34700K .......... .......... .......... .......... .......... 91% 14.5M 0s
#8 5.515  34750K .......... .......... .......... .......... .......... 91% 9.84M 0s
#8 5.520  34800K .......... .......... .......... .......... .......... 91% 14.7M 0s
#8 5.524  34850K .......... .......... .......... .......... .......... 91% 12.0M 0s
#8 5.528  34900K .......... .......... .......... .......... .......... 91% 14.7M 0s
#8 5.531  34950K .......... .......... .......... .......... .......... 91% 12.4M 0s
#8 5.535  35000K .......... .......... .......... .......... .......... 92% 12.5M 0s
#8 5.539  35050K .......... .......... .......... .......... .......... 92% 14.0M 0s
#8 5.542  35100K .......... .......... .......... .......... .......... 92% 12.9M 0s
#8 5.546  35150K .......... .......... .......... .......... .......... 92% 10.2M 0s
#8 5.551  35200K .......... .......... .......... .......... .......... 92% 14.7M 0s
#8 5.554  35250K .......... .......... .......... .......... .......... 92% 12.6M 0s
#8 5.558  35300K .......... .......... .......... .......... .......... 92% 14.9M 0s
#8 5.561  35350K .......... .......... .......... .......... .......... 92% 11.5M 0s
#8 5.566  35400K .......... .......... .......... .......... .......... 93% 13.9M 0s
#8 5.569  35450K .......... .......... .......... .......... .......... 93% 12.4M 0s
#8 5.573  35500K .......... .......... .......... .......... .......... 93% 13.6M 0s
#8 5.577  35550K .......... .......... .......... .......... .......... 93% 10.2M 0s
#8 5.582  35600K .......... .......... .......... .......... .......... 93% 13.4M 0s
#8 5.585  35650K .......... .......... .......... .......... .......... 93% 14.7M 0s
#8 5.589  35700K .......... .......... .......... .......... .......... 93% 12.6M 0s
#8 5.592  35750K .......... .......... .......... .......... .......... 93% 12.5M 0s
#8 5.596  35800K .......... .......... .......... .......... .......... 94% 13.4M 0s
#8 5.600  35850K .......... .......... .......... .......... .......... 94% 12.2M 0s
#8 5.604  35900K .......... .......... .......... .......... .......... 94% 14.5M 0s
#8 5.607  35950K .......... .......... .......... .......... .......... 94% 9.89M 0s
#8 5.612  36000K .......... .......... .......... .......... .......... 94% 13.5M 0s
#8 5.616  36050K .......... .......... .......... .......... .......... 94% 13.8M 0s
#8 5.619  36100K .......... .......... .......... .......... .......... 94% 12.9M 0s
#8 5.623  36150K .......... .......... .......... .......... .......... 95% 13.2M 0s
#8 5.627  36200K .......... .......... .......... .......... .......... 95% 14.9M 0s
#8 5.630  36250K .......... .......... .......... .......... .......... 95% 12.6M 0s
#8 5.634  36300K .......... .......... .......... .......... .......... 95% 13.7M 0s
#8 5.638  36350K .......... .......... .......... .......... .......... 95% 10.0M 0s
#8 5.642  36400K .......... .......... .......... .......... .......... 95% 12.5M 0s
#8 5.646  36450K .......... .......... .......... .......... .......... 95% 14.7M 0s
#8 5.650  36500K .......... .......... .......... .......... .......... 95% 12.6M 0s
#8 5.654  36550K .......... .......... .......... .......... .......... 96% 12.8M 0s
#8 5.657  36600K .......... .......... .......... .......... .......... 96% 12.7M 0s
#8 5.661  36650K .......... .......... .......... .......... .......... 96% 13.7M 0s
#8 5.665  36700K .......... .......... .......... .......... .......... 96% 13.5M 0s
#8 5.668  36750K .......... .......... .......... .......... .......... 96% 9.81M 0s
#8 5.673  36800K .......... .......... .......... .......... .......... 96% 13.4M 0s
#8 5.677  36850K .......... .......... .......... .......... .......... 96% 14.7M 0s
#8 5.680  36900K .......... .......... .......... .......... .......... 97% 12.4M 0s
#8 5.684  36950K .......... .......... .......... .......... .......... 97% 13.4M 0s
#8 5.688  37000K .......... .......... .......... .......... .......... 97% 13.1M 0s
#8 5.692  37050K .......... .......... .......... .......... .......... 97% 14.5M 0s
#8 5.695  37100K .......... .......... .......... .......... .......... 97% 12.6M 0s
#8 5.699  37150K .......... .......... .......... .......... .......... 97% 10.6M 0s
#8 5.704  37200K .......... .......... .......... .......... .......... 97% 13.1M 0s
#8 5.707  37250K .......... .......... .......... .......... .......... 97% 13.0M 0s
#8 5.711  37300K .......... .......... .......... .......... .......... 98% 13.9M 0s
#8 5.714  37350K .......... .......... .......... .......... .......... 98% 12.3M 0s
#8 5.719  37400K .......... .......... .......... .......... .......... 98% 12.7M 0s
#8 5.722  37450K .......... .......... .......... .......... .......... 98% 13.7M 0s
#8 5.726  37500K .......... .......... .......... .......... .......... 98% 12.9M 0s
#8 5.730  37550K .......... .......... .......... .......... .......... 98% 10.0M 0s
#8 5.735  37600K .......... .......... .......... .......... .......... 98% 13.7M 0s
#8 5.738  37650K .......... .......... .......... .......... .......... 98% 13.6M 0s
#8 5.742  37700K .......... .......... .......... .......... .......... 99% 13.6M 0s
#8 5.745  37750K .......... .......... .......... .......... .......... 99% 13.0M 0s
#8 5.749  37800K .......... .......... .......... .......... .......... 99% 12.9M 0s
#8 5.753  37850K .......... .......... .......... .......... .......... 99% 13.5M 0s
#8 5.756  37900K .......... .......... .......... .......... .......... 99% 15.0M 0s
#8 5.760  37950K .......... .......... .......... .......... .......... 99% 9.93M 0s
#8 5.765  38000K .......... .......... .......... .......... .......... 99% 12.8M 0s
#8 5.768  38050K .......... .......... .......... .......              100% 21.6M=3.8s
#8 5.770 
#8 5.770 2022-02-15 15:49:54 (9.75 MB/s) - 'opus_testvectors.tar.gz' saved [39001148/39001148]
#8 5.770 
#8 DONE 6.0s

#9 [5/7] WORKDIR opus
#9 sha256:227d169beda6bea6de66ce91ed02dce46ccca785453bfc86a1a0ea0590fc0ec4
#9 DONE 0.1s

#11 [6/7] COPY build.sh /src/
#11 sha256:3cfac5d62d12c5049ac2da7ef7fbf77439e716193f39e3308c33cb8689dac2a6
#11 DONE 0.1s

#12 [7/7] COPY *.c tests/
#12 sha256:56c35fd7b1e8c99f938e9976ee28854d952e1d983f819489e0978df899ae7e50
#12 DONE 0.1s

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:5cbb1c59d81504b7adee458a5b344b88985e241186650398012133f0068a5255 done
#13 naming to gcr.io/fuzzbench/builders/benchmark/opus_opus
#13 naming to gcr.io/fuzzbench/builders/benchmark/opus_opus done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/opus_opus:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:6439cc4c403ff2d6cfc5ae28eaee9d8cc3f071326b04fabd55a1b99fc6218324
#1 transferring dockerfile: 46B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:6eec046c32baea846d8a70178caf9e16a678b0352361aaa4497790b4e50a08c5
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/opus_opus:latest
#3 sha256:0e99a5bb4b09170e13101e61e4b6ec535c1328dad33a1e9748c8cfa251ac2973
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/opus_opus
#5 sha256:7ee8e7325f929096e43044b095dca4e8220285974cab21500d1923d488927223
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus-intermediate
#4 sha256:9bfaef6d4fec4d3da2277ef9d450700ff56b491f5277f2cc570908996ecbc474
#4 ERROR: gcr.io/fuzzbench/builders/afl/opus_opus-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/opus_opus
#5 sha256:7ee8e7325f929096e43044b095dca4e8220285974cab21500d1923d488927223
#5 DONE 0.3s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:5def9597c00b48c5ddfc1e9d64b05d33bf16badd065cb7a9e38d2b444638b2b3
#6 0.350 Cloning into '/afl'...
#6 2.079 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 2.079 
#6 2.079 You are in 'detached HEAD' state. You can look around, make experimental
#6 2.079 changes and commit them, and you can discard any commits you make in this
#6 2.079 state without impacting any branches by switching back to a branch.
#6 2.079 
#6 2.079 If you want to create a new branch to retain commits you create, you may
#6 2.079 do so (now or later) by using -c with the switch command. Example:
#6 2.079 
#6 2.079   git switch -c <new-branch-name>
#6 2.079 
#6 2.079 Or undo this operation with:
#6 2.079 
#6 2.079   git switch -
#6 2.079 
#6 2.079 Turn off this advice by setting config variable advice.detachedHead to false
#6 2.079 
#6 2.079 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 2.097 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 2.098 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 2.275 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 2.279 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 4.651 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.974 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 5.409 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 5.560 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.959 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 6.199 ln -sf afl-as as
#6 6.201 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 6.204 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 6.205 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.3s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:bae47dd8a1a0461b96aade676c14960942b6689677933cca4ea7296c5df25552
#7 0.724 Hit:1 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 0.724 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.724 Hit:3 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.745 Hit:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.768 Hit:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 1.556 Reading package lists...
#7 3.060 Reading package lists...
#7 4.469 Building dependency tree...
#7 4.679 Reading state information...
#7 4.925 wget is already the newest version (1.20.3-1ubuntu2).
#7 4.925 0 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.
#7 4.929 --2022-02-15 15:50:07--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 4.930 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...
#7 4.942 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.
#7 4.966 HTTP request sent, awaiting response... 200 OK
#7 5.140 Length: 9177 (9.0K) [text/plain]
#7 5.140 Saving to: '/afl/afl_driver.cpp'
#7 5.140 
#7 5.140      0K ........                                              100% 8.50M=0.001s
#7 5.141 
#7 5.141 2022-02-15 15:50:07 (8.50 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.141 
#7 6.857 ar: creating /libAFL.a
#7 DONE 6.9s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:1770a63369317b1bf67e4db4040bc779a93d1d1813ea28b5d815fadc39791d12
#8 writing image sha256:1770a63369317b1bf67e4db4040bc779a93d1d1813ea28b5d815fadc39791d12 done
#8 naming to gcr.io/fuzzbench/builders/afl/opus_opus-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:d046bb5651a2fe052c9ab8799f8dab3e2fcee30370933cb2c039de870ced9ce6
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:6750a2e9236c44b75eadf21dc5cf8a4888c543d4b1f99f5b6f0348d6f5e59191
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:a07b096b15348e1840a67ab823de25aa16d516c49b8cb2354fd2a17367b7daff
#8 transferring context: 559B 0.0s done
#8 DONE 0.0s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:0b61802aae627fff24d571329060883784893a8d2c804de2ab4e07aaa0eebfe8
#11 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:a49f3608743006bf6c5bf3d439d423637e6de3300ef2dc0d277754324bb7c9e2
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:55d9e7efa3d37a8f4598d17ecfad9772719d208c56192b83c6c784980895065e
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:4e794d01eb1505d49452bfccd82ecd87ab5075b0cf5cd4521be178e463ae33ef
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:3e04b5fd0a277df2bc5cd3367dbf9178b152077681f3e4447621291a56e5d56f done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:d967647b25ea4a18da556ca33a0ae37aa97d853051747660a07c26e4a0543814
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:025809bdf6b921e14a4d8ee0ce72768c8e816e9d4d13d607b49037132e8e58e2
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/opus_opus-intermediate:latest
#3 sha256:bc544bc526a540e87803dacff08709cacfd6a504ca9bef87d493061eb5c492d8
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:1d1e76ec3978765f79895588d6cbb473c10a535d209a88769dcd0e2397d9a9a4
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/opus_opus-intermediate
#6 sha256:cd543a85e097f13355c7d019127ce57b7a29c6fcd3c4a24329ff6e91e1ae6129
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus
#5 sha256:f2030f5675a0f47ec7fdb2aa401c322e8b5ffea51151848be27d0f77251e2401
#5 ERROR: gcr.io/fuzzbench/builders/afl/opus_opus:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:1d1e76ec3978765f79895588d6cbb473c10a535d209a88769dcd0e2397d9a9a4
#12 transferring context: 669.85kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/opus_opus-intermediate
#6 sha256:cd543a85e097f13355c7d019127ce57b7a29c6fcd3c4a24329ff6e91e1ae6129
#6 DONE 0.3s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:904649bd372fbdbd878a83c8754d5a91b300a2fd7c1bc0f399b8257ae66a1223
#8 DONE 0.4s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:fdb10f3c3e514b58de9b7d8bdfa0090500140495164f459b2d2c321f5467743d
#9 DONE 16.4s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:dd248a4aec779eb0b5b68186a7ac56d23b296d20bf3961b482712f2215198b30
#10 DONE 0.1s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:3929c953d96183be0fd34e45368d13223a7f46b3c953c0803be691f5f2eba3d8
#11 DONE 14.4s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:b394c1fe9e6d485bbf7ec45b40ecfddbaf988122d53c2921292134abb05d6aa5
#13 DONE 0.4s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:1d38933bea5fd4c75eb08b5e0c052fc1377fadccc47e48288a119fb7274dfebf
#14 DONE 0.8s

#15 [stage-1  8/13] COPY benchmarks/opus_opus/benchmark.yaml /
#15 sha256:2be88b16b8425fc55aa5e61530fb1306c736def868f1ab7d9240dea5a0928f36
#15 DONE 0.4s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:70e07bd6d81a7772272bfbd46fd931ae78be38af4eabdd8abf7a12a55e2463af
#16 DONE 0.7s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:25ce12cab5d5dfd28050584e129c57138524bb954726681f03cea0f70590aea5
#17 DONE 0.2s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:83eff5c9dd56d7f5d238fa3c480ea5248122f573c4383a8916c03613024d595d
#18 0.455 Checking out commit 41e36404
#18 0.466 error: pathspec '41e36404' did not match any file(s) known to git
#18 0.471 error: pathspec '41e36404' did not match any file(s) known to git
#18 0.478 error: pathspec '41e36404' did not match any file(s) known to git
#18 0.529 Checkout unsuccessful.
#18 DONE 1.1s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:a7c1d1e6438b7a69d8f218893c8b0eccdd8283ff3586d707bdb3bdb530dc3836
#19 DONE 0.7s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:597413a4310c57f914cb4352a7b9ee974cba609d15c0afbcc42e136e36b2fdec
#20 0.484 Run fuzzer_build to build the target
#20 0.618 FUZZ_TARGET = opus
#20 0.618 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.618 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.659 Building benchmark opus_opus with fuzzer afl
#20 0.662 + set -eu
#20 0.662 + FUZZERS='opus_decode_fuzzer opus_multi_fuzzer'
#20 0.662 + BUILDS=(floating fixed)
#20 0.662 + tar xvf /src/opus_testvectors.tar.gz
#20 0.674 opus_testvectors/
#20 0.674 opus_testvectors/testvector11.bit
#20 0.679 opus_testvectors/testvector05.dec
#20 0.750 opus_testvectors/testvector01.bit
#20 0.758 opus_testvectors/testvector07.dec
#20 0.814 opus_testvectors/testvector09.dec
#20 0.883 opus_testvectors/testvector12.bit
#20 0.883 opus_testvectors/testvector03.dec
#20 0.924 opus_testvectors/testvector01.dec
#20 0.977 opus_testvectors/testvector10.bit
#20 0.984 opus_testvectors/testvector03.bit
#20 0.985 opus_testvectors/testvector09.bit
#20 0.992 opus_testvectors/testvector11.dec
#20 1.048 opus_testvectors/testvector10.dec
#20 1.113 opus_testvectors/testvector04.bit
#20 1.113 opus_testvectors/testvector02.bit
#20 1.114 opus_testvectors/testvector06.bit
#20 1.115 opus_testvectors/testvector08.dec
#20 1.173 opus_testvectors/testvector12.dec
#20 1.219 opus_testvectors/testvector08.bit
#20 1.220 opus_testvectors/testvector07.bit
#20 1.222 opus_testvectors/testvector02.dec
#20 1.275 opus_testvectors/testvector06.dec
#20 1.324 opus_testvectors/testvector04.dec
#20 1.381 opus_testvectors/testvector05.bit
#20 1.382 + [[ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard = *sanitize=memory* ]]
#20 1.382 + ./autogen.sh
#20 1.390 Updating build configuration files, please wait....
#20 6.396 libtoolize: putting auxiliary files in '.'.
#20 6.396 libtoolize: linking file './ltmain.sh'
#20 6.484 libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
#20 6.484 libtoolize: linking file 'm4/libtool.m4'
#20 6.533 libtoolize: linking file 'm4/ltoptions.m4'
#20 6.583 libtoolize: linking file 'm4/ltsugar.m4'
#20 6.633 libtoolize: linking file 'm4/ltversion.m4'
#20 6.683 libtoolize: linking file 'm4/lt~obsolete.m4'
#20 11.32 configure.ac:38: installing './compile'
#20 11.32 configure.ac:36: installing './config.guess'
#20 11.32 configure.ac:36: installing './config.sub'
#20 11.32 configure.ac:33: installing './install-sh'
#20 11.32 configure.ac:33: installing './missing'
#20 11.36 Makefile.am:337: warning: '%'-style pattern rules are a GNU make extension
#20 11.36 Makefile.am:340: warning: '%'-style pattern rules are a GNU make extension
#20 11.36 Makefile.am: installing './INSTALL'
#20 11.47 Makefile.am: installing './depcomp'
#20 11.52 parallel-tests: installing './test-driver'
#20 11.63 + for build in "${BUILDS[@]}"
#20 11.63 + case "$build" in
#20 11.63 + extra_args=
#20 11.63 + ./configure --enable-static --disable-shared --disable-doc --enable-assertions
#20 11.87 checking whether make supports nested variables... yes
#20 11.87 checking for a BSD-compatible install... /usr/bin/install -c
#20 11.89 checking whether build environment is sane... yes
#20 11.91 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 11.91 checking for gawk... no
#20 11.91 checking for mawk... mawk
#20 11.91 checking whether make sets $(MAKE)... yes
#20 11.94 checking whether to enable maintainer-specific portions of Makefiles... yes
#20 11.96 checking build system type... x86_64-pc-linux-gnu
#20 12.06 checking host system type... x86_64-pc-linux-gnu
#20 12.07 checking how to print strings... printf
#20 12.12 checking whether make supports the include directive... yes (GNU style)
#20 12.13 checking for gcc... clang
#20 12.20 checking whether the C compiler works... yes
#20 12.33 checking for C compiler default output file name... a.out
#20 12.33 checking for suffix of executables... 
#20 12.45 checking whether we are cross compiling... no
#20 12.59 checking for suffix of object files... o
#20 12.62 checking whether we are using the GNU C compiler... yes
#20 12.65 checking whether clang accepts -g... yes
#20 12.67 checking for clang option to accept ISO C89... none needed
#20 12.71 checking whether clang understands -c and -o together... yes
#20 12.75 checking dependency style of clang... gcc3
#20 12.82 checking for a sed that does not truncate output... /usr/bin/sed
#20 12.82 checking for grep that handles long lines and -e... /usr/bin/grep
#20 12.83 checking for egrep... /usr/bin/grep -E
#20 12.83 checking for fgrep... /usr/bin/grep -F
#20 12.84 checking for ld used by clang... /usr/bin/ld
#20 12.85 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 12.86 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 12.86 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 12.89 checking whether ln -s works... yes
#20 12.89 checking the maximum length of command line arguments... 1572864
#20 12.91 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 12.91 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 12.91 checking for /usr/bin/ld option to reload object files... -r
#20 12.91 checking for objdump... objdump
#20 12.91 checking how to recognize dependent libraries... pass_all
#20 12.91 checking for dlltool... no
#20 12.91 checking how to associate runtime and link libraries... printf %s\n
#20 12.91 checking for ar... ar
#20 12.92 checking for archiver @FILE support... @
#20 12.95 checking for strip... strip
#20 12.96 checking for ranlib... ranlib
#20 12.96 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 13.14 checking for sysroot... no
#20 13.14 checking for a working dd... /usr/bin/dd
#20 13.17 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 13.20 checking for mt... no
#20 13.20 checking if : is a manifest tool... no
#20 13.21 checking how to run the C preprocessor... clang -E
#20 13.31 checking for ANSI C header files... yes
#20 13.55 checking for sys/types.h... yes
#20 13.61 checking for sys/stat.h... yes
#20 13.66 checking for stdlib.h... yes
#20 13.72 checking for string.h... yes
#20 13.78 checking for memory.h... yes
#20 13.85 checking for strings.h... yes
#20 13.91 checking for inttypes.h... yes
#20 13.97 checking for stdint.h... yes
#20 14.03 checking for unistd.h... yes
#20 14.10 checking for dlfcn.h... yes
#20 14.16 checking for objdir... .libs
#20 14.34 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 14.37 checking for clang option to produce PIC... -fPIC -DPIC
#20 14.37 checking if clang PIC flag -fPIC -DPIC works... yes
#20 14.40 checking if clang static flag -static works... yes
#20 14.57 checking if clang supports -c -o file.o... yes
#20 14.61 checking if clang supports -c -o file.o... (cached) yes
#20 14.61 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 14.63 checking dynamic linker characteristics... GNU/Linux ld.so
#20 14.81 checking how to hardcode library paths into programs... immediate
#20 14.81 checking whether stripping libraries is possible... yes
#20 14.82 checking if libtool supports shared libraries... yes
#20 14.82 checking whether to build shared libraries... no
#20 14.82 checking whether to build static libraries... yes
#20 14.82 checking for clang option to accept ISO C99... none needed
#20 14.89 checking for an ANSI C-conforming const... yes
#20 14.92 checking for inline... inline
#20 14.94 checking dependency style of clang... gcc3
#20 15.00 checking for C/C++ restrict keyword... __restrict
#20 15.04 checking for C99 variable-size arrays... yes
#20 15.07 checking for cos in -lm... yes
#20 15.20 checking if compiler supports SSE intrinsics... yes
#20 15.42 checking if compiler supports SSE2 intrinsics... yes
#20 15.60 checking if compiler supports SSE4.1 intrinsics... no
#20 15.73 checking if compiler supports SSE4.1 intrinsics with -msse4.1... yes
#20 15.93 checking if compiler supports AVX intrinsics... no
#20 16.56 checking if compiler supports AVX intrinsics with -mavx... yes
#20 17.20 checking How to get X86 CPU Info... Inline Assembly
#20 17.33 checking if clang supports -fvisibility=hidden... yes
#20 17.36 checking if clang supports -fstack-protector-strong... yes
#20 17.48 checking whether to add -D_FORTIFY_SOURCE=2 to CFLAGS... yes
#20 17.60 checking if clang supports -Wall -Wextra -Wcast-align -Wnested-externs -Wshadow -Wstrict-prototypes... yes
#20 17.63 checking for lrintf... yes
#20 17.77 checking for lrint... yes
#20 17.91 checking for __malloc_hook... yes
#20 18.09 checking that generated files are newer than configure... done
#20 18.09 configure: creating ./config.status
#20 18.88 config.status: creating Makefile
#20 18.90 config.status: creating opus.pc
#20 18.92 config.status: creating opus-uninstalled.pc
#20 18.95 config.status: creating celt/arm/armopts.s
#20 18.97 config.status: creating doc/Makefile
#20 18.99 config.status: creating doc/Doxyfile
#20 19.02 config.status: creating config.h
#20 19.04 config.status: executing depfiles commands
#20 20.37 config.status: executing libtool commands
#20 20.40 configure:
#20 20.40 ------------------------------------------------------------------------
#20 20.40   opus 1.3.1-101-g66d060c7:  Automatic configuration OK.
#20 20.40 
#20 20.40     Compiler support:
#20 20.40 
#20 20.40       C99 var arrays: ................ yes
#20 20.40       C99 lrintf: .................... yes
#20 20.40       Use alloca: .................... no (using var arrays)
#20 20.40 
#20 20.40     General configuration:
#20 20.40 
#20 20.40       Floating point support: ........ yes
#20 20.40       Fast float approximations: ..... no
#20 20.40       Fixed point debugging: ......... no
#20 20.40       Inline Assembly Optimizations: . No inline ASM for your platform, please send patches
#20 20.40       External Assembly Optimizations: 
#20 20.40       Intrinsics Optimizations: ...... x86 SSE SSE2 SSE4.1 AVX
#20 20.40       Run-time CPU detection: ........ x86 SSE4.1 AVX
#20 20.40       Custom modes: .................. no
#20 20.40       Assertion checking: ............ yes
#20 20.40       Hardening: ..................... yes
#20 20.40       Fuzzing: ....................... no
#20 20.40       Check ASM: ..................... no
#20 20.40 
#20 20.40       API documentation: ............. no
#20 20.40       Extra programs: ................ yes
#20 20.40 ------------------------------------------------------------------------
#20 20.40 
#20 20.40  Type "make; make install" to compile and install
#20 20.40  Type "make check" to run the test suite
#20 20.40 
#20 20.48 ++ nproc
#20 20.48 + make -j8
#20 20.53 make  all-recursive
#20 20.55 make[1]: Entering directory '/src/opus'
#20 20.59 make[2]: Entering directory '/src/opus'
#20 20.63   CC       src/opus.lo
#20 20.63   CC       src/opus_decoder.lo
#20 20.64   CC       src/opus_encoder.lo
#20 20.64   CC       src/opus_multistream.lo
#20 20.64   CC       src/opus_multistream_encoder.lo
#20 20.64   CC       src/opus_multistream_decoder.lo
#20 20.64   CC       src/repacketizer.lo
#20 20.64   CC       src/opus_projection_encoder.lo
#20 20.99   CC       src/opus_projection_decoder.lo
#20 21.04   CC       src/mapping_matrix.lo
#20 21.13   CC       src/analysis.lo
#20 21.18   CC       src/mlp.lo
#20 21.23   CC       src/mlp_data.lo
#20 21.39   CC       src/repacketizer_demo.o
#20 21.50 make[3]: Entering directory '/src/opus/doc'
#20 21.50 make[3]: Nothing to be done for 'all'.
#20 21.50 make[3]: Leaving directory '/src/opus/doc'
#20 21.50   CC       celt/tests/test_unit_cwrs32.o
#20 21.56   CC       celt/tests/test_unit_dft.o
#20 21.58   CC       celt/bands.lo
#20 21.60   CC       celt/celt.lo
#20 21.67   CC       celt/celt_encoder.lo
#20 21.78   CC       celt/celt_decoder.lo
#20 21.86   CC       celt/cwrs.lo
#20 21.97   CC       celt/entcode.lo
#20 22.15   CC       celt/entdec.lo
#20 22.16   CC       celt/entenc.lo
#20 22.17   CC       celt/kiss_fft.lo
#20 22.26   CC       celt/laplace.lo
#20 22.44   CC       celt/mathops.lo
#20 22.50   CC       celt/mdct.lo
#20 22.52   CC       celt/modes.lo
#20 22.61   CC       celt/pitch.lo
#20 22.66   CC       celt/celt_lpc.lo
#20 22.67   CC       celt/quant_bands.lo
#20 22.79   CC       celt/rate.lo
#20 22.82 celt/pitch.c:252:41: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction]
#20 22.82    celt_sig_assert((((unsigned char *)_x-(unsigned char *)NULL)&3)==0);
#20 22.82    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 22.82 ./celt/arch.h:93:38: note: expanded from macro 'celt_sig_assert'
#20 22.82 #define celt_sig_assert(cond) {if (!(cond)) {CELT_FATAL("signal assertion failed: " #cond);}}
#20 22.82                                      ^~~~
#20 22.86   CC       celt/vq.lo
#20 23.10 1 warning generated.
#20 23.12   CC       celt/x86/x86cpu.lo
#20 23.16   CC       celt/x86/x86_celt_map.lo
#20 23.22   CC       celt/x86/pitch_sse.lo
#20 23.23   CC       celt/x86/pitch_sse2.lo
#20 23.37   CC       celt/x86/vq_sse2.lo
#20 23.38   CC       celt/x86/celt_lpc_sse4_1.lo
#20 23.42   CC       celt/x86/pitch_sse4_1.lo
#20 23.51   CC       celt/tests/test_unit_entropy.o
#20 23.55   CC       celt/tests/test_unit_laplace.o
#20 23.60   CC       celt/tests/test_unit_mathops.o
#20 23.63 celt/x86/vq_sse2.c:78:24: warning: cast from 'int *' to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 23.63       _mm_storeu_si128((__m128i*)&iy[j], _mm_setzero_si128());
#20 23.63                        ^~~~~~~~~~~~~~~~
#20 23.63 celt/x86/vq_sse2.c:119:27: warning: cast from 'int *' to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 23.63          _mm_storeu_si128((__m128i*)&iy[j], iy4);
#20 23.63                           ^~~~~~~~~~~~~~~~
#20 23.64 celt/x86/vq_sse2.c:208:28: warning: cast from 'int *' to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 23.64       y4 = _mm_loadu_si128((__m128i*)&iy[j]);
#20 23.64                            ^~~~~~~~~~~~~~~~
#20 23.64 celt/x86/vq_sse2.c:211:24: warning: cast from 'int *' to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 23.65       _mm_storeu_si128((__m128i*)&iy[j], y4);
#20 23.65                        ^~~~~~~~~~~~~~~~
#20 23.68   CC       celt/tests/test_unit_mdct.o
#20 23.71   CC       celt/tests/test_unit_rotation.o
#20 23.71   CC       celt/tests/test_unit_types.o
#20 23.77   CC       src/opus_compare.o
#20 23.77 4 warnings generated.
#20 23.79   CC       src/opus_demo.o
#20 23.84   CC       silk/CNG.lo
#20 23.87   CC       silk/code_signs.lo
#20 23.95   CC       silk/init_decoder.lo
#20 24.18   CC       silk/decode_core.lo
#20 24.20   CC       silk/decode_frame.lo
#20 24.20   CC       silk/decode_parameters.lo
#20 24.33   CC       silk/decode_indices.lo
#20 24.34   CC       silk/decode_pulses.lo
#20 24.42   CC       silk/decoder_set_fs.lo
#20 24.45   CC       silk/dec_API.lo
#20 24.49   CC       silk/enc_API.lo
#20 24.53   CC       silk/encode_indices.lo
#20 24.62   CC       silk/encode_pulses.lo
#20 24.67   CC       silk/gain_quant.lo
#20 24.68   CC       silk/interpolate.lo
#20 24.75   CC       silk/LP_variable_cutoff.lo
#20 24.87   CC       silk/NLSF_decode.lo
#20 24.96   CC       silk/NSQ.lo
#20 24.98   CC       silk/NSQ_del_dec.lo
#20 24.99   CC       silk/PLC.lo
#20 25.04   CC       silk/shell_coder.lo
#20 25.11   CC       silk/tables_gain.lo
#20 25.14   CC       silk/tables_LTP.lo
#20 25.19   CC       silk/tables_NLSF_CB_NB_MB.lo
#20 25.34   CC       silk/tables_NLSF_CB_WB.lo
#20 25.34   CC       silk/tables_other.lo
#20 25.37   CC       silk/tables_pitch_lag.lo
#20 25.43   CC       silk/tables_pulses_per_block.lo
#20 25.43   CC       silk/VAD.lo
#20 25.57   CC       silk/control_audio_bandwidth.lo
#20 25.58   CC       silk/quant_LTP_gains.lo
#20 25.59   CC       silk/VQ_WMat_EC.lo
#20 25.59   CC       silk/HP_variable_cutoff.lo
#20 25.62   CC       silk/NLSF_encode.lo
#20 25.68   CC       silk/NLSF_VQ.lo
#20 25.85   CC       silk/NLSF_unpack.lo
#20 25.88   CC       silk/NLSF_del_dec_quant.lo
#20 25.88   CC       silk/process_NLSFs.lo
#20 25.92   CC       silk/stereo_LR_to_MS.lo
#20 25.95   CC       silk/stereo_MS_to_LR.lo
#20 25.95   CC       silk/check_control_input.lo
#20 25.97   CC       silk/control_SNR.lo
#20 25.97   CC       silk/init_encoder.lo
#20 26.10   CC       silk/control_codec.lo
#20 26.15   CC       silk/A2NLSF.lo
#20 26.20   CC       silk/ana_filt_bank_1.lo
#20 26.26   CC       silk/biquad_alt.lo
#20 26.26   CC       silk/bwexpander_32.lo
#20 26.31   CC       silk/bwexpander.lo
#20 26.32   CC       silk/debug.lo
#20 26.43   CC       silk/decode_pitch.lo
#20 26.45   CC       silk/inner_prod_aligned.lo
#20 26.45   CC       silk/lin2log.lo
#20 26.48   CC       silk/log2lin.lo
#20 26.57   CC       silk/LPC_analysis_filter.lo
#20 26.58   CC       silk/LPC_inv_pred_gain.lo
#20 26.59   CC       silk/table_LSF_cos.lo
#20 26.67   CC       silk/NLSF2A.lo
#20 26.69   CC       silk/NLSF_stabilize.lo
#20 26.72   CC       silk/NLSF_VQ_weights_laroia.lo
#20 26.72   CC       silk/pitch_est_tables.lo
#20 26.73   CC       silk/resampler.lo
#20 26.81   CC       silk/resampler_down2_3.lo
#20 26.91   CC       silk/resampler_down2.lo
#20 26.95   CC       silk/resampler_private_AR2.lo
#20 26.96   CC       silk/resampler_private_down_FIR.lo
#20 26.98   CC       silk/resampler_private_IIR_FIR.lo
#20 27.01   CC       silk/resampler_private_up2_HQ.lo
#20 27.03   CC       silk/resampler_rom.lo
#20 27.04   CC       silk/sigm_Q15.lo
#20 27.10   CC       silk/sort.lo
#20 27.15   CC       silk/sum_sqr_shift.lo
#20 27.19   CC       silk/stereo_decode_pred.lo
#20 27.24   CC       silk/stereo_encode_pred.lo
#20 27.25   CC       silk/stereo_find_predictor.lo
#20 27.27   CC       silk/stereo_quant_pred.lo
#20 27.29   CC       silk/LPC_fit.lo
#20 27.38   CC       silk/float/apply_sine_window_FLP.lo
#20 27.42   CC       silk/float/corrMatrix_FLP.lo
#20 27.45   CC       silk/float/encode_frame_FLP.lo
#20 27.45   CC       silk/float/find_LPC_FLP.lo
#20 27.46   CC       silk/float/find_LTP_FLP.lo
#20 27.57   CC       silk/float/find_pitch_lags_FLP.lo
#20 27.61   CC       silk/float/find_pred_coefs_FLP.lo
#20 27.65   CC       silk/float/LPC_analysis_filter_FLP.lo
#20 27.70   CC       silk/float/LTP_analysis_filter_FLP.lo
#20 27.78   CC       silk/float/LTP_scale_ctrl_FLP.lo
#20 27.80   CC       silk/float/noise_shape_analysis_FLP.lo
#20 27.83   CC       silk/float/process_gains_FLP.lo
#20 27.92   CC       silk/float/regularize_correlations_FLP.lo
#20 27.97   CC       silk/float/residual_energy_FLP.lo
#20 28.03   CC       silk/float/warped_autocorrelation_FLP.lo
#20 28.07   CC       silk/float/wrappers_FLP.lo
#20 28.10   CC       silk/float/autocorrelation_FLP.lo
#20 28.14   CC       silk/float/burg_modified_FLP.lo
#20 28.23   CC       silk/float/bwexpander_FLP.lo
#20 28.25   CC       silk/float/energy_FLP.lo
#20 28.35   CC       silk/float/inner_product_FLP.lo
#20 28.41   CC       silk/float/k2a_FLP.lo
#20 28.41   CC       silk/float/LPC_inv_pred_gain_FLP.lo
#20 28.49   CC       silk/float/pitch_analysis_core_FLP.lo
#20 28.56   CC       silk/float/scale_copy_vector_FLP.lo
#20 28.60   CC       silk/float/scale_vector_FLP.lo
#20 28.63   CC       silk/float/schur_FLP.lo
#20 28.66   CC       silk/float/sort_FLP.lo
#20 28.68   CC       silk/x86/NSQ_sse4_1.lo
#20 28.73   CC       silk/x86/NSQ_del_dec_sse4_1.lo
#20 28.74   CC       silk/x86/x86_silk_map.lo
#20 28.91   CC       silk/x86/VAD_sse4_1.lo
#20 28.94   CC       silk/x86/VQ_WMat_EC_sse4_1.lo
#20 28.97   CC       silk/tests/test_unit_LPC_inv_pred_gain.o
#20 28.99 silk/x86/NSQ_sse4_1.c:297:39: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 28.99     a_Q12_01234567 = _mm_loadu_si128( (__m128i *)(&a_Q12[ 0 ] ) );
#20 28.99                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.99 silk/x86/NSQ_sse4_1.c:  CC       tests/test_opus_api.o
#20 28.99 299:39: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 28.99     a_Q12_89ABCDEF = _mm_loadu_si128( (__m128i *)(&a_Q12[ 8 ] ) );
#20 28.99                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.99 silk/x86/NSQ_sse4_1.c:305:44: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 28.99     AR_shp_Q13_76543210 = _mm_loadu_si128( (__m128i *)(&AR_shp_Q13[0] ) );
#20 28.99                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.99 silk/x86/NSQ_sse4_1.c:310:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.99     xmm_tempa = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[-16]) );
#20 28.99                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.99 silk/x86/NSQ_sse4_1.c:311:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.99     xmm_tempb = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[-12]) );
#20 28.99                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.99 silk/x86/NSQ_sse4_1.c:319:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.99     xmm_tempa = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -8 ]) );
#20 28.99                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.99 silk/x86/NSQ_sse4_1.c:320:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.99     xmm_tempb = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -4 ]) );
#20 28.99                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.99 silk/x86/NSQ_sse4_1.c:329:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.99     xmm_tempa = _mm_loadu_si128( (__m128i *)(&(NSQ->sAR2_Q14[ 0 ]) ) );
#20 28.99                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.99 silk/x86/NSQ_sse4_1.c:330:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 28.99     xmm_tempb = _mm_loadu_si128( (__m128i *)(&(NSQ->sAR2_Q14[ 4 ]) ) );
#20 28.99                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 28.99 silk/x86/NSQ_sse4_1.c:398:30: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.00                 b_Q14_3210 = OP_CVTEPI16_EPI32_M64( b_Q14 );
#20 29.00                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.00 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.00  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.00                                      ^~~~~~~~~~~~~~
#20 29.00 silk/x86/NSQ_sse4_1.c:402:54: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.00                 pred_lag_ptr_0123 = _mm_loadu_si128( (__m128i *)(&pred_lag_ptr[ -3 ] ) );
#20 29.00                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.00 silk/x86/NSQ_sse4_1.c:541:23: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.00     _mm_storeu_si128( (__m128i *)(&NSQ->sAR2_Q14[ 4 ]), xmm_tempa );
#20 29.00                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.00 silk/x86/NSQ_sse4_1.c:542:23: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.01     _mm_storeu_si128( (__m128i *)(&NSQ->sAR2_Q14[ 0 ]), xmm_tempb );
#20 29.01                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.01 silk/x86/NSQ_sse4_1.c:558:48: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.01             xmm_xq_Q14_3210 = _mm_loadu_si128( (__m128i *)(&(psLPC_Q14[ i + 0 ] ) ) );
#20 29.01                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.01 silk/x86/NSQ_sse4_1.c:559:48: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.01             xmm_xq_Q14_7654 = _mm_loadu_si128( (__m128i *)(&(psLPC_Q14[ i + 4 ] ) ) );
#20 29.01                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.01 silk/x86/NSQ_sse4_1.c:590:31: warning: cast from 'opus_int16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.01             _mm_storeu_si128( (__m128i *)(&xq[ i ] ), xmm_xq_Q14_3210 );
#20 29.01                               ^~~~~~~~~~~~~~~~~~~~~~
#20 29.01 silk/x86/NSQ_sse4_1.c:638:42: warning: cast from 'const opus_int32 *' (aka 'const int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.01         xmm_x_Q3_x2x0 = _mm_loadu_si128( (__m128i *)(&(x_Q3[ i ] ) ) );
#20 29.01                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.01 silk/x86/NSQ_sse4_1.c:651:27: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.01         _mm_storeu_si128( (__m128i *)(&(x_sc_Q10[ i ] ) ), xmm_x_Q3_x2x0 );
#20 29.01                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.01 silk/x86/NSQ_sse4_1.c:683:54: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.01             xmm_sLTP_shp_Q14_x2x0 = _mm_loadu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ) );
#20 29.01                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.02 silk/x86/NSQ_sse4_1.c:695:31: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.02             _mm_storeu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ), xmm_sLTP_shp_Q14_x2x0 );
#20 29.02                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.04 silk/x86/NSQ_del_dec_sse4_1.c:363:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.04     a_Q12_0123 = OP_CVTEPI16_EPI32_M64( a_Q12 );
#20 29.04                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.04 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.04  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.04                                      ^~~~~~~~~~~~~~
#20 29.04 silk/x86/NSQ_del_dec_sse4_1.c:364:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.04     a_Q12_4567 = OP_CVTEPI16_EPI32_M64( a_Q12 + 4 );
#20 29.04                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.04 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.04  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.04                                      ^~~~~~~~~~~~~~
#20 29.04 silk/x86/NSQ_del_dec_sse4_1.c:367:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.04         a_Q12_89AB = OP_CVTEPI16_EPI32_M64( a_Q12 + 8 );
#20 29.04                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.04 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.05  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.05                                      ^~~~~~~~~~~~~~
#20 29.05 silk/x86/NSQ_del_dec_sse4_1.c:368:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.05         a_Q12_CDEF = OP_CVTEPI16_EPI32_M64( a_Q12 + 12 );
#20 29.05                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.05 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.05  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.05                                      ^~~~~~~~~~~~~~
#20 29.05 silk/x86/NSQ_del_dec_sse4_1.c:372:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.05         b_Q12_0123 = OP_CVTEPI16_EPI32_M64( b_Q14 );
#20 29.05                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.05 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.05  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.05                                      ^~~~~~~~~~~~~~
#20 29.05 silk/x86/NSQ_del_dec_sse4_1.c:385:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.05                 pred_lag_ptr_tmp    = _mm_loadu_si128( (__m128i *)(&pred_lag_ptr[ -3 ] ) );
#20 29.05   CC       tests/test_opus_decode.o
#20 29.05                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.05 silk/x86/NSQ_del_dec_sse4_1.c:440:52: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.05                 psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -3 ] ) ); /* -3, -2 , -1, 0 */
#20 29.05                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.05 silk/x86/NSQ_del_dec_sse4_1.c:454:52: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.05                 psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -7 ] ) );
#20 29.05                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.05 silk/x86/NSQ_del_dec_sse4_1.c:469:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.06                     psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -11 ] ) );
#20 29.06                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.06 silk/x86/NSQ_del_dec_sse4_1.c:482:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.06                     psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -15 ] ) );
#20 29.06                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.07 silk/x86/NSQ_del_dec_sse4_1.c:768:42: warning: cast from 'const opus_int32 *' (aka 'const int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.07         xmm_x_Q3_x2x0 = _mm_loadu_si128( (__m128i *)(&(x_Q3[ i ] ) ) );
#20 29.07                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.07 silk/x86/NSQ_del_dec_sse4_1.c:780:27: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.07         _mm_storeu_si128( (__m128i *)(&(x_sc_Q10[ i ])), xmm_x_Q3_x2x0 );
#20 29.07                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.08 silk/x86/NSQ_del_dec_sse4_1.c:813:58: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.08                 xmm_sLTP_shp_Q14_x2x0 = _mm_loadu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ) );
#20 29.08                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.08 silk/x86/NSQ_del_dec_sse4_1.c:825:35: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.08                 _mm_storeu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ), xmm_sLTP_shp_Q14_x2x0 );
#20 29.08                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.23 silk/x86/VAD_sse4_1.c:139:44: warning: cast from 'opus_int16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.23                 xmm_X   = _mm_loadu_si128( (__m128i *)&(X[ X_offset[ b ] + i + dec_subframe_offset ] ) );
#20 29.23                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.28 silk/x86/VQ_WMat_EC_sse4_1.c:67:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 29.28         C_tmp1 = OP_CVTEPI16_EPI32_M64( &in_Q14[ 1 ] );
#20 29.28                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.28 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 29.28  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 29.28                                      ^~~~~~~~~~~~~~
#20 29.28 silk/x86/VQ_WMat_EC_sse4_1.c:68:18: warning: cast from 'const opus_int8 *' (aka 'const signed char *') to 'int *' increases required alignment from 1 to 4 [-Wcast-align]
#20 29.28         C_tmp2 = OP_CVTEPI8_EPI32_M32( &cb_row_Q7[ 1 ] );
#20 29.28                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.28 ./celt/x86/x86cpu.h:60:40: note: expanded from macro 'OP_CVTEPI8_EPI32_M32'
#20 29.28  (_mm_cvtepi8_epi32(_mm_cvtsi32_si128(*(int *)(x))))
#20 29.28                                        ^~~~~~~~~~
#20 29.28 silk/x86/VQ_WMat_EC_sse4_1.c:86:35: warning: cast from 'const opus_int32 *' (aka 'const int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 29.28         C_tmp3 = _mm_loadu_si128( (__m128i *)(&W_Q18[ 1 ] ) );
#20 29.28                                   ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 29.33   CC       tests/test_opus_encode.o
#20 29.35 3 warnings generated.
#20 29.37   CC       tests/opus_encode_regressions.o
#20 29.55 20 warnings generated.
#20 29.56   CC       tests/test_opus_padding.o
#20 29.57   CC       tests/test_opus_projection.o
#20 29.62 1 warning generated.
#20 29.62   CC       doc/trivial_example.o
#20 29.63   CCLD     celt/tests/test_unit_cwrs32
#20 29.64 tests/test_opus_padding.c:81:7: warning: variable 'tests' set but not used [-Wunused-but-set-variable]
#20 29.64   int tests = 0;;
#20 29.64       ^
#20 29.66 1 warning generated.
#20 29.68   CCLD     celt/tests/test_unit_dft
#20 29.76   CCLD     celt/tests/test_unit_entropy
#20 29.82 14 warnings generated.
#20 29.84   CCLD     celt/tests/test_unit_laplace
#20 29.88   CCLD     celt/tests/test_unit_mathops
#20 30.00   CCLD     celt/tests/test_unit_mdct
#20 30.00   CCLD     celt/tests/test_unit_rotation
#20 30.07   CCLD     celt/tests/test_unit_types
#20 30.12   CCLD     opus_compare
#20 30.17   CCLD     libopus.la
#20 30.29   CCLD     silk/tests/test_unit_LPC_inv_pred_gain
#20 30.31   CCLD     tests/test_opus_projection
#20 30.75   CCLD     opus_demo
#20 30.75   CCLD     tests/test_opus_api
#20 30.75   CCLD     tests/test_opus_decode
#20 30.75   CCLD     tests/test_opus_encode
#20 30.75   CCLD     repacketizer_demo
#20 30.75   CCLD     tests/test_opus_padding
#20 30.83   CCLD     trivial_example
#20 31.23 make[2]: Leaving directory '/src/opus'
#20 31.23 make[1]: Leaving directory '/src/opus'
#20 31.23 + for fuzzer in $FUZZERS
#20 31.23 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -Iinclude tests/opus_decode_fuzzer.c -o opus_decode_fuzzer.o
#20 31.29 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard opus_decode_fuzzer.o -o /out/opus_decode_fuzzer_floating /libAFL.a .libs/libopus.a
#20 31.61 + '[' -f tests/opus_decode_fuzzer.options ']'
#20 31.61 + cp tests/opus_decode_fuzzer.options /out/opus_decode_fuzzer_floating.options
#20 31.61 + zip -r /out/opus_decode_fuzzer_floating_seed_corpus.zip opus_testvectors/
#20 31.62   adding: opus_testvectors/ (stored 0%)
#20 31.62   adding: opus_testvectors/testvector03.bit (deflated 2%)
#20 31.63   adding: opus_testvectors/testvector01.bit (deflated 15%)
#20 31.66   adding: opus_testvectors/testvector07.bit (deflated 4%)
#20 31.67   adding: opus_testvectors/testvector02.bit (deflated 3%)
#20 31.68   adding: opus_testvectors/testvector12.bit (deflated 4%)
#20 31.68   adding: opus_testvectors/testvector03.dec (deflated 48%)
#20 31.92   adding: opus_testvectors/testvector06.dec (deflated 45%)
#20 32.23   adding: opus_testvectors/testvector11.dec (deflated 7%)
#20 32.51   adding: opus_testvectors/testvector11.bit (deflated 0%)
#20 32.53   adding: opus_testvectors/testvector06.bit (deflated 3%)
#20 32.54   adding: opus_testvectors/testvector08.dec (deflated 38%)
#20 32.86   adding: opus_testvectors/testvector02.dec (deflated 50%)
#20 33.14   adding: opus_testvectors/testvector01.dec (deflated 29%)
#20 33.55   adding: opus_testvectors/testvector05.bit (deflated 3%)
#20 33.55   adding: opus_testvectors/testvector08.bit (deflated 1%)
#20 33.56   adding: opus_testvectors/testvector09.bit (deflated 11%)
#20 33.59   adding: opus_testvectors/testvector10.dec (deflated 49%)
#20 33.90   adding: opus_testvectors/testvector07.dec (deflated 44%)
#20 34.16   adding: opus_testvectors/testvector04.dec (deflated 49%)
#20 34.46   adding: opus_testvectors/testvector09.dec (deflated 43%)
#20 34.79   adding: opus_testvectors/testvector05.dec (deflated 47%)
#20 35.16   adding: opus_testvectors/testvector12.dec (deflated 61%)
#20 35.46   adding: opus_testvectors/testvector10.bit (deflated 9%)
#20 35.49   adding: opus_testvectors/testvector04.bit (deflated 3%)
#20 35.49 + for fuzzer in $FUZZERS
#20 35.49 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -Iinclude tests/opus_multi_fuzzer.c -o opus_multi_fuzzer.o
#20 35.56 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard opus_multi_fuzzer.o -o /out/opus_multi_fuzzer_floating /libAFL.a .libs/libopus.a
#20 35.82 + '[' -f tests/opus_multi_fuzzer.options ']'
#20 35.82 + zip -r /out/opus_multi_fuzzer_floating_seed_corpus.zip opus_testvectors/
#20 35.82   adding: opus_testvectors/ (stored 0%)
#20 35.82   adding: opus_testvectors/testvector03.bit (deflated 2%)
#20 35.83   adding: opus_testvectors/testvector01.bit (deflated 15%)
#20 35.86   adding: opus_testvectors/testvector07.bit (deflated 4%)
#20 35.87   adding: opus_testvectors/testvector02.bit (deflated 3%)
#20 35.88   adding: opus_testvectors/testvector12.bit (deflated 4%)
#20 35.88   adding: opus_testvectors/testvector03.dec (deflated 48%)
#20 36.13   adding: opus_testvectors/testvector06.dec (deflated 45%)
#20 36.43   adding: opus_testvectors/testvector11.dec (deflated 7%)
#20 36.72   adding: opus_testvectors/testvector11.bit (deflated 0%)
#20 36.73   adding: opus_testvectors/testvector06.bit (deflated 3%)
#20 36.74   adding: opus_testvectors/testvector08.dec (deflated 38%)
#20 37.07   adding: opus_testvectors/testvector02.dec (deflated 50%)
#20 37.34   adding: opus_testvectors/testvector01.dec (deflated 29%)
#20 37.75   adding: opus_testvectors/testvector05.bit (deflated 3%)
#20 37.76   adding: opus_testvectors/testvector08.bit (deflated 1%)
#20 37.76   adding: opus_testvectors/testvector09.bit (deflated 11%)
#20 37.80   adding: opus_testvectors/testvector10.dec (deflated 49%)
#20 38.11   adding: opus_testvectors/testvector07.dec (deflated 44%)
#20 38.37   adding: opus_testvectors/testvector04.dec (deflated 49%)
#20 38.68   adding: opus_testvectors/testvector09.dec (deflated 43%)
#20 39.02   adding: opus_testvectors/testvector05.dec (deflated 47%)
#20 39.35   adding: opus_testvectors/testvector12.dec (deflated 61%)
#20 39.65   adding: opus_testvectors/testvector10.bit (deflated 9%)
#20 39.69   adding: opus_testvectors/testvector04.bit (deflated 3%)
#20 39.69 + for build in "${BUILDS[@]}"
#20 39.69 + case "$build" in
#20 39.69 + extra_args=' --enable-fixed-point --enable-check-asm'
#20 39.69 + ./configure --enable-fixed-point --enable-check-asm --enable-static --disable-shared --disable-doc --enable-assertions
#20 39.94 checking whether make supports nested variables... yes
#20 39.94 checking for a BSD-compatible install... /usr/bin/install -c
#20 39.96 checking whether build environment is sane... yes
#20 39.98 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 39.98 checking for gawk... no
#20 39.98 checking for mawk... mawk
#20 39.98 checking whether make sets $(MAKE)... yes
#20 40.01 checking whether to enable maintainer-specific portions of Makefiles... yes
#20 40.03 checking build system type... x86_64-pc-linux-gnu
#20 40.10 checking host system type... x86_64-pc-linux-gnu
#20 40.10 checking how to print strings... printf
#20 40.16 checking whether make supports the include directive... yes (GNU style)
#20 40.17 checking for gcc... clang
#20 40.24 checking whether the C compiler works... yes
#20 40.36 checking for C compiler default output file name... a.out
#20 40.36 checking for suffix of executables... 
#20 40.48 checking whether we are cross compiling... no
#20 40.61 checking for suffix of object files... o
#20 40.64 checking whether we are using the GNU C compiler... yes
#20 40.67 checking whether clang accepts -g... yes
#20 40.69 checking for clang option to accept ISO C89... none needed
#20 40.73 checking whether clang understands -c and -o together... yes
#20 40.78 checking dependency style of clang... gcc3
#20 40.83 checking for a sed that does not truncate output... /usr/bin/sed
#20 40.84 checking for grep that handles long lines and -e... /usr/bin/grep
#20 40.85 checking for egrep... /usr/bin/grep -E
#20 40.85 checking for fgrep... /usr/bin/grep -F
#20 40.85 checking for ld used by clang... /usr/bin/ld
#20 40.87 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 40.88 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 40.88 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 40.92 checking whether ln -s works... yes
#20 40.92 checking the maximum length of command line arguments... 1572864
#20 40.93 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 40.93 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 40.93 checking for /usr/bin/ld option to reload object files... -r
#20 40.93 checking for objdump... objdump
#20 40.93 checking how to recognize dependent libraries... pass_all
#20 40.94 checking for dlltool... no
#20 40.94 checking how to associate runtime and link libraries... printf %s\n
#20 40.94 checking for ar... ar
#20 40.94 checking for archiver @FILE support... @
#20 40.98 checking for strip... strip
#20 40.98 checking for ranlib... ranlib
#20 40.98 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 41.16 checking for sysroot... no
#20 41.16 checking for a working dd... /usr/bin/dd
#20 41.16 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 41.20 checking for mt... no
#20 41.20 checking if : is a manifest tool... no
#20 41.21 checking how to run the C preprocessor... clang -E
#20 41.30 checking for ANSI C header files... yes
#20 41.54 checking for sys/types.h... yes
#20 41.60 checking for sys/stat.h... yes
#20 41.65 checking for stdlib.h... yes
#20 41.71 checking for string.h... yes
#20 41.77 checking for memory.h... yes
#20 41.83 checking for strings.h... yes
#20 41.89 checking for inttypes.h... yes
#20 41.95 checking for stdint.h... yes
#20 42.01 checking for unistd.h... yes
#20 42.07 checking for dlfcn.h... yes
#20 42.13 checking for objdir... .libs
#20 42.30 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 42.33 checking for clang option to produce PIC... -fPIC -DPIC
#20 42.33 checking if clang PIC flag -fPIC -DPIC works... yes
#20 42.36 checking if clang static flag -static works... yes
#20 42.54 checking if clang supports -c -o file.o... yes
#20 42.58 checking if clang supports -c -o file.o... (cached) yes
#20 42.58 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 42.61 checking dynamic linker characteristics... GNU/Linux ld.so
#20 42.78 checking how to hardcode library paths into programs... immediate
#20 42.78 checking whether stripping libraries is possible... yes
#20 42.78 checking if libtool supports shared libraries... yes
#20 42.78 checking whether to build shared libraries... no
#20 42.78 checking whether to build static libraries... yes
#20 42.78 checking for clang option to accept ISO C99... none needed
#20 42.85 checking for an ANSI C-conforming const... yes
#20 42.88 checking for inline... inline
#20 42.91 checking dependency style of clang... gcc3
#20 42.96 checking for C/C++ restrict keyword... __restrict
#20 43.00 checking for C99 variable-size arrays... yes
#20 43.03 checking for cos in -lm... yes
#20 43.16 checking if compiler supports SSE intrinsics... yes
#20 43.35 checking if compiler supports SSE2 intrinsics... yes
#20 43.54 checking if compiler supports SSE4.1 intrinsics... no
#20 43.65 checking if compiler supports SSE4.1 intrinsics with -msse4.1... yes
#20 43.84 checking if compiler supports AVX intrinsics... no
#20 44.38 checking if compiler supports AVX intrinsics with -mavx... yes
#20 45.00 checking How to get X86 CPU Info... Inline Assembly
#20 45.14 checking if clang supports -fvisibility=hidden... yes
#20 45.16 checking if clang supports -fstack-protector-strong... yes
#20 45.28 checking whether to add -D_FORTIFY_SOURCE=2 to CFLAGS... yes
#20 45.41 checking if clang supports -Wall -Wextra -Wcast-align -Wnested-externs -Wshadow -Wstrict-prototypes... yes
#20 45.44 checking for lrintf... yes
#20 45.58 checking for lrint... yes
#20 45.70 checking for __malloc_hook... yes
#20 45.89 checking that generated files are newer than configure... done
#20 45.89 configure: creating ./config.status
#20 46.68 config.status: creating Makefile
#20 46.70 config.status: creating opus.pc
#20 46.72 config.status: creating opus-uninstalled.pc
#20 46.74 config.status: creating celt/arm/armopts.s
#20 46.77 config.status: creating doc/Makefile
#20 46.80 config.status: creating doc/Doxyfile
#20 46.82 config.status: creating config.h
#20 46.84 config.status: executing depfiles commands
#20 46.89 config.status: executing libtool commands
#20 46.91 configure:
#20 46.91 ------------------------------------------------------------------------
#20 46.91   opus 1.3.1-101-g66d060c7:  Automatic configuration OK.
#20 46.91 
#20 46.91     Compiler support:
#20 46.91 
#20 46.91       C99 var arrays: ................ yes
#20 46.91       C99 lrintf: .................... yes
#20 46.91       Use alloca: .................... no (using var arrays)
#20 46.91 
#20 46.91     General configuration:
#20 46.91 
#20 46.91       Floating point support: ........ no
#20 46.91       Fast float approximations: ..... no
#20 46.91       Fixed point debugging: ......... no
#20 46.91       Inline Assembly Optimizations: . No inline ASM for your platform, please send patches
#20 46.91       External Assembly Optimizations: 
#20 46.91       Intrinsics Optimizations: ...... x86 SSE SSE2 SSE4.1 AVX
#20 46.91       Run-time CPU detection: ........ x86 SSE4.1 AVX
#20 46.91       Custom modes: .................. no
#20 46.91       Assertion checking: ............ yes
#20 46.91       Hardening: ..................... yes
#20 46.91       Fuzzing: ....................... no
#20 46.91       Check ASM: ..................... yes
#20 46.91 
#20 46.91       API documentation: ............. no
#20 46.91       Extra programs: ................ yes
#20 46.91 ------------------------------------------------------------------------
#20 46.91 
#20 46.91  Type "make; make install" to compile and install
#20 46.91  Type "make check" to run the test suite
#20 46.91 
#20 46.99 ++ nproc
#20 47.00 + make -j8
#20 47.09 make  all-recursive
#20 47.16 make[1]: Entering directory '/src/opus'
#20 47.25 make[2]: Entering directory '/src/opus'
#20 47.31   CC       src/opus.lo
#20 47.31   CC       src/opus_decoder.lo
#20 47.31   CC       src/opus_encoder.lo
#20 47.31   CC       src/opus_multistream.lo
#20 47.31   CC       src/opus_multistream_encoder.lo
#20 47.31   CC       src/opus_multistream_decoder.lo
#20 47.31   CC       src/repacketizer.lo
#20 47.31   CC       src/opus_projection_encoder.lo
#20 47.63   CC       src/opus_projection_decoder.lo
#20 47.68   CC       src/mapping_matrix.lo
#20 47.72   CC       src/analysis.lo
#20 47.75   CC       src/mlp.lo
#20 47.86   CC       src/mlp_data.lo
#20 47.96   CC       src/repacketizer_demo.o
#20 48.02   CC       silk/tests/test_unit_LPC_inv_pred_gain.o
#20 48.14   CC       tests/test_opus_api.o
#20 48.18   CC       tests/test_opus_decode.o
#20 48.23   CC       tests/test_opus_encode.o
#20 48.27   CC       tests/opus_encode_regressions.o
#20 48.39   CC       tests/test_opus_projection.o
#20 48.53 make[3]: Entering directory '/src/opus/doc'
#20 48.53 make[3]: Nothing to be done for 'all'.
#20 48.53 make[3]: Leaving directory '/src/opus/doc'
#20 48.54   CC       celt/tests/test_unit_cwrs32.o
#20 48.58   CC       celt/tests/test_unit_dft.o
#20 48.77   CC       celt/bands.lo
#20 48.79   CC       celt/celt.lo
#20 48.82   CC       celt/celt_encoder.lo
#20 48.99   CC       celt/celt_decoder.lo
#20 49.22   CC       celt/cwrs.lo
#20 49.22   CC       celt/entcode.lo
#20 49.30   CC       celt/entdec.lo
#20 49.37   CC       celt/entenc.lo
#20 49.40   CC       celt/kiss_fft.lo
#20 49.52   CC       celt/laplace.lo
#20 49.64   CC       celt/mathops.lo
#20 49.66   CC       celt/mdct.lo
#20 49.78   CC       celt/modes.lo
#20 49.82   CC       celt/pitch.lo
#20 49.96   CC       celt/celt_lpc.lo
#20 49.98   CC       celt/quant_bands.lo
#20 50.06 celt/pitch.c:252:41: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction]
#20 50.06    celt_sig_assert((((unsigned char *)_x-(unsigned char *)NULL)&3)==0);
#20 50.06    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 50.06 ./celt/arch.h:93:38: note: expanded from macro 'celt_sig_assert'
#20 50.06 #define celt_sig_assert(cond) {if (!(cond)) {CELT_FATAL("signal assertion failed: " #cond);}}
#20 50.06                                      ^~~~
#20 50.06   CC       celt/rate.lo
#20 50.07   CC       celt/vq.lo
#20 50.61   CC       celt/x86/x86cpu.lo
#20 50.63   CC       celt/x86/x86_celt_map.lo
#20 50.64 1 warning generated.
#20 50.66   CC       celt/x86/pitch_sse.lo
#20 50.69   CC       celt/x86/pitch_sse2.lo
#20 50.72   CC       celt/x86/vq_sse2.lo
#20 50.80   CC       celt/x86/celt_lpc_sse4_1.lo
#20 50.86   CC       celt/x86/pitch_sse4_1.lo
#20 50.92   CC       celt/tests/test_unit_entropy.o
#20 50.94   CC       celt/tests/test_unit_laplace.o
#20 50.97 celt/x86/pitch_sse2.c:59:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 50.97         inVec1_76543210 = _mm_loadu_si128((__m128i *)(&x[i + 0]));
#20 50.97                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 50.97 celt/x86/pitch_sse2.c:60:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 50.97         inVec2_76543210 = _mm_loadu_si128((__m128i *)(&y[i + 0]));
#20 50.97                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 50.97 celt/x86/pitch_sse2.c:62:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 50.98         inVec1_FEDCBA98 = _mm_loadu_si128((__m128i *)(&x[i + 8]));
#20 50.98                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 50.98 celt/x86/pitch_sse2.c:63:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 50.98         inVec2_FEDCBA98 = _mm_loadu_si128((__m128i *)(&y[i + 8]));
#20 50.98                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 50.98 celt/x86/pitch_sse2.c:76:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 50.99         inVec1_76543210 = _mm_loadu_si128((__m128i *)(&x[i + 0]));
#20 50.99                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 50.99 celt/x86/pitch_sse2.c:77:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 50.99         inVec2_76543210 = _mm_loadu_si128((__m128i *)(&y[i + 0]));
#20 50.99                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.02   CC       celt/tests/test_unit_mathops.o
#20 51.04 6 warnings generated.
#20 51.05   CC       celt/tests/test_unit_mdct.o
#20 51.12 celt/x86/celt_lpc_sse4_1.c:73:14: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.12       vecX = OP_CVTEPI16_EPI32_M64(x + i);
#20 51.12              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.12 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.12  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.12                                      ^~~~~~~~~~~~~~
#20 51.12 celt/x86/celt_lpc_sse4_1.c:76:24: warning: cast from 'opus_val16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.12       _mm_storel_epi64((__m128i *)(y + i), vecSum);
#20 51.12                        ^~~~~~~~~~~~~~~~~~
#20 51.16 celt/x86/pitch_sse4_1.c:61:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.16         inVec1_76543210 = _mm_loadu_si128((__m128i *)(&x[i + 0]));
#20 51.16                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.16 celt/x86/pitch_sse4_1.c:62:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.16         inVec2_76543210 = _mm_loadu_si128((__m128i *)(&y[i + 0]));
#20 51.16                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.16 celt/x86/pitch_sse4_1.c:64:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.16         inVec1_FEDCBA98 = _mm_loadu_si128((__m128i *)(&x[i + 8]));
#20 51.16                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.16 celt/x86/pitch_sse4_1.c:65:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.16         inVec2_FEDCBA98 = _mm_loadu_si128((__m128i *)(&y[i + 8]));
#20 51.16                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.16 celt/x86/pitch_sse4_1.c:78:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.16         inVec1_76543210 = _mm_loadu_si128((__m128i *)(&x[i + 0]));
#20 51.16                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.16 celt/x86/pitch_sse4_1.c:79:43: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.16         inVec2_76543210 = _mm_loadu_si128((__m128i *)(&y[i + 0]));
#20 51.16                                           ^~~~~~~~~~~~~~~~~~~~~~
#20 51.16 celt/x86/pitch_sse4_1.c:89:23: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.16         inVec1_3210 = OP_CVTEPI16_EPI32_M64(&x[i + 0]);
#20 51.16                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.16 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.16  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.16                                      ^~~~~~~~~~~~~~
#20 51.16 celt/x86/pitch_sse4_1.c:90:23: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.16         inVec2_3210 = OP_CVTEPI16_EPI32_M64(&y[i + 0]);
#20 51.16                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.16 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.16  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.16                                      ^~~~~~~~~~~~~~
#20 51.17   CC       celt/tests/test_unit_rotation.o
#20 51.17 celt/x86/pitch_sse4_1.c:137:32: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.17         vecX = _mm_loadu_si128((__m128i *)(&x[j + 0]));
#20 51.17                                ^~~~~~~~~~~~~~~~~~~~~~
#20 51.17 celt/x86/pitch_sse4_1.c:138:33: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.17         vecY0 = _mm_loadu_si128((__m128i *)(&y[j + 0]));
#20 51.17                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 51.17 celt/x86/pitch_sse4_1.c:139:33: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.17         vecY1 = _mm_loadu_si128((__m128i *)(&y[j + 1]));
#20 51.17                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 51.17 celt/x86/pitch_sse4_1.c:140:33: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.17         vecY2 = _mm_loadu_si128((__m128i *)(&y[j + 2]));
#20 51.17                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 51.17 celt/x86/pitch_sse4_1.c:141:33: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.17         vecY3 = _mm_loadu_si128((__m128i *)(&y[j + 3]));
#20 51.17                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 51.17 celt/x86/pitch_sse4_1.c:166:16: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.17         vecX = OP_CVTEPI16_EPI32_M64(&x[j + 0]);
#20 51.17                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.17 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.17  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.17                                      ^~~~~~~~~~~~~~
#20 51.17 celt/x86/pitch_sse4_1.c:172:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.17         vecY0 = OP_CVTEPI16_EPI32_M64(&y[j + 0]);
#20 51.17                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.17 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.18  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.18                                      ^~~~~~~~~~~~~~
#20 51.18 celt/x86/pitch_sse4_1.c:173:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.18         vecY1 = OP_CVTEPI16_EPI32_M64(&y[j + 1]);
#20 51.18                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.18 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.18  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.18                                      ^~~~~~~~~~~~~~
#20 51.18 celt/x86/pitch_sse4_1.c:174:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.18         vecY2 = OP_CVTEPI16_EPI32_M64(&y[j + 2]);
#20 51.18                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.18 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.18  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.18                                      ^~~~~~~~~~~~~~
#20 51.19 celt/x86/pitch_sse4_1.c:175:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.19         vecY3 = OP_CVTEPI16_EPI32_M64(&y[j + 3]);
#20 51.19                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.19 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.19  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.19                                      ^~~~~~~~~~~~~~
#20 51.19 celt/x86/pitch_sse4_1.c:188:12: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.19     vecX = OP_CVTEPI16_EPI32_M64(&x[len - 4]);
#20 51.19            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.19 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.19  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.19                                      ^~~~~~~~~~~~~~
#20 51.20 celt/x86/pitch_sse4_1.c:195:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.20         vecY0 = OP_CVTEPI16_EPI32_M64(&y[j + 0]);
#20 51.20                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.20 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.20  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.20                                      ^~~~~~~~~~~~~~
#20 51.20 celt/x86/pitch_sse4_1.c:196:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.20         vecY1 = OP_CVTEPI16_EPI32_M64(&y[j + 1]);
#20 51.20                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.20 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.20  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.20                                      ^~~~~~~~~~~~~~
#20 51.20 celt/x86/pitch_sse4_1.c:197:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.20         vecY2 = OP_CVTEPI16_EPI32_M64(&y[j + 2]);
#20 51.21                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.21 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.21  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.21                                      ^~~~~~~~~~~~~~
#20 51.21 celt/x86/pitch_sse4_1.c:212:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.21         vecY0 = OP_CVTEPI16_EPI32_M64(&y[j + 0]);
#20 51.21                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.21 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.21  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.21                                      ^~~~~~~~~~~~~~
#20 51.21 celt/x86/pitch_sse4_1.c:213:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.21         vecY1 = OP_CVTEPI16_EPI32_M64(&y[j + 1]);
#20 51.21                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.21 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.22  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.22                                      ^~~~~~~~~~~~~~
#20 51.22 celt/x86/pitch_sse4_1.c:225:17: warning: cast from 'const opus_val16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 51.22         vecY0 = OP_CVTEPI16_EPI32_M64(&y[j + 0]);
#20 51.22                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.22 celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 51.22  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 51.22                                      ^~~~~~~~~~~~~~
#20 51.22 celt/x86/pitch_sse4_1.c:232:31: warning: cast from 'opus_val32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 51.22     initSum = _mm_loadu_si128((__m128i *)(&sum[0]));
#20 51.22                               ^~~~~~~~~~~~~~~~~~~~
#20 51.22 celt/x86/pitch_sse4_1.c:234:22: warning: cast from 'opus_val32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 51.22     _mm_storeu_si128((__m128i *)sum, initSum);
#20 51.22                      ^~~~~~~~~~~~~~
#20 51.25 2 warnings generated.
#20 51.27   CC       celt/tests/test_unit_types.o
#20 51.33   CC       src/opus_demo.o
#20 51.33   CC       silk/CNG.lo
#20 51.34   CC       silk/code_signs.lo
#20 51.36   CC       silk/init_decoder.lo
#20 51.37 27 warnings generated.
#20 51.38   CC       silk/decode_core.lo
#20 51.55   CC       silk/decode_frame.lo
#20 51.61   CC       silk/decode_parameters.lo
#20 51.67   CC       silk/decode_indices.lo
#20 51.82   CC       silk/decode_pulses.lo
#20 51.82   CC       silk/decoder_set_fs.lo
#20 51.91   CC       silk/dec_API.lo
#20 51.96   CC       silk/enc_API.lo
#20 51.97   CC       silk/encode_indices.lo
#20 52.07   CC       silk/encode_pulses.lo
#20 52.08   CC       silk/gain_quant.lo
#20 52.09   CC       silk/interpolate.lo
#20 52.16   CC       silk/LP_variable_cutoff.lo
#20 52.30   CC       silk/NLSF_decode.lo
#20 52.36   CC       silk/NSQ.lo
#20 52.40   CC       silk/NSQ_del_dec.lo
#20 52.48   CC       silk/PLC.lo
#20 52.48   CC       silk/shell_coder.lo
#20 52.55   CC       silk/tables_gain.lo
#20 52.58   CC       silk/tables_LTP.lo
#20 52.61   CC       silk/tables_NLSF_CB_NB_MB.lo
#20 52.73   CC       silk/tables_NLSF_CB_WB.lo
#20 52.78   CC       silk/tables_other.lo
#20 52.81   CC       silk/tables_pitch_lag.lo
#20 52.82   CC       silk/tables_pulses_per_block.lo
#20 52.85   CC       silk/VAD.lo
#20 52.97   CC       silk/control_audio_bandwidth.lo
#20 53.00   CC       silk/quant_LTP_gains.lo
#20 53.01   CC       silk/VQ_WMat_EC.lo
#20 53.05   CC       silk/HP_variable_cutoff.lo
#20 53.06   CC       silk/NLSF_encode.lo
#20 53.09   CC       silk/NLSF_VQ.lo
#20 53.23   CC       silk/NLSF_unpack.lo
#20 53.31   CC       silk/NLSF_del_dec_quant.lo
#20 53.31   CC       silk/process_NLSFs.lo
#20 53.32   CC       silk/stereo_LR_to_MS.lo
#20 53.35   CC       silk/stereo_MS_to_LR.lo
#20 53.37   CC       silk/check_control_input.lo
#20 53.37   CC       silk/control_SNR.lo
#20 53.43   CC       silk/init_encoder.lo
#20 53.49   CC       silk/control_codec.lo
#20 53.58   CC       silk/A2NLSF.lo
#20 53.61   CC       silk/ana_filt_bank_1.lo
#20 53.67   CC       silk/biquad_alt.lo
#20 53.69   CC       silk/bwexpander_32.lo
#20 53.69   CC       silk/bwexpander.lo
#20 53.72   CC       silk/debug.lo
#20 53.84   CC       silk/decode_pitch.lo
#20 53.85   CC       silk/inner_prod_aligned.lo
#20 53.85   CC       silk/lin2log.lo
#20 53.88   CC       silk/log2lin.lo
#20 53.94   CC       silk/LPC_analysis_filter.lo
#20 53.94   CC       silk/LPC_inv_pred_gain.lo
#20 53.95   CC       silk/table_LSF_cos.lo
#20 54.10   CC       silk/NLSF2A.lo
#20 54.10   CC       silk/NLSF_stabilize.lo
#20 54.10   CC       silk/NLSF_VQ_weights_laroia.lo
#20 54.12   CC       silk/pitch_est_tables.lo
#20 54.14   CC       silk/resampler.lo
#20 54.18   CC       silk/resampler_down2_3.lo
#20 54.27   CC       silk/resampler_down2.lo
#20 54.33   CC       silk/resampler_private_AR2.lo
#20 54.35   CC       silk/resampler_private_down_FIR.lo
#20 54.37   CC       silk/resampler_private_IIR_FIR.lo
#20 54.43   CC       silk/resampler_private_up2_HQ.lo
#20 54.44   CC       silk/resampler_rom.lo
#20 54.45   CC       silk/sigm_Q15.lo
#20 54.45   CC       silk/sort.lo
#20 54.51   CC       silk/sum_sqr_shift.lo
#20 54.59   CC       silk/stereo_decode_pred.lo
#20 54.64   CC       silk/stereo_encode_pred.lo
#20 54.65   CC       silk/stereo_find_predictor.lo
#20 54.66   CC       silk/stereo_quant_pred.lo
#20 54.69   CC       silk/LPC_fit.lo
#20 54.81   CC       silk/fixed/LTP_analysis_filter_FIX.lo
#20 54.81   CC       silk/fixed/LTP_scale_ctrl_FIX.lo
#20 54.83   CC       silk/fixed/corrMatrix_FIX.lo
#20 54.87   CC       silk/fixed/encode_frame_FIX.lo
#20 54.87   CC       silk/fixed/find_LPC_FIX.lo
#20 54.94   CC       silk/fixed/find_LTP_FIX.lo
#20 54.97   CC       silk/fixed/find_pitch_lags_FIX.lo
#20 55.09   CC       silk/fixed/find_pred_coefs_FIX.lo
#20 55.11   CC       silk/fixed/noise_shape_analysis_FIX.lo
#20 55.13   CC       silk/fixed/process_gains_FIX.lo
#20 55.16   CC       silk/fixed/regularize_correlations_FIX.lo
#20 55.24   CC       silk/fixed/residual_energy16_FIX.lo
#20 55.27   CC       silk/fixed/residual_energy_FIX.lo
#20 55.29   CC       silk/fixed/warped_autocorrelation_FIX.lo
#20 55.34   CC       silk/fixed/apply_sine_window_FIX.lo
#20 55.43   CC       silk/fixed/autocorr_FIX.lo
#20 55.44   CC       silk/fixed/burg_modified_FIX.lo
#20 55.44   CC       silk/fixed/k2a_FIX.lo
#20 55.54   CC       silk/fixed/k2a_Q16_FIX.lo
#20 55.59   CC       silk/fixed/pitch_analysis_core_FIX.lo
#20 55.64   CC       silk/fixed/vector_ops_FIX.lo
#20 55.65   CC       silk/fixed/schur64_FIX.lo
#20 55.67   CC       silk/fixed/schur_FIX.lo
#20 55.73   CC       silk/x86/NSQ_sse4_1.lo
#20 55.79   CC       silk/x86/NSQ_del_dec_sse4_1.lo
#20 55.93   CC       silk/x86/x86_silk_map.lo
#20 55.95   CC       silk/x86/VAD_sse4_1.lo
#20 55.96   CC       silk/x86/VQ_WMat_EC_sse4_1.lo
#20 56.01   CC       silk/fixed/x86/vector_ops_FIX_sse4_1.lo
#20 56.07 silk/x86/NSQ_sse4_1.c:297:39: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 56.07     a_Q12_01234567 = _mm_loadu_si128( (__m128i *)(&a_Q12[ 0 ] ) );
#20 56.07                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.08 silk/x86/NSQ_sse4_1.c:299:39: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 56.08     a_Q12_89ABCDEF = _mm_loadu_si128( (__m128i *)(&a_Q12[ 8 ] ) );
#20 56.08                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.08 silk/x86/NSQ_sse4_1.c:305:44: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 56.08     AR_shp_Q13_76543210 = _mm_loadu_si128( (__m128i *)(&AR_shp_Q13[0] ) );
#20 56.08                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.09 silk/x86/NSQ_sse4_1.c:310:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.09     xmm_tempa = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[-16]) );
#20 56.09                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.09 silk/x86/NSQ_sse4_1.c:311:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.09     xmm_tempb = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[-12]) );
#20 56.09                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.09 silk/x86/NSQ_sse4_1.c:319:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.09     xmm_tempa = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -8 ]) );
#20 56.09                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.09 silk/x86/NSQ_sse4_1.c:320:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.09     xmm_tempb = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -4 ]) );
#20 56.09                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.09 silk/x86/NSQ_sse4_1.c:329:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.09     xmm_tempa = _mm_loadu_si128( (__m128i *)(&(NSQ->sAR2_Q14[ 0 ]) ) );
#20 56.09                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.09 silk/x86/NSQ_sse4_1.c:330:34: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.09     xmm_tempb = _mm_loadu_si128( (__m128i *)(&(NSQ->sAR2_Q14[ 4 ]) ) );
#20 56.09                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.10 silk/x86/NSQ_sse4_1.c:398:30: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 56.10                 b_Q14_3210 = OP_CVTEPI16_EPI32_M64( b_Q14 );
#20 56.10                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.10 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 56.10  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 56.10                                      ^~~~~~~~~~~~~~
#20 56.10 silk/x86/NSQ_sse4_1.c:402:54: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.10                 pred_lag_ptr_0123 = _mm_loadu_si128( (__m128i *)(&pred_lag_ptr[ -3 ] ) );
#20 56.10                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.11 silk/x86/NSQ_sse4_1.c:541:23: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.11     _mm_storeu_si128( (__m128i *)(&NSQ->sAR2_Q14[ 4 ]), xmm_tempa );
#20 56.11                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.11 silk/x86/NSQ_sse4_1.c:542:23: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.11     _mm_storeu_si128( (__m128i *)(&NSQ->sAR2_Q14[ 0 ]), xmm_tempb );
#20 56.11                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.11 silk/x86/NSQ_sse4_1.c:558:48: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.11             xmm_xq_Q14_3210 = _mm_loadu_si128( (__m128i *)(&(psLPC_Q14[ i + 0 ] ) ) );
#20 56.11                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.11 silk/x86/NSQ_sse4_1.c:559:48: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.11             xmm_xq_Q14_7654 = _mm_loadu_si128( (__m128i *)(&(psLPC_Q14[ i + 4 ] ) ) );
#20 56.11                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.11 silk/x86/NSQ_sse4_1.c:590:31: warning: cast from 'opus_int16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 56.11             _mm_storeu_si128( (__m128i *)(&xq[ i ] ), xmm_xq_Q14_3210 );
#20 56.11                               ^~~~~~~~~~~~~~~~~~~~~~
#20 56.11 silk/x86/NSQ_sse4_1.c:638:42: warning: cast from 'const opus_int32 *' (aka 'const int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.11         xmm_x_Q3_x2x0 = _mm_loadu_si128( (__m128i *)(&(x_Q3[ i ] ) ) );
#20 56.11                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.12 silk/x86/NSQ_sse4_1.c:651:27: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.12         _mm_storeu_si128( (__m128i *)(&(x_sc_Q10[ i ] ) ), xmm_x_Q3_x2x0 );
#20 56.12                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.12 silk/x86/NSQ_sse4_1.c:683:54: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.12             xmm_sLTP_shp_Q14_x2x0 = _mm_loadu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ) );
#20 56.12                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.12 silk/x86/NSQ_sse4_1.c:695:31: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.12             _mm_storeu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ), xmm_sLTP_shp_Q14_x2x0 );
#20 56.12                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.12 silk/x86/NSQ_del_dec_sse4_1.c:363:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 56.12     a_Q12_0123 = OP_CVTEPI16_EPI32_M64( a_Q12 );
#20 56.12                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.12 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 56.12  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 56.12                                      ^~~~~~~~~~~~~~
#20 56.12 silk/x86/NSQ_del_dec_sse4_1.c:364:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 56.12     a_Q12_4567 = OP_CVTEPI16_EPI32_M64( a_Q12 + 4 );
#20 56.12                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.12 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 56.13  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 56.13                                      ^~~~~~~~~~~~~~
#20 56.13 silk/x86/NSQ_del_dec_sse4_1.c:367:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 56.13         a_Q12_89AB = OP_CVTEPI16_EPI32_M64( a_Q12 + 8 );
#20 56.13                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.13 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 56.13  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 56.13                                      ^~~~~~~~~~~~~~
#20 56.13 silk/x86/NSQ_del_dec_sse4_1.c:368:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 56.13         a_Q12_CDEF = OP_CVTEPI16_EPI32_M64( a_Q12 + 12 );
#20 56.13                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.13 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 56.13  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 56.13                                      ^~~~~~~~~~~~~~
#20 56.13 silk/x86/NSQ_del_dec_sse4_1.c:372:22: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 56.13         b_Q12_0123 = OP_CVTEPI16_EPI32_M64( b_Q14 );
#20 56.13                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.13 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 56.13  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 56.13                                      ^~~~~~~~~~~~~~
#20 56.13 silk/x86/NSQ_del_dec_sse4_1.c:385:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.13                 pred_lag_ptr_tmp    = _mm_loadu_si128( (__m128i *)(&pred_lag_ptr[ -3 ] ) );
#20 56.13                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.13 silk/x86/NSQ_del_dec_sse4_1.c:440:52: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.13                 psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -3 ] ) ); /* -3, -2 , -1, 0 */
#20 56.13                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.13 silk/x86/NSQ_del_dec_sse4_1.c:454:52: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.14                 psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -7 ] ) );
#20 56.14                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.14 silk/x86/NSQ_del_dec_sse4_1.c:469:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.14                     psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -11 ] ) );
#20 56.14                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.14 silk/x86/NSQ_del_dec_sse4_1.c:482:56: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.14                     psLPC_Q14_tmp   = _mm_loadu_si128( (__m128i *)(&psLPC_Q14[ -15 ] ) );
#20 56.14                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.15 silk/x86/NSQ_del_dec_sse4_1.c:768:42: warning: cast from 'const opus_int32 *' (aka 'const int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.15         xmm_x_Q3_x2x0 = _mm_loadu_si128( (__m128i *)(&(x_Q3[ i ] ) ) );
#20 56.15                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.15 silk/x86/NSQ_del_dec_sse4_1.c:780:27: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.15         _mm_storeu_si128( (__m128i *)(&(x_sc_Q10[ i ])), xmm_x_Q3_x2x0 );
#20 56.15                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.16 silk/x86/NSQ_del_dec_sse4_1.c:813:58: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.16                 xmm_sLTP_shp_Q14_x2x0 = _mm_loadu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ) );
#20 56.16                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.16 silk/x86/NSQ_del_dec_sse4_1.c:825:35: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.16                 _mm_storeu_si128( (__m128i *)(&(NSQ->sLTP_shp_Q14[ i ] ) ), xmm_sLTP_shp_Q14_x2x0 );
#20 56.16                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.20   CC       silk/fixed/x86/burg_modified_FIX_sse4_1.lo
#20 56.25   CCLD     celt/tests/test_unit_cwrs32
#20 56.26 silk/x86/VQ_WMat_EC_sse4_1.c:67:18: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 56.26         C_tmp1 = OP_CVTEPI16_EPI32_M64( &in_Q14[ 1 ] );
#20 56.26                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.26 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 56.26  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 56.26                                      ^~~~~~~~~~~~~~
#20 56.26 silk/x86/VQ_WMat_EC_sse4_1.c:68:18: warning: cast from 'const opus_int8 *' (aka 'const signed char *') to 'int *' increases required alignment from 1 to 4 [-Wcast-align]
#20 56.26         C_tmp2 = OP_CVTEPI8_EPI32_M32( &cb_row_Q7[ 1 ] );
#20 56.26                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.26 ./celt/x86/x86cpu.h:60:40: note: expanded from macro 'OP_CVTEPI8_EPI32_M32'
#20 56.26  (_mm_cvtepi8_epi32(_mm_cvtsi32_si128(*(int *)(x))))
#20 56.26                                        ^~~~~~~~~~
#20 56.26 silk/x86/VQ_WMat_EC_sse4_1.c:86:35: warning: cast from 'const opus_int32 *' (aka 'const int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.26         C_tmp3 = _mm_loadu_si128( (__m128i *)(&W_Q18[ 1 ] ) );
#20 56.26                                   ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.29 silk/x86/VAD_sse4_1.c:139:44: warning: cast from 'opus_int16 *' (aka 'short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 56.29                 xmm_X   = _mm_loadu_si128( (__m128i *)&(X[ X_offset[ b ] + i + dec_subframe_offset ] ) );
#20 56.29                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.33 3 warnings generated.
#20 56.35   CCLD     celt/tests/test_unit_dft
#20 56.39 silk/fixed/x86/vector_ops_FIX_sse4_1.c:60:44: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 56.39         inVec1_76543210 = _mm_loadu_si128( (__m128i *)(&inVec1[i + 0] ) );
#20 56.39                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.39 silk/fixed/x86/vector_ops_FIX_sse4_1.c:61:44: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 56.39         inVec2_76543210 = _mm_loadu_si128( (__m128i *)(&inVec2[i + 0] ) );
#20 56.39                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.39 silk/fixed/x86/vector_ops_FIX_sse4_1.c:81:23: warning: cast from 'opus_int64 *' (aka 'long *') to '__m128i *' increases required alignment from 8 to 16 [-Wcast-align]
#20 56.39     _mm_storel_epi64( (__m128i *)&sum, acc1 );
#20 56.39                       ^~~~~~~~~~~~~~~
#20 56.43 3 warnings generated.
#20 56.45   CCLD     celt/tests/test_unit_entropy
#20 56.53 silk/fixed/x86/burg_modified_FIX_sse4_1.c:167:34: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 56.53                     PTR_3210   = OP_CVTEPI16_EPI32_M64( &x_ptr[ n - k - 1 - 3 ] );
#20 56.53                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.53 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 56.53  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 56.53                                      ^~~~~~~~~~~~~~
#20 56.53 silk/fixed/x86/burg_modified_FIX_sse4_1.c:168:34: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 56.53                     SUBFR_3210 = OP_CVTEPI16_EPI32_M64( &x_ptr[ subfr_length - n + k ] );
#20 56.53                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.53 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 56.53  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 56.53                                      ^~~~~~~~~~~~~~
#20 56.53 silk/fixed/x86/burg_modified_FIX_sse4_1.c:169:51: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.53                     FIRST_3210 = _mm_loadu_si128( (__m128i *)&C_first_row[ k ] );
#20 56.53                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.53 silk/fixed/x86/burg_modified_FIX_sse4_1.c:171:51: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.53                     LAST_3210  = _mm_loadu_si128( (__m128i *)&C_last_row[ k ] );
#20 56.53                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.53 silk/fixed/x86/burg_modified_FIX_sse4_1.c:172:51: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.54                     ATMP_3210  = _mm_loadu_si128( (__m128i *)&Af_QA[ k ] );
#20 56.54                                                   ^~~~~~~~~~~~~~~~~~~~~~
#20 56.54 silk/fixed/x86/burg_modified_FIX_sse4_1.c:187:39: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.54                     _mm_storeu_si128( (__m128i *)&C_first_row[ k ], FIRST_3210 );
#20 56.54                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.54 silk/fixed/x86/burg_modified_FIX_sse4_1.c:188:39: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.54                     _mm_storeu_si128( (__m128i *)&C_last_row[ k ], LAST_3210 );
#20 56.54                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.54 silk/fixed/x86/burg_modified_FIX_sse4_1.c:222:46: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 56.54                         xmm_x_ptr_n_k_x2x0 = OP_CVTEPI16_EPI32_M64( &x_ptr[ n - k - 3 ] );
#20 56.54                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.54 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 56.54  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 56.54                                      ^~~~~~~~~~~~~~
#20 56.54 silk/fixed/x86/burg_modified_FIX_sse4_1.c:223:46: warning: cast from 'const opus_int16 *' (aka 'const short *') to '__m128i *' increases required alignment from 2 to 16 [-Wcast-align]
#20 56.54                         xmm_x_ptr_sub_x2x0 = OP_CVTEPI16_EPI32_M64( &x_ptr[ subfr_length - n + k - 1 ] );
#20 56.54                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 56.55 ./celt/x86/x86cpu.h:63:38: note: expanded from macro 'OP_CVTEPI16_EPI32_M64'
#20 56.55  (_mm_cvtepi16_epi32(_mm_loadl_epi64((__m128i *)(x))))
#20 56.55                                      ^~~~~~~~~~~~~~
#20 56.55 silk/fixed/x86/burg_modified_FIX_sse4_1.c:247:53: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.55                         X1_3210  = _mm_loadu_si128( (__m128i *)&CAf[ k ] );
#20 56.55                                                     ^~~~~~~~~~~~~~~~~~~~
#20 56.55 silk/fixed/x86/burg_modified_FIX_sse4_1.c:248:53: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.55                         PTR_3210 = _mm_loadu_si128( (__m128i *)&CAb[ k ] );
#20 56.55                                                     ^~~~~~~~~~~~~~~~~~~~
#20 56.55 silk/fixed/x86/burg_modified_FIX_sse4_1.c:253:43: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.55                         _mm_storeu_si128( (__m128i *)&CAf[ k ], X1_3210 );
#20 56.55                                           ^~~~~~~~~~~~~~~~~~~~
#20 56.55 silk/fixed/x86/burg_modified_FIX_sse4_1.c:254:43: warning: cast from 'opus_int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 56.55                         _mm_storeu_si128( (__m128i *)&CAb[ k ], PTR_3210 );
#20 56.55                                           ^~~~~~~~~~~~~~~~~~~~
#20 56.61   CCLD     celt/tests/test_unit_laplace
#20 56.66   CCLD     celt/tests/test_unit_mathops
#20 56.70 1 warning generated.
#20 56.70 20 warnings generated.
#20 56.71   CCLD     celt/tests/test_unit_mdct
#20 56.72   CCLD     celt/tests/test_unit_rotation
#20 56.78   CCLD     celt/tests/test_unit_types
#20 56.94 14 warnings generated.
#20 57.12 13 warnings generated.
#20 57.13   CCLD     libopus.la
#20 57.14   CCLD     silk/tests/test_unit_LPC_inv_pred_gain
#20 57.14   CCLD     tests/test_opus_projection
#20 57.64   CCLD     tests/test_opus_decode
#20 57.64   CCLD     opus_demo
#20 57.64   CCLD     repacketizer_demo
#20 57.64   CCLD     tests/test_opus_api
#20 57.64   CCLD     tests/test_opus_encode
#20 57.64   CCLD     tests/test_opus_padding
#20 57.64   CCLD     trivial_example
#20 58.07 make[2]: Leaving directory '/src/opus'
#20 58.07 make[1]: Leaving directory '/src/opus'
#20 58.07 + for fuzzer in $FUZZERS
#20 58.07 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -Iinclude tests/opus_decode_fuzzer.c -o opus_decode_fuzzer.o
#20 58.13 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard opus_decode_fuzzer.o -o /out/opus_decode_fuzzer_fixed /libAFL.a .libs/libopus.a
#20 58.41 + '[' -f tests/opus_decode_fuzzer.options ']'
#20 58.41 + cp tests/opus_decode_fuzzer.options /out/opus_decode_fuzzer_fixed.options
#20 58.41 + zip -r /out/opus_decode_fuzzer_fixed_seed_corpus.zip opus_testvectors/
#20 58.41   adding: opus_testvectors/ (stored 0%)
#20 58.41   adding: opus_testvectors/testvector03.bit (deflated 2%)
#20 58.43   adding: opus_testvectors/testvector01.bit (deflated 15%)
#20 58.46   adding: opus_testvectors/testvector07.bit (deflated 4%)
#20 58.47   adding: opus_testvectors/testvector02.bit (deflated 3%)
#20 58.48   adding: opus_testvectors/testvector12.bit (deflated 4%)
#20 58.48   adding: opus_testvectors/testvector03.dec (deflated 48%)
#20 58.73   adding: opus_testvectors/testvector06.dec (deflated 45%)
#20 59.04   adding: opus_testvectors/testvector11.dec (deflated 7%)
#20 59.34   adding: opus_testvectors/testvector11.bit (deflated 0%)
#20 59.35   adding: opus_testvectors/testvector06.bit (deflated 3%)
#20 59.36   adding: opus_testvectors/testvector08.dec (deflated 38%)
#20 59.69   adding: opus_testvectors/testvector02.dec (deflated 50%)
#20 59.98   adding: opus_testvectors/testvector01.dec (deflated 29%)
#20 60.42   adding: opus_testvectors/testvector05.bit (deflated 3%)
#20 60.44   adding: opus_testvectors/testvector08.bit (deflated 1%)
#20 60.44   adding: opus_testvectors/testvector09.bit (deflated 11%)
#20 60.48   adding: opus_testvectors/testvector10.dec (deflated 49%)
#20 60.78   adding: opus_testvectors/testvector07.dec (deflated 44%)
#20 61.06   adding: opus_testvectors/testvector04.dec (deflated 49%)
#20 61.38   adding: opus_testvectors/testvector09.dec (deflated 43%)
#20 61.72   adding: opus_testvectors/testvector05.dec (deflated 47%)
#20 62.05   adding: opus_testvectors/testvector12.dec (deflated 61%)
#20 62.35   adding: opus_testvectors/testvector10.bit (deflated 9%)
#20 62.39   adding: opus_testvectors/testvector04.bit (deflated 3%)
#20 62.40 + for fuzzer in $FUZZERS
#20 62.40 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c -Iinclude tests/opus_multi_fuzzer.c -o opus_multi_fuzzer.o
#20 62.47 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard opus_multi_fuzzer.o -o /out/opus_multi_fuzzer_fixed /libAFL.a .libs/libopus.a
#20 62.72 + '[' -f tests/opus_multi_fuzzer.options ']'
#20 62.72 + zip -r /out/opus_multi_fuzzer_fixed_seed_corpus.zip opus_testvectors/
#20 62.73   adding: opus_testvectors/ (stored 0%)
#20 62.73   adding: opus_testvectors/testvector03.bit (deflated 2%)
#20 62.73   adding: opus_testvectors/testvector01.bit (deflated 15%)
#20 62.76   adding: opus_testvectors/testvector07.bit (deflated 4%)
#20 62.77   adding: opus_testvectors/testvector02.bit (deflated 3%)
#20 62.78   adding: opus_testvectors/testvector12.bit (deflated 4%)
#20 62.78   adding: opus_testvectors/testvector03.dec (deflated 48%)
#20 63.02   adding: opus_testvectors/testvector06.dec (deflated 45%)
#20 63.33   adding: opus_testvectors/testvector11.dec (deflated 7%)
#20 63.61   adding: opus_testvectors/testvector11.bit (deflated 0%)
#20 63.63   adding: opus_testvectors/testvector06.bit (deflated 3%)
#20 63.63   adding: opus_testvectors/testvector08.dec (deflated 38%)
#20 63.96   adding: opus_testvectors/testvector02.dec (deflated 50%)
#20 64.24   adding: opus_testvectors/testvector01.dec (deflated 29%)
#20 64.64   adding: opus_testvectors/testvector05.bit (deflated 3%)
#20 64.65   adding: opus_testvectors/testvector08.bit (deflated 1%)
#20 64.65   adding: opus_testvectors/testvector09.bit (deflated 11%)
#20 64.69   adding: opus_testvectors/testvector10.dec (deflated 49%)
#20 64.99   adding: opus_testvectors/testvector07.dec (deflated 44%)
#20 65.26   adding: opus_testvectors/testvector04.dec (deflated 49%)
#20 65.56   adding: opus_testvectors/testvector09.dec (deflated 43%)
#20 65.90   adding: opus_testvectors/testvector05.dec (deflated 47%)
#20 66.23   adding: opus_testvectors/testvector12.dec (deflated 61%)
#20 66.53   adding: opus_testvectors/testvector10.bit (deflated 9%)
#20 66.56   adding: opus_testvectors/testvector04.bit (deflated 3%)
#20 66.56 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 67.8s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:dbb9e5a1676443df44fc5afbb6123cd865efcfddd212071a8a624c0a56864bc3 done
#21 naming to gcr.io/fuzzbench/builders/afl/opus_opus 0.0s done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:e004533cbdd598633eb5d346e53b39a35adc6897f913f99f96646f7ab66ddad3
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:279565525fee5b8f0f2ef7e9989055107240c1df14ce295897efeb188bc7569c
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus-intermediate
#4 sha256:6fd3eac060ba015891d67c0d1340afde984adf472b31a6f1094fb42c70df92b4
#4 ERROR: gcr.io/fuzzbench/runners/afl/opus_opus-intermediate:latest: not found

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:4efbd5e416c83953b598ff82cefe236e4f25c5eeda46088ba83e35554e2d5ee7 done
#6 naming to gcr.io/fuzzbench/runners/afl/opus_opus-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus-intermediate:
------
#2 [internal] load .dockerignore
#2 sha256:cebb23f25f3aaf3c5fee3fde12ff51e6d09b3c293a280e673aa3fa18eb84d62c
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:1f5d8774fa6b6cd91290bcb2f2bd72c2848d54f6d4b6fc842d10916dab868b76
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/opus_opus:latest
#3 sha256:1c1c279a245ebdacae5b795d2511e4c886b6695525e047f388f9ecd73399a122
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/runners/afl/opus_opus-intermediate:latest
#4 sha256:05bc2ce61dd2c3f377151f32d17c6395f8330d2c1712fc0efce375f6f857473f
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:dc3e2362359a57834d4eb564db6169f0b0695004c2181ca65b58de177eaa2ca8
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/opus_opus-intermediate
#6 sha256:08e17bb0c4e931e8a11ae466c821dd6d61efde63b33349c17457aa6c5d9a95a1
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/opus_opus
#10 sha256:e0a00800e3fb677ee89deac8c0245b14dc70131a9534d2aff75e58a6df6c5e84
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus
#5 sha256:f0adbebae3b7ce3dbcf2a01b493be4953171059dcdc7cee0d0cd1fb52af30c80
#5 ERROR: gcr.io/fuzzbench/runners/afl/opus_opus:latest: not found

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/opus_opus-intermediate
#6 sha256:08e17bb0c4e931e8a11ae466c821dd6d61efde63b33349c17457aa6c5d9a95a1
#6 CACHED

#12 [internal] load build context
#12 sha256:dc3e2362359a57834d4eb564db6169f0b0695004c2181ca65b58de177eaa2ca8
#12 transferring context: 17.55MB 1.1s done
#12 DONE 1.2s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:bc43de19392f9021c299ba27dd7d246490423b86c604a8ff1bebc885653cab87
#7 1.716 Get:1 http://security.ubuntu.com/ubuntu xenial-security InRelease [99.8 kB]
#7 1.751 Hit:2 http://archive.ubuntu.com/ubuntu xenial InRelease
#7 1.831 Get:3 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [99.8 kB]
#7 1.925 Get:4 http://archive.ubuntu.com/ubuntu xenial-backports InRelease [97.4 kB]
#7 ...

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/opus_opus
#10 sha256:e0a00800e3fb677ee89deac8c0245b14dc70131a9534d2aff75e58a6df6c5e84
#10 DONE 2.1s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:bc43de19392f9021c299ba27dd7d246490423b86c604a8ff1bebc885653cab87
#7 2.070 Hit:5 https://packages.cloud.google.com/apt cloud-sdk-xenial InRelease
#7 2.419 Fetched 297 kB in 1s (279 kB/s)
#7 2.419 Reading package lists...
#7 3.978 Reading package lists...
#7 5.350 Building dependency tree...
#7 5.533 Reading state information...
#7 5.959 The following additional packages will be installed:
#7 5.959   libglib2.0-data libgmp-dev libgmpxx4ldbl libgnutls-dev libgnutls-openssl27
#7 5.959   libgnutls28-dev libgnutlsxx28 libicu55 libidn11-dev liblzo2-2 libp11-kit-dev
#7 5.960   libshishi-dev libshishi0 libtasn1-6-dev libtasn1-doc nettle-dev pkg-config
#7 5.960   sgml-base shared-mime-info shishi-common xdg-user-dirs xml-core
#7 5.961 Suggested packages:
#7 5.961   lrzip gmp-doc libgmp10-doc libmpfr-dev gnutls-doc gnutls-bin guile-gnutls
#7 5.961   shishi sgml-base-doc debhelper
#7 5.962 The following NEW packages will be installed:
#7 5.963   libarchive13 libglib2.0-0 libglib2.0-data libgmp-dev libgmpxx4ldbl
#7 5.963   libgnutls-dev libgnutls-openssl27 libgnutls28-dev libgnutlsxx28 libgss3
#7 5.963   libicu55 libidn11-dev liblzo2-2 libp11-kit-dev libshishi-dev libshishi0
#7 5.963   libtasn1-6-dev libtasn1-doc libxml2 nettle-dev pkg-config sgml-base
#7 5.963   shared-mime-info shishi-common xdg-user-dirs xml-core
#7 6.206 0 upgraded, 26 newly installed, 0 to remove and 0 not upgraded.
#7 6.206 Need to get 13.7 MB of archives.
#7 6.206 After this operation, 52.9 MB of additional disk space will be used.
#7 6.206 Get:1 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libglib2.0-0 amd64 2.48.2-0ubuntu4.8 [1120 kB]
#7 6.456 Get:2 http://archive.ubuntu.com/ubuntu xenial/main amd64 sgml-base all 1.26+nmu4ubuntu1 [12.5 kB]
#7 6.469 Get:3 http://archive.ubuntu.com/ubuntu xenial/main amd64 liblzo2-2 amd64 2.08-1.2 [48.7 kB]
#7 6.470 Get:4 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libgnutls-openssl27 amd64 3.4.10-4ubuntu1.9 [21.9 kB]
#7 6.479 Get:5 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libglib2.0-data all 2.48.2-0ubuntu4.8 [131 kB]
#7 6.495 Get:6 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libicu55 amd64 55.1-7ubuntu0.5 [7650 kB]
#7 7.062 Get:7 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libxml2 amd64 2.9.3+dfsg1-1ubuntu0.7 [698 kB]
#7 7.094 Get:8 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 shared-mime-info amd64 1.5-2ubuntu0.2 [405 kB]
#7 7.124 Get:9 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 xdg-user-dirs amd64 0.15-2ubuntu6.16.04.1 [61.8 kB]
#7 7.129 Get:10 http://archive.ubuntu.com/ubuntu xenial/main amd64 xml-core all 0.13+nmu2 [23.3 kB]
#7 7.130 Get:11 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libarchive13 amd64 3.1.2-11ubuntu0.16.04.8 [262 kB]
#7 7.150 Get:12 http://archive.ubuntu.com/ubuntu xenial/main amd64 libgmpxx4ldbl amd64 2:6.1.0+dfsg-2 [8948 B]
#7 7.150 Get:13 http://archive.ubuntu.com/ubuntu xenial/main amd64 libgmp-dev amd64 2:6.1.0+dfsg-2 [314 kB]
#7 7.233 Get:14 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libgnutlsxx28 amd64 3.4.10-4ubuntu1.9 [13.8 kB]
#7 7.233 Get:15 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 nettle-dev amd64 3.2-1ubuntu0.16.04.2 [938 kB]
#7 7.267 Get:16 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libtasn1-6-dev amd64 4.7-3ubuntu0.16.04.3 [85.9 kB]
#7 7.269 Get:17 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libp11-kit-dev amd64 0.23.2-5~ubuntu16.04.2 [56.6 kB]
#7 7.272 Get:18 http://archive.ubuntu.com/ubuntu xenial/main amd64 pkg-config amd64 0.29.1-0ubuntu1 [45.0 kB]
#7 7.273 Get:19 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libidn11-dev amd64 1.32-3ubuntu1.2 [518 kB]
#7 7.297 Get:20 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libgnutls-dev amd64 3.4.10-4ubuntu1.9 [553 kB]
#7 7.339 Get:21 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libgnutls28-dev amd64 3.4.10-4ubuntu1.9 [8156 B]
#7 7.339 Get:22 http://archive.ubuntu.com/ubuntu xenial/universe amd64 shishi-common all 1.0.2-6build1 [60.6 kB]
#7 7.344 Get:23 http://archive.ubuntu.com/ubuntu xenial/universe amd64 libshishi0 amd64 1.0.2-6build1 [159 kB]
#7 7.356 Get:24 http://archive.ubuntu.com/ubuntu xenial/universe amd64 libshishi-dev amd64 1.0.2-6build1 [157 kB]
#7 7.367 Get:25 http://archive.ubuntu.com/ubuntu xenial/universe amd64 libgss3 amd64 1.0.3-2 [65.2 kB]
#7 7.372 Get:26 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libtasn1-doc all 4.7-3ubuntu0.16.04.3 [299 kB]
#7 7.648 debconf: delaying package configuration, since apt-utils is not installed
#7 7.718 Fetched 13.7 MB in 1s (11.1 MB/s)
#7 7.820 Selecting previously unselected package libglib2.0-0:amd64.
#7 7.820 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 49230 files and directories currently installed.)
#7 7.949 Preparing to unpack .../libglib2.0-0_2.48.2-0ubuntu4.8_amd64.deb ...
#7 7.966 Unpacking libglib2.0-0:amd64 (2.48.2-0ubuntu4.8) ...
#7 8.242 Selecting previously unselected package sgml-base.
#7 8.247 Preparing to unpack .../sgml-base_1.26+nmu4ubuntu1_all.deb ...
#7 8.268 Unpacking sgml-base (1.26+nmu4ubuntu1) ...
#7 8.420 Selecting previously unselected package liblzo2-2:amd64.
#7 8.425 Preparing to unpack .../liblzo2-2_2.08-1.2_amd64.deb ...
#7 8.443 Unpacking liblzo2-2:amd64 (2.08-1.2) ...
#7 8.574 Selecting previously unselected package libgnutls-openssl27:amd64.
#7 8.579 Preparing to unpack .../libgnutls-openssl27_3.4.10-4ubuntu1.9_amd64.deb ...
#7 8.584 Unpacking libgnutls-openssl27:amd64 (3.4.10-4ubuntu1.9) ...
#7 8.628 Selecting previously unselected package libglib2.0-data.
#7 8.632 Preparing to unpack .../libglib2.0-data_2.48.2-0ubuntu4.8_all.deb ...
#7 8.638 Unpacking libglib2.0-data (2.48.2-0ubuntu4.8) ...
#7 8.694 Selecting previously unselected package libicu55:amd64.
#7 8.698 Preparing to unpack .../libicu55_55.1-7ubuntu0.5_amd64.deb ...
#7 8.703 Unpacking libicu55:amd64 (55.1-7ubuntu0.5) ...
#7 9.865 Selecting previously unselected package libxml2:amd64.
#7 9.869 Preparing to unpack .../libxml2_2.9.3+dfsg1-1ubuntu0.7_amd64.deb ...
#7 9.895 Unpacking libxml2:amd64 (2.9.3+dfsg1-1ubuntu0.7) ...
#7 10.16 Selecting previously unselected package shared-mime-info.
#7 10.17 Preparing to unpack .../shared-mime-info_1.5-2ubuntu0.2_amd64.deb ...
#7 10.19 Unpacking shared-mime-info (1.5-2ubuntu0.2) ...
#7 10.41 Selecting previously unselected package xdg-user-dirs.
#7 10.41 Preparing to unpack .../xdg-user-dirs_0.15-2ubuntu6.16.04.1_amd64.deb ...
#7 10.42 Unpacking xdg-user-dirs (0.15-2ubuntu6.16.04.1) ...
#7 10.65 Selecting previously unselected package xml-core.
#7 10.65 Preparing to unpack .../xml-core_0.13+nmu2_all.deb ...
#7 10.67 Unpacking xml-core (0.13+nmu2) ...
#7 10.84 Selecting previously unselected package libarchive13:amd64.
#7 10.85 Preparing to unpack .../libarchive13_3.1.2-11ubuntu0.16.04.8_amd64.deb ...
#7 10.87 Unpacking libarchive13:amd64 (3.1.2-11ubuntu0.16.04.8) ...
#7 11.06 Selecting previously unselected package libgmpxx4ldbl:amd64.
#7 11.07 Preparing to unpack .../libgmpxx4ldbl_2%3a6.1.0+dfsg-2_amd64.deb ...
#7 11.09 Unpacking libgmpxx4ldbl:amd64 (2:6.1.0+dfsg-2) ...
#7 11.23 Selecting previously unselected package libgmp-dev:amd64.
#7 11.24 Preparing to unpack .../libgmp-dev_2%3a6.1.0+dfsg-2_amd64.deb ...
#7 11.26 Unpacking libgmp-dev:amd64 (2:6.1.0+dfsg-2) ...
#7 11.44 Selecting previously unselected package libgnutlsxx28:amd64.
#7 11.45 Preparing to unpack .../libgnutlsxx28_3.4.10-4ubuntu1.9_amd64.deb ...
#7 11.47 Unpacking libgnutlsxx28:amd64 (3.4.10-4ubuntu1.9) ...
#7 11.61 Selecting previously unselected package nettle-dev.
#7 11.61 Preparing to unpack .../nettle-dev_3.2-1ubuntu0.16.04.2_amd64.deb ...
#7 11.63 Unpacking nettle-dev (3.2-1ubuntu0.16.04.2) ...
#7 11.88 Selecting previously unselected package libtasn1-6-dev:amd64.
#7 11.88 Preparing to unpack .../libtasn1-6-dev_4.7-3ubuntu0.16.04.3_amd64.deb ...
#7 11.91 Unpacking libtasn1-6-dev:amd64 (4.7-3ubuntu0.16.04.3) ...
#7 12.05 Selecting previously unselected package libp11-kit-dev:amd64.
#7 12.06 Preparing to unpack .../libp11-kit-dev_0.23.2-5~ubuntu16.04.2_amd64.deb ...
#7 12.09 Unpacking libp11-kit-dev:amd64 (0.23.2-5~ubuntu16.04.2) ...
#7 12.29 Selecting previously unselected package pkg-config.
#7 12.30 Preparing to unpack .../pkg-config_0.29.1-0ubuntu1_amd64.deb ...
#7 12.32 Unpacking pkg-config (0.29.1-0ubuntu1) ...
#7 12.42 Selecting previously unselected package libidn11-dev.
#7 12.42 Preparing to unpack .../libidn11-dev_1.32-3ubuntu1.2_amd64.deb ...
#7 12.42 Unpacking libidn11-dev (1.32-3ubuntu1.2) ...
#7 12.50 Selecting previously unselected package libgnutls-dev:amd64.
#7 12.50 Preparing to unpack .../libgnutls-dev_3.4.10-4ubuntu1.9_amd64.deb ...
#7 12.51 Unpacking libgnutls-dev:amd64 (3.4.10-4ubuntu1.9) ...
#7 12.62 Selecting previously unselected package libgnutls28-dev:amd64.
#7 12.62 Preparing to unpack .../libgnutls28-dev_3.4.10-4ubuntu1.9_amd64.deb ...
#7 12.63 Unpacking libgnutls28-dev:amd64 (3.4.10-4ubuntu1.9) ...
#7 12.67 Selecting previously unselected package shishi-common.
#7 12.68 Preparing to unpack .../shishi-common_1.0.2-6build1_all.deb ...
#7 12.68 Unpacking shishi-common (1.0.2-6build1) ...
#7 12.74 Selecting previously unselected package libshishi0.
#7 12.75 Preparing to unpack .../libshishi0_1.0.2-6build1_amd64.deb ...
#7 12.75 Unpacking libshishi0 (1.0.2-6build1) ...
#7 12.82 Selecting previously unselected package libshishi-dev.
#7 12.82 Preparing to unpack .../libshishi-dev_1.0.2-6build1_amd64.deb ...
#7 12.83 Unpacking libshishi-dev (1.0.2-6build1) ...
#7 12.91 Selecting previously unselected package libgss3.
#7 12.92 Preparing to unpack .../libgss3_1.0.3-2_amd64.deb ...
#7 12.92 Unpacking libgss3 (1.0.3-2) ...
#7 12.98 Selecting previously unselected package libtasn1-doc.
#7 12.98 Preparing to unpack .../libtasn1-doc_4.7-3ubuntu0.16.04.3_all.deb ...
#7 12.99 Unpacking libtasn1-doc (4.7-3ubuntu0.16.04.3) ...
#7 13.04 Processing triggers for libc-bin (2.23-0ubuntu11.3) ...
#7 13.23 Setting up libglib2.0-0:amd64 (2.48.2-0ubuntu4.8) ...
#7 13.25 No schema files found: doing nothing.
#7 13.26 Setting up sgml-base (1.26+nmu4ubuntu1) ...
#7 13.32 Setting up liblzo2-2:amd64 (2.08-1.2) ...
#7 13.34 Setting up libgnutls-openssl27:amd64 (3.4.10-4ubuntu1.9) ...
#7 13.36 Setting up libglib2.0-data (2.48.2-0ubuntu4.8) ...
#7 13.37 Setting up libicu55:amd64 (55.1-7ubuntu0.5) ...
#7 13.39 Setting up libxml2:amd64 (2.9.3+dfsg1-1ubuntu0.7) ...
#7 13.40 Setting up shared-mime-info (1.5-2ubuntu0.2) ...
#7 15.86 Setting up xdg-user-dirs (0.15-2ubuntu6.16.04.1) ...
#7 15.89 Setting up xml-core (0.13+nmu2) ...
#7 16.26 Setting up libarchive13:amd64 (3.1.2-11ubuntu0.16.04.8) ...
#7 16.33 Setting up libgmpxx4ldbl:amd64 (2:6.1.0+dfsg-2) ...
#7 16.34 Setting up libgmp-dev:amd64 (2:6.1.0+dfsg-2) ...
#7 16.36 Setting up libgnutlsxx28:amd64 (3.4.10-4ubuntu1.9) ...
#7 16.38 Setting up nettle-dev (3.2-1ubuntu0.16.04.2) ...
#7 16.39 Setting up libtasn1-6-dev:amd64 (4.7-3ubuntu0.16.04.3) ...
#7 16.40 Setting up libp11-kit-dev:amd64 (0.23.2-5~ubuntu16.04.2) ...
#7 16.41 Setting up pkg-config (0.29.1-0ubuntu1) ...
#7 16.48 Setting up libidn11-dev (1.32-3ubuntu1.2) ...
#7 16.49 Setting up libgnutls-dev:amd64 (3.4.10-4ubuntu1.9) ...
#7 16.50 Setting up libgnutls28-dev:amd64 (3.4.10-4ubuntu1.9) ...
#7 16.51 Setting up shishi-common (1.0.2-6build1) ...
#7 16.53 Setting up libshishi0 (1.0.2-6build1) ...
#7 16.54 Setting up libshishi-dev (1.0.2-6build1) ...
#7 16.56 Setting up libgss3 (1.0.3-2) ...
#7 16.57 Setting up libtasn1-doc (4.7-3ubuntu0.16.04.3) ...
#7 16.59 Processing triggers for libc-bin (2.23-0ubuntu11.3) ...
#7 16.61 Processing triggers for sgml-base (1.26+nmu4ubuntu1) ...
#7 DONE 17.1s

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:ec34871666669bc77996b712657ab2509ee6126c1aa7e6e040fb150a92bc7e17
#8 DONE 0.5s

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:1ef3f2624b33fb620a70ffb3240af6e8b369bbe33407c25e17cd110ffffee1e9
#9 DONE 0.1s

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:991d78da450a253306a5279cb412465762d983d929db5a86a9cddf080931472c
#11 DONE 0.9s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:f6ae728400789e117c879fd4190a5e78466c61746e1b1ac4094ecfcc6f249437
#13 DONE 0.7s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:0735614471b2c25758c4a9f93d1013650dc149c758046575a53508475ee5c471
#14 DONE 0.2s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:7ff42f5c50425b1f6575508e3980f888fc4a8c750c44191ae598de760b074128
#15 DONE 0.4s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:99f378f31d644e0e62ebe44a778a71b4ec81f041848fc3aa43f5e0592032bce4
#16 DONE 0.4s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:7f0e757d4e76ae3addb4290d24e0f0ba4d7cf57148ff76e18ce5bb108c029364
#17 DONE 0.1s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:1b703731d596db4a3e9370df74380ddb09b9680f66d0ed80f5e5628bd7c07e17
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:b23d9ecb757eeae5d56e9899994285defc5cbeb45e546aac8d38727390939938
#19 DONE 0.6s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:a827194904d0dadbf46aa2e6d34fe95e2af9652142698be95878ff4cd6dd6821
#20 DONE 0.5s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:1b01bc2076a97352a6c9f678f7d7955164dff5845379fdb686e7d57d37e26973 done
#21 naming to gcr.io/fuzzbench/runners/afl/opus_opus 0.0s done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f310bc3df70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:523b15185a8905b4147d27516b87bd9fc21ab779757b1b67c309bdfb1f16a96f
#2 transferring context: 2B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:4ef2b2f5b1b7e335d4c1c4df60bd3bc2a5558d2317eed7c173913f9783cec28a
#1 transferring dockerfile: 32B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#5 [1/7] FROM gcr.io/oss-fuzz-base/base-builder@sha256:f4e5ea12494fab091c5d830cf803b3421f2860f729b9d1b07da44924396cf8cf
#5 sha256:ef290950573a2779ee526af357b28fbddfc20d7409aa51f58f777c9e972cba29
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/opus_opus
#4 sha256:419f080ca1bc4f38b4fb1856ca18f33747fbd5985c201e6e3d2daf1c901db986
#4 DONE 0.0s

#10 [internal] load build context
#10 sha256:0010cb15932d67515e0a6e6e8b9c731d6df67ce132e81a8450193415a5d38fd0
#10 transferring context: 69B done
#10 DONE 0.1s

#9 [5/7] WORKDIR opus
#9 sha256:227d169beda6bea6de66ce91ed02dce46ccca785453bfc86a1a0ea0590fc0ec4
#9 CACHED

#11 [6/7] COPY build.sh /src/
#11 sha256:7f97532dca1958fe267af8685c9331eb7cbae4ea867a6190bd48f4678cc42eef
#11 CACHED

#6 [2/7] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#6 sha256:5105b70670ffd051b8883c33b3686d6c1245811bcf75b95a95fa1ff10043da9f
#6 CACHED

#7 [3/7] RUN git clone https://gitlab.xiph.org/xiph/opus.git
#7 sha256:0d801ef68f8ce2b29496ae60b879e3e15321e72b70538abe6c9b289a8e55bd69
#7 CACHED

#8 [4/7] RUN wget https://opus-codec.org/static/testvectors/opus_testvectors.tar.gz
#8 sha256:c0c8237ef8133eff5506bc402f3cc7c0f21ed70fa9beeab925deb6c9fd7033b7
#8 CACHED

#12 [7/7] COPY *.c tests/
#12 sha256:c59e248d0b1751064a9033f7e59ebb2805d177acd403af1cdf08db1ede3c7dff
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:5cbb1c59d81504b7adee458a5b344b88985e241186650398012133f0068a5255 done
#13 naming to gcr.io/fuzzbench/builders/benchmark/opus_opus done
#13 DONE 0.3s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:1ff07f3417392bea3db63f2ba10c90e5dbc454c9082e75e9f89b9236379c5313
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:9f23fe87daf266cc2495fc098ca307d0876cf49bc6fafeceb3a93f91d38d916b
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/opus_opus:latest
#3 sha256:0e99a5bb4b09170e13101e61e4b6ec535c1328dad33a1e9748c8cfa251ac2973
#3 DONE 0.0s

#7 importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus-intermediate
#7 sha256:9bfaef6d4fec4d3da2277ef9d450700ff56b491f5277f2cc570908996ecbc474
#7 DONE 0.0s

#4 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/opus_opus
#4 sha256:7ee8e7325f929096e43044b095dca4e8220285974cab21500d1923d488927223
#4 DONE 0.0s

#5 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#5 sha256:5def9597c00b48c5ddfc1e9d64b05d33bf16badd065cb7a9e38d2b444638b2b3
#5 CACHED

#6 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#6 sha256:bae47dd8a1a0461b96aade676c14960942b6689677933cca4ea7296c5df25552
#6 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:1770a63369317b1bf67e4db4040bc779a93d1d1813ea28b5d815fadc39791d12 done
#8 naming to gcr.io/fuzzbench/builders/afl/opus_opus-intermediate done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:ba9e43aa131e0d3032cbafd08de0f5c59d6eab1fad44c00f8bd7db4007d62144
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:3ced307c77bb89f4f45b09fa45646c0047b1a38f22702db2e082ca97d51f3405
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:4b0d5c7d8066d6718ebece23d826b69b97e6c6418ad7370caef47da5f900f5f8
#8 transferring context: 559B 0.1s done
#8 DONE 0.2s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:e985b352b1ff5a58c3366acb8190c9f29baae4c902a7ec73e79b63c09512b86b
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:cd3eed38e39bdb7ef67e7026ce69713f93fc5a913f729cd93c7169a8b1eaa4a8
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:99af7d023d0fbf33152aa2f832fa4b94fdfe3fa291581355473a42168430291b
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:1317ad634dffbffd1a6127ef3227a097c89b0217141ab5c87d7bfd6f0d93b681
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:3e04b5fd0a277df2bc5cd3367dbf9178b152077681f3e4447621291a56e5d56f
#13 writing image sha256:3e04b5fd0a277df2bc5cd3367dbf9178b152077681f3e4447621291a56e5d56f 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.2s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:977cb50c8f8a07e990267ae8d55d4d24ec42f88c11697e20a0f67f8de876ee56
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:67066e179caac254f0e82a8f7013b724b6f869d04e36f63ca049a40e02dcd3c0
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/opus_opus-intermediate:latest
#3 sha256:bc544bc526a540e87803dacff08709cacfd6a504ca9bef87d493061eb5c492d8
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/opus_opus-intermediate
#6 sha256:cd543a85e097f13355c7d019127ce57b7a29c6fcd3c4a24329ff6e91e1ae6129
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/opus_opus
#5 sha256:f2030f5675a0f47ec7fdb2aa401c322e8b5ffea51151848be27d0f77251e2401
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:2308b63ff2cb568be1dbff5ba3d025bd7ebb68c4ffdce0106957fbaadc4fdccb
#12 transferring context: 669.85kB 0.1s done
#12 DONE 0.2s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:76e5ece3db136a04096f444d7a9c6fcca85520e22c92786eaa82b122074c9296
#18 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:329e964a7032499cdc0601707b602900e217416e530eb593d100ba9d394aa1d7
#17 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:c363e3e81c64f0e77db1947e7517f76675fad8fc97517fdc0ccacf7cb1d84a05
#19 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:3e531011f3144786ff4fabaa9fa47210f2495a728e3bb5212f3cf842355129db
#13 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:33aaddf9deab30fce4cef5bc27f0e75990d95c977e0d41e6d8b49848061d700f
#16 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:dd248a4aec779eb0b5b68186a7ac56d23b296d20bf3961b482712f2215198b30
#10 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:904649bd372fbdbd878a83c8754d5a91b300a2fd7c1bc0f399b8257ae66a1223
#8 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:3929c953d96183be0fd34e45368d13223a7f46b3c953c0803be691f5f2eba3d8
#11 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:e5bfb125b56a1bc47635b6397412d7152a4eb06a8271ea1e0adbd8be0726e461
#14 CACHED

#15 [stage-1  8/13] COPY benchmarks/opus_opus/benchmark.yaml /
#15 sha256:5ac786a3cd02a42255f9b4d955f2541ec13b04b10460bedfdd470fb19d5b397a
#15 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:fdb10f3c3e514b58de9b7d8bdfa0090500140495164f459b2d2c321f5467743d
#9 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:5930c415912136bfa0c9b3ec5e89d9cba44c6e30a87d6e663d80f0f058bb4457
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:dbb9e5a1676443df44fc5afbb6123cd865efcfddd212071a8a624c0a56864bc3 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/opus_opus done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:0bca9c3c8e05f66e5fe09e4d148058b348674aeff52984d314b8070766e08396
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:c51aff3fbcea9036069a1cfe51b464249568e10d1c7fa8daf9f7e636c4cd3e84
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus-intermediate
#5 sha256:6fd3eac060ba015891d67c0d1340afde984adf472b31a6f1094fb42c70df92b4
#5 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:4efbd5e416c83953b598ff82cefe236e4f25c5eeda46088ba83e35554e2d5ee7 done
#6 naming to gcr.io/fuzzbench/runners/afl/opus_opus-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:853fcc18abf18ae3713436291a4c0cfd9aa3a4d179e35fe4795cfc057911d800
#2 transferring context: 34B done
#2 DONE 0.1s

#1 [internal] load build definition from Dockerfile
#1 sha256:06015d5ac5f0001f51864a528485a06e318b9e52829f0809459e5734a3db5459
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/opus_opus-intermediate:latest
#3 sha256:05bc2ce61dd2c3f377151f32d17c6395f8330d2c1712fc0efce375f6f857473f
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/opus_opus:latest
#4 sha256:1c1c279a245ebdacae5b795d2511e4c886b6695525e047f388f9ecd73399a122
#4 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/opus_opus-intermediate
#6 sha256:08e17bb0c4e931e8a11ae466c821dd6d61efde63b33349c17457aa6c5d9a95a1
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/opus_opus
#5 sha256:f0adbebae3b7ce3dbcf2a01b493be4953171059dcdc7cee0d0cd1fb52af30c80
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/opus_opus
#10 sha256:e0a00800e3fb677ee89deac8c0245b14dc70131a9534d2aff75e58a6df6c5e84
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:4a492208501e9fd807652f11bad869b6b77d7a667a57e725fdacce64ed94c83c
#12 transferring context: 17.55MB 0.6s done
#12 DONE 0.7s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:da4bde0dedb3129c710dde09f69256839dbc289b2dfaef761899d52879a567d7
#13 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:de7d6149116886067621f9e52131033df7c8dd20c52b4598e8a9ea62d5eff77e
#14 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:b71ec542150123a05b4a7b200d80fb5bd6eee8195f000f11234ce09d85b67eaf
#19 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:ec34871666669bc77996b712657ab2509ee6126c1aa7e6e040fb150a92bc7e17
#8 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:14e6f407c99b03f01a9f44e5b686414dce2383c2404c960ccbdbb55f83aef7c7
#15 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:991d78da450a253306a5279cb412465762d983d929db5a86a9cddf080931472c
#11 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:bc43de19392f9021c299ba27dd7d246490423b86c604a8ff1bebc885653cab87
#7 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:1ef3f2624b33fb620a70ffb3240af6e8b369bbe33407c25e17cd110ffffee1e9
#9 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:6f8bc22209af8612e5d74197087115f0f68683d35c0426abe13198e3fdfe73d3
#16 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:75f2b442c1b03d9eafc8e1ea5ce4874581d7a65f8c9ef76585621cb81818b539
#17 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:eece075ca0cc1f4259b89b8d61a5ae537e79b081c4e46b07b083c19336a61a6c
#18 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:7217bf7f25f14caa1f6a21750d7823de7aa5127b6e5e075d42a728a1c658f894
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:1b01bc2076a97352a6c9f678f7d7955164dff5845379fdb686e7d57d37e26973 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/opus_opus done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7fbdedf7ff70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
