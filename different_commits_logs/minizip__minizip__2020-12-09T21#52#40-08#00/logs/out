WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: minizip_minizip.
INFO:root:Please run "make test-run-afl-minizip_minizip" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:029719b7788efec0182e21c426f7f1b205ba8b1586dc9279adfe495ca4620e05
#1 transferring dockerfile:
#1 transferring dockerfile: 895B done
#1 DONE 0.2s

#2 [internal] load .dockerignore
#2 sha256:d61ecb85f0cee81f12b6c8ffaeae5fbba687700529068cbe71568ec5b7e2d6ab
#2 transferring context: 2B done
#2 DONE 0.3s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#9 [internal] load build context
#9 sha256:08838f2ccb5917353fe738203d0d2098c23a9c27455b7095279ed50b776dfc08
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/minizip_minizip
#4 sha256:bf778af08b829b59afe78f59ae4058d05efb302174329521cab3088eac8a43c9
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/minizip_minizip:latest: not found

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 CACHED

#9 [internal] load build context
#9 sha256:08838f2ccb5917353fe738203d0d2098c23a9c27455b7095279ed50b776dfc08
#9 transferring context: 1.19kB done
#9 DONE 0.1s

#6 [2/5] RUN apt-get update && apt-get install -y make cmake pkg-config
#6 sha256:4028807a9ce75095abb821d79984b15fe02b0f1c310dfb6d6dbdc3cfebf130ab
#6 0.616 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#6 0.618 Get:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#6 0.621 Get:3 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#6 0.627 Hit:4 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 0.714 Get:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#6 1.185 Get:6 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1134 kB]
#6 1.316 Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [752 kB]
#6 1.371 Get:8 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1973 kB]
#6 1.390 Get:9 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1547 kB]
#6 1.541 Get:10 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [827 kB]
#6 1.950 Fetched 6568 kB in 1s (4654 kB/s)
#6 1.950 Reading package lists...
#6 4.068 Reading package lists...
#6 5.477 Building dependency tree...
#6 5.688 Reading state information...
#6 5.900 make is already the newest version (4.2.1-1.2).
#6 5.900 make set to manually installed.
#6 5.900 The following additional packages will be installed:
#6 5.901   cmake-data libarchive13 libjsoncpp1 librhash0 libuv1
#6 5.903 Suggested packages:
#6 5.903   cmake-doc ninja-build lrzip
#6 5.951 The following NEW packages will be installed:
#6 5.954   cmake cmake-data libarchive13 libjsoncpp1 librhash0 libuv1 pkg-config
#6 6.029 0 upgraded, 7 newly installed, 0 to remove and 0 not upgraded.
#6 6.029 Need to get 5922 kB of archives.
#6 6.029 After this operation, 29.6 MB of additional disk space will be used.
#6 6.029 Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libuv1 amd64 1.34.2-1ubuntu1.3 [80.8 kB]
#6 6.118 Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 cmake-data all 3.16.3-1ubuntu1 [1612 kB]
#6 6.278 Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 libarchive13 amd64 3.4.0-2ubuntu1 [327 kB]
#6 6.307 Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 libjsoncpp1 amd64 1.7.4-3.1ubuntu2 [75.6 kB]
#6 6.315 Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 librhash0 amd64 1.3.9-1 [113 kB]
#6 6.324 Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 cmake amd64 3.16.3-1ubuntu1 [3669 kB]
#6 6.605 Get:7 http://archive.ubuntu.com/ubuntu focal/main amd64 pkg-config amd64 0.29.1-0ubuntu4 [45.5 kB]
#6 6.863 debconf: delaying package configuration, since apt-utils is not installed
#6 6.937 Fetched 5922 kB in 1s (9253 kB/s)
#6 7.027 Selecting previously unselected package libuv1:amd64.
#6 7.027 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21291 files and directories currently installed.)
#6 7.048 Preparing to unpack .../0-libuv1_1.34.2-1ubuntu1.3_amd64.deb ...
#6 7.096 Unpacking libuv1:amd64 (1.34.2-1ubuntu1.3) ...
#6 7.294 Selecting previously unselected package cmake-data.
#6 7.297 Preparing to unpack .../1-cmake-data_3.16.3-1ubuntu1_all.deb ...
#6 7.321 Unpacking cmake-data (3.16.3-1ubuntu1) ...
#6 8.083 Selecting previously unselected package libarchive13:amd64.
#6 8.087 Preparing to unpack .../2-libarchive13_3.4.0-2ubuntu1_amd64.deb ...
#6 8.098 Unpacking libarchive13:amd64 (3.4.0-2ubuntu1) ...
#6 8.311 Selecting previously unselected package libjsoncpp1:amd64.
#6 8.314 Preparing to unpack .../3-libjsoncpp1_1.7.4-3.1ubuntu2_amd64.deb ...
#6 8.340 Unpacking libjsoncpp1:amd64 (1.7.4-3.1ubuntu2) ...
#6 8.529 Selecting previously unselected package librhash0:amd64.
#6 8.532 Preparing to unpack .../4-librhash0_1.3.9-1_amd64.deb ...
#6 8.555 Unpacking librhash0:amd64 (1.3.9-1) ...
#6 8.673 Selecting previously unselected package cmake.
#6 8.676 Preparing to unpack .../5-cmake_3.16.3-1ubuntu1_amd64.deb ...
#6 8.690 Unpacking cmake (3.16.3-1ubuntu1) ...
#6 9.302 Selecting previously unselected package pkg-config.
#6 9.306 Preparing to unpack .../6-pkg-config_0.29.1-0ubuntu4_amd64.deb ...
#6 9.322 Unpacking pkg-config (0.29.1-0ubuntu4) ...
#6 9.479 Setting up libarchive13:amd64 (3.4.0-2ubuntu1) ...
#6 9.562 Setting up libuv1:amd64 (1.34.2-1ubuntu1.3) ...
#6 9.644 Setting up pkg-config (0.29.1-0ubuntu4) ...
#6 9.812 Setting up librhash0:amd64 (1.3.9-1) ...
#6 9.889 Setting up cmake-data (3.16.3-1ubuntu1) ...
#6 9.984 Setting up libjsoncpp1:amd64 (1.7.4-3.1ubuntu2) ...
#6 10.05 Setting up cmake (3.16.3-1ubuntu1) ...
#6 10.12 Processing triggers for libc-bin (2.31-0ubuntu9.2) ...
#6 DONE 11.0s

#7 [3/5] RUN git clone -b dev https://github.com/nmoinvaz/minizip
#7 sha256:4a3f9d25539ff8db2517c2452bf0454704e00f28dbe0011ce5bf5ea9b912b538
#7 0.529 Cloning into 'minizip'...
#7 DONE 2.6s

#8 [4/5] WORKDIR minizip
#8 sha256:6a16ff4c6af9be25fcb2af889624702a3ac877f398a97b01f392c1119d69513b
#8 DONE 0.3s

#10 [5/5] COPY build.sh /src/
#10 sha256:b601dd0e1d9fb5d6c1ce68172de44376079467970370fc9e420e94c515440dc8
#10 DONE 0.3s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:283278d52ef3d99fb3e69e738336f04664f57129dded611dcc4f7dd5087a9d81 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/minizip_minizip done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/minizip_minizip:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:fc0d319a465d6f8568228e45a3371b0a80f9ae1c4987bf82b303f05a383e0398
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:ea1a8545758aafc89f080f930d7429ecec4c55e67a61f0901ae885fdb0e4693b
#2 transferring context: 2B done
#2 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/minizip_minizip:latest
#3 sha256:d41528c9de382a97ea9b19ab179b8f24b17363c23ac929cd3da6c7679c1588de
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/minizip_minizip
#5 sha256:d27ad0c6de5706e7929164f92ca5018007dc8f978894cb78258ecd7c480bf805
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate
#4 sha256:bf2b3e354b0c523c6b197bdac0b3c3763948e9926732bd67cb0b030ea1e030f7
#4 ERROR: gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/minizip_minizip
#5 sha256:d27ad0c6de5706e7929164f92ca5018007dc8f978894cb78258ecd7c480bf805
#5 DONE 1.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:29ed736921e5d322abfbde4ff6f7b39a554f4bf78c0eb6bd99c25040613cbc60
#6 0.474 Cloning into '/afl'...
#6 1.287 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.287 
#6 1.287 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.287 changes and commit them, and you can discard any commits you make in this
#6 1.287 state without impacting any branches by switching back to a branch.
#6 1.287 
#6 1.287 If you want to create a new branch to retain commits you create, you may
#6 1.287 do so (now or later) by using -c with the switch command. Example:
#6 1.287 
#6 1.287   git switch -c <new-branch-name>
#6 1.287 
#6 1.287 Or undo this operation with:
#6 1.287 
#6 1.287   git switch -
#6 1.287 
#6 1.287 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.287 
#6 1.287 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.333 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.333 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.530 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.535 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.921 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.234 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.660 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.809 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.205 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.440 ln -sf afl-as as
#6 5.443 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.444 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.445 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.3s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:cb6e470d74d7a184864e9b8fd911879aa82869acf43884a5293c412f4f16bb4b
#7 0.706 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.706 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.707 Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.707 Hit:4 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 0.720 Hit:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 1.606 Reading package lists...
#7 3.119 Reading package lists...
#7 4.526 Building dependency tree...
#7 4.737 Reading state information...
#7 4.983 wget is already the newest version (1.20.3-1ubuntu2).
#7 4.983 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 5.008 --2022-02-16 13:09:07--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.011 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...
#7 5.022 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.
#7 5.044 HTTP request sent, awaiting response... 200 OK
#7 5.228 Length: 9177 (9.0K) [text/plain]
#7 5.228 Saving to: '/afl/afl_driver.cpp'
#7 5.229 
#7 5.229      0K ........                                              100% 8.53M=0.001s
#7 5.230 
#7 5.230 2022-02-16 13:09:07 (8.53 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.230 
#7 6.986 ar: creating /libAFL.a
#7 DONE 7.6s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:5ddb7bf58ac620a239560dccfdfa45ca2fb48d28bba2a3ecaf7b1d0925c00bc4 done
#8 naming to gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:6422a12f58b09e24c373966b9cbfc36bdd3568984101bb93777fceb1a12f3ad4
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:a1e590773f4e3515fe33a5946642446ac16aab2907444ea127d9f68d1421a179
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:eafbfe6f26a3adbe0b8cb698c78d72bef0ebe129d1ac8167e4d99fdf93c656c4
#8 transferring context: 559B 0.2s done
#8 DONE 0.3s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:6c36b9ce6f499a895557f05f167f110d935995bf440fc1fa82a752b7f899c34a
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:c50e574e54fc5c08272ad952174b7a505f2ffd91745c25fc275fe831a096a468
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:62fda786767e79ee0fe9518d2d00dc13f4bfb6e441b6efe7a39be60bb0a8e131
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:32ec38e95457fb165fc003710135bfe4e100c2025bdc74a88c4b8f9295e19254
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:c44614b104e766753f96d723ea7ffe86cccdbe5fba5fc34414c26a72859c063e
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:f5dc3baecf20e020c41d6b92a50f146516afed090ed7332881c5e9ffd660b8fc
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate:latest
#3 sha256:31db2fb3c876459eb2a506ae78f4eff0d411ead295df83d164db4270d9710608
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:c1dabdfed0f061ba2ef0c3c2491fcec7a416278c3427b38693059162f99e8061
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate
#6 sha256:d6e154f2c7676fb90910e7a5ac16717891aaadbfa384ffc3661487d62bb35250
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/minizip_minizip
#5 sha256:fa87fce5b6593dc0dbc6d21c408afd0a15f9150091823decc9889f28923a604d
#5 ERROR: gcr.io/fuzzbench/builders/afl/minizip_minizip:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:c1dabdfed0f061ba2ef0c3c2491fcec7a416278c3427b38693059162f99e8061
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.4s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate
#6 sha256:d6e154f2c7676fb90910e7a5ac16717891aaadbfa384ffc3661487d62bb35250
#6 DONE 1.3s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:1a83175d91996f94009fef7826c1a197e912cc1b6ce4a36fce006eb397cb1511
#8 DONE 0.9s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:0afc58f89ceee684a44f83a0cc08daec819b0798fb77712964dbdc62c70dbba8
#9 DONE 15.7s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:9827b3eb04a37f610202ad67803cb41a7183f148597ac9ea3a30318e48281f2e
#10 DONE 0.1s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:fd4f69eb0b756142c098597e1b441682fe1cf69db32eeda7bb671315cb9602f3
#11 DONE 18.4s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:1e5d178c8bb6227ce1b63db1fc7cf24483f258814449508790579cd4e57847f0
#13 DONE 0.7s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:54895d3ed2e45c4ea77c44911281c693d310cbbbd6a392b908fd99f154637108
#14 DONE 0.7s

#15 [stage-1  8/13] COPY benchmarks/minizip_minizip/benchmark.yaml /
#15 sha256:12a3a530df855a63ae94b0e55f0bdd2b3d762c2eb9a41812742c2da251e4b93a
#15 DONE 0.4s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:19fb899c47c3842d3321066214982a6e2f7e067e4fdde372f3f605a9cc670052
#16 DONE 0.6s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:1d53b57170affc83ba268af0719d609798a0efc5508650abf905db1ea424aa2e
#17 DONE 0.4s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:6b0717b2c3671ddf8d751ce061bbff5141ec0083c98a546e797561215f7bad6b
#18 0.578 Checking out commit 1d5a2cd8
#18 0.601 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 0.607 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 0.613 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 0.653 Checkout unsuccessful.
#18 DONE 0.9s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:cda16431af7ebf40df90369bd0c833b346a83802bdc3faf30c599bbbae52b2b0
#19 DONE 0.7s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:029d7b52c100d844d2633a4e61520691ad76980bcdaa991ecee22a87f4cdbbb8
#20 0.478 Run fuzzer_build to build the target
#20 0.602 FUZZ_TARGET = minizip
#20 0.602 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.602 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.614 Building benchmark minizip_minizip with fuzzer afl
#20 0.617 + cmake . '-DCMAKE_C_FLAGS=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard' '-DCMAKE_CXX_FLAGS=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard' -DMZ_BUILD_FUZZ_TEST=ON
#20 0.677 -- Using CMake version 3.21.1
#20 0.931 -- The C compiler identification is Clang 14.0.0
#20 0.958 -- Detecting C compiler ABI info
#20 1.117 -- Detecting C compiler ABI info - done
#20 1.166 -- Check for working C compiler: /usr/local/bin/clang - skipped
#20 1.169 -- Detecting C compile features
#20 1.170 -- Detecting C compile features - done
#20 1.183 -- Looking for stdint.h
#20 1.347 -- Looking for stdint.h - found
#20 1.348 -- Looking for inttypes.h
#20 1.511 -- Looking for inttypes.h - found
#20 1.512 -- Looking for sys/types.h
#20 1.672 -- Looking for sys/types.h - found
#20 1.673 -- Looking for stddef.h
#20 1.829 -- Looking for stddef.h - found
#20 1.829 -- Check size of off64_t
#20 1.881 -- Check size of off64_t - failed
#20 1.882 -- Looking for fseeko
#20 2.050 -- Looking for fseeko - found
#20 2.072 -- ZLIB library not found
#20 2.079 -- BZip2 library not found
#20 2.087 -- Checking for module 'liblzma'
#20 2.090 --   No package 'liblzma' found
#20 2.097 -- LibLZMA library not found
#20 2.105 -- Checking for module 'libzstd'
#20 2.108 --   No package 'libzstd' found
#20 2.120 -- ZSTD library not found
#20 2.120 -- Compression not supported due to missing libraries
#20 2.125 -- Found PkgConfig: /usr/bin/pkg-config (found version "0.29.1") 
#20 2.127 -- Checking for module 'openssl'
#20 2.130 --   No package 'openssl' found
#20 2.156 -- Could NOT find OpenSSL, try to set the path to OpenSSL root folder in the system variable OPENSSL_ROOT_DIR (missing: OPENSSL_CRYPTO_LIBRARY OPENSSL_INCLUDE_DIR) (found version "")
#20 2.156 -- OpenSSL library not found
#20 2.157 -- WinZIP AES support requires OpenSSL
#20 2.157 -- Signing support requires OpenSSL
#20 2.158 -- Looking for getrandom
#20 2.328 -- Looking for getrandom - found
#20 2.329 -- Looking for arc4random_buf
#20 2.383 -- Looking for arc4random_buf - not found
#20 2.384 -- Looking for arc4random
#20 2.445 -- Looking for arc4random - not found
#20 2.454 -- Checking for module 'libbsd'
#20 2.457 --   No package 'libbsd' found
#20 2.461 -- Performing Test Iconv_IS_BUILT_IN
#20 2.625 -- Performing Test Iconv_IS_BUILT_IN - Success
#20 2.629 -- Using Iconv
#20 2.895 -- The CXX compiler identification is Clang 14.0.0
#20 2.917 -- Detecting CXX compiler ABI info
#20 3.103 -- Detecting CXX compiler ABI info - done
#20 3.167 -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
#20 3.168 -- Detecting CXX compile features
#20 3.169 -- Detecting CXX compile features - done
#20 3.188 -- The following features have been enabled:
#20 3.188 
#20 3.188  * MZ_COMPAT, Enables compatibility layer
#20 3.188  * MZ_PKCRYPT, Enables PKWARE traditional encryption
#20 3.188  * MZ_ICONV, Enables iconv string encoding conversion library
#20 3.188  * MZ_BUILD_FUZZ_TESTS, Builds minizip fuzzer executables
#20 3.188 
#20 3.188 -- The following features have been disabled:
#20 3.188 
#20 3.188  * MZ_ZLIB, Enables ZLIB compression
#20 3.188  * MZ_BZIP2, Enables BZIP2 compression
#20 3.188  * MZ_LZMA, Enables LZMA & XZ compression
#20 3.188  * MZ_ZSTD, Enables ZSTD compression
#20 3.188  * MZ_LIBCOMP, Enables Apple compression
#20 3.188  * MZ_FETCH_LIBS, Enables fetching third-party libraries if not found
#20 3.188  * MZ_FORCE_FETCH_LIBS, Enables fetching third-party libraries always
#20 3.188  * MZ_WZAES, Enables WinZIP AES encryption
#20 3.188  * MZ_OPENSSL, Enables OpenSSL for encryption
#20 3.188  * MZ_LIBBSD, Build with libbsd for crypto random
#20 3.188  * MZ_SIGNING, Enables zip signing support
#20 3.188  * MZ_COMPRESS_ONLY, Only support compression
#20 3.188  * MZ_DECOMPRESS_ONLY, Only support decompression
#20 3.188  * MZ_FILE32_API, Builds using posix 32-bit file api
#20 3.188  * MZ_BUILD_TESTS, Builds minizip test executable
#20 3.188  * MZ_BUILD_UNIT_TESTS, Builds minizip unit test project
#20 3.188  * MZ_CODE_COVERAGE, Builds with code coverage flags
#20 3.188 
#20 3.188 -- Configuring done
#20 3.209 -- Generating done
#20 3.211 -- Build files have been written to: /src/minizip
#20 3.217 + make clean
#20 3.242 ++ nproc
#20 3.249 + make -j8
#20 3.277 [  5%] Building C object CMakeFiles/minizip.dir/mz_crypt.c.o
#20 3.278 [ 17%] Building C object CMakeFiles/minizip.dir/mz_strm.c.o
#20 3.279 [ 23%] Building C object CMakeFiles/minizip.dir/mz_strm_buf.c.o
#20 3.279 [ 29%] Building C object CMakeFiles/minizip.dir/mz_strm_mem.c.o
#20 3.279 [ 35%] Building C object CMakeFiles/minizip.dir/mz_strm_split.c.o
#20 3.280 [ 41%] Building C object CMakeFiles/minizip.dir/mz_zip.c.o
#20 3.280 [ 11%] Building C object CMakeFiles/minizip.dir/mz_os.c.o
#20 3.280 [ 47%] Building C object CMakeFiles/minizip.dir/mz_zip_rw.c.o
#20 3.366 [ 52%] Building C object CMakeFiles/minizip.dir/mz_os_posix.c.o
#20 3.439 [ 58%] Building C object CMakeFiles/minizip.dir/mz_strm_os_posix.c.o
#20 3.475 [ 64%] Building C object CMakeFiles/minizip.dir/mz_strm_pkcrypt.c.o
#20 3.535 [ 70%] Building C object CMakeFiles/minizip.dir/mz_compat.c.o
#20 4.241 [ 76%] Linking C static library libminizip.a
#20 4.361 [ 76%] Built target minizip
#20 4.372 [ 82%] Building C object CMakeFiles/unzip_fuzzer.dir/test/fuzz/unzip_fuzzer.c.o
#20 4.372 [ 88%] Building C object CMakeFiles/zip_fuzzer.dir/test/fuzz/zip_fuzzer.c.o
#20 4.516 [ 94%] Linking CXX executable unzip_fuzzer
#20 4.518 [100%] Linking CXX executable zip_fuzzer
#20 4.873 [100%] Built target unzip_fuzzer
#20 4.873 [100%] Built target zip_fuzzer
#20 4.905 + zip -j /out/unzip_fuzzer_seed_corpus.zip test/fuzz/unzip_fuzzer_seed_corpus/as.zip test/fuzz/unzip_fuzzer_seed_corpus/bzip2.zip test/fuzz/unzip_fuzzer_seed_corpus/comments.zip test/fuzz/unzip_fuzzer_seed_corpus/corpus.zip test/fuzz/unzip_fuzzer_seed_corpus/encrypted_pkcrypt.zip test/fuzz/unzip_fuzzer_seed_corpus/encrypted_wzaes.zip test/fuzz/unzip_fuzzer_seed_corpus/gh.zip test/fuzz/unzip_fuzzer_seed_corpus/infozip_symlinks.zip test/fuzz/unzip_fuzzer_seed_corpus/large_cd_comment.zip test/fuzz/unzip_fuzzer_seed_corpus/license_zstd.zip test/fuzz/unzip_fuzzer_seed_corpus/lzma.zip test/fuzz/unzip_fuzzer_seed_corpus/permissions.zip test/fuzz/unzip_fuzzer_seed_corpus/signed.zip test/fuzz/unzip_fuzzer_seed_corpus/storeonly.zip test/fuzz/unzip_fuzzer_seed_corpus/tiny.zip test/fuzz/unzip_fuzzer_seed_corpus/unsupported_permissions.zip test/fuzz/unzip_fuzzer_seed_corpus/xz.zip test/fuzz/unzip_fuzzer_seed_corpus/zip64.zip
#20 4.945   adding: as.zip (stored 0%)
#20 4.965   adding: bzip2.zip (stored 0%)
#20 5.041   adding: comments.zip (stored 0%)
#20 5.054   adding: corpus.zip (stored 0%)
#20 5.089   adding: encrypted_pkcrypt.zip (stored 0%)
#20 5.090   adding: encrypted_wzaes.zip (stored 0%)
#20 5.090   adding: gh.zip (stored 0%)
#20 5.090   adding: infozip_symlinks.zip (stored 0%)
#20 5.112   adding: large_cd_comment.zip (stored 0%)
#20 5.116   adding: license_zstd.zip (stored 0%)
#20 5.116   adding: lzma.zip (stored 0%)
#20 5.139   adding: permissions.zip (stored 0%)
#20 5.139   adding: signed.zip (stored 0%)
#20 5.155   adding: storeonly.zip (stored 0%)
#20 5.166   adding: tiny.zip (stored 0%)
#20 5.170   adding: unsupported_permissions.zip (stored 0%)
#20 5.183   adding: xz.zip (stored 0%)
#20 5.187   adding: zip64.zip (stored 0%)
#20 5.200 + find . -name '*_fuzzer' -exec cp -v '{}' /out ';'
#20 5.219 './unzip_fuzzer' -> '/out/unzip_fuzzer'
#20 5.223 './zip_fuzzer' -> '/out/zip_fuzzer'
#20 5.225 + find . -name '*_fuzzer.dict' -exec cp -v '{}' /out ';'
#20 5.241 './test/fuzz/unzip_fuzzer.dict' -> '/out/unzip_fuzzer.dict'
#20 5.243 + find . -name '*_fuzzer_seed_corpus.zip' -exec cp -v '{}' /out ';'
#20 5.246 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 5.8s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:6592867f5bcb4a50470fc3b67391e9f26a14c124a600d79b94a346bba641bad6 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/minizip_minizip done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/minizip_minizip:
------
#2 [internal] load .dockerignore
#2 sha256:31b1fa767ea3301c3c469885eb2c2b820deb5a071317bfdb5e853a804134db80
#2 transferring context: 2B done
#2 DONE 0.2s

#1 [internal] load build definition from runner.Dockerfile
#1 sha256:30656e992f99b2e14371720b5749b15f6ff2854afcfa0b634add6b90f54913fd
#1 transferring dockerfile: 656B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/minizip_minizip-intermediate
#5 sha256:09e91af7d5b691d78ddd20ca568dbd93050a72d8311def377490e4dea9c4858f
#5 ERROR: gcr.io/fuzzbench/runners/afl/minizip_minizip-intermediate:latest: not found

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/minizip_minizip-intermediate 0.0s done
#6 DONE 0.3s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/minizip_minizip-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:805c64f34489bd86be406262454bcee2fc090129aff06bf91029aabf0be76dc8
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:a237e255b911c7e1077734928269f08d4a04946e6ad0e4a7867d72882df5a8ea
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/minizip_minizip-intermediate:latest
#3 sha256:2cccf6b56c4ffd92b6f64387b7b597b331ce592a61845277cdc72ce19bf9efad
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/minizip_minizip:latest
#4 sha256:f27d1d4c8179c01574d143da599549d975ad3e549e9b93ffcfde1f7a30546fbb
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:0aeeea11b13bc741e37025e068511c3e47039408cdd284f67f0f5903b2978274
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/minizip_minizip-intermediate
#6 sha256:4e2ff5f56ee085f4f718bd1ab8351c5eceeb71a3247726e63d8d3ff6131889f9
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/minizip_minizip
#10 sha256:05b44d76060e5020141e0f2472c2888f6da8b2f0ee036da7eedaefa284759d29
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/minizip_minizip
#5 sha256:575d839f0d2406f42bff5fcfc59937ab3d4c91a9611b75a816997856d75263a5
#5 ERROR: gcr.io/fuzzbench/runners/afl/minizip_minizip:latest: not found

#12 [internal] load build context
#12 sha256:0aeeea11b13bc741e37025e068511c3e47039408cdd284f67f0f5903b2978274
#12 transferring context: 17.64MB 0.6s done
#12 DONE 0.8s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/minizip_minizip
#10 sha256:05b44d76060e5020141e0f2472c2888f6da8b2f0ee036da7eedaefa284759d29
#10 DONE 1.7s

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:1c3ddd8edd828d1cb8554f66ddd4cfd5bb0597b37822e341f362cea2bf65fcd2
#8 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:1cd104e2635538fef045ac1b044bd4b23edc6a66d66561af242fa78cd0d0a0ab
#7 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:d1b4d4d44bd8da1ac22e16d00e040c681b03134d7da0fe25916bd220633bc133
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:f0b7c1381860a02d3fa49930cfcfe81aad7e1d872625a7220070c09763168e31
#11 DONE 0.3s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:c8a4b6f212f2b7fa91bb4f38be42b5754a5a67adab06f194a774a5ee69e7ff97
#13 DONE 1.5s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:7109cabe655b317d7e1739fad271d907650685e41d0146a229db16917b1d982a
#14 DONE 0.3s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:db26a902de8396d3e9ecd20618e16484c16ac204974246a714b033b9b983771b
#15 DONE 0.6s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:e67f1a325f1f629b48d0d271df9b1047750b9da74b234fa904bc6bdc6d8e702e
#16 DONE 1.4s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:cba6ec6878108e94e72ef41ee015aa28393008677ed81dcb0ffa15f885c8a079
#17 DONE 0.3s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:7e4c1da22c4676723debd4185a0501ca7580d7cafcadea926f6b90655212d8d8
#18 DONE 0.2s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:a4945c5f08bf6cf44bf74ba31efc9ad7a31ad0d34ba64e393cbf9d55d087a78f
#19 DONE 0.2s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:406f4f083563deb75c39b84e4a394b163801e29369d9bcf57791fb9a289844e7
#20 DONE 0.6s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:dbca433793f8e1c8f6f09e874f4702e7a6d271843dbd0d1a8c6a4f0442070901 done
#21 naming to gcr.io/fuzzbench/runners/afl/minizip_minizip done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/minizip_minizip:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f002aeb9f70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:f0ad3e5ec52b0824c12a22693c7dd984fda46e965a5c16cab30b415c0f347dd0
#1 transferring dockerfile: 32B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:a0a318eac7c303bfdc6c4e0a42a21d9ab18d378438f2f1013183af0883a1d449
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/minizip_minizip
#4 sha256:bf778af08b829b59afe78f59ae4058d05efb302174329521cab3088eac8a43c9
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:83a0bc8aa565df400eb97f1fd3266aa6dbb6b08803031af3366a6a45edf3b45c
#9 transferring context: 30B done
#9 DONE 0.2s

#6 [2/5] RUN apt-get update && apt-get install -y make cmake pkg-config
#6 sha256:4028807a9ce75095abb821d79984b15fe02b0f1c310dfb6d6dbdc3cfebf130ab
#6 CACHED

#7 [3/5] RUN git clone -b dev https://github.com/nmoinvaz/minizip
#7 sha256:4a3f9d25539ff8db2517c2452bf0454704e00f28dbe0011ce5bf5ea9b912b538
#7 CACHED

#8 [4/5] WORKDIR minizip
#8 sha256:6a16ff4c6af9be25fcb2af889624702a3ac877f398a97b01f392c1119d69513b
#8 CACHED

#10 [5/5] COPY build.sh /src/
#10 sha256:6275626ffabe183f130acb65116ecbf772eef86517755d777d6c9f085f1453d3
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:283278d52ef3d99fb3e69e738336f04664f57129dded611dcc4f7dd5087a9d81
#11 writing image sha256:283278d52ef3d99fb3e69e738336f04664f57129dded611dcc4f7dd5087a9d81 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/minizip_minizip done
#11 DONE 0.3s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:805713548e31e425882d528e5173a06cdce2639298c8f3b63ecdcc637a0a331f
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:5b54f9569d40d262f7c6ab9cdc703c24a37af25b1b5eb2932bc97febe818a9da
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/minizip_minizip:latest
#3 sha256:d41528c9de382a97ea9b19ab179b8f24b17363c23ac929cd3da6c7679c1588de
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/minizip_minizip
#5 sha256:d27ad0c6de5706e7929164f92ca5018007dc8f978894cb78258ecd7c480bf805
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate
#4 sha256:bf2b3e354b0c523c6b197bdac0b3c3763948e9926732bd67cb0b030ea1e030f7
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:29ed736921e5d322abfbde4ff6f7b39a554f4bf78c0eb6bd99c25040613cbc60
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:cb6e470d74d7a184864e9b8fd911879aa82869acf43884a5293c412f4f16bb4b
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:5ddb7bf58ac620a239560dccfdfa45ca2fb48d28bba2a3ecaf7b1d0925c00bc4 done
#8 naming to gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:54e8b075fd16d56a2a68d169025e4f37522df26e8d76837329bc83123ff55842
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:b03dcc6d02ff20d5f8f6ffbbbff1afff2a8b8af99b760e2d9e706c1be4b045c1
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:3dc4f38bcc7d7f936c497c9158e14af2195d524d2241879b062f995bd2baa20e
#8 transferring context: 559B 0.1s done
#8 DONE 0.2s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:5cd8a485ddd14e0ba3841872b69a174fc68bf2c1c8a186c0657e770b0df3bccd
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:8af7bc068058f4227e072d59af5c50d339360016abc2f75988057cf547a06f90
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:22bb2c4f5ec7c1f5c50876eb05119e11a500557cd7ae5271125ea70e0729bb29
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:96823edda0dd09f862e794f51b6a6bc83c5842a9b723abe8358212f7eeeb26aa
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.2s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:735f539757c7d57f6372853ed3a5b947f02b7caac699e8fee118e8d4481e0f81
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:508ce71055ce1b33d7653169cb1cf870256e359e44692e8a3b7a3ffd0d0d6705
#2 transferring context: 34B done
#2 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate:latest
#4 sha256:31db2fb3c876459eb2a506ae78f4eff0d411ead295df83d164db4270d9710608
#4 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/minizip_minizip-intermediate
#6 sha256:d6e154f2c7676fb90910e7a5ac16717891aaadbfa384ffc3661487d62bb35250
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/minizip_minizip
#5 sha256:fa87fce5b6593dc0dbc6d21c408afd0a15f9150091823decc9889f28923a604d
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:5ad5edb77755c3081ce0804e00599dca9ffe6cdaa05a187c0c981948a5d19203
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.2s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:bb862ff3d10043cbaef807562a0585924a29b0f56c921a97b85a021965bbc7f0
#14 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:176134a8add4008170f5e602b680ead7c540616c5739f914280cea54d54e710c
#16 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:1a83175d91996f94009fef7826c1a197e912cc1b6ce4a36fce006eb397cb1511
#8 CACHED

#15 [stage-1  8/13] COPY benchmarks/minizip_minizip/benchmark.yaml /
#15 sha256:ca9282f779002c88fcdac4891074ec7d7d0d902defb4f19a4b03cd73650723f4
#15 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:ad1c44fdf10cc15030807c186ed8be6d2a7f8feb91d19b017bb8cce81f607d22
#13 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:fd4f69eb0b756142c098597e1b441682fe1cf69db32eeda7bb671315cb9602f3
#11 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:88f1cdc480d9c7d1b47ba48eee1f7813508abea64491bb378ae2bc4dc84bb0b9
#17 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:e5dea3592049ff27eaaf11ef4428a795ac14ec67fa0a5c944b0995b26b8dc192
#18 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:0afc58f89ceee684a44f83a0cc08daec819b0798fb77712964dbdc62c70dbba8
#9 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:050791c66b990e0af471841f568bfa51e8c1a40e64e01110f002a6c589880315
#19 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:9827b3eb04a37f610202ad67803cb41a7183f148597ac9ea3a30318e48281f2e
#10 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:38e5885d50e6475e341a53e2fc6b0006a5884b3a3be3775dde1149b420930070
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:6592867f5bcb4a50470fc3b67391e9f26a14c124a600d79b94a346bba641bad6
#21 writing image sha256:6592867f5bcb4a50470fc3b67391e9f26a14c124a600d79b94a346bba641bad6 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/minizip_minizip done
#21 DONE 0.5s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:e0552743d0e6be703f7ef013a1d3f26c5c65ed56dd953f53f302ce922588f888
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:4d14da805af9593dc9fd673142357b5c6cca4451b6aad9759542df7fd073c162
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/minizip_minizip-intermediate
#5 sha256:09e91af7d5b691d78ddd20ca568dbd93050a72d8311def377490e4dea9c4858f
#5 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/minizip_minizip-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:fec76bfe35f5947e671172329d4d6a1391a64d4a0cf2eb85615f5802105b4857
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:44c5006eea19c67695a5f3b8e12cadab5e2b848b5643a87a73220911a76a2cc4
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/minizip_minizip-intermediate:latest
#3 sha256:2cccf6b56c4ffd92b6f64387b7b597b331ce592a61845277cdc72ce19bf9efad
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/minizip_minizip:latest
#4 sha256:f27d1d4c8179c01574d143da599549d975ad3e549e9b93ffcfde1f7a30546fbb
#4 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/minizip_minizip-intermediate
#6 sha256:4e2ff5f56ee085f4f718bd1ab8351c5eceeb71a3247726e63d8d3ff6131889f9
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/minizip_minizip
#5 sha256:575d839f0d2406f42bff5fcfc59937ab3d4c91a9611b75a816997856d75263a5
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/minizip_minizip
#10 sha256:05b44d76060e5020141e0f2472c2888f6da8b2f0ee036da7eedaefa284759d29
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:760ba058e7ed9407bd3aa396191282d413ff6a917dc5d66d33f37992e0d49de8
#12 transferring context: 17.64MB 0.6s done
#12 DONE 1.0s

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:d1b4d4d44bd8da1ac22e16d00e040c681b03134d7da0fe25916bd220633bc133
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:f0b7c1381860a02d3fa49930cfcfe81aad7e1d872625a7220070c09763168e31
#11 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:1c3ddd8edd828d1cb8554f66ddd4cfd5bb0597b37822e341f362cea2bf65fcd2
#8 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:c31dcf4ae87753ac85d7ea4520197b9681791b4f1ae62e8be442ba1eacf862d2
#15 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:54f40e05a470f64f4bec5080926717cfc61f073035443df932aa8106f79d9974
#16 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:cd1c3f98299f426543cf827731846e9f4237df09ff4a3cc41f7fa0496e1ede5e
#17 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:cbfb50bfaa53018a622e2df13a05f83a50209f3bfecbdddcb3881d9a90d19bd0
#19 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:1cd104e2635538fef045ac1b044bd4b23edc6a66d66561af242fa78cd0d0a0ab
#7 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:f81ccf5c8520e260406bebc49503a2e39d848f65dba963e360d314bd13202868
#13 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:a07206421f39ff1ac48b80a576ef80dc3b0f7d0ac038231389e021802d08d1ba
#14 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:bd277bfea8e710b4102bd9a7a097ce5c789b681db743b7b7fc8a9ab1875760cf
#18 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:87d6496117e8603aa2749dd4ee5b7eb750fcfa91a59a82b552d32da2a2d0518d
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:dbca433793f8e1c8f6f09e874f4702e7a6d271843dbd0d1a8c6a4f0442070901
#21 writing image sha256:dbca433793f8e1c8f6f09e874f4702e7a6d271843dbd0d1a8c6a4f0442070901 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/minizip_minizip done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7fe1f9138f70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
