WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: zlib_compress_fuzzer.
INFO:root:Please run "make test-run-afl-zlib_compress_fuzzer" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:edc3a4dfd1a859081000103806c06cd15de9e8b61249988014997b103c59869b
#1 transferring dockerfile: 925B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:8c78b5f3960f3512de149cbd4820d3595023630c1c068220335260b534b0911e
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#9 [internal] load build context
#9 sha256:1be934ee58cf3f223e913efcb9323019a3e1d89e9826decbffa2422de0dffafb
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:77750d283f2957d1beeddda2e8f6c5604ab5f969a3616e9cac40f4261ca04c0a
#5 sha256:7999addb2cd81975cd6421c6aaef5643a901995c540a40e8df741ab4c30f6043
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/zlib_compress_fuzzer
#4 sha256:fb870bf95ea84e1d3d319e79f8dc5c9a1700e539abb7f1e69642ced0ea1747ab
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/zlib_compress_fuzzer:latest: not found

#9 [internal] load build context
#9 sha256:1be934ee58cf3f223e913efcb9323019a3e1d89e9826decbffa2422de0dffafb
#9 transferring context: 34.45kB done
#9 DONE 0.0s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:52e32c454805a8c94e441551d01b16d090304920e0b4ce6b465dec91bafa72a3
#6 CACHED

#7 [3/5] RUN git clone --depth 1 -b develop https://github.com/madler/zlib.git
#7 sha256:f0bc315b74d41abe7af8731ffa647bc6fe9bf8a67b7a4851eacf3d1ca44b4120
#7 CACHED

#8 [4/5] WORKDIR zlib
#8 sha256:64713c70ad922c74cc30dabac865ace84eb0dd0f10ba324f819d64d403c1585f
#8 CACHED

#10 [5/5] COPY build.sh *_fuzzer.c* /src/
#10 sha256:d1ff3b7b2c1c4feadc6468fd9b78137a0177f388e2da7b9363adc3e0c1f4b149
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:62efc2de0b5969692ab4d69d20102e44a9338594321db16cb83fc2b696faefd2 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/zlib_compress_fuzzer done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/zlib_compress_fuzzer:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:253bcf689885a8a5809768c6f9d860b59bfe39834f6603c2d33adccde794e2ef
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:65b6348200a3e26b18d58ea46e16a0874c16f3778041798c86bde50795c60cc8
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/zlib_compress_fuzzer:latest
#3 sha256:bdcd8ebed38996ad90bba66721016e21ae19f1b7c7400d39493f830933f25303
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/zlib_compress_fuzzer
#5 sha256:13d29555603f66d411a522247983387aeeff8b653149fba5aff742e0418e75f6
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer-intermediate
#4 sha256:da5db19911a760d96c3ad0fc14af069a1ef3b7a89625301a091ec76a8fe8c8ef
#4 ERROR: gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer-intermediate:latest: not found

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:e368d225773fba929b54ab9ef2297fe6a48b2a7686567ee47550fa9402c1025b
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:8c150c4b1f5a48a0a6ab9be38e481e7813fc16d1010955e796e2834235bb2214
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:6efaf047c93c939bc3378fb38fb1464ad52e9d75158d5ffb2389df1bdd807b96 done
#8 naming to gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:569aaa91ac81153c8560c6a1c0f3cee8960eb6a59260f956a0385866b6478688
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:12e5e12d502d8bc19b847cdeebe045de6e4ccbef4495cc22d87993aa7a1cf76c
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:50b8593d33e8068a081f81eb2627aca1aa6c82436f2ea370b3582bbd388b62fe
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:fb8d797d29d68ac35954a1790fcf4778ee788b06ddf747d87bc9e8b9645b95d3
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:e0cd1818f4815b0a709527151d4e1bcf661ef7ef759176beb7c0c699a9f6db50
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:b9f64e08e0b0926033b6ce968ba1e3bf0dcebb00f46f9ae6b153b00a79fb3030
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:fff0bb00a810f8ecca03f36e59dbf18e7fae068f9bee8acca301f9a56688e2eb
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:db37108b741762d6fc963c78f4ea99d80edbbe38f2ea9e4cf93847b349417cfa 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:e914c2e81fa1855f81a7335eb9fd8f5bf0f83421971f2199141655795fe0dd24
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:bdcc909ed9e9fccb3c941d97305cdcd5d6e1994555156bf5fc1902b7753936a6
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer-intermediate:latest
#3 sha256:f07c9d8b2204b7175b53d2799445c7325fbd0211e8a2409556ffeadb43ebb37a
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:6beb376d6995e3ec9d96399ae1476d18c2c38f3c0e01f6ef8c06c62714592792
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer-intermediate
#6 sha256:11c017d543eae9450b5d81b4a64beac92cee054acf3aeab495d478266df76c6e
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer
#5 sha256:6989cefb565b4dc2214e611c73aa45209d7fa6d2f126766512a9394db636e1b8
#5 ERROR: gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:6beb376d6995e3ec9d96399ae1476d18c2c38f3c0e01f6ef8c06c62714592792
#12 transferring context: 669.88kB 0.1s done
#12 DONE 0.1s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:d717a3afee12350f9cd37d0bcb0445ceb7e491596069f5fb411e3c2c40e53e13
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:4160f73fb5640af33d7b60f3c64c4477511c9852e1c61cbef385ae3cc636723d
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:6035fc08ffdef737843298219a7dae5e9df185b6dc646fd95bb1f4611149817f
#11 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:d32daa561684ca231853766c498368e70b2a7246c2cfe991dea8fda41586ddfb
#8 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:81eb0efa0175f026030f3ccf2d17b421009bfd0b4a036bc0e4bdfeec43b23a67
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:2b9a7158d271ca0106fe14e0e424fa965571279983e5f87f4044f32137ff2c6d
#14 DONE 0.6s

#15 [stage-1  8/13] COPY benchmarks/zlib_compress_fuzzer/benchmark.yaml /
#15 sha256:b054905cd04fc3de101dfeadb44e00b0d4a7ee818bf9d102befd814cd6f1f619
#15 DONE 0.2s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:d46c8648653ca9bcabeff5e7e32afec55618448e6c6f0f0f6b685daee9f62139
#16 DONE 0.4s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:8cfaed2510bc89f971ae75a4c452aa70266178162847d7a17013cc749419add6
#17 DONE 0.1s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:17d38763c5afa1a9809a81ee515271804915e218c63e0c6462437d357531c8e2
#18 0.454 Checking out commit 1d5a2cd8
#18 2.418 From https://github.com/madler/zlib
#18 2.418  * [new tag]         v0.71       -> v0.71
#18 2.418  * [new tag]         v0.79       -> v0.79
#18 2.418  * [new tag]         v0.8        -> v0.8
#18 2.419  * [new tag]         v0.9        -> v0.9
#18 2.419  * [new tag]         v0.91       -> v0.91
#18 2.419  * [new tag]         v0.92       -> v0.92
#18 2.419  * [new tag]         v0.93       -> v0.93
#18 2.420  * [new tag]         v0.94       -> v0.94
#18 2.420  * [new tag]         v0.95       -> v0.95
#18 2.420  * [new tag]         v0.99       -> v0.99
#18 2.421  * [new tag]         v1.0-pre    -> v1.0-pre
#18 2.421  * [new tag]         v1.0.1      -> v1.0.1
#18 2.421  * [new tag]         v1.0.2      -> v1.0.2
#18 2.421  * [new tag]         v1.0.4      -> v1.0.4
#18 2.422  * [new tag]         v1.0.5      -> v1.0.5
#18 2.422  * [new tag]         v1.0.7      -> v1.0.7
#18 2.422  * [new tag]         v1.0.8      -> v1.0.8
#18 2.422  * [new tag]         v1.0.9      -> v1.0.9
#18 2.423  * [new tag]         v1.1.0      -> v1.1.0
#18 2.423  * [new tag]         v1.1.1      -> v1.1.1
#18 2.423  * [new tag]         v1.1.2      -> v1.1.2
#18 2.423  * [new tag]         v1.1.3      -> v1.1.3
#18 2.424  * [new tag]         v1.1.4      -> v1.1.4
#18 2.424  * [new tag]         v1.2.0      -> v1.2.0
#18 2.424  * [new tag]         v1.2.0.1    -> v1.2.0.1
#18 2.424  * [new tag]         v1.2.0.2    -> v1.2.0.2
#18 2.425  * [new tag]         v1.2.0.3    -> v1.2.0.3
#18 2.425  * [new tag]         v1.2.0.4    -> v1.2.0.4
#18 2.425  * [new tag]         v1.2.0.5    -> v1.2.0.5
#18 2.425  * [new tag]         v1.2.0.6    -> v1.2.0.6
#18 2.425  * [new tag]         v1.2.0.7    -> v1.2.0.7
#18 2.426  * [new tag]         v1.2.0.8    -> v1.2.0.8
#18 2.426  * [new tag]         v1.2.1      -> v1.2.1
#18 2.426  * [new tag]         v1.2.1.1    -> v1.2.1.1
#18 2.427  * [new tag]         v1.2.1.2    -> v1.2.1.2
#18 2.427  * [new tag]         v1.2.10     -> v1.2.10
#18 2.427  * [new tag]         v1.2.11     -> v1.2.11
#18 2.427  * [new tag]         v1.2.2      -> v1.2.2
#18 2.428  * [new tag]         v1.2.2.1    -> v1.2.2.1
#18 2.428  * [new tag]         v1.2.2.2    -> v1.2.2.2
#18 2.428  * [new tag]         v1.2.2.3    -> v1.2.2.3
#18 2.428  * [new tag]         v1.2.2.4    -> v1.2.2.4
#18 2.429  * [new tag]         v1.2.3      -> v1.2.3
#18 2.429  * [new tag]         v1.2.3.1    -> v1.2.3.1
#18 2.429  * [new tag]         v1.2.3.2    -> v1.2.3.2
#18 2.429  * [new tag]         v1.2.3.3    -> v1.2.3.3
#18 2.430  * [new tag]         v1.2.3.4    -> v1.2.3.4
#18 2.430  * [new tag]         v1.2.3.5    -> v1.2.3.5
#18 2.430  * [new tag]         v1.2.3.6    -> v1.2.3.6
#18 2.430  * [new tag]         v1.2.3.7    -> v1.2.3.7
#18 2.431  * [new tag]         v1.2.3.8    -> v1.2.3.8
#18 2.431  * [new tag]         v1.2.3.9    -> v1.2.3.9
#18 2.431  * [new tag]         v1.2.4      -> v1.2.4
#18 2.431  * [new tag]         v1.2.4-pre1 -> v1.2.4-pre1
#18 2.432  * [new tag]         v1.2.4-pre2 -> v1.2.4-pre2
#18 2.432  * [new tag]         v1.2.4.1    -> v1.2.4.1
#18 2.432  * [new tag]         v1.2.4.2    -> v1.2.4.2
#18 2.432  * [new tag]         v1.2.4.3    -> v1.2.4.3
#18 2.433  * [new tag]         v1.2.4.4    -> v1.2.4.4
#18 2.433  * [new tag]         v1.2.4.5    -> v1.2.4.5
#18 2.433  * [new tag]         v1.2.5      -> v1.2.5
#18 2.433  * [new tag]         v1.2.5.1    -> v1.2.5.1
#18 2.434  * [new tag]         v1.2.5.2    -> v1.2.5.2
#18 2.434  * [new tag]         v1.2.5.3    -> v1.2.5.3
#18 2.434  * [new tag]         v1.2.6      -> v1.2.6
#18 2.434  * [new tag]         v1.2.6.1    -> v1.2.6.1
#18 2.435  * [new tag]         v1.2.7      -> v1.2.7
#18 2.435  * [new tag]         v1.2.7.1    -> v1.2.7.1
#18 2.435  * [new tag]         v1.2.7.2    -> v1.2.7.2
#18 2.435  * [new tag]         v1.2.7.3    -> v1.2.7.3
#18 2.436  * [new tag]         v1.2.8      -> v1.2.8
#18 2.436  * [new tag]         v1.2.9      -> v1.2.9
#18 2.443 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 2.447 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 2.454 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 2.497 Checkout unsuccessful.
#18 DONE 2.6s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:5e115188a8cdb3361a8b3e466b90a9e2ed064fe407c6d392e8fa6d748bec3d5a
#19 DONE 0.6s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:fec16cfd998e5176906a50337c2783a4750ce9f2c225a9bafd61e2b003f3f16e
#20 0.512 Run fuzzer_build to build the target
#20 0.641 FUZZ_TARGET = compress_fuzzer
#20 0.641 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.641 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.646 Building benchmark zlib_compress_fuzzer with fuzzer afl
#20 0.649 + ./configure
#20 0.819 Checking for shared library support...
#20 0.890 Building shared library libz.so.1.2.11.1-motley with clang.
#20 0.931 Checking for size_t... Yes.
#20 0.957 Checking for off64_t... Yes.
#20 0.959 Checking for fseeko... Yes.
#20 1.105 Checking for strerror... Yes.
#20 1.146 Checking for unistd.h... Yes.
#20 1.180 Checking for stdarg.h... Yes.
#20 1.224 Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().
#20 1.367 Checking for vsnprintf() in stdio.h... Yes.
#20 1.404 Checking for return value of vsnprintf()... Yes.
#20 1.429 Checking for attribute(visibility) support... Yes.
#20 1.444 ++ nproc
#20 1.446 + make -j8 clean
#20 1.449 rm -f *.o *.lo *~ \
#20 1.449    example minigzip examplesh minigzipsh \
#20 1.449    example64 minigzip64 \
#20 1.449    infcover \
#20 1.449    libz.* foo.gz so_locations \
#20 1.449    _match.s maketree contrib/infback9/*.o
#20 1.451 rm -rf objs
#20 1.452 rm -f *.gcda *.gcno *.gcov
#20 1.455 rm -f contrib/infback9/*.gcda contrib/infback9/*.gcno contrib/infback9/*.gcov
#20 1.457 ++ nproc
#20 1.459 + make -j8 all
#20 1.462 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -c -o example.o test/example.c
#20 1.463 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o adler32.o adler32.c
#20 1.463 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o crc32.o crc32.c
#20 1.463 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o deflate.o deflate.c
#20 1.464 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o infback.o infback.c
#20 1.465 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o inffast.o inffast.c
#20 1.465 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o inflate.o inflate.c
#20 1.466 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o inftrees.o inftrees.c
#20 1.657 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o trees.o trees.c
#20 1.680 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o zutil.o zutil.c
#20 1.701 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o compress.o compress.c
#20 1.769 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o uncompr.o uncompr.c
#20 1.769 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzclose.o gzclose.c
#20 1.781 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzlib.o gzlib.c
#20 1.805 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzread.o gzread.c
#20 1.842 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzwrite.o gzwrite.c
#20 1.853 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -c -o minigzip.o test/minigzip.c
#20 2.032 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/adler32.o adler32.c
#20 2.034 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/crc32.o crc32.c
#20 2.038 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/deflate.o deflate.c
#20 2.131 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/infback.o infback.c
#20 2.165 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/inffast.o inffast.c
#20 2.237 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/inflate.o inflate.c
#20 2.348 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/inftrees.o inftrees.c
#20 2.417 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/trees.o trees.c
#20 2.523 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/zutil.o zutil.c
#20 2.574 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/compress.o compress.c
#20 2.618 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/uncompr.o uncompr.c
#20 2.650 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzclose.o gzclose.c
#20 2.658 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzlib.o gzlib.c
#20 2.698 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzread.o gzread.c
#20 2.738 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzwrite.o gzwrite.c
#20 2.784 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -D_FILE_OFFSET_BITS=64 -c -o example64.o test/example.c
#20 2.852 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -D_FILE_OFFSET_BITS=64 -c -o minigzip64.o test/minigzip.c
#20 2.903 ar rc libz.a adler32.o crc32.o deflate.o infback.o inffast.o inflate.o inftrees.o trees.o zutil.o compress.o uncompr.o gzclose.o gzlib.o gzread.o gzwrite.o 
#20 2.926 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o example example.o -L. libz.a
#20 3.025 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o minigzip minigzip.o -L. libz.a
#20 3.027 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o example64 example64.o -L. libz.a
#20 3.028 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o minigzip64 minigzip64.o -L. libz.a
#20 3.497 clang -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o libz.so.1.2.11.1-motley adler32.lo crc32.lo deflate.lo infback.lo inffast.lo inflate.lo inftrees.lo trees.lo zutil.lo compress.lo uncompr.lo gzclose.lo gzlib.lo gzread.lo gzwrite.lo  -lc 
#20 3.570 rm -f libz.so libz.so.1
#20 3.572 ln -s libz.so.1.2.11.1-motley libz.so
#20 3.578 ln -s libz.so.1.2.11.1-motley libz.so.1
#20 3.581 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o examplesh example.o -L. libz.so.1.2.11.1-motley
#20 3.581 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o minigzipsh minigzip.o -L. libz.so.1.2.11.1-motley
#20 3.700 ++ find /src -name '*_fuzzer.cc'
#20 3.720 + for f in $(find $SRC -name '*_fuzzer.cc')
#20 3.720 ++ basename -s .cc /src/zlib_uncompress2_fuzzer.cc
#20 3.721 + b=zlib_uncompress2_fuzzer
#20 3.721 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I. /src/zlib_uncompress2_fuzzer.cc -o /out/zlib_uncompress2_fuzzer /libAFL.a ./libz.a
#20 4.019 + for f in $(find $SRC -name '*_fuzzer.cc')
#20 4.019 ++ basename -s .cc /src/zlib_uncompress_fuzzer.cc
#20 4.021 + b=zlib_uncompress_fuzzer
#20 4.021 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I. /src/zlib_uncompress_fuzzer.cc -o /out/zlib_uncompress_fuzzer /libAFL.a ./libz.a
#20 4.306 + zip /out/seed_corpus.zip CMakeLists.txt Makefile.in adler32.c adler32.lo adler32.o compress.c compress.lo compress.o configure.log crc32.c crc32.h crc32.lo crc32.o deflate.c deflate.h deflate.lo deflate.o example.o example64.o gzclose.c gzclose.lo gzclose.o gzguts.h gzlib.c gzlib.lo gzlib.o gzread.c gzread.lo gzread.o gzwrite.c gzwrite.lo gzwrite.o infback.c infback.lo infback.o inffast.c inffast.h inffast.lo inffast.o inffixed.h inflate.c inflate.h inflate.lo inflate.o inftrees.c inftrees.h inftrees.lo inftrees.o libz.a libz.so libz.so.1 libz.so.1.2.11.1-motley make_vms.com minigzip.o minigzip64.o treebuild.xml trees.c trees.h trees.lo trees.o uncompr.c uncompr.lo uncompr.o zconf.h zconf.h.cmakein zconf.h.in zlib.3 zlib.3.pdf zlib.h zlib.map zlib.pc zlib.pc.cmakein zlib.pc.in zutil.c zutil.h zutil.lo zutil.o
#20 4.310   adding: CMakeLists.txt (deflated 68%)
#20 4.310   adding: Makefile.in (deflated 77%)
#20 4.311   adding: adler32.c (deflated 69%)
#20 4.312   adding: adler32.lo (deflated 70%)
#20 4.312   adding: adler32.o (deflated 70%)
#20 4.313   adding: compress.c (deflated 63%)
#20 4.313   adding: compress.lo (deflated 71%)
#20 4.314   adding: compress.o (deflated 71%)
#20 4.314   adding: configure.log (deflated 79%)
#20 4.314   adding: crc32.c (deflated 75%)
#20 4.316   adding: crc32.h (deflated 61%)
#20 4.353   adding: crc32.lo (deflated 43%)
#20 4.354   adding: crc32.o (deflated 47%)
#20 4.355   adding: deflate.c (deflated 76%)
#20 4.358   adding: deflate.h (deflated 64%)
#20 4.359   adding: deflate.lo (deflated 77%)
#20 4.364   adding: deflate.o (deflated 79%)
#20 4.369   adding: example.o (deflated 77%)
#20 4.370   adding: example64.o (deflated 77%)
#20 4.371   adding: gzclose.c (deflated 41%)
#20 4.371   adding: gzclose.lo (deflated 67%)
#20 4.372   adding: gzclose.o (deflated 67%)
#20 4.372   adding: gzguts.h (deflated 63%)
#20 4.372   adding: gzlib.c (deflated 73%)
#20 4.373   adding: gzlib.lo (deflated 77%)
#20 4.374   adding: gzlib.o (deflated 78%)
#20 4.375   adding: gzread.c (deflated 74%)
#20 4.377   adding: gzread.lo (deflated 74%)
#20 4.379   adding: gzread.o (deflated 74%)
#20 4.381   adding: gzwrite.c (deflated 79%)
#20 4.382   adding: gzwrite.lo (deflated 75%)
#20 4.384   adding: gzwrite.o (deflated 75%)
#20 4.386   adding: infback.c (deflated 76%)
#20 4.387   adding: infback.lo (deflated 69%)
#20 4.388   adding: infback.o (deflated 69%)
#20 4.390   adding: inffast.c (deflated 75%)
#20 4.390   adding: inffast.h (deflated 32%)
#20 4.390   adding: inffast.lo (deflated 69%)
#20 4.391   adding: inffast.o (deflated 66%)
#20 4.392   adding: inffixed.h (deflated 75%)
#20 4.392   adding: inflate.c (deflated 77%)
#20 4.394   adding: inflate.h (deflated 67%)
#20 4.395   adding: inflate.lo (deflated 73%)
#20 4.400   adding: inflate.o (deflated 73%)
#20 4.406   adding: inftrees.c (deflated 67%)
#20 4.407   adding: inftrees.h (deflated 58%)
#20 4.408   adding: inftrees.lo (deflated 67%)
#20 4.409   adding: inftrees.o (deflated 66%)
#20 4.409   adding: libz.a (deflated 73%)
#20 4.430   adding: libz.so (deflated 55%)
#20 4.442   adding: libz.so.1 (deflated 55%)
#20 4.454   adding: libz.so.1.2.11.1-motley (deflated 55%)
#20 4.466   adding: make_vms.com (deflated 72%)
#20 4.467   adding: minigzip.o (deflated 74%)
#20 4.468   adding: minigzip64.o (deflated 74%)
#20 4.469   adding: treebuild.xml (deflated 80%)
#20 4.469   adding: trees.c (deflated 73%)
#20 4.473   adding: trees.h (deflated 83%)
#20 4.473   adding: trees.lo (deflated 72%)
#20 4.475   adding: trees.o (deflated 71%)
#20 4.477   adding: uncompr.c (deflated 62%)
#20 4.477   adding: uncompr.lo (deflated 66%)
#20 4.477   adding: uncompr.o (deflated 66%)
#20 4.477   adding: zconf.h (deflated 73%)
#20 4.478   adding: zconf.h.cmakein (deflated 73%)
#20 4.479   adding: zconf.h.in (deflated 73%)
#20 4.479   adding: zlib.3 (deflated 54%)
#20 4.479   adding: zlib.3.pdf (deflated 17%)
#20 4.480   adding: zlib.h (deflated 73%)
#20 4.488   adding: zlib.map (deflated 68%)
#20 4.488   adding: zlib.pc (deflated 38%)
#20 4.488   adding: zlib.pc.cmakein (deflated 39%)
#20 4.488   adding: zlib.pc.in (deflated 38%)
#20 4.488   adding: zutil.c (deflated 65%)
#20 4.489   adding: zutil.h (deflated 63%)
#20 4.489   adding: zutil.lo (deflated 72%)
#20 4.489   adding: zutil.o (deflated 73%)
#20 4.491 ++ find /src -name '*_fuzzer.c'
#20 4.510 + for f in $(find $SRC -name '*_fuzzer.c')
#20 4.510 ++ basename -s .c /src/checksum_fuzzer.c
#20 4.511 + b=checksum_fuzzer
#20 4.511 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/checksum_fuzzer.c -c -o /tmp/checksum_fuzzer.o
#20 4.594 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/checksum_fuzzer /tmp/checksum_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 4.831 + rm -f /tmp/checksum_fuzzer.o
#20 4.832 + ln -sf /out/seed_corpus.zip /out/checksum_fuzzer_seed_corpus.zip
#20 4.834 + for f in $(find $SRC -name '*_fuzzer.c')
#20 4.834 ++ basename -s .c /src/compress_fuzzer.c
#20 4.836 + b=compress_fuzzer
#20 4.836 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/compress_fuzzer.c -c -o /tmp/compress_fuzzer.o
#20 4.901 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/compress_fuzzer /tmp/compress_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 5.141 + rm -f /tmp/compress_fuzzer.o
#20 5.142 + ln -sf /out/seed_corpus.zip /out/compress_fuzzer_seed_corpus.zip
#20 5.144 + for f in $(find $SRC -name '*_fuzzer.c')
#20 5.144 ++ basename -s .c /src/example_small_fuzzer.c
#20 5.145 + b=example_small_fuzzer
#20 5.145 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/example_small_fuzzer.c -c -o /tmp/example_small_fuzzer.o
#20 5.226 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/example_small_fuzzer /tmp/example_small_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 5.465 + rm -f /tmp/example_small_fuzzer.o
#20 5.466 + ln -sf /out/seed_corpus.zip /out/example_small_fuzzer_seed_corpus.zip
#20 5.467 + for f in $(find $SRC -name '*_fuzzer.c')
#20 5.468 ++ basename -s .c /src/example_large_fuzzer.c
#20 5.469 + b=example_large_fuzzer
#20 5.469 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/example_large_fuzzer.c -c -o /tmp/example_large_fuzzer.o
#20 5.545 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/example_large_fuzzer /tmp/example_large_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 5.783 + rm -f /tmp/example_large_fuzzer.o
#20 5.784 + ln -sf /out/seed_corpus.zip /out/example_large_fuzzer_seed_corpus.zip
#20 5.786 + for f in $(find $SRC -name '*_fuzzer.c')
#20 5.786 ++ basename -s .c /src/example_flush_fuzzer.c
#20 5.787 + b=example_flush_fuzzer
#20 5.787 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/example_flush_fuzzer.c -c -o /tmp/example_flush_fuzzer.o
#20 5.858 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/example_flush_fuzzer /tmp/example_flush_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 6.110 + rm -f /tmp/example_flush_fuzzer.o
#20 6.111 + ln -sf /out/seed_corpus.zip /out/example_flush_fuzzer_seed_corpus.zip
#20 6.112 + for f in $(find $SRC -name '*_fuzzer.c')
#20 6.112 ++ basename -s .c /src/example_dict_fuzzer.c
#20 6.114 + b=example_dict_fuzzer
#20 6.114 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/example_dict_fuzzer.c -c -o /tmp/example_dict_fuzzer.o
#20 6.192 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/example_dict_fuzzer /tmp/example_dict_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 6.441 + rm -f /tmp/example_dict_fuzzer.o
#20 6.442 + ln -sf /out/seed_corpus.zip /out/example_dict_fuzzer_seed_corpus.zip
#20 6.443 + for f in $(find $SRC -name '*_fuzzer.c')
#20 6.444 ++ basename -s .c /src/minigzip_fuzzer.c
#20 6.445 + b=minigzip_fuzzer
#20 6.445 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/minigzip_fuzzer.c -c -o /tmp/minigzip_fuzzer.o
#20 6.544 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/minigzip_fuzzer /tmp/minigzip_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 6.788 + rm -f /tmp/minigzip_fuzzer.o
#20 6.790 + ln -sf /out/seed_corpus.zip /out/minigzip_fuzzer_seed_corpus.zip
#20 6.792 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 7.0s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:8a84f2546991db0b18c649ebc1e7c64e036d775470ac33ef79b447efa1946290
#21 writing image sha256:8a84f2546991db0b18c649ebc1e7c64e036d775470ac33ef79b447efa1946290 done
#21 naming to gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:8f42c2c861816dfd93f748b4fb478cd107cf20cca855a2b60dd1ab0d9c4e3651
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:1103729958953351f44fe2a275f7d4e3748581fb671f1e18355a32e4cc2a5281
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_compress_fuzzer-intermediate
#4 sha256:6cbfaaa92e6349a2a75abfcb78f675b6e16199656d552b156ee25d2df5354279
#4 ERROR: gcr.io/fuzzbench/runners/afl/zlib_compress_fuzzer-intermediate:latest: not found

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:70686c9e833fdcefe0775f583d9dcefc617acd878b5bc490ac010e4c1ee4d56c
#6 writing image sha256:70686c9e833fdcefe0775f583d9dcefc617acd878b5bc490ac010e4c1ee4d56c done
#6 naming to gcr.io/fuzzbench/runners/afl/zlib_compress_fuzzer-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_compress_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:028731df997652fb38c32433f74ef1885374c8c9ff702b5520f7704be24395d1
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:7baa53aecfa0f30eab757d8df0948ee839e049c474002fd9f58968b7fec0ce93
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/zlib_compress_fuzzer-intermediate:latest
#3 sha256:67cde86db56c74e3136fea3e57d01f8d95d8d6325b32981e42f0cab32ba18d2e
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer:latest
#4 sha256:c20ac5a835bc6f9ddec14f0469ad0b2c61144f279d7fd6fcdc494311ef34d460
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:02932424452729df84269895d1f16e0c8354a62cf6615ae16aa50f690bb132cb
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/zlib_compress_fuzzer-intermediate
#6 sha256:327016211ee42247825380652cfa0eecc4ab303a949f40b763c9322361f698dc
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer
#10 sha256:ab1f1436875ba1af19db715b6a8ab2fc3db4198b07522874a14a871d50ca3c3d
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_compress_fuzzer
#5 sha256:9924c0276f9e2c92753455671b949b59301af60a2ea9e4375a1c9019e0e14c3f
#5 ERROR: gcr.io/fuzzbench/runners/afl/zlib_compress_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:02932424452729df84269895d1f16e0c8354a62cf6615ae16aa50f690bb132cb
#12 transferring context: 17.52MB 0.6s done
#12 DONE 0.7s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer
#10 sha256:ab1f1436875ba1af19db715b6a8ab2fc3db4198b07522874a14a871d50ca3c3d
#10 DONE 0.8s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:3ca71f055aa6ea88bd902d08f638b03ad2f691a68e488f1d7461434be5c0dcfd
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:92153fe14fea12886340426680288611ef485de43b2e890f2fd783c6a7219922
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:11258fcb86686b24ac3faa840be830a8d3959c9c9b8f1c64e837699c08934339
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:3a3752a96f732d40bba72d565adb4707ffe984f52e8fdf87533d76df5de82cfb
#11 DONE 0.3s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:d4563e9445b629271e9a47f25462707ae5f9382285ce18dfeaa080a8495cb62b
#13 DONE 1.2s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:a918363d336ecf7d1fd2f103d73993a402c2d568c1f12beeef19db7a48c88f53
#14 DONE 0.3s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:45bb82cf84671901f6c58ca165182042a96ed65b0b0ade3b2382e2f568e48125
#15 DONE 0.6s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:a03a597ed5d1061bc9a8b2031c9f0907ba1459ccc3b7633877938f433ad5f6d1
#16 DONE 1.1s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:8ff71f63862ba944f1531e9825bcdfa0fe0f9b838479a2dabb1c52a8e28e03ad
#17 DONE 0.2s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:ac2d7bb8382acdc4649c86ceedb7be708e0bcd79127ca9716578f146ab7871a1
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:ac1f79d2976a7cf7a7324a84171053d05cbd9437e7bae0081ac5dd358d395f61
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:d185fa5554a885d76d81afdad6d8cc1a4cf2e79de1ffdedd074d971a0b129557
#20 DONE 0.4s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:eb6104fd0cccad2e8f8b68ce0b04a716c770b318b6ba55d8bcddc3aad0b7a924 done
#21 naming to gcr.io/fuzzbench/runners/afl/zlib_compress_fuzzer
#21 naming to gcr.io/fuzzbench/runners/afl/zlib_compress_fuzzer done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_compress_fuzzer:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Unarchived 77 files from seed corpus /out/compress_fuzzer_seed_corpus.zip.
INFO:root:Doing final sync.
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:c5ee500a049ffb8acd280604289d76141c6f93001d829f21c5416d0390e2f77f
#1 transferring dockerfile: 32B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:63299374cb860c9f1ff694936ae07ddf94debd7193e4439c77df446c7cbad84e
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:77750d283f2957d1beeddda2e8f6c5604ab5f969a3616e9cac40f4261ca04c0a
#5 sha256:7999addb2cd81975cd6421c6aaef5643a901995c540a40e8df741ab4c30f6043
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/zlib_compress_fuzzer
#4 sha256:fb870bf95ea84e1d3d319e79f8dc5c9a1700e539abb7f1e69642ced0ea1747ab
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:825c8f975d5fcea2b1abbe228e5ba6a7e034a86ce65c52d967ad2067a81bd231
#9 transferring context: 399B done
#9 DONE 0.0s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:52e32c454805a8c94e441551d01b16d090304920e0b4ce6b465dec91bafa72a3
#6 CACHED

#7 [3/5] RUN git clone --depth 1 -b develop https://github.com/madler/zlib.git
#7 sha256:f0bc315b74d41abe7af8731ffa647bc6fe9bf8a67b7a4851eacf3d1ca44b4120
#7 CACHED

#8 [4/5] WORKDIR zlib
#8 sha256:64713c70ad922c74cc30dabac865ace84eb0dd0f10ba324f819d64d403c1585f
#8 CACHED

#10 [5/5] COPY build.sh *_fuzzer.c* /src/
#10 sha256:d6cebdde86bd2d57792d3f51bf595685af2bf2d1f5282f20921155ead06f1ccc
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:62efc2de0b5969692ab4d69d20102e44a9338594321db16cb83fc2b696faefd2 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/zlib_compress_fuzzer done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:436d28a759e6375976b8111eb657ea050de9ff7574ecf0440147151d44f24550
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:5da1f76a1969d4e2629e8b7e65c8b9abc645a4e761743f09f14e9aa76cfef8ba
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/zlib_compress_fuzzer:latest
#3 sha256:bdcd8ebed38996ad90bba66721016e21ae19f1b7c7400d39493f830933f25303
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer-intermediate
#4 sha256:da5db19911a760d96c3ad0fc14af069a1ef3b7a89625301a091ec76a8fe8c8ef
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/zlib_compress_fuzzer
#5 sha256:13d29555603f66d411a522247983387aeeff8b653149fba5aff742e0418e75f6
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:e368d225773fba929b54ab9ef2297fe6a48b2a7686567ee47550fa9402c1025b
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:8c150c4b1f5a48a0a6ab9be38e481e7813fc16d1010955e796e2834235bb2214
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:6efaf047c93c939bc3378fb38fb1464ad52e9d75158d5ffb2389df1bdd807b96 done
#8 naming to gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:60670c8a73150f9d989b7ebca19e6ea011ef3cbf5c0d2205cff0bdc3d2554a14
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:b66539ec593381abcdfd67d250076341995345980be44c6e512aa7f8e777976f
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:eb5ea8b1c0643ae103dc1214f72748aee23942d201ea3a6b5691c5fa0f52acd4
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#9 [4/7] COPY ./requirements.txt /
#9 sha256:2d81de20f1ff3ccb56445553b69150c36957003bb5f7ed7c6ad13992475bcb8a
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:ecfa9a03e16d1c4a54a92b5c732076b9c1b5a7c7f0e6777db609ace9f6dcb812
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:b803e9fa8a8d7c678c7561bec4e7740e9be478fd1aa1b105779b8b63ea3ad1fe
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:2d0bece600ac11fd03a4687f79884ffa06b0a59a769b6586943b67b9569822f3
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:db37108b741762d6fc963c78f4ea99d80edbbe38f2ea9e4cf93847b349417cfa 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:c8d6a4b191d9ef58599e63ea653f933326627985374ab0d2859c0b04b7ef1913
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:c53116ab073169bd1d306dc0c5c249d51cd73a4f55692d412fdc6669570438cf
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer-intermediate:latest
#3 sha256:f07c9d8b2204b7175b53d2799445c7325fbd0211e8a2409556ffeadb43ebb37a
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer
#5 sha256:6989cefb565b4dc2214e611c73aa45209d7fa6d2f126766512a9394db636e1b8
#5 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer-intermediate
#6 sha256:11c017d543eae9450b5d81b4a64beac92cee054acf3aeab495d478266df76c6e
#6 DONE 0.0s

#12 [internal] load build context
#12 sha256:734cc04485465e3b5c6e41bca67f23b37323c7ff5a6cfaa6f1dcdc1f09be8696
#12 transferring context: 669.88kB 0.1s done
#12 DONE 0.1s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:171f04d96a7dbae4959347a4c156a7cf4c65c286f319b81dee37e571123fe857
#14 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:7f085e6201b2cb42585cdbfb7937d1bac11a141903628be84acf4db11f9888dd
#16 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:58a0baa2b351f371bdebf22216237f1b5756e10a6380afbc85cdf04414084a57
#17 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:ec89025273aa28a7dcef56ab16c0728c77d2297280e89f105f1c735f6ae5f201
#13 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:f1f97ddc27ea03eb3a66988fc3bb89b9d47eb64555d918935e66762a92f25646
#18 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:d717a3afee12350f9cd37d0bcb0445ceb7e491596069f5fb411e3c2c40e53e13
#9 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:55065c2539e06b393e8293b30fab914ffd01291cb0fc581b24c23479c0f8c19a
#19 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:6035fc08ffdef737843298219a7dae5e9df185b6dc646fd95bb1f4611149817f
#11 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:4160f73fb5640af33d7b60f3c64c4477511c9852e1c61cbef385ae3cc636723d
#10 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:d32daa561684ca231853766c498368e70b2a7246c2cfe991dea8fda41586ddfb
#8 CACHED

#15 [stage-1  8/13] COPY benchmarks/zlib_compress_fuzzer/benchmark.yaml /
#15 sha256:7e26d9063153510ce9d55e8ffdfe3fc714087f6e6bab0268ccc60135883ba7ad
#15 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:2348464c6e78ce6fd73db98c539706257ba84611f1f0576c90c29a3c69755ec7
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:8a84f2546991db0b18c649ebc1e7c64e036d775470ac33ef79b447efa1946290
#21 writing image sha256:8a84f2546991db0b18c649ebc1e7c64e036d775470ac33ef79b447efa1946290 done
#21 naming to gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:2b2d3af41c237e5ec7738bfdb63a1e058150ba3b43dc7670a6451d394c0c1945
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:23e0f9953e7d33d8fe9bb54720fc0651e8ff70454777de92d2deb39da6ccc843
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_compress_fuzzer-intermediate
#5 sha256:6cbfaaa92e6349a2a75abfcb78f675b6e16199656d552b156ee25d2df5354279
#5 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:70686c9e833fdcefe0775f583d9dcefc617acd878b5bc490ac010e4c1ee4d56c
#6 writing image sha256:70686c9e833fdcefe0775f583d9dcefc617acd878b5bc490ac010e4c1ee4d56c done
#6 naming to gcr.io/fuzzbench/runners/afl/zlib_compress_fuzzer-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:43ab0e8b61ca27a84596f8d7266585939264f95004f983f844b9e01ba835ff23
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:33b9e6bf06ad93ced1553e67e2dd50cd482775617343d9444a7244f78019d339
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/zlib_compress_fuzzer-intermediate:latest
#3 sha256:67cde86db56c74e3136fea3e57d01f8d95d8d6325b32981e42f0cab32ba18d2e
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer:latest
#4 sha256:c20ac5a835bc6f9ddec14f0469ad0b2c61144f279d7fd6fcdc494311ef34d460
#4 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/zlib_compress_fuzzer-intermediate
#6 sha256:327016211ee42247825380652cfa0eecc4ab303a949f40b763c9322361f698dc
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_compress_fuzzer
#5 sha256:9924c0276f9e2c92753455671b949b59301af60a2ea9e4375a1c9019e0e14c3f
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/zlib_compress_fuzzer
#10 sha256:ab1f1436875ba1af19db715b6a8ab2fc3db4198b07522874a14a871d50ca3c3d
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:f425fee0541cd713846753c3c69e21e448f9753e8f7d03dd6fef0261f595a135
#12 transferring context: 17.52MB 0.6s done
#12 DONE 0.7s

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:3a3752a96f732d40bba72d565adb4707ffe984f52e8fdf87533d76df5de82cfb
#11 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:7ebd614d291cb6ffffcc978c2a3c71de6381d3b4d5e710cdc8571149f08f95ff
#19 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:efa711f7552b3dfa3ffdcb50b0db837ad6eeed56e3133981306b73778c33956c
#17 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:92153fe14fea12886340426680288611ef485de43b2e890f2fd783c6a7219922
#8 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:e553f4f88cdcc74e79d6c2a5555d26c1f9077136e9311f65bd69390e726f69b9
#13 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:e5b55eb3f148a00ea1f913378e5324f48f8cb8cc3e6a6d05700d520a4446068c
#15 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:f741daa4baf0d3b1be1795379ab53f03c457f573602b3af4c4d4c0b42cc838df
#16 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:11258fcb86686b24ac3faa840be830a8d3959c9c9b8f1c64e837699c08934339
#9 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:3ca71f055aa6ea88bd902d08f638b03ad2f691a68e488f1d7461434be5c0dcfd
#7 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:2228e295ab51c59af612247921e168b9afddb934bea431a28fda5c657ee2b585
#18 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:1c20520bc44a81487727fcfab3a463458f932af24844fcb5e03daa48422c2925
#14 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:6d8d3f9c41f3e2144c9b8ae95d04fa1f6854723afe1e2e42633d2664bcb5720b
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:eb6104fd0cccad2e8f8b68ce0b04a716c770b318b6ba55d8bcddc3aad0b7a924 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/zlib_compress_fuzzer done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Unarchived 77 files from seed corpus /out/compress_fuzzer_seed_corpus.zip.
INFO:root:Doing final sync.
