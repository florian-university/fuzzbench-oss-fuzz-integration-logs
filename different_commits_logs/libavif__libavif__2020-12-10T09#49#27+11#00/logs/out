WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: libavif_libavif.
INFO:root:Please run "make test-run-afl-libavif_libavif" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:7aa24c04d9f05afa4bb641075d239c9990c52826fa9bf79bdacf69114e405e23
#1 transferring dockerfile: 1.33kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:f5087c2fd86d4c349d428fc87a38fe273e23a68cb6d4718fb6a337a32c99f070
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#6 [internal] load build context
#6 sha256:00c51c8c9858c472b67949871c6c53b82941ed0f29e5ed77b8342f39623cda69
#6 DONE 0.0s

#5 [ 1/10] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libavif_libavif
#4 sha256:ef7bb33c2bfc06b498262a6b07dc458cdf058544e76d1651d8b0790f684f5823
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/libavif_libavif:latest: not found

#6 [internal] load build context
#6 sha256:00c51c8c9858c472b67949871c6c53b82941ed0f29e5ed77b8342f39623cda69
#6 transferring context: 1.32kB done
#6 DONE 0.0s

#13 [ 8/10] RUN cd nasm-2.14 && ./configure && make -j2 && ln -s `pwd`/nasm /usr/bin/nasm && cd ..
#13 sha256:ecb0dbcc39183206d2f5dae5413884ce4ff59a42c35e65bddb58d3dfa736a680
#13 CACHED

#7 [ 2/10] ADD bionic.list /etc/apt/sources.list.d/bionic.list
#7 sha256:ba81fc5513effef9dabf195fc2262689ce19ceaadeedf004c610f4b3412b044f
#7 CACHED

#12 [ 7/10] RUN curl -L https://download.videolan.org/contrib/nasm/nasm-2.14.tar.gz | tar xvz
#12 sha256:068eb2cd62987eef58dfd014b1dda0357a164724256d1e1beaccb709991b15c9
#12 CACHED

#9 [ 4/10] RUN apt-get update &&     apt-get install --no-install-recommends -y curl python3-pip python3-setuptools python3-wheel cmake git &&     pip3 install meson ninja
#9 sha256:d6e0c32dc19472b52d3ce245373dcccb4ebe02243aec9accead0ae4e0c798d5e
#9 CACHED

#11 [ 6/10] WORKDIR libavif
#11 sha256:4f65bbd0a1a3a81b5a4644454a76058a0d37333065c3471ec27245e0200fb09d
#11 CACHED

#10 [ 5/10] RUN git clone --depth 1 https://github.com/AOMediaCodec/libavif.git libavif
#10 sha256:3b17a89b14d222823a9668e7c4e8d87124fd96f8cfb263a3f3db791b7b08253b
#10 CACHED

#8 [ 3/10] ADD nasm_apt.pin /etc/apt/preferences
#8 sha256:520379b45913069d848ee6c3904299db03fc5d4d133f6ad54820182269e22924
#8 CACHED

#14 [ 9/10] RUN nasm --version
#14 sha256:29ec36a8ac664d42cf0c5fdfe6ca8c2d5ce8471618ed705519d2fcf3363f623b
#14 CACHED

#15 [10/10] COPY build.sh avif_decode_seed_corpus.zip /src/
#15 sha256:3556a02b272699c5023aa51a523dc6b78e2eca15bc3eecac9643ef028a5ee101
#15 DONE 0.1s

#16 exporting to image
#16 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#16 exporting layers done
#16 writing image sha256:ce06dfdafdf66b234f6bd59d5105ce44212f7c37c6d6ca4cb3ce99dda05b5868
#16 writing image sha256:ce06dfdafdf66b234f6bd59d5105ce44212f7c37c6d6ca4cb3ce99dda05b5868 done
#16 naming to gcr.io/fuzzbench/builders/benchmark/libavif_libavif done
#16 DONE 0.1s

#17 exporting cache
#17 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#17 preparing build cache for export done
#17 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libavif_libavif:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:13a952f191560d312adbf683b9c90446c2937b29f8136b2700b42def3ab74af6
#1 transferring dockerfile: 46B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:ee9c48e3f4b559f841d0553f1d6ab6d1da7ebdb18ae8afcac1dec17e4c926049
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/libavif_libavif:latest
#3 sha256:c719041df6a46475c36f58cedb226e5ec2e52af1f7d603ead57812b3a338d222
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libavif_libavif
#5 sha256:53fce00eaa5823a131e06b01d3068118bab93d61a07958014758fcdff2362287
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/libavif_libavif-intermediate
#4 sha256:53c55c03245d3819290c4f5cc8207d4a2883395d276c115c8ec4476ba3cc13cf
#4 ERROR: gcr.io/fuzzbench/builders/afl/libavif_libavif-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libavif_libavif
#5 sha256:53fce00eaa5823a131e06b01d3068118bab93d61a07958014758fcdff2362287
#5 DONE 0.2s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:4d3e52d3a9688e68f0d76fe9310168e9d92bcee36fd2779b49e51aa68473248c
#6 0.322 Cloning into '/afl'...
#6 1.024 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.024 
#6 1.024 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.024 changes and commit them, and you can discard any commits you make in this
#6 1.024 state without impacting any branches by switching back to a branch.
#6 1.024 
#6 1.024 If you want to create a new branch to retain commits you create, you may
#6 1.024 do so (now or later) by using -c with the switch command. Example:
#6 1.024 
#6 1.024   git switch -c <new-branch-name>
#6 1.024 
#6 1.024 Or undo this operation with:
#6 1.024 
#6 1.024   git switch -
#6 1.024 
#6 1.024 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.024 
#6 1.024 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.041 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.041 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.225 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.230 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.593 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 3.917 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.352 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.509 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 4.909 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.138 ln -sf afl-as as
#6 5.140 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.142 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.143 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 5.3s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:f6b95172958489da194704de8587b8fbe42cbcb445911d8c5353354915203685
#7 0.619 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.619 Hit:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.619 Hit:3 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.639 Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 0.661 Hit:5 http://archive.ubuntu.com/ubuntu bionic InRelease
#7 0.734 Hit:6 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 1.671 Reading package lists...
#7 4.689 Reading package lists...
#7 7.350 Building dependency tree...
#7 7.767 Reading state information...
#7 8.174 wget is already the newest version (1.20.3-1ubuntu2).
#7 8.174 0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
#7 8.182 --2022-02-18 03:34:17--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 8.184 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...
#7 8.185 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.
#7 8.208 HTTP request sent, awaiting response... 200 OK
#7 8.228 Length: 9177 (9.0K) [text/plain]
#7 8.228 Saving to: '/afl/afl_driver.cpp'
#7 8.228 
#7 8.228      0K ........                                              100% 7.71M=0.001s
#7 8.229 
#7 8.229 2022-02-18 03:34:17 (7.71 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 8.229 
#7 9.941 ar: creating /libAFL.a
#7 DONE 10.1s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:bf9710ec6623f500067e9998700687e668e0bf93ebadc3454dff4a5f5105b45e
#8 writing image sha256:bf9710ec6623f500067e9998700687e668e0bf93ebadc3454dff4a5f5105b45e done
#8 naming to gcr.io/fuzzbench/builders/afl/libavif_libavif-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libavif_libavif-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:0a9e4cddb19f37d5520c661c418a3d4abcef8ac077aaba1143572cf9be9944b2
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:1ed20901680446358f78d0b56a90d4005392d2541e3ad4012d119e72ccc59511
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:4c104a8e1762e2f722e82c43a3b268d0c2ea6f571c41fccb375421ee405e50d5
#8 transferring context: 559B 0.0s done
#8 DONE 0.0s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:a2c4be2fb22e3a8639cfa63fc0453218cf69f7c6b9be52abbb8e27cfa74ed9f0
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:621518aaecb7b67205774189f05232ecea175ecb21a39691c622a710e82550de
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:e7c52a04ad0bb5bab7e5f790f164482975ef7944a03bf05509357e4ea9b4e107
#9 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:943f5e23c4a4ae8b00fe365f534d29957a9af6478de5d34051a5f1038e67f688
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:09e6f6e2802ac0534bfe01d11fa4cd32feb0eedc67dbf711c85a04fe3547ce44 done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:b7d1844b4b2f9308ed2cfe82c2263c280ead67582f6c4d3bd7f5673d7d993bdc
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:01b36f64527ddd16d22fa219ded3ae7fad6dcce00417046b8112b8d0dfe66d0a
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libavif_libavif-intermediate:latest
#3 sha256:35257f34d0244691c633fe182a0ec5b47de50c55fb85990f27ccc0b9e1cb567d
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:daacda000cfb94b16cafeed68026458094d51a394b48cd77381e4bbfee6525cd
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libavif_libavif-intermediate
#6 sha256:d810bf8aa82f8cde3b11b657c5dbe1a4c00532308c9c71414305ed8a641e0a48
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/libavif_libavif
#5 sha256:e392244187dee78f583e5a79008c9a7f14dd97d91290b3c6e9a9f6a26179870f
#5 ERROR: gcr.io/fuzzbench/builders/afl/libavif_libavif:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:daacda000cfb94b16cafeed68026458094d51a394b48cd77381e4bbfee6525cd
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libavif_libavif-intermediate
#6 sha256:d810bf8aa82f8cde3b11b657c5dbe1a4c00532308c9c71414305ed8a641e0a48
#6 DONE 0.2s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:7705fe2e94d6dfdfc208a7a3204e8303002be0ccdd6cb186c58bbb32f39a820e
#8 DONE 0.3s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:9737a4925fbfc2abdcf7968f2d7d56c1649d95611e0b6f8fd0065ed1e60d41c8
#9 DONE 14.0s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:5aa3ac882dd9fc393e8f32fb48bfbde47dda031a16f9982651d204a4b0b27dea
#10 DONE 0.2s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:51eb3961dbcc3c0b98a4b9ce249d8f4f9250a99a40085d48ffcc85296374f730
#11 DONE 18.4s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:7453c37818d2f725046b04b6aee31f9745afd5fdd5514b5346bdf8e4a6146bba
#13 DONE 0.3s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:5d90b8ece182a5f9707e3f47654fa3d1940e066b6ecc30b2ce0b1cfd260dd191
#14 DONE 1.0s

#15 [stage-1  8/13] COPY benchmarks/libavif_libavif/benchmark.yaml /
#15 sha256:a347dbbc430b6af08a1df2078b868eba294d6ba4bd518e2567fde7d0bb9b2700
#15 DONE 0.4s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:1029bc27924a84ccf2c66fcab2dbefc835b512f814b90b9fa40ae60db0012139
#16 DONE 0.7s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:44b734d4b7975015fa00649ea4830867454bcca0c5164e46f6ee4c69853a14f1
#17 DONE 0.3s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:c448c1426d8efb645a395c372aaff4a33fd27ed3b674f7215672b5dd692fd909
#18 0.475 Checking out commit 84faf557
#18 8.465 From https://github.com/AOMediaCodec/libavif
#18 8.465  * [new tag]         v0.1.0     -> v0.1.0
#18 8.465  * [new tag]         v0.1.1     -> v0.1.1
#18 8.465  * [new tag]         v0.1.2     -> v0.1.2
#18 8.465  * [new tag]         v0.1.3     -> v0.1.3
#18 8.466  * [new tag]         v0.1.4     -> v0.1.4
#18 8.466  * [new tag]         v0.2.0     -> v0.2.0
#18 8.466  * [new tag]         v0.3.0     -> v0.3.0
#18 8.466  * [new tag]         v0.3.1     -> v0.3.1
#18 8.466  * [new tag]         v0.3.10    -> v0.3.10
#18 8.466  * [new tag]         v0.3.11    -> v0.3.11
#18 8.467  * [new tag]         v0.3.2     -> v0.3.2
#18 8.467  * [new tag]         v0.3.3     -> v0.3.3
#18 8.467  * [new tag]         v0.3.4     -> v0.3.4
#18 8.467  * [new tag]         v0.3.5     -> v0.3.5
#18 8.467  * [new tag]         v0.3.6     -> v0.3.6
#18 8.468  * [new tag]         v0.3.7     -> v0.3.7
#18 8.468  * [new tag]         v0.3.8     -> v0.3.8
#18 8.468  * [new tag]         v0.3.9     -> v0.3.9
#18 8.468  * [new tag]         v0.4.0     -> v0.4.0
#18 8.468  * [new tag]         v0.4.1     -> v0.4.1
#18 8.469  * [new tag]         v0.4.2     -> v0.4.2
#18 8.469  * [new tag]         v0.4.3     -> v0.4.3
#18 8.469  * [new tag]         v0.4.4     -> v0.4.4
#18 8.469  * [new tag]         v0.4.5     -> v0.4.5
#18 8.470  * [new tag]         v0.4.6     -> v0.4.6
#18 8.470  * [new tag]         v0.4.7     -> v0.4.7
#18 8.470  * [new tag]         v0.4.8     -> v0.4.8
#18 8.471  * [new tag]         v0.5.0     -> v0.5.0
#18 8.471  * [new tag]         v0.5.1     -> v0.5.1
#18 8.471  * [new tag]         v0.5.2     -> v0.5.2
#18 8.472  * [new tag]         v0.5.3     -> v0.5.3
#18 8.472  * [new tag]         v0.5.4     -> v0.5.4
#18 8.472  * [new tag]         v0.5.5     -> v0.5.5
#18 8.472  * [new tag]         v0.5.6     -> v0.5.6
#18 8.473  * [new tag]         v0.5.7     -> v0.5.7
#18 8.473  * [new tag]         v0.6.0     -> v0.6.0
#18 8.473  * [new tag]         v0.6.1     -> v0.6.1
#18 8.474  * [new tag]         v0.6.2     -> v0.6.2
#18 8.474  * [new tag]         v0.6.3     -> v0.6.3
#18 8.474  * [new tag]         v0.6.4     -> v0.6.4
#18 8.475  * [new tag]         v0.7.0     -> v0.7.0
#18 8.475  * [new tag]         v0.7.1     -> v0.7.1
#18 8.475  * [new tag]         v0.7.2     -> v0.7.2
#18 8.475  * [new tag]         v0.7.3     -> v0.7.3
#18 8.476  * [new tag]         v0.8.0     -> v0.8.0
#18 8.476  * [new tag]         v0.8.1     -> v0.8.1
#18 8.476  * [new tag]         v0.8.2     -> v0.8.2
#18 8.476  * [new tag]         v0.8.3     -> v0.8.3
#18 8.477  * [new tag]         v0.8.4     -> v0.8.4
#18 8.477  * [new tag]         v0.9.0     -> v0.9.0
#18 8.477  * [new tag]         v0.9.1     -> v0.9.1
#18 8.478  * [new tag]         v0.9.2     -> v0.9.2
#18 8.478  * [new tag]         v0.9.3     -> v0.9.3
#18 8.498 error: pathspec '84faf557' did not match any file(s) known to git
#18 8.502 error: pathspec '84faf557' did not match any file(s) known to git
#18 8.509 error: pathspec '84faf557' did not match any file(s) known to git
#18 8.585 Checkout unsuccessful.
#18 DONE 9.0s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:e6d2c3b52a0a40d3e6ce7dc51e0ac655e46fc4026b3a8da2a36a01dc0add02b9
#19 DONE 0.9s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:2601683cdf6f2ca2241f956a74c605d694bdcb6c50afb18af74f15a32473f773
#20 0.593 Run fuzzer_build to build the target
#20 0.714 FUZZ_TARGET = libavif
#20 0.714 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.714 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.723 Building benchmark libavif_libavif with fuzzer afl
#20 0.726 + cd ext
#20 0.726 + bash dav1d.cmd
#20 0.732 Cloning into 'dav1d'...
#20 1.729 Note: switching to '7b433e077298d0f4faf8da6d6eb5774e29bffa54'.
#20 1.729 
#20 1.729 You are in 'detached HEAD' state. You can look around, make experimental
#20 1.729 changes and commit them, and you can discard any commits you make in this
#20 1.729 state without impacting any branches by switching back to a branch.
#20 1.729 
#20 1.729 If you want to create a new branch to retain commits you create, you may
#20 1.729 do so (now or later) by using -c with the switch command. Example:
#20 1.729 
#20 1.729   git switch -c <new-branch-name>
#20 1.729 
#20 1.729 Or undo this operation with:
#20 1.729 
#20 1.729   git switch -
#20 1.729 
#20 1.729 Turn off this advice by setting config variable advice.detachedHead to false
#20 1.729 
#20 4.791 The Meson build system
#20 4.791 Version: 0.61.2
#20 4.791 Source dir: /src/libavif/ext/dav1d
#20 4.791 Build dir: /src/libavif/ext/dav1d/build
#20 4.791 Build type: native build
#20 4.791 Project name: dav1d
#20 4.791 Project version: 0.9.2
#20 4.791 C compiler for the host machine: clang (clang 14.0.0 "clang version 14.0.0 (https://github.com/llvm/llvm-project.git aee49255074fd4ef38d97e6e70cbfbf2f9fd0fa7)")
#20 4.791 C linker for the host machine: clang ld.bfd 2.34
#20 4.791 Host machine cpu family: x86_64
#20 4.791 Host machine cpu: x86_64
#20 4.791 Fetching value of define "__ILP32__" :  
#20 4.791 Run-time dependency threads found: YES
#20 4.791 Checking for function "clock_gettime" : YES 
#20 4.791 Library dl found: YES
#20 4.791 Checking for function "dlsym" with dependency -ldl: YES 
#20 4.791 Library m found: YES
#20 4.791 Check usable header "stdatomic.h" : YES 
#20 4.791 Check usable header "unistd.h" : YES 
#20 4.791 Check usable header "io.h" : NO 
#20 4.791 Checking for function "getopt_long" : YES 
#20 4.791 Checking for function "_aligned_malloc" : NO 
#20 4.791 Checking for function "posix_memalign" : YES 
#20 4.791 Compiler for C supports arguments -fvisibility=hidden: YES 
#20 4.791 Compiler for C supports arguments -Wundef: YES 
#20 4.791 Compiler for C supports arguments -Werror=vla: YES 
#20 4.791 Compiler for C supports arguments -Wno-maybe-uninitialized: NO 
#20 4.791 Compiler for C supports arguments -Wno-missing-field-initializers: YES 
#20 4.791 Compiler for C supports arguments -Wno-unused-parameter: YES 
#20 4.791 Compiler for C supports arguments -Wstrict-prototypes: YES 
#20 4.791 Compiler for C supports arguments -Werror=missing-prototypes: YES 
#20 4.791 Compiler for C supports arguments -Wshorten-64-to-32: YES 
#20 4.791 Compiler for C supports arguments -fomit-frame-pointer: YES 
#20 4.791 Compiler for C supports arguments -ffast-math: YES 
#20 4.791 Compiler for C supports arguments -mpreferred-stack-boundary=6: NO 
#20 4.791 Compiler for C supports arguments -mstack-alignment=64: YES 
#20 4.791 Fetching value of define "__AVX__" :  
#20 4.791 Program nasm found: YES (/usr/bin/nasm)
#20 4.791 WARNING: You should add the boolean check kwarg to the run_command call.
#20 4.791          It currently defaults to false,
#20 4.791          but it will default to true in future releases of meson.
#20 4.791          See also: https://github.com/mesonbuild/meson/issues/9300
#20 4.791 Configuring config.asm using configuration
#20 4.791 Configuring config.h using configuration
#20 4.791 Configuring version.h using configuration
#20 4.791 Program doxygen found: NO
#20 4.791 Program dot found: NO
#20 4.791 Header <xxhash.h> has symbol "XXH3_createState" : NO 
#20 4.791 Configuring cli_config.h using configuration
#20 4.791 Compiler for C supports arguments -Werror=c11-extensions: YES 
#20 4.791 First supported argument: -Werror=c11-extensions
#20 4.791 Program objcopy found: YES (/usr/bin/objcopy)
#20 4.791 Checking for function "posix_memalign" : YES (cached)
#20 4.791 Build targets in project: 23
#20 4.791 
#20 4.791 dav1d 0.9.2
#20 4.791 
#20 4.791   User defined options
#20 4.791     buildtype      : release
#20 4.791     default_library: static
#20 4.791 
#20 4.791 Found ninja-1.10.2.git.kitware.jobserver-1 at /usr/local/bin/ninja
#20 4.981 [1/152] Compiling C object tools/libdav1d_output.a.p/output_null.c.o
#20 5.199 [2/152] Compiling C object src/libdav1d_bitdepth_8.a.p/ipred_prepare_tmpl.c.o
#20 5.384 [3/152] Compiling C object src/libdav1d_bitdepth_8.a.p/loopfilter_tmpl.c.o
#20 5.403 [4/152] Compiling C object src/libdav1d_bitdepth_8.a.p/cdef_apply_tmpl.c.o
#20 5.435 [5/152] Compiling C object src/libdav1d_bitdepth_8.a.p/fg_apply_tmpl.c.o
#20 5.613 [6/152] Compiling C object src/libdav1d_bitdepth_8.a.p/lf_apply_tmpl.c.o
#20 5.747 [7/152] Compiling C object src/libdav1d_bitdepth_8.a.p/x86_cdef_init_tmpl.c.o
#20 5.775 [8/152] Compiling C object src/libdav1d_bitdepth_8.a.p/itx_tmpl.c.o
#20 5.783 [9/152] Compiling C object src/libdav1d_bitdepth_8.a.p/lr_apply_tmpl.c.o
#20 5.851 [10/152] Compiling C object src/libdav1d_bitdepth_8.a.p/x86_ipred_init_tmpl.c.o
#20 5.890 [11/152] Compiling C object src/libdav1d_bitdepth_8.a.p/x86_film_grain_init_tmpl.c.o
#20 5.911 [12/152] Compiling C object src/libdav1d_bitdepth_8.a.p/x86_loopfilter_init_tmpl.c.o
#20 5.974 [13/152] Generating include/vcs_version.h with a custom command
#20 5.998 [14/152] Compiling C object src/libdav1d_bitdepth_8.a.p/film_grain_tmpl.c.o
#20 6.041 [15/152] Compiling C object src/libdav1d_bitdepth_8.a.p/x86_looprestoration_init_tmpl.c.o
#20 6.049 [16/152] Compiling C object src/libdav1d_bitdepth_8.a.p/looprestoration_tmpl.c.o
#20 6.073 [17/152] Compiling C object src/libdav1d_bitdepth_8.a.p/x86_mc_init_tmpl.c.o
#20 6.095 [18/152] Compiling C object src/libdav1d_bitdepth_8.a.p/x86_itx_init_tmpl.c.o
#20 6.269 [19/152] Compiling C object src/libdav1d_bitdepth_8.a.p/cdef_tmpl.c.o
#20 6.384 [20/152] Compiling C object src/libdav1d_entrypoint.a.p/thread_task.c.o
#20 6.407 [21/152] Compiling C object src/libdav1d_bitdepth_16.a.p/cdef_apply_tmpl.c.o
#20 6.435 [22/152] Compiling C object src/libdav1d_bitdepth_16.a.p/fg_apply_tmpl.c.o
#20 6.503 [23/152] Compiling C object src/libdav1d_bitdepth_8.a.p/ipred_tmpl.c.o
#20 6.718 [24/152] Compiling C object src/libdav1d_entrypoint.a.p/lib.c.o
#20 6.920 [25/152] Compiling C object src/libdav1d_bitdepth_16.a.p/loopfilter_tmpl.c.o
#20 6.943 [26/152] Compiling C object src/libdav1d_bitdepth_16.a.p/ipred_prepare_tmpl.c.o
#20 7.204 [27/152] Compiling C object src/libdav1d_bitdepth_16.a.p/cdef_tmpl.c.o
#20 7.235 [28/152] Compiling C object src/libdav1d_bitdepth_16.a.p/itx_tmpl.c.o
#20 7.302 [29/152] Compiling C object src/libdav1d_bitdepth_16.a.p/lf_apply_tmpl.c.o
#20 7.328 [30/152] Compiling C object src/libdav1d_bitdepth_16.a.p/x86_cdef_init_tmpl.c.o
#20 7.366 [31/152] Compiling C object src/libdav1d_bitdepth_16.a.p/film_grain_tmpl.c.o
#20 7.384 [32/152] Compiling C object src/libdav1d_bitdepth_16.a.p/x86_film_grain_init_tmpl.c.o
#20 7.419 [33/152] Compiling C object src/libdav1d_bitdepth_16.a.p/lr_apply_tmpl.c.o
#20 7.467 [34/152] Compiling C object src/libdav1d_bitdepth_16.a.p/x86_ipred_init_tmpl.c.o
#20 7.502 [35/152] Compiling C object src/libdav1d_bitdepth_16.a.p/looprestoration_tmpl.c.o
#20 7.519 [36/152] Compiling C object src/libdav1d_bitdepth_16.a.p/x86_loopfilter_init_tmpl.c.o
#20 7.521 [37/152] Compiling C object src/libdav1d_bitdepth_16.a.p/x86_looprestoration_init_tmpl.c.o
#20 7.558 [38/152] Compiling C object src/libdav1d_bitdepth_16.a.p/x86_mc_init_tmpl.c.o
#20 7.657 [39/152] Compiling C object src/libdav1d_bitdepth_16.a.p/x86_itx_init_tmpl.c.o
#20 7.806 [40/152] Generating 'src/libdav1d.a.p/cpuid.obj'.
#20 7.917 [41/152] Compiling C object src/libdav1d_bitdepth_16.a.p/ipred_tmpl.c.o
#20 7.935 [42/152] Generating 'src/libdav1d.a.p/refmvs.obj'.
#20 8.226 [43/152] Compiling C object src/libdav1d_bitdepth_8.a.p/mc_tmpl.c.o
#20 8.243 [44/152] Generating 'src/libdav1d.a.p/msac.obj'.
#20 8.533 [45/152] Compiling C object src/libdav1d_bitdepth_8.a.p/recon_tmpl.c.o
#20 9.245 [46/152] Generating 'src/libdav1d.a.p/cdef_avx512.obj'.
#20 10.03 [47/152] Compiling C object src/libdav1d_bitdepth_16.a.p/mc_tmpl.c.o
#20 10.50 [48/152] Compiling C object src/libdav1d_bitdepth_16.a.p/recon_tmpl.c.o
#20 11.80 [49/152] Generating 'src/libdav1d.a.p/looprestoration_avx2.obj'.
#20 15.38 [50/152] Generating 'src/libdav1d.a.p/mc_avx512.obj'.
#20 16.07 [51/152] Generating 'src/libdav1d.a.p/cdef_avx2.obj'.
#20 18.30 [52/152] Generating 'src/libdav1d.a.p/film_grain_avx2.obj'.
#20 18.63 [53/152] Generating 'src/libdav1d.a.p/loopfilter_avx2.obj'.
#20 23.91 [54/152] Generating 'src/libdav1d.a.p/loopfilter_sse.obj'.
#20 24.22 [55/152] Generating 'src/libdav1d.a.p/ipred_avx2.obj'.
#20 24.28 [56/152] Generating 'src/libdav1d.a.p/film_grain_sse.obj'.
#20 26.06 [57/152] Generating 'src/libdav1d.a.p/ipred_sse.obj'.
#20 26.16 [58/152] Generating 'src/libdav1d.a.p/cdef16_avx2.obj'.
#20 26.56 [59/152] Generating 'src/libdav1d.a.p/cdef_sse.obj'.
#20 29.24 [60/152] Generating 'src/libdav1d.a.p/mc_avx2.obj'.
#20 29.81 [61/152] Generating 'src/libdav1d.a.p/looprestoration_sse.obj'.
#20 31.65 [62/152] Generating 'src/libdav1d.a.p/loopfilter16_avx2.obj'.
#20 32.49 [63/152] Generating 'src/libdav1d.a.p/cdef16_sse.obj'.
#20 34.04 [64/152] Generating 'src/libdav1d.a.p/looprestoration16_avx2.obj'.
#20 34.41 [65/152] Generating 'src/libdav1d.a.p/itx_sse.obj'.
#20 34.64 [66/152] Generating 'src/libdav1d.a.p/film_grain16_avx2.obj'.
#20 36.51 [67/152] Generating 'src/libdav1d.a.p/ipred16_sse.obj'.
#20 38.66 [68/152] Generating 'src/libdav1d.a.p/ipred16_avx2.obj'.
#20 38.74 [69/152] Generating 'src/libdav1d.a.p/mc16_avx2.obj'.
#20 38.85 [70/152] Compiling C object src/libdav1d.a.p/cpu.c.o
#20 39.10 [71/152] Compiling C object src/libdav1d.a.p/data.c.o
#20 39.97 [72/152] Generating 'src/libdav1d.a.p/itx_avx2.obj'.
#20 40.12 [73/152] Compiling C object src/libdav1d.a.p/dequant_tables.c.o
#20 40.60 [74/152] Compiling C object src/libdav1d.a.p/getbits.c.o
#20 40.64 [75/152] Generating 'src/libdav1d.a.p/loopfilter16_sse.obj'.
#20 40.84 [76/152] Compiling C object src/libdav1d.a.p/intra_edge.c.o
#20 41.96 [77/152] Compiling C object src/libdav1d.a.p/cdf.c.o
#20 42.15 [78/152] Compiling C object src/libdav1d.a.p/lf_mask.c.o
#20 42.27 [79/152] Compiling C object src/libdav1d.a.p/log.c.o
#20 42.41 [80/152] Compiling C object src/libdav1d.a.p/mem.c.o
#20 42.50 [81/152] Generating 'src/libdav1d.a.p/looprestoration16_sse.obj'.
#20 42.61 [82/152] Compiling C object src/libdav1d.a.p/msac.c.o
#20 42.98 [83/152] Compiling C object src/libdav1d.a.p/picture.c.o
#20 43.18 [84/152] Compiling C object src/libdav1d.a.p/ref.c.o
#20 43.31 [85/152] Compiling C object src/libdav1d.a.p/qm.c.o
#20 43.43 [86/152] Compiling C object src/libdav1d.a.p/scan.c.o
#20 43.63 [87/152] Compiling C object src/libdav1d.a.p/tables.c.o
#20 43.85 [88/152] Compiling C object src/libdav1d.a.p/itx_1d.c.o
#20 43.92 [89/152] Compiling C object src/libdav1d.a.p/warpmv.c.o
#20 44.05 [90/152] Compiling C object src/libdav1d.a.p/x86_cpu.c.o
#20 44.22 [91/152] Compiling C object src/libdav1d.a.p/x86_msac_init.c.o
#20 44.37 [92/152] Compiling C object src/libdav1d.a.p/x86_refmvs_init.c.o
#20 44.39 [93/152] Compiling C object src/libdav1d.a.p/wedge.c.o
#20 44.62 [94/152] Compiling C object src/libdav1d.a.p/obu.c.o
#20 44.68 [95/152] Compiling C object tools/libdav1d_input.a.p/input_input.c.o
#20 44.89 [96/152] Compiling C object src/libdav1d.a.p/refmvs.c.o
#20 44.98 [97/152] Compiling C object tools/libdav1d_input.a.p/input_section5.c.o
#20 45.04 [98/152] Compiling C object tools/libdav1d_output.a.p/output_output.c.o
#20 45.12 [99/152] Compiling C object tools/libdav1d_output.a.p/output_md5.c.o
#20 45.21 [100/152] Compiling C object tools/libdav1d_output.a.p/output_y4m2.c.o
#20 45.23 [101/152] Compiling C object tools/libdav1d_input.a.p/input_annexb.c.o
#20 45.32 [102/152] Compiling C object tools/libdav1d_output.a.p/output_yuv.c.o
#20 45.39 [103/152] Linking static target tools/libdav1d_output.a
#20 45.52 [104/152] Generating 'src/libdav1d.a.p/film_grain16_sse.obj'.
#20 45.57 [105/152] Compiling C object tools/dav1d.p/dav1d.c.o
#20 45.57 [106/152] Compiling C object tools/libdav1d_input.a.p/input_ivf.c.o
#20 45.63 [107/152] Linking static target tools/libdav1d_input.a
#20 45.71 [108/152] Compiling C object tools/dav1d.p/dav1d_cli_parse.c.o
#20 45.90 [109/152] Compiling C object tests/libcheckasm_bitdepth_8.a.p/checkasm_cdef.c.o
#20 46.03 [110/152] Generating 'src/libdav1d.a.p/mc_sse.obj'.
#20 46.06 [111/152] Compiling C object tests/libcheckasm_bitdepth_8.a.p/checkasm_ipred.c.o
#20 46.26 [112/152] Compiling C object tests/libcheckasm_bitdepth_8.a.p/checkasm_loopfilter.c.o
#20 46.51 [113/152] Compiling C object tests/libcheckasm_bitdepth_8.a.p/checkasm_filmgrain.c.o
#20 46.53 [114/152] Compiling C object tests/libcheckasm_bitdepth_8.a.p/checkasm_looprestoration.c.o
#20 46.54 [115/152] Compiling C object tests/libcheckasm_bitdepth_8.a.p/checkasm_itx.c.o
#20 46.70 [116/152] Compiling C object src/libdav1d.a.p/decode.c.o
#20 46.74 [117/152] Compiling C object tests/libcheckasm_bitdepth_16.a.p/checkasm_cdef.c.o
#20 47.09 [118/152] Compiling C object tests/libcheckasm_bitdepth_16.a.p/checkasm_ipred.c.o
#20 47.13 [119/152] Compiling C object tests/libcheckasm_bitdepth_16.a.p/checkasm_looprestoration.c.o
#20 47.25 [120/152] Compiling C object tests/libcheckasm_bitdepth_16.a.p/checkasm_loopfilter.c.o
#20 47.49 [121/152] Compiling C object tests/libcheckasm_bitdepth_16.a.p/checkasm_itx.c.o
#20 47.57 [122/152] Compiling C object tests/libcheckasm_bitdepth_16.a.p/checkasm_filmgrain.c.o
#20 47.73 [123/152] Generating 'tests/checkasm.p/checkasm.obj'.
#20 47.76 [124/152] Compiling C object tests/libfuzzer/dav1d_fuzzer.p/main.c.o
#20 47.81 [125/152] Compiling C object tests/checkasm.p/checkasm_refmvs.c.o
#20 47.82 [126/152] Compiling C object tests/libcheckasm_bitdepth_8.a.p/checkasm_mc.c.o
#20 47.88 [127/152] Compiling C object tests/common.h_test.p/header_test.c.o
#20 47.90 [128/152] Compiling C object tests/data.h_test.p/header_test.c.o
#20 47.93 [129/152] Compiling C object tests/checkasm.p/checkasm_msac.c.o
#20 47.94 [130/152] Compiling C object tests/libfuzzer/dav1d_fuzzer_mt.p/main.c.o
#20 47.97 [131/152] Compiling C object tests/dav1d.h_test.p/header_test.c.o
#20 47.98 [132/152] Compiling C object tests/headers.h_test.p/header_test.c.o
#20 47.99 [133/152] Compiling C object tests/libfuzzer/dav1d_fuzzer_mt.p/dav1d_fuzzer.c.o
#20 48.11 [134/152] Compiling C object tests/picture.h_test.p/header_test.c.o
#20 48.17 [135/152] Linking target tests/common.h_test
#20 48.19 [136/152] Linking target tests/data.h_test
#20 48.21 [137/152] Compiling C object tests/libcheckasm_bitdepth_16.a.p/checkasm_mc.c.o
#20 48.24 [138/152] Linking target tests/dav1d.h_test
#20 48.30 [139/152] Linking target tests/headers.h_test
#20 48.38 [140/152] Linking target tests/picture.h_test
#20 48.39 [141/152] Compiling C object tests/libfuzzer/dav1d_fuzzer.p/dav1d_fuzzer.c.o
#20 48.50 [142/152] Compiling C object tests/checkasm.p/checkasm_checkasm.c.o
#20 48.59 [143/152] Compiling C object tests/seek_stress.p/seek_stress.c.o
#20 48.99 [144/152] Generating 'src/libdav1d.a.p/mc16_sse.obj'.
#20 53.55 [145/152] Generating 'src/libdav1d.a.p/itx16_avx2.obj'.
#20 53.95 [146/152] Generating 'src/libdav1d.a.p/itx16_sse.obj'.
#20 53.97 [147/152] Linking static target src/libdav1d.a
#20 54.20 [148/152] Linking target tools/dav1d
#20 54.20 [149/152] Linking target tests/seek_stress
#20 54.21 [150/152] Linking target tests/checkasm
#20 54.28 [151/152] Linking target tests/libfuzzer/dav1d_fuzzer
#20 54.28 [152/152] Linking target tests/libfuzzer/dav1d_fuzzer_mt
#20 54.29 + cd ..
#20 54.29 + mkdir build
#20 54.30 + cd build
#20 54.30 + cmake -G Ninja -DBUILD_SHARED_LIBS=0 -DAVIF_CODEC_DAV1D=1 -DAVIF_LOCAL_DAV1D=1 ..
#20 54.60 -- The C compiler identification is Clang 14.0.0
#20 54.67 -- Detecting C compiler ABI info
#20 55.12 -- Detecting C compiler ABI info - done
#20 55.17 -- Check for working C compiler: /usr/local/bin/clang - skipped
#20 55.17 -- Detecting C compile features
#20 55.17 -- Detecting C compile features - done
#20 55.18 -- libavif: Enabling warnings for Clang
#20 55.18 -- Performing Test HAVE_RESERVED_IDENTIFIER_WARNING
#20 55.63 -- Performing Test HAVE_RESERVED_IDENTIFIER_WARNING - Success
#20 55.63 -- Performing Test HAVE_POISON_SYSTEM_DIRECTORIES_WARNING
#20 56.08 -- Performing Test HAVE_POISON_SYSTEM_DIRECTORIES_WARNING - Success
#20 56.09 -- Looking for pthread.h
#20 56.56 -- Looking for pthread.h - found
#20 56.57 -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
#20 57.05 -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
#20 57.06 -- Found Threads: TRUE  
#20 57.07 -- libavif: libyuv not found; libyuv-based fast paths disabled.
#20 57.07 -- libavif: Codec enabled: dav1d (decode)
#20 57.08 -- Configuring done
#20 57.09 -- Generating done
#20 57.25 -- Build files have been written to: /src/libavif/build
#20 57.26 + ninja
#20 57.40 [1/17] Building C object CMakeFiles/avif.dir/src/mem.c.o
#20 57.40 [2/17] Building C object CMakeFiles/avif.dir/src/diag.c.o
#20 57.42 [3/17] Building C object CMakeFiles/avif.dir/src/rawdata.c.o
#20 57.44 [4/17] Building C object CMakeFiles/avif.dir/src/io.c.o
#20 57.45 [5/17] Building C object CMakeFiles/avif.dir/src/reformat_libyuv.c.o
#20 57.49 [6/17] Building C object CMakeFiles/avif.dir/src/scale.c.o
#20 57.52 [7/17] Building C object CMakeFiles/avif.dir/src/colr.c.o
#20 57.57 [8/17] Building C object CMakeFiles/avif.dir/src/utils.c.o
#20 57.67 [9/17] Building C object CMakeFiles/avif.dir/src/codec_dav1d.c.o
#20 57.75 [10/17] Building C object CMakeFiles/avif.dir/src/stream.c.o
#20 57.78 [11/17] Building C object CMakeFiles/avif.dir/src/avif.c.o
#20 58.04 [12/17] Building C object CMakeFiles/avif.dir/src/alpha.c.o
#20 58.15 [13/17] Building C object CMakeFiles/avif.dir/src/reformat.c.o
#20 58.20 [14/17] Building C object CMakeFiles/avif.dir/src/write.c.o
#20 58.24 [15/17] Building C object CMakeFiles/avif.dir/src/obu.c.o
#20 59.19 [16/17] Building C object CMakeFiles/avif.dir/src/read.c.o
#20 59.20 [17/17] Linking C static library libavif.a
#20 59.21 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I../include ../tests/oss-fuzz/avif_decode_fuzzer.cc -o /out/avif_decode_fuzzer /libAFL.a libavif.a ../ext/dav1d/build/src/libdav1d.a
#20 59.60 + cp /src/avif_decode_seed_corpus.zip /out/
#20 59.60 + find /out/
#20 59.61 /out/
#20 59.61 /out/avif_decode_seed_corpus.zip
#20 59.61 /out/avif_decode_fuzzer
#20 59.61 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 63.2s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:444191c37df39d2dff432c5e775c83c4c4a9895bed308228bf54536881b7cc0e
#21 writing image sha256:444191c37df39d2dff432c5e775c83c4c4a9895bed308228bf54536881b7cc0e 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/libavif_libavif done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libavif_libavif:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:935b9e5491fb1361e2e1b65327938523ad281b813671423d1c5aa04e7095c7df
#1 transferring dockerfile: 656B 0.0s done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:d8be82495be3213d0fd509025d023fef6aa2c79052db0582c1e0342a27773464
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/libavif_libavif-intermediate
#5 sha256:1352f263db25b6091b253441608b6f665aece4a7b513ea6e69b2ddb7a657a271
#5 ERROR: gcr.io/fuzzbench/runners/afl/libavif_libavif-intermediate:latest: not found

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:ee72a7cbe9f5dcfd6c7e22c225bf56082a5c0b8340a0d664a50809bed9b8a1fb 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/libavif_libavif-intermediate 0.0s done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/libavif_libavif-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:1adae486b2947891eb63345e4b723031080a9aacc775ac19af005262e708b833
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:d5422170973699eb2a57d0f2632dcfd877bddc0a86e95189e20c2ec2507e548c
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/libavif_libavif-intermediate:latest
#3 sha256:c1c5a7d75a9f423f7edc2a073feb12eca879467a6fcab0bd79c2d631363763bc
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libavif_libavif:latest
#4 sha256:a86604deeb7883c6e399b5bfc7c7529b9ba66f9b97be0fbaf61325aca55da988
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:68038c3acacea59ecfde405f1a9289222b9fae31e7d3c1a95c6e8dd7b14e6954
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/libavif_libavif-intermediate
#6 sha256:414ed53219269e1a5c8689e42506af3376d073609e7b326b770ae9a7b447793a
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/libavif_libavif
#10 sha256:a182cb89b568ab17ff93ff9fb04927a2f492d14f87e75b4b0ef5bf65f25729de
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/libavif_libavif
#5 sha256:3a1fb7da5ba41e55077b1117f6387db5736d0201a025372c8154bbd3cab990cb
#5 ERROR: gcr.io/fuzzbench/runners/afl/libavif_libavif:latest: not found

#12 [internal] load build context
#12 sha256:68038c3acacea59ecfde405f1a9289222b9fae31e7d3c1a95c6e8dd7b14e6954
#12 transferring context: 18.94MB 0.6s done
#12 DONE 1.5s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/libavif_libavif
#10 sha256:a182cb89b568ab17ff93ff9fb04927a2f492d14f87e75b4b0ef5bf65f25729de
#10 DONE 5.0s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:b4e011550b0d6a148fdebc45f31d3a90b8c800831faac88de6bb0af104ace48c
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:3fee3c6416720815657c2dd49c5b10dc19e331fb6df5da1713d936b36032762b
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:6a21cf7b815d28e9808212c707e601768bf741a56914c3efa8d2839e1fb3a846
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:e34a623fd1fc393ed817791a5851dc028cd28fff19b746b475df6cd651b9aa3b
#11 DONE 0.2s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:723198f148b92f7e5ec93f106bdf555fc3197fef8f82b354c2f49c72d9d94981
#13 DONE 1.6s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:f7fc7334c3c97ea0286b083a675a832bcf3e8a14487cfef29c64ec1359756ec1
#14 DONE 0.4s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:b4af6f0ccb15a27674cea73cdd0b5d98429e3f9bf9e9d1669faeefe5237bcdd2
#15 DONE 1.3s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:7b47f68e89cce889e4ec45832f578acce07c9c55c3d252887ff476f67e0fca71
#16 DONE 0.8s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:8409108a13915377d7e75744545225daf34daaacba251ae9ed4e05d4ef8033e5
#17 DONE 0.2s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:b3d9325cc8dbb3c6c252b3bb912253ba5f17d468652a61fff1aae43016c96b23
#18 DONE 0.2s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:1abdc61c7d2ed8dca3f5a6502e06822201a816ebdc9564f644da8cfa3d7256b8
#19 DONE 0.2s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:d2d3b42b599f475c47f29da60f93253753512493cb78b078a95d0da99fdde9eb
#20 DONE 0.6s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:772e881f4cb0eb7587574f92bcf8deed5af13f2a65b193fbc93769ae9d561c07 done
#21 naming to gcr.io/fuzzbench/runners/afl/libavif_libavif done
#21 DONE 0.0s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/libavif_libavif:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7ffa79761f70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:74b7e074baeeb9262cdfd749d667c4e5e177a493aec6acebdcc223debcd37c1a
#1 transferring dockerfile: 32B done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:59d3593025ad7bb59af46b62dea59ee1902e94d2f4662aa05577b1b9cb6a011e
#2 transferring context: 2B done
#2 DONE 0.3s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#5 [ 1/10] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libavif_libavif
#4 sha256:ef7bb33c2bfc06b498262a6b07dc458cdf058544e76d1651d8b0790f684f5823
#4 DONE 0.0s

#6 [internal] load build context
#6 sha256:456cbcf532b84da7355ef13a4e6230086605f9df1f59453e2835a9874fd1e165
#6 transferring context: 138B done
#6 DONE 0.1s

#10 [ 5/10] RUN git clone --depth 1 https://github.com/AOMediaCodec/libavif.git libavif
#10 sha256:e8763bcaa41d4426510dd424396c4396244eecec11248651bcb598e879520440
#10 CACHED

#8 [ 3/10] ADD nasm_apt.pin /etc/apt/preferences
#8 sha256:d0da188cd03c2a10d68765c17386032804300dca3c7f66e468b2df6ff51f3168
#8 CACHED

#11 [ 6/10] WORKDIR libavif
#11 sha256:595c021241b0bc56e07c98043ba4c06c99b1218083bd317097b6c81b4c005b99
#11 CACHED

#13 [ 8/10] RUN cd nasm-2.14 && ./configure && make -j2 && ln -s `pwd`/nasm /usr/bin/nasm && cd ..
#13 sha256:0d2383fcff40c22a9a2e4c8741cddd84b61937e8600b3acc96e380eed2b2b680
#13 CACHED

#14 [ 9/10] RUN nasm --version
#14 sha256:30b7986a7911c09297234c57a8cea5db96da2b2890bccd36a40a38486f3384b1
#14 CACHED

#7 [ 2/10] ADD bionic.list /etc/apt/sources.list.d/bionic.list
#7 sha256:f6db7181afd6e9005ed37788ae48623a8f80d1606debac7ff8dfb07150693a17
#7 CACHED

#9 [ 4/10] RUN apt-get update &&     apt-get install --no-install-recommends -y curl python3-pip python3-setuptools python3-wheel cmake git &&     pip3 install meson ninja
#9 sha256:0e2ac81a9f99d7d411832cf42ebeb93010ab2f6c61de5fc1bf19d29ddc1eb0bf
#9 CACHED

#12 [ 7/10] RUN curl -L https://download.videolan.org/contrib/nasm/nasm-2.14.tar.gz | tar xvz
#12 sha256:b87be5424838c3ef12ff76d4366afd9b8bbcc9130d9199fc165fca6efe783f77
#12 CACHED

#15 [10/10] COPY build.sh avif_decode_seed_corpus.zip /src/
#15 sha256:eadb44515164331657e2f80e4af6d226dbc8a89828b089dcb1f949f6f62e13b5
#15 CACHED

#16 exporting to image
#16 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#16 exporting layers done
#16 writing image sha256:ce06dfdafdf66b234f6bd59d5105ce44212f7c37c6d6ca4cb3ce99dda05b5868 0.0s done
#16 naming to gcr.io/fuzzbench/builders/benchmark/libavif_libavif done
#16 DONE 0.3s

#17 exporting cache
#17 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#17 preparing build cache for export done
#17 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:8b93e20cec3ca8bdee2ca392c8a91d16fe1e10864ac9b1a7d168a52ae3e728d7
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:d638f52cc3593926ec51b2b62f200c1e2df6942e11ea995a9578dc9ed91fc005
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/libavif_libavif:latest
#3 sha256:c719041df6a46475c36f58cedb226e5ec2e52af1f7d603ead57812b3a338d222
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/libavif_libavif-intermediate
#4 sha256:53c55c03245d3819290c4f5cc8207d4a2883395d276c115c8ec4476ba3cc13cf
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libavif_libavif
#5 sha256:53fce00eaa5823a131e06b01d3068118bab93d61a07958014758fcdff2362287
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:4d3e52d3a9688e68f0d76fe9310168e9d92bcee36fd2779b49e51aa68473248c
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:f6b95172958489da194704de8587b8fbe42cbcb445911d8c5353354915203685
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:bf9710ec6623f500067e9998700687e668e0bf93ebadc3454dff4a5f5105b45e 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/libavif_libavif-intermediate done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:243327fb9c25542b4702d30b9cae71140346e98a0ea7e3a595290acbde97b86b
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:92aea4dcffd1df8010a60f22551f6f7c373aea253d30594c4d7de070c2f3f3b7
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:440276920c6f5404c196ca7199edef77fbf459f6c34655f5ec64c1d9a56f8621
#8 transferring context: 559B 0.2s done
#8 DONE 0.3s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:5d892745d854cdcccec430c7a2f09bf076eb2fa0478f31395b4dfa92f3a2902e
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:b1b8015a7fd9a2dd10a984b70de74fa5d0c8d333b89aa8a347d8801cc29d155a
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:726532a14fae1dac35c23181943ae16c7c5ea00007de16bf11cfec1c12c4fccc
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:911e6bd18a6c805c4b3f40dd418cdafeee7f4bd11c8625dffdede904a335ede9
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:09e6f6e2802ac0534bfe01d11fa4cd32feb0eedc67dbf711c85a04fe3547ce44 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:846838b35a8012f3da623f71830af0cd0f51ccd430d189350e9fefab2ecc08b6
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:550fa8a510def1aa7be5cdd45cf5738041997652354a69ae6ac3363bb0c220d5
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libavif_libavif-intermediate:latest
#3 sha256:35257f34d0244691c633fe182a0ec5b47de50c55fb85990f27ccc0b9e1cb567d
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/libavif_libavif
#5 sha256:e392244187dee78f583e5a79008c9a7f14dd97d91290b3c6e9a9f6a26179870f
#5 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libavif_libavif-intermediate
#6 sha256:d810bf8aa82f8cde3b11b657c5dbe1a4c00532308c9c71414305ed8a641e0a48
#6 DONE 0.0s

#12 [internal] load build context
#12 sha256:c140e6520741e9fb0ac52ba98cb1e6f39b4fa31603388d47cfa4728ceff634ce
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.2s

#15 [stage-1  8/13] COPY benchmarks/libavif_libavif/benchmark.yaml /
#15 sha256:f99697895ad1e94424bc34319fce7ca45760147f4199a6d710aa11b241e931ec
#15 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:31ec077189149aefb6c5ff1ff04eb03624ab03337096a69b8f55649414e052f1
#13 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:3d6a443b09cf00df6f8a32e9174ed272cabd7f6e39abdd01b9f53bb32a1c859e
#17 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:3f2caeca77f8aa499241a6386e4a05f0cadd9ef7198b54cf913d05a1ca57bfd2
#19 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:5aa3ac882dd9fc393e8f32fb48bfbde47dda031a16f9982651d204a4b0b27dea
#10 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:a6356bdacb7908026851cc48c5ea966ae7b803a07c578c3f4d77f7ebddffd0df
#18 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:9737a4925fbfc2abdcf7968f2d7d56c1649d95611e0b6f8fd0065ed1e60d41c8
#9 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:51eb3961dbcc3c0b98a4b9ce249d8f4f9250a99a40085d48ffcc85296374f730
#11 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:e9447fe9207bef060f36860046b55205577bfcbed3acdd53d8da1b9cfadc5f69
#16 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:7705fe2e94d6dfdfc208a7a3204e8303002be0ccdd6cb186c58bbb32f39a820e
#8 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:1ab9fae006a8aa5d30156d6dbb4755eebedbf4570372813a099f41c8cb67a57d
#14 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:343e25fd379f8ff386f850a62c48fb7fc06571ac491af0a6df6ad44e0144784d
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:444191c37df39d2dff432c5e775c83c4c4a9895bed308228bf54536881b7cc0e
#21 writing image sha256:444191c37df39d2dff432c5e775c83c4c4a9895bed308228bf54536881b7cc0e 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/libavif_libavif done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:e3a61c9965b920151f6cef03ceb6ca5aefe64f4258570c8e38927d087407c4b6
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:d00b3cfce0fc08ae8d74996bd36c4108a624a02a02d24e84ddfd9c20fc3ed147
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/libavif_libavif-intermediate
#5 sha256:1352f263db25b6091b253441608b6f665aece4a7b513ea6e69b2ddb7a657a271
#5 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:ee72a7cbe9f5dcfd6c7e22c225bf56082a5c0b8340a0d664a50809bed9b8a1fb
#6 writing image sha256:ee72a7cbe9f5dcfd6c7e22c225bf56082a5c0b8340a0d664a50809bed9b8a1fb done
#6 naming to gcr.io/fuzzbench/runners/afl/libavif_libavif-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:9780144d368b4fe2fed00e10e1d08becfc638f469f641e5e6c3f7ad73a1c0472
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:8ae03357a27316831268b7e95ecaaeff46a92981c9634d9447a5279f5bca8467
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/libavif_libavif-intermediate:latest
#3 sha256:c1c5a7d75a9f423f7edc2a073feb12eca879467a6fcab0bd79c2d631363763bc
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libavif_libavif:latest
#4 sha256:a86604deeb7883c6e399b5bfc7c7529b9ba66f9b97be0fbaf61325aca55da988
#4 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/libavif_libavif-intermediate
#6 sha256:414ed53219269e1a5c8689e42506af3376d073609e7b326b770ae9a7b447793a
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/libavif_libavif
#5 sha256:3a1fb7da5ba41e55077b1117f6387db5736d0201a025372c8154bbd3cab990cb
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/libavif_libavif
#10 sha256:a182cb89b568ab17ff93ff9fb04927a2f492d14f87e75b4b0ef5bf65f25729de
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:a4c4ef5aaad558c3e9fa98110797d283ff5a5a8fd9699afcd7ec3d83278ec30c
#12 transferring context: 18.94MB 0.6s done
#12 DONE 0.8s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:f7c2e243f11731853b8ae90e53e8e14249d24ea1be7b6e5e2e64ba3c30ea2e57
#13 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:6a21cf7b815d28e9808212c707e601768bf741a56914c3efa8d2839e1fb3a846
#9 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:1647a0a023f6193f59ff334a0fb7eb57e9b13de5eb0ec3c9c0b9a5c90718f6ef
#15 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:3021f725cc2e1a28daac435ee82701d77291c01cfa7abcce42d18b3c55c5ddb6
#17 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:076a03aebe349e39432dfb126152fe6b1f9e786b644b087a031fae319ce3686c
#19 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:3fee3c6416720815657c2dd49c5b10dc19e331fb6df5da1713d936b36032762b
#8 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:5a97b53c18ba2fd3f5aa6c890a0274c9a700b20f91cf585af91372fa4913fd20
#14 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:e880e7526088a10ff97627638e6ffda8a5655a482d990e6d3963662177b98c83
#18 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:b4e011550b0d6a148fdebc45f31d3a90b8c800831faac88de6bb0af104ace48c
#7 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:e34a623fd1fc393ed817791a5851dc028cd28fff19b746b475df6cd651b9aa3b
#11 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:a4a9e0dfb2a664b05e86e7b7e0f28ae259b999b13d7ad32930e0b6a7618e52bd
#16 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:27a6b7ecc7035c117c4abb8bb091c08c1a92c04d4788f4044fd314f761882636
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:772e881f4cb0eb7587574f92bcf8deed5af13f2a65b193fbc93769ae9d561c07 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/libavif_libavif done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7fb1376f7f70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
