WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: mp4parse-rust_mp4parse-rust.
INFO:root:Please run "make test-run-afl-mp4parse-rust_mp4parse-rust" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:0b9f080831fed49e964f393faeabff2ef8c3cbe4920018be984864a74490f873
#1 transferring dockerfile: 1.01kB done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:fc9b65536ec915452172e24ebf7bd0693b6835c7f7c4dad76fcb1d9782acb1f6
#2 transferring context: 2B done
#2 DONE 0.3s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#9 [internal] load build context
#9 sha256:aa79443a54900b6c05629215f145bf2496cb514c5dafb6753778ce3030aff589
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:f4e5ea12494fab091c5d830cf803b3421f2860f729b9d1b07da44924396cf8cf
#5 sha256:ef290950573a2779ee526af357b28fbddfc20d7409aa51f58f777c9e972cba29
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/mp4parse-rust_mp4parse-rust
#4 sha256:4107baeae0bd256624297f91516b80e5beb433f139a3ea1edae6c1e1f1582a5a
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/mp4parse-rust_mp4parse-rust:latest: not found

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool curl cmake python llvm-dev libclang-dev clang
#6 sha256:66bc0ce1eb224e9ff493fe7fadec6414b98db0fd06e0576b70a9dcc480786ace
#6 CACHED

#9 [internal] load build context
#9 sha256:aa79443a54900b6c05629215f145bf2496cb514c5dafb6753778ce3030aff589
#9 transferring context: 1.85kB done
#9 DONE 0.1s

#7 [3/5] RUN git clone --depth 1 --recursive https://github.com/mozilla/mp4parse-rust mp4parse-rust
#7 sha256:0961d600dc7decc8b4483851e1be20cd8bdcbd7cf48c454fe8dcb57db5a67924
#7 0.554 Cloning into 'mp4parse-rust'...
#7 1.515 Submodule 'mp4parse/av1-avif' (https://github.com/AOMediaCodec/av1-avif.git) registered for path 'mp4parse/av1-avif'
#7 1.516 Submodule 'mp4parse/link-u-avif-sample-images' (https://github.com/link-u/avif-sample-images) registered for path 'mp4parse/link-u-avif-sample-images'
#7 1.522 Cloning into '/src/mp4parse-rust/mp4parse/av1-avif'...
#7 47.48 Cloning into '/src/mp4parse-rust/mp4parse/link-u-avif-sample-images'...
#7 56.62 Submodule path 'mp4parse/av1-avif': checked out '7577f3a202c6d7754408ae09b4eca67cc1840736'
#7 56.86 Submodule path 'mp4parse/link-u-avif-sample-images': checked out '06a4d3bd53f03449947c30701247500280c39eea'
#7 DONE 59.3s

#8 [4/5] WORKDIR mp4parse-rust
#8 sha256:566c3cf8275ac796748b5e2ef054c3209dd475c578ff6a92504b12eedc2cc5d4
#8 DONE 0.1s

#10 [5/5] COPY build.sh default.options /src/
#10 sha256:cd41d7ed7c304787eee6bfdef2cd4cd97d9713c9e83b0f472a5a678d52781c66
#10 DONE 0.1s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:7e9c0520a92b1db648a9bd92f79b2825f1a9e200a13b412482757c6f75f904a4 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/mp4parse-rust_mp4parse-rust
#11 naming to gcr.io/fuzzbench/builders/benchmark/mp4parse-rust_mp4parse-rust done
#11 DONE 0.3s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/mp4parse-rust_mp4parse-rust:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:698e5e9b240edcc6b1e5ddc56c33642a65b820b3d3219dcbd477f125c158295c
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:15a0f053bdd5525b4d9b1a7855a55100f914972741e04c5aa08949fe30c7a4fe
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/mp4parse-rust_mp4parse-rust:latest
#3 sha256:ea3886c095a9978dc96860d374a60f4d51dfc8062cc726d06b7e339374783654
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/mp4parse-rust_mp4parse-rust
#5 sha256:c21e84c7913895b6ff546380982abb5842b99baf254b4765dc97f5dd1635044a
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/mp4parse-rust_mp4parse-rust-intermediate
#4 sha256:400a7ced4ec661fab859743826082bb65ddaaebc34ad0dc7bb6d20dcd2f1a345
#4 ERROR: gcr.io/fuzzbench/builders/afl/mp4parse-rust_mp4parse-rust-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/mp4parse-rust_mp4parse-rust
#5 sha256:c21e84c7913895b6ff546380982abb5842b99baf254b4765dc97f5dd1635044a
#5 DONE 0.7s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:a501f55da5e11db3c84ba0a0d9f38092f1af122f719e95c8ee902f8c5d21d054
#6 0.418 Cloning into '/afl'...
#6 1.166 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.166 
#6 1.166 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.166 changes and commit them, and you can discard any commits you make in this
#6 1.166 state without impacting any branches by switching back to a branch.
#6 1.166 
#6 1.166 If you want to create a new branch to retain commits you create, you may
#6 1.166 do so (now or later) by using -c with the switch command. Example:
#6 1.166 
#6 1.166   git switch -c <new-branch-name>
#6 1.166 
#6 1.166 Or undo this operation with:
#6 1.166 
#6 1.166   git switch -
#6 1.166 
#6 1.166 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.166 
#6 1.166 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.218 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.219 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.393 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.398 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.760 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.074 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.501 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.656 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.044 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.279 ln -sf afl-as as
#6 5.282 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.284 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.285 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 5.6s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:b5b272be44d24e9bdc2e74156854781864d4ad33fd8263af6e69a1594352e62e
#7 0.743 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.743 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.758 Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.781 Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 0.873 Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 1.660 Reading package lists...
#7 3.274 Reading package lists...
#7 4.700 Building dependency tree...
#7 4.915 Reading state information...
#7 5.159 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.159 0 upgraded, 0 newly installed, 0 to remove and 3 not upgraded.
#7 5.334 --2022-02-16 02:02:42--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.335 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.110.133, 185.199.111.133, 185.199.108.133, ...
#7 5.337 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.110.133|:443... connected.
#7 5.359 HTTP request sent, awaiting response... 200 OK
#7 5.532 Length: 9177 (9.0K) [text/plain]
#7 5.532 Saving to: '/afl/afl_driver.cpp'
#7 5.532 
#7 5.532      0K ........                                              100% 13.1M=0.001s
#7 5.533 
#7 5.533 2022-02-16 02:02:42 (13.1 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.533 
#7 7.255 ar: creating /libAFL.a
#7 DONE 8.4s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:348d5634be26ef4574ac000053783ac3bdfd37c62211f0ff55af6cadc12fa368 done
#8 naming to gcr.io/fuzzbench/builders/afl/mp4parse-rust_mp4parse-rust-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/mp4parse-rust_mp4parse-rust-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:8e11fbcdaa6ba268f869f39bc61f47b3863f6058563f69ef75535f164a82fb19
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:d1f1722d40c17c2117e63c401314a6ada329d9a7ae7047347d210134c604db83
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:4cd959ec6738bb432d2c7c3b1eddae0ab290e4ef743ae3a18e505c9a8da6a4bd
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#9 [4/7] COPY ./requirements.txt /
#9 sha256:8fb698cc0200e21b5ab94712c3af833bbfd6ba9f3f637624d53f59d8afc02a85
#9 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:316dbde6fda549acdbe16e46da0ca36641f9bb88752be325254f6005c964ae52
#11 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:25fed8d0a1a800ac8ff848db414823a506f62dfa939b358114a336cc4d4f8dcd
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:1242ececfe16c00a4b5f59e1ea737eaad71286eebf57a96798f098a05aced8f8
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:a4e48853ebe96350611930a56ad2cb7ffa281b229a11dbe983556a563fc47fd3
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:52417f3cfc959afefc3e31f5b3b59ffb80cea61e739c4e5fdc46ad2049d26bd7
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/mp4parse-rust_mp4parse-rust-intermediate:latest
#3 sha256:e436c795f8fdeec2933bfaab31260dc72ee055037735550ddd5d733001aca4d0
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:d2690409f73c34ee55d1181530989d362ac212c42e938dd3d0280e6be8161e9e
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/mp4parse-rust_mp4parse-rust-intermediate
#6 sha256:fc5a6d77b1a2864dad31da857db3edb18123b568c515945ae02e22ee5c5f686b
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/mp4parse-rust_mp4parse-rust
#5 sha256:0af6ca0992a5b5057ee7fd14fe19fd76d2ac7ad59819e5d623ad4ec3bcdd9291
#5 ERROR: gcr.io/fuzzbench/builders/afl/mp4parse-rust_mp4parse-rust:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:d2690409f73c34ee55d1181530989d362ac212c42e938dd3d0280e6be8161e9e
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/mp4parse-rust_mp4parse-rust-intermediate
#6 sha256:fc5a6d77b1a2864dad31da857db3edb18123b568c515945ae02e22ee5c5f686b
#6 DONE 0.6s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:4a866265cd0665b0444cb6b2caee62e1c39464f7296814dcd3193ffd25745eef
#8 DONE 0.6s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:205bb8169d61b2d771d52c0003c05047c00c5b6c03e3bf4fac687031cec649fa
#9 DONE 15.0s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:dc7f5dd921198e71c1b8c1dddbb5726055068c88dc10dceb82c64c86431ce12f
#10 DONE 0.3s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:521aad378204c111c4d74435dae8deac2cd5971102da20d49e89bed2e0a30d2f
#11 DONE 20.4s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:8a865d927a8383c0a185b3de7f91ae147551527346e3cb56aa395bb8e8898396
#13 DONE 0.5s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:92e5997d63bdbfc4a319de5397dba16586027f973d1d93cc153cdfaf5459bfad
#14 DONE 0.8s

#15 [stage-1  8/13] COPY benchmarks/mp4parse-rust_mp4parse-rust/benchmark.yaml /
#15 sha256:70ca84a62e042227658303623bbc10bba81ef9fb96325feb16d3760a81e8014f
#15 DONE 0.3s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:2b5240e2393c6115da55229fca18cccb343a6b980cc4d48f1a652740a7c1c62c
#16 DONE 0.6s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:2256b10e3e94df7798653412b4eaca3bdef598fa225e0c4125d906f71b369cbb
#17 DONE 0.4s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:f15ecbbf05176a114ab5fb1d827d143e57b1f049a8657d3fb7a2a4dd5fd7808e
#18 0.703 Checking out commit 1d5a2cd8
#18 3.148 From https://github.com/mozilla/mp4parse-rust
#18 3.148  * [new tag]         firefox-93 -> firefox-93
#18 3.148  * [new tag]         firefox-96 -> firefox-96
#18 3.148  * [new tag]         v0.0.2     -> v0.0.2
#18 3.149  * [new tag]         v0.0.4     -> v0.0.4
#18 3.149  * [new tag]         v0.0.5     -> v0.0.5
#18 3.149  * [new tag]         v0.0.6     -> v0.0.6
#18 3.150  * [new tag]         v0.0.8     -> v0.0.8
#18 3.150  * [new tag]         v0.0.9     -> v0.0.9
#18 3.150  * [new tag]         v0.1.0     -> v0.1.0
#18 3.150  * [new tag]         v0.1.1     -> v0.1.1
#18 3.151  * [new tag]         v0.1.2     -> v0.1.2
#18 3.151  * [new tag]         v0.1.3     -> v0.1.3
#18 3.151  * [new tag]         v0.1.4     -> v0.1.4
#18 3.151  * [new tag]         v0.1.5     -> v0.1.5
#18 3.152  * [new tag]         v0.1.6     -> v0.1.6
#18 3.152  * [new tag]         v0.10.0    -> v0.10.0
#18 3.152  * [new tag]         v0.10.1    -> v0.10.1
#18 3.152  * [new tag]         v0.11.6    -> v0.11.6
#18 3.153  * [new tag]         v0.12.0    -> v0.12.0
#18 3.153  * [new tag]         v0.2.0     -> v0.2.0
#18 3.153  * [new tag]         v0.2.1     -> v0.2.1
#18 3.153  * [new tag]         v0.3.0     -> v0.3.0
#18 3.154  * [new tag]         v0.4.0     -> v0.4.0
#18 3.154  * [new tag]         v0.4.1     -> v0.4.1
#18 3.154  * [new tag]         v0.5.0     -> v0.5.0
#18 3.154  * [new tag]         v0.5.1     -> v0.5.1
#18 3.154  * [new tag]         v0.6.0     -> v0.6.0
#18 3.155  * [new tag]         v0.7.0     -> v0.7.0
#18 3.155  * [new tag]         v0.7.1     -> v0.7.1
#18 3.155  * [new tag]         v0.8.0     -> v0.8.0
#18 3.155  * [new tag]         v0.9.0     -> v0.9.0
#18 3.156  * [new tag]         v0.9.1     -> v0.9.1
#18 3.242 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 3.248 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 3.255 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 3.373 Checkout unsuccessful.
#18 DONE 4.3s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:5753fc8c234ce434fbcc930e493f4384b0aa7dcdebcd6fcfa696594e3cbf08f1
#19 DONE 0.9s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:6f6ccb13063c8fae61b0f8ac891de67b882545856cc32f42df33d36826e450db
#20 0.643 Run fuzzer_build to build the target
#20 0.788 FUZZ_TARGET = mp4parse-rust
#20 0.788 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.788 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.798 Building benchmark mp4parse-rust_mp4parse-rust with fuzzer afl
#20 0.801 + PROJECT_DIR=/src/mp4parse-rust
#20 0.801 + cd /src/mp4parse-rust/mp4parse_capi/fuzz
#20 0.801 + cargo fuzz build -O --debug-assertions
#20 0.806 /usr/local/bin/cargo: line 55: /rust/bin/cargo: No such file or directory
#20 0.807 Traceback (most recent call last):
#20 0.807   File "<string>", line 1, in <module>
#20 0.807   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 0.807     utils.build_benchmark()
#20 0.807   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 0.807     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 0.807   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 0.808     raise CalledProcessError(retcode, cmd)
#20 0.808 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 127.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/mp4parse-rust_mp4parse-rust:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2707704: .afl-mp4parse-rust_mp4parse-rust-builder] Error 1
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:ebf2e73aef6f020bf3ba568404e98c48e873efc71f9d849675b49a9f9fdfedc3
#1 transferring dockerfile: 32B done
#1 DONE 0.2s

#2 [internal] load .dockerignore
#2 sha256:3b08e30735a6fcffdc5f9719f02c34244d56e026a3728beb12ac0a763aadb88c
#2 transferring context: 2B done
#2 DONE 0.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:f4e5ea12494fab091c5d830cf803b3421f2860f729b9d1b07da44924396cf8cf
#5 sha256:ef290950573a2779ee526af357b28fbddfc20d7409aa51f58f777c9e972cba29
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/mp4parse-rust_mp4parse-rust
#4 sha256:4107baeae0bd256624297f91516b80e5beb433f139a3ea1edae6c1e1f1582a5a
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:44f6bbe3bc6c9756ccd0a39f7f2aa78aad6ca7219fc604d5bf829a3fcbe83d92
#9 transferring context: 64B done
#9 DONE 0.1s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool curl cmake python llvm-dev libclang-dev clang
#6 sha256:66bc0ce1eb224e9ff493fe7fadec6414b98db0fd06e0576b70a9dcc480786ace
#6 CACHED

#7 [3/5] RUN git clone --depth 1 --recursive https://github.com/mozilla/mp4parse-rust mp4parse-rust
#7 sha256:0961d600dc7decc8b4483851e1be20cd8bdcbd7cf48c454fe8dcb57db5a67924
#7 CACHED

#8 [4/5] WORKDIR mp4parse-rust
#8 sha256:566c3cf8275ac796748b5e2ef054c3209dd475c578ff6a92504b12eedc2cc5d4
#8 CACHED

#10 [5/5] COPY build.sh default.options /src/
#10 sha256:5f963bc4df3c788d5b847c9602640da43bef8a5b85fb51b6867ee25dbe689547
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:7e9c0520a92b1db648a9bd92f79b2825f1a9e200a13b412482757c6f75f904a4 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/mp4parse-rust_mp4parse-rust done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:4c4ee7835987b4f454a0deca0f9a8c86d2a07ab30af7ed6b1fdc92062fac7254
#2 transferring context: 2B done
#2 DONE 0.2s

#1 [internal] load build definition from builder.Dockerfile
#1 sha256:9b1a2bd0af8960186bf04c08e7efd8798c61f2063257ab2c317e0ae67dd500a9
#1 transferring dockerfile: 46B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/mp4parse-rust_mp4parse-rust:latest
#3 sha256:ea3886c095a9978dc96860d374a60f4d51dfc8062cc726d06b7e339374783654
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/mp4parse-rust_mp4parse-rust-intermediate
#4 sha256:400a7ced4ec661fab859743826082bb65ddaaebc34ad0dc7bb6d20dcd2f1a345
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/mp4parse-rust_mp4parse-rust
#5 sha256:c21e84c7913895b6ff546380982abb5842b99baf254b4765dc97f5dd1635044a
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:a501f55da5e11db3c84ba0a0d9f38092f1af122f719e95c8ee902f8c5d21d054
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:b5b272be44d24e9bdc2e74156854781864d4ad33fd8263af6e69a1594352e62e
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:348d5634be26ef4574ac000053783ac3bdfd37c62211f0ff55af6cadc12fa368
#8 writing image sha256:348d5634be26ef4574ac000053783ac3bdfd37c62211f0ff55af6cadc12fa368 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/mp4parse-rust_mp4parse-rust-intermediate done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:f7fc96c34a0cf5a96283da60050b5c487685e7d9d10e35dc1098dc634cc31626
#1 transferring dockerfile:
#1 transferring dockerfile: 2.00kB done
#1 DONE 1.5s

#2 [internal] load .dockerignore
#2 sha256:9e6e7ba0e96238712c779a2f69e82cc176c761f73b595b60ffebf797aa27f05f
#2 transferring context: 34B done
#2 DONE 2.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:8abe5cd0039dff65deaa0956143d58a042fe893a69f355bc01940a78900779ac
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#9 [4/7] COPY ./requirements.txt /
#9 sha256:47fe22c5c325c09129710515472d809740f8c1d4c3e2b98af7a5efe80cdc36f3
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:7f67dd6e1039b3e4cf7349e8d5e32972e074fe22fd049bfc934b219ed8c130fa
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:5897087cb6653c79432f4d7a455b0a489a0959332e4030758f4aa3f2733f92d2
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:996bb87e3027d8bb16847a360d3a051f62a0e88e5ec5f54bc56b4697f70c9b53
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:b2d4c9b4ea735f48f43492e9543dfefaca6e0583d7afe24a3bd18e3968f48f0d
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:602fd268481a6998710a606e5189b725a4064e6b470e49f3125995dfae463161
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/mp4parse-rust_mp4parse-rust-intermediate:latest
#3 sha256:e436c795f8fdeec2933bfaab31260dc72ee055037735550ddd5d733001aca4d0
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:eeb57f2e9b50c15d0793a0bfb7870ca9424ec268c565e492b8d954bc2fd48623
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/mp4parse-rust_mp4parse-rust-intermediate
#6 sha256:fc5a6d77b1a2864dad31da857db3edb18123b568c515945ae02e22ee5c5f686b
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/mp4parse-rust_mp4parse-rust
#5 sha256:0af6ca0992a5b5057ee7fd14fe19fd76d2ac7ad59819e5d623ad4ec3bcdd9291
#5 ERROR: gcr.io/fuzzbench/builders/afl/mp4parse-rust_mp4parse-rust:latest: not found

#12 [internal] load build context
#12 sha256:eeb57f2e9b50c15d0793a0bfb7870ca9424ec268c565e492b8d954bc2fd48623
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.2s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:afd8dcce7eaa6eafc815564894d3abe32eb0fb3e3c509c2c0a82d571081f8d07
#18 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:4a866265cd0665b0444cb6b2caee62e1c39464f7296814dcd3193ffd25745eef
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:205bb8169d61b2d771d52c0003c05047c00c5b6c03e3bf4fac687031cec649fa
#9 CACHED

#15 [stage-1  8/13] COPY benchmarks/mp4parse-rust_mp4parse-rust/benchmark.yaml /
#15 sha256:9476ff7b2e4bd5554d59ced1567e21350e7e07cca0d7e5f050321e9bbc49ba8c
#15 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:521aad378204c111c4d74435dae8deac2cd5971102da20d49e89bed2e0a30d2f
#11 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:b934398e11d41dd25edf393345b4daa7ef841c852f4c5b781664c26fd21b10bc
#13 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:dc7f5dd921198e71c1b8c1dddbb5726055068c88dc10dceb82c64c86431ce12f
#10 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:013127b51f568888ab7cc49ef1315cb98f66d3ce267846807866302662cc59ed
#14 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:01e01664129570c8c2d3d0831ee5f17b9b0f8e70145591f95878a32eef526763
#17 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:a323b19ac640014333002c29f09073fcc3c1ee210263cc52357eb0a3faeb4db6
#16 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:54e77f30bac0f4d086e20ac63493681ea92e81ad24d412815f03f8581a1e0756
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:905f0307be5cf6664fe1d1ac3f8aaf33dfa35e262a8dc6b00f664c44a7591b66
#20 0.541 Run fuzzer_build to build the target
#20 0.651 FUZZ_TARGET = mp4parse-rust
#20 0.651 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.651 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.655 Building benchmark mp4parse-rust_mp4parse-rust with fuzzer afl
#20 0.658 + PROJECT_DIR=/src/mp4parse-rust
#20 0.658 + cd /src/mp4parse-rust/mp4parse_capi/fuzz
#20 0.658 + cargo fuzz build -O --debug-assertions
#20 0.660 /usr/local/bin/cargo: line 55: /rust/bin/cargo: No such file or directory
#20 0.661 Traceback (most recent call last):
#20 0.661   File "<string>", line 1, in <module>
#20 0.661   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 0.662     utils.build_benchmark()
#20 0.662   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 0.662     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 0.662   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 0.662     raise CalledProcessError(retcode, cmd)
#20 0.662 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 127.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/mp4parse-rust_mp4parse-rust:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2707704: .afl-mp4parse-rust_mp4parse-rust-builder] Error 1
