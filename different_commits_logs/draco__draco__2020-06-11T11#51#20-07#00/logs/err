WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: draco_draco.
INFO:root:Please run "make test-run-afl-draco_draco" to test integration.
#2 [internal] load .dockerignore
#2 sha256:87ed7add69b32b1811c829a2300f9ddafbd8c1c1b2cdc705c489ed43e6ff24c4
#2 transferring context: 2B done
#2 DONE 0.3s

#1 [internal] load build definition from Dockerfile
#1 sha256:88f9cfdfadff7b7808b87be7f1550a4ad51dd461036307ef13a6dffac3c341f1
#1 transferring dockerfile: 922B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#8 [internal] load build context
#8 sha256:15910fef5d842ff5240fdd6a2a543e9c361eecfa1ce784e3f05d801f2c9c4525
#8 DONE 0.0s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/draco_draco
#4 sha256:7fe7bdf8e82d0fa29d06198e1adf2922107c9c44f94ab0618482afe6b402e631
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/draco_draco:latest: not found

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 CACHED

#8 [internal] load build context
#8 sha256:15910fef5d842ff5240fdd6a2a543e9c361eecfa1ce784e3f05d801f2c9c4525
#8 transferring context: 2.76kB done
#8 DONE 1.7s

#6 [2/6] RUN apt-get update && apt-get install -y git cmake make pkg-config
#6 sha256:2f2842cda5b14819f68ae0b6b198bcddc5dd1fccd5fe854b336884b3b10ea7d7
#6 3.492 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 3.492 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#6 3.492 Get:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#6 3.495 Get:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#6 3.498 Get:5 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#6 4.233 Get:6 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1134 kB]
#6 4.474 Get:7 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [827 kB]
#6 4.536 Get:8 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1973 kB]
#6 4.682 Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [752 kB]
#6 5.217 Fetched 5022 kB in 2s (3100 kB/s)
#6 5.217 Reading package lists...
#6 7.003 Reading package lists...
#6 8.411 Building dependency tree...
#6 8.620 Reading state information...
#6 8.827 make is already the newest version (4.2.1-1.2).
#6 8.827 make set to manually installed.
#6 8.827 git is already the newest version (1:2.35.1-0ppa1~ubuntu20.04.1).
#6 8.827 The following additional packages will be installed:
#6 8.829   cmake-data libarchive13 libjsoncpp1 librhash0 libuv1
#6 8.831 Suggested packages:
#6 8.831   cmake-doc ninja-build lrzip
#6 8.872 The following NEW packages will be installed:
#6 8.874   cmake cmake-data libarchive13 libjsoncpp1 librhash0 libuv1 pkg-config
#6 8.951 0 upgraded, 7 newly installed, 0 to remove and 0 not upgraded.
#6 8.951 Need to get 5922 kB of archives.
#6 8.951 After this operation, 29.6 MB of additional disk space will be used.
#6 8.951 Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libuv1 amd64 1.34.2-1ubuntu1.3 [80.8 kB]
#6 9.041 Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 cmake-data all 3.16.3-1ubuntu1 [1612 kB]
#6 9.204 Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 libarchive13 amd64 3.4.0-2ubuntu1 [327 kB]
#6 9.231 Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 libjsoncpp1 amd64 1.7.4-3.1ubuntu2 [75.6 kB]
#6 9.237 Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 librhash0 amd64 1.3.9-1 [113 kB]
#6 9.247 Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 cmake amd64 3.16.3-1ubuntu1 [3669 kB]
#6 9.541 Get:7 http://archive.ubuntu.com/ubuntu focal/main amd64 pkg-config amd64 0.29.1-0ubuntu4 [45.5 kB]
#6 10.02 debconf: delaying package configuration, since apt-utils is not installed
#6 10.23 Fetched 5922 kB in 1s (9014 kB/s)
#6 10.81 Selecting previously unselected package libuv1:amd64.
#6 10.81 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21291 files and directories currently installed.)
#6 10.83 Preparing to unpack .../0-libuv1_1.34.2-1ubuntu1.3_amd64.deb ...
#6 10.99 Unpacking libuv1:amd64 (1.34.2-1ubuntu1.3) ...
#6 11.35 Selecting previously unselected package cmake-data.
#6 11.35 Preparing to unpack .../1-cmake-data_3.16.3-1ubuntu1_all.deb ...
#6 11.36 Unpacking cmake-data (3.16.3-1ubuntu1) ...
#6 12.14 Selecting previously unselected package libarchive13:amd64.
#6 12.14 Preparing to unpack .../2-libarchive13_3.4.0-2ubuntu1_amd64.deb ...
#6 12.15 Unpacking libarchive13:amd64 (3.4.0-2ubuntu1) ...
#6 12.28 Selecting previously unselected package libjsoncpp1:amd64.
#6 12.29 Preparing to unpack .../3-libjsoncpp1_1.7.4-3.1ubuntu2_amd64.deb ...
#6 12.29 Unpacking libjsoncpp1:amd64 (1.7.4-3.1ubuntu2) ...
#6 12.45 Selecting previously unselected package librhash0:amd64.
#6 12.45 Preparing to unpack .../4-librhash0_1.3.9-1_amd64.deb ...
#6 12.47 Unpacking librhash0:amd64 (1.3.9-1) ...
#6 12.59 Selecting previously unselected package cmake.
#6 12.59 Preparing to unpack .../5-cmake_3.16.3-1ubuntu1_amd64.deb ...
#6 12.61 Unpacking cmake (3.16.3-1ubuntu1) ...
#6 13.12 Selecting previously unselected package pkg-config.
#6 13.13 Preparing to unpack .../6-pkg-config_0.29.1-0ubuntu4_amd64.deb ...
#6 13.14 Unpacking pkg-config (0.29.1-0ubuntu4) ...
#6 13.21 Setting up libarchive13:amd64 (3.4.0-2ubuntu1) ...
#6 13.24 Setting up libuv1:amd64 (1.34.2-1ubuntu1.3) ...
#6 13.25 Setting up pkg-config (0.29.1-0ubuntu4) ...
#6 13.35 Setting up librhash0:amd64 (1.3.9-1) ...
#6 13.37 Setting up cmake-data (3.16.3-1ubuntu1) ...
#6 13.39 Setting up libjsoncpp1:amd64 (1.7.4-3.1ubuntu2) ...
#6 13.40 Setting up cmake (3.16.3-1ubuntu1) ...
#6 13.42 Processing triggers for libc-bin (2.31-0ubuntu9.2) ...
#6 DONE 13.8s

#7 [3/6] RUN git clone --depth 1 https://github.com/google/draco draco
#7 sha256:df0f26a418b1ccfb8949bb66f7d9d9d969a3b13ed98c0577b73d21f6ae0111a9
#7 0.425 Cloning into 'draco'...
#7 DONE 11.4s

#9 [4/6] COPY build.sh /src/
#9 sha256:f7b4dff10b459fc22a92b0d8fd22bd194bbddf47104393e3e7fbf1281c0a8ddd
#9 DONE 0.2s

#10 [5/6] COPY fuzz /src/fuzz
#10 sha256:a145df5616fcad4b1e28fb341ed102fde15125669d51a202eae599ddfa1cec9d
#10 DONE 0.2s

#11 [6/6] WORKDIR /work/
#11 sha256:1a7e94cbf2fa0181291084aaf565d4001910e80dc51d4c34c1967b6c5c58c553
#11 DONE 0.1s

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:c2e2ff035585b2d2ff19709a1decfd7209b1805ec51bbcc754ad0ceeab73d4c4
#12 writing image sha256:c2e2ff035585b2d2ff19709a1decfd7209b1805ec51bbcc754ad0ceeab73d4c4 done
#12 naming to gcr.io/fuzzbench/builders/benchmark/draco_draco done
#12 DONE 0.1s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/draco_draco:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:514df68f5dbcb8e57103cbc3077b6410fdc0774125b5eb77c87d8a63b3a8b17d
#1 transferring dockerfile: 46B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:9e4b57688f90674bf1648cdb568debbb048d896f1c4f84f841096138f4649a08
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/draco_draco:latest
#3 sha256:15153bbff577630a8d2ce10cfb56c8b8d1a17f269e0f6d25b08a8e37f6ff9766
#3 DONE 0.0s

#7 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/draco_draco
#7 sha256:d907f20751e4ba1efc474ea776c00c8c183c01afe3cdefc1c974e29bfd4bbe99
#7 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/draco_draco-intermediate
#4 sha256:d2be8f1700befac57c3721dff0438e53950b4bf6e85777f0dffb07ad4e530276
#4 ERROR: gcr.io/fuzzbench/builders/afl/draco_draco-intermediate:latest: not found

#7 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/draco_draco
#7 sha256:d907f20751e4ba1efc474ea776c00c8c183c01afe3cdefc1c974e29bfd4bbe99
#7 DONE 0.3s

#5 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#5 sha256:b0514b094f893bd2525bd78c79362294f751be4f15cfdeb12c49a1d358bd66c6
#5 0.326 Cloning into '/afl'...
#5 1.373 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#5 1.373 
#5 1.373 You are in 'detached HEAD' state. You can look around, make experimental
#5 1.373 changes and commit them, and you can discard any commits you make in this
#5 1.373 state without impacting any branches by switching back to a branch.
#5 1.373 
#5 1.373 If you want to create a new branch to retain commits you create, you may
#5 1.373 do so (now or later) by using -c with the switch command. Example:
#5 1.373 
#5 1.373   git switch -c <new-branch-name>
#5 1.373 
#5 1.373 Or undo this operation with:
#5 1.373 
#5 1.373   git switch -
#5 1.373 
#5 1.373 Turn off this advice by setting config variable advice.detachedHead to false
#5 1.373 
#5 1.373 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#5 1.390 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#5 1.391 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#5 1.572 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#5 1.577 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#5 3.988 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#5 4.311 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#5 4.738 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#5 4.891 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#5 5.289 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#5 5.547 ln -sf afl-as as
#5 5.549 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#5 5.551 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#5 5.552 [+] All done! Be sure to review README - it's pretty short and useful.
#5 DONE 6.0s

#6 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#6 sha256:689e046f3adc91d9e053a3b1b17cfed337c409e1cc64fc4b528495416e7274cd
#6 0.742 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#6 0.742 Hit:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#6 0.742 Hit:3 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#6 0.742 Hit:4 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 0.847 Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease
#6 1.640 Reading package lists...
#6 3.129 Reading package lists...
#6 4.552 Building dependency tree...
#6 4.761 Reading state information...
#6 5.005 wget is already the newest version (1.20.3-1ubuntu2).
#6 5.005 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#6 5.017 --2022-02-17 10:15:39--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#6 5.020 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.111.133, 185.199.110.133, ...
#6 5.022 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.
#6 5.051 HTTP request sent, awaiting response... 200 OK
#6 5.229 Length: 9177 (9.0K) [text/plain]
#6 5.229 Saving to: '/afl/afl_driver.cpp'
#6 5.229 
#6 5.229      0K ........                                              100% 7.64M=0.001s
#6 5.230 
#6 5.230 2022-02-17 10:15:39 (7.64 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#6 5.230 
#6 6.965 ar: creating /libAFL.a
#6 DONE 7.8s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:b95e1f728fe0f6b25d83bcbc1a14856986b7bdb9cfae758bf062de77512c45f0
#8 writing image sha256:b95e1f728fe0f6b25d83bcbc1a14856986b7bdb9cfae758bf062de77512c45f0 done
#8 naming to gcr.io/fuzzbench/builders/afl/draco_draco-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/draco_draco-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:29e73819b8a4f1d3ee72d944051dec6ee0550c6628bc3600979afc6941e7c88e
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:8b1fe0849f55d45c86f5657d4018f8804d184323f1ae83e471c464ba7695b920
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:ab465123b64cdb9feab4b4a2a6276d0606b5cd2d2a7ff6e09969710cfc659e90
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:6cf977d593becc33ca805ffcc99038063db411f684d60b46ee851e640d8c7fec
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:1a86aace0e1971e26b8f4e846f24ba2e250afa29c37a48d0d1983110ee6cc335
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:17cb9944d708372b664203e8ca14bdb5778f5412e97e4fce37cd108dd63c064d
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:c8ffad1aa4ad39d3dbb837d729c7d34b1209734d4e3795979f983a56896da3a4
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:84dadf5a6e69b459573a093ee87bc42bf4aa1ecbf8abb82f5c3a0011112f67a0
#13 writing image sha256:84dadf5a6e69b459573a093ee87bc42bf4aa1ecbf8abb82f5c3a0011112f67a0 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:9b5f1ce8f3b4826acab93627fc75fa359b4b392dd7d622376b99ce2673a760a2
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:ad8a5d78fd634e266d1f56834abb1e26ca2d69403670d050ce559be4f2ea2929
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/draco_draco-intermediate:latest
#3 sha256:2c0ee05afb88daf9e6ad9995da9d96a783e3514c3cde64567fce374792fda52b
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:f16758e8c4de6bfc62cfa99b9d7750cfad060d083cbc334777a78ccff39ab9e3
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/draco_draco-intermediate
#6 sha256:97a12b2c4af88f6fab202ec0aef55b5d76fad4c50afbc02767864d631b6c1415
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/draco_draco
#5 sha256:04e8cf2cc1b05d6a0c9850bb7a7a400b04ad7f8cb9e79c7125a7f6cbf04cb3de
#5 ERROR: gcr.io/fuzzbench/builders/afl/draco_draco:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:f16758e8c4de6bfc62cfa99b9d7750cfad060d083cbc334777a78ccff39ab9e3
#12 transferring context: 669.86kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/draco_draco-intermediate
#6 sha256:97a12b2c4af88f6fab202ec0aef55b5d76fad4c50afbc02767864d631b6c1415
#6 DONE 0.3s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:0b23e65d517e5023bdb1e864a4c0e8fbbf2ac6d60acb02cbd2d02d65095f0786
#8 DONE 0.3s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:26e2779a9eafd960ac9faf3e19c25fd055b9ae941e38b80d49e021ec83ff8700
#9 DONE 11.8s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:c844b1d2349ae9f269d09d3d57094a26858749f83e30de8bd47f65ec87d9f5e9
#10 DONE 0.1s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:69062f25195b5403eb4325b2f85de2ca726e9f2e0464c42e7c22788a09d4dec5
#11 DONE 17.7s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:0af91a1f05566f00bcb7ff050b5d38e2dfb950e65570a8d414bbac7a7e37c220
#13 DONE 0.3s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:ef66ca2fd1f3a6cceaac1e9a3f609b643e517e0203555918db3a42bf5f42ad60
#14 DONE 0.7s

#15 [stage-1  8/13] COPY benchmarks/draco_draco/benchmark.yaml /
#15 sha256:5bb4c3c55ef0d4673601db0399ceebf95c71a7544181b79fa38d48b7e2ec85bb
#15 DONE 0.2s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:8d0e9954e115f8c31981bfc44a63d96b7eb449861ff7b6dbe1280a31c7798be3
#16 DONE 0.4s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:e88fd93049e24cb2f5e6d32f96190d7a2ea9fe943545bc1e44f8440b6a9f77d2
#17 DONE 0.1s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:5f866545258d9402f6420647022695dfd19a0d43fd9ca2b3b4b9326d6496f4f5
#18 0.521 Checking out commit 94c0e60d
#18 15.89 From https://github.com/google/draco
#18 15.89  * [new tag]         0.10.0     -> 0.10.0
#18 15.89  * [new tag]         0.9.1      -> 0.9.1
#18 15.89  * [new tag]         1.0.0      -> 1.0.0
#18 15.89  * [new tag]         1.0.1      -> 1.0.1
#18 15.89  * [new tag]         1.1.0      -> 1.1.0
#18 15.89  * [new tag]         1.2.0      -> 1.2.0
#18 15.89  * [new tag]         1.2.1      -> 1.2.1
#18 15.89  * [new tag]         1.2.2      -> 1.2.2
#18 15.89  * [new tag]         1.2.4      -> 1.2.4
#18 15.89  * [new tag]         1.2.5      -> 1.2.5
#18 15.89  * [new tag]         1.3.0      -> 1.3.0
#18 15.89  * [new tag]         1.3.1      -> 1.3.1
#18 15.89  * [new tag]         1.3.2      -> 1.3.2
#18 15.89  * [new tag]         1.3.3      -> 1.3.3
#18 15.89  * [new tag]         1.3.4      -> 1.3.4
#18 15.89  * [new tag]         1.3.5      -> 1.3.5
#18 15.89  * [new tag]         1.3.6      -> 1.3.6
#18 15.89  * [new tag]         1.4.0      -> 1.4.0
#18 15.89  * [new tag]         1.4.1      -> 1.4.1
#18 15.89  * [new tag]         1.4.3      -> 1.4.3
#18 15.89  * [new tag]         1.5.0      -> 1.5.0
#18 15.94 error: pathspec '94c0e60d' did not match any file(s) known to git
#18 15.95 error: pathspec '94c0e60d' did not match any file(s) known to git
#18 15.96 error: pathspec '94c0e60d' did not match any file(s) known to git
#18 15.97 error: pathspec '94c0e60d' did not match any file(s) known to git
#18 16.01 Checkout unsuccessful.
#18 DONE 16.2s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:8925e4718bbbcd535c20d7f9e9e509807220c59ccde8c26790d100ae135d33e5
#19 DONE 1.3s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:00065e56760006ccc61658d5969646ad2b01180fd02e6ac99512c3875870361a
#20 0.600 Run fuzzer_build to build the target
#20 0.726 FUZZ_TARGET = draco
#20 0.726 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.726 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.743 Building benchmark draco_draco with fuzzer afl
#20 0.746 + cmake /src/draco
#20 1.055 -- The C compiler identification is Clang 14.0.0
#20 1.308 -- The CXX compiler identification is Clang 14.0.0
#20 1.330 -- Detecting C compiler ABI info
#20 1.494 -- Detecting C compiler ABI info - done
#20 1.548 -- Check for working C compiler: /usr/local/bin/clang - skipped
#20 1.553 -- Detecting C compile features
#20 1.554 -- Detecting C compile features - done
#20 1.562 -- Detecting CXX compiler ABI info
#20 1.757 -- Detecting CXX compiler ABI info - done
#20 1.824 -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
#20 1.824 -- Detecting CXX compile features
#20 1.825 -- Detecting CXX compile features - done
#20 1.901 -- Found PythonInterp: /usr/bin/python (found version "3.8.10") 
#20 1.968 -- Configuring done
#20 2.061 -- Generating done
#20 2.067 -- Build files have been written to: /work
#20 2.071 ++ nproc
#20 2.073 + make -j8 draco
#20 2.083 ++ find /src/fuzz -name '*.cc'
#20 2.099 + for fuzzer in $(find $SRC/fuzz -name '*.cc')
#20 2.100 ++ basename -s .cc /src/fuzz/draco_decoder_fuzzer.cc
#20 2.101 + fuzzer_basename=draco_decoder_fuzzer
#20 2.101 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -I /src/ -I /src/draco/src -I /work/ /libAFL.a /src/fuzz/draco_decoder_fuzzer.cc /work/libdraco.a -o /out/draco_decoder_fuzzer
#20 2.115 clang-14: error: no such file or directory: '/work/libdraco.a'
#20 2.117 Traceback (most recent call last):
#20 2.117   File "<string>", line 1, in <module>
#20 2.117   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 2.118     utils.build_benchmark()
#20 2.118   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 2.118     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 2.118   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 2.118     raise CalledProcessError(retcode, cmd)
#20 2.118 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/draco_draco:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2774879: .afl-draco_draco-builder] Error 1
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:4326ada1eba371cd4e1542598651b7e7d908863d675a4c2fc15bb73f395b2c4c
#1 transferring dockerfile: 32B done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:a5f61e7867dac83ad231d652ef97ddac9cc01ddce5749150778a5b11780b2078
#2 transferring context: 2B done
#2 DONE 0.3s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/draco_draco
#4 sha256:7fe7bdf8e82d0fa29d06198e1adf2922107c9c44f94ab0618482afe6b402e631
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:300eeadcb2cfaeeb0355e53208f0a85ccc038df48660e1109ac4ea0d44eb794b
#8 transferring context: 102B done
#8 DONE 0.1s

#6 [2/6] RUN apt-get update && apt-get install -y git cmake make pkg-config
#6 sha256:2f2842cda5b14819f68ae0b6b198bcddc5dd1fccd5fe854b336884b3b10ea7d7
#6 CACHED

#9 [4/6] COPY build.sh /src/
#9 sha256:eae367a5a2cd3b51840b257aa6ec9f35b21214d144ba1b8efa697e239c9ddc03
#9 CACHED

#10 [5/6] COPY fuzz /src/fuzz
#10 sha256:0224c052e33788eb961c525abd3d279fe9b29ef2d7a2c78199e7111aa5759d89
#10 CACHED

#7 [3/6] RUN git clone --depth 1 https://github.com/google/draco draco
#7 sha256:df0f26a418b1ccfb8949bb66f7d9d9d969a3b13ed98c0577b73d21f6ae0111a9
#7 CACHED

#11 [6/6] WORKDIR /work/
#11 sha256:420673accb3367a49d3ecb6e5c3297bdac0e42d725255f8eb1c38b0bb283abc2
#11 CACHED

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:c2e2ff035585b2d2ff19709a1decfd7209b1805ec51bbcc754ad0ceeab73d4c4 0.0s done
#12 naming to gcr.io/fuzzbench/builders/benchmark/draco_draco done
#12 DONE 0.4s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:1f0227cc7a0ab37fb19aa00af8a6fd22e8a6cc161a80e6bbe0e6de5a14431e14
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:f4a013265030d472ede3c8a5142a590ad29b72d422b41cfdeba6dba3c61d2a31
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/draco_draco:latest
#3 sha256:15153bbff577630a8d2ce10cfb56c8b8d1a17f269e0f6d25b08a8e37f6ff9766
#3 DONE 0.0s

#7 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/draco_draco
#7 sha256:d907f20751e4ba1efc474ea776c00c8c183c01afe3cdefc1c974e29bfd4bbe99
#7 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/draco_draco-intermediate
#4 sha256:d2be8f1700befac57c3721dff0438e53950b4bf6e85777f0dffb07ad4e530276
#4 DONE 0.0s

#5 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#5 sha256:b0514b094f893bd2525bd78c79362294f751be4f15cfdeb12c49a1d358bd66c6
#5 CACHED

#6 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#6 sha256:689e046f3adc91d9e053a3b1b17cfed337c409e1cc64fc4b528495416e7274cd
#6 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:b95e1f728fe0f6b25d83bcbc1a14856986b7bdb9cfae758bf062de77512c45f0
#8 writing image sha256:b95e1f728fe0f6b25d83bcbc1a14856986b7bdb9cfae758bf062de77512c45f0 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/draco_draco-intermediate done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:b7dc768185b5ea4d986e6e92e51878af4ee3c4c4f122433cc4bf27d901db5360
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:a6946b8df02f9ead21f93b4dd3a5fa14f5249e6f21aea4d34657012826f8aad5
#2 transferring context: 34B done
#2 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:2a0365b662e277a85b2c2ead2a4a7181b18edd8bbc834d06ec0d7ce1d7f8d6cd
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:f6b701f9e8ae3f0e1d7d9cbc40adb72eea75a59ca72999c4455c3e4faf16e87a
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:efa34a54e35102bb67d58aa1c6411063381b1e9ea5812a7e49aeef24e1b6ce46
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:0c2ed863643abea30f0e9d67d09da09c53adb39e55182251fb89c1b6d78f80bd
#9 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:2c6fe3f12e390ff2f3f63742f93bc95cba82b1765f75ac6b7f66cbc87877360c
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:84dadf5a6e69b459573a093ee87bc42bf4aa1ecbf8abb82f5c3a0011112f67a0
#13 writing image sha256:84dadf5a6e69b459573a093ee87bc42bf4aa1ecbf8abb82f5c3a0011112f67a0 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:4b44d2508cfe6effe8d2ad56c7d08ab4f2ae91769e902c1eb5267dd5c472fc8c
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:353416be8ae05e910056db1be402e680197254040ece48a24de181e8f2a20003
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/draco_draco-intermediate:latest
#4 sha256:2c0ee05afb88daf9e6ad9995da9d96a783e3514c3cde64567fce374792fda52b
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:c4ece187c7ab9f50a630fd3d47018a06c870414db598cb864c8bfd04d1289bd2
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/draco_draco-intermediate
#6 sha256:97a12b2c4af88f6fab202ec0aef55b5d76fad4c50afbc02767864d631b6c1415
#6 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/draco_draco
#5 sha256:04e8cf2cc1b05d6a0c9850bb7a7a400b04ad7f8cb9e79c7125a7f6cbf04cb3de
#5 ERROR: gcr.io/fuzzbench/builders/afl/draco_draco:latest: not found

#12 [internal] load build context
#12 sha256:c4ece187c7ab9f50a630fd3d47018a06c870414db598cb864c8bfd04d1289bd2
#12 transferring context: 669.86kB 0.1s done
#12 DONE 0.2s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:26e2779a9eafd960ac9faf3e19c25fd055b9ae941e38b80d49e021ec83ff8700
#9 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:2601b041c133996d80f0fe51e1a2e66a631bee569d7f20025023399f3f3ee525
#14 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:c6d13e7a81dccbfa5bde7c72a8c09fc12062c159a7bdd7d58df53233be672a72
#16 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:0e37673ab452ebc06443cdf320c38a9d9134e164fa6640455b988787d4a8ebe8
#17 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:0b23e65d517e5023bdb1e864a4c0e8fbbf2ac6d60acb02cbd2d02d65095f0786
#8 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:9418b0ed44e3946e565d974268a46f2389feba85c3cb1d78152f47db238670a0
#13 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:69062f25195b5403eb4325b2f85de2ca726e9f2e0464c42e7c22788a09d4dec5
#11 CACHED

#15 [stage-1  8/13] COPY benchmarks/draco_draco/benchmark.yaml /
#15 sha256:4b323cf22ef824dcaff0a144574bba8fe03e8392e418a21ebd96d208d2b7f3ae
#15 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:5c9611e7f2df8cd62a9c8dadf4219d9297dd6b13848f50ae71228767a3daa85f
#18 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:c844b1d2349ae9f269d09d3d57094a26858749f83e30de8bd47f65ec87d9f5e9
#10 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:2b97035d590233244716c7834d2d08a05fc166afe1051b37cb79e5dc5a01fbc7
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:40e5f3cc84345517e32afc603fbf1c49f822ad1694b6ec3baf1cb9be05d1a830
#20 0.420 Run fuzzer_build to build the target
#20 0.540 FUZZ_TARGET = draco
#20 0.540 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.540 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.545 Building benchmark draco_draco with fuzzer afl
#20 0.549 + cmake /src/draco
#20 0.755 -- The C compiler identification is Clang 14.0.0
#20 1.012 -- The CXX compiler identification is Clang 14.0.0
#20 1.023 -- Detecting C compiler ABI info
#20 1.174 -- Detecting C compiler ABI info - done
#20 1.229 -- Check for working C compiler: /usr/local/bin/clang - skipped
#20 1.229 -- Detecting C compile features
#20 1.230 -- Detecting C compile features - done
#20 1.236 -- Detecting CXX compiler ABI info
#20 1.419 -- Detecting CXX compiler ABI info - done
#20 1.488 -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
#20 1.488 -- Detecting CXX compile features
#20 1.489 -- Detecting CXX compile features - done
#20 1.518 -- Found PythonInterp: /usr/bin/python (found version "3.8.10") 
#20 1.565 -- Configuring done
#20 1.657 -- Generating done
#20 1.662 -- Build files have been written to: /work
#20 1.667 ++ nproc
#20 1.669 + make -j8 draco
#20 1.679 ++ find /src/fuzz -name '*.cc'
#20 1.681 + for fuzzer in $(find $SRC/fuzz -name '*.cc')
#20 1.682 ++ basename -s .cc /src/fuzz/draco_decoder_fuzzer.cc
#20 1.682 + fuzzer_basename=draco_decoder_fuzzer
#20 1.682 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -I /src/ -I /src/draco/src -I /work/ /libAFL.a /src/fuzz/draco_decoder_fuzzer.cc /work/libdraco.a -o /out/draco_decoder_fuzzer
#20 1.695 clang-14: error: no such file or directory: '/work/libdraco.a'
#20 1.698 Traceback (most recent call last):
#20 1.698   File "<string>", line 1, in <module>
#20 1.698   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 1.698     utils.build_benchmark()
#20 1.698   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 1.698     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 1.698   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 1.699     raise CalledProcessError(retcode, cmd)
#20 1.699 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/draco_draco:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2774879: .afl-draco_draco-builder] Error 1
