WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: oak_oak.
INFO:root:Please run "make test-run-afl-oak_oak" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:9877cad21f57114434cc2724a64a345fda008cca488b8018fe06c99889a77bea
#1 transferring dockerfile:
#1 transferring dockerfile: 1.69kB done
#1 DONE 0.2s

#2 [internal] load .dockerignore
#2 sha256:13394b48522555e43e0115bdeff02155ef72d5ed2bca5099f57be08a65d4ad1b
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder@sha256:276813aef0ce5972db43c0230f96162003994fa742fb1b2f4e66c67498575c65
#3 sha256:2b754e48af0c5e38ce62698059fbec3192df8e59cc29e02d41923aa551f21bea
#3 DONE 1.6s

#9 [internal] load build context
#9 sha256:79d250eb361f75008669ddac285fea5325396509f4b5ee3008de393f4ba2e6d7
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:276813aef0ce5972db43c0230f96162003994fa742fb1b2f4e66c67498575c65
#5 sha256:42273eb8b63d10daaf882a5b3c8a6e7a11876869a31001925573ea217a9cf9a4
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/oak_oak
#4 sha256:d95c1ba6777729cf9980463d65040c29c39beb7f9fcffbc722a6deb0b08c2a9a
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/oak_oak:latest: not found

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:276813aef0ce5972db43c0230f96162003994fa742fb1b2f4e66c67498575c65
#5 sha256:42273eb8b63d10daaf882a5b3c8a6e7a11876869a31001925573ea217a9cf9a4
#5 resolve gcr.io/oss-fuzz-base/base-builder@sha256:276813aef0ce5972db43c0230f96162003994fa742fb1b2f4e66c67498575c65
#5 ...

#9 [internal] load build context
#9 sha256:79d250eb361f75008669ddac285fea5325396509f4b5ee3008de393f4ba2e6d7
#9 transferring context: 2.65kB done
#9 DONE 0.2s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:276813aef0ce5972db43c0230f96162003994fa742fb1b2f4e66c67498575c65
#5 sha256:42273eb8b63d10daaf882a5b3c8a6e7a11876869a31001925573ea217a9cf9a4
#5 resolve gcr.io/oss-fuzz-base/base-builder@sha256:276813aef0ce5972db43c0230f96162003994fa742fb1b2f4e66c67498575c65 0.1s done
#5 sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451 0B / 44.14MB 0.1s
#5 sha256:276813aef0ce5972db43c0230f96162003994fa742fb1b2f4e66c67498575c65 4.10kB / 4.10kB done
#5 sha256:d359d2250ddf0772d6326f4a5abbe79fe7168ecc51a66bdd9949e1c2100fade4 16.45kB / 16.45kB done
#5 sha256:858453671e6769806e0374869acce1d9e5d97f5020f86139e0862c7ada6da621 0B / 849B 0.2s
#5 sha256:d1072db285cc5eb2f3415891381631501b3ad9b1a10da20ca2e932d7d8799988 0B / 529B 0.1s
#5 sha256:858453671e6769806e0374869acce1d9e5d97f5020f86139e0862c7ada6da621 849B / 849B 0.5s done
#5 sha256:3d07b1124f982f6c5da7f1b85a0a12f9574d6ce7e8a84160cda939e5b3a1faad 0B / 170B 0.6s
#5 sha256:d1072db285cc5eb2f3415891381631501b3ad9b1a10da20ca2e932d7d8799988 529B / 529B 0.7s done
#5 sha256:d7efd72e543e94ca12cb58a461dfba7a72470de15c8b141d28e33cb7d9c71d76 0B / 37.11MB 0.8s
#5 sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451 3.15MB / 44.14MB 0.9s
#5 sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451 6.29MB / 44.14MB 1.2s
#5 sha256:3d07b1124f982f6c5da7f1b85a0a12f9574d6ce7e8a84160cda939e5b3a1faad 170B / 170B 1.2s done
#5 sha256:ba7c7a0418bca704b03fcf6da8b56a26062525dc014717a31b756ebe0601cab1 0B / 176B 1.3s
#5 sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451 9.44MB / 44.14MB 1.5s
#5 sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451 12.58MB / 44.14MB 1.9s
#5 sha256:ba7c7a0418bca704b03fcf6da8b56a26062525dc014717a31b756ebe0601cab1 176B / 176B 2.1s
#5 sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451 15.73MB / 44.14MB 2.2s
#5 sha256:d7efd72e543e94ca12cb58a461dfba7a72470de15c8b141d28e33cb7d9c71d76 2.10MB / 37.11MB 2.2s
#5 sha256:ba7c7a0418bca704b03fcf6da8b56a26062525dc014717a31b756ebe0601cab1 176B / 176B 2.1s done
#5 sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451 18.87MB / 44.14MB 2.5s
#5 sha256:7da31aeedd31f0c2c9e6dfa06391a4fcf95717cee01ec10ac22e992fabf1ef83 0B / 1.87kB 2.7s
#5 sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451 22.02MB / 44.14MB 2.8s
#5 sha256:d7efd72e543e94ca12cb58a461dfba7a72470de15c8b141d28e33cb7d9c71d76 4.19MB / 37.11MB 2.9s
#5 sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451 25.17MB / 44.14MB 3.1s
#5 sha256:7da31aeedd31f0c2c9e6dfa06391a4fcf95717cee01ec10ac22e992fabf1ef83 1.87kB / 1.87kB 3.3s
#5 sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451 31.46MB / 44.14MB 3.8s
#5 sha256:d7efd72e543e94ca12cb58a461dfba7a72470de15c8b141d28e33cb7d9c71d76 7.34MB / 37.11MB 3.8s
#5 sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451 35.65MB / 44.14MB 4.2s
#5 sha256:d7efd72e543e94ca12cb58a461dfba7a72470de15c8b141d28e33cb7d9c71d76 9.44MB / 37.11MB 4.4s
#5 sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451 38.80MB / 44.14MB 4.6s
#5 sha256:7da31aeedd31f0c2c9e6dfa06391a4fcf95717cee01ec10ac22e992fabf1ef83 1.87kB / 1.87kB 4.4s done
#5 sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451 41.94MB / 44.14MB 4.9s
#5 sha256:d7efd72e543e94ca12cb58a461dfba7a72470de15c8b141d28e33cb7d9c71d76 11.53MB / 37.11MB 4.9s
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 0B / 389.70MB 5.1s
#5 sha256:d7efd72e543e94ca12cb58a461dfba7a72470de15c8b141d28e33cb7d9c71d76 13.63MB / 37.11MB 5.4s
#5 sha256:d7efd72e543e94ca12cb58a461dfba7a72470de15c8b141d28e33cb7d9c71d76 15.73MB / 37.11MB 5.7s
#5 sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451 44.14MB / 44.14MB 5.7s done
#5 sha256:d7efd72e543e94ca12cb58a461dfba7a72470de15c8b141d28e33cb7d9c71d76 17.83MB / 37.11MB 6.0s
#5 extracting sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451
#5 sha256:d7efd72e543e94ca12cb58a461dfba7a72470de15c8b141d28e33cb7d9c71d76 19.92MB / 37.11MB 6.3s
#5 sha256:7fff943d3b6e04f04003c1c92d9c4dbcf9ef8a3d6cc82d83669f19247bc9bbbe 0B / 148B 6.3s
#5 sha256:d7efd72e543e94ca12cb58a461dfba7a72470de15c8b141d28e33cb7d9c71d76 22.02MB / 37.11MB 6.5s
#5 sha256:7fff943d3b6e04f04003c1c92d9c4dbcf9ef8a3d6cc82d83669f19247bc9bbbe 148B / 148B 6.7s
#5 sha256:d7efd72e543e94ca12cb58a461dfba7a72470de15c8b141d28e33cb7d9c71d76 24.12MB / 37.11MB 6.8s
#5 sha256:7fff943d3b6e04f04003c1c92d9c4dbcf9ef8a3d6cc82d83669f19247bc9bbbe 148B / 148B 6.8s done
#5 sha256:d7efd72e543e94ca12cb58a461dfba7a72470de15c8b141d28e33cb7d9c71d76 26.21MB / 37.11MB 7.1s
#5 sha256:d7efd72e543e94ca12cb58a461dfba7a72470de15c8b141d28e33cb7d9c71d76 28.31MB / 37.11MB 7.4s
#5 sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 0B / 130.51MB 7.4s
#5 sha256:d7efd72e543e94ca12cb58a461dfba7a72470de15c8b141d28e33cb7d9c71d76 31.46MB / 37.11MB 7.8s
#5 sha256:d7efd72e543e94ca12cb58a461dfba7a72470de15c8b141d28e33cb7d9c71d76 33.55MB / 37.11MB 8.2s
#5 sha256:d7efd72e543e94ca12cb58a461dfba7a72470de15c8b141d28e33cb7d9c71d76 35.65MB / 37.11MB 8.4s
#5 extracting sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451 2.4s done
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 19.92MB / 389.70MB 8.9s
#5 extracting sha256:d1072db285cc5eb2f3415891381631501b3ad9b1a10da20ca2e932d7d8799988
#5 sha256:d7efd72e543e94ca12cb58a461dfba7a72470de15c8b141d28e33cb7d9c71d76 37.11MB / 37.11MB 9.0s done
#5 extracting sha256:d1072db285cc5eb2f3415891381631501b3ad9b1a10da20ca2e932d7d8799988 done
#5 sha256:3a00154900ce3251e8bbb5309e63bd441efa6b34d0f8f5d9e1259ab07f5ea6e2 0B / 2.10MB 9.2s
#5 extracting sha256:858453671e6769806e0374869acce1d9e5d97f5020f86139e0862c7ada6da621 done
#5 extracting sha256:3d07b1124f982f6c5da7f1b85a0a12f9574d6ce7e8a84160cda939e5b3a1faad done
#5 extracting sha256:d7efd72e543e94ca12cb58a461dfba7a72470de15c8b141d28e33cb7d9c71d76 0.1s
#5 sha256:3a00154900ce3251e8bbb5309e63bd441efa6b34d0f8f5d9e1259ab07f5ea6e2 1.05MB / 2.10MB 9.9s
#5 sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 7.34MB / 130.51MB 10.0s
#5 sha256:3a00154900ce3251e8bbb5309e63bd441efa6b34d0f8f5d9e1259ab07f5ea6e2 2.10MB / 2.10MB 10.0s
#5 sha256:3a00154900ce3251e8bbb5309e63bd441efa6b34d0f8f5d9e1259ab07f5ea6e2 2.10MB / 2.10MB 10.0s done
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 0B / 120.06MB 10.2s
#5 extracting sha256:d7efd72e543e94ca12cb58a461dfba7a72470de15c8b141d28e33cb7d9c71d76 1.5s done
#5 extracting sha256:ba7c7a0418bca704b03fcf6da8b56a26062525dc014717a31b756ebe0601cab1 done
#5 extracting sha256:7da31aeedd31f0c2c9e6dfa06391a4fcf95717cee01ec10ac22e992fabf1ef83
#5 sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 14.68MB / 130.51MB 11.3s
#5 extracting sha256:7da31aeedd31f0c2c9e6dfa06391a4fcf95717cee01ec10ac22e992fabf1ef83 done
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 6.29MB / 120.06MB 12.3s
#5 sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 22.02MB / 130.51MB 12.8s
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 39.85MB / 389.70MB 13.4s
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 12.58MB / 120.06MB 14.0s
#5 sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 29.36MB / 130.51MB 14.3s
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 18.87MB / 120.06MB 15.4s
#5 sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 36.70MB / 130.51MB 16.0s
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 25.17MB / 120.06MB 17.1s
#5 sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 44.04MB / 130.51MB 17.8s
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 59.77MB / 389.70MB 18.1s
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 31.46MB / 120.06MB 18.3s
#5 sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 51.38MB / 130.51MB 19.6s
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 37.75MB / 120.06MB 19.8s
#5 sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 58.72MB / 130.51MB 21.3s
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 44.04MB / 120.06MB 21.3s
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 79.69MB / 389.70MB 22.7s
#5 sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 66.06MB / 130.51MB 23.1s
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 50.33MB / 120.06MB 23.1s
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 56.62MB / 120.06MB 24.8s
#5 sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 73.40MB / 130.51MB 24.9s
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 62.91MB / 120.06MB 26.2s
#5 sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 80.74MB / 130.51MB 26.7s
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 99.61MB / 389.70MB 27.1s
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 69.21MB / 120.06MB 27.4s
#5 sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 88.08MB / 130.51MB 28.6s
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 75.50MB / 120.06MB 28.8s
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 81.79MB / 120.06MB 30.4s
#5 sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 95.42MB / 130.51MB 30.6s
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 119.54MB / 389.70MB 31.4s
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 88.08MB / 120.06MB 31.8s
#5 sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 102.76MB / 130.51MB 33.0s
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 94.37MB / 120.06MB 33.4s
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 100.66MB / 120.06MB 35.0s
#5 sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 110.10MB / 130.51MB 35.3s
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 139.46MB / 389.70MB 35.4s
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 106.95MB / 120.06MB 36.3s
#5 sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 117.44MB / 130.51MB 37.3s
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 113.25MB / 120.06MB 37.6s
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 119.54MB / 120.06MB 38.9s
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 159.38MB / 389.70MB 39.4s
#5 sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 124.78MB / 130.51MB 39.6s
#5 sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 120.06MB / 120.06MB 39.6s done
#5 sha256:981dccf46070b26646e5ed7e3736ab4127363531a2791f2a20c15bff8928b028 0B / 22.05MB 39.7s
#5 sha256:981dccf46070b26646e5ed7e3736ab4127363531a2791f2a20c15bff8928b028 2.10MB / 22.05MB 40.8s
#5 sha256:981dccf46070b26646e5ed7e3736ab4127363531a2791f2a20c15bff8928b028 4.19MB / 22.05MB 41.5s
#5 sha256:981dccf46070b26646e5ed7e3736ab4127363531a2791f2a20c15bff8928b028 6.29MB / 22.05MB 42.0s
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 179.31MB / 389.70MB 42.1s
#5 sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 130.51MB / 130.51MB 42.3s done
#5 sha256:981dccf46070b26646e5ed7e3736ab4127363531a2791f2a20c15bff8928b028 8.39MB / 22.05MB 42.4s
#5 sha256:5253587e845772990a61dbd6a826f232c5aed3ce10650341da36f3f3d6d27a1a 0B / 11.50MB 42.4s
#5 sha256:981dccf46070b26646e5ed7e3736ab4127363531a2791f2a20c15bff8928b028 10.49MB / 22.05MB 42.8s
#5 sha256:981dccf46070b26646e5ed7e3736ab4127363531a2791f2a20c15bff8928b028 12.58MB / 22.05MB 43.3s
#5 sha256:981dccf46070b26646e5ed7e3736ab4127363531a2791f2a20c15bff8928b028 14.68MB / 22.05MB 43.7s
#5 sha256:5253587e845772990a61dbd6a826f232c5aed3ce10650341da36f3f3d6d27a1a 1.05MB / 11.50MB 43.9s
#5 sha256:981dccf46070b26646e5ed7e3736ab4127363531a2791f2a20c15bff8928b028 16.78MB / 22.05MB 44.3s
#5 sha256:5253587e845772990a61dbd6a826f232c5aed3ce10650341da36f3f3d6d27a1a 2.10MB / 11.50MB 44.3s
#5 sha256:981dccf46070b26646e5ed7e3736ab4127363531a2791f2a20c15bff8928b028 18.87MB / 22.05MB 44.6s
#5 sha256:5253587e845772990a61dbd6a826f232c5aed3ce10650341da36f3f3d6d27a1a 3.15MB / 11.50MB 44.7s
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 199.23MB / 389.70MB 44.9s
#5 sha256:981dccf46070b26646e5ed7e3736ab4127363531a2791f2a20c15bff8928b028 20.97MB / 22.05MB 45.1s
#5 sha256:5253587e845772990a61dbd6a826f232c5aed3ce10650341da36f3f3d6d27a1a 4.19MB / 11.50MB 45.1s
#5 sha256:981dccf46070b26646e5ed7e3736ab4127363531a2791f2a20c15bff8928b028 22.05MB / 22.05MB 45.2s done
#5 sha256:bd409d39c49c78f4c5fe0347cde5e04a43db57e86ecffa909d8f3971a51f5c74 0B / 1.86MB 45.3s
#5 sha256:5253587e845772990a61dbd6a826f232c5aed3ce10650341da36f3f3d6d27a1a 5.24MB / 11.50MB 45.6s
#5 sha256:5253587e845772990a61dbd6a826f232c5aed3ce10650341da36f3f3d6d27a1a 6.29MB / 11.50MB 45.9s
#5 sha256:bd409d39c49c78f4c5fe0347cde5e04a43db57e86ecffa909d8f3971a51f5c74 1.05MB / 1.86MB 45.9s
#5 sha256:bd409d39c49c78f4c5fe0347cde5e04a43db57e86ecffa909d8f3971a51f5c74 1.86MB / 1.86MB 46.1s
#5 sha256:5253587e845772990a61dbd6a826f232c5aed3ce10650341da36f3f3d6d27a1a 7.34MB / 11.50MB 46.3s
#5 sha256:bd409d39c49c78f4c5fe0347cde5e04a43db57e86ecffa909d8f3971a51f5c74 1.86MB / 1.86MB 46.2s done
#5 sha256:48dc0b398f21d4a83524c7fbe61c19337bb648eefec4fe4506e38180441b8d04 0B / 65.08MB 46.3s
#5 sha256:5253587e845772990a61dbd6a826f232c5aed3ce10650341da36f3f3d6d27a1a 8.39MB / 11.50MB 46.6s
#5 sha256:5253587e845772990a61dbd6a826f232c5aed3ce10650341da36f3f3d6d27a1a 9.44MB / 11.50MB 46.9s
#5 sha256:5253587e845772990a61dbd6a826f232c5aed3ce10650341da36f3f3d6d27a1a 10.49MB / 11.50MB 47.2s
#5 sha256:5253587e845772990a61dbd6a826f232c5aed3ce10650341da36f3f3d6d27a1a 11.50MB / 11.50MB 47.6s
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 219.15MB / 389.70MB 47.9s
#5 sha256:5253587e845772990a61dbd6a826f232c5aed3ce10650341da36f3f3d6d27a1a 11.50MB / 11.50MB 47.8s done
#5 sha256:48dc0b398f21d4a83524c7fbe61c19337bb648eefec4fe4506e38180441b8d04 4.19MB / 65.08MB 47.9s
#5 sha256:ce9c5a303c261c784da2dd923902819367c19e56f0a082fd634a3d1277ac042e 0B / 65.15MB 47.9s
#5 sha256:48dc0b398f21d4a83524c7fbe61c19337bb648eefec4fe4506e38180441b8d04 8.39MB / 65.08MB 49.0s
#5 sha256:48dc0b398f21d4a83524c7fbe61c19337bb648eefec4fe4506e38180441b8d04 12.58MB / 65.08MB 50.1s
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 240.12MB / 389.70MB 50.8s
#5 sha256:ce9c5a303c261c784da2dd923902819367c19e56f0a082fd634a3d1277ac042e 4.19MB / 65.15MB 51.0s
#5 sha256:48dc0b398f21d4a83524c7fbe61c19337bb648eefec4fe4506e38180441b8d04 16.78MB / 65.08MB 51.4s
#5 sha256:48dc0b398f21d4a83524c7fbe61c19337bb648eefec4fe4506e38180441b8d04 20.97MB / 65.08MB 52.3s
#5 sha256:ce9c5a303c261c784da2dd923902819367c19e56f0a082fd634a3d1277ac042e 8.39MB / 65.15MB 52.9s
#5 sha256:48dc0b398f21d4a83524c7fbe61c19337bb648eefec4fe4506e38180441b8d04 25.17MB / 65.08MB 53.2s
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 260.05MB / 389.70MB 53.9s
#5 sha256:48dc0b398f21d4a83524c7fbe61c19337bb648eefec4fe4506e38180441b8d04 29.36MB / 65.08MB 54.2s
#5 sha256:ce9c5a303c261c784da2dd923902819367c19e56f0a082fd634a3d1277ac042e 12.58MB / 65.15MB 54.9s
#5 sha256:48dc0b398f21d4a83524c7fbe61c19337bb648eefec4fe4506e38180441b8d04 33.55MB / 65.08MB 55.3s
#5 sha256:48dc0b398f21d4a83524c7fbe61c19337bb648eefec4fe4506e38180441b8d04 37.75MB / 65.08MB 56.5s
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 279.97MB / 389.70MB 56.9s
#5 sha256:ce9c5a303c261c784da2dd923902819367c19e56f0a082fd634a3d1277ac042e 16.78MB / 65.15MB 57.1s
#5 sha256:48dc0b398f21d4a83524c7fbe61c19337bb648eefec4fe4506e38180441b8d04 41.94MB / 65.08MB 57.4s
#5 sha256:48dc0b398f21d4a83524c7fbe61c19337bb648eefec4fe4506e38180441b8d04 46.14MB / 65.08MB 58.5s
#5 sha256:ce9c5a303c261c784da2dd923902819367c19e56f0a082fd634a3d1277ac042e 20.97MB / 65.15MB 58.8s
#5 sha256:48dc0b398f21d4a83524c7fbe61c19337bb648eefec4fe4506e38180441b8d04 50.33MB / 65.08MB 59.6s
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 299.89MB / 389.70MB 59.9s
#5 sha256:ce9c5a303c261c784da2dd923902819367c19e56f0a082fd634a3d1277ac042e 25.17MB / 65.15MB 60.5s
#5 sha256:48dc0b398f21d4a83524c7fbe61c19337bb648eefec4fe4506e38180441b8d04 54.53MB / 65.08MB 60.8s
#5 sha256:48dc0b398f21d4a83524c7fbe61c19337bb648eefec4fe4506e38180441b8d04 58.72MB / 65.08MB 61.8s
#5 sha256:ce9c5a303c261c784da2dd923902819367c19e56f0a082fd634a3d1277ac042e 29.36MB / 65.15MB 62.1s
#5 sha256:48dc0b398f21d4a83524c7fbe61c19337bb648eefec4fe4506e38180441b8d04 62.91MB / 65.08MB 62.7s
#5 sha256:ce9c5a303c261c784da2dd923902819367c19e56f0a082fd634a3d1277ac042e 33.55MB / 65.15MB 63.4s
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 319.82MB / 389.70MB 63.7s
#5 sha256:48dc0b398f21d4a83524c7fbe61c19337bb648eefec4fe4506e38180441b8d04 65.08MB / 65.08MB 64.2s done
#5 sha256:ce9c5a303c261c784da2dd923902819367c19e56f0a082fd634a3d1277ac042e 37.75MB / 65.15MB 64.3s
#5 sha256:3b031d6b521ca1fb3c25b73f132435f63997756e497b6c9dacb0931bf21ea450 0B / 3.51kB 64.3s
#5 sha256:3b031d6b521ca1fb3c25b73f132435f63997756e497b6c9dacb0931bf21ea450 3.51kB / 3.51kB 64.6s done
#5 sha256:ce9c5a303c261c784da2dd923902819367c19e56f0a082fd634a3d1277ac042e 41.94MB / 65.15MB 64.9s
#5 sha256:ce9c5a303c261c784da2dd923902819367c19e56f0a082fd634a3d1277ac042e 46.14MB / 65.15MB 65.8s
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 339.74MB / 389.70MB 66.2s
#5 sha256:ce9c5a303c261c784da2dd923902819367c19e56f0a082fd634a3d1277ac042e 50.33MB / 65.15MB 66.7s
#5 sha256:ce9c5a303c261c784da2dd923902819367c19e56f0a082fd634a3d1277ac042e 54.53MB / 65.15MB 67.5s
#5 sha256:ce9c5a303c261c784da2dd923902819367c19e56f0a082fd634a3d1277ac042e 58.72MB / 65.15MB 68.4s
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 359.66MB / 389.70MB 68.7s
#5 sha256:ce9c5a303c261c784da2dd923902819367c19e56f0a082fd634a3d1277ac042e 62.91MB / 65.15MB 69.1s
#5 sha256:ce9c5a303c261c784da2dd923902819367c19e56f0a082fd634a3d1277ac042e 65.15MB / 65.15MB 69.9s done
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 380.63MB / 389.70MB 70.8s
#5 sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 389.70MB / 389.70MB 72.3s done
#5 extracting sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6
#5 extracting sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 5.0s
#5 extracting sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 10.0s
#5 extracting sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 15.1s
#5 extracting sha256:b06e8243d1e9b59b8fdf574e865906b257d4bf8bc2bf942ee955f71b1b2c81a6 16.8s done
#5 extracting sha256:7fff943d3b6e04f04003c1c92d9c4dbcf9ef8a3d6cc82d83669f19247bc9bbbe
#5 extracting sha256:7fff943d3b6e04f04003c1c92d9c4dbcf9ef8a3d6cc82d83669f19247bc9bbbe done
#5 extracting sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 0.1s
#5 extracting sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 5.3s
#5 extracting sha256:72e666449ac4fe4d6253ae6937386ff1c59a47664ffb00d99db29eff190b465b 5.8s done
#5 extracting sha256:3a00154900ce3251e8bbb5309e63bd441efa6b34d0f8f5d9e1259ab07f5ea6e2
#5 extracting sha256:3a00154900ce3251e8bbb5309e63bd441efa6b34d0f8f5d9e1259ab07f5ea6e2 0.1s done
#5 extracting sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 0.1s
#5 extracting sha256:ff3f74036fbbb7df70beda4cd50e0d43266f716b3b0b63548eaf74de870523c7 5.3s done
#5 extracting sha256:981dccf46070b26646e5ed7e3736ab4127363531a2791f2a20c15bff8928b028 0.1s
#5 extracting sha256:981dccf46070b26646e5ed7e3736ab4127363531a2791f2a20c15bff8928b028 0.6s done
#5 extracting sha256:5253587e845772990a61dbd6a826f232c5aed3ce10650341da36f3f3d6d27a1a
#5 extracting sha256:5253587e845772990a61dbd6a826f232c5aed3ce10650341da36f3f3d6d27a1a 0.3s done
#5 extracting sha256:bd409d39c49c78f4c5fe0347cde5e04a43db57e86ecffa909d8f3971a51f5c74 0.1s done
#5 extracting sha256:48dc0b398f21d4a83524c7fbe61c19337bb648eefec4fe4506e38180441b8d04
#5 extracting sha256:48dc0b398f21d4a83524c7fbe61c19337bb648eefec4fe4506e38180441b8d04 0.9s done
#5 extracting sha256:ce9c5a303c261c784da2dd923902819367c19e56f0a082fd634a3d1277ac042e 0.1s
#5 extracting sha256:ce9c5a303c261c784da2dd923902819367c19e56f0a082fd634a3d1277ac042e 3.8s done
#5 extracting sha256:3b031d6b521ca1fb3c25b73f132435f63997756e497b6c9dacb0931bf21ea450
#5 extracting sha256:3b031d6b521ca1fb3c25b73f132435f63997756e497b6c9dacb0931bf21ea450 done
#5 DONE 112.5s

#6 [2/5] RUN apt-get update &&     apt-get install -y wget &&     wget "https://storage.googleapis.com/bazel-apt/pool/jdk1.8/b/bazel/bazel_1.1.0_amd64.deb" -nv -o- -O bazel.deb &&     echo "138b47ffd54924e3c0264c65d31d3927803fb9025db4d5b18107df79ee3bda95  bazel.deb" > bazel.sha256 &&     sha256sum --check bazel.sha256 &&     apt-get install -y ./bazel.deb &&     rm bazel.deb bazel.sha256 &&     apt-get clean
#6 sha256:c16b12b0f93998d28c9a66811bd5916315bd043396b6c2621ed208a6aa602d37
#6 0.620 Hit:1 http://archive.ubuntu.com/ubuntu xenial InRelease
#6 0.620 Get:2 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [99.8 kB]
#6 0.696 Get:3 http://archive.ubuntu.com/ubuntu xenial-backports InRelease [97.4 kB]
#6 0.807 Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [99.8 kB]
#6 0.932 Get:5 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 Packages [2560 kB]
#6 1.178 Get:6 http://archive.ubuntu.com/ubuntu xenial-updates/restricted amd64 Packages [16.4 kB]
#6 1.179 Get:7 http://archive.ubuntu.com/ubuntu xenial-updates/universe amd64 Packages [1544 kB]
#6 1.295 Get:8 http://archive.ubuntu.com/ubuntu xenial-updates/multiverse amd64 Packages [26.2 kB]
#6 1.296 Get:9 http://archive.ubuntu.com/ubuntu xenial-backports/main amd64 Packages [10.9 kB]
#6 1.297 Get:10 http://archive.ubuntu.com/ubuntu xenial-backports/universe amd64 Packages [12.7 kB]
#6 1.486 Get:11 http://security.ubuntu.com/ubuntu xenial-security/main amd64 Packages [2051 kB]
#6 2.366 Get:12 http://security.ubuntu.com/ubuntu xenial-security/restricted amd64 Packages [15.9 kB]
#6 2.368 Get:13 http://security.ubuntu.com/ubuntu xenial-security/universe amd64 Packages [984 kB]
#6 2.555 Get:14 http://security.ubuntu.com/ubuntu xenial-security/multiverse amd64 Packages [8820 B]
#6 2.891 Fetched 7526 kB in 2s (3546 kB/s)
#6 2.891 Reading package lists...
#6 4.124 Reading package lists...
#6 5.359 Building dependency tree...
#6 5.521 Reading state information...
#6 5.648 The following NEW packages will be installed:
#6 5.648   wget
#6 5.736 0 upgraded, 1 newly installed, 0 to remove and 87 not upgraded.
#6 5.736 Need to get 299 kB of archives.
#6 5.736 After this operation, 905 kB of additional disk space will be used.
#6 5.736 Get:1 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 wget amd64 1.17.1-1ubuntu1.5 [299 kB]
#6 6.025 debconf: delaying package configuration, since apt-utils is not installed
#6 6.111 Fetched 299 kB in 0s (1902 kB/s)
#6 6.191 Selecting previously unselected package wget.
#6 6.191 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 16693 files and directories currently installed.)
#6 6.209 Preparing to unpack .../wget_1.17.1-1ubuntu1.5_amd64.deb ...
#6 6.236 Unpacking wget (1.17.1-1ubuntu1.5) ...
#6 6.438 Setting up wget (1.17.1-1ubuntu1.5) ...
#6 10.70 2022-02-17 20:03:39 URL:https://storage.googleapis.com/bazel-apt/pool/jdk1.8/b/bazel/bazel_1.1.0_amd64.deb [43896480/43896480] -> "bazel.deb" [1]
#6 11.01 bazel.deb: OK
#6 11.02 Reading package lists...
#6 12.26 Building dependency tree...
#6 12.42 Reading state information...
#6 12.55 The following additional packages will be installed:
#6 12.55   libpython-stdlib libpython2.7-minimal libpython2.7-stdlib python
#6 12.55   python-minimal python2.7 python2.7-minimal
#6 12.55 Suggested packages:
#6 12.55   google-jdk | java8-sdk-headless | java8-jdk | java8-sdk
#6 12.55   | oracle-java8-installer bash-completion python-doc python-tk python2.7-doc
#6 12.55   binfmt-support
#6 12.56 The following NEW packages will be installed:
#6 12.56   bazel libpython-stdlib libpython2.7-minimal libpython2.7-stdlib python
#6 12.56   python-minimal python2.7 python2.7-minimal
#6 12.70 0 upgraded, 8 newly installed, 0 to remove and 87 not upgraded.
#6 12.70 Need to get 3878 kB/47.8 MB of archives.
#6 12.70 After this operation, 16.6 MB of additional disk space will be used.
#6 12.70 Get:1 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libpython2.7-minimal amd64 2.7.12-1ubuntu0~16.04.18 [338 kB]
#6 12.84 Get:2 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 python2.7-minimal amd64 2.7.12-1ubuntu0~16.04.18 [1260 kB]
#6 12.94 Get:3 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 python-minimal amd64 2.7.12-1~16.04 [28.1 kB]
#6 12.94 Get:4 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libpython2.7-stdlib amd64 2.7.12-1ubuntu0~16.04.18 [1883 kB]
#6 13.08 Get:5 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 python2.7 amd64 2.7.12-1ubuntu0~16.04.18 [224 kB]
#6 13.10 Get:6 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 libpython-stdlib amd64 2.7.12-1~16.04 [7768 B]
#6 13.10 Get:7 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 python amd64 2.7.12-1~16.04 [137 kB]
#6 13.49 Get:8 /src/bazel.deb bazel amd64 1.1.0 [43.9 MB]
#6 13.59 debconf: delaying package configuration, since apt-utils is not installed
#6 13.62 Fetched 3878 kB in 0s (4602 kB/s)
#6 13.84 Selecting previously unselected package libpython2.7-minimal:amd64.
#6 13.84 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 16704 files and directories currently installed.)
#6 13.86 Preparing to unpack .../libpython2.7-minimal_2.7.12-1ubuntu0~16.04.18_amd64.deb ...
#6 13.92 Unpacking libpython2.7-minimal:amd64 (2.7.12-1ubuntu0~16.04.18) ...
#6 14.15 Selecting previously unselected package python2.7-minimal.
#6 14.16 Preparing to unpack .../python2.7-minimal_2.7.12-1ubuntu0~16.04.18_amd64.deb ...
#6 14.19 Unpacking python2.7-minimal (2.7.12-1ubuntu0~16.04.18) ...
#6 14.50 Selecting previously unselected package python-minimal.
#6 14.51 Preparing to unpack .../python-minimal_2.7.12-1~16.04_amd64.deb ...
#6 14.53 Unpacking python-minimal (2.7.12-1~16.04) ...
#6 14.69 Selecting previously unselected package libpython2.7-stdlib:amd64.
#6 14.70 Preparing to unpack .../libpython2.7-stdlib_2.7.12-1ubuntu0~16.04.18_amd64.deb ...
#6 14.71 Unpacking libpython2.7-stdlib:amd64 (2.7.12-1ubuntu0~16.04.18) ...
#6 15.11 Selecting previously unselected package python2.7.
#6 15.12 Preparing to unpack .../python2.7_2.7.12-1ubuntu0~16.04.18_amd64.deb ...
#6 15.14 Unpacking python2.7 (2.7.12-1ubuntu0~16.04.18) ...
#6 15.33 Selecting previously unselected package libpython-stdlib:amd64.
#6 15.34 Preparing to unpack .../libpython-stdlib_2.7.12-1~16.04_amd64.deb ...
#6 15.37 Unpacking libpython-stdlib:amd64 (2.7.12-1~16.04) ...
#6 15.61 Processing triggers for mime-support (3.59ubuntu1) ...
#6 16.35 Setting up libpython2.7-minimal:amd64 (2.7.12-1ubuntu0~16.04.18) ...
#6 16.51 Setting up python2.7-minimal (2.7.12-1ubuntu0~16.04.18) ...
#6 17.33 Setting up python-minimal (2.7.12-1~16.04) ...
#6 17.96 Selecting previously unselected package python.
#6 17.96 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 17449 files and directories currently installed.)
#6 17.97 Preparing to unpack .../python_2.7.12-1~16.04_amd64.deb ...
#6 18.02 Unpacking python (2.7.12-1~16.04) ...
#6 18.16 Selecting previously unselected package bazel.
#6 18.16 Preparing to unpack /src/bazel.deb ...
#6 18.17 Unpacking bazel (1.1.0) ...
#6 18.42 Setting up libpython2.7-stdlib:amd64 (2.7.12-1ubuntu0~16.04.18) ...
#6 18.44 Setting up python2.7 (2.7.12-1ubuntu0~16.04.18) ...
#6 19.41 Setting up libpython-stdlib:amd64 (2.7.12-1~16.04) ...
#6 19.50 Setting up python (2.7.12-1~16.04) ...
#6 19.58 Setting up bazel (1.1.0) ...
#6 DONE 23.4s

#7 [3/5] RUN git clone --depth 1 https://github.com/project-oak/oak oak
#7 sha256:21197fc6b19d8079dee5c2f233963aa1bc606e064d14044014f40ebca3446e94
#7 0.433 Cloning into 'oak'...
#7 DONE 4.9s

#8 [4/5] WORKDIR oak
#8 sha256:d5cf8f6ec9461d2bb17ddf7de7b492efdb99f63580be9824c10627bd9f849685
#8 DONE 0.4s

#10 [5/5] COPY build.sh /src/
#10 sha256:27c5ab88e9d5d5df398d1d9473d2294087dea00d74f8d21a06c2b1a012deed95
#10 DONE 0.3s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:2d2c7c1f0b47366fd70b00bfd78bf24bb8da743c9106e064fd4845bcd3dd2a6a 0.1s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/oak_oak
#11 naming to gcr.io/fuzzbench/builders/benchmark/oak_oak 0.1s done
#11 DONE 0.8s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/oak_oak:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:cd1c4fb9e891cb51aa4bfb570d434ad70e6aecd2797638521cc09c9159c38454
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:8223ec6365cc305ea1ae3714e1b0732da3a893257af15ef924c4279849452169
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/oak_oak:latest
#3 sha256:8c7b0f124954020a4c2bcd2bd0fdd90627c038b709ebb961a3fd3dc1e8c0b000
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/oak_oak
#5 sha256:883a437dd7e408be3925caa2b4c96c331b5f3c5d0524ce1215b25f155f6cfaa0
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/oak_oak-intermediate
#4 sha256:4e880392b70060b9d6002bdaef7fdff56186b4d4ce00d3647dd3db82fca539c0
#4 ERROR: gcr.io/fuzzbench/builders/afl/oak_oak-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/oak_oak
#5 sha256:883a437dd7e408be3925caa2b4c96c331b5f3c5d0524ce1215b25f155f6cfaa0
#5 DONE 0.8s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:52ae161ad8f2f71d072479f2c746b47984b2bdbae6d877f0616cb427a43102d9
#6 0.770 Cloning into '/afl'...
#6 2.083 Note: checking out '61037103ae3722c8060ff7082994836a794f978e'.
#6 2.083 
#6 2.083 You are in 'detached HEAD' state. You can look around, make experimental
#6 2.083 changes and commit them, and you can discard any commits you make in this
#6 2.083 state without impacting any branches by performing another checkout.
#6 2.083 
#6 2.083 If you want to create a new branch to retain commits you create, you may
#6 2.083 do so (now or later) by using -b with the checkout command again. Example:
#6 2.083 
#6 2.083   git checkout -b <new-branch-name>
#6 2.083 
#6 2.083 HEAD is now at 6103710... Fix a typo filename comparison in the fuzzer (#139)
#6 2.102 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 2.102 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 2.338 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 2.343 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 4.303 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.605 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.996 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 5.140 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.501 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.786 ln -sf afl-as as
#6 5.788 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.790 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.791 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 10.8s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:c66f9663006934f2b3994b6e798264ac69f08cb2630800806057509ba4133272
#7 2.927 Hit:1 http://archive.ubuntu.com/ubuntu xenial InRelease
#7 2.927 Hit:2 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
#7 2.927 Hit:3 http://archive.ubuntu.com/ubuntu xenial-backports InRelease
#7 2.927 Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
#7 3.949 Reading package lists...
#7 5.188 Reading package lists...
#7 6.412 Building dependency tree...
#7 6.574 Reading state information...
#7 6.708 wget is already the newest version (1.17.1-1ubuntu1.5).
#7 6.708 0 upgraded, 0 newly installed, 0 to remove and 87 not upgraded.
#7 6.712 --2022-02-17 20:04:22--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 6.716 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.110.133, 185.199.111.133, 185.199.108.133, ...
#7 6.727 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.110.133|:443... connected.
#7 6.763 HTTP request sent, awaiting response... 200 OK
#7 6.942 Length: 9177 (9.0K) [text/plain]
#7 6.942 Saving to: '/afl/afl_driver.cpp'
#7 6.942 
#7 6.942      0K ........                                              100% 7.69M=0.001s
#7 6.943 
#7 6.943 2022-02-17 20:04:22 (7.69 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 6.943 
#7 8.639 ar: creating /libAFL.a
#7 DONE 11.9s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:19ef91731b476f4d39e5e86c2230e11eb12ce72a787b15507720719b67ac4431
#8 writing image sha256:19ef91731b476f4d39e5e86c2230e11eb12ce72a787b15507720719b67ac4431 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/oak_oak-intermediate 0.0s done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/oak_oak-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:d7a6040885f8b635a2a31a5db1e3704db975c88e0dcaf3911ef91d801cf798f9
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:aa1d23a7ff5a432b754bf46f54055feb8aadbe86875801e4c7e3d79a8a28d031
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:44c2de4b349057cf6ff411daf7a4991b596755970d32ef908f35ed50fb580c3d
#8 transferring context: 559B 0.2s done
#8 DONE 0.3s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:93ddb378504a620f13291503868ef8f18a3d92c8c06f6e3630194d867c5eafcf
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:7cd01400dcc25a72da86355b715754b4489b0c06f4cc15b4c38ed933ee28abf3
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:5481f9f8f622c19a9d901b5b72c834f08c835f6ab5dafcac699c6a553f4666ad
#9 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:e071e22075d96b1688143ecd4c475406ff6f242e386414c219760900259dcd8d
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:278d1048be89ac10e6821499149688e394f017ddb53c5305e97cdbe9ed6d8c79 0.1s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.2s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:0f2ed4d52a0b63ea2709aa231f1b1d1d76cbe382ea3ecda451be4e11f3e500d4
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:a3ba3c4d3ce04b0b48f49fc83b8b6317e3c78a98c6fb495cb06106be79fa0b84
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/oak_oak-intermediate:latest
#3 sha256:1d335971869b2edfd8b6bdd29a3d7249263edfc9f45956865e8fd9b89d949275
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:bd10182b52b46663e6a012a5d21fdf05374a9884b7e5f3e9fc304a70b5a14c98
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/oak_oak-intermediate
#6 sha256:4d122bc6994aeb7af6e852b5af4a708e7382e492595ba746144fe29017578a7d
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/oak_oak
#5 sha256:b8c3ef64a955fdf8e92d1880302bde7ef5db5301be5dd5bdd439c8a2eb9f4991
#5 ERROR: gcr.io/fuzzbench/builders/afl/oak_oak:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:bd10182b52b46663e6a012a5d21fdf05374a9884b7e5f3e9fc304a70b5a14c98
#12 transferring context: 669.84kB 0.1s done
#12 DONE 0.3s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/oak_oak-intermediate
#6 sha256:4d122bc6994aeb7af6e852b5af4a708e7382e492595ba746144fe29017578a7d
#6 DONE 1.1s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:c1a11bde136b9c52930b60be34d0edd2e1f24ca90c69c6a892fe870e6e67e2dd
#8 DONE 1.1s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:08660eeb926ca51d3666f1dc3c62693c4245dcf7a68b7a44b382e860b018c1b8
#9 DONE 23.0s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:32bf6163ad80463cf4be1e9101b4d49695e460cdfbcb994887f03c5c788e5bd4
#10 DONE 0.3s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:a84df7af703270295a262a975b16f9b44ab4893262423ffacebd4258d73e7bc7
#11 DONE 41.8s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:21dc1ca2d03c58b88c591b0b1d49e477cb04573414f408fd11da11264b0dd656
#13 DONE 1.3s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:ee2826ab3fdd8da799d45dcee95c3d8bbba40d9ce0fcb8eb6932c0df920d4b42
#14 DONE 0.9s

#15 [stage-1  8/13] COPY benchmarks/oak_oak/benchmark.yaml /
#15 sha256:4291de1d9e9a39379cb7ec05ef9bdfeccec60d05d6b274a6e919f7c84ee7b998
#15 DONE 0.4s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:743110d333d3425dbf1ff59a32ea839936d928c402aab70da160d5f2881e550d
#16 DONE 0.7s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:48e8050e5944b8f991a4e32a3385257b35b96a970cc12ddff20a4c8d09e33cd6
#17 DONE 0.7s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:3b07a6028ab6d826e0ec0ef4748c63a5c19a7826a2dc22581f168a891ac2cc9f
#18 0.902 Checking out commit 1d5a2cd8
#18 6.292 error: pathspec '1d5a2cd8' did not match any file(s) known to git.
#18 6.303 error: pathspec '1d5a2cd8' did not match any file(s) known to git.
#18 6.312 error: pathspec '1d5a2cd8' did not match any file(s) known to git.
#18 6.339 error: pathspec '1d5a2cd8' did not match any file(s) known to git.
#18 6.344 error: pathspec '1d5a2cd8' did not match any file(s) known to git.
#18 6.349 error: pathspec '1d5a2cd8' did not match any file(s) known to git.
#18 6.360 error: pathspec '1d5a2cd8' did not match any file(s) known to git.
#18 6.366 error: pathspec '1d5a2cd8' did not match any file(s) known to git.
#18 6.418 error: pathspec '1d5a2cd8' did not match any file(s) known to git.
#18 6.425 Checkout unsuccessful.
#18 DONE 6.6s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:12c7fdb015b21ba5bae5136aedd31acb983e4d2438a005c0bf85334da0551e1e
#19 DONE 1.0s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:b118f58777e257d0d9221a218f93238ce108a120601436f107609d2810935487
#20 0.611 Run fuzzer_build to build the target
#20 0.725 FUZZ_TARGET = oak
#20 0.725 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.725 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.739 Building benchmark oak_oak with fuzzer afl
#20 0.744 ++ for f in '${CFLAGS}'
#20 0.744 ++ echo --conlyopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION --linkopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION
#20 0.744 ++ for f in '${CFLAGS}'
#20 0.744 ++ echo --conlyopt=-pthread --linkopt=-pthread
#20 0.744 ++ for f in '${CFLAGS}'
#20 0.744 ++ echo --conlyopt=-Wl,--no-as-needed --linkopt=-Wl,--no-as-needed
#20 0.744 ++ for f in '${CFLAGS}'
#20 0.744 ++ echo --conlyopt=-Wl,-ldl --linkopt=-Wl,-ldl
#20 0.744 ++ for f in '${CFLAGS}'
#20 0.744 ++ echo --conlyopt=-Wl,-lm --linkopt=-Wl,-lm
#20 0.744 ++ for f in '${CFLAGS}'
#20 0.744 ++ echo --conlyopt=-Wno-unused-command-line-argument --linkopt=-Wno-unused-command-line-argument
#20 0.744 ++ for f in '${CFLAGS}'
#20 0.744 ++ echo --conlyopt=-O3 --linkopt=-O3
#20 0.744 ++ for f in '${CFLAGS}'
#20 0.744 ++ echo --conlyopt=-fsanitize-coverage=trace-pc-guard --linkopt=-fsanitize-coverage=trace-pc-guard
#20 0.745 ++ for f in '${CXXFLAGS}'
#20 0.745 ++ echo --cxxopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION --linkopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION
#20 0.745 ++ for f in '${CXXFLAGS}'
#20 0.745 ++ echo --cxxopt=-pthread --linkopt=-pthread
#20 0.745 ++ for f in '${CXXFLAGS}'
#20 0.745 ++ echo --cxxopt=-Wl,--no-as-needed --linkopt=-Wl,--no-as-needed
#20 0.745 ++ for f in '${CXXFLAGS}'
#20 0.745 ++ echo --cxxopt=-Wl,-ldl --linkopt=-Wl,-ldl
#20 0.745 ++ for f in '${CXXFLAGS}'
#20 0.745 ++ echo --cxxopt=-Wl,-lm --linkopt=-Wl,-lm
#20 0.745 ++ for f in '${CXXFLAGS}'
#20 0.745 ++ echo --cxxopt=-Wno-unused-command-line-argument --linkopt=-Wno-unused-command-line-argument
#20 0.745 ++ for f in '${CXXFLAGS}'
#20 0.745 ++ echo --cxxopt=-stdlib=libc++ --linkopt=-stdlib=libc++
#20 0.745 ++ for f in '${CXXFLAGS}'
#20 0.745 ++ echo --cxxopt=-O3 --linkopt=-O3
#20 0.745 ++ for f in '${CXXFLAGS}'
#20 0.745 ++ echo --cxxopt=-fsanitize-coverage=trace-pc-guard --linkopt=-fsanitize-coverage=trace-pc-guard
#20 0.745 ++ '[' address = undefined ']'
#20 0.746 + readonly 'EXTRA_BAZEL_FLAGS=--conlyopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION --linkopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION
#20 0.746 --conlyopt=-pthread --linkopt=-pthread
#20 0.746 --conlyopt=-Wl,--no-as-needed --linkopt=-Wl,--no-as-needed
#20 0.746 --conlyopt=-Wl,-ldl --linkopt=-Wl,-ldl
#20 0.746 --conlyopt=-Wl,-lm --linkopt=-Wl,-lm
#20 0.746 --conlyopt=-Wno-unused-command-line-argument --linkopt=-Wno-unused-command-line-argument
#20 0.746 --conlyopt=-O3 --linkopt=-O3
#20 0.746 --conlyopt=-fsanitize-coverage=trace-pc-guard --linkopt=-fsanitize-coverage=trace-pc-guard
#20 0.746 --cxxopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION --linkopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION
#20 0.746 --cxxopt=-pthread --linkopt=-pthread
#20 0.746 --cxxopt=-Wl,--no-as-needed --linkopt=-Wl,--no-as-needed
#20 0.746 --cxxopt=-Wl,-ldl --linkopt=-Wl,-ldl
#20 0.746 --cxxopt=-Wl,-lm --linkopt=-Wl,-lm
#20 0.746 --cxxopt=-Wno-unused-command-line-argument --linkopt=-Wno-unused-command-line-argument
#20 0.746 --cxxopt=-stdlib=libc++ --linkopt=-stdlib=libc++
#20 0.746 --cxxopt=-O3 --linkopt=-O3
#20 0.746 --cxxopt=-fsanitize-coverage=trace-pc-guard --linkopt=-fsanitize-coverage=trace-pc-guard'
#20 0.746 + EXTRA_BAZEL_FLAGS='--conlyopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION --linkopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION
#20 0.746 --conlyopt=-pthread --linkopt=-pthread
#20 0.746 --conlyopt=-Wl,--no-as-needed --linkopt=-Wl,--no-as-needed
#20 0.746 --conlyopt=-Wl,-ldl --linkopt=-Wl,-ldl
#20 0.746 --conlyopt=-Wl,-lm --linkopt=-Wl,-lm
#20 0.746 --conlyopt=-Wno-unused-command-line-argument --linkopt=-Wno-unused-command-line-argument
#20 0.746 --conlyopt=-O3 --linkopt=-O3
#20 0.746 --conlyopt=-fsanitize-coverage=trace-pc-guard --linkopt=-fsanitize-coverage=trace-pc-guard
#20 0.746 --cxxopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION --linkopt=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION
#20 0.746 --cxxopt=-pthread --linkopt=-pthread
#20 0.746 --cxxopt=-Wl,--no-as-needed --linkopt=-Wl,--no-as-needed
#20 0.746 --cxxopt=-Wl,-ldl --linkopt=-Wl,-ldl
#20 0.746 --cxxopt=-Wl,-lm --linkopt=-Wl,-lm
#20 0.746 --cxxopt=-Wno-unused-command-line-argument --linkopt=-Wno-unused-command-line-argument
#20 0.746 --cxxopt=-stdlib=libc++ --linkopt=-stdlib=libc++
#20 0.746 --cxxopt=-O3 --linkopt=-O3
#20 0.746 --cxxopt=-fsanitize-coverage=trace-pc-guard --linkopt=-fsanitize-coverage=trace-pc-guard'
#20 0.746 + readonly 'NO_VPTR=--copt=-fno-sanitize=vptr --linkopt=-fno-sanitize=vptr'
#20 0.746 + NO_VPTR='--copt=-fno-sanitize=vptr --linkopt=-fno-sanitize=vptr'
#20 0.746 + FUZZER_TARGETS=()
#20 0.746 + readonly FUZZER_TARGETS
#20 0.746 + readonly ENABLED=false
#20 0.746 + ENABLED=false
#20 0.746 + '[' false = true ']'
#20 0.746 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 1.1s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:62b88e5fdefb40cb93242f2eb8e2d0fe736e9ac672a0506e8084237e323cffb7 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/oak_oak done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/oak_oak:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:ccedd11042151190b6d415c8635b819c1c18e0beafdb62b5ebc979a9af08e4ae
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:da6ce07158bd6ae6c36b821d34c9ed225893e9e60acabbaa1d0af8ace87f1113
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/oak_oak-intermediate
#4 sha256:c0a6fe7343cb87cce762ff623a77315b404fcb5baf2f7a79e78122af61d6a75a
#4 ERROR: gcr.io/fuzzbench/runners/afl/oak_oak-intermediate:latest: not found

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:5714c94f587b9f30b6bec2177074b191da040ea1ea06855b8daa72a134e88137 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/oak_oak-intermediate 0.0s done
#6 DONE 0.3s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/oak_oak-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:1546151cfa48e95bbd26a708434aca1757d77b451a8980545be8816ef71813dd
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:c367be8af9eee4e9d47e737d8f85c1fbab94da1ea1c7e887c16b105fd525d082
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/oak_oak-intermediate:latest
#3 sha256:a9945295f3b53dfaf1e6eba014a4593e1d067c0aa3b73bf1497dce8f29faa4f3
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/oak_oak:latest
#4 sha256:157bf490903fdf1d08fab1525934aaa03f9cd082131e1370cadf082aad62fe92
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:f882410fc55800532c2a94c3dbba052f5cc770ad99b1a93f542bc5abfcdef62b
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/oak_oak-intermediate
#6 sha256:770b6f4dd13f8422e4e52c157d2000a9671f35f0863cc99b2d94518943096c3d
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/oak_oak
#10 sha256:a8eaa54c8c3e99a62dafa4c40b8e35a682c162e321d83f93bc748fb0285c8875
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/oak_oak
#5 sha256:42b6ed9bd124b91815464f94c1dd942c81697df57e27d057e87f441f8907c0cc
#5 ERROR: gcr.io/fuzzbench/runners/afl/oak_oak:latest: not found

#12 [internal] load build context
#12 sha256:f882410fc55800532c2a94c3dbba052f5cc770ad99b1a93f542bc5abfcdef62b
#12 transferring context: 18.91MB 0.6s done
#12 DONE 0.9s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/oak_oak
#10 sha256:a8eaa54c8c3e99a62dafa4c40b8e35a682c162e321d83f93bc748fb0285c8875
#10 DONE 2.4s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:6139c5867cc7398116484764a6ee406c63f9538ba8b8b42e0ec43a88dbbc7bff
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:a9717f65b10c22eccfca99ff9f8783935ba1689570f3205643eb6c57f0b325b6
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:bf23f34f440e1a90d132e29ec34069c5681c4a9d428a4f610d1ead8c23009d08
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:8bf388fa44a394072f0d8dcebc75cf2401c6f0c575bb43ec2dba5fb4a92865c3
#11 DONE 2.2s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:949ab75046fca851385b5e163ceeff85126b7ff60fceb9378971d89be97ca42e
#13 DONE 2.2s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:f90e74635d5ab8a73262f249f25c717c2230b7a939a229be7877e7b8160d0fc3
#14 DONE 0.3s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:b83e63c9aa210c6b6346623716dd838381b2273a16030a2f3790d52021ca642c
#15 DONE 0.6s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:5fa2d6a02f28d5bbe65faeae897f71fde307b5efafd9c70b9febaea6d94331fd
#16 DONE 1.0s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:5e015299700b93d1ae32178cf89fe477d4e1a0e326f5c7589f56d73a90e0ea67
/bin/sh: 1: source: not found
#17 DONE 0.7s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:4cee559e715a18a8e1f74504b81af245c5465eb53527eeca3dc9fbd8ddc08149
#2 [internal] load .dockerignore
#2 sha256:b54c9617061483222699db0bbbb93d4f01185a1530e1f457c533a31a61502306
#2 transferring context: 2B done
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:2047cf12e52f0f5568b05bead2a9bf4c8700c743378340221c6415dc817e3c75
#1 transferring dockerfile: 32B done
#1 DONE 2.5s

#2 [internal] load .dockerignore
#2 sha256:b54c9617061483222699db0bbbb93d4f01185a1530e1f457c533a31a61502306
#2 DONE 2.5s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder@sha256:276813aef0ce5972db43c0230f96162003994fa742fb1b2f4e66c67498575c65
#3 sha256:2b754e48af0c5e38ce62698059fbec3192df8e59cc29e02d41923aa551f21bea
#18 DONE 4.4s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:f1783d615e698401af41de57a08cd2dc26cf2edb90b7b67bbfcf5db7db86d996
#19 DONE 0.5s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:d8854637c72ad6f7f5dd953aa0990722f20567badbf1f691068ba34e2974f127
#3 DONE 0.5s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:276813aef0ce5972db43c0230f96162003994fa742fb1b2f4e66c67498575c65
#5 sha256:42273eb8b63d10daaf882a5b3c8a6e7a11876869a31001925573ea217a9cf9a4
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/oak_oak
#4 sha256:d95c1ba6777729cf9980463d65040c29c39beb7f9fcffbc722a6deb0b08c2a9a
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:05c0e0a1828b3322349e8eecc5b1a4fc360cc37886439e60cff6adfc6a4cd2b7
#9 transferring context: 30B done
#9 DONE 0.1s

#8 [4/5] WORKDIR oak
#8 sha256:d5cf8f6ec9461d2bb17ddf7de7b492efdb99f63580be9824c10627bd9f849685
#8 CACHED

#6 [2/5] RUN apt-get update &&     apt-get install -y wget &&     wget "https://storage.googleapis.com/bazel-apt/pool/jdk1.8/b/bazel/bazel_1.1.0_amd64.deb" -nv -o- -O bazel.deb &&     echo "138b47ffd54924e3c0264c65d31d3927803fb9025db4d5b18107df79ee3bda95  bazel.deb" > bazel.sha256 &&     sha256sum --check bazel.sha256 &&     apt-get install -y ./bazel.deb &&     rm bazel.deb bazel.sha256 &&     apt-get clean
#6 sha256:c16b12b0f93998d28c9a66811bd5916315bd043396b6c2621ed208a6aa602d37
#6 CACHED

#7 [3/5] RUN git clone --depth 1 https://github.com/project-oak/oak oak
#7 sha256:21197fc6b19d8079dee5c2f233963aa1bc606e064d14044014f40ebca3446e94
#7 CACHED

#10 [5/5] COPY build.sh /src/
#10 sha256:ae2f4d12cf1f71d75bc137ffbbc84b230840ff539f7f7d38ff0afbff4d363048
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:2d2c7c1f0b47366fd70b00bfd78bf24bb8da743c9106e064fd4845bcd3dd2a6a 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/oak_oak done
#11 DONE 0.4s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:bcf6919dc3b1cbd342102e340b6a29a37e3608e1889db665471a948944732b89
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.6s

#2 [internal] load .dockerignore
#2 sha256:7228ea7f7612d29365c22570b113e9854564bb2a4f46354cdc8166b630efb584
#2 transferring context: 2B done
#20 DONE 1.5s
#2 DONE 0.7s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/oak_oak:latest
#3 sha256:8c7b0f124954020a4c2bcd2bd0fdd90627c038b709ebb961a3fd3dc1e8c0b000
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/oak_oak-intermediate
#4 sha256:4e880392b70060b9d6002bdaef7fdff56186b4d4ce00d3647dd3db82fca539c0
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/oak_oak
#5 sha256:883a437dd7e408be3925caa2b4c96c331b5f3c5d0524ce1215b25f155f6cfaa0
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:52ae161ad8f2f71d072479f2c746b47984b2bdbae6d877f0616cb427a43102d9
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:c66f9663006934f2b3994b6e798264ac69f08cb2630800806057509ba4133272
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:19ef91731b476f4d39e5e86c2230e11eb12ce72a787b15507720719b67ac4431
#8 writing image sha256:19ef91731b476f4d39e5e86c2230e11eb12ce72a787b15507720719b67ac4431 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/oak_oak-intermediate done
#8 DONE 0.6s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:25bf845dae79affd82304b43889169f238cfa0e1dcea2a4ed26fb9978a50a1e2
#21 writing image sha256:25bf845dae79affd82304b43889169f238cfa0e1dcea2a4ed26fb9978a50a1e2 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/oak_oak done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/oak_oak:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:5cc31eb8037d69118687b2727e49b04b9a4949a00b187ab94688638b448d6eab
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:0b4dff5902fce39a97bd2da7e64a5753c76370bef30b090f0403d498c11d3af2
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:2909ba770db06e5e04e5771cf9b2936475a51e7dc0740aa65344b36220ccf3dd
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:49e32426edb1175efc0d6b717f515104132190faf67b5435f15e42ac280d8c53
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:772df63ae17eb016e2980c0023fea2eeb58e37749225595789bc7413949c873a
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:e05e941d79c987da5c2a39a42723ba8a2051ae2392bff13afa70501de1fd951e
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:896a4a0a5e3cc13248c9705a65c954a55084e0de245cc2e98450158032a3443b
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:278d1048be89ac10e6821499149688e394f017ddb53c5305e97cdbe9ed6d8c79
#13 writing image sha256:278d1048be89ac10e6821499149688e394f017ddb53c5305e97cdbe9ed6d8c79 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:b041f43e12d419022966789b41c670606fb237792c8bdd63dc2c54fe5d5cd207
#2 transferring context: 34B 0.0s done
#2 DONE 0.3s

#1 [internal] load build definition from Dockerfile
#1 sha256:97a3db93cadb2748d0ac099300f31004db6c7359127441d2673242dabfcec17b
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.3s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/oak_oak-intermediate:latest
#3 sha256:1d335971869b2edfd8b6bdd29a3d7249263edfc9f45956865e8fd9b89d949275
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/oak_oak-intermediate
#6 sha256:4d122bc6994aeb7af6e852b5af4a708e7382e492595ba746144fe29017578a7d
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/oak_oak
#5 sha256:b8c3ef64a955fdf8e92d1880302bde7ef5db5301be5dd5bdd439c8a2eb9f4991
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:5fde13f4c8871b739c83a17d90765f1fda23e562efe29ba2b40c73448d8d65b4
#12 transferring context: 669.84kB 0.1s done
#12 DONE 0.1s

#15 [stage-1  8/13] COPY benchmarks/oak_oak/benchmark.yaml /
#15 sha256:2ac7fa5f4d0cf80f986467d9e43da8180e0d7652a221d0f542091172564b05ee
#15 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:2e875d8eb9aba44ef8e481305c1daf1c7ea1686c8b7df2989c0fb385fb0d2920
#16 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:c1a11bde136b9c52930b60be34d0edd2e1f24ca90c69c6a892fe870e6e67e2dd
#8 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:4c50ffafd029eedafbcbfc064f9848cacb03265128ea212a2ed97da88e9fba5a
#14 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:4b57ad3a08a3e0a60f9cd096e813be5a0042d5294c56ae949e70a86bf62d3c43
#17 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:a7f98553b9ab6eebb263a579ea494decca6037b258dc55b9c950ee5591435ada
#18 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:7ee8759b084c733870d807c6e7724a84b6b478e5ba5eac84118aa919cb732d24
#19 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:08660eeb926ca51d3666f1dc3c62693c4245dcf7a68b7a44b382e860b018c1b8
#9 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:a84df7af703270295a262a975b16f9b44ab4893262423ffacebd4258d73e7bc7
#11 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:63f8476bb2642245a0506e9db9c434e6ddd3416cbd463fef653ba005f55c20d7
#13 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:32bf6163ad80463cf4be1e9101b4d49695e460cdfbcb994887f03c5c788e5bd4
#10 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:1ffab9546e8fa6b8f12d778eb719548279533014951c820134ef6b060ed968a1
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:62b88e5fdefb40cb93242f2eb8e2d0fe736e9ac672a0506e8084237e323cffb7
#21 writing image sha256:62b88e5fdefb40cb93242f2eb8e2d0fe736e9ac672a0506e8084237e323cffb7 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/oak_oak done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:3c622c4b6e5c91d7febe3c6af309b631ebaaef2fc480e927c1d9570da753a015
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:020001380f19b9aaad7fa6080b31d1b76b8769c85f85ab383b4f7e9d2585a657
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/oak_oak-intermediate
#5 sha256:c0a6fe7343cb87cce762ff623a77315b404fcb5baf2f7a79e78122af61d6a75a
#5 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:5714c94f587b9f30b6bec2177074b191da040ea1ea06855b8daa72a134e88137
#6 writing image sha256:5714c94f587b9f30b6bec2177074b191da040ea1ea06855b8daa72a134e88137 done
#6 naming to gcr.io/fuzzbench/runners/afl/oak_oak-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:487a573af59ec8143a0e23b00213c7fd1a4f9bedc9caade827170778883fa4b6
#2 transferring context: 34B done
#2 DONE 0.3s

#1 [internal] load build definition from Dockerfile
#1 sha256:e11964dc010414f8c92b01d955681718ff7d021f8176aa0d9df201cf19b3caae
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.4s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/oak_oak:latest
#4 sha256:157bf490903fdf1d08fab1525934aaa03f9cd082131e1370cadf082aad62fe92
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/oak_oak-intermediate:latest
#3 sha256:a9945295f3b53dfaf1e6eba014a4593e1d067c0aa3b73bf1497dce8f29faa4f3
#3 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/oak_oak-intermediate
#6 sha256:770b6f4dd13f8422e4e52c157d2000a9671f35f0863cc99b2d94518943096c3d
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/oak_oak
#5 sha256:42b6ed9bd124b91815464f94c1dd942c81697df57e27d057e87f441f8907c0cc
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/oak_oak
#10 sha256:a8eaa54c8c3e99a62dafa4c40b8e35a682c162e321d83f93bc748fb0285c8875
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:0675964c7cf90002f56abe1bd67b44b7c78dabf2c820260f3e70abdd0d2037e4
#12 transferring context: 18.91MB 0.7s done
#12 DONE 0.7s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:dc0d5864e168bd8f0570a3aa3136e6916def66e548a33e26ee650a70c86306f1
#16 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:a2972b7419ce651f0e619fc7c832e06b8c2dc50c40ba08941950fbeb03ef4fc5
#18 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:6139c5867cc7398116484764a6ee406c63f9538ba8b8b42e0ec43a88dbbc7bff
#7 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:a46e3fd7164ca83fc1e40a6203792d443737366b17f2813a19b46b2d0292d89c
#14 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:c992843943a632c00f320a58793e9eebd4f9269c88c8c74bf9fd88a41b9d7c2d
#15 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:ae2592a1d93196f648725b8c1be2007c4604f78097673bc9a33c6ab4a6d61769
#13 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:819dce04153fcdc4abea731b7cecb4b14b8204af865f61e7959cf0cf431e1df5
#19 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:a9717f65b10c22eccfca99ff9f8783935ba1689570f3205643eb6c57f0b325b6
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:bf23f34f440e1a90d132e29ec34069c5681c4a9d428a4f610d1ead8c23009d08
#9 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:89f9246a8d27632b7169757bc479417254e116d432a542b03552b449973b02a2
#17 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:8bf388fa44a394072f0d8dcebc75cf2401c6f0c575bb43ec2dba5fb4a92865c3
#11 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:9f923f6ffcb7b5391bd38850bf02ba378637d6c3ddeea346a6824f7e7bdfc2d5
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:25bf845dae79affd82304b43889169f238cfa0e1dcea2a4ed26fb9978a50a1e2
#21 writing image sha256:25bf845dae79affd82304b43889169f238cfa0e1dcea2a4ed26fb9978a50a1e2 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/oak_oak done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f9adc62bf70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7ff7355a2f70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
