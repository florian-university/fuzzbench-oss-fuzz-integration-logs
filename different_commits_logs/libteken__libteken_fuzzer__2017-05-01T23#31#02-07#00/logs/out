WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: libteken_libteken_fuzzer.
INFO:root:Please run "make test-run-afl-libteken_libteken_fuzzer" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:46b4e400032105a497d92691f620cf399e70cc7cb86e9a191e5f1bbb90c92cdf
#1 transferring dockerfile:
#1 transferring dockerfile: 929B done
#1 DONE 1.6s

#2 [internal] load .dockerignore
#2 sha256:63fb5672dbd02126bbae05c4d8bc594c203e5b119158ffe329062189ef7f2869
#2 transferring context: 2B done
#2 DONE 2.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.9s

#9 [internal] load build context
#9 sha256:02ea9f2372de8c10c2333149cdc0ba9fea5b5df55e140d6526bd4077c3998694
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libteken_libteken_fuzzer
#4 sha256:75ecfb1b462fe34fb7aa72ecce8edb882905af690691b1d0b0f4ee69f82c7381
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/libteken_libteken_fuzzer:latest: not found

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 CACHED

#9 [internal] load build context
#9 sha256:02ea9f2372de8c10c2333149cdc0ba9fea5b5df55e140d6526bd4077c3998694
#9 transferring context: 2.05kB done
#9 DONE 1.3s

#6 [2/5] RUN apt-get update && apt-get install -y pmake
#6 sha256:2b417db59545c0187a59f613b2fe61cf9907972a77d65464c23a9f9148132590
#6 2.785 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#6 2.785 Get:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#6 2.788 Get:3 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#6 2.790 Get:4 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#6 2.793 Hit:5 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 3.156 Get:6 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [827 kB]
#6 3.266 Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [752 kB]
#6 3.322 Get:8 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1134 kB]
#6 3.620 Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1973 kB]
#6 3.620 Get:10 http://archive.ubuntu.com/ubuntu focal-backports/universe i386 Packages [13.1 kB]
#6 3.620 Get:11 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [24.8 kB]
#6 3.646 Get:12 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1547 kB]
#6 4.533 Fetched 6606 kB in 2s (4154 kB/s)
#6 4.533 Reading package lists...
#6 6.192 Reading package lists...
#6 7.599 Building dependency tree...
#6 7.811 Reading state information...
#6 8.020 The following additional packages will be installed:
#6 8.022   bmake
#6 8.096 The following NEW packages will be installed:
#6 8.098   bmake pmake
#6 8.261 0 upgraded, 2 newly installed, 0 to remove and 0 not upgraded.
#6 8.261 Need to get 277 kB of archives.
#6 8.261 After this operation, 526 kB of additional disk space will be used.
#6 8.261 Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 bmake amd64 20181221-2 [273 kB]
#6 8.458 Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 pmake all 20181221-2 [3560 B]
#6 8.901 debconf: delaying package configuration, since apt-utils is not installed
#6 8.987 Fetched 277 kB in 0s (794 kB/s)
#6 9.065 Selecting previously unselected package bmake.
#6 9.065 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21291 files and directories currently installed.)
#6 9.095 Preparing to unpack .../bmake_20181221-2_amd64.deb ...
#6 9.102 Unpacking bmake (20181221-2) ...
#6 9.238 Selecting previously unselected package pmake.
#6 9.240 Preparing to unpack .../pmake_20181221-2_all.deb ...
#6 9.255 Unpacking pmake (20181221-2) ...
#6 9.359 Setting up bmake (20181221-2) ...
#6 9.408 Setting up pmake (20181221-2) ...
#6 DONE 10.2s

#7 [3/5] RUN svn co https://svn.freebsd.org/base/head/sys/teken libteken
#7 sha256:6f3552164a21bb7a20f16eecdafe8299de42d53fc3e607dec4a18e3ee5a17fee
#7 1.011 A    libteken/demo
#7 1.012 A    libteken/libteken
#7 1.013 A    libteken/stress
#7 1.146 A    libteken/demo/Makefile
#7 1.149 A    libteken/demo/teken_demo.c
#7 1.152 A    libteken/libteken/Makefile
#7 1.153 A    libteken/libteken/teken.3
#7 1.170 A    libteken/libteken/Symbol.map
#7 1.173 A    libteken/stress/Makefile
#7 1.179 A    libteken/stress/teken_stress.c
#7 1.186 A    libteken/teken.c
#7 1.218 A    libteken/teken_subr.h
#7 1.220 A    libteken/teken.h
#7 1.221 A    libteken/gensequences
#7 1.222 A    libteken/sequences
#7 1.244 A    libteken/teken_scs.h
#7 1.245 A    libteken/teken_subr_compat.h
#7 1.247 A    libteken/teken_wcwidth.h
#7 1.254 Checked out revision 371645.
#7 DONE 1.5s

#8 [4/5] WORKDIR libteken
#8 sha256:8d2c6f2df0c65f50d6ca16a8f87802553ddd1232a3a121094f629d159f58a2b0
#8 DONE 0.2s

#10 [5/5] COPY build.sh libteken_fuzzer.c /src/
#10 sha256:8c39c4d079081b534e858c8ec31b7968cefd965058809bc260b16dd1daad9253
#10 DONE 0.2s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:f763d4c3ed1734cb722201bd8bd24fb61204cf9ca6c488a27b2d4e63eff7cb2c done
#11 naming to gcr.io/fuzzbench/builders/benchmark/libteken_libteken_fuzzer done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libteken_libteken_fuzzer:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:86c2f1c019a2b95ee941f30ba1bb259b2f113eb20f5483b1ab875c3081c347e8
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:3534b3a310ee5ac790028b173303e39686452b51162a54f96deea4bfe6c39c27
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/libteken_libteken_fuzzer:latest
#3 sha256:2aabf71a2cc543227a2e10fb37bd4733ff1473ae1efd39316dc40a126aef1896
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libteken_libteken_fuzzer
#5 sha256:5c363eb07860f3ce58b64edef4cfa5330aac31fdc9863834fdc5b4c4e1b0251e
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer-intermediate
#4 sha256:2afdfb6e30861e81e824b85a8438830f84e59269d0c211edec0ff9648995df51
#4 ERROR: gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libteken_libteken_fuzzer
#5 sha256:5c363eb07860f3ce58b64edef4cfa5330aac31fdc9863834fdc5b4c4e1b0251e
#5 DONE 0.9s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:c4f4a3e06d8854fbab514850c5071d4399b78079db29c7d73f1ff8c78909fa52
#6 0.466 Cloning into '/afl'...
#6 1.264 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.264 
#6 1.264 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.264 changes and commit them, and you can discard any commits you make in this
#6 1.264 state without impacting any branches by switching back to a branch.
#6 1.264 
#6 1.264 If you want to create a new branch to retain commits you create, you may
#6 1.264 do so (now or later) by using -c with the switch command. Example:
#6 1.264 
#6 1.264   git switch -c <new-branch-name>
#6 1.264 
#6 1.264 Or undo this operation with:
#6 1.264 
#6 1.264   git switch -
#6 1.264 
#6 1.264 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.264 
#6 1.264 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.280 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.280 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.460 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.467 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.838 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.157 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.582 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.732 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.140 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.377 ln -sf afl-as as
#6 5.379 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.382 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.383 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 5.9s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:19692e0726a071f97148037a5e5b15238bdf85927df6ec1c4c63ddc3851e6833
#7 0.810 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.810 Hit:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.810 Hit:3 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 0.810 Hit:4 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.817 Hit:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 1.707 Reading package lists...
#7 3.195 Reading package lists...
#7 4.614 Building dependency tree...
#7 4.824 Reading state information...
#7 5.067 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.067 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 5.076 --2022-02-17 00:05:19--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.079 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.110.133, 185.199.109.133, 185.199.111.133, ...
#7 5.080 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.110.133|:443... connected.
#7 5.104 HTTP request sent, awaiting response... 200 OK
#7 5.123 Length: 9177 (9.0K) [text/plain]
#7 5.123 Saving to: '/afl/afl_driver.cpp'
#7 5.124 
#7 5.124      0K ........                                              100% 7.56M=0.001s
#7 5.125 
#7 5.125 2022-02-17 00:05:19 (7.56 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.125 
#7 6.897 ar: creating /libAFL.a
#7 DONE 7.5s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:c671ce7575a0ed89e59b76131d944b9a6f1e5e923c99280c03ae007255584e95 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer-intermediate 0.0s done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:5458c2390ca96b6b574661470506736225d7178c81cfc07aaf8615b29db771b8
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:abf0d84a1ebb8e60829e09e1254130c01acd0123ba75ebb827e37ecef1cfd80e
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:1f0d331e21e69c26735189b6d40e7034b86b82c75896d69f72eaf7e48af2712d
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#9 [4/7] COPY ./requirements.txt /
#9 sha256:692574c9e8ed3701e2cc57d378b01c77e7fdaf78aade947f0352aec54511edd7
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:fbc99d1a007d1660871d832dda5f0b6eaa2d0e31ddf22f3631ae6b9f3befdb8f
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:6b8670c418fbc87287f322b6d92f95a5a362930caebdb84afc7c0df29f824796
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:9e4295e4c94f5bb07f4f136f409366a330fa4ed256dc5d278dfa3a8a44550195
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:d22c0bd101801931c6d6e62a988c4bfa3adad63664261e8d24ef6559eead7bbd
#13 writing image sha256:d22c0bd101801931c6d6e62a988c4bfa3adad63664261e8d24ef6559eead7bbd 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:5f776f3f708c9df067f7f5bec19d78bb20acf0e8810dbec04e148393f77d5b5d
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:a0bcc5b22a03a65aff0ae4c471a55f90dd27a24d57302e8a3e9713c2d7bf3ae3
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer-intermediate:latest
#3 sha256:7648f89be7d6f1717cf2b1423dc057715ed000a199fc7696f730d03b86d19490
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:b71715498d255df1a1ae681856a1691d2ba80ea791fb8e629fdc1e88c8e9028a
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer-intermediate
#6 sha256:4f66c98148367ffc3bbd927fc9fdbc8c4c29324313fd13639db858fb984e8c05
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer
#5 sha256:f5636ecb11658dcead93f884fd05a291f0c9a37fe55e9c1764bf453f6a5de199
#5 ERROR: gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:b71715498d255df1a1ae681856a1691d2ba80ea791fb8e629fdc1e88c8e9028a
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.2s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer-intermediate
#6 sha256:4f66c98148367ffc3bbd927fc9fdbc8c4c29324313fd13639db858fb984e8c05
#6 DONE 0.8s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:ded3616383f8d68ee5ef83bb3bcd82014d45be76b0bc7dcf7c05c27464ed8ab6
#8 DONE 0.7s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:baf73cf302b22d82a41c901df424c3c49815cc36b72b5472847631552e02e90a
#9 DONE 16.8s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:3244aa1e55db471b194142d31be33a7d9c2e699897b68a4d4ffec227615285a1
#10 DONE 0.2s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:c7768efe7ba2ee47bb59f380060fdd428cdb78aa0ac003f1b584ed8a76000aca
#11 DONE 20.2s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:f891dc1b6de2ea4a5111a4c56f10cb03991a07fa6269e23da7b614fe78c34f2f
#13 DONE 1.5s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:6e51ac91f82c22e2f8a6affb1936257f740e238548d60ff9e2afe53343a7a05e
#14 DONE 0.7s

#15 [stage-1  8/13] COPY benchmarks/libteken_libteken_fuzzer/benchmark.yaml /
#15 sha256:51040246031ee20da5f8bfcee935088d521ab96e94e9d142c3a74c470893b504
#15 DONE 0.2s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:58f67a93652e820579932993320aaccebe5e7aac525bf862b5e5fd78efedb0a1
#16 DONE 0.9s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:3fe46a108c7cf222322bfcd1771042f544219929e00c7ac42445a82dd7c22bab
#17 DONE 0.4s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:5c3dc907990ac2441e320a7ed7f50f6a5e8bd4016f264d72615c45b78c224f24
#18 0.506 Checking out commit '33038668'
#18 0.514 error: pathspec ''33038668'' did not match any file(s) known to git
#18 0.521 error: pathspec ''33038668'' did not match any file(s) known to git
#18 0.589 Checkout unsuccessful.
#18 DONE 0.8s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:7fc94be7a6bd36f747e184ba31b2670f76b66f8fac429c8105f07e143cec3687
#19 DONE 0.8s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:99e38f86b9bf3c74adf3ae20c715df3db5365044ecfbaeeafbdb38fb3d9f917b
#20 0.572 Run fuzzer_build to build the target
#20 0.689 FUZZ_TARGET = libteken_fuzzer
#20 0.689 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.689 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.718 Building benchmark libteken_libteken_fuzzer with fuzzer afl
#20 0.721 + pmake -C libteken teken_state.h
#20 0.737 awk -f /src/libteken/libteken/../gensequences /src/libteken/libteken/../sequences > teken_state.h
#20 0.743 + CFLAGS='-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D__unused='
#20 0.743 + pmake -C libteken libteken.a
#20 0.751 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D__unused= -Wno-error -I.  -Werror   -c /src/libteken/libteken/../teken.c
#20 1.506 building standard teken library
#20 1.507 ar cq libteken.a teken.o
#20 1.513 ranlib libteken.a
#20 1.527 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -c /src/libteken_fuzzer.c -o /src/libteken_fuzzer.o -I.
#20 1.568 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard /src/libteken_fuzzer.o -o /out/libteken_fuzzer -lFuzzingEngine libteken/libteken.a
#20 1.821 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 2.4s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:26b2ce0aa992f98163a28b083beb0bf12747a7363f0ad4ce3efbd8464e20d991 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer 0.0s done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:21835eec86b1afe1174121509d36ede0ff3143d9c2af2be2a1a50ca6686fc990
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:a089e0909cd908dc8a13796e44429e67bc2500ead6437116ccae0a7232f9e862
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/libteken_libteken_fuzzer-intermediate
#4 sha256:a6f902e14c8f597f42cd57dbe43f9054936c9646852b3847053becfa74f12b4d
#4 ERROR: gcr.io/fuzzbench/runners/afl/libteken_libteken_fuzzer-intermediate:latest: not found

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:2bc37fbfa904b35359f8c55a9a3470da22a2fee8d5ccedd151f1eedaf5fbd3ef done
#6 naming to gcr.io/fuzzbench/runners/afl/libteken_libteken_fuzzer-intermediate 0.0s done
#6 DONE 0.2s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/libteken_libteken_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:1ca043a87ffbfc06455de3c84c1867b531a2bf1fbe4e3079292c18281310e273
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:422186dc149e2e7680155b5f402702a45b1d3ba88fe9364e6ca8a29b86b989c2
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer:latest
#4 sha256:592503728550d62611803af0a96c66a4a8fd4aa980b5404efb23a0a84b276645
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/libteken_libteken_fuzzer-intermediate:latest
#3 sha256:fac24b15faf175a7fcb4b21ce4119a31c174d2c22472d3e7f1a026142cd5c76f
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:592758995ea718a398aaf870934e917b07e6e67240025ee29a228b25b7b7ce88
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/libteken_libteken_fuzzer-intermediate
#6 sha256:2c65c523ccba6a3b8ab45cf108f4c3d883e98b95884494d7c891b8ce54578876
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer
#10 sha256:9b989d6dc7739e4e70f405e9fe13da92c3d4405696ef32dacbd6166fdc86c1df
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/libteken_libteken_fuzzer
#5 sha256:b2b5d2a8162b8cf93e887fadced47c57e309404b5b6af234406b1b5a8028e9ad
#5 ERROR: gcr.io/fuzzbench/runners/afl/libteken_libteken_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:592758995ea718a398aaf870934e917b07e6e67240025ee29a228b25b7b7ce88
#12 transferring context: 18.35MB 0.6s done
#12 DONE 0.9s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer
#10 sha256:9b989d6dc7739e4e70f405e9fe13da92c3d4405696ef32dacbd6166fdc86c1df
#10 DONE 2.0s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:c77f6eda8fa48ee1f4522ca39f0b4d33daec8584eda3176861987390d2ec5d3b
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:ec6253344e3b4a1661a4ef77a2825478540991dcd2d87bdb72a5d396ebcf19db
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:0dd71bf87f19536afa481d00af47ef1c43f65c2e7468e7f57b82f5447985e8fc
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:f56d59d4d2d20ee8fb4a812de3f5b0722857b1be0f5e931820526fc07fc6d1df
#11 DONE 0.3s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:db738bf00b4c934b19b3a6123320f6dab1390e1cf66a9c217ae77932a5100457
#13 DONE 1.3s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:f3564b0e535d0275153be43c388e9ad175678f749700d011d80cffec362c88d2
#14 DONE 0.1s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:cbd9c36f0ff877d09e375f84ab55c7f8d2de5bf0e61fdd73ed4d47766ada9c2d
#15 DONE 1.0s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:1592fc4f1e7cba7d6c615da111f2604bcc5d085d6c70601b3fac66fb00140fd7
#16 DONE 0.6s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:5fb9ef129fdccacd78c2c5139999ca5a6a711bc7501e6adc77ad6f4ae0a1078f
#17 DONE 0.1s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:7dbf43ee641bf264c8d90304bf4a3ca56b071ec214222ad686322b81ddd4e677
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:02ee96d3f2ed4c283d4ea647e58506702f56c64cf69f93a978e3e810956f30fc
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:83918c0a7e3bebfb32a76aa8a902088b65b5f54754d46d890394edfafebf9dc5
#20 DONE 0.7s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:d1a53b2cabc5c500a23db111a625e103dbcb5758bb5d6f280e9dc3116dff9dd4
#21 writing image sha256:d1a53b2cabc5c500a23db111a625e103dbcb5758bb5d6f280e9dc3116dff9dd4 done
#21 naming to gcr.io/fuzzbench/runners/afl/libteken_libteken_fuzzer done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/libteken_libteken_fuzzer:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Doing final sync.
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:c4eef6585daadbb984e3fea18b6ad1965965db0cf6116b36e9268dec88ae8657
#2 transferring context:
#2 transferring context: 2B done
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:a23b5925dec955c9530ecdd76c53b742ec019929a83e2aa018648d2d2e5c03ba
#1 transferring dockerfile: 32B done
#1 DONE 1.7s

#2 [internal] load .dockerignore
#2 sha256:c4eef6585daadbb984e3fea18b6ad1965965db0cf6116b36e9268dec88ae8657
#2 DONE 2.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.7s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libteken_libteken_fuzzer
#4 sha256:75ecfb1b462fe34fb7aa72ecce8edb882905af690691b1d0b0f4ee69f82c7381
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:a348c1642bd06b9c42e443252be32c015baf2e74c5f410879d889758ea5f816d
#9 transferring context: 67B done
#9 DONE 0.5s

#6 [2/5] RUN apt-get update && apt-get install -y pmake
#6 sha256:2b417db59545c0187a59f613b2fe61cf9907972a77d65464c23a9f9148132590
#6 CACHED

#7 [3/5] RUN svn co https://svn.freebsd.org/base/head/sys/teken libteken
#7 sha256:6f3552164a21bb7a20f16eecdafe8299de42d53fc3e607dec4a18e3ee5a17fee
#7 CACHED

#8 [4/5] WORKDIR libteken
#8 sha256:8d2c6f2df0c65f50d6ca16a8f87802553ddd1232a3a121094f629d159f58a2b0
#8 CACHED

#10 [5/5] COPY build.sh libteken_fuzzer.c /src/
#10 sha256:73a9574647c31e1d357df664ad7e12959380dc416e3da4b253286b06ae6d6d97
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:f763d4c3ed1734cb722201bd8bd24fb61204cf9ca6c488a27b2d4e63eff7cb2c 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/libteken_libteken_fuzzer done
#11 DONE 1.3s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:acb452ed313f0a8c62c3a3fcb7089c6f55804dc2af3c65d086175091e4b8a5d3
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:9bf315901ca82b096c2a5bf70cf149288bfd79aab0d163b6d4cfe10b9d7e03c1
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/libteken_libteken_fuzzer:latest
#3 sha256:2aabf71a2cc543227a2e10fb37bd4733ff1473ae1efd39316dc40a126aef1896
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libteken_libteken_fuzzer
#5 sha256:5c363eb07860f3ce58b64edef4cfa5330aac31fdc9863834fdc5b4c4e1b0251e
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer-intermediate
#4 sha256:2afdfb6e30861e81e824b85a8438830f84e59269d0c211edec0ff9648995df51
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:c4f4a3e06d8854fbab514850c5071d4399b78079db29c7d73f1ff8c78909fa52
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:19692e0726a071f97148037a5e5b15238bdf85927df6ec1c4c63ddc3851e6833
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:c671ce7575a0ed89e59b76131d944b9a6f1e5e923c99280c03ae007255584e95 done
#8 naming to gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer-intermediate done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:e268603bf1355b4e4ccb14572cd6bedde044fe3bdaacb06d213f7268294ee55c
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:206ff395c6a0f30cff68232b79a141e36fed1c5eb2ca2a4b20c972ab5880137e
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.3s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:9bba1968656cfff034c88d2ec4f3752be65463dc2193910bef1a55c51d08d52a
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:7a913e628fbaeb0b55fb13caf9645cc52ca9ebd0607f629bdc51d66a9e4e2329
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:45f3d0bcce63211c136da7eabd521949db7106c03aad0cf1d4183c0ee165585b
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:567bdfe616ec6fe9cc45fa52ce897b9661a4b6f112d2f46be93297b1d23e743f
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:c48ed015b1b5fe90566ca9eaa05388f11c0a3196c484df8947b0e846ae208fae
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:d22c0bd101801931c6d6e62a988c4bfa3adad63664261e8d24ef6559eead7bbd 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:b70a81e3e3801e3d46d1b7dd5feb6304982a05cb0dac88bd6b31414b2cfc132e
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:1d787b71b554360b7763a23361b3c5f7c9999dad733a59ddfa8dacd4cf41bd83
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer-intermediate:latest
#4 sha256:7648f89be7d6f1717cf2b1423dc057715ed000a199fc7696f730d03b86d19490
#4 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer-intermediate
#6 sha256:4f66c98148367ffc3bbd927fc9fdbc8c4c29324313fd13639db858fb984e8c05
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer
#5 sha256:f5636ecb11658dcead93f884fd05a291f0c9a37fe55e9c1764bf453f6a5de199
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:e288a8a4209328fb7e1f52ce1287050560ade7838f7b0dab3a105b3b143bea42
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.2s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:3244aa1e55db471b194142d31be33a7d9c2e699897b68a4d4ffec227615285a1
#10 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:0ced6d15127f48bb4c68bbf851c0107818384ad7d7b58b5c2665fc1c284284bb
#19 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:d90ae7e99a9a499892d528b711f25cf7379a36d05a78f3a9d4fac4702603a0f0
#18 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:394dd7247e795bc99904f624dab3e482ea951a21adc6e4213fc09cd3d25e70ef
#13 CACHED

#15 [stage-1  8/13] COPY benchmarks/libteken_libteken_fuzzer/benchmark.yaml /
#15 sha256:6582480553c8962833feac65c8ec90e69bff1a593661a575fcd57f839c86969a
#15 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:2326b966383e30843b5f09d88057d225ff961abf99cfc0236f5e2b63091ae2d8
#16 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:c7768efe7ba2ee47bb59f380060fdd428cdb78aa0ac003f1b584ed8a76000aca
#11 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:8458552ba0dc7ac5991de8096749c9fa38b886197c3185b5f9e0f695f20a109a
#14 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:aae63e00b11d42287f5da2b2c8b1228a6c14d2f992778d5613b058533b706cb3
#17 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:baf73cf302b22d82a41c901df424c3c49815cc36b72b5472847631552e02e90a
#9 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:ded3616383f8d68ee5ef83bb3bcd82014d45be76b0bc7dcf7c05c27464ed8ab6
#8 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:1673c906705722ac3f3b1aea91ca09b108da069aaaac7f7d3a662c2d8ea1944d
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:26b2ce0aa992f98163a28b083beb0bf12747a7363f0ad4ce3efbd8464e20d991 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:a633ae6154db07552177ad83395aa00e183718bd7258fb21effe2601dae1f302
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:e190fabd8061bbf58c22439d6f9e159bf02c1a74c9221037f09215be3398a11a
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/libteken_libteken_fuzzer-intermediate
#5 sha256:a6f902e14c8f597f42cd57dbe43f9054936c9646852b3847053becfa74f12b4d
#5 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:2bc37fbfa904b35359f8c55a9a3470da22a2fee8d5ccedd151f1eedaf5fbd3ef done
#6 naming to gcr.io/fuzzbench/runners/afl/libteken_libteken_fuzzer-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:268b19028768818117a304657bb3dea82a8cfeb21abf92cdcf133a7d17f2abd3
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:f00fe675ac380d1a09b68826d16c88dfda1bb8b6b08dbb666c2d87ba0f3a506a
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/libteken_libteken_fuzzer-intermediate:latest
#3 sha256:fac24b15faf175a7fcb4b21ce4119a31c174d2c22472d3e7f1a026142cd5c76f
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer:latest
#4 sha256:592503728550d62611803af0a96c66a4a8fd4aa980b5404efb23a0a84b276645
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/libteken_libteken_fuzzer
#5 sha256:b2b5d2a8162b8cf93e887fadced47c57e309404b5b6af234406b1b5a8028e9ad
#5 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/libteken_libteken_fuzzer-intermediate
#6 sha256:2c65c523ccba6a3b8ab45cf108f4c3d883e98b95884494d7c891b8ce54578876
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/libteken_libteken_fuzzer
#10 sha256:9b989d6dc7739e4e70f405e9fe13da92c3d4405696ef32dacbd6166fdc86c1df
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:9ee5eaee2c4c0619e19478c149c588b899235f087deaa828f1fdc6550b1a94e2
#12 transferring context: 18.35MB 0.7s done
#12 DONE 1.4s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:c7685893c575e61f20c2e9563094e0c30f2b6ab8fb8a0f6483689a7502953dc4
#16 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:0dd71bf87f19536afa481d00af47ef1c43f65c2e7468e7f57b82f5447985e8fc
#9 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:ec6253344e3b4a1661a4ef77a2825478540991dcd2d87bdb72a5d396ebcf19db
#8 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:6bda7c01b93c6838e97b95930fb12b746248cfe52b21f6813bc2d7eaa585a89c
#14 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:af9286722f94ea6ecb896ceb31b46000e4d49144c0293f5c1195155d75804831
#17 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:6b177b22f60b15f62d542023791bfc883faae98e381892ec6fc78332181bb65d
#18 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:59d70e81ddcbda6cb00e8dae8ba4cec0c9f72bbd0c51a8ac92d9564c7b6955c2
#19 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:03d23a499085e8d7dc9363e545798b21d348309d7bc4aaee5ea128a710388d62
#13 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:c77f6eda8fa48ee1f4522ca39f0b4d33daec8584eda3176861987390d2ec5d3b
#7 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:f56d59d4d2d20ee8fb4a812de3f5b0722857b1be0f5e931820526fc07fc6d1df
#11 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:d0d6dc42027963cbec58292ddb9f3e00ecfdf84ba98679d3546ca213ab49278b
#15 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:df04ae60e0e04b19ac2b5ee8ad90718583f65d1b2901964eb45c49adc4c2d8dc
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:d1a53b2cabc5c500a23db111a625e103dbcb5758bb5d6f280e9dc3116dff9dd4 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/libteken_libteken_fuzzer done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Doing final sync.
