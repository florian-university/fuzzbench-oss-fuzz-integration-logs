WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: json-c_tokener_parse_ex_fuzzer.
INFO:root:Please run "make test-run-afl-json-c_tokener_parse_ex_fuzzer" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:c409da2733a428e9d8bc43f51dbb1ba8cb2d09d9de2bce42df0d39fb962ef2ad
#1 transferring dockerfile:
#1 transferring dockerfile: 958B done
#1 ...

#2 [internal] load .dockerignore
#2 sha256:e65852e091dc32566a760912de51f5c71b49eff6d471161991f6529dd73ed801
#2 transferring context: 2B done
#2 DONE 1.3s

#1 [internal] load build definition from Dockerfile
#1 sha256:c409da2733a428e9d8bc43f51dbb1ba8cb2d09d9de2bce42df0d39fb962ef2ad
#1 DONE 1.5s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#9 [internal] load build context
#9 sha256:6fa7bad6ae1829c6a4ecc0eb78a25b8175e391e45d48a5fa172888cf6be0d4ed
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer
#4 sha256:370a0b2b5e5a51766b20158a9aa4eb8c5e81d32d4bc758feb6e6b06b1a5b0403
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer:latest: not found

#9 [internal] load build context
#9 sha256:6fa7bad6ae1829c6a4ecc0eb78a25b8175e391e45d48a5fa172888cf6be0d4ed
#9 transferring context: 1.16kB done
#9 DONE 0.1s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:1b680dfd08ff668505b992cdb80d6a0ea43cbc2f7a85f533f40c1edf5f50c5ba
#6 CACHED

#7 [3/5] RUN git clone --depth 1 https://github.com/json-c/json-c.git json-c
#7 sha256:67d89b44b36825af50527903729e0975f9ba5b6cd546b189bf31204d558dc5d8
#7 CACHED

#8 [4/5] WORKDIR json-c
#8 sha256:42c03f78d658f7c2d0f5bc1d3e9fd456d75c680b93f94c59c5e0df5b5467ef8c
#8 CACHED

#10 [5/5] COPY build.sh *.cc *.dict /src/
#10 sha256:317a8b4bd8e85da166a66990f6049571a96db93fca67ee38d6ef5bea3a480af3
#10 DONE 0.6s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:cbf9f2f16e2bcb919358f7b47701ace17f5d1d5fdbe0c3fc2255ffa9c9ea37ee 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer 0.0s done
#11 DONE 0.4s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:a44e78db48c91cc128376dd29c69a4dc7df0c71139f7fc7bb78d9c9b9c38b7a3
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:b094952700d1aba682a5838ab67d2313df2ca38a64e1c503fc1424121b77fbd9
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer:latest
#3 sha256:fad29d874cadb4de45cc9fa47791a866cbdbb67450fb9c1cd3bd2d8a3295d91d
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer
#5 sha256:905b52b1335fbac54cab6153234a34b1cfe4857d69d845db4b93dc8979128b2c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate
#4 sha256:09b7f4de1d62c260641c81436e30fbd1d989ff3f3aa991b2e9c88d34201ca46c
#4 ERROR: gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer
#5 sha256:905b52b1335fbac54cab6153234a34b1cfe4857d69d845db4b93dc8979128b2c
#5 DONE 0.4s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:c28239a2af9ec2c9c557e8e16c152ecfb88a56ed566a975b297e3f6dabb6a8fd
#6 0.457 Cloning into '/afl'...
#6 1.324 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.324 
#6 1.324 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.324 changes and commit them, and you can discard any commits you make in this
#6 1.324 state without impacting any branches by switching back to a branch.
#6 1.324 
#6 1.324 If you want to create a new branch to retain commits you create, you may
#6 1.324 do so (now or later) by using -c with the switch command. Example:
#6 1.324 
#6 1.324   git switch -c <new-branch-name>
#6 1.324 
#6 1.324 Or undo this operation with:
#6 1.324 
#6 1.324   git switch -
#6 1.324 
#6 1.324 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.324 
#6 1.324 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.364 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.365 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.541 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.547 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.917 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.232 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.659 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.808 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.209 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.447 ln -sf afl-as as
#6 5.449 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.452 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.453 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 5.7s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:0ae8024ec304793a2f89b7505d07441cdfbcba3a29addbe5b32635d6d7b58b01
#7 0.769 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.912 Hit:2 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 0.936 Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.999 Hit:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.999 Hit:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 2.505 Reading package lists...
#7 4.225 Reading package lists...
#7 5.663 Building dependency tree...
#7 5.875 Reading state information...
#7 6.121 wget is already the newest version (1.20.3-1ubuntu2).
#7 6.121 0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
#7 6.138 --2022-02-17 20:19:34--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 6.140 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.110.133, 185.199.111.133, 185.199.108.133, ...
#7 6.142 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.110.133|:443... connected.
#7 6.166 HTTP request sent, awaiting response... 200 OK
#7 6.336 Length: 9177 (9.0K) [text/plain]
#7 6.336 Saving to: '/afl/afl_driver.cpp'
#7 6.336 
#7 6.336      0K ........                                              100% 7.15M=0.001s
#7 6.337 
#7 6.337 2022-02-17 20:19:34 (7.15 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 6.337 
#7 8.093 ar: creating /libAFL.a
#7 DONE 8.6s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:a691663b1ae0114e6a09ebb2246e44f46a540bd0599729af88ee9661bf8f5c28 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:484705b4fe2f1afe876d64393f1173de78c4281105d76ef742d36e044f24a074
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:0e7d8a97d03b7cc80d6b76c548457aee3f1886023f34cdd410465656b030f16e
#2 transferring context: 34B done
#2 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:7f3cfbde6b14b133be2d665533f1d4385c98ec1a841b2a8654ef0b8cd2f273c7
#8 transferring context: 559B 0.2s done
#8 DONE 0.3s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:194043f9cda5ef587158c18653feb227779437fe1863ad0f30a9b365d2a47bb8
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:88730db758b8f1ff94364a37e396ce9dda35c8a908f56d2f6b3cd56713c782bc
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:55bd199bfbbf007ec70a961ef35efee56a240a1c3001b6c2d87abb05fef7b8a3
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:8955f69e2164695379d78f417d6ddaab8651c084e50fae83b9094e2441baa161
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:278d1048be89ac10e6821499149688e394f017ddb53c5305e97cdbe9ed6d8c79
#13 writing image sha256:278d1048be89ac10e6821499149688e394f017ddb53c5305e97cdbe9ed6d8c79 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:61dcd604cccd0bf83224f4ca3f9139777f1414562730babb20b7836a08065695
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:d415bd3beced24777ae514b14409727b89d291162af5078acd9e3fcdbb6c01a8
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate:latest
#3 sha256:2167d9e50509fbc159f3cbdd3ba70273e256e83ef9164ef5cbc305497360bb13
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:bc6add0737122d05ce8402a99bd60fa603247a613c2dddc758f6ad5f2f9a0979
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate
#6 sha256:fe1a1209bb11dc49fafad765c809e6262713d8bf8651391acb701fbcb3d35df7
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer
#5 sha256:9fe63b7def97b4fc7bcaf1b76abfbe8a4aa094dcf67c093fecf1fdd0964fc004
#5 ERROR: gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:bc6add0737122d05ce8402a99bd60fa603247a613c2dddc758f6ad5f2f9a0979
#12 transferring context: 669.91kB 0.1s done
#12 DONE 0.2s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate
#6 sha256:fe1a1209bb11dc49fafad765c809e6262713d8bf8651391acb701fbcb3d35df7
#6 DONE 0.9s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:46a234d2fc15eb7ba0480dc60634a18d4ab4ecaec935620a7cc818df76dcd19a
#8 DONE 0.8s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:29cf6a557e0ccd6bed067bed75a0f67eb625fc6db7ee1dd81ef2460c4995083b
#9 DONE 38.6s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:0d7b8754ee62ddc7bde5246b71b0f0e702268920d99ea3a7c4769f6b566eef31
#10 DONE 0.4s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:b994791b9d213cc5b9a88f0c8c919857e5a4967b7c0efc626eef17ef1382e99d
#11 DONE 71.1s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:b6c9497865ce6f5e22052852255e86690f2464a16ff7d7259b05666427eaec85
#13 DONE 1.0s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:59f35d7e982084f56caae926141f4adef7c2ac1aec5238137dd29fc709f32103
#14 DONE 0.9s

#15 [stage-1  8/13] COPY benchmarks/json-c_tokener_parse_ex_fuzzer/benchmark.yaml /
#15 sha256:caf0e21f488b22444c004bf9d09c4ee727674867ac79fceeecf7faed62835a75
#15 DONE 0.4s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:458d4ff7ce679561a968a57af6f5cce86165897e0ac29620f6c2b7663134da9e
#16 DONE 5.2s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:88d7edbb98ab2a76f2b1a1652deabebea088003fc0ea1b31ba3759c6d24d9ca4
#17 DONE 2.6s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:70879184b1fe85a35572b1bb875c310274f640d65374847384bab8d6d3658fb2
#18 0.633 Checking out commit 4e9aa505
#18 1.734 error: pathspec '4e9aa505' did not match any file(s) known to git
#18 1.750 error: pathspec '4e9aa505' did not match any file(s) known to git
#18 1.758 error: pathspec '4e9aa505' did not match any file(s) known to git
#18 1.800 error: pathspec '4e9aa505' did not match any file(s) known to git
#18 1.820 Checkout unsuccessful.
#18 DONE 4.8s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:03f4130dc8fcc692399d069abe5f0a16d936bc3a4f1d4f230fa5c011a2351c35
#19 DONE 1.0s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:ba3469ed60bad795f08ba877121564d8ecf173549a4f29058196798b790b4101
#20 0.602 Run fuzzer_build to build the target
#20 0.733 FUZZ_TARGET = tokener_parse_ex_fuzzer
#20 0.733 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.733 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.760 Building benchmark json-c_tokener_parse_ex_fuzzer with fuzzer afl
#20 0.763 + ./autogen.sh
#20 0.764 /src/build.sh: line 18: ./autogen.sh: No such file or directory
#20 0.764 Traceback (most recent call last):
#20 0.764   File "<string>", line 1, in <module>
#20 0.765   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 0.765     utils.build_benchmark()
#20 0.765   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 0.765     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 0.765   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 0.766     raise CalledProcessError(retcode, cmd)
#20 0.766 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 127.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2804973: .afl-json-c_tokener_parse_ex_fuzzer-builder] Error 1
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:1ed6ae75140ce13dbc0ed98c3aa9ae0756c7d3cfd3667aed73868cafc204c012
#1 transferring dockerfile: 32B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:4bcceb303ed1a838ea47e6341c64bec1509c2465aeee7898026e92a86bba5b44
#2 transferring context: 2B done
#2 DONE 0.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer
#4 sha256:370a0b2b5e5a51766b20158a9aa4eb8c5e81d32d4bc758feb6e6b06b1a5b0403
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:16e4e6822168737485f1817e8054bcfe0d0ad9cd201836b2985580c253140fee
#9 transferring context: 123B done
#9 DONE 0.1s

#8 [4/5] WORKDIR json-c
#8 sha256:42c03f78d658f7c2d0f5bc1d3e9fd456d75c680b93f94c59c5e0df5b5467ef8c
#8 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:1b680dfd08ff668505b992cdb80d6a0ea43cbc2f7a85f533f40c1edf5f50c5ba
#6 CACHED

#7 [3/5] RUN git clone --depth 1 https://github.com/json-c/json-c.git json-c
#7 sha256:67d89b44b36825af50527903729e0975f9ba5b6cd546b189bf31204d558dc5d8
#7 CACHED

#10 [5/5] COPY build.sh *.cc *.dict /src/
#10 sha256:bf53b581071c074d9fd1c08c0e920cf16e2db48b28fda6c1bde7f1440d448225
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:cbf9f2f16e2bcb919358f7b47701ace17f5d1d5fdbe0c3fc2255ffa9c9ea37ee
#11 writing image sha256:cbf9f2f16e2bcb919358f7b47701ace17f5d1d5fdbe0c3fc2255ffa9c9ea37ee 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer done
#11 DONE 0.6s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:e95656c6b079dddc7586e539b18bdf3e5345c3aa4f81719438139b0c4cedda5a
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:525511b2156568340102dd6e63e1144550675705280d838541c7eedf53d3fac4
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer:latest
#3 sha256:fad29d874cadb4de45cc9fa47791a866cbdbb67450fb9c1cd3bd2d8a3295d91d
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate
#4 sha256:09b7f4de1d62c260641c81436e30fbd1d989ff3f3aa991b2e9c88d34201ca46c
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/json-c_tokener_parse_ex_fuzzer
#5 sha256:905b52b1335fbac54cab6153234a34b1cfe4857d69d845db4b93dc8979128b2c
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:c28239a2af9ec2c9c557e8e16c152ecfb88a56ed566a975b297e3f6dabb6a8fd
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:0ae8024ec304793a2f89b7505d07441cdfbcba3a29addbe5b32635d6d7b58b01
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:a691663b1ae0114e6a09ebb2246e44f46a540bd0599729af88ee9661bf8f5c28
#8 writing image sha256:a691663b1ae0114e6a09ebb2246e44f46a540bd0599729af88ee9661bf8f5c28 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:0070a125f7dde115bfdbb22c51ea710e383258343d9e3912f09422c048bc4d75
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:b8ce473b69ec93713413964697cafb56fc0ccb1bae7f63c1eb7ba8c249bcdae4
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:68fa0e1486ae4c4b587adb5bb713376876a23733882c2928fa413d47ec6bfa91
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:9057ddd952d024838c79855675d623b5bf35840db06f728340111b380d3f792c
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:69f345004625f32fc3d8d585b2da55c03c453ebde667ca2ff73a16da1bef0471
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:bdcbe382252fcae52ffa98a8355116872aac2b8c808c9cc3d021907b529d9ea6
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:4d50e2518b4877f5c09c9e5d1cea07facd4eb509aa664458b5124ec7c492a0d6
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:278d1048be89ac10e6821499149688e394f017ddb53c5305e97cdbe9ed6d8c79 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:c9b6ba0c800cb81aaf2d621f5fbab5223462d98f09e4f8fd0932afbfcd490a14
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:160dbd48310433c957b29c32135e8f79bfc686a3d8e70f20da4bfa706bb253d3
#2 transferring context: 34B done
#2 DONE 0.2s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate:latest
#3 sha256:2167d9e50509fbc159f3cbdd3ba70273e256e83ef9164ef5cbc305497360bb13
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:f887df40ba251bf213ac5c524b2cb37b291ff502061dc18fb31cd965e84ce4c4
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer-intermediate
#6 sha256:fe1a1209bb11dc49fafad765c809e6262713d8bf8651391acb701fbcb3d35df7
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer
#5 sha256:9fe63b7def97b4fc7bcaf1b76abfbe8a4aa094dcf67c093fecf1fdd0964fc004
#5 ERROR: gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:f887df40ba251bf213ac5c524b2cb37b291ff502061dc18fb31cd965e84ce4c4
#12 transferring context: 669.91kB 0.1s done
#12 DONE 0.2s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:ee07f0b41a0bd9d96f8b89e96924a106afb1b66bd404559a179ca12fdf4f4e83
#14 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:837723737d5827b4b9aa013979fbfd72e0be537a9536614d8e978dc5d10b69f7
#17 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:0d7b8754ee62ddc7bde5246b71b0f0e702268920d99ea3a7c4769f6b566eef31
#10 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:4717e084fdcbb3ab692fed4dd93f27cbf83515986afe798605c44b9f851d077b
#13 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:46a234d2fc15eb7ba0480dc60634a18d4ab4ecaec935620a7cc818df76dcd19a
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:29cf6a557e0ccd6bed067bed75a0f67eb625fc6db7ee1dd81ef2460c4995083b
#9 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:b994791b9d213cc5b9a88f0c8c919857e5a4967b7c0efc626eef17ef1382e99d
#11 CACHED

#15 [stage-1  8/13] COPY benchmarks/json-c_tokener_parse_ex_fuzzer/benchmark.yaml /
#15 sha256:9c40a420b3a3ae739377abd2acaf206492343f0322601ccd613f622e851bf7ea
#15 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:417192f88ebd13dda85a2ca0a844315702f3605b1e0f87c66ade28b748f91920
#18 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:bbf4fa16e7d83b70ff9c2ce81a37474a79d7235c26376441684f7afd94b5c8cb
#16 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:1c73a966dd5b7846534c1c5cd791ea24e10fea8ecf23457ee04bbf4d10379cb8
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:ff8f47a3f4eca3e09413072196c7de6ff3b437c5ea7c9ebcd545c38b49f3d6a4
#20 0.513 Run fuzzer_build to build the target
#20 0.638 FUZZ_TARGET = tokener_parse_ex_fuzzer
#20 0.638 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.638 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.643 Building benchmark json-c_tokener_parse_ex_fuzzer with fuzzer afl
#20 0.646 + ./autogen.sh
#20 0.647 /src/build.sh: line 18: ./autogen.sh: No such file or directory
#20 0.647 Traceback (most recent call last):
#20 0.647   File "<string>", line 1, in <module>
#20 0.648   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 0.648     utils.build_benchmark()
#20 0.648   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 0.648     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 0.648   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 0.648     raise CalledProcessError(retcode, cmd)
#20 0.648 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 127.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/json-c_tokener_parse_ex_fuzzer:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2804973: .afl-json-c_tokener_parse_ex_fuzzer-builder] Error 1
