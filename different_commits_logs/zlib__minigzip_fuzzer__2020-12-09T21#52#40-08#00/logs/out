WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: zlib_minigzip_fuzzer.
INFO:root:Please run "make test-run-afl-zlib_minigzip_fuzzer" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:a5d9fb3b44b72e2e8b0cea50794cdc7e34350fb80287dd9383f09bdc5a323d23
#1 transferring dockerfile: 925B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:b44961a69f1e7e93650da7ee4e9be36c8d61c481381b3644a9be753c1593bbcf
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/zlib_minigzip_fuzzer
#4 sha256:864f2fbe97d42bc174a8bbb4850592b52439069aa63d0c376549b95ae21e1403
#4 ...

#9 [internal] load build context
#9 sha256:5085ad1c3682f6aa770daa910109dd59358d6126ffc40bb5779f0e3720fe4050
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:77750d283f2957d1beeddda2e8f6c5604ab5f969a3616e9cac40f4261ca04c0a
#5 sha256:7999addb2cd81975cd6421c6aaef5643a901995c540a40e8df741ab4c30f6043
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/zlib_minigzip_fuzzer
#4 sha256:864f2fbe97d42bc174a8bbb4850592b52439069aa63d0c376549b95ae21e1403
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/zlib_minigzip_fuzzer:latest: not found

#9 [internal] load build context
#9 sha256:5085ad1c3682f6aa770daa910109dd59358d6126ffc40bb5779f0e3720fe4050
#9 transferring context: 34.45kB done
#9 DONE 0.0s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:52e32c454805a8c94e441551d01b16d090304920e0b4ce6b465dec91bafa72a3
#6 CACHED

#7 [3/5] RUN git clone --depth 1 -b develop https://github.com/madler/zlib.git
#7 sha256:f0bc315b74d41abe7af8731ffa647bc6fe9bf8a67b7a4851eacf3d1ca44b4120
#7 CACHED

#8 [4/5] WORKDIR zlib
#8 sha256:64713c70ad922c74cc30dabac865ace84eb0dd0f10ba324f819d64d403c1585f
#8 CACHED

#10 [5/5] COPY build.sh *_fuzzer.c* /src/
#10 sha256:a27a351b2a912d5396d44b29b5e8d83556bc8882a0dc2429cd2bfec1226dad79
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:62efc2de0b5969692ab4d69d20102e44a9338594321db16cb83fc2b696faefd2 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/zlib_minigzip_fuzzer done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/zlib_minigzip_fuzzer:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:d7cdc4de17701321b51328d6389d3ea54b24837f7c0b8991931514a265407325
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:d90c7b59aa7b936832ca0464961c3e51afedd43644138d283b0f64f37d157b0c
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/zlib_minigzip_fuzzer:latest
#3 sha256:b9c6043b05997f312d7062393d05102e4370d0f553f495428fec4e6fe7a54ec8
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/zlib_minigzip_fuzzer
#5 sha256:545f1ea366614b0025b77068f4d9986b61078b9c5c6d32f69c766f9a74f1ec22
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer-intermediate
#4 sha256:6f3108a7e2a7cd4bf1e49d5180653b64aeb9b5365d04e328582f9af73ab33cbb
#4 ERROR: gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer-intermediate:latest: not found

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:0f8d8cadcaf0630cc9e2a116ca8bdebdd9e2722ae6fba3875bfeb5f762846223
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:1f8590ca064e51d98c10e4aad10d0f61a19c4ccdfafec4ce4b098a28a54903ad
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:6efaf047c93c939bc3378fb38fb1464ad52e9d75158d5ffb2389df1bdd807b96 done
#8 naming to gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:ddd2bd8e15e169a0586fe9ae47dc63c51b43a01ede74e874dd7aee0291c73e05
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:37a43f2fbbb00ffa6661a470ded310d342a2d10e30a4d43834f2f91a5509bd85
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:0bb0d8edbac9b405d8d58d0b6c6d489d5eceb49378978ccfc379301fdb84793b
#8 transferring context: 559B 0.1s done
#8 DONE 0.2s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:2d17437a1e9e92c5e720cb1ca5390ce3b1a8091a23999a642dd5dbfda6795713
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:6706a152e99c4ee9c6fc9be53fc0661cb7e42dc5c6633aaf9cc4f27e6a7ca83b
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:79b1e5b51dec32281b855c4cf185ab1be20369d9fc180aa4547e490b0b572020
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:cc96bdf9b9a2caf605a0efab22c29f4c4432b16c88d47a5738e041927682ce68
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:db37108b741762d6fc963c78f4ea99d80edbbe38f2ea9e4cf93847b349417cfa 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:37d4737d6e2bbe13be5d657b047fe08cc80f8dfd1ecfbb6d80247439813da181
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:7934bf7e5ebfb23a25b3f062ad8818317af290b1882ed35f0250c9167715bf74
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer-intermediate:latest
#3 sha256:0432d617f36833278f18bc26ebc01410d4d0f6145be99bb2e4fc979dc735b74a
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:c7a78119c339721b52d1c7e6cd6c08de096d191b495e08c5a6ab8c2373f0f0c5
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer-intermediate
#6 sha256:750d52d480d47cab5d22fda6404f4e2729b72518dff527b2f4e008bbb8b4c400
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer
#5 sha256:fe0fcc0795fa2950faa6f1b6a7e1a97e34feaa4b61524064d3fef743cd6f8073
#5 ERROR: gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:c7a78119c339721b52d1c7e6cd6c08de096d191b495e08c5a6ab8c2373f0f0c5
#12 transferring context: 669.88kB 0.1s done
#12 DONE 0.1s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:f552186c3ba26bd49ea25b7994b64ca833fbb705d8464b9c27fe4738e00db567
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:01de7e2c286fe0f14dcedcdc2bccb6ada6a085598d8bb1c83857c5f7a187054f
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:a9a7b6888c0b2844aa5f479567cde0f458c6440d050ea53041cabf3899c9fc4c
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:346ab67404c282359990a07f80a65671224a98956a58d6ee4190aeec4b371526
#11 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:94fe7227cb6c23093193b47db2fdedd3ac076d139a6227131f3ec62d2260aeda
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:8c87cbff7cdfad28f475c4b64e941173b668f1ab2f44945f86495c49f992312c
#14 DONE 0.6s

#15 [stage-1  8/13] COPY benchmarks/zlib_minigzip_fuzzer/benchmark.yaml /
#15 sha256:9f0506f588e8e5634f85d71c4546247d2d6621b642180affca26d0f5f3b8c9c5
#15 DONE 0.1s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:265b49c8e2b4d303738fbd12cc1c6d061b1fae62760c1cbfc6d2c7e3c4fcadfa
#16 DONE 1.1s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:dbbdae0ca62ec1efa859929fecb317cd4b4e32590f5784701086c8f419ea0176
#17 DONE 0.2s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:d4be5bff44467adb92a93505360a567587f2d4f0ed550cc4a4b8caf32ea6b5f2
#18 0.454 Checking out commit 1d5a2cd8
#18 2.472 From https://github.com/madler/zlib
#18 2.472  * [new tag]         v0.71       -> v0.71
#18 2.472  * [new tag]         v0.79       -> v0.79
#18 2.472  * [new tag]         v0.8        -> v0.8
#18 2.472  * [new tag]         v0.9        -> v0.9
#18 2.473  * [new tag]         v0.91       -> v0.91
#18 2.473  * [new tag]         v0.92       -> v0.92
#18 2.473  * [new tag]         v0.93       -> v0.93
#18 2.474  * [new tag]         v0.94       -> v0.94
#18 2.474  * [new tag]         v0.95       -> v0.95
#18 2.474  * [new tag]         v0.99       -> v0.99
#18 2.475  * [new tag]         v1.0-pre    -> v1.0-pre
#18 2.475  * [new tag]         v1.0.1      -> v1.0.1
#18 2.475  * [new tag]         v1.0.2      -> v1.0.2
#18 2.475  * [new tag]         v1.0.4      -> v1.0.4
#18 2.476  * [new tag]         v1.0.5      -> v1.0.5
#18 2.476  * [new tag]         v1.0.7      -> v1.0.7
#18 2.476  * [new tag]         v1.0.8      -> v1.0.8
#18 2.476  * [new tag]         v1.0.9      -> v1.0.9
#18 2.477  * [new tag]         v1.1.0      -> v1.1.0
#18 2.477  * [new tag]         v1.1.1      -> v1.1.1
#18 2.477  * [new tag]         v1.1.2      -> v1.1.2
#18 2.478  * [new tag]         v1.1.3      -> v1.1.3
#18 2.478  * [new tag]         v1.1.4      -> v1.1.4
#18 2.478  * [new tag]         v1.2.0      -> v1.2.0
#18 2.478  * [new tag]         v1.2.0.1    -> v1.2.0.1
#18 2.479  * [new tag]         v1.2.0.2    -> v1.2.0.2
#18 2.479  * [new tag]         v1.2.0.3    -> v1.2.0.3
#18 2.479  * [new tag]         v1.2.0.4    -> v1.2.0.4
#18 2.480  * [new tag]         v1.2.0.5    -> v1.2.0.5
#18 2.480  * [new tag]         v1.2.0.6    -> v1.2.0.6
#18 2.480  * [new tag]         v1.2.0.7    -> v1.2.0.7
#18 2.480  * [new tag]         v1.2.0.8    -> v1.2.0.8
#18 2.481  * [new tag]         v1.2.1      -> v1.2.1
#18 2.481  * [new tag]         v1.2.1.1    -> v1.2.1.1
#18 2.481  * [new tag]         v1.2.1.2    -> v1.2.1.2
#18 2.481  * [new tag]         v1.2.10     -> v1.2.10
#18 2.482  * [new tag]         v1.2.11     -> v1.2.11
#18 2.482  * [new tag]         v1.2.2      -> v1.2.2
#18 2.482  * [new tag]         v1.2.2.1    -> v1.2.2.1
#18 2.482  * [new tag]         v1.2.2.2    -> v1.2.2.2
#18 2.482  * [new tag]         v1.2.2.3    -> v1.2.2.3
#18 2.483  * [new tag]         v1.2.2.4    -> v1.2.2.4
#18 2.483  * [new tag]         v1.2.3      -> v1.2.3
#18 2.483  * [new tag]         v1.2.3.1    -> v1.2.3.1
#18 2.483  * [new tag]         v1.2.3.2    -> v1.2.3.2
#18 2.483  * [new tag]         v1.2.3.3    -> v1.2.3.3
#18 2.484  * [new tag]         v1.2.3.4    -> v1.2.3.4
#18 2.484  * [new tag]         v1.2.3.5    -> v1.2.3.5
#18 2.484  * [new tag]         v1.2.3.6    -> v1.2.3.6
#18 2.484  * [new tag]         v1.2.3.7    -> v1.2.3.7
#18 2.485  * [new tag]         v1.2.3.8    -> v1.2.3.8
#18 2.485  * [new tag]         v1.2.3.9    -> v1.2.3.9
#18 2.485  * [new tag]         v1.2.4      -> v1.2.4
#18 2.485  * [new tag]         v1.2.4-pre1 -> v1.2.4-pre1
#18 2.485  * [new tag]         v1.2.4-pre2 -> v1.2.4-pre2
#18 2.486  * [new tag]         v1.2.4.1    -> v1.2.4.1
#18 2.486  * [new tag]         v1.2.4.2    -> v1.2.4.2
#18 2.486  * [new tag]         v1.2.4.3    -> v1.2.4.3
#18 2.486  * [new tag]         v1.2.4.4    -> v1.2.4.4
#18 2.486  * [new tag]         v1.2.4.5    -> v1.2.4.5
#18 2.487  * [new tag]         v1.2.5      -> v1.2.5
#18 2.487  * [new tag]         v1.2.5.1    -> v1.2.5.1
#18 2.487  * [new tag]         v1.2.5.2    -> v1.2.5.2
#18 2.487  * [new tag]         v1.2.5.3    -> v1.2.5.3
#18 2.488  * [new tag]         v1.2.6      -> v1.2.6
#18 2.488  * [new tag]         v1.2.6.1    -> v1.2.6.1
#18 2.488  * [new tag]         v1.2.7      -> v1.2.7
#18 2.488  * [new tag]         v1.2.7.1    -> v1.2.7.1
#18 2.488  * [new tag]         v1.2.7.2    -> v1.2.7.2
#18 2.489  * [new tag]         v1.2.7.3    -> v1.2.7.3
#18 2.489  * [new tag]         v1.2.8      -> v1.2.8
#18 2.489  * [new tag]         v1.2.9      -> v1.2.9
#18 2.496 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 2.508 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 2.515 error: pathspec '1d5a2cd8' did not match any file(s) known to git
#18 2.563 Checkout unsuccessful.
#18 DONE 2.8s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:0d28ab871ffbeb31b1ea3fa6c80e9378d34c8d17de7c1afa6703d649e07e29f2
#19 DONE 0.4s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:9574ec9ca2bc47b69498ebb1ba9079eb0da1119ae77feae6c897e1f8099dd2ef
#20 0.393 Run fuzzer_build to build the target
#20 0.512 FUZZ_TARGET = minigzip_fuzzer
#20 0.512 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.512 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.517 Building benchmark zlib_minigzip_fuzzer with fuzzer afl
#20 0.521 + ./configure
#20 0.629 Checking for shared library support...
#20 0.697 Building shared library libz.so.1.2.11.1-motley with clang.
#20 0.735 Checking for size_t... Yes.
#20 0.760 Checking for off64_t... Yes.
#20 0.761 Checking for fseeko... Yes.
#20 0.911 Checking for strerror... Yes.
#20 0.950 Checking for unistd.h... Yes.
#20 0.980 Checking for stdarg.h... Yes.
#20 1.025 Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().
#20 1.166 Checking for vsnprintf() in stdio.h... Yes.
#20 1.202 Checking for return value of vsnprintf()... Yes.
#20 1.228 Checking for attribute(visibility) support... Yes.
#20 1.244 ++ nproc
#20 1.246 + make -j8 clean
#20 1.248 rm -f *.o *.lo *~ \
#20 1.248    example minigzip examplesh minigzipsh \
#20 1.248    example64 minigzip64 \
#20 1.248    infcover \
#20 1.248    libz.* foo.gz so_locations \
#20 1.248    _match.s maketree contrib/infback9/*.o
#20 1.251 rm -rf objs
#20 1.252 rm -f *.gcda *.gcno *.gcov
#20 1.255 rm -f contrib/infback9/*.gcda contrib/infback9/*.gcno contrib/infback9/*.gcov
#20 1.258 ++ nproc
#20 1.259 + make -j8 all
#20 1.263 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -c -o example.o test/example.c
#20 1.263 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o adler32.o adler32.c
#20 1.263 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o crc32.o crc32.c
#20 1.264 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o deflate.o deflate.c
#20 1.265 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o infback.o infback.c
#20 1.265 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o inffast.o inffast.c
#20 1.266 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o inflate.o inflate.c
#20 1.266 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o inftrees.o inftrees.c
#20 1.456 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o trees.o trees.c
#20 1.486 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o zutil.o zutil.c
#20 1.497 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o compress.o compress.c
#20 1.566 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o uncompr.o uncompr.c
#20 1.572 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzclose.o gzclose.c
#20 1.577 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzlib.o gzlib.c
#20 1.607 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzread.o gzread.c
#20 1.641 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzwrite.o gzwrite.c
#20 1.654 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -c -o minigzip.o test/minigzip.c
#20 1.834 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/adler32.o adler32.c
#20 1.862 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/crc32.o crc32.c
#20 1.904 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/deflate.o deflate.c
#20 1.942 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/infback.o infback.c
#20 1.961 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/inffast.o inffast.c
#20 2.037 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/inflate.o inflate.c
#20 2.184 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/inftrees.o inftrees.c
#20 2.223 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/trees.o trees.c
#20 2.320 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/zutil.o zutil.c
#20 2.410 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/compress.o compress.c
#20 2.412 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/uncompr.o uncompr.c
#20 2.464 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzclose.o gzclose.c
#20 2.490 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzlib.o gzlib.c
#20 2.494 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzread.o gzread.c
#20 2.552 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzwrite.o gzwrite.c
#20 2.601 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -D_FILE_OFFSET_BITS=64 -c -o example64.o test/example.c
#20 2.667 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -D_FILE_OFFSET_BITS=64 -c -o minigzip64.o test/minigzip.c
#20 2.735 ar rc libz.a adler32.o crc32.o deflate.o infback.o inffast.o inflate.o inftrees.o trees.o zutil.o compress.o uncompr.o gzclose.o gzlib.o gzread.o gzwrite.o 
#20 2.759 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o example example.o -L. libz.a
#20 2.823 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o minigzip minigzip.o -L. libz.a
#20 2.847 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o example64 example64.o -L. libz.a
#20 2.847 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o minigzip64 minigzip64.o -L. libz.a
#20 3.344 clang -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o libz.so.1.2.11.1-motley adler32.lo crc32.lo deflate.lo infback.lo inffast.lo inflate.lo inftrees.lo trees.lo zutil.lo compress.lo uncompr.lo gzclose.lo gzlib.lo gzread.lo gzwrite.lo  -lc 
#20 3.408 rm -f libz.so libz.so.1
#20 3.410 ln -s libz.so.1.2.11.1-motley libz.so
#20 3.411 ln -s libz.so.1.2.11.1-motley libz.so.1
#20 3.414 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o examplesh example.o -L. libz.so.1.2.11.1-motley
#20 3.414 clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o minigzipsh minigzip.o -L. libz.so.1.2.11.1-motley
#20 3.529 ++ find /src -name '*_fuzzer.cc'
#20 3.551 + for f in $(find $SRC -name '*_fuzzer.cc')
#20 3.551 ++ basename -s .cc /src/zlib_uncompress2_fuzzer.cc
#20 3.552 + b=zlib_uncompress2_fuzzer
#20 3.552 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I. /src/zlib_uncompress2_fuzzer.cc -o /out/zlib_uncompress2_fuzzer /libAFL.a ./libz.a
#20 3.840 + for f in $(find $SRC -name '*_fuzzer.cc')
#20 3.840 ++ basename -s .cc /src/zlib_uncompress_fuzzer.cc
#20 3.842 + b=zlib_uncompress_fuzzer
#20 3.842 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I. /src/zlib_uncompress_fuzzer.cc -o /out/zlib_uncompress_fuzzer /libAFL.a ./libz.a
#20 4.134 + zip /out/seed_corpus.zip CMakeLists.txt Makefile.in adler32.c adler32.lo adler32.o compress.c compress.lo compress.o configure.log crc32.c crc32.h crc32.lo crc32.o deflate.c deflate.h deflate.lo deflate.o example.o example64.o gzclose.c gzclose.lo gzclose.o gzguts.h gzlib.c gzlib.lo gzlib.o gzread.c gzread.lo gzread.o gzwrite.c gzwrite.lo gzwrite.o infback.c infback.lo infback.o inffast.c inffast.h inffast.lo inffast.o inffixed.h inflate.c inflate.h inflate.lo inflate.o inftrees.c inftrees.h inftrees.lo inftrees.o libz.a libz.so libz.so.1 libz.so.1.2.11.1-motley make_vms.com minigzip.o minigzip64.o treebuild.xml trees.c trees.h trees.lo trees.o uncompr.c uncompr.lo uncompr.o zconf.h zconf.h.cmakein zconf.h.in zlib.3 zlib.3.pdf zlib.h zlib.map zlib.pc zlib.pc.cmakein zlib.pc.in zutil.c zutil.h zutil.lo zutil.o
#20 4.138   adding: CMakeLists.txt (deflated 68%)
#20 4.138   adding: Makefile.in (deflated 77%)
#20 4.139   adding: adler32.c (deflated 69%)
#20 4.139   adding: adler32.lo (deflated 70%)
#20 4.140   adding: adler32.o (deflated 70%)
#20 4.141   adding: compress.c (deflated 63%)
#20 4.141   adding: compress.lo (deflated 71%)
#20 4.141   adding: compress.o (deflated 71%)
#20 4.142   adding: configure.log (deflated 79%)
#20 4.142   adding: crc32.c (deflated 75%)
#20 4.144   adding: crc32.h (deflated 61%)
#20 4.183   adding: crc32.lo (deflated 43%)
#20 4.184   adding: crc32.o (deflated 47%)
#20 4.185   adding: deflate.c (deflated 76%)
#20 4.188   adding: deflate.h (deflated 64%)
#20 4.189   adding: deflate.lo (deflated 77%)
#20 4.194   adding: deflate.o (deflated 79%)
#20 4.199   adding: example.o (deflated 77%)
#20 4.200   adding: example64.o (deflated 77%)
#20 4.201   adding: gzclose.c (deflated 41%)
#20 4.201   adding: gzclose.lo (deflated 67%)
#20 4.202   adding: gzclose.o (deflated 67%)
#20 4.202   adding: gzguts.h (deflated 63%)
#20 4.202   adding: gzlib.c (deflated 73%)
#20 4.203   adding: gzlib.lo (deflated 77%)
#20 4.204   adding: gzlib.o (deflated 78%)
#20 4.205   adding: gzread.c (deflated 74%)
#20 4.206   adding: gzread.lo (deflated 74%)
#20 4.207   adding: gzread.o (deflated 74%)
#20 4.209   adding: gzwrite.c (deflated 79%)
#20 4.209   adding: gzwrite.lo (deflated 75%)
#20 4.211   adding: gzwrite.o (deflated 75%)
#20 4.212   adding: infback.c (deflated 76%)
#20 4.213   adding: infback.lo (deflated 69%)
#20 4.214   adding: infback.o (deflated 69%)
#20 4.216   adding: inffast.c (deflated 75%)
#20 4.216   adding: inffast.h (deflated 32%)
#20 4.216   adding: inffast.lo (deflated 69%)
#20 4.217   adding: inffast.o (deflated 66%)
#20 4.218   adding: inffixed.h (deflated 75%)
#20 4.218   adding: inflate.c (deflated 77%)
#20 4.220   adding: inflate.h (deflated 67%)
#20 4.220   adding: inflate.lo (deflated 73%)
#20 4.224   adding: inflate.o (deflated 73%)
#20 4.228   adding: inftrees.c (deflated 67%)
#20 4.228   adding: inftrees.h (deflated 58%)
#20 4.228   adding: inftrees.lo (deflated 67%)
#20 4.229   adding: inftrees.o (deflated 66%)
#20 4.230   adding: libz.a (deflated 73%)
#20 4.250   adding: libz.so (deflated 55%)
#20 4.263   adding: libz.so.1 (deflated 55%)
#20 4.275   adding: libz.so.1.2.11.1-motley (deflated 55%)
#20 4.287   adding: make_vms.com (deflated 72%)
#20 4.288   adding: minigzip.o (deflated 74%)
#20 4.288   adding: minigzip64.o (deflated 74%)
#20 4.289   adding: treebuild.xml (deflated 80%)
#20 4.289   adding: trees.c (deflated 73%)
#20 4.291   adding: trees.h (deflated 83%)
#20 4.292   adding: trees.lo (deflated 72%)
#20 4.293   adding: trees.o (deflated 71%)
#20 4.295   adding: uncompr.c (deflated 62%)
#20 4.295   adding: uncompr.lo (deflated 66%)
#20 4.296   adding: uncompr.o (deflated 66%)
#20 4.296   adding: zconf.h (deflated 73%)
#20 4.297   adding: zconf.h.cmakein (deflated 73%)
#20 4.298   adding: zconf.h.in (deflated 73%)
#20 4.298   adding: zlib.3 (deflated 54%)
#20 4.298   adding: zlib.3.pdf (deflated 17%)
#20 4.299   adding: zlib.h (deflated 73%)
#20 4.304   adding: zlib.map (deflated 68%)
#20 4.305   adding: zlib.pc (deflated 38%)
#20 4.305   adding: zlib.pc.cmakein (deflated 39%)
#20 4.305   adding: zlib.pc.in (deflated 38%)
#20 4.305   adding: zutil.c (deflated 65%)
#20 4.305   adding: zutil.h (deflated 63%)
#20 4.305   adding: zutil.lo (deflated 72%)
#20 4.306   adding: zutil.o (deflated 73%)
#20 4.307 ++ find /src -name '*_fuzzer.c'
#20 4.326 + for f in $(find $SRC -name '*_fuzzer.c')
#20 4.327 ++ basename -s .c /src/checksum_fuzzer.c
#20 4.328 + b=checksum_fuzzer
#20 4.328 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/checksum_fuzzer.c -c -o /tmp/checksum_fuzzer.o
#20 4.405 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/checksum_fuzzer /tmp/checksum_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 4.644 + rm -f /tmp/checksum_fuzzer.o
#20 4.646 + ln -sf /out/seed_corpus.zip /out/checksum_fuzzer_seed_corpus.zip
#20 4.647 + for f in $(find $SRC -name '*_fuzzer.c')
#20 4.648 ++ basename -s .c /src/compress_fuzzer.c
#20 4.648 + b=compress_fuzzer
#20 4.648 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/compress_fuzzer.c -c -o /tmp/compress_fuzzer.o
#20 4.714 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/compress_fuzzer /tmp/compress_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 4.954 + rm -f /tmp/compress_fuzzer.o
#20 4.956 + ln -sf /out/seed_corpus.zip /out/compress_fuzzer_seed_corpus.zip
#20 4.958 + for f in $(find $SRC -name '*_fuzzer.c')
#20 4.958 ++ basename -s .c /src/example_small_fuzzer.c
#20 4.959 + b=example_small_fuzzer
#20 4.959 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/example_small_fuzzer.c -c -o /tmp/example_small_fuzzer.o
#20 5.036 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/example_small_fuzzer /tmp/example_small_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 5.284 + rm -f /tmp/example_small_fuzzer.o
#20 5.286 + ln -sf /out/seed_corpus.zip /out/example_small_fuzzer_seed_corpus.zip
#20 5.287 + for f in $(find $SRC -name '*_fuzzer.c')
#20 5.288 ++ basename -s .c /src/example_large_fuzzer.c
#20 5.289 + b=example_large_fuzzer
#20 5.289 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/example_large_fuzzer.c -c -o /tmp/example_large_fuzzer.o
#20 5.366 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/example_large_fuzzer /tmp/example_large_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 5.614 + rm -f /tmp/example_large_fuzzer.o
#20 5.616 + ln -sf /out/seed_corpus.zip /out/example_large_fuzzer_seed_corpus.zip
#20 5.617 + for f in $(find $SRC -name '*_fuzzer.c')
#20 5.618 ++ basename -s .c /src/example_flush_fuzzer.c
#20 5.619 + b=example_flush_fuzzer
#20 5.619 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/example_flush_fuzzer.c -c -o /tmp/example_flush_fuzzer.o
#20 5.691 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/example_flush_fuzzer /tmp/example_flush_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 5.931 + rm -f /tmp/example_flush_fuzzer.o
#20 5.932 + ln -sf /out/seed_corpus.zip /out/example_flush_fuzzer_seed_corpus.zip
#20 5.934 + for f in $(find $SRC -name '*_fuzzer.c')
#20 5.934 ++ basename -s .c /src/example_dict_fuzzer.c
#20 5.935 + b=example_dict_fuzzer
#20 5.935 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/example_dict_fuzzer.c -c -o /tmp/example_dict_fuzzer.o
#20 6.024 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/example_dict_fuzzer /tmp/example_dict_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 6.267 + rm -f /tmp/example_dict_fuzzer.o
#20 6.269 + ln -sf /out/seed_corpus.zip /out/example_dict_fuzzer_seed_corpus.zip
#20 6.270 + for f in $(find $SRC -name '*_fuzzer.c')
#20 6.271 ++ basename -s .c /src/minigzip_fuzzer.c
#20 6.272 + b=minigzip_fuzzer
#20 6.272 + clang -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -I. /src/minigzip_fuzzer.c -c -o /tmp/minigzip_fuzzer.o
#20 6.368 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -o /out/minigzip_fuzzer /tmp/minigzip_fuzzer.o -stdlib=libc++ /libAFL.a ./libz.a
#20 6.612 + rm -f /tmp/minigzip_fuzzer.o
#20 6.614 + ln -sf /out/seed_corpus.zip /out/minigzip_fuzzer_seed_corpus.zip
#20 6.616 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 6.9s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:f1f37b04750d2eeb8285c2f2c5696e1a491ab8b287041cc49613075039b2a073 done
#21 naming to gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:ac13579b81b62908e73e0b0b43c4a9d6c6d3868756b3656233e95a160c37cb13
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:a8f421ea0b5833270dca24db13ec3489fd236b6ed9014a14c0501b3d4d1b9b11
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer-intermediate
#4 sha256:4abace62d93e3e3ad2e1c1f668f1631706f9b2e22f4acfbb3b5957db233c5a41
#4 ERROR: gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer-intermediate:latest: not found

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:70686c9e833fdcefe0775f583d9dcefc617acd878b5bc490ac010e4c1ee4d56c done
#6 naming to gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:797a51f86a2b7f39b18ab3e1650928197034acc2829cd055e36f2905ec50edc6
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:bcdf127a04e632a77e393473eff54d823b3a4f36200315d11f89236d01bf9c40
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer-intermediate:latest
#3 sha256:4665a5f719e200fd37d126271eda8fbebd54c470a8a416480d613d047bc59930
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer:latest
#4 sha256:376e8ea78b956beb87b84b2a7511f6006b570d9e9d33402e43399229d573dc89
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:e9d0326acf4feeca892ef2d6b74aef4f4293f3252eee5f14d0fbfb32d67ede67
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer-intermediate
#6 sha256:ac8e893e52193dfe392ff0dbf326bb79ed4c2c89c5055d2749356a9bab0ca39c
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer
#10 sha256:2c23dcaad05f9957a99c93b5b314b520babef3252ae54c3a72ceabf0ab855c87
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer
#5 sha256:1c9f9d29d6269c1bfda9a5ffd0ac96121db32126285e50508c84b7d6e13a0adc
#5 ERROR: gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer:latest: not found

#12 [internal] load build context
#12 sha256:e9d0326acf4feeca892ef2d6b74aef4f4293f3252eee5f14d0fbfb32d67ede67
#12 ...

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer
#10 sha256:2c23dcaad05f9957a99c93b5b314b520babef3252ae54c3a72ceabf0ab855c87
#10 DONE 0.4s

#12 [internal] load build context
#12 sha256:e9d0326acf4feeca892ef2d6b74aef4f4293f3252eee5f14d0fbfb32d67ede67
#12 transferring context: 17.53MB 0.6s done
#12 DONE 0.7s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:4c042054d5bd4e3f3d8db4b6abe3d2311971b68c9383aaef87e4886489c1b9a3
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:800a935c7d5858eb556d57348545849f2439b8610d73e3524848374c15cc5e73
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:664829080ba7a3e42a777428dd0caa26409d1e83fa05ec2d08d444cae70dfe29
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:1d01624082a4e68174d3244880edbb38dd324bf462fba7a42c30242d416bec79
#11 DONE 0.2s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:f4f6c21258ea8fe90363f199d1abc09a494b2eb467d9f8466e5b2472b03c36a3
#13 DONE 1.1s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:fc96689cf6030da840335874769b89a5b0449deaca6d781d20342e21c221f7e8
#14 DONE 1.0s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:abe1533786b8a5375ccc876f688b9720e84558b9a427c863eeee467ef4aa69a9
#15 DONE 0.7s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:75e6b7917b81d4251ce4e2961cf1e5c06e4bcd1524aa29b427bb8519e13a8d31
#16 DONE 0.7s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:6c8e91b092970b3a48908ce73ee2da1ae55bc6d07bd37ce627f911719f6d138a
#17 DONE 0.1s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:c518cf121f64adf99b5fb8dba0393869268e0063ed0979e38629f4be0e77b61f
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:7a73e60a9bd998dca74909895521439c497ad1ce9d9c692cff68c1b26d5adf27
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:c25fababa7ac741a0bd623beba6697d4dee4ee5a9ffad94166c157eb5270cfa3
#20 DONE 0.6s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:88626ab0f8fa98dfc508362dc6119e9824ac4a78408cc77fd45dacfe22f04335 done
#21 naming to gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer done
#21 DONE 0.0s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Unarchived 77 files from seed corpus /out/minigzip_fuzzer_seed_corpus.zip.
INFO:root:Doing final sync.
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:707e6a13e717d17f0152c56a3a5c6b7d9bbede72a5eb04af02b0874f78e58910
#1 transferring dockerfile: 32B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:ad75953981c91548a1b91fa1df85217f2a988d34f02e5447cec2acd8af4af4b7
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:77750d283f2957d1beeddda2e8f6c5604ab5f969a3616e9cac40f4261ca04c0a
#5 sha256:7999addb2cd81975cd6421c6aaef5643a901995c540a40e8df741ab4c30f6043
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/zlib_minigzip_fuzzer
#4 sha256:864f2fbe97d42bc174a8bbb4850592b52439069aa63d0c376549b95ae21e1403
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:e6caa54886ef8b8fa40d522aee0b0e1dbed103e336da91244398fe2329f66f79
#9 transferring context: 399B done
#9 DONE 0.1s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:52e32c454805a8c94e441551d01b16d090304920e0b4ce6b465dec91bafa72a3
#6 CACHED

#7 [3/5] RUN git clone --depth 1 -b develop https://github.com/madler/zlib.git
#7 sha256:f0bc315b74d41abe7af8731ffa647bc6fe9bf8a67b7a4851eacf3d1ca44b4120
#7 CACHED

#8 [4/5] WORKDIR zlib
#8 sha256:64713c70ad922c74cc30dabac865ace84eb0dd0f10ba324f819d64d403c1585f
#8 CACHED

#10 [5/5] COPY build.sh *_fuzzer.c* /src/
#10 sha256:ff2844520b07ab36e45d07b70b35ee2bbb755ce941a4a11e1578cad5d6eeaeaf
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:62efc2de0b5969692ab4d69d20102e44a9338594321db16cb83fc2b696faefd2 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/zlib_minigzip_fuzzer done
#11 DONE 0.8s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:def9a0050a283c4e811044ae23641678e5f38226d81582270d7a583685725c44
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:602b6fe0cf085a5c4b9297635e8106986eda2afedd0b05a6ef6a89ce961d8216
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/zlib_minigzip_fuzzer:latest
#3 sha256:b9c6043b05997f312d7062393d05102e4370d0f553f495428fec4e6fe7a54ec8
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/zlib_minigzip_fuzzer
#5 sha256:545f1ea366614b0025b77068f4d9986b61078b9c5c6d32f69c766f9a74f1ec22
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer-intermediate
#4 sha256:6f3108a7e2a7cd4bf1e49d5180653b64aeb9b5365d04e328582f9af73ab33cbb
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:0f8d8cadcaf0630cc9e2a116ca8bdebdd9e2722ae6fba3875bfeb5f762846223
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:1f8590ca064e51d98c10e4aad10d0f61a19c4ccdfafec4ce4b098a28a54903ad
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:6efaf047c93c939bc3378fb38fb1464ad52e9d75158d5ffb2389df1bdd807b96 done
#8 naming to gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:f7bcddaa689cea5c31665bfbb7efb662f3c6b3c5301b3431c48f866338be9a45
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:c57b423d862a48a85e6eac60189eee5396629b47d57f1ad801b192d43172a2f2
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:eb56ca3e23c0b3902a282001485ab072b783f0384e08952c7407b234b4665e8b
#8 transferring context: 559B 0.1s done
#8 DONE 0.2s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:af2d57dd274a7cbd6fa39b18270e85c3b075df17c3c63c7c6cf3a679416a4425
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:c12844b84a05695b52df154fcabea44c2f0b8bc8cc0f744760c070e230c19380
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:4062942f915d5c74dea47c1e2abba80eaa900bbff044c0932b585a32a6db1ca7
#11 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:2fcbb02744526406810805a3cdc37ce9d8b0af08d0f5828adeb871632b09f7f6
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:db37108b741762d6fc963c78f4ea99d80edbbe38f2ea9e4cf93847b349417cfa 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:22e69057bdc0fbddd6bfc38b1890ba838ca4b59e449af01c116834daf262df99
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:4240b37f6d53f78fdd75a6c15a344afbc75cbea184784f6198d77e7be56e16a4
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer-intermediate:latest
#3 sha256:0432d617f36833278f18bc26ebc01410d4d0f6145be99bb2e4fc979dc735b74a
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer-intermediate
#6 sha256:750d52d480d47cab5d22fda6404f4e2729b72518dff527b2f4e008bbb8b4c400
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer
#5 sha256:fe0fcc0795fa2950faa6f1b6a7e1a97e34feaa4b61524064d3fef743cd6f8073
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:effd287d20710879edd88541e52df344d6820aa7faf3a73b540b2908e7c14987
#12 transferring context: 669.88kB 0.1s done
#12 DONE 0.1s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:01de7e2c286fe0f14dcedcdc2bccb6ada6a085598d8bb1c83857c5f7a187054f
#9 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:8d6bfa1fcc4e9353082440468da525bde0c2c82347193994074e5577cdee9d65
#17 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:cbc6582085d827d764494d65263c223df07fa33a0dfa40ae8c0703c5dc1b33d0
#14 CACHED

#15 [stage-1  8/13] COPY benchmarks/zlib_minigzip_fuzzer/benchmark.yaml /
#15 sha256:ce8f1cd83cf6eb14aeace1436cfdeffded83dd1a9e621c4be607f9d1ebeb387f
#15 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:6f8fb9e257cc27e1350fefdc0e74568b992de380dec0337846c8cb4136d530a7
#19 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:f552186c3ba26bd49ea25b7994b64ca833fbb705d8464b9c27fe4738e00db567
#8 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:0425a215b6a12c049090e1f1f57c8c73dafdb82ce953f44fc081789c0ce20402
#13 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:93f00b16fd47f72185597553ccece0689c5319449ee0e4b2d21e96b22bc7ee8f
#16 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:346ab67404c282359990a07f80a65671224a98956a58d6ee4190aeec4b371526
#11 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:a9a7b6888c0b2844aa5f479567cde0f458c6440d050ea53041cabf3899c9fc4c
#10 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:706c08e8bc30aa4553feb2c465654b95940bbcd7b75bea140839c107f3f322dd
#18 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:f5d64d601101b1c2d203503d402d757832100f9e0a17fc1af3bec9d20e33cb9c
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:f1f37b04750d2eeb8285c2f2c5696e1a491ab8b287041cc49613075039b2a073
#21 writing image sha256:f1f37b04750d2eeb8285c2f2c5696e1a491ab8b287041cc49613075039b2a073 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export 0.0s done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:0a7027dec7a33344b4a8994154d2b32dfe43893348a3ad82c8004b77c02b5d95
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:ae515f93fd4d6eff857ccba4ae477d5849cb2a05d0d1b812037fa99b132bbf2d
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer-intermediate
#4 sha256:4abace62d93e3e3ad2e1c1f668f1631706f9b2e22f4acfbb3b5957db233c5a41
#4 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:70686c9e833fdcefe0775f583d9dcefc617acd878b5bc490ac010e4c1ee4d56c done
#6 naming to gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:c5975e12ce7ffcc3f111772e634f45d878624fafbf2c3fc758c57225c012c13e
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:51c37be11f7dcc8edea93897fafbc533e9c86797cfa3e693bcb470a4e0e54190
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer:latest
#4 sha256:376e8ea78b956beb87b84b2a7511f6006b570d9e9d33402e43399229d573dc89
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer-intermediate:latest
#3 sha256:4665a5f719e200fd37d126271eda8fbebd54c470a8a416480d613d047bc59930
#3 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer-intermediate
#6 sha256:ac8e893e52193dfe392ff0dbf326bb79ed4c2c89c5055d2749356a9bab0ca39c
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer
#5 sha256:1c9f9d29d6269c1bfda9a5ffd0ac96121db32126285e50508c84b7d6e13a0adc
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/zlib_minigzip_fuzzer
#10 sha256:2c23dcaad05f9957a99c93b5b314b520babef3252ae54c3a72ceabf0ab855c87
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:740a2b22704ba91c3a8691efaf09f4a870fb415f53bb9fc09913eeb0d0c22a35
#12 transferring context: 17.53MB 0.6s done
#12 DONE 0.9s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:faf3bab2586d31b2042e3e5cf687043a5ecfa234bd66dd5f657b3e2ea9da000a
#14 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:516e645f32f77c6d73fd7e800cd96024ec24d7cac77e4e7cb11d0862d0ed389a
#15 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:7f23b3297708ab9ab50a760b4cbc2317ca0b453deffe122a67db210a21a2d3d2
#19 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:706f67f2287eca79326817ef6ec814f5943b4f119e014dacaa3c8add1da5723c
#13 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:4c042054d5bd4e3f3d8db4b6abe3d2311971b68c9383aaef87e4886489c1b9a3
#7 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:664829080ba7a3e42a777428dd0caa26409d1e83fa05ec2d08d444cae70dfe29
#9 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:b6ff0f45679db26297b02d7d886647aacbb0d8d5da52b309068b4fbe3216902b
#16 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:1d01624082a4e68174d3244880edbb38dd324bf462fba7a42c30242d416bec79
#11 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:ce11cc705f10bc6835d891d38d699762b5d80a5e167996b7945ed199195220db
#17 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:800a935c7d5858eb556d57348545849f2439b8610d73e3524848374c15cc5e73
#8 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:cfed8d0fcbac4d18901171dc657d45e7420a7b001f9f8e5940f4ac133dfe8672
#18 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:782725d5a72acd7a1c361a5c2bdc51b40d8330f9eebd6c568828cb0fa86186cd
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:88626ab0f8fa98dfc508362dc6119e9824ac4a78408cc77fd45dacfe22f04335
#21 writing image sha256:88626ab0f8fa98dfc508362dc6119e9824ac4a78408cc77fd45dacfe22f04335 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/zlib_minigzip_fuzzer done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Unarchived 77 files from seed corpus /out/minigzip_fuzzer_seed_corpus.zip.
INFO:root:Doing final sync.
