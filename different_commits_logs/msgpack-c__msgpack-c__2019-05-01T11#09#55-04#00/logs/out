WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: msgpack-c_msgpack-c.
INFO:root:Please run "make test-run-afl-msgpack-c_msgpack-c" to test integration.
#2 [internal] load .dockerignore
#2 sha256:29175f5ef29446af0bb9cc9a06fcbf967e561e9bf9664cb74eb1297a23e819a1
#2 transferring context: 2B done
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:d3e3e63ff897e7926151aa9d6711b0827778bf25cb94e62f428b4d8fc569ece7
#1 transferring dockerfile: 931B done
#1 DONE 0.2s

#2 [internal] load .dockerignore
#2 sha256:29175f5ef29446af0bb9cc9a06fcbf967e561e9bf9664cb74eb1297a23e819a1
#2 DONE 0.7s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#9 [internal] load build context
#9 sha256:bd614db3e9664f4ae191670ca8da344c77bc791c8cc3395f740a2d9e633f4d32
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:f4e5ea12494fab091c5d830cf803b3421f2860f729b9d1b07da44924396cf8cf
#5 sha256:ef290950573a2779ee526af357b28fbddfc20d7409aa51f58f777c9e972cba29
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/msgpack-c_msgpack-c
#4 sha256:ca7ec7e242206484ed48fc6c5ec2269bf845755afa096461101cd4fbdac4cde4
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/msgpack-c_msgpack-c:latest: not found

#6 [2/5] RUN apt-get update && apt-get install -y cmake
#6 sha256:f7c3bc2d43ffb3e2e42c9a90cb0f48c253ab0ead4cade7096e17898462135ff8
#6 CACHED

#7 [3/5] RUN git clone --depth 1 https://github.com/msgpack/msgpack-c.git msgpack-c
#7 sha256:02356a0adf3bac172353ac829f13f21cee7e6c304bd49abc65f5af386427fa47
#7 CACHED

#9 [internal] load build context
#9 sha256:bd614db3e9664f4ae191670ca8da344c77bc791c8cc3395f740a2d9e633f4d32
#9 transferring context: 1.48kB done
#9 DONE 0.2s

#8 [4/5] WORKDIR msgpack-c
#8 sha256:03fe6b0633be34b82713360c25e01310974b99e188dd64da8c522516eb9d07e3
#8 DONE 0.4s

#10 [5/5] COPY build.sh /src/
#10 sha256:a47b9d227c13eda2cab768a2a1b4b73827d19ece68c60425b21da36c5f93ec67
#10 DONE 0.2s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:e4304a8f51e0b9df9344572baa1cbb869fa0c1b659423b27b5907741eb1dce35
#11 writing image sha256:e4304a8f51e0b9df9344572baa1cbb869fa0c1b659423b27b5907741eb1dce35 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/msgpack-c_msgpack-c 0.0s done
#11 DONE 0.2s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/msgpack-c_msgpack-c:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:cb4d9317d0c564c90c9d96342ea007df31e9b10a63a8bfe63115e8424add23c0
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:5f59ac673c675cc233ac2cf17267ede75fb5a0f3274e9ef012b7a9bacbded5b9
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/msgpack-c_msgpack-c:latest
#3 sha256:95ad8a5d626c2793875c063194a6376f9f8ab58e83b5be619b2db7c5d9430d65
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/msgpack-c_msgpack-c
#5 sha256:b2bdcdd6da9143aad55a1ba52d6fbadfb5a4f203800f918ba4866b5369e7401a
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/msgpack-c_msgpack-c-intermediate
#4 sha256:01cd95842963f450242580e9c9ea34be1bd22095fccd7488403d94e965d48dd3
#4 ERROR: gcr.io/fuzzbench/builders/afl/msgpack-c_msgpack-c-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/msgpack-c_msgpack-c
#5 sha256:b2bdcdd6da9143aad55a1ba52d6fbadfb5a4f203800f918ba4866b5369e7401a
#5 DONE 0.8s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:4c6a8730bfa11fe6a05758e94ff881425f4ac9ebc94e8ddb963adf5f286018fc
#6 0.513 Cloning into '/afl'...
#6 1.258 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.258 
#6 1.258 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.258 changes and commit them, and you can discard any commits you make in this
#6 1.258 state without impacting any branches by switching back to a branch.
#6 1.258 
#6 1.258 If you want to create a new branch to retain commits you create, you may
#6 1.258 do so (now or later) by using -c with the switch command. Example:
#6 1.258 
#6 1.258   git switch -c <new-branch-name>
#6 1.258 
#6 1.258 Or undo this operation with:
#6 1.258 
#6 1.258   git switch -
#6 1.258 
#6 1.258 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.258 
#6 1.258 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.293 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.294 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.472 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.476 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.907 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.239 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.683 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.833 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.240 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.478 ln -sf afl-as as
#6 5.480 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.482 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.483 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 5.9s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:b5b168db87085b1e6644a5ed2a18d6ddf90eba242b9697eba27627027b0ef220
#7 0.828 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.828 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.828 Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.829 Hit:4 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 0.843 Hit:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 1.796 Reading package lists...
#7 3.519 Reading package lists...
#7 4.959 Building dependency tree...
#7 5.170 Reading state information...
#7 5.422 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.422 0 upgraded, 0 newly installed, 0 to remove and 3 not upgraded.
#7 5.523 --2022-02-16 02:48:02--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.541 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.109.133, 185.199.110.133, 185.199.111.133, ...
#7 5.542 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.109.133|:443... connected.
#7 5.566 HTTP request sent, awaiting response... 200 OK
#7 5.585 Length: 9177 (9.0K) [text/plain]
#7 5.585 Saving to: '/afl/afl_driver.cpp'
#7 5.585 
#7 5.585      0K ........                                              100% 7.64M=0.001s
#7 5.586 
#7 5.586 2022-02-16 02:48:02 (7.64 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.586 
#7 7.425 ar: creating /libAFL.a
#7 DONE 8.2s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:daddd43732e3499ec2856c3a7f4ca63f794fb0e24cc8a1156d19ca301d14b5e7 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/msgpack-c_msgpack-c-intermediate 0.0s done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/msgpack-c_msgpack-c-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:c9af5d7b7c592f926d129285c2e837f0fdca1563433f5ed2683fbcc16c7271cc
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:0f75c96a84b0f9655b9046881aa97f86d30720e17e0be71d0cb530b4345dd290
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:a2a14644cf9b0a39a3a84899b7b08980bc4b23d8e3e7a01cd4fa2d331c899ebd
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:0a6f2f548f74f68d1a8b710cf5fe7c38cfde40cb156f4406c2916dbd212791b6
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:e3898ce936b27163d33e14f60f91193d674aa4ba005c606dfe5177269c6e16eb
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:025b29ac7bbfbf7f9a15b9f7bee9eb7ebe2fe058b28ddcc1c2f3c4e694d9430f
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:9d29bdf769d3c5e609113afa67b97c27275eefbc3c31cfe46e0ae830050f8e83
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:509426e884bd71e16cea47d906934dee09f49fe9e70e639053808841f1aec41c
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:75131d31f8e04ebef69c7b0b7ee589f78d95802024c0a4d130311a66825016bb
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.2s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/msgpack-c_msgpack-c-intermediate:latest
#3 sha256:350f59e183288fe13d8d8c6c3bc74c5c7eacca04baa7f552a90b55d23cc56075
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:ab673fa6ceb71dd8197edbb0fe5e0835d6a052e219f9d17f9b33d76c0b04161c
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/msgpack-c_msgpack-c-intermediate
#6 sha256:772c3bbe8b1a558cf03be835f18aad543bc22df3040841a336f78943f7602e76
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/msgpack-c_msgpack-c
#5 sha256:499693d93d8656bbd3b236d62cb4699d8bcca9df62f0eaf265a9e4e98bf482f9
#5 ERROR: gcr.io/fuzzbench/builders/afl/msgpack-c_msgpack-c:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:ab673fa6ceb71dd8197edbb0fe5e0835d6a052e219f9d17f9b33d76c0b04161c
#12 transferring context: 669.88kB 0.1s done
#12 DONE 0.2s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/msgpack-c_msgpack-c-intermediate
#6 sha256:772c3bbe8b1a558cf03be835f18aad543bc22df3040841a336f78943f7602e76
#6 DONE 0.8s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:c7a76d3d1382da1c19fdfc0aec5fe2416bc0d61217367e1c3a512fe9f13fe786
#8 DONE 0.7s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:0a1a0c5b5119b53e584058d0eb9edebec56ff95177c44d22773d8c3cfe00263d
#9 DONE 18.8s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:acc8f6a8339a701962892e672d69bfe3406570ed95dd7c8a9d9ebc73fd20fee0
#10 DONE 0.4s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:f89a3dcba51f8ba229d3881805f3d1be2d0e301cb3d445b73430f921bf819f45
#11 DONE 43.2s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:f2ff80be8435010a18868a067b7a02d0c9ee53917bd14c0c1ec88fc1847d426d
#13 DONE 2.2s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:bb38dc8dfeb33a0b803567c58e310728e12a755b8b0437f30b9b60ccc7522caf
#14 DONE 1.7s

#15 [stage-1  8/13] COPY benchmarks/msgpack-c_msgpack-c/benchmark.yaml /
#15 sha256:2e4d6cf9a86fae135f611edf392eaabcfb168f2a4197b7ed17eadfb3dfaf1586
#15 DONE 0.8s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:9a83feab5447049edd4ec0bd130f505e59aefa596bb9ca33a2b14a36e9680c10
#16 DONE 0.8s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:ab56d905d9a8bd6fd2a4fe992e4efc96c5b205b19ebc3cd349d3780b2077823b
#17 DONE 5.0s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:f338a53fa2785d494b9b579d2a5fb404a65d309639eccb0d1317ac2265b58559
#18 1.613 Checking out commit 3049c50d
#18 3.782 From https://github.com/msgpack/msgpack-c
#18 3.782  * [new tag]           0.3.0      -> 0.3.0
#18 3.782  * [new tag]           0.3.1      -> 0.3.1
#18 3.783  * [new tag]           0.3.2      -> 0.3.2
#18 3.783  * [new tag]           0.3.3      -> 0.3.3
#18 3.783  * [new tag]           2.1.4      -> 2.1.4
#18 3.783  * [new tag]           cpp-0.3.4  -> cpp-0.3.4
#18 3.784  * [new tag]           cpp-0.3.5  -> cpp-0.3.5
#18 3.784  * [new tag]           cpp-0.3.6  -> cpp-0.3.6
#18 3.784  * [new tag]           cpp-0.3.7  -> cpp-0.3.7
#18 3.784  * [new tag]           cpp-0.3.8  -> cpp-0.3.8
#18 3.784  * [new tag]           cpp-0.4.0  -> cpp-0.4.0
#18 3.785  * [new tag]           cpp-0.4.1  -> cpp-0.4.1
#18 3.785  * [new tag]           cpp-0.4.2  -> cpp-0.4.2
#18 3.785  * [new tag]           cpp-0.4.3  -> cpp-0.4.3
#18 3.785  * [new tag]           cpp-0.5.0  -> cpp-0.5.0
#18 3.785  * [new tag]           cpp-0.5.1  -> cpp-0.5.1
#18 3.786  * [new tag]           cpp-0.5.2  -> cpp-0.5.2
#18 3.786  * [new tag]           cpp-0.5.3  -> cpp-0.5.3
#18 3.786  * [new tag]           cpp-0.5.4  -> cpp-0.5.4
#18 3.786  * [new tag]           cpp-0.5.5  -> cpp-0.5.5
#18 3.786  * [new tag]           cpp-0.5.6  -> cpp-0.5.6
#18 3.787  * [new tag]           cpp-0.5.8  -> cpp-0.5.8
#18 3.787  * [new tag]           cpp-0.5.9  -> cpp-0.5.9
#18 3.787  * [new tag]           cpp-1.0.0  -> cpp-1.0.0
#18 3.787  * [new tag]           cpp-1.0.1  -> cpp-1.0.1
#18 3.788  * [new tag]           cpp-1.1.0  -> cpp-1.1.0
#18 3.788  * [new tag]           cpp-1.2.0  -> cpp-1.2.0
#18 3.788  * [new tag]           cpp-1.3.0  -> cpp-1.3.0
#18 3.788  * [new tag]           cpp-1.4.0  -> cpp-1.4.0
#18 3.788  * [new tag]           cpp-2.0.0  -> cpp-2.0.0
#18 3.789  * [new tag]           cpp-2.1.0  -> cpp-2.1.0
#18 3.789  * [new tag]           cpp-2.1.1  -> cpp-2.1.1
#18 3.789  * [new tag]           cpp-2.1.2  -> cpp-2.1.2
#18 3.789  * [new tag]           cpp-2.1.3  -> cpp-2.1.3
#18 3.789  * [new tag]           cpp-2.1.4  -> cpp-2.1.4
#18 3.790  * [new tag]           cpp-2.1.5  -> cpp-2.1.5
#18 3.790  * [new tag]           cpp-3      -> cpp-3
#18 3.790  * [new tag]           cpp-3.0.0  -> cpp-3.0.0
#18 3.790  * [new tag]           cpp-3.0.1  -> cpp-3.0.1
#18 3.790  * [new tag]           cpp-3.1.0  -> cpp-3.1.0
#18 3.791  * [new tag]           cpp-3.1.1  -> cpp-3.1.1
#18 3.791  * [new tag]           cpp-3.2.0  -> cpp-3.2.0
#18 3.791  * [new tag]           cpp-3.2.1  -> cpp-3.2.1
#18 3.791  * [new tag]           cpp-3.3.0  -> cpp-3.3.0
#18 3.798 error: pathspec '3049c50d' did not match any file(s) known to git
#18 3.803 error: pathspec '3049c50d' did not match any file(s) known to git
#18 3.810 error: pathspec '3049c50d' did not match any file(s) known to git
#18 3.862 Checkout unsuccessful.
#18 DONE 4.2s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:7db688feb7b51f30bb1bde18b877e043b0f61e2d2c3435c4ec0acf43de116acf
#19 DONE 1.0s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:06c6ad93828810b7f1a34ccb7d205c97bd00b2f86343704d52da3604820aaf16
#20 0.548 Run fuzzer_build to build the target
#20 0.666 FUZZ_TARGET = msgpack-c
#20 0.666 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.666 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.677 Building benchmark msgpack-c_msgpack-c with fuzzer afl
#20 0.681 + cmake -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ '-DCMAKE_C_FLAGS=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard' '-DCMAKE_CXX_FLAGS=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard' -DMSGPACK_CXX11=ON .
#20 0.746 CMake Error: The source directory "/src/msgpack-c" does not appear to contain CMakeLists.txt.
#20 0.746 Specify --help for usage, or press the help button on the CMake GUI.
#20 0.757 Traceback (most recent call last):
#20 0.757   File "<string>", line 1, in <module>
#20 0.758   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 0.758     utils.build_benchmark()
#20 0.758   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 0.758     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 0.758   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 0.759     raise CalledProcessError(retcode, cmd)
#20 0.759 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/msgpack-c_msgpack-c:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2708132: .afl-msgpack-c_msgpack-c-builder] Error 1
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:4e3e52463b06b613d6429fa64ec6af839e27f9ab37812eb71ffea9eaa9c67405
#1 transferring dockerfile: 30B
#1 transferring dockerfile: 32B done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:3e4251c8c73e0e3624092d1b978eb0e6486a255c2a9d9ac1e9c1f11574c20614
#2 transferring context: 2B done
#2 DONE 0.3s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:f4e5ea12494fab091c5d830cf803b3421f2860f729b9d1b07da44924396cf8cf
#5 sha256:ef290950573a2779ee526af357b28fbddfc20d7409aa51f58f777c9e972cba29
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/msgpack-c_msgpack-c
#4 sha256:ca7ec7e242206484ed48fc6c5ec2269bf845755afa096461101cd4fbdac4cde4
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:3ddd08832f4ac442c9399f94508b4d852ea60f7e4df3a3a17a7ea794e4bbe1ce
#9 transferring context: 30B done
#9 DONE 0.3s

#8 [4/5] WORKDIR msgpack-c
#8 sha256:03fe6b0633be34b82713360c25e01310974b99e188dd64da8c522516eb9d07e3
#8 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y cmake
#6 sha256:f7c3bc2d43ffb3e2e42c9a90cb0f48c253ab0ead4cade7096e17898462135ff8
#6 CACHED

#7 [3/5] RUN git clone --depth 1 https://github.com/msgpack/msgpack-c.git msgpack-c
#7 sha256:02356a0adf3bac172353ac829f13f21cee7e6c304bd49abc65f5af386427fa47
#7 CACHED

#10 [5/5] COPY build.sh /src/
#10 sha256:e12c4a225f1c811d3a960ba4790750d31b49697b244e0976df97869dc90ba538
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:e4304a8f51e0b9df9344572baa1cbb869fa0c1b659423b27b5907741eb1dce35 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/msgpack-c_msgpack-c done
#11 DONE 0.4s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:fcc39c705644b9864da2e71c85971d483c6fcfa537793ed3c9a5f70354e962bf
#2 transferring context: 2B done
#2 ...

#1 [internal] load build definition from builder.Dockerfile
#1 sha256:914d01087fc987d7958c6be47cc6cfb664483d70db382252d5c0bda47598d2f8
#1 transferring dockerfile: 46B done
#1 DONE 0.9s

#2 [internal] load .dockerignore
#2 sha256:fcc39c705644b9864da2e71c85971d483c6fcfa537793ed3c9a5f70354e962bf
#2 DONE 0.9s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/msgpack-c_msgpack-c:latest
#3 sha256:95ad8a5d626c2793875c063194a6376f9f8ab58e83b5be619b2db7c5d9430d65
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/msgpack-c_msgpack-c
#5 sha256:b2bdcdd6da9143aad55a1ba52d6fbadfb5a4f203800f918ba4866b5369e7401a
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/msgpack-c_msgpack-c-intermediate
#4 sha256:01cd95842963f450242580e9c9ea34be1bd22095fccd7488403d94e965d48dd3
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:4c6a8730bfa11fe6a05758e94ff881425f4ac9ebc94e8ddb963adf5f286018fc
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:b5b168db87085b1e6644a5ed2a18d6ddf90eba242b9697eba27627027b0ef220
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:daddd43732e3499ec2856c3a7f4ca63f794fb0e24cc8a1156d19ca301d14b5e7 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/msgpack-c_msgpack-c-intermediate done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:ecff9621b3e724e4bfe96d8bfb3bb6d9544ca128870e3b5b4614107aa28801e7
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:e891d58396f8051bad2e03c10c9ee5357e8b7cf70f4b51c93712d5f104eeaa3c
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:9ce0574f18d4293c4ea332f343b4f4a650e5d457790b09229a09937fca62574c
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:5dd25b024efeb51a9786f365f47b5a7a3ce0c4e9d2022e570477cf035c588c77
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:70a5cff4ca67cce576e88b72b1a46a699872a222caa93b216e93eee8dad05476
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:34f7f66dd3b76e1a7fe78f6bc81a291876fb175661b038bf0a2b7f5d2dac2ed8
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:ee2742d66aa084cb2df44c5bfa11e668f6eebb8c14d7d26337774c8fa9d484bf
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:dad7d9dafae71c4cc6e4d83946549c1f220db0038bfc2cb03937ad41830b4b2a
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:10d542f605c627ac3f2256d8d85446dd046f8dd0e695963b0d801e7ce3c0df6b
#2 transferring context: 34B done
#2 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/msgpack-c_msgpack-c-intermediate:latest
#4 sha256:350f59e183288fe13d8d8c6c3bc74c5c7eacca04baa7f552a90b55d23cc56075
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:bf211974a286275fdd93c2fa66c461dcf704bf3d16afaccd24e75acac7ec7f02
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/msgpack-c_msgpack-c-intermediate
#6 sha256:772c3bbe8b1a558cf03be835f18aad543bc22df3040841a336f78943f7602e76
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/msgpack-c_msgpack-c
#5 sha256:499693d93d8656bbd3b236d62cb4699d8bcca9df62f0eaf265a9e4e98bf482f9
#5 ERROR: gcr.io/fuzzbench/builders/afl/msgpack-c_msgpack-c:latest: not found

#12 [internal] load build context
#12 sha256:bf211974a286275fdd93c2fa66c461dcf704bf3d16afaccd24e75acac7ec7f02
#12 transferring context: 669.88kB 0.1s done
#12 DONE 0.2s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:a19fdc9634ee7548652cb8f3389b67b4c5da855b46142a8976ee07473aab27dc
#16 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:21a43c76141970918e3c694bea3af88068c9a1cc548583be79981b5ffba974a1
#14 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:c7a76d3d1382da1c19fdfc0aec5fe2416bc0d61217367e1c3a512fe9f13fe786
#8 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:f89a3dcba51f8ba229d3881805f3d1be2d0e301cb3d445b73430f921bf819f45
#11 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:e6ccdc9b46612aee519d850e1f4fc3ea5c7f0a2f28ca18305e64ec65a0ebf02c
#18 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:0a1a0c5b5119b53e584058d0eb9edebec56ff95177c44d22773d8c3cfe00263d
#9 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:ec1f87e7a17c9845a82fea98a961d0812a5fb705d2775779a59905c658554ace
#13 CACHED

#15 [stage-1  8/13] COPY benchmarks/msgpack-c_msgpack-c/benchmark.yaml /
#15 sha256:c54f3c351a6673090d8161a5b23387394094e2ef6b7368c5b84e66f85abccb37
#15 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:acc8f6a8339a701962892e672d69bfe3406570ed95dd7c8a9d9ebc73fd20fee0
#10 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:cbebb3b93bd9b5fcc784d068b76e70a3971a46c9924d7fde1479cf797c3ce644
#17 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:82fd9d6b0138662a3ae245883be8e2f13b397219b8383af44143cf9dd7c815d0
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:577227830e5af68ef25fc7118b5896fd0189850d2871caf127782dff0ea2d3d9
#20 0.494 Run fuzzer_build to build the target
#20 0.607 FUZZ_TARGET = msgpack-c
#20 0.607 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.607 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.611 Building benchmark msgpack-c_msgpack-c with fuzzer afl
#20 0.615 + cmake -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ '-DCMAKE_C_FLAGS=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard' '-DCMAKE_CXX_FLAGS=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard' -DMSGPACK_CXX11=ON .
#20 0.618 CMake Error: The source directory "/src/msgpack-c" does not appear to contain CMakeLists.txt.
#20 0.618 Specify --help for usage, or press the help button on the CMake GUI.
#20 0.620 Traceback (most recent call last):
#20 0.620   File "<string>", line 1, in <module>
#20 0.620   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 0.620     utils.build_benchmark()
#20 0.620   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 0.620     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 0.620   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 0.621     raise CalledProcessError(retcode, cmd)
#20 0.621 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/msgpack-c_msgpack-c:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2708132: .afl-msgpack-c_msgpack-c-builder] Error 1
