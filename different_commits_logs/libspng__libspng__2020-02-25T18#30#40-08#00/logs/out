WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: libspng_libspng.
INFO:root:Please run "make test-run-afl-libspng_libspng" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:ecc83f881997cec3cde7fb84734b7a8ad414ea95ad544f5d4afac28c464e2505
#1 transferring dockerfile: 1.01kB done
#1 DONE 0.7s

#2 [internal] load .dockerignore
#2 sha256:04372ebac956636f58fe031264a520b5a5ff875aa7d14c5dbae697f42fd60c0e
#2 transferring context: 2B done
#2 DONE 0.6s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#10 [internal] load build context
#10 sha256:99e066e05404604fed930488ef7261fb4bcd7d66b0de9c7540df394e7722b5d2
#10 DONE 0.0s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:f4e5ea12494fab091c5d830cf803b3421f2860f729b9d1b07da44924396cf8cf
#5 sha256:ef290950573a2779ee526af357b28fbddfc20d7409aa51f58f777c9e972cba29
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libspng_libspng
#4 sha256:5087e01b8da8ad4f1e6d719d1aa00ccad90a919b3a95b212a9ef0cef4f9a0319
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/libspng_libspng:latest: not found

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:f4e5ea12494fab091c5d830cf803b3421f2860f729b9d1b07da44924396cf8cf
#5 sha256:ef290950573a2779ee526af357b28fbddfc20d7409aa51f58f777c9e972cba29
#5 CACHED

#6 [2/6] RUN apt-get update &&     apt-get install -y wget tar cmake
#6 sha256:dd3563cf32ea3fa1b28af69aa7f3331f674491b48e93bcbd7d84607fd8f6b234
#6 ...

#10 [internal] load build context
#10 sha256:99e066e05404604fed930488ef7261fb4bcd7d66b0de9c7540df394e7722b5d2
#10 transferring context: 783B done
#10 DONE 0.2s

#6 [2/6] RUN apt-get update &&     apt-get install -y wget tar cmake
#6 sha256:dd3563cf32ea3fa1b28af69aa7f3331f674491b48e93bcbd7d84607fd8f6b234
#6 0.697 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#6 0.697 Get:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#6 0.697 Get:3 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#6 0.697 Hit:4 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 0.832 Get:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#6 1.250 Get:6 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [657 kB]
#6 1.354 Get:7 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1546 kB]
#6 1.450 Get:8 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [827 kB]
#6 1.481 Get:9 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [840 kB]
#6 1.743 Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1973 kB]
#6 1.948 Get:11 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1134 kB]
#6 2.048 Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [752 kB]
#6 2.495 Fetched 8065 kB in 2s (4788 kB/s)
#6 2.495 Reading package lists...
#6 4.029 Reading package lists...
#6 5.435 Building dependency tree...
#6 5.645 Reading state information...
#6 5.856 tar is already the newest version (1.30+dfsg-7ubuntu0.20.04.1).
#6 5.856 wget is already the newest version (1.20.3-1ubuntu2).
#6 5.856 The following additional packages will be installed:
#6 5.857   cmake-data libarchive13 libjsoncpp1 librhash0 libuv1
#6 5.859 Suggested packages:
#6 5.859   cmake-doc ninja-build lrzip
#6 5.896 The following NEW packages will be installed:
#6 5.899   cmake cmake-data libarchive13 libjsoncpp1 librhash0 libuv1
#6 5.975 0 upgraded, 6 newly installed, 0 to remove and 2 not upgraded.
#6 5.975 Need to get 5877 kB of archives.
#6 5.975 After this operation, 29.5 MB of additional disk space will be used.
#6 5.975 Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libuv1 amd64 1.34.2-1ubuntu1.3 [80.8 kB]
#6 6.061 Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 cmake-data all 3.16.3-1ubuntu1 [1612 kB]
#6 6.232 Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 libarchive13 amd64 3.4.0-2ubuntu1 [327 kB]
#6 6.262 Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 libjsoncpp1 amd64 1.7.4-3.1ubuntu2 [75.6 kB]
#6 6.267 Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 librhash0 amd64 1.3.9-1 [113 kB]
#6 6.276 Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 cmake amd64 3.16.3-1ubuntu1 [3669 kB]
#6 6.922 debconf: delaying package configuration, since apt-utils is not installed
#6 7.010 Fetched 5877 kB in 1s (7753 kB/s)
#6 7.106 Selecting previously unselected package libuv1:amd64.
#6 7.106 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21291 files and directories currently installed.)
#6 7.128 Preparing to unpack .../0-libuv1_1.34.2-1ubuntu1.3_amd64.deb ...
#6 7.171 Unpacking libuv1:amd64 (1.34.2-1ubuntu1.3) ...
#6 7.303 Selecting previously unselected package cmake-data.
#6 7.306 Preparing to unpack .../1-cmake-data_3.16.3-1ubuntu1_all.deb ...
#6 7.322 Unpacking cmake-data (3.16.3-1ubuntu1) ...
#6 8.014 Selecting previously unselected package libarchive13:amd64.
#6 8.018 Preparing to unpack .../2-libarchive13_3.4.0-2ubuntu1_amd64.deb ...
#6 8.024 Unpacking libarchive13:amd64 (3.4.0-2ubuntu1) ...
#6 8.157 Selecting previously unselected package libjsoncpp1:amd64.
#6 8.160 Preparing to unpack .../3-libjsoncpp1_1.7.4-3.1ubuntu2_amd64.deb ...
#6 8.164 Unpacking libjsoncpp1:amd64 (1.7.4-3.1ubuntu2) ...
#6 8.241 Selecting previously unselected package librhash0:amd64.
#6 8.244 Preparing to unpack .../4-librhash0_1.3.9-1_amd64.deb ...
#6 8.251 Unpacking librhash0:amd64 (1.3.9-1) ...
#6 8.336 Selecting previously unselected package cmake.
#6 8.340 Preparing to unpack .../5-cmake_3.16.3-1ubuntu1_amd64.deb ...
#6 8.346 Unpacking cmake (3.16.3-1ubuntu1) ...
#6 8.845 Setting up libarchive13:amd64 (3.4.0-2ubuntu1) ...
#6 8.884 Setting up libuv1:amd64 (1.34.2-1ubuntu1.3) ...
#6 8.949 Setting up librhash0:amd64 (1.3.9-1) ...
#6 9.010 Setting up cmake-data (3.16.3-1ubuntu1) ...
#6 9.083 Setting up libjsoncpp1:amd64 (1.7.4-3.1ubuntu2) ...
#6 9.135 Setting up cmake (3.16.3-1ubuntu1) ...
#6 9.171 Processing triggers for libc-bin (2.31-0ubuntu9.2) ...
#6 DONE 10.8s

#7 [3/6] RUN git clone --depth 1 https://gitlab.com/randy408/libspng.git
#7 sha256:d85a70a2fa5e52c09e008714610b057ee069811a687356a4851875d9140f7c43
#7 0.604 Cloning into 'libspng'...
#7 DONE 1.9s

#8 [4/6] RUN git clone --depth 1 https://github.com/google/fuzzer-test-suite
#8 sha256:fe8ba72ec6912fd24b88f456a2656e497891e3f94d557dd8cfa3a80f7903c52d
#8 0.566 Cloning into 'fuzzer-test-suite'...
#8 DONE 4.4s

#9 [5/6] WORKDIR libspng
#9 sha256:7ed3baa8b020c26c722838517862cf4c9e16a49c9c7ccb7864ea91255f558cbf
#9 DONE 1.7s

#11 [6/6] COPY build.sh /src/
#11 sha256:e1aed218d5c18220539bcfb426ab240624ae8ffa915019766cd64c956823d06e
#11 DONE 0.1s

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:5451af89f0402e22556890c05b40d4645f0afc7fb136f5f15918ea3d726cb9bc done
#12 naming to gcr.io/fuzzbench/builders/benchmark/libspng_libspng done
#12 DONE 0.1s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libspng_libspng:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:b4ca47647801c0d4a989f181f7af819866ba0c9853665bda2bf36da530754bbf
#1 transferring dockerfile: 46B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:e3e8f7a431e86dc2a83ccee11fe0889febf11c300526843f410c0cf76e3ea6d2
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/libspng_libspng:latest
#3 sha256:7c14e084f5d643ab770629ef646367a792f79d6420ba6a8ca075152e67db38ba
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libspng_libspng
#5 sha256:5e429093eb93b50bf0e482a13437ab787c349d37e97d75b31a6f0cbb3b654a7b
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/libspng_libspng-intermediate
#4 sha256:973045dd55b0f5ef90bc6dee11062b5e5ac91683ad70e4c20f69f10d3d455a42
#4 ERROR: gcr.io/fuzzbench/builders/afl/libspng_libspng-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libspng_libspng
#5 sha256:5e429093eb93b50bf0e482a13437ab787c349d37e97d75b31a6f0cbb3b654a7b
#5 DONE 0.4s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:845ab0d65246a0065106faaf04a26fffffb49525f9dea896d57a7cf6076ea274
#6 0.374 Cloning into '/afl'...
#6 1.169 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.169 
#6 1.169 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.169 changes and commit them, and you can discard any commits you make in this
#6 1.169 state without impacting any branches by switching back to a branch.
#6 1.169 
#6 1.169 If you want to create a new branch to retain commits you create, you may
#6 1.169 do so (now or later) by using -c with the switch command. Example:
#6 1.169 
#6 1.169   git switch -c <new-branch-name>
#6 1.169 
#6 1.169 Or undo this operation with:
#6 1.169 
#6 1.169   git switch -
#6 1.169 
#6 1.169 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.169 
#6 1.169 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.186 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.186 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.364 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.369 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.802 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.131 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.589 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.841 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.278 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.526 ln -sf afl-as as
#6 5.528 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.530 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.531 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.0s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:28269f3f94e6120a88613fd3e56e9e017259ba230d3741ea6446cbeab4e8266d
#7 0.732 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.732 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.738 Hit:3 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 0.754 Hit:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.779 Hit:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 1.625 Reading package lists...
#7 3.180 Reading package lists...
#7 4.643 Building dependency tree...
#7 4.870 Reading state information...
#7 5.122 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.122 0 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.
#7 5.154 --2022-02-15 09:54:16--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.156 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.111.133, 185.199.108.133, 185.199.109.133, ...
#7 5.157 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.111.133|:443... connected.
#7 5.180 HTTP request sent, awaiting response... 200 OK
#7 5.363 Length: 9177 (9.0K) [text/plain]
#7 5.363 Saving to: '/afl/afl_driver.cpp'
#7 5.363 
#7 5.363      0K ........                                              100% 9.11M=0.001s
#7 5.364 
#7 5.364 2022-02-15 09:54:16 (9.11 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.364 
#7 7.145 ar: creating /libAFL.a
#7 DONE 7.8s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:59bc04f68794daabafea21b5c2ee87e23f5f945e0b9c9e871ca66c1b9dc157c7 done
#8 naming to gcr.io/fuzzbench/builders/afl/libspng_libspng-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libspng_libspng-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:b4b17373437e218f63e59c60aa8b08e0fa550412b42d6c3c270b5069b86c0b85
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:739b3ec746b981d815a2ac24fcc4c8300a509ffbb3b1fee608fd08dbeaf57fb5
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:df0fe1ad9523bbf64911602726f0308a1673de83699ef65c0445916825e9cbb4
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:262eec354f36f56255b0cfef5bbbced8b98775b135eed85350e0a195fd91b536
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:5628655d8c4001bfe94169a8c04bda35a23caec30ef8ae26f6650f80f666b9e7
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:30e35a59cb4d56ad2644a981478533ff80238f418d6866eeda21a60bc498c52c
#9 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:0d962594de462542804c12e9e7c7587729eef7d7d4ac7434201086b6372277ed
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:3e04b5fd0a277df2bc5cd3367dbf9178b152077681f3e4447621291a56e5d56f
#13 writing image sha256:3e04b5fd0a277df2bc5cd3367dbf9178b152077681f3e4447621291a56e5d56f 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:c79ed03d67093910c6d8c83925d3bbe21614e787c57d481c8ed6f6f10f8ccd40
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:d55ce40f55ae5e2f25d5cb65168f965f2b0b0ee011a55cbcdd935b0bd5cb2609
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libspng_libspng-intermediate:latest
#3 sha256:42ddb1fe0a471822f672a4e605d42428dbe089ef8d6148b9b35e483971640366
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:8645b4a263445d86e78ee6215d868cf5a8e539f7058af31dd4ae56488c15e15c
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libspng_libspng-intermediate
#6 sha256:0f0e93f2573e044c7addfe355c17c6a6830160d1d5a2f3d548b149996683d3f3
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/libspng_libspng
#5 sha256:e03fcc070c6ad1f0ebf209b49126c1a2c1b8dbb3b7475ba490d94144a3cffa08
#5 ERROR: gcr.io/fuzzbench/builders/afl/libspng_libspng:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:8645b4a263445d86e78ee6215d868cf5a8e539f7058af31dd4ae56488c15e15c
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libspng_libspng-intermediate
#6 sha256:0f0e93f2573e044c7addfe355c17c6a6830160d1d5a2f3d548b149996683d3f3
#6 DONE 0.2s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:335a2e41d763103810afdfa1c36ecc8a63936f2bd1636e121e106527d1214de4
#8 DONE 0.3s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:7cf3039110ab7761347c3d70330ea625a85cc3a0acaa232b2927f25e078ed37b
#9 DONE 15.5s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:306d911b951000b5e3f287736deaeb72f87b1fb3325c16a2c21f74d426c4b823
#10 DONE 0.4s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:c3168163bad1c5a1e739fc84720cae31f249435eebd0cd4ba25c6cf8f2c8d221
#11 DONE 19.4s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:989e5bd8511c8c3e5c26bb57f1179f02da2bb090b37204c3fd9d068dde8bf150
#13 DONE 0.8s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:8deb26804cf04f318fd51ffd95b471f90c9f115af4bfe1c8c9cee4e3a5edbb9f
#14 DONE 1.5s

#15 [stage-1  8/13] COPY benchmarks/libspng_libspng/benchmark.yaml /
#15 sha256:821bf107b05fb1ceced69808e80ca61505cc7601f1908be81dd6a99e8793b55e
#15 DONE 0.3s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:36a461b47febb408407691c34d1c5ffba211fb9b97253f80929376b2872df5de
#16 DONE 0.7s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:65e492c324373f3ec2fa15cd34c6f62217180c84510486c24e7e4b84451bc6c2
#17 DONE 0.4s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:13eb33daa56321d5477cb3bfb71901b577043adda095d5a5e8729c8d7f18a23b
#18 0.701 Checking out commit 43050a47
#18 7.376 From https://gitlab.com/randy408/libspng
#18 7.376  * [new tag]         v0.2.0     -> v0.2.0
#18 7.376  * [new tag]         v0.3.0     -> v0.3.0
#18 7.376  * [new tag]         v0.3.1     -> v0.3.1
#18 7.376  * [new tag]         v0.4.0     -> v0.4.0
#18 7.377  * [new tag]         v0.4.1     -> v0.4.1
#18 7.377  * [new tag]         v0.4.2     -> v0.4.2
#18 7.377  * [new tag]         v0.4.3     -> v0.4.3
#18 7.377  * [new tag]         v0.4.4     -> v0.4.4
#18 7.378  * [new tag]         v0.4.5     -> v0.4.5
#18 7.378  * [new tag]         v0.5.0     -> v0.5.0
#18 7.378  * [new tag]         v0.6.0     -> v0.6.0
#18 7.378  * [new tag]         v0.6.0-rc1 -> v0.6.0-rc1
#18 7.378  * [new tag]         v0.6.1     -> v0.6.1
#18 7.379  * [new tag]         v0.6.2     -> v0.6.2
#18 7.379  * [new tag]         v0.6.3     -> v0.6.3
#18 7.379  * [new tag]         v0.7.0     -> v0.7.0
#18 7.379  * [new tag]         v0.7.0-rc3 -> v0.7.0-rc3
#18 7.380  * [new tag]         v0.7.1     -> v0.7.1
#18 7.380  * [new tag]         v0.7.2     -> v0.7.2
#18 7.387 error: pathspec '43050a47' did not match any file(s) known to git
#18 8.299 error: pathspec '43050a47' did not match any file(s) known to git
#18 8.316 error: pathspec '43050a47' did not match any file(s) known to git
#18 8.324 error: pathspec '43050a47' did not match any file(s) known to git
#18 8.414 Checkout unsuccessful.
#18 DONE 8.8s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:595c611abdbb12fc3cf9ee74ea84c27f50c4619de7c0022ed5ada14c7478d473
#19 DONE 0.9s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:77760d10d74f5effa35bd289680e63d8c2cff069222d9a1437af3a3640d07bf1
#20 0.633 Run fuzzer_build to build the target
#20 0.769 FUZZ_TARGET = libspng
#20 0.769 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.769 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.777 Building benchmark libspng_libspng with fuzzer afl
#20 0.780 + /src/libspng/tests/ossfuzz.sh
#20 0.785 mkdir: cannot create directory ‘/src/zlib/build’: No such file or directory
#20 0.786 Traceback (most recent call last):
#20 0.786   File "<string>", line 1, in <module>
#20 0.787   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 0.787     utils.build_benchmark()
#20 0.787   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 0.787     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 0.787   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 0.788     raise CalledProcessError(retcode, cmd)
#20 0.788 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libspng_libspng:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2690938: .afl-libspng_libspng-builder] Error 1
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:f88b9fbbbb91780a69e527274f362823fe43e14ca1a8220c67fdfcc21fbc1b1d
#2 transferring context: 2B done
#2 DONE 0.4s

#1 [internal] load build definition from Dockerfile
#1 sha256:de2267ee6244c85c39c2af3e42043f4c2c9869e2a36b69f9e10130b28a20d323
#1 transferring dockerfile: 32B done
#1 DONE 0.3s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:f4e5ea12494fab091c5d830cf803b3421f2860f729b9d1b07da44924396cf8cf
#5 sha256:ef290950573a2779ee526af357b28fbddfc20d7409aa51f58f777c9e972cba29
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libspng_libspng
#4 sha256:5087e01b8da8ad4f1e6d719d1aa00ccad90a919b3a95b212a9ef0cef4f9a0319
#4 DONE 0.0s

#10 [internal] load build context
#10 sha256:9ebd743b6db0551c6f67d2110d583aedfe0a77fa6a30782738a5500a69583e23
#10 transferring context: 30B done
#10 DONE 0.1s

#6 [2/6] RUN apt-get update &&     apt-get install -y wget tar cmake
#6 sha256:dd3563cf32ea3fa1b28af69aa7f3331f674491b48e93bcbd7d84607fd8f6b234
#6 CACHED

#7 [3/6] RUN git clone --depth 1 https://gitlab.com/randy408/libspng.git
#7 sha256:d85a70a2fa5e52c09e008714610b057ee069811a687356a4851875d9140f7c43
#7 CACHED

#8 [4/6] RUN git clone --depth 1 https://github.com/google/fuzzer-test-suite
#8 sha256:fe8ba72ec6912fd24b88f456a2656e497891e3f94d557dd8cfa3a80f7903c52d
#8 CACHED

#9 [5/6] WORKDIR libspng
#9 sha256:7ed3baa8b020c26c722838517862cf4c9e16a49c9c7ccb7864ea91255f558cbf
#9 CACHED

#11 [6/6] COPY build.sh /src/
#11 sha256:81e6f9e130fda5a8bfa2bad42e188b502444404ca921811ab64f6dbd868c3fc5
#11 CACHED

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:5451af89f0402e22556890c05b40d4645f0afc7fb136f5f15918ea3d726cb9bc
#12 writing image sha256:5451af89f0402e22556890c05b40d4645f0afc7fb136f5f15918ea3d726cb9bc 0.0s done
#12 naming to gcr.io/fuzzbench/builders/benchmark/libspng_libspng done
#12 DONE 0.3s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:1b9d93c62f310490ea0b8381d53fa273cec3d15ca5296072a1922f4658487afb
#2 transferring context: 2B done
#2 DONE 0.7s

#1 [internal] load build definition from builder.Dockerfile
#1 sha256:7e0c4a5a7b7a658ffc966d1a9f18fb4b3a0b0742edad7e2abd24ffc852318464
#1 transferring dockerfile: 46B done
#1 DONE 0.7s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/libspng_libspng:latest
#3 sha256:7c14e084f5d643ab770629ef646367a792f79d6420ba6a8ca075152e67db38ba
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/libspng_libspng-intermediate
#4 sha256:973045dd55b0f5ef90bc6dee11062b5e5ac91683ad70e4c20f69f10d3d455a42
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libspng_libspng
#5 sha256:5e429093eb93b50bf0e482a13437ab787c349d37e97d75b31a6f0cbb3b654a7b
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:845ab0d65246a0065106faaf04a26fffffb49525f9dea896d57a7cf6076ea274
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:28269f3f94e6120a88613fd3e56e9e017259ba230d3741ea6446cbeab4e8266d
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:59bc04f68794daabafea21b5c2ee87e23f5f945e0b9c9e871ca66c1b9dc157c7 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/libspng_libspng-intermediate done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:c97b9e89ffb1841c8ed1075fde928995eae359ea7422aecc7e40af5296e049f2
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:de4d3f4dd74d6d717365e4face8fdf4439bf45444f08974446b201751cd146e6
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:fa438b2523cc049598bf74872815a3cd8aeefdd6493981b8d5ee4ee9825025bd
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:d098df21e1804d5ae667a3a21370f6ce8383f157fe942f27eb3c8cd6056a4da0
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:83efa8bdd6b0abe8c10a32f5519563e67d0700023320c574136e525c002d0dc8
#11 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:caedd6244250d30029ba2b8f035a5bab86789a8afafae79729052ed47391f413
#9 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:ee170c346ca22719a5b01d22285d98a36acaad4349b3f9d4010ee1dc88312978
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:3e04b5fd0a277df2bc5cd3367dbf9178b152077681f3e4447621291a56e5d56f 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:78daa313390b057667d1a64dae30ff6dbb6b7c7eddf562ac1b467db6c314fb9f
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:e2b35d551bf8575cbe3ce1b12d7b74be380a69dd164c89f6ee722273436ddbf6
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libspng_libspng-intermediate:latest
#3 sha256:42ddb1fe0a471822f672a4e605d42428dbe089ef8d6148b9b35e483971640366
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:8958e2a7f6ac2c837c8ab0d567395270320a809ef900a52f24313e3d9e73f593
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libspng_libspng-intermediate
#6 sha256:0f0e93f2573e044c7addfe355c17c6a6830160d1d5a2f3d548b149996683d3f3
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/libspng_libspng
#5 sha256:e03fcc070c6ad1f0ebf209b49126c1a2c1b8dbb3b7475ba490d94144a3cffa08
#5 ERROR: gcr.io/fuzzbench/builders/afl/libspng_libspng:latest: not found

#12 [internal] load build context
#12 sha256:8958e2a7f6ac2c837c8ab0d567395270320a809ef900a52f24313e3d9e73f593
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.2s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:7cf3039110ab7761347c3d70330ea625a85cc3a0acaa232b2927f25e078ed37b
#9 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:c3168163bad1c5a1e739fc84720cae31f249435eebd0cd4ba25c6cf8f2c8d221
#11 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:1628594b6e2cfeb88f8142658c2aa0adef826504684cb40b2c6f3e5671d50df9
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:39559641dd3866c10ebd244b6c7e39336988c72861e17e5777aa5011b32139f1
#14 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:4c85fdcff40ee7d11043b476c18202fd4f2794c39361622fd3952ac1a32cf91c
#16 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:e7874b5de80a52dac70e4bae04cc442c113400a12e85d1e371eb821fb121e579
#18 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:306d911b951000b5e3f287736deaeb72f87b1fb3325c16a2c21f74d426c4b823
#10 CACHED

#15 [stage-1  8/13] COPY benchmarks/libspng_libspng/benchmark.yaml /
#15 sha256:8f9733f023dfe632d34cd726d9c3ac9597888d3cae43d845eb0aa5f0aac4baf8
#15 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:60c735993e1d9fe1efdb0331ffe280aadfae27ef975fb0906f8a48c227ea1283
#17 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:335a2e41d763103810afdfa1c36ecc8a63936f2bd1636e121e106527d1214de4
#8 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:87cacb726a6d0d64d6d7f832676561cfdc4ed1d14928ea39b9718fdc5e260268
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:4be9154676907df57965e5a4b81a823c7b12f5eea5f264f1c4bfb418a46db8d2
#20 0.481 Run fuzzer_build to build the target
#20 0.599 FUZZ_TARGET = libspng
#20 0.599 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.599 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.604 Building benchmark libspng_libspng with fuzzer afl
#20 0.608 + /src/libspng/tests/ossfuzz.sh
#20 0.612 mkdir: cannot create directory ‘/src/zlib/build’: No such file or directory
#20 0.613 Traceback (most recent call last):
#20 0.613   File "<string>", line 1, in <module>
#20 0.613   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 0.614     utils.build_benchmark()
#20 0.614   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 0.614     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 0.614   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 0.614     raise CalledProcessError(retcode, cmd)
#20 0.614 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libspng_libspng:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2690938: .afl-libspng_libspng-builder] Error 1
