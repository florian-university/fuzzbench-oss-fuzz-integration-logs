WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: muparser_set_eval_fuzzer.
INFO:root:Please run "make test-run-afl-muparser_set_eval_fuzzer" to test integration.
#2 [internal] load .dockerignore
#2 sha256:d45b65c63a1be4ce2aa9113d95343800c121052e33bb315420dd98b5daf2ff35
#2 transferring context: 2B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:062c6b4086381471de3b482c9ca90e587125ff2e9a897d4919ca36759eab0b38
#1 transferring dockerfile: 32B done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#10 [internal] load build context
#10 sha256:73cf0bdbad9ff73b2353a612f85c8d50cfe13027eeb9ee83f24e7eb03397125b
#10 DONE 0.0s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:77750d283f2957d1beeddda2e8f6c5604ab5f969a3616e9cac40f4261ca04c0a
#5 sha256:7999addb2cd81975cd6421c6aaef5643a901995c540a40e8df741ab4c30f6043
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/muparser_set_eval_fuzzer
#4 sha256:7d66e9489fb00193b0acc39d2a4921cc3f85b9aefbbdab77d0c1f2a399a31389
#4 DONE 0.9s

#10 [internal] load build context
#10 sha256:73cf0bdbad9ff73b2353a612f85c8d50cfe13027eeb9ee83f24e7eb03397125b
#10 transferring context: 1.28kB done
#10 DONE 0.4s

#6 [2/6] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:52e32c454805a8c94e441551d01b16d090304920e0b4ce6b465dec91bafa72a3
#6 CACHED

#7 [3/6] RUN apt-get install -y build-essential cmake pkg-config
#7 sha256:e7777c80b91ea56a93de27c292a1fc20f119de587e7f0633e877b47ff6f02966
#7 CACHED

#8 [4/6] RUN git clone --depth 1 https://github.com/beltoforion/muparser.git muparser
#8 sha256:ab81dfd8bb841b1fcdbcfb8d94f2dd5fc9fdb64de5a47f510e41ea44ed8a4efb
#8 CACHED

#9 [5/6] WORKDIR muparser
#9 sha256:9b4466bde22b1ee7a26c48c42969c154d1bca17b9b3c9cafefbba778e7c09797
#9 CACHED

#11 [6/6] COPY build.sh set_eval_fuzzer.cc /src/
#11 sha256:fc115dece3a7a479dd3932777b48dc7714713b2c7e578028896a1cfb11d15984
#11 DONE 0.4s

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:c6870db49ecd52ebd655e67a8db2e9b0d74cf26499e9936e6a03cf53647863af
#12 writing image sha256:c6870db49ecd52ebd655e67a8db2e9b0d74cf26499e9936e6a03cf53647863af 0.0s done
#12 naming to gcr.io/fuzzbench/builders/benchmark/muparser_set_eval_fuzzer done
#12 DONE 0.3s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:a950ab2c0c45dcb16dcb76b4b1c5f067eac278e9cd7bf03f83e42f08376c3f72
#1 transferring dockerfile: 46B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:f6253b0f27069c300990ef98b0e03dc70db6e77b56c892cc8347ae46925199c1
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/muparser_set_eval_fuzzer:latest
#3 sha256:a382935156058643415701c76a892e21e87394a63cf8f381a4884c57b3a39f09
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/muparser_set_eval_fuzzer
#5 sha256:1c580541e231bb8ec91f24870f73c3d5f65cf9bd5b571a52f579d33f0cf00faf
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer-intermediate
#4 sha256:df10f47354a0900a817ef83f31654bac582b31fb148747dbb0b749111469bfad
#4 DONE 0.9s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/muparser_set_eval_fuzzer
#5 sha256:1c580541e231bb8ec91f24870f73c3d5f65cf9bd5b571a52f579d33f0cf00faf
#5 DONE 1.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:f1bc79bfc014a3ae113a3f0b020d0ca487121d284806b4741be8008e284a148e
#6 0.485 Cloning into '/afl'...
#6 1.279 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.279 
#6 1.279 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.279 changes and commit them, and you can discard any commits you make in this
#6 1.279 state without impacting any branches by switching back to a branch.
#6 1.279 
#6 1.279 If you want to create a new branch to retain commits you create, you may
#6 1.279 do so (now or later) by using -c with the switch command. Example:
#6 1.279 
#6 1.279   git switch -c <new-branch-name>
#6 1.279 
#6 1.279 Or undo this operation with:
#6 1.279 
#6 1.279   git switch -
#6 1.279 
#6 1.279 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.279 
#6 1.279 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.297 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.297 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.473 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.482 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.926 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.255 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.692 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.840 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.244 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.494 ln -sf afl-as as
#6 5.496 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.498 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.499 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.1s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:f982fcfde46b0fb2c890195060c9bd6c4c23789b58742fdf6b61f0c60e4648f3
#7 0.757 Hit:1 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 0.757 Hit:2 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.762 Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.786 Hit:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.808 Hit:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 1.751 Reading package lists...
#7 3.561 Reading package lists...
#7 5.040 Building dependency tree...
#7 5.250 Reading state information...
#7 5.512 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.512 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 5.539 --2022-02-10 20:10:15--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.552 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...
#7 5.553 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.
#7 5.577 HTTP request sent, awaiting response... 200 OK
#7 5.596 Length: 9177 (9.0K) [text/plain]
#7 5.596 Saving to: '/afl/afl_driver.cpp'
#7 5.597 
#7 5.597      0K ........                                              100% 8.23M=0.001s
#7 5.598 
#7 5.598 2022-02-10 20:10:15 (8.23 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.598 
#7 7.379 ar: creating /libAFL.a
#7 DONE 7.9s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:2321feff9d987faabf1f76cfd57d49992b5b7efeb407967e7be47a81069235f9
#8 writing image sha256:2321feff9d987faabf1f76cfd57d49992b5b7efeb407967e7be47a81069235f9 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer-intermediate done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:c0f25d772a6e6052e97bf70092c4d3ba032c436148ea6397a4fc0b6496b2f001
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:a7f6bc2c1ac19e96b951b4446932de7077abd73fcab5fdba1c5f711eb2b45811
#2 transferring context: 34B done
#2 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:92758fa53f7f1165c15be038324dd1ed0bd3dc24e8908a3b2c21d4808c53c3da
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:d83da0e33d871e27f41f48a2edb5d5ba77eecd373c118148815251d38d58e662
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:5424e52663efcf835634ed11c8aa783b6361c8fa1326541b03329e8be91def59
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:f9970ac3f52b9b02f653f5e2427a879784e601dbb11135d114ee03f2ca9f8eba
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:07de29add67735fe1bc879ea73e4c922c60f3d04195f9f27beffab84ee6f3df7
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:db37108b741762d6fc963c78f4ea99d80edbbe38f2ea9e4cf93847b349417cfa
#13 writing image sha256:db37108b741762d6fc963c78f4ea99d80edbbe38f2ea9e4cf93847b349417cfa 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:23118cd228fdab99a5099e6b7006b0fd2ec2ab60cdcf0ac44964e94118c187e0
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:73299465303a8017c2803eb4cc3f09184bd108e33ddbb5b8daa12bd23191baeb
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer-intermediate:latest
#3 sha256:dd304270182a663ad0691d70ef7af1c96bf959fb53eb3d83f0ed228ce74702f2
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:96713d10db043618f2f60ec7145cbe9d7ecd70a4a313bc43adb826d6c138294b
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer-intermediate
#6 sha256:2771b59573cd5624eb778fcbbf8a76201a6d8ee9baf4ae744598bd2b25c07f19
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer
#5 sha256:0d38776e5bc786fe44eeac6faed728f0b033df56d3aa59b884734d32295aeeb4
#5 DONE 0.9s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:96713d10db043618f2f60ec7145cbe9d7ecd70a4a313bc43adb826d6c138294b
#12 transferring context: 669.89kB 0.1s done
#12 DONE 0.2s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer-intermediate
#6 sha256:2771b59573cd5624eb778fcbbf8a76201a6d8ee9baf4ae744598bd2b25c07f19
#6 DONE 1.1s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:cb8eb7cd06d2accd49e9743135b55eec1815bed6defe2b1e5b3eab9271f39581
#8 DONE 0.8s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:ab929d20da454c95df100d0b657288ba62d5699768de75d08ddcc6d171d9ce17
#9 DONE 15.5s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:06e0f0f947499a9574d7016f61e9c7ba7b64a98ed9e7f54745af8eb0618686a2
#10 DONE 0.3s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:8b9f52b01f067045d6482f1d720ab80d20ad7b64c80dc24a553896a90111b746
#11 DONE 26.3s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:db5b509437658a95564dcf665ac912edc25c627026ca3b3eccfa8e09f92888ad
#13 DONE 1.1s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:84e28a5e2372b7eca03e2ec13d0c07d230cefaeb01429d02da05633103889150
#14 DONE 2.2s

#15 [stage-1  8/13] COPY benchmarks/muparser_set_eval_fuzzer/benchmark.yaml /
#15 sha256:1bcfa835719d2e103e7afe9403b0529a69b76dbe2fe4b96a6998651cfff6b54a
#15 DONE 1.0s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:0646d8aedabea411cfbf18ed590c31eff5437413e0262fe5fa8dc00039a3421c
#16 DONE 0.8s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:342d248fc5c5df99cdcde837f571e966a6647e61e3a746260a95ff9fa442126c
#17 DONE 0.6s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:0d48c66c890f204c22c500185b8f7be5df58fcea9d25bbe59656f3a02bef25d9
#18 0.613 Checking out commit 84faf557
#18 2.297 From https://github.com/beltoforion/muparser
#18 2.297  * [new tag]         v2.2.5     -> v2.2.5
#18 2.297  * [new tag]         v2.2.6.1   -> v2.2.6.1
#18 2.297  * [new tag]         v2.3.2     -> v2.3.2
#18 2.304 error: pathspec '84faf557' did not match any file(s) known to git
#18 2.308 error: pathspec '84faf557' did not match any file(s) known to git
#18 2.315 error: pathspec '84faf557' did not match any file(s) known to git
#18 2.370 Checkout unsuccessful.
#18 DONE 3.3s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:cc2f00c61990e680a4ce948f739bd7492d76bcdaf50644fd0f056469a5304ea2
#19 DONE 1.0s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:9ae19b56e8ff717cc356d5bb12cc88c0d5f71f48b028dd4025a84f16ff00a932
#20 0.491 Run fuzzer_build to build the target
#20 0.634 FUZZ_TARGET = set_eval_fuzzer
#20 0.634 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.634 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.647 Building benchmark muparser_set_eval_fuzzer with fuzzer afl
#20 0.650 + CFLAGS='-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -fno-sanitize=integer-divide-by-zero,float-divide-by-zero'
#20 0.650 + CXXFLAGS='-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -fno-sanitize=integer-divide-by-zero,float-divide-by-zero'
#20 0.650 + cmake . -DBUILD_SHARED_LIBS=OFF -DENABLE_OPENMP=OFF
#20 0.988 -- The C compiler identification is Clang 14.0.0
#20 1.252 -- The CXX compiler identification is Clang 14.0.0
#20 1.274 -- Detecting C compiler ABI info
#20 1.453 -- Detecting C compiler ABI info - done
#20 1.507 -- Check for working C compiler: /usr/local/bin/clang - skipped
#20 1.508 -- Detecting C compile features
#20 1.508 -- Detecting C compile features - done
#20 1.518 -- Detecting CXX compiler ABI info
#20 1.710 -- Detecting CXX compiler ABI info - done
#20 1.776 -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
#20 1.777 -- Detecting CXX compile features
#20 1.778 -- Detecting CXX compile features - done
#20 1.834 -- Configuring done
#20 1.871 -- Generating done
#20 1.885 -- Build files have been written to: /src/muparser
#20 1.889 ++ nproc
#20 1.891 + make -j8
#20 1.918 [  6%] Building CXX object CMakeFiles/muparser.dir/src/muParser.cpp.o
#20 1.918 [ 12%] Building CXX object CMakeFiles/muparser.dir/src/muParserBase.cpp.o
#20 1.919 [ 18%] Building CXX object CMakeFiles/muparser.dir/src/muParserBytecode.cpp.o
#20 1.933 [ 31%] Building CXX object CMakeFiles/muparser.dir/src/muParserCallback.cpp.o
#20 1.933 [ 43%] Building CXX object CMakeFiles/muparser.dir/src/muParserDLL.cpp.o
#20 1.933 [ 50%] Building CXX object CMakeFiles/muparser.dir/src/muParserError.cpp.o
#20 1.933 [ 50%] Building CXX object CMakeFiles/muparser.dir/src/muParserInt.cpp.o
#20 1.933 [ 50%] Building CXX object CMakeFiles/muparser.dir/src/muParserTest.cpp.o
#20 3.911 [ 56%] Building CXX object CMakeFiles/muparser.dir/src/muParserTokenReader.cpp.o
#20 9.063 [ 62%] Linking CXX static library libmuparser.a
#20 9.103 [ 62%] Built target muparser
#20 9.114 [ 68%] Building CXX object CMakeFiles/t_ParserTest.dir/test/t_ParserTest.cpp.o
#20 9.114 [ 75%] Building CXX object CMakeFiles/example1.dir/samples/example1/example1.cpp.o
#20 9.115 [ 81%] Building C object CMakeFiles/example2.dir/samples/example2/example2.c.o
#20 9.274 [ 87%] Linking CXX executable example2
#20 9.578 [ 87%] Built target example2
#20 10.68 [ 93%] Linking CXX executable t_ParserTest
#20 10.99 [ 93%] Built target t_ParserTest
#20 11.96 [100%] Linking CXX executable example1
#20 12.25 [100%] Built target example1
#20 12.25 + make install
#20 12.33 Consolidate compiler generated dependencies of target muparser
#20 12.35 [ 62%] Built target muparser
#20 12.37 Consolidate compiler generated dependencies of target t_ParserTest
#20 12.38 [ 75%] Built target t_ParserTest
#20 12.39 Consolidate compiler generated dependencies of target example1
#20 12.40 [ 87%] Built target example1
#20 12.41 Consolidate compiler generated dependencies of target example2
#20 12.42 [100%] Built target example2
#20 12.43 Install the project...
#20 12.43 -- Install configuration: "Release"
#20 12.43 -- Installing: /usr/local/lib/libmuparser.a
#20 12.64 -- Installing: /usr/local/include/muParser.h
#20 12.64 -- Installing: /usr/local/include/muParserBase.h
#20 12.64 -- Installing: /usr/local/include/muParserBytecode.h
#20 12.64 -- Installing: /usr/local/include/muParserCallback.h
#20 12.64 -- Installing: /usr/local/include/muParserDLL.h
#20 12.64 -- Installing: /usr/local/include/muParserDef.h
#20 12.64 -- Installing: /usr/local/include/muParserError.h
#20 12.64 -- Installing: /usr/local/include/muParserFixes.h
#20 12.64 -- Installing: /usr/local/include/muParserInt.h
#20 12.64 -- Installing: /usr/local/include/muParserTemplateMagic.h
#20 12.64 -- Installing: /usr/local/include/muParserTest.h
#20 12.64 -- Installing: /usr/local/include/muParserToken.h
#20 12.64 -- Installing: /usr/local/include/muParserTokenReader.h
#20 12.64 -- Installing: /usr/local/lib/cmake/muparser/muparser-targets.cmake
#20 12.64 -- Installing: /usr/local/lib/cmake/muparser/muparser-targets-release.cmake
#20 12.64 -- Installing: /usr/local/lib/cmake/muparser/muparserConfig.cmake
#20 12.64 -- Installing: /usr/local/lib/cmake/muparser/muparserConfigVersion.cmake
#20 12.64 -- Installing: /usr/local/lib/pkgconfig/muparser.pc
#20 12.64 + ldconfig
#20 13.31 ++ pkg-config muparser --cflags
#20 13.32 + MU_CXXFLAGS=-I/usr/local/include
#20 13.32 ++ pkg-config muparser --libs
#20 13.32 + MU_LIBS='-L/usr/local/lib -lmuparser'
#20 13.32 + clang++ -std=c++11 -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -fno-sanitize=integer-divide-by-zero,float-divide-by-zero -I. -I/usr/local/include -L/usr/local/lib -lmuparser /src/set_eval_fuzzer.cc -o /out/set_eval_fuzzer /libAFL.a libmuparser.a
#20 15.05 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 15.7s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:c5fc62d81e772801fc51895f0f836fc5a4c1c3d2d5049615625fcdc5f5e19cee 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer 0.0s done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:fdd60c8459134c537e2775eb99707b2bfd952c93e0054ad2728c0f9e245d63e6
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:45ac0878b6cc98d498bab724ef62d822322d699c89811a4f883db60367d0396a
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/muparser_set_eval_fuzzer-intermediate
#4 sha256:c52dc820c59b497220dd7eb770b1cccc655daf709928e4214b7f42ef5e31add4
#4 DONE 1.5s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:70686c9e833fdcefe0775f583d9dcefc617acd878b5bc490ac010e4c1ee4d56c 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/muparser_set_eval_fuzzer-intermediate done
#6 DONE 0.4s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:91175f17bbb5291a3d740aa336494cbafc573a5220b519d663c995d40faee863
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:9013046f38f664a0c3acd9ddb31672df4dae471c610c90b5f1db2e5b61d59b43
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/muparser_set_eval_fuzzer-intermediate:latest
#3 sha256:4a75a31853a71a069ab1eeaa664f06717f395520f20f2e3aa38bac34db963e0a
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer:latest
#4 sha256:3b9f290902105371a35b202568e089fe428f8777a3f0269998e8535298ba1ee8
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:b18d1cd620fc42216fb17517811e61f6985724c651d378d8bb7e91316f8c27bf
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/muparser_set_eval_fuzzer-intermediate
#6 sha256:b68b3a635929cf5f699181a7d0a7e9b3790e7ebf12af4333b81841e9bf3821c2
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer
#10 sha256:cca756eaa072b53c8b77521df48c235bf40ae1ded1df773b0836e5a52c0797e1
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/muparser_set_eval_fuzzer
#5 sha256:20160b56309f820f506e491653f46c2739cb42287189b830afb2edebf37cf285
#5 DONE 1.3s

#12 [internal] load build context
#12 sha256:b18d1cd620fc42216fb17517811e61f6985724c651d378d8bb7e91316f8c27bf
#12 transferring context: 17.52MB 0.6s done
#12 DONE 0.7s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer
#10 sha256:cca756eaa072b53c8b77521df48c235bf40ae1ded1df773b0836e5a52c0797e1
#10 DONE 2.5s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:26fb984a3c2f1ee76c2f61a88c010c1e091c3ced5cde15e0a5ada4db04b82f6b
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:05bab5cbbd9499f159c777378d4cdbd60ab194bba826d5a9ee4860b13a4b133a
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:11685c36a1b1c2a58be5a25a343e8ecb1700597b436c47d28ada244c3189d94a
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:4d9daa528ddf8bceecd5699fde930c3dc2da43ef1215ddb3df69bf48fd0417d0
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:144fe0978d828343d335cee71d40aaad19e203185d6d55c5277b704b274c9fb2
#13 DONE 1.2s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:51e96e4da9aaaef4f2ed5510678011a74ce343e96bb59dbdd8db0f8851a71ef4
#14 DONE 0.5s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:b13f6fdb701855dc675eb8e0f3ab94a95ac16e7fafb4fe5bdbac726ed496e850
#15 DONE 0.9s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:359119f39f3d4a32d3d50793c713ad516604597788048f8b5fd05bce9ac84a80
#16 DONE 0.8s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:7790f09100825e1f7cd97585b46e3eda00287baea0cff9e8454558535711050c
#17 DONE 0.4s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:e2723be1f09ded45b1d49ba6070f9e94b2c46c06f7f518aab4fd649b6de7ecb9
#18 DONE 0.3s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:05d80e71fee88260cfd19e9602f155cb5e9515f25213cfc4d0d8c7e87789c849
#19 DONE 0.2s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:8292a86c022a0f89a9709ee018f37bf6c18c5524ade75d5b8915cc72e6acab03
#20 DONE 0.6s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:a7e39daaddc3bfff246ac0782f5ae62a58c99061f6c397ff2789a36cf6d2e942 done
#21 naming to gcr.io/fuzzbench/runners/afl/muparser_set_eval_fuzzer 0.0s done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Executed command: "nice -n 5 python3 -u -c from fuzzers.afl import fuzzer; fuzzer.fuzz('/out/seeds', '/out/corpus', '/out/set_eval_fuzzer')" returned: 1.
ERROR:root:Fuzz process returned nonzero. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 209, in run_fuzzer\n    new_process.execute(command,\n  File "/src/common/new_process.py", line 124, in execute\n    raise subprocess.CalledProcessError(retcode, command)\nsubprocess.CalledProcessError: Command \'[\'nice\', \'-n\', \'5\', \'python3\', \'-u\', \'-c\', "from fuzzers.afl import fuzzer; fuzzer.fuzz(\'/out/seeds\', \'/out/corpus\', \'/out/set_eval_fuzzer\')"]\' returned non-zero exit status 1.\n'}
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7ff4d2525700> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
make: *** [docker/generated.mk:2698605: test-run-afl-muparser_set_eval_fuzzer] Error 1
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:8660ba6f33bbd752fe6d60759f856a5015825903e3b6ce16104d3108141dbac7
#1 transferring dockerfile: 32B done
#1 ...

#2 [internal] load .dockerignore
#2 sha256:cbf1e87682fbbfb6c2c79a2321bfa64f71f3e5ab03e617c1550844ec69a9d118
#2 transferring context: 2B done
#2 DONE 0.4s

#1 [internal] load build definition from Dockerfile
#1 sha256:8660ba6f33bbd752fe6d60759f856a5015825903e3b6ce16104d3108141dbac7
#1 DONE 0.5s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:77750d283f2957d1beeddda2e8f6c5604ab5f969a3616e9cac40f4261ca04c0a
#5 sha256:7999addb2cd81975cd6421c6aaef5643a901995c540a40e8df741ab4c30f6043
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/muparser_set_eval_fuzzer
#4 sha256:7d66e9489fb00193b0acc39d2a4921cc3f85b9aefbbdab77d0c1f2a399a31389
#4 DONE 0.0s

#10 [internal] load build context
#10 sha256:05b0eb900d74b52b03018c1aead59c6aa43e0117a3841c14d739f4b42a84e572
#10 transferring context: 68B done
#10 DONE 0.1s

#9 [5/6] WORKDIR muparser
#9 sha256:9b4466bde22b1ee7a26c48c42969c154d1bca17b9b3c9cafefbba778e7c09797
#9 CACHED

#8 [4/6] RUN git clone --depth 1 https://github.com/beltoforion/muparser.git muparser
#8 sha256:ab81dfd8bb841b1fcdbcfb8d94f2dd5fc9fdb64de5a47f510e41ea44ed8a4efb
#8 CACHED

#6 [2/6] RUN apt-get update && apt-get install -y make autoconf automake libtool
#6 sha256:52e32c454805a8c94e441551d01b16d090304920e0b4ce6b465dec91bafa72a3
#6 CACHED

#7 [3/6] RUN apt-get install -y build-essential cmake pkg-config
#7 sha256:e7777c80b91ea56a93de27c292a1fc20f119de587e7f0633e877b47ff6f02966
#7 CACHED

#11 [6/6] COPY build.sh set_eval_fuzzer.cc /src/
#11 sha256:3e9e4bbe8f3808c38961118aa1cd2d2da83619d189bf68d396678b0ae15037ac
#11 CACHED

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:c6870db49ecd52ebd655e67a8db2e9b0d74cf26499e9936e6a03cf53647863af 0.0s done
#12 naming to gcr.io/fuzzbench/builders/benchmark/muparser_set_eval_fuzzer done
#12 DONE 0.4s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:9f265004cc2a477f5cb2fe24af90e42d7a3c259d4e6fd956a8b887f7dd7ebc2b
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:972ab4b1d2c4e1946946c84cf9e48ef23cf119037a31236ffd048eb886267d44
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/muparser_set_eval_fuzzer:latest
#3 sha256:a382935156058643415701c76a892e21e87394a63cf8f381a4884c57b3a39f09
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer-intermediate
#4 sha256:df10f47354a0900a817ef83f31654bac582b31fb148747dbb0b749111469bfad
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/muparser_set_eval_fuzzer
#5 sha256:1c580541e231bb8ec91f24870f73c3d5f65cf9bd5b571a52f579d33f0cf00faf
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:f1bc79bfc014a3ae113a3f0b020d0ca487121d284806b4741be8008e284a148e
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:f982fcfde46b0fb2c890195060c9bd6c4c23789b58742fdf6b61f0c60e4648f3
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:2321feff9d987faabf1f76cfd57d49992b5b7efeb407967e7be47a81069235f9 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer-intermediate done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:32b4e4a4a306223b4358308845e429687bc22e59a4bdc503fbc0dfca0b580001
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:694cfdadc0decbe062535fead4ae4a9514ff71cd3e9fe1d3f5a223b2d4afaa50
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.3s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:11ff712c4e94b78c69a9b88f161b76fd3012d5ba00702e859f85af2caa08fa82
#8 transferring context: 559B 0.1s done
#8 DONE 0.2s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:f1affbd74c9af9e25a68ad7b0a22eb6ee733aec7d0502c1fe1232df4dbea9d0b
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:72f4635384d3885956521166eff7514bfb3d61a02ba10f9c63ea949cb72f444b
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:e17cce50a04e85edaf16ed0eb4c6d391bf637bfed7de24774ffca86792d51be9
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:41d1380fbae6e8a73ebd5abf568a0fe5d57b8acdd3ec2f3285a8a59fa0092a17
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:db37108b741762d6fc963c78f4ea99d80edbbe38f2ea9e4cf93847b349417cfa 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:e43cf6b5a044e96634b7672bcee4e40ff7115a9d03dea462907ff81e306f384e
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:502cd4e48577461617b960899bcb598a8c7720a80f3ad25181867dbc5a9f3301
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.2s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer-intermediate:latest
#3 sha256:dd304270182a663ad0691d70ef7af1c96bf959fb53eb3d83f0ed228ce74702f2
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer-intermediate
#6 sha256:2771b59573cd5624eb778fcbbf8a76201a6d8ee9baf4ae744598bd2b25c07f19
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer
#5 sha256:0d38776e5bc786fe44eeac6faed728f0b033df56d3aa59b884734d32295aeeb4
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:30ee7107c7c6e1346dc2d8bbb08384df04bb46554b4abd4276b1aebaa2812160
#12 transferring context: 669.89kB 0.1s done
#12 DONE 0.2s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:ab929d20da454c95df100d0b657288ba62d5699768de75d08ddcc6d171d9ce17
#9 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:c5c83637169f817516e9e820c35be736e5998b01984d56072c867bc2967d1be7
#16 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:11a5c9affb8d7a309d8cfbc1cd729a8dff20e64288e45c7bc802074054f045d5
#19 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:cb8eb7cd06d2accd49e9743135b55eec1815bed6defe2b1e5b3eab9271f39581
#8 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:7ee10d09e773ce2fb4d48cf68a23912469c036194fd314d66fa3ab3c4feda565
#14 CACHED

#15 [stage-1  8/13] COPY benchmarks/muparser_set_eval_fuzzer/benchmark.yaml /
#15 sha256:fb3f6ee5b75436214b29288413d459fe6ac655a409e29bdab220e3739b1f28f7
#15 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:084f113209f1041e9abda7ad37e6a79f8e17ffb6cd7394a91ee25c4def955356
#18 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:8b9f52b01f067045d6482f1d720ab80d20ad7b64c80dc24a553896a90111b746
#11 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:ffe404aa1fcc5314a9a5f74f0e68fff17a5e41e10c380b7818f58d6e7bed3b97
#17 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:06e0f0f947499a9574d7016f61e9c7ba7b64a98ed9e7f54745af8eb0618686a2
#10 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:b741c55698860db1e33fdde3cec09fd8262e2222e2ae6f391e36faf780b2e0ec
#13 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:045267cda6eacaabc41ba30c8a8a34ec2f633b52b581c127b80181e70ce122e3
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:c5fc62d81e772801fc51895f0f836fc5a4c1c3d2d5049615625fcdc5f5e19cee 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:e89636a7df4ad34edb39e0e0c6893ac079da2cb2e91a0cf505eaa22e254dc16a
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:6856a2b24e2f2e524f0a2013e5cc5b33d1e27a606ec282c23b96cc2205aff5a1
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/muparser_set_eval_fuzzer-intermediate
#5 sha256:c52dc820c59b497220dd7eb770b1cccc655daf709928e4214b7f42ef5e31add4
#5 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:70686c9e833fdcefe0775f583d9dcefc617acd878b5bc490ac010e4c1ee4d56c 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/muparser_set_eval_fuzzer-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:7283c16bc36dbf96f84ca6a2f33f909ad120f28a874032f9ee50359752177900
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:97ae7e7f5c1c5be9b7cf9fbcd3b723aba760a827cf4d473613d1a30fc1450132
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer:latest
#3 sha256:3b9f290902105371a35b202568e089fe428f8777a3f0269998e8535298ba1ee8
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/runners/afl/muparser_set_eval_fuzzer-intermediate:latest
#4 sha256:4a75a31853a71a069ab1eeaa664f06717f395520f20f2e3aa38bac34db963e0a
#4 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/muparser_set_eval_fuzzer-intermediate
#6 sha256:b68b3a635929cf5f699181a7d0a7e9b3790e7ebf12af4333b81841e9bf3821c2
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/muparser_set_eval_fuzzer
#5 sha256:20160b56309f820f506e491653f46c2739cb42287189b830afb2edebf37cf285
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/muparser_set_eval_fuzzer
#10 sha256:cca756eaa072b53c8b77521df48c235bf40ae1ded1df773b0836e5a52c0797e1
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:aac7f972326ea3e86bbf6a050b522043f0b8375482bcf622e6b5f6fd10dbceb5
#12 transferring context: 17.52MB 0.6s done
#12 DONE 0.8s

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:4d9daa528ddf8bceecd5699fde930c3dc2da43ef1215ddb3df69bf48fd0417d0
#11 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:4e8d9eb929dd7c7d061e021ada49819ef81c027cc3956b74abd2a303c34ec06d
#15 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:015fc1af197a629bc3eaa8d41e1cdc7bb264db0f1982e8521e70b87d23debf6f
#16 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:11685c36a1b1c2a58be5a25a343e8ecb1700597b436c47d28ada244c3189d94a
#9 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:dfa124011df59d4ca957bda8bd8fcc5a92a36306b6be42c2857d8dd908b133fc
#14 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:df5d6109dff71abe71ffad7e24cf5e8cda84146cbae8f765fba930fb235d0965
#19 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:05bab5cbbd9499f159c777378d4cdbd60ab194bba826d5a9ee4860b13a4b133a
#8 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:26fb984a3c2f1ee76c2f61a88c010c1e091c3ced5cde15e0a5ada4db04b82f6b
#7 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:b545af3c60b688203a13faf67979c69612e9f80c9573dda9025826670c070964
#13 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:f6fdf38219b7b19b5189fefe91038781fd10d71c2d07c4846645d02f4472e1c9
#17 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:681efb1bcf29597988e5367bc83bddeab7ce98b5dd2050481b66fac77b99fc23
#18 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:b11523a02c57d34a1a6adfcae4c09564c84da8bbd3218bab67fc4ea74ba5325c
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:a7e39daaddc3bfff246ac0782f5ae62a58c99061f6c397ff2789a36cf6d2e942 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/muparser_set_eval_fuzzer done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Executed command: "nice -n 5 python3 -u -c from fuzzers.afl import fuzzer; fuzzer.fuzz('/out/seeds', '/out/corpus', '/out/set_eval_fuzzer')" returned: 1.
ERROR:root:Fuzz process returned nonzero. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 209, in run_fuzzer\n    new_process.execute(command,\n  File "/src/common/new_process.py", line 124, in execute\n    raise subprocess.CalledProcessError(retcode, command)\nsubprocess.CalledProcessError: Command \'[\'nice\', \'-n\', \'5\', \'python3\', \'-u\', \'-c\', "from fuzzers.afl import fuzzer; fuzzer.fuzz(\'/out/seeds\', \'/out/corpus\', \'/out/set_eval_fuzzer\')"]\' returned non-zero exit status 1.\n'}
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f0e69c66700> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
make: *** [docker/generated.mk:2698605: test-run-afl-muparser_set_eval_fuzzer] Error 1
