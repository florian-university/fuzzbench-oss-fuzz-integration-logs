WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: libxls_libxls.
INFO:root:Please run "make test-run-afl-libxls_libxls" to test integration.
#2 [internal] load .dockerignore
#2 sha256:517cb460c37b3f8aebbf3c82e123422a36f7a4406cea55dbdd4c70c9eec85073
#2 transferring context:
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:ec4adf3d7eb25898e7908e21321ad9fc9cc5283314b1cd542c11d4d3eb00b238
#1 transferring dockerfile: 965B done
#1 DONE 0.4s

#2 [internal] load .dockerignore
#2 sha256:517cb460c37b3f8aebbf3c82e123422a36f7a4406cea55dbdd4c70c9eec85073
#2 transferring context: 2B done
#2 DONE 0.4s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#9 [internal] load build context
#9 sha256:2356194e5f65e94cf8a0aa1aa0abec757629ccafc93a9464db7acd36ce8eb9a5
#9 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libxls_libxls
#4 sha256:8dfae0c1ca9a45b8c520600d45fbf2f75a597da0064c8e1e7330103ce62e3fcd
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/libxls_libxls:latest: not found

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 CACHED

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf autoconf-archive automake gettext libtool
#6 sha256:e7fed44e0f87cee9aaed91acb7e12071e52458b28b301ffef13bfef61bfbb37f
#6 ...

#9 [internal] load build context
#9 sha256:2356194e5f65e94cf8a0aa1aa0abec757629ccafc93a9464db7acd36ce8eb9a5
#9 transferring context: 882B done
#9 DONE 0.2s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf autoconf-archive automake gettext libtool
#6 sha256:e7fed44e0f87cee9aaed91acb7e12071e52458b28b301ffef13bfef61bfbb37f
#6 0.773 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#6 0.773 Get:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#6 0.773 Hit:3 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 0.882 Get:4 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#6 0.886 Get:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#6 1.328 Get:6 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1984 kB]
#6 1.579 Get:7 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1134 kB]
#6 1.747 Get:8 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [827 kB]
#6 1.770 Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [755 kB]
#6 2.079 Fetched 5036 kB in 1s (3823 kB/s)
#6 2.079 Reading package lists...
#6 3.676 Reading package lists...
#6 5.104 Building dependency tree...
#6 5.314 Reading state information...
#6 5.527 make is already the newest version (4.2.1-1.2).
#6 5.527 make set to manually installed.
#6 5.527 The following additional packages will be installed:
#6 5.529   autotools-dev gettext-base libcroco3 libltdl-dev libltdl7 libsigsegv2 m4
#6 5.531 Suggested packages:
#6 5.531   gnu-standards autoconf-doc gettext-doc autopoint libasprintf-dev
#6 5.531   libgettextpo-dev libtool-doc gfortran | fortran95-compiler gcj-jdk m4-doc
#6 5.579 The following NEW packages will be installed:
#6 5.579   autoconf autoconf-archive automake autotools-dev gettext gettext-base
#6 5.581   libcroco3 libltdl-dev libltdl7 libsigsegv2 libtool m4
#6 5.654 0 upgraded, 12 newly installed, 0 to remove and 0 not upgraded.
#6 5.654 Need to get 3150 kB of archives.
#6 5.654 After this operation, 17.1 MB of additional disk space will be used.
#6 5.654 Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 autoconf-archive all 20190106-2.1ubuntu1 [665 kB]
#6 5.865 Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 gettext-base amd64 0.19.8.1-10build1 [50.2 kB]
#6 5.869 Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 libsigsegv2 amd64 2.12-2 [13.9 kB]
#6 5.870 Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 m4 amd64 1.4.18-4 [199 kB]
#6 5.885 Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 autoconf all 2.69-11.1 [321 kB]
#6 5.909 Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 autotools-dev all 20180224.1 [39.6 kB]
#6 5.912 Get:7 http://archive.ubuntu.com/ubuntu focal/main amd64 automake all 1:1.16.1-4ubuntu6 [522 kB]
#6 5.951 Get:8 http://archive.ubuntu.com/ubuntu focal/main amd64 libcroco3 amd64 0.6.13-1 [82.5 kB]
#6 5.957 Get:9 http://archive.ubuntu.com/ubuntu focal/main amd64 gettext amd64 0.19.8.1-10build1 [895 kB]
#6 6.080 Get:10 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl7 amd64 2.4.6-14 [38.5 kB]
#6 6.081 Get:11 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl-dev amd64 2.4.6-14 [162 kB]
#6 6.084 Get:12 http://archive.ubuntu.com/ubuntu focal/main amd64 libtool all 2.4.6-14 [161 kB]
#6 6.402 debconf: delaying package configuration, since apt-utils is not installed
#6 6.535 Fetched 3150 kB in 0s (6386 kB/s)
#6 6.615 Selecting previously unselected package autoconf-archive.
#6 6.615 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21291 files and directories currently installed.)
#6 6.637 Preparing to unpack .../00-autoconf-archive_20190106-2.1ubuntu1_all.deb ...
#6 6.646 Unpacking autoconf-archive (20190106-2.1ubuntu1) ...
#6 6.918 Selecting previously unselected package gettext-base.
#6 6.922 Preparing to unpack .../01-gettext-base_0.19.8.1-10build1_amd64.deb ...
#6 6.974 Unpacking gettext-base (0.19.8.1-10build1) ...
#6 7.147 Selecting previously unselected package libsigsegv2:amd64.
#6 7.150 Preparing to unpack .../02-libsigsegv2_2.12-2_amd64.deb ...
#6 7.174 Unpacking libsigsegv2:amd64 (2.12-2) ...
#6 7.292 Selecting previously unselected package m4.
#6 7.295 Preparing to unpack .../03-m4_1.4.18-4_amd64.deb ...
#6 7.319 Unpacking m4 (1.4.18-4) ...
#6 7.462 Selecting previously unselected package autoconf.
#6 7.465 Preparing to unpack .../04-autoconf_2.69-11.1_all.deb ...
#6 7.471 Unpacking autoconf (2.69-11.1) ...
#6 7.635 Selecting previously unselected package autotools-dev.
#6 7.638 Preparing to unpack .../05-autotools-dev_20180224.1_all.deb ...
#6 7.651 Unpacking autotools-dev (20180224.1) ...
#6 7.760 Selecting previously unselected package automake.
#6 7.764 Preparing to unpack .../06-automake_1%3a1.16.1-4ubuntu6_all.deb ...
#6 7.772 Unpacking automake (1:1.16.1-4ubuntu6) ...
#6 7.931 Selecting previously unselected package libcroco3:amd64.
#6 7.934 Preparing to unpack .../07-libcroco3_0.6.13-1_amd64.deb ...
#6 7.940 Unpacking libcroco3:amd64 (0.6.13-1) ...
#6 8.020 Selecting previously unselected package gettext.
#6 8.023 Preparing to unpack .../08-gettext_0.19.8.1-10build1_amd64.deb ...
#6 8.027 Unpacking gettext (0.19.8.1-10build1) ...
#6 8.205 Selecting previously unselected package libltdl7:amd64.
#6 8.208 Preparing to unpack .../09-libltdl7_2.4.6-14_amd64.deb ...
#6 8.220 Unpacking libltdl7:amd64 (2.4.6-14) ...
#6 8.273 Selecting previously unselected package libltdl-dev:amd64.
#6 8.276 Preparing to unpack .../10-libltdl-dev_2.4.6-14_amd64.deb ...
#6 8.286 Unpacking libltdl-dev:amd64 (2.4.6-14) ...
#6 8.393 Selecting previously unselected package libtool.
#6 8.396 Preparing to unpack .../11-libtool_2.4.6-14_all.deb ...
#6 8.402 Unpacking libtool (2.4.6-14) ...
#6 8.536 Setting up gettext-base (0.19.8.1-10build1) ...
#6 8.568 Setting up autoconf-archive (20190106-2.1ubuntu1) ...
#6 8.592 Setting up autotools-dev (20180224.1) ...
#6 8.614 Setting up libsigsegv2:amd64 (2.12-2) ...
#6 8.644 Setting up libcroco3:amd64 (0.6.13-1) ...
#6 8.672 Setting up libltdl7:amd64 (2.4.6-14) ...
#6 8.697 Setting up gettext (0.19.8.1-10build1) ...
#6 8.748 Setting up libtool (2.4.6-14) ...
#6 8.781 Setting up m4 (1.4.18-4) ...
#6 8.800 Setting up autoconf (2.69-11.1) ...
#6 8.831 Setting up automake (1:1.16.1-4ubuntu6) ...
#6 8.873 update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
#6 8.873 update-alternatives: warning: skip creation of /usr/share/man/man1/automake.1.gz because associated file /usr/share/man/man1/automake-1.16.1.gz (of link group automake) doesn't exist
#6 8.873 update-alternatives: warning: skip creation of /usr/share/man/man1/aclocal.1.gz because associated file /usr/share/man/man1/aclocal-1.16.1.gz (of link group automake) doesn't exist
#6 8.891 Setting up libltdl-dev:amd64 (2.4.6-14) ...
#6 8.919 Processing triggers for libc-bin (2.31-0ubuntu9.2) ...
#6 DONE 9.4s

#7 [3/5] RUN git clone --depth 1 https://github.com/libxls/libxls libxls
#7 sha256:616bea7565c4357e3770a082b82671d0fbaf0d96271f860f3eb295786796b1c5
#7 0.450 Cloning into 'libxls'...
#7 DONE 2.0s

#8 [4/5] WORKDIR libxls
#8 sha256:da4094e5c00f7bca3ccf4507615e04ff4558cf2b9072ba5821762d15a8850cc3
#8 DONE 0.2s

#10 [5/5] COPY build.sh /src/
#10 sha256:bf858a73b763b55b7bcd1595a12b066457cb40a3a48df845d6d8712e76ab20da
#10 DONE 0.1s

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:8847891ededdadadffe16bbc298a34986af595b86e22a9325ded218d0baaa3e2 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/libxls_libxls done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libxls_libxls:
------
#2 [internal] load .dockerignore
#2 sha256:024dd47d4a0b05eac3ffcb48822efe56c0a9dcb203968718a771a1679f26b3c5
#2 transferring context: 2B done
#2 DONE 0.1s

#1 [internal] load build definition from builder.Dockerfile
#1 sha256:a50f73a1bea8773f06198353173afdfcb6381600d13541e06992a037507655e1
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/libxls_libxls:latest
#3 sha256:050cc1057571eedff6500c31de1eaf9e85105c5279b1f86aab36aad45cc23a07
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libxls_libxls
#5 sha256:de7e8f2b611225d2f49730923fc301ada54b7cc3005e370534facafed36f15ca
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate
#4 sha256:caf73f669ea0684a8d885080c9529a5453ffa241374d3d7cfe870e864cae4385
#4 ERROR: gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libxls_libxls
#5 sha256:de7e8f2b611225d2f49730923fc301ada54b7cc3005e370534facafed36f15ca
#5 DONE 0.8s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:a5a214290a0ae3603d5e5ebf63ce64787c1e4a21f08dc19928c6b94ba4ee145e
#6 0.402 Cloning into '/afl'...
#6 1.203 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.203 
#6 1.203 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.203 changes and commit them, and you can discard any commits you make in this
#6 1.203 state without impacting any branches by switching back to a branch.
#6 1.203 
#6 1.203 If you want to create a new branch to retain commits you create, you may
#6 1.203 do so (now or later) by using -c with the switch command. Example:
#6 1.203 
#6 1.203   git switch -c <new-branch-name>
#6 1.203 
#6 1.203 Or undo this operation with:
#6 1.203 
#6 1.203   git switch -
#6 1.203 
#6 1.203 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.203 
#6 1.203 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.236 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.236 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.416 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.423 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 4.014 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.331 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.763 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.917 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.318 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.552 ln -sf afl-as as
#6 5.554 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.556 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.557 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 5.9s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:a8b316188d1a489f8315df54efbbb9bda7549b0b7645b7eaf2d0a5f58c0ca53a
#7 0.834 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.834 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.834 Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.853 Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 0.938 Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 1.829 Reading package lists...
#7 3.361 Reading package lists...
#7 4.792 Building dependency tree...
#7 5.007 Reading state information...
#7 5.252 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.252 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 5.257 --2022-02-18 09:43:44--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.259 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.109.133, 185.199.111.133, 185.199.110.133, ...
#7 5.261 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.109.133|:443... connected.
#7 5.285 HTTP request sent, awaiting response... 200 OK
#7 5.444 Length: 9177 (9.0K) [text/plain]
#7 5.444 Saving to: '/afl/afl_driver.cpp'
#7 5.444 
#7 5.444      0K ........                                              100% 6.85M=0.001s
#7 5.445 
#7 5.445 2022-02-18 09:43:44 (6.85 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.445 
#7 7.191 ar: creating /libAFL.a
#7 DONE 8.1s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:3f500a63d2aaf327f00ece2bf173a51b7693f71730b24096ef46848cec6c1afd 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate 0.0s done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate:
------
#2 [internal] load .dockerignore
#2 sha256:e1529e909750d0f6760c11cf05e32a78274dabc5ea2e2c1ad416942136a91c77
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:8a1e3f907e3d3c9ebb1e2d967f4388cd327821cbcae885da042e42f5c019af01
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#8 [internal] load build context
#8 sha256:115174f10f77fbf973e8328af9f0fa2f9ec14e43cf0b078cbe478e8e16cad316
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:3889fad67a53ab389d279058881bffe50064c99be66bbec161c50217d0a04d24
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:88afcb932989366ab7fd930fa42ce8cb514fee2e0784247e81a27f66ae09c6cb
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:a99c62551ba37f9b5ace838913960f5d14984345f5fe199a79e1ac1e74f49c16
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:9b3ba4a407f511bc97969ce97aa0cfd6a1b1729d9ae221c87f33ac8615773cae
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:b0bf59e5a98d6281c53a32058db7d7b8c5940d51f877ed2658dddf314a949583
#13 writing image sha256:b0bf59e5a98d6281c53a32058db7d7b8c5940d51f877ed2658dddf314a949583 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:e2b02ed2d31da1848b4c299042243c76ddeb3048c6c845092b29f5f3f08ca5c6
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:4c6055968f99f4ad8c687002cc55bb5a67f11af065ad78d840e12bfaaffdd5e5
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate:latest
#3 sha256:b92e5b95b6efa8c0904ca95a80aa4d34fd68737798db872d7845971eac15c1e3
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:2b93d651be3705f5db6dcd3f1feca2296d8d07b5b0663e551517bf0724c6b266
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate
#6 sha256:ed739f324cf022c4cea312faeb578d9174d3a837f117ca761fa47ceadc2f1111
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/libxls_libxls
#5 sha256:6742af2323d3b93e2138889abb0616b919b2f19f27aeb9dfe87069ea04519f95
#5 ERROR: gcr.io/fuzzbench/builders/afl/libxls_libxls:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:2b93d651be3705f5db6dcd3f1feca2296d8d07b5b0663e551517bf0724c6b266
#12 transferring context: 669.86kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate
#6 sha256:ed739f324cf022c4cea312faeb578d9174d3a837f117ca761fa47ceadc2f1111
#6 DONE 0.5s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:6c3e5552fe77e511ae253f882224f59b5b6645a2d319dae62dc47243b57d8315
#8 DONE 0.8s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:49c71f43a000721d03959d1f464f590f0b36e21e6564c3c90967c147d31147f1
#9 DONE 22.0s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:aee8e0c1310591b131e03c8d01cc7cdf7b46e5085a380e6df991b96501d41abf
#10 DONE 0.3s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:40b7fc0dc21217e406bc9a5dc7a7c206eecd7ee48b153735414fabd205443a9b
#11 DONE 28.7s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:25114196ee79c4061a39d50d1c2a18585677398141a71d683f4675db26b356d0
#13 DONE 0.3s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:f71556ffa3767754a0580cff42926740aae87888ebcc1af52e1c81c0a4e30f01
#14 DONE 0.7s

#15 [stage-1  8/13] COPY benchmarks/libxls_libxls/benchmark.yaml /
#15 sha256:4a555bb48ce8d920ca8c607809214f229ed34f59edcf0d99f63f8fc1167b3b22
#15 DONE 0.3s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:558e8c22003bfa70a854312c26099602e4ff8ec5d9361fc977b38734d8c5df06
#16 DONE 0.6s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:d04da4ff068d29e6f752a45b5569a1522ecaf878e429a252babdd7fd4974c97e
#17 DONE 0.2s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:9b821e6f71e19e810908b897408179ca82357367df276d2906a82d4b6b163fa9
#18 0.471 Checking out commit fd56d723
#18 2.589 From https://github.com/libxls/libxls
#18 2.589  * [new tag]         v0.2.0     -> v0.2.0
#18 2.589  * [new tag]         v0.3.0     -> v0.3.0
#18 2.590  * [new tag]         v1.0.0     -> v1.0.0
#18 2.590  * [new tag]         v1.1.0     -> v1.1.0
#18 2.590  * [new tag]         v1.2.0     -> v1.2.0
#18 2.590  * [new tag]         v1.2.1     -> v1.2.1
#18 2.591  * [new tag]         v1.3.0     -> v1.3.0
#18 2.591  * [new tag]         v1.3.1     -> v1.3.1
#18 2.591  * [new tag]         v1.3.2     -> v1.3.2
#18 2.591  * [new tag]         v1.3.3     -> v1.3.3
#18 2.592  * [new tag]         v1.3.4     -> v1.3.4
#18 2.592  * [new tag]         v1.4.0     -> v1.4.0
#18 2.592  * [new tag]         v1.5.0     -> v1.5.0
#18 2.592  * [new tag]         v1.5.0-rc0 -> v1.5.0-rc0
#18 2.593  * [new tag]         v1.5.0-rc1 -> v1.5.0-rc1
#18 2.593  * [new tag]         v1.5.0-rc2 -> v1.5.0-rc2
#18 2.593  * [new tag]         v1.5.0-rc3 -> v1.5.0-rc3
#18 2.593  * [new tag]         v1.5.0-rc4 -> v1.5.0-rc4
#18 2.594  * [new tag]         v1.5.1     -> v1.5.1
#18 2.594  * [new tag]         v1.5.1-rc0 -> v1.5.1-rc0
#18 2.594  * [new tag]         v1.5.1-rc1 -> v1.5.1-rc1
#18 2.595  * [new tag]         v1.5.2     -> v1.5.2
#18 2.595  * [new tag]         v1.5.2-rc0 -> v1.5.2-rc0
#18 2.595  * [new tag]         v1.5.3     -> v1.5.3
#18 2.595  * [new tag]         v1.5.3-rc0 -> v1.5.3-rc0
#18 2.596  * [new tag]         v1.6.0     -> v1.6.0
#18 2.596  * [new tag]         v1.6.0-rc0 -> v1.6.0-rc0
#18 2.596  * [new tag]         v1.6.1     -> v1.6.1
#18 2.596  * [new tag]         v1.6.2-rc0 -> v1.6.2-rc0
#18 2.603 error: pathspec 'fd56d723' did not match any file(s) known to git
#18 2.613 error: pathspec 'fd56d723' did not match any file(s) known to git
#18 2.620 error: pathspec 'fd56d723' did not match any file(s) known to git
#18 2.637 error: pathspec 'fd56d723' did not match any file(s) known to git
#18 2.671 Checkout unsuccessful.
#18 DONE 3.0s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:6819dfe42743266bdbb20aa1dc40b19a337f704e8927d2dd86dbfe673a6e2b0d
#19 DONE 1.5s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:9c48e994b0505484b1cc39790a24c4e2707325d1655ecbf27cdfde228d0fbb22
#20 0.585 Run fuzzer_build to build the target
#20 0.697 FUZZ_TARGET = libxls
#20 0.697 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.697 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.712 Building benchmark libxls_libxls with fuzzer afl
#20 0.716 + ./bootstrap
#20 6.511 libtoolize: putting auxiliary files in '.'.
#20 6.511 libtoolize: copying file './ltmain.sh'
#20 6.744 libtoolize: Consider adding 'AC_CONFIG_MACRO_DIRS([m4])' to configure.ac,
#20 6.744 libtoolize: and rerunning libtoolize and aclocal.
#20 6.744 libtoolize: Consider adding '-I m4' to ACLOCAL_AMFLAGS in Makefile.am.
#20 12.50 configure.ac:28: installing './compile'
#20 12.51 configure.ac:28: installing './config.guess'
#20 12.51 configure.ac:28: installing './config.sub'
#20 12.52 configure.ac:25: installing './install-sh'
#20 12.52 configure.ac:25: installing './missing'
#20 12.57 Makefile.am: installing './depcomp'
#20 12.65 parallel-tests: installing './test-driver'
#20 12.70 + ./configure --enable-static
#20 12.93 checking for a BSD-compatible install... /usr/bin/install -c
#20 12.94 checking whether build environment is sane... yes
#20 12.96 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 12.96 checking for gawk... no
#20 12.96 checking for mawk... mawk
#20 12.96 checking whether make sets $(MAKE)... yes
#20 12.98 checking whether make supports nested variables... yes
#20 13.00 checking whether make supports nested variables... (cached) yes
#20 13.02 checking build system type... x86_64-pc-linux-gnu
#20 13.10 checking host system type... x86_64-pc-linux-gnu
#20 13.10 checking how to print strings... printf
#20 13.16 checking whether make supports the include directive... yes (GNU style)
#20 13.17 checking for gcc... clang
#20 13.24 checking whether the C compiler works... yes
#20 13.37 checking for C compiler default output file name... a.out
#20 13.37 checking for suffix of executables... 
#20 13.49 checking whether we are cross compiling... no
#20 13.62 checking for suffix of object files... o
#20 13.65 checking whether we are using the GNU C compiler... yes
#20 13.68 checking whether clang accepts -g... yes
#20 13.70 checking for clang option to accept ISO C89... none needed
#20 13.75 checking whether clang understands -c and -o together... yes
#20 13.79 checking dependency style of clang... gcc3
#20 13.85 checking for a sed that does not truncate output... /usr/bin/sed
#20 13.86 checking for grep that handles long lines and -e... /usr/bin/grep
#20 13.87 checking for egrep... /usr/bin/grep -E
#20 13.87 checking for fgrep... /usr/bin/grep -F
#20 13.87 checking for ld used by clang... /usr/bin/ld
#20 13.89 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 13.90 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 13.90 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 13.94 checking whether ln -s works... yes
#20 13.94 checking the maximum length of command line arguments... 1572864
#20 13.95 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 13.95 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 13.95 checking for /usr/bin/ld option to reload object files... -r
#20 13.95 checking for objdump... objdump
#20 13.95 checking how to recognize dependent libraries... pass_all
#20 13.95 checking for dlltool... no
#20 13.95 checking how to associate runtime and link libraries... printf %s\n
#20 13.95 checking for ar... ar
#20 13.96 checking for archiver @FILE support... @
#20 13.99 checking for strip... strip
#20 14.00 checking for ranlib... ranlib
#20 14.00 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 14.18 checking for sysroot... no
#20 14.18 checking for a working dd... /usr/bin/dd
#20 14.18 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 14.21 checking for mt... no
#20 14.22 checking if : is a manifest tool... no
#20 14.22 checking how to run the C preprocessor... clang -E
#20 14.32 checking for ANSI C header files... yes
#20 14.56 checking for sys/types.h... yes
#20 14.61 checking for sys/stat.h... yes
#20 14.67 checking for stdlib.h... yes
#20 14.72 checking for string.h... yes
#20 14.79 checking for memory.h... yes
#20 14.85 checking for strings.h... yes
#20 14.91 checking for inttypes.h... yes
#20 14.97 checking for stdint.h... yes
#20 15.03 checking for unistd.h... yes
#20 15.09 checking for dlfcn.h... yes
#20 15.15 checking for objdir... .libs
#20 15.32 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 15.35 checking for clang option to produce PIC... -fPIC -DPIC
#20 15.35 checking if clang PIC flag -fPIC -DPIC works... yes
#20 15.38 checking if clang static flag -static works... yes
#20 15.55 checking if clang supports -c -o file.o... yes
#20 15.59 checking if clang supports -c -o file.o... (cached) yes
#20 15.59 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 15.61 checking whether -lc should be explicitly linked in... no
#20 15.67 checking dynamic linker characteristics... GNU/Linux ld.so
#20 15.84 checking how to hardcode library paths into programs... immediate
#20 15.84 checking whether stripping libraries is possible... yes
#20 15.84 checking if libtool supports shared libraries... yes
#20 15.84 checking whether to build shared libraries... yes
#20 15.84 checking whether to build static libraries... yes
#20 15.85 checking for gcc... (cached) clang
#20 15.91 checking whether we are using the GNU C compiler... (cached) yes
#20 15.91 checking whether clang accepts -g... (cached) yes
#20 15.91 checking for clang option to accept ISO C89... (cached) none needed
#20 15.91 checking whether clang understands -c and -o together... (cached) yes
#20 15.91 checking dependency style of clang... (cached) gcc3
#20 15.92 checking for clang option to accept ISO C99... none needed
#20 16.05 checking whether we are using the GNU C++ compiler... yes
#20 16.08 checking whether clang++ accepts -g... yes
#20 16.11 checking dependency style of clang++... gcc3
#20 16.17 checking how to run the C++ preprocessor... clang++ -E
#20 16.47 checking for ld used by clang++... /usr/bin/ld -m elf_x86_64
#20 16.49 checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
#20 16.51 checking whether the clang++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 16.66 checking for clang++ option to produce PIC... -fPIC -DPIC
#20 16.66 checking if clang++ PIC flag -fPIC -DPIC works... yes
#20 16.69 checking if clang++ static flag -static works... yes
#20 16.97 checking if clang++ supports -c -o file.o... yes
#20 17.01 checking if clang++ supports -c -o file.o... (cached) yes
#20 17.01 checking whether the clang++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 17.02 checking dynamic linker characteristics... (cached) GNU/Linux ld.so
#20 17.02 checking how to hardcode library paths into programs... immediate
#20 17.03 checking whether clang++ supports C++11 features with -std=gnu++11... yes
#20 17.09 checking for strdup... yes
#20 17.23 checking for wcstombs_l... no
#20 17.37 checking wchar.h usability... yes
#20 17.43 checking wchar.h presence... yes
#20 17.45 checking for wchar.h... yes
#20 17.46 checking xlocale.h usability... no
#20 17.53 checking xlocale.h presence... no
#20 17.56 checking for xlocale.h... no
#20 17.56 checking for stdlib.h... (cached) yes
#20 17.56 checking for GNU libc compatible malloc... yes
#20 17.70 checking for stdlib.h... (cached) yes
#20 17.70 checking for GNU libc compatible realloc... yes
#20 17.84 checking for size_t... yes
#20 17.96 checking for ld used by clang... /usr/bin/ld -m elf_x86_64
#20 17.98 checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
#20 17.99 checking for shared library run path origin... done
#20 18.02 checking for iconv... yes
#20 18.35 checking for working iconv... yes
#20 18.99 checking for iconv declaration... 
#20 19.04          extern size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
#20 19.10 checking that generated files are newer than configure... done
#20 19.10 configure: creating ./config.status
#20 20.17 config.status: creating Makefile
#20 20.19 config.status: creating libxls.pc
#20 20.25 config.status: creating config.h
#20 20.26 config.status: executing depfiles commands
#20 20.36 config.status: executing libtool commands
#20 20.38 configure: ---
#20 20.38 configure: catdoc users: avoid xls2csv conflicts, use ./configure --program-prefix=lib to get libxls2csv
#20 20.38 configure: ---
#20 20.38 
#20 20.38 Configuration:
#20 20.38 
#20 20.38 C compiler: clang
#20 20.38 C++ compiler: clang++ -std=gnu++11
#20 20.38 CFLAGS: -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard
#20 20.38 CXXFLAGS: -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard
#20 20.38 LIBS:  
#20 20.38 
#20 20.38 Host: x86_64-pc-linux-gnu
#20 20.38 Extra ld flags: 
#20 20.45 + make clean
#20 20.45  rm -f xls2csv
#20 20.46  rm -f test_libxls test2_libxls test_cpp
#20 20.46 test -z "libxlsreader.la" || rm -f libxlsreader.la
#20 20.47 rm -f ./so_locations
#20 20.47 rm -rf .libs _libs
#20 20.47 rm -rf src/.libs src/_libs
#20 20.48  rm -f test_libxls test2_libxls test_cpp
#20 20.48 rm -f *.o
#20 20.48 rm -f cplusplus/*.o
#20 20.48 rm -f fuzz/*.o
#20 20.49 rm -f src/*.o
#20 20.49 rm -f src/*.lo
#20 20.49 rm -f test/*.o
#20 20.50 test -z "test_libxls.log" || rm -f test_libxls.log
#20 20.50 test -z "test_libxls.trs" || rm -f test_libxls.trs
#20 20.50 test -z "test-suite.log" || rm -f test-suite.log
#20 20.51 rm -f *.lo
#20 20.51 + make
#20 20.52 make  all-am
#20 20.52 make[1]: Entering directory '/src/libxls'
#20 20.54   CC       src/xls2csv.o
#20 20.69   CC       src/libxlsreader_la-xlstool.lo
#20 21.27   CC       src/libxlsreader_la-endian.lo
#20 21.50   CC       src/libxlsreader_la-locale.lo
#20 21.65   CC       src/libxlsreader_la-ole.lo
#20 22.26   CC       src/libxlsreader_la-xls.lo
#20 23.68   CCLD     libxlsreader.la
#20 23.99   CCLD     xls2csv
#20 24.25   CC       test/test.o
#20 24.36   CCLD     test_libxls
#20 24.60   CC       test/test2.o
#20 24.68   CCLD     test2_libxls
#20 24.94   CXX      cplusplus/main.o
#20 26.04   CXX      cplusplus/XlsReader.o
#20 26.98   CXXLD    test_cpp
#20 27.34 make[1]: Leaving directory '/src/libxls'
#20 27.34 + zip /out/fuzz_xls_seed_corpus.zip test/files/test2.xls fuzz/corpus/65536-rows-xls.xls fuzz/corpus/biff5-label-records.xls fuzz/corpus/big-texty-numbers-xls.xls fuzz/corpus/blanks.xls fuzz/corpus/dates-1900.xls fuzz/corpus/dates-1904.xls fuzz/corpus/dates-leap-year-1900-xls.xls fuzz/corpus/datetime-rounding.xls fuzz/corpus/empty-named-column.xls fuzz/corpus/empty-sheets.xls fuzz/corpus/geometry.xls fuzz/corpus/iris-excel-xls.xls fuzz/corpus/list_type.xls fuzz/corpus/missing-first-column.xls fuzz/corpus/missing-values-xls.xls fuzz/corpus/more-than-256-unique-strings-xls.xls fuzz/corpus/mtcars.xls fuzz/corpus/names-need-repair-xls.xls fuzz/corpus/no-yes-col-names.xls fuzz/corpus/numbers-as-na-and-shared-strings-xls.xls fuzz/corpus/skipping.xls fuzz/corpus/style-only-cells.xls fuzz/corpus/texty-dates-xls.xls fuzz/corpus/types.xls fuzz/corpus/unnamed-duplicated-columns.xls fuzz/corpus/utf8-sheet-names.xls fuzz/corpus/vietnamese-utf8.xls fuzz/corpus/whitespace-xls.xls fuzz/corpus/xls2csv_ole_ole2_fread_327.xls fuzz/corpus/xls2csv_ole_read_MSAT_772.xls fuzz/corpus/xls2csv_ole_read_MSAT_body_637.xls fuzz/corpus/xls2csv_ole_read_MSAT_body_687.xls
#20 27.34   adding: test/files/test2.xls (deflated 80%)
#20 27.35   adding: fuzz/corpus/65536-rows-xls.xls (deflated 65%)
#20 27.35   adding: fuzz/corpus/biff5-label-records.xls (deflated 83%)
#20 27.35   adding: fuzz/corpus/big-texty-numbers-xls.xls (deflated 83%)
#20 27.35   adding: fuzz/corpus/blanks.xls (deflated 86%)
#20 27.36   adding: fuzz/corpus/dates-1900.xls (deflated 76%)
#20 27.36   adding: fuzz/corpus/dates-1904.xls (deflated 77%)
#20 27.36   adding: fuzz/corpus/dates-leap-year-1900-xls.xls (deflated 80%)
#20 27.36   adding: fuzz/corpus/datetime-rounding.xls (deflated 83%)
#20 27.36   adding: fuzz/corpus/empty-named-column.xls (deflated 66%)
#20 27.37   adding: fuzz/corpus/empty-sheets.xls (deflated 87%)
#20 27.37   adding: fuzz/corpus/geometry.xls (deflated 86%)
#20 27.37   adding: fuzz/corpus/iris-excel-xls.xls (deflated 77%)
#20 27.37   adding: fuzz/corpus/list_type.xls (deflated 68%)
#20 27.37   adding: fuzz/corpus/missing-first-column.xls (deflated 67%)
#20 27.38   adding: fuzz/corpus/missing-values-xls.xls (deflated 86%)
#20 27.38   adding: fuzz/corpus/more-than-256-unique-strings-xls.xls (deflated 85%)
#20 27.38   adding: fuzz/corpus/mtcars.xls (deflated 81%)
#20 27.38   adding: fuzz/corpus/names-need-repair-xls.xls (deflated 74%)
#20 27.38   adding: fuzz/corpus/no-yes-col-names.xls (deflated 87%)
#20 27.39   adding: fuzz/corpus/numbers-as-na-and-shared-strings-xls.xls (deflated 87%)
#20 27.39   adding: fuzz/corpus/skipping.xls (deflated 86%)
#20 27.39   adding: fuzz/corpus/style-only-cells.xls (deflated 67%)
#20 27.39   adding: fuzz/corpus/texty-dates-xls.xls (deflated 66%)
#20 27.39   adding: fuzz/corpus/types.xls (deflated 81%)
#20 27.39   adding: fuzz/corpus/unnamed-duplicated-columns.xls (deflated 86%)
#20 27.40   adding: fuzz/corpus/utf8-sheet-names.xls (deflated 71%)
#20 27.40   adding: fuzz/corpus/vietnamese-utf8.xls (deflated 64%)
#20 27.40   adding: fuzz/corpus/whitespace-xls.xls (deflated 87%)
#20 27.40   adding: fuzz/corpus/xls2csv_ole_ole2_fread_327.xls (deflated 96%)
#20 27.40   adding: fuzz/corpus/xls2csv_ole_read_MSAT_772.xls (deflated 52%)
#20 27.40   adding: fuzz/corpus/xls2csv_ole_read_MSAT_body_637.xls (deflated 66%)
#20 27.41   adding: fuzz/corpus/xls2csv_ole_read_MSAT_body_687.xls (deflated 52%)
#20 27.41 + make fuzz_xls
#20 27.43   CC       fuzz/xls-fuzz_xls.o
#20 27.50   CXXLD    fuzz_xls
#20 27.95 + cp fuzz_xls /out/fuzz_xls
#20 27.95 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 28.6s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:edd6e8185ef6b32a934b3ecd076cb0ed623c7edbe03d5e94d6569b41f97afd50 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/libxls_libxls 0.0s done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/libxls_libxls:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:fae11d847ea982f44aad4b4abb96d61ed7691e6efff6a57b092dc238b15035ac
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:36d7d9bc16ed099148014743609c308021dc79394b41177f7294b8ad548807e5
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate
#4 sha256:bb04f5cd7153e254f0f71be383f2244651c02bf0a866ee5b6ce76de260d3b6e8
#4 ERROR: gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate:latest: not found

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:e220a4b9567b0a0836860ee7f491ba5549eb67a6e0a94d974a01a34191e2baab
#6 writing image sha256:e220a4b9567b0a0836860ee7f491ba5549eb67a6e0a94d974a01a34191e2baab 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate 0.0s done
#6 DONE 0.2s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:9f6bd32247dad70c6a5ea882822d488236bb7c3b6c06b7a71a57d09feb0ccef0
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:0bd84ce8af2b66582369d06bcbc877dffaeff8b20f1b42b1ed677b7a6c80de2e
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate:latest
#4 sha256:bb5b034e98101ac8b73a0b47c380e7d08baf28286f0d539cb9685cd6901af9e9
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libxls_libxls:latest
#3 sha256:99ffb8a75701dddc01848112ab9cb36df61ff54fccd0c0e34457f5be271fb91c
#3 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate
#6 sha256:79a8784e7ff4694456f0970caf899ac0fb93eaa531a0c518303a869c2db63e28
#6 DONE 0.0s

#12 [internal] load build context
#12 sha256:c75fe20b8cab8a6c8d7a3f1ce0a0509c7a165b6e17e1ff3fadc48b696bc566c0
#12 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/libxls_libxls
#10 sha256:599e163d5ce49576d0a06e487422f1495b081c3ba9d43210c85082072bbc7441
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/libxls_libxls
#5 sha256:1122433a95fbb846a9576017a8a8a3298150d306a3169d8753b5eb611906077d
#5 ERROR: gcr.io/fuzzbench/runners/afl/libxls_libxls:latest: not found

#12 [internal] load build context
#12 sha256:c75fe20b8cab8a6c8d7a3f1ce0a0509c7a165b6e17e1ff3fadc48b696bc566c0
#12 transferring context: 18.99MB 0.6s done
#12 DONE 1.4s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/libxls_libxls
#10 sha256:599e163d5ce49576d0a06e487422f1495b081c3ba9d43210c85082072bbc7441
#10 DONE 2.7s

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:7976f4e4cb2e6079b071b5dd89ded06ae5d7b46d8da8cfba104c79b6e4720d72
#8 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:df83269d02eaba7240fc9899ccd15c20cc5fb574778d06a7e81a9020df4df214
#7 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:3d534029ce676d48267b0cc1859c163b9f0f2f7f996509da9e18584dfaa452b6
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:8298b6083578657cfb921ab069111ae9375d45eb16613449e42f1be9d9c332bd
#11 DONE 0.3s

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:9e96947e48fa187e2c8caca77d34378080242b03b8efe492ec3a398360c0804a
#13 DONE 2.8s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:5a31e2d84d829a5591fd6ade3135f57fc5fdbcfec8ca4bae0104b7dda1afc686
#14 DONE 0.3s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:3f19715b6045f264f8a5cdcc7acc4fe997e96b0c39456d8fdbb2a8049f4f2ea1
#15 DONE 0.9s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:340156a0d6af739047741d2b9304c2fc36342c5e95cd835e8e6f3eeffe48a7e2
#16 DONE 0.8s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:6ef78649a5e2176a920461895d411968edab32da53df43927af753645a063d04
#17 DONE 0.3s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:debb3a72dbf53b28660abafb90f6ea6c818dfeda72a91e3e57bff10c41947801
#18 DONE 0.2s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:ae54d4ecd67b936825f435edfb50fa89adfb3010b7a133710c1b016ab761eb0b
#19 DONE 0.2s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:389f4f12a85ef5d40e7ccb77e6a0d99c7c088797d4196828e712bd6471d53be4
#20 DONE 0.5s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:aef034ef165293e753bb30582c5a59ed476f2bc666ed605b333de58ee340984c done
#21 naming to gcr.io/fuzzbench/runners/afl/libxls_libxls
#21 naming to gcr.io/fuzzbench/runners/afl/libxls_libxls done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/libxls_libxls:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7fdd007e1ee0> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:870796a4e9f742a32f7b309ba8d80cd4a8ebd66b0d77ecb3666d99d5c402f1f4
#2 transferring context: 2B done
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:366b200283f080ad45d284ec21b3d0dfb3e7494aea1bb86d10efb5f9e61d3f88
#1 transferring dockerfile: 32B done
#1 DONE 0.4s

#2 [internal] load .dockerignore
#2 sha256:870796a4e9f742a32f7b309ba8d80cd4a8ebd66b0d77ecb3666d99d5c402f1f4
#2 DONE 0.4s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/libxls_libxls
#4 sha256:8dfae0c1ca9a45b8c520600d45fbf2f75a597da0064c8e1e7330103ce62e3fcd
#4 DONE 0.0s

#9 [internal] load build context
#9 sha256:0ecd353522ca3c4851fa10a86e1aae5e371ebd011df531ced6b46d77e011dd14
#9 transferring context: 30B done
#9 DONE 0.1s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf autoconf-archive automake gettext libtool
#6 sha256:e7fed44e0f87cee9aaed91acb7e12071e52458b28b301ffef13bfef61bfbb37f
#6 CACHED

#7 [3/5] RUN git clone --depth 1 https://github.com/libxls/libxls libxls
#7 sha256:616bea7565c4357e3770a082b82671d0fbaf0d96271f860f3eb295786796b1c5
#7 CACHED

#8 [4/5] WORKDIR libxls
#8 sha256:da4094e5c00f7bca3ccf4507615e04ff4558cf2b9072ba5821762d15a8850cc3
#8 CACHED

#10 [5/5] COPY build.sh /src/
#10 sha256:bf72eca7085c7ba458938082dcea1ff9749b8a126815c6b54a43b4abec25fa03
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:8847891ededdadadffe16bbc298a34986af595b86e22a9325ded218d0baaa3e2 0.0s done
#11 naming to gcr.io/fuzzbench/builders/benchmark/libxls_libxls done
#11 DONE 0.3s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:d44a80b179c95126c514921531dd721be89588cf5cb53c30585db4cc9d11e965
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:310fe0bdc54d44e76d1a730d096055fa18a653be696e6c7684d7f73148c4424c
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/libxls_libxls:latest
#3 sha256:050cc1057571eedff6500c31de1eaf9e85105c5279b1f86aab36aad45cc23a07
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate
#4 sha256:caf73f669ea0684a8d885080c9529a5453ffa241374d3d7cfe870e864cae4385
#4 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/libxls_libxls
#5 sha256:de7e8f2b611225d2f49730923fc301ada54b7cc3005e370534facafed36f15ca
#5 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:a5a214290a0ae3603d5e5ebf63ce64787c1e4a21f08dc19928c6b94ba4ee145e
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:a8b316188d1a489f8315df54efbbb9bda7549b0b7645b7eaf2d0a5f58c0ca53a
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:3f500a63d2aaf327f00ece2bf173a51b7693f71730b24096ef46848cec6c1afd
#8 writing image sha256:3f500a63d2aaf327f00ece2bf173a51b7693f71730b24096ef46848cec6c1afd 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:a22ab45c8080913fe0b031076641a766b12afce7d64c2c836a7e8bbf809a2949
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:e2f6ac4e57871e274f61a39a57875a76789af41c475f1d57a9ee5828470912dc
#2 transferring context: 34B done
#2 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:497ce541b30c2de30ed8ded9f3061357493f07e30ff56d4698728fbfcd80238c
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#9 [4/7] COPY ./requirements.txt /
#9 sha256:f153d636b20a1285f69e12e006f183f5453a2f129dfc40bf9739410a03f14532
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:c84d9bebb16217668fb911469030c25378f0f1e3c462a207fbcdbe1d82f71629
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:63b2094db6332d238137e0bc753ee3c136e169f46b402ee33c4412bc6c34b3a5
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:2c82b5373f68cf071bba929185691c373c86fc31c83f4382f911ae930077e217
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:b0bf59e5a98d6281c53a32058db7d7b8c5940d51f877ed2658dddf314a949583
#13 writing image sha256:b0bf59e5a98d6281c53a32058db7d7b8c5940d51f877ed2658dddf314a949583 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.2s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:c52703ca8a211c8a1cabb37621bff2e9c5852b99b619c911c6c85bf9453bcf95
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:db6770d9757d285d749aa9f3b38bcd759e8a2d61cfc452c7fe2eb4d9c5577161
#2 transferring context: 34B done
#2 DONE 0.2s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate:latest
#3 sha256:b92e5b95b6efa8c0904ca95a80aa4d34fd68737798db872d7845971eac15c1e3
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/libxls_libxls-intermediate
#6 sha256:ed739f324cf022c4cea312faeb578d9174d3a837f117ca761fa47ceadc2f1111
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/libxls_libxls
#5 sha256:6742af2323d3b93e2138889abb0616b919b2f19f27aeb9dfe87069ea04519f95
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:568357e6e1b446281dcf4cc42dce691a93271cdf8149a7d44a31ceb7015cbd12
#12 transferring context: 669.86kB 0.1s done
#12 DONE 0.2s

#15 [stage-1  8/13] COPY benchmarks/libxls_libxls/benchmark.yaml /
#15 sha256:3026ac114d0a35a1a7123e25b91bdbf828bd8ed98799300e263d2c0501e34440
#15 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:389ee2b6bc9feced798d6c241b912b52b8d1113ca9d98314921590ef91513819
#16 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:4d86f6bb5a8db7a7424365ca77f7310fc98394dacbd00d25745899f2fc141424
#18 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:49c71f43a000721d03959d1f464f590f0b36e21e6564c3c90967c147d31147f1
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:aee8e0c1310591b131e03c8d01cc7cdf7b46e5085a380e6df991b96501d41abf
#10 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:b1839b5335c6d8107cc2d4ddf5ef7ee871eaad05467054fa98d4017fdda33e17
#14 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:da7176b4e4545230807f6ae53b47ec9461f4483dc81859bd444c35de696ed93f
#19 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:40b7fc0dc21217e406bc9a5dc7a7c206eecd7ee48b153735414fabd205443a9b
#11 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:3f9df155a8b0bf01fc9ce46fb3d89e48f862f9c618b30e84122c26105acd8182
#17 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:e9b4255391e44324929ac2a2ea5dbda45d0075dc6c0cab02a546e6f1fa99eedd
#13 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:6c3e5552fe77e511ae253f882224f59b5b6645a2d319dae62dc47243b57d8315
#8 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:135c6da273430c8debb2b4bc038f886e376df593d82ded40ca511cca895c2312
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:edd6e8185ef6b32a934b3ecd076cb0ed623c7edbe03d5e94d6569b41f97afd50 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/libxls_libxls done
#21 DONE 0.5s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:9c51e7a8e5117372053f892c90eb0d69111e68e72c301b4076b053547b433934
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:6699a8905180aea31b3492011863351e269a4e6c373546a9bee24409246a385e
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate
#4 sha256:bb04f5cd7153e254f0f71be383f2244651c02bf0a866ee5b6ce76de260d3b6e8
#4 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:e220a4b9567b0a0836860ee7f491ba5549eb67a6e0a94d974a01a34191e2baab 0.0s done
#6 naming to gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:594db9923ea036971f34481d720e9c5c66c725f678981371b33cbdbffdfde31d
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:bacfb57f7ea7794b5f1d9024c91f79ee3d010d77e7679eb7ebb92d0be4cf2d18
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate:latest
#3 sha256:bb5b034e98101ac8b73a0b47c380e7d08baf28286f0d539cb9685cd6901af9e9
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/libxls_libxls:latest
#4 sha256:99ffb8a75701dddc01848112ab9cb36df61ff54fccd0c0e34457f5be271fb91c
#4 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/libxls_libxls-intermediate
#6 sha256:79a8784e7ff4694456f0970caf899ac0fb93eaa531a0c518303a869c2db63e28
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/libxls_libxls
#5 sha256:1122433a95fbb846a9576017a8a8a3298150d306a3169d8753b5eb611906077d
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/libxls_libxls
#10 sha256:599e163d5ce49576d0a06e487422f1495b081c3ba9d43210c85082072bbc7441
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:2b7fad4c48fa19147f9aac2e9d503563c51c04045822436441bb70ff07264e6a
#12 transferring context: 18.99MB 0.7s done
#12 DONE 1.0s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:d88063b232a6d0821944752099e68e992a35ea168c58305e68d487e647d33af0
#14 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:7976f4e4cb2e6079b071b5dd89ded06ae5d7b46d8da8cfba104c79b6e4720d72
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:3d534029ce676d48267b0cc1859c163b9f0f2f7f996509da9e18584dfaa452b6
#9 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:5c4212eacfb3f786c1e4c741052ec8570f308dfa86c42a86914c1644d113b1c7
#13 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:0dc366e6d2648eb11a5a2f2775222fa5c13ab89edecc34758a6dbfd3bb391fed
#17 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:e44ef9ee08f71c1ec9af220ed4b7ae6edf4c122e03c51a43d690f5782456b672
#18 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:df83269d02eaba7240fc9899ccd15c20cc5fb574778d06a7e81a9020df4df214
#7 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:8298b6083578657cfb921ab069111ae9375d45eb16613449e42f1be9d9c332bd
#11 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:3e1319b7127ad0e24d177021e55f3dc3a7c41ac0941c68101bfc03ea3151229c
#15 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:22b5ad564f3066aa51ba36d5ab4d4810ebb3fa5aea1d25791be88b98783c8977
#16 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:090c27d57cc53fad3fb86baf484334a0bb5ebbb58b688ad99c87d37ffe941d72
#19 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:1485b14fa7e461d14dcf83d962a31b850d9e96693835ba5205885b6024ff55f3
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:aef034ef165293e753bb30582c5a59ed476f2bc666ed605b333de58ee340984c 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/libxls_libxls done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7fdfd08c2ee0> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
