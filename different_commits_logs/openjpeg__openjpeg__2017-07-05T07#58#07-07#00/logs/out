WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: openjpeg_openjpeg.
INFO:root:Please run "make test-run-afl-openjpeg_openjpeg" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:25a5d8b97104ad290e697cfe18e983b2f3f8e8fd193320462190f9118a09a8ac
#1 transferring dockerfile: 1.06kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:7e4eb3a57d2d3037a0a2e599136bce10e926e06452cd92210695c8d5d81cf69b
#2 transferring context: 2B done
#2 DONE 0.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#10 [internal] load build context
#10 sha256:b1fca23d57eb8ee114224358c75ed9e5e2b889c1599c89b255d1b238b78fddae
#10 DONE 0.0s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/openjpeg_openjpeg
#4 sha256:221b85a56e92122479241ac3d55ab3075f9a7486ca9740b18ca5b8764566ee4e
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/openjpeg_openjpeg:latest: not found

#10 [internal] load build context
#10 sha256:b1fca23d57eb8ee114224358c75ed9e5e2b889c1599c89b255d1b238b78fddae
#10 transferring context: 864B done
#10 DONE 0.1s

#8 [4/6] RUN git clone --depth 1 https://github.com/uclouvain/openjpeg-data openjpeg/data
#8 sha256:1528a39cf380cbbed769496cd81b8576c3b3d017b7aeda49bf4c767482ede9aa
#8 CACHED

#6 [2/6] RUN apt-get update && apt-get install -y make cmake g++
#6 sha256:2b271ac45883166bd9a740e5cc8a1522287c758f7288e425b999e33d32a5ed1b
#6 CACHED

#7 [3/6] RUN git clone --depth 1 https://github.com/uclouvain/openjpeg openjpeg
#7 sha256:07f7e5fdec42e728e01dad3eaf2c0c9e50aa551c747907b9fc09c422fa20d4ce
#7 CACHED

#9 [5/6] WORKDIR openjpeg
#9 sha256:cba7b93b8a2e4780dfdf0be7a9f1706a3d26e30b75f05c85f7c11293e293cd89
#9 CACHED

#11 [6/6] COPY build.sh /src/
#11 sha256:85bd9658f33217f9444afdb4bdffefad79d5797e2876918d7fcb6dd7ea6a5724
#11 DONE 0.2s

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:cb6abec63bc44b0f8cf4430a1e03d1666d517ba7f83f384b2500c721d5328144 0.0s done
#12 naming to gcr.io/fuzzbench/builders/benchmark/openjpeg_openjpeg done
#12 DONE 0.1s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/openjpeg_openjpeg:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:608fe40b7a421982f40751d430c68ad6d7b477d062591c530e7bc68b389d17bd
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:edfaa78d37e627bde43df9a55b63f89ab67e227a028f58dd72e63a5b143b75f6
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/openjpeg_openjpeg:latest
#3 sha256:06c0319e2b4fabbc4de59f9d310a732151941eb6b78f7a844029c27cec5991eb
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/openjpeg_openjpeg
#5 sha256:099aff94a7475423678f4ee69fa6a3fe351d7b4140e60c492481f881a37882ee
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg-intermediate
#4 sha256:2bc60283aafba588135c86406c6c20774b85057df6c610aed8ef7cc4255962ea
#4 ERROR: gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/openjpeg_openjpeg
#5 sha256:099aff94a7475423678f4ee69fa6a3fe351d7b4140e60c492481f881a37882ee
#5 DONE 0.2s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:12217948f866786cd06f02cfa6e7310397ab6c8ed60cdfe88c3b2b7a67e112e2
#6 0.404 Cloning into '/afl'...
#6 1.233 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.233 
#6 1.233 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.233 changes and commit them, and you can discard any commits you make in this
#6 1.233 state without impacting any branches by switching back to a branch.
#6 1.233 
#6 1.233 If you want to create a new branch to retain commits you create, you may
#6 1.233 do so (now or later) by using -c with the switch command. Example:
#6 1.233 
#6 1.233   git switch -c <new-branch-name>
#6 1.233 
#6 1.233 Or undo this operation with:
#6 1.233 
#6 1.233   git switch -
#6 1.233 
#6 1.233 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.233 
#6 1.233 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.276 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.276 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.445 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.469 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.891 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.209 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.634 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.886 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.281 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.530 ln -sf afl-as as
#6 5.532 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.534 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.535 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 9.4s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:7779d0e02092fb59355853df8fe58dbeafd7260f040a90b0ed8e1cfb4d317da9
#7 0.768 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.768 Hit:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.768 Hit:3 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.788 Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 0.903 Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 1.707 Reading package lists...
#7 3.263 Reading package lists...
#7 4.671 Building dependency tree...
#7 4.890 Reading state information...
#7 5.136 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.136 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 5.150 --2022-02-16 12:30:49--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.153 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.109.133, 185.199.110.133, 185.199.111.133, ...
#7 5.154 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.109.133|:443... connected.
#7 5.178 HTTP request sent, awaiting response... 200 OK
#7 5.198 Length: 9177 (9.0K) [text/plain]
#7 5.198 Saving to: '/afl/afl_driver.cpp'
#7 5.198 
#7 5.198      0K ........                                              100% 10.6M=0.001s
#7 5.198 
#7 5.198 2022-02-16 12:30:49 (10.6 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.198 
#7 6.955 ar: creating /libAFL.a
#7 DONE 7.1s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:d533be39ff1368e65dbe1c87f9baf3d607cc9b4fdd5f3b2a198d0c2dd85936db done
#8 naming to gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:01f799894093db098cdef8f07abccda0ea44a0f819c92db7577f59fc6c6fb115
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:6b711ebc26c9910731b968c82dddc700a3462ad67d6eff83da58bbb6092c34f9
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:780d040605fccd0c9a8938eab248e9f8d841746ea3d7d34f65344faa1f00abc3
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:0f83e07ddc48b527b5c49aa323e5cda58e0a9a81bc839268267557b6a7fde8cd
#11 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:513ee11446242a5a077bb0782cf1bea62977bfb881ba7e642880d8c11785a03e
#10 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:5bc6504478e17bf7b0d384ff65bbc81afc2a8161a581dec3631cd20b974ed406
#9 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:1ab05157d06d8667ce795de23250f05400c88122c2eb4d879776617488238155
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:62537cffce88e07d2ac822a1252857dd91d752236042ced46c7a4f730d3725f3
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:299ec51616449ef115e472cf2e647c26e8f335e23448c7eca6d976d416b6639f
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg-intermediate:latest
#3 sha256:92b34fc605a468aa89c080c6e82b7e1b8976f9390ca10dfc87158d842de8a4f0
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:c2ad0404ff4c74e0bc5551dec8aa4eef353daaa36bec694ca9a48aacd1a13627
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg-intermediate
#6 sha256:a2ddd06547a38bb2cfd89301ab7828ed3852e82b39e3c6f361463739b7096061
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg
#5 sha256:46b22e7dce95f3cffb61035caa8a004f04d6e84e5d033c3cc22c4b7a6b6e5744
#5 ERROR: gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:c2ad0404ff4c74e0bc5551dec8aa4eef353daaa36bec694ca9a48aacd1a13627
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.1s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg-intermediate
#6 sha256:a2ddd06547a38bb2cfd89301ab7828ed3852e82b39e3c6f361463739b7096061
#6 DONE 0.4s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:61da9c61f5bd0956a8294e3762b2556bf3203e9b3bdc843b4fc6a92ca2407f75
#8 DONE 0.5s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:0135d4d2e0ebc068fc5b9ea220f1d756d98f94a10e900db76dc7aaa2eacd6e0d
#9 DONE 14.5s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:77dbe5fa04838c5068f67dc6dbf3fe97d90b62c3ad81f199fcdba28f02a2960a
#10 DONE 0.4s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:8db66d8f99dea95081f44631d98c24ec365102ae8e9ab50ce2fcfd43984c7dae
#11 DONE 22.2s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:b857478a39dbbd2bdd6d3d6c2b254fd1a09942c0c4b740151651a0f3095a65a6
#13 DONE 0.3s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:89fd79c6bcf3f7773f65e84834f8eecf8c5deaa90ed936b6a5432a51ec68c027
#14 DONE 0.8s

#15 [stage-1  8/13] COPY benchmarks/openjpeg_openjpeg/benchmark.yaml /
#15 sha256:35169ecf1962beddf6bb148c27285ac69a360f3466699fe35c6c7539e5790f72
#15 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:663419af889f7f28e414d497e74a89f6c6c83e69b7307b083cea851953f6d27a
#16 DONE 0.7s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:ae9b5ee49c3f43fe476bdbb410612e6d17f71f7a6ab9794be61e84e863523af0
#17 DONE 0.3s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:07f7e9fec3565b3ca6b1402d78e0391094b17f04509567416aa20c3a91e20ea3
#18 0.624 Checking out commit 3bee3afb
#18 7.299 From https://github.com/uclouvain/openjpeg
#18 7.299  * [new tag]           v2.2.0     -> v2.2.0
#18 7.299  * [new tag]           v2.3.0     -> v2.3.0
#18 7.299  * [new tag]           v2.3.1     -> v2.3.1
#18 7.300  * [new tag]           v2.4.0     -> v2.4.0
#18 7.306 error: pathspec '3bee3afb' did not match any file(s) known to git
#18 7.322 error: pathspec '3bee3afb' did not match any file(s) known to git
#18 7.328 error: pathspec '3bee3afb' did not match any file(s) known to git
#18 7.377 Checkout unsuccessful.
#18 DONE 7.8s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:0f9a18610f7242c356fc6cd435d2070d9d3d730570d15b057da40aeb77a24134
#19 DONE 1.0s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:36479447c4c7d2ac940f46a1e2735d3fdd4e8c9a5110467fc646d259408e4b6b
#20 0.569 Run fuzzer_build to build the target
#20 0.694 FUZZ_TARGET = openjpeg
#20 0.694 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.694 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.702 Building benchmark openjpeg_openjpeg with fuzzer afl
#20 0.706 + mkdir build
#20 0.708 + cd build
#20 0.708 + cmake ..
#20 0.741 CMake Deprecation Warning at CMakeLists.txt:10 (cmake_minimum_required):
#20 0.741   Compatibility with CMake < 2.8.12 will be removed from a future version of
#20 0.741   CMake.
#20 0.741 
#20 0.741   Update the VERSION argument <min> value or use a ...<max> suffix to tell
#20 0.741   CMake that the project does not need compatibility with older versions.
#20 0.741 
#20 0.741 
#20 1.046 -- The C compiler identification is Clang 14.0.0
#20 1.082 -- Detecting C compiler ABI info
#20 1.245 -- Detecting C compiler ABI info - done
#20 1.296 -- Check for working C compiler: /usr/local/bin/clang - skipped
#20 1.302 -- Detecting C compile features
#20 1.303 -- Detecting C compile features - done
#20 1.306 -- Looking for string.h
#20 1.467 -- Looking for string.h - found
#20 1.468 -- Looking for memory.h
#20 1.627 -- Looking for memory.h - found
#20 1.628 -- Looking for stdlib.h
#20 1.808 -- Looking for stdlib.h - found
#20 1.809 -- Looking for stdio.h
#20 1.996 -- Looking for stdio.h - found
#20 1.997 -- Looking for math.h
#20 2.173 -- Looking for math.h - found
#20 2.174 -- Looking for float.h
#20 2.347 -- Looking for float.h - found
#20 2.348 -- Looking for time.h
#20 2.516 -- Looking for time.h - found
#20 2.517 -- Looking for stdarg.h
#20 2.678 -- Looking for stdarg.h - found
#20 2.679 -- Looking for ctype.h
#20 2.849 -- Looking for ctype.h - found
#20 2.850 -- Looking for assert.h
#20 3.013 -- Looking for assert.h - found
#20 3.013 -- Looking for stdint.h
#20 3.174 -- Looking for stdint.h - found
#20 3.175 -- Looking for inttypes.h
#20 3.349 -- Looking for inttypes.h - found
#20 3.351 -- Looking for strings.h
#20 3.514 -- Looking for strings.h - found
#20 3.515 -- Looking for sys/stat.h
#20 3.681 -- Looking for sys/stat.h - found
#20 3.682 -- Looking for sys/types.h
#20 3.847 -- Looking for sys/types.h - found
#20 3.848 -- Looking for unistd.h
#20 4.015 -- Looking for unistd.h - found
#20 4.015 -- Checking for 64-bit off_t
#20 4.188 -- Checking for 64-bit off_t - present
#20 4.188 -- Checking for fseeko/ftello
#20 4.372 -- Checking for fseeko/ftello - present
#20 4.372 -- Large File support - found
#20 4.374 -- Looking for include file malloc.h
#20 4.541 -- Looking for include file malloc.h - found
#20 4.542 -- Looking for _aligned_malloc
#20 4.588 -- Looking for _aligned_malloc - not found
#20 4.589 -- Looking for posix_memalign
#20 4.753 -- Looking for posix_memalign - found
#20 4.754 -- Looking for memalign
#20 4.934 -- Looking for memalign - found
#20 5.308 -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) 
#20 5.324 -- Could NOT find ZLIB (missing: ZLIB_LIBRARY ZLIB_INCLUDE_DIR) 
#20 5.324 -- Z lib not found, activate BUILD_THIRDPARTY if you want build it (necessary to build libPNG)
#20 5.331 -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR) 
#20 5.331 -- TIFF lib not found, activate BUILD_THIRDPARTY if you want build it
#20 5.334 -- Could NOT find LCMS2 (missing: LCMS2_LIBRARY LCMS2_INCLUDE_DIR) 
#20 5.338 -- Could NOT find LCMS (missing: LCMS_LIBRARY LCMS_INCLUDE_DIR) 
#20 5.338 -- LCMS2 or LCMS lib not found, activate BUILD_THIRDPARTY if you want build it
#20 5.367 -- Configuring done
#20 5.403 -- Generating done
#20 5.406 -- Build files have been written to: /src/openjpeg/build
#20 5.410 + make clean -s
#20 5.454 ++ nproc
#20 5.455 + make -j8 -s
#20 5.482 [  1%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/thread.c.o
#20 5.483 [  4%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/thread.c.o
#20 5.483 [  4%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/bio.c.o
#20 5.483 [  7%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/bio.c.o
#20 5.483 [  7%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/cio.c.o
#20 5.483 [ 10%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/cio.c.o
#20 5.483 [ 10%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/dwt.c.o
#20 5.484 [ 11%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/dwt.c.o
#20 5.705 [ 14%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/event.c.o
#20 5.705 [ 14%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/ht_dec.c.o
#20 5.831 [ 16%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/image.c.o
#20 5.837 [ 17%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/invert.c.o
#20 5.838 [ 19%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/event.c.o
#20 5.869 [ 20%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/j2k.c.o
#20 5.880 [ 22%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/ht_dec.c.o
#20 5.971 [ 23%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/image.c.o
#20 6.090 [ 25%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/jp2.c.o
#20 6.147 /src/openjpeg/src/lib/openjp2/j2k.c:7799:29: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]
#20 6.148             if (temp_size > INT_MAX) {
#20 6.148                           ~ ^~~~~~~
#20 6.148 /usr/local/lib/clang/14.0.0/include/limits.h:46:19: note: expanded from macro 'INT_MAX'
#20 6.148 #define INT_MAX   __INT_MAX__
#20 6.149                   ^~~~~~~~~~~
#20 6.149 <built-in>:39:21: note: expanded from here
#20 6.149 #define __INT_MAX__ 2147483647
#20 6.149                     ^~~~~~~~~~
#20 6.173 [ 26%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/mct.c.o
#20 6.234 [ 28%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/invert.c.o
#20 6.588 [ 29%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/j2k.c.o
#20 6.664 [ 31%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/mqc.c.o
#20 6.867 /src/openjpeg/src/lib/openjp2/j2k.c:7799:29: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]
#20 6.867             if (temp_size > INT_MAX) {
#20 6.867                           ~ ^~~~~~~
#20 6.867 /usr/local/lib/clang/14.0.0/include/limits.h:46:19: note: expanded from macro 'INT_MAX'
#20 6.868 #define INT_MAX   __INT_MAX__
#20 6.868                   ^~~~~~~~~~~
#20 6.868 <built-in>:39:21: note: expanded from here
#20 6.869 #define __INT_MAX__ 2147483647
#20 6.869                     ^~~~~~~~~~
#20 6.996 [ 32%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/openjpeg.c.o
#20 7.285 [ 34%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/opj_clock.c.o
#20 7.318 [ 35%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/pi.c.o
#20 7.416 [ 37%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/t1.c.o
#20 7.787 [ 38%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/t2.c.o
#20 7.976 [ 40%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/jp2.c.o
#20 8.648 [ 41%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/tcd.c.o
#20 8.734 [ 43%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/tgt.c.o
#20 8.828 /src/openjpeg/src/lib/openjp2/tcd.c:2265:35: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]
#20 8.828                     if (l_value > INT_MAX) {
#20 8.828                                 ~ ^~~~~~~
#20 8.828 /usr/local/lib/clang/14.0.0/include/limits.h:46:19: note: expanded from macro 'INT_MAX'
#20 8.829 #define INT_MAX   __INT_MAX__
#20 8.829                   ^~~~~~~~~~~
#20 8.829 <built-in>:39:21: note: expanded from here
#20 8.829 #define __INT_MAX__ 2147483647
#20 8.829                     ^~~~~~~~~~
#20 9.045 [ 44%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/function_list.c.o
#20 9.192 [ 46%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/opj_malloc.c.o
#20 9.198 [ 47%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/mct.c.o
#20 9.354 [ 49%] Building C object src/lib/openjp2/CMakeFiles/openjp2_static.dir/sparse_array.c.o
#20 9.589 [ 50%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/mqc.c.o
#20 9.695 [ 53%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/openjpeg.c.o
#20 9.695 [ 53%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/opj_clock.c.o
#20 9.820 [ 55%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/pi.c.o
#20 9.924 [ 56%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/t1.c.o
#20 10.03 [ 58%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/t2.c.o
#20 10.18 [ 59%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/tcd.c.o
#20 10.35 /src/openjpeg/src/lib/openjp2/tcd.c:2265:35: warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]
#20 10.35                     if (l_value > INT_MAX) {
#20 10.36                                 ~ ^~~~~~~
#20 10.36 /usr/local/lib/clang/14.0.0/include/limits.h:46:19: note: expanded from macro 'INT_MAX'
#20 10.36 #define INT_MAX   __INT_MAX__
#20 10.36                   ^~~~~~~~~~~
#20 10.36 <built-in>:39:21: note: expanded from here
#20 10.36 #define __INT_MAX__ 2147483647
#20 10.36                     ^~~~~~~~~~
#20 10.63 1 warning generated.
#20 10.64 [ 61%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/tgt.c.o
#20 10.91 [ 62%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/function_list.c.o
#20 10.97 [ 64%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/opj_malloc.c.o
#20 10.98 1 warning generated.
#20 10.99 [ 65%] Building C object src/lib/openjp2/CMakeFiles/openjp2.dir/sparse_array.c.o
#20 11.82 1 warning generated.
#20 11.90 1 warning generated.
#20 16.03 [ 67%] Linking C static library ../../../bin/libopenjp2.a
#20 16.07 [ 67%] Built target openjp2_static
#20 18.20 [ 68%] Linking C shared library ../../../bin/libopenjp2.so
#20 18.53 [ 68%] Built target openjp2
#20 18.55 [ 70%] Building C object src/bin/jp2/CMakeFiles/opj_compress.dir/opj_compress.c.o
#20 18.55 [ 73%] Building C object src/bin/jp2/CMakeFiles/opj_dump.dir/opj_dump.c.o
#20 18.55 [ 73%] Building C object src/bin/jp2/CMakeFiles/opj_compress.dir/convert.c.o
#20 18.55 [ 76%] Building C object src/bin/jp2/CMakeFiles/opj_dump.dir/convert.c.o
#20 18.55 [ 76%] Building C object src/bin/jp2/CMakeFiles/opj_decompress.dir/opj_decompress.c.o
#20 18.55 [ 79%] Building C object src/bin/jp2/CMakeFiles/opj_dump.dir/convertbmp.c.o
#20 18.55 [ 79%] Building C object src/bin/jp2/CMakeFiles/opj_compress.dir/index.c.o
#20 18.55 [ 80%] Building C object src/bin/jp2/CMakeFiles/opj_compress.dir/convertbmp.c.o
#20 18.84 [ 82%] Building C object src/bin/jp2/CMakeFiles/opj_dump.dir/index.c.o
#20 19.23 [ 83%] Building C object src/bin/jp2/CMakeFiles/opj_compress.dir/__/common/color.c.o
#20 19.30 [ 85%] Building C object src/bin/jp2/CMakeFiles/opj_dump.dir/__/common/color.c.o
#20 19.30 [ 86%] Building C object src/bin/jp2/CMakeFiles/opj_dump.dir/__/common/opj_getopt.c.o
#20 19.43 [ 88%] Building C object src/bin/jp2/CMakeFiles/opj_compress.dir/__/common/opj_getopt.c.o
#20 19.45 [ 89%] Building C object src/bin/jp2/CMakeFiles/opj_decompress.dir/convert.c.o
#20 19.47 [ 91%] Building C object src/bin/jp2/CMakeFiles/opj_decompress.dir/convertbmp.c.o
#20 19.53 [ 92%] Building C object src/bin/jp2/CMakeFiles/opj_decompress.dir/index.c.o
#20 19.58 [ 94%] Building C object src/bin/jp2/CMakeFiles/opj_decompress.dir/__/common/color.c.o
#20 19.71 [ 95%] Building C object src/bin/jp2/CMakeFiles/opj_decompress.dir/__/common/opj_getopt.c.o
#20 20.15 [ 97%] Linking C executable ../../../bin/opj_dump
#20 20.27 [ 98%] Linking C executable ../../../bin/opj_compress
#20 20.28 [ 98%] Built target opj_dump
#20 20.39 [ 98%] Built target opj_compress
#20 20.83 [100%] Linking C executable ../../../bin/opj_decompress
#20 20.96 [100%] Built target opj_decompress
#20 20.98 + cd ..
#20 20.98 + ./tests/fuzzers/build_google_oss_fuzzers.sh
#20 20.99 Building fuzzer opj_decompress_fuzzer
#20 21.33 + ./tests/fuzzers/build_seed_corpus.sh
#20 21.35   adding: file1.jp2 (deflated 0%)
#20 21.39   adding: file2.jp2 (deflated 0%)
#20 21.41   adding: file3.jp2 (deflated 0%)
#20 21.42   adding: file4.jp2 (deflated 0%)
#20 21.42   adding: file5.jp2 (deflated 0%)
#20 21.45   adding: file6.jp2 (deflated 0%)
#20 21.46   adding: file7.jp2 (deflated 1%)
#20 21.51   adding: file8.jp2 (deflated 0%)
#20 21.52   adding: file9.jp2 (deflated 0%)
#20 21.53   adding: subsampling_1.jp2 (deflated 0%)
#20 21.56   adding: subsampling_2.jp2 (deflated 0%)
#20 21.57   adding: zoo1.jp2 (deflated 0%)
#20 21.75   adding: zoo2.jp2 (deflated 0%)
#20 21.84   adding: p0_01.j2k (stored 0%)
#20 21.84   adding: p0_02.j2k (deflated 1%)
#20 21.84   adding: p0_03.j2k (deflated 3%)
#20 21.84   adding: p0_04.j2k (deflated 0%)
#20 21.86   adding: p0_05.j2k (deflated 0%)
#20 21.91   adding: p0_06.j2k (deflated 0%)
#20 21.91   adding: p0_07.j2k (deflated 1%)
#20 22.28   adding: p0_08.j2k (deflated 0%)
#20 22.43   adding: p0_09.j2k (deflated 1%)
#20 22.43   adding: p0_10.j2k (deflated 1%)
#20 22.43   adding: p0_11.j2k (deflated 8%)
#20 22.43   adding: p0_12.j2k (deflated 23%)
#20 22.43   adding: p0_13.j2k (deflated 71%)
#20 22.43   adding: p0_14.j2k (deflated 45%)
#20 22.43   adding: p0_15.j2k (deflated 3%)
#20 22.43   adding: p0_16.j2k (stored 0%)
#20 22.43   adding: p1_01.j2k (deflated 1%)
#20 22.44   adding: p1_02.j2k (deflated 0%)
#20 22.45   adding: p1_03.j2k (deflated 0%)
#20 22.51   adding: p1_04.j2k (deflated 28%)
#20 22.52   adding: p1_05.j2k (deflated 78%)
#20 22.53   adding: p1_06.j2k (deflated 43%)
#20 22.53   adding: p1_07.j2k (deflated 37%)
#20 22.58   adding: Bretagne1_ht.j2k (deflated 0%)
#20 22.61   adding: Bretagne1_ht_lossy.j2k (deflated 0%)
#20 22.62   adding: byte_causal.jhc (deflated 4%)
#20 22.62   adding: byte.jph (deflated 22%)
#20 22.63 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 23.3s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:c26db9c5783e102789200ec6385ceadda30782f34faf3045be2dbc02cd13a209 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg done
#21 DONE 0.3s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:423ad5f10310c6c945787f35553a72528a018d7d1e06a4001bd580e8edc478ee
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:fa31e829a423d378fbcf699384b9f7ccc26fc4bc739e67b291a045135dc04da1
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/openjpeg_openjpeg-intermediate
#5 sha256:edaaa43b9b4317b46149aa6fcfff828ef840335badd4fe185df91d65aa9aebc2
#5 ERROR: gcr.io/fuzzbench/runners/afl/openjpeg_openjpeg-intermediate:latest: not found

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f done
#6 naming to gcr.io/fuzzbench/runners/afl/openjpeg_openjpeg-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/openjpeg_openjpeg-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:2e23c09cbcdba0a149c9089db00f4def56f0b6f497afb6562873a9fabc5730ba
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:bfa901c44b73249c7df37eeb78e2b61a773a51712edbbf30af4462fbab383082
#2 transferring context: 34B done
#2 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/openjpeg_openjpeg-intermediate:latest
#3 sha256:35eb7e3d6dba4ae2cee563fd797f05932449b17386698ca24b7c4660b521be0b
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg:latest
#4 sha256:9e2baab4d0c5f47783ee0bdce77f105e79e5b027dd857992977ccf9adc8b6c7e
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:1b54ee41a387dbc993478dee9808ce63e4d9457c4e0e8c3446ae28f0204d5e92
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/openjpeg_openjpeg-intermediate
#6 sha256:a41db044f69d4f12b4e4e3ad7b945d7b34c0601b9c22014bed3eb623e77ba2c7
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg
#10 sha256:a2aaac51b945bce2c17399a97b652d132931119cab21d072855557ecb50b3b65
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/openjpeg_openjpeg
#5 sha256:3a3208cf78523a0e4ad796369468f3eeb69ccc1bd4bad705eb775e28fde49832
#5 ERROR: gcr.io/fuzzbench/runners/afl/openjpeg_openjpeg:latest: not found

#12 [internal] load build context
#12 sha256:1b54ee41a387dbc993478dee9808ce63e4d9457c4e0e8c3446ae28f0204d5e92
#12 transferring context: 17.64MB 0.6s done
#12 DONE 0.8s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg
#10 sha256:a2aaac51b945bce2c17399a97b652d132931119cab21d072855557ecb50b3b65
#10 DONE 2.4s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:605f84a01355f0d3e3e987d3d2ed5ab3600718b98ed57ec0987fe6212d223741
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:557e35acef6df267dd3ad53125aca5fc628ca61479d6c9990f010db61e502967
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:8cad8031839619efd2332fe08dd9dbca6395276b630e5ff00051c16fa3fbed65
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:35a011ad91ee3318aa8562e95afc31c9a58167e009a00a051360939d14d060c1
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:16cef35f3afccbd2ace4cef4066d71a36738c7ed0655162e144467d2411047c1
#13 DONE 1.3s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:caa5c42d82d8a90e73a9c528717e108cc87b5d8dc5db6b27f7e784997d06fec2
#14 DONE 0.9s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:46cddae820bf7049e4739dac4d80c597a5f10da086f75ba05b2d77f0866545aa
#15 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:b98fd74a01329d22bbf0dbb9b57de3b0ef6a3a9abb8c0d63011cc88540781f1c
#16 DONE 0.7s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:79abe0ca40984811a1a4698924b5f46fabffb63d5ca96eaa80e6023788f4c390
#17 DONE 0.3s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:e320ad1d8e8f64383da1b86eda3a4f6ff1a2b8994095c6816d351ba88ffc8ad1
#18 DONE 0.2s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:4599c9c1c42ef70c42ef76fe864f6f58388dd41f98b333e708bcb651505b3b7f
#19 DONE 0.2s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:63602f7d2074755d21b0e7e8b1a7c0a97983ad905810c61505efdbb0389d250c
#20 DONE 0.4s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:cac358a3dc301df913e85df19cdd524623bd0f8cad039595d85d6ca5ad964e2c done
#21 naming to gcr.io/fuzzbench/runners/afl/openjpeg_openjpeg done
#21 DONE 0.0s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/openjpeg_openjpeg:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7fd8072fbf70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:e52a633f86b5ebe108809c4a4467ad4b5e99cce727639e352c5351d02a70ee71
#1 transferring dockerfile: 32B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:1ab2632e6c93febeaa0a494fbe5cdbc4995ee45691bb0b2d631d4c80b09683c4
#2 transferring context: 2B done
#2 DONE 0.2s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/openjpeg_openjpeg
#4 sha256:221b85a56e92122479241ac3d55ab3075f9a7486ca9740b18ca5b8764566ee4e
#4 DONE 0.0s

#10 [internal] load build context
#10 sha256:33bde5284b7e11e6f9a00f10b39bd6779c9a5e48a4f21456ccca9483afb84ac6
#10 transferring context: 30B done
#10 DONE 0.1s

#8 [4/6] RUN git clone --depth 1 https://github.com/uclouvain/openjpeg-data openjpeg/data
#8 sha256:1528a39cf380cbbed769496cd81b8576c3b3d017b7aeda49bf4c767482ede9aa
#8 CACHED

#9 [5/6] WORKDIR openjpeg
#9 sha256:cba7b93b8a2e4780dfdf0be7a9f1706a3d26e30b75f05c85f7c11293e293cd89
#9 CACHED

#6 [2/6] RUN apt-get update && apt-get install -y make cmake g++
#6 sha256:2b271ac45883166bd9a740e5cc8a1522287c758f7288e425b999e33d32a5ed1b
#6 CACHED

#7 [3/6] RUN git clone --depth 1 https://github.com/uclouvain/openjpeg openjpeg
#7 sha256:07f7e5fdec42e728e01dad3eaf2c0c9e50aa551c747907b9fc09c422fa20d4ce
#7 CACHED

#11 [6/6] COPY build.sh /src/
#11 sha256:9e52fc2966c6106b7607902704f3fa1e9ce2d4af132e72c01a096a3c2e913b55
#11 CACHED

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:cb6abec63bc44b0f8cf4430a1e03d1666d517ba7f83f384b2500c721d5328144 0.0s done
#12 naming to gcr.io/fuzzbench/builders/benchmark/openjpeg_openjpeg done
#12 DONE 0.3s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:305caca44691a468911cdd3d9192f7621419a287270abf460f04e6482682dc9e
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:082fa317280fa6498a147fa19d064548c044a2b4fa359f8bdedfa0218129e0cf
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/openjpeg_openjpeg:latest
#3 sha256:06c0319e2b4fabbc4de59f9d310a732151941eb6b78f7a844029c27cec5991eb
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/openjpeg_openjpeg
#5 sha256:099aff94a7475423678f4ee69fa6a3fe351d7b4140e60c492481f881a37882ee
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg-intermediate
#4 sha256:2bc60283aafba588135c86406c6c20774b85057df6c610aed8ef7cc4255962ea
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:12217948f866786cd06f02cfa6e7310397ab6c8ed60cdfe88c3b2b7a67e112e2
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:7779d0e02092fb59355853df8fe58dbeafd7260f040a90b0ed8e1cfb4d317da9
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:d533be39ff1368e65dbe1c87f9baf3d607cc9b4fdd5f3b2a198d0c2dd85936db done
#8 naming to gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:f13f559c01a1aaa3b023ba48b30ac18b99ae81f258d27ae7c6aa97c5de3735e1
#2 transferring context: 34B done
#2 DONE 0.3s

#1 [internal] load build definition from Dockerfile
#1 sha256:7b90ded655283cc8fa59838b755738bdd8e6e8bbe2d7ed33216bdf5c5a038a13
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.4s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:ed6828ee83cf1f9bd0a3561accb2abb1607711789701907b97baa5257b77443a
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:d0298640f2e896cf6cc8761bc2b645cd6279e2ed1f4825ae8346b6408f9ace16
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:5e5b1e8f143286c16441c8ced71bb2e29e749053068cc4309cbef6c738e3cfcb
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:772ea2c012da35577c899626355bd4a5bb7325e63f648eb5e75146fac1c35f96
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:3d428ad02e6fe3e27615f2410224bd49935248727d7e72a7f47845e7e2849a96
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:8d4e2bd168c9f1ee7dd45ae47dc64928fffc9bf6669b62cdee45ce0155e16922
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:99c4543f55b9f8f0831f99bedd25c76065329188e828f783bb20eb22a7021534
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg-intermediate:latest
#3 sha256:92b34fc605a468aa89c080c6e82b7e1b8976f9390ca10dfc87158d842de8a4f0
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg-intermediate
#6 sha256:a2ddd06547a38bb2cfd89301ab7828ed3852e82b39e3c6f361463739b7096061
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg
#5 sha256:46b22e7dce95f3cffb61035caa8a004f04d6e84e5d033c3cc22c4b7a6b6e5744
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:ecabce9ad1d031f35d2a41712c0f8d067df60ebbf92eaf29c71f184562f630f8
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.1s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:a4c16134b82f11411c3895cd6c2d690b180aff3b47add45a52d95ca726e9c451
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:c29980aff766860ac96650fc91608709c348d54f6ed8ee0bd81f4fdd4c48b92f
#14 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:0a5218c301ff7d29afb0a36b00a8cae2430c3cb44880cafb6c98caef3dec5ceb
#19 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:77986f87bc267062efe2ea9fb8f5b6851bb9ed46345c4016bcb453f0490a7b1c
#18 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:77dbe5fa04838c5068f67dc6dbf3fe97d90b62c3ad81f199fcdba28f02a2960a
#10 CACHED

#15 [stage-1  8/13] COPY benchmarks/openjpeg_openjpeg/benchmark.yaml /
#15 sha256:495a821fac81179a300be15a4dfe85536d126c4c926955071a24edf45666bf63
#15 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:61da9c61f5bd0956a8294e3762b2556bf3203e9b3bdc843b4fc6a92ca2407f75
#8 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:2598d9cfd105cca0c3babe29d611beef9dcdacc83c84f6945c4a85fbe6e6271d
#17 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:8916f768c68bc1f7561ee0d7c60addd5868f05da1bd38777bf1e2a58a30e5f66
#16 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:0135d4d2e0ebc068fc5b9ea220f1d756d98f94a10e900db76dc7aaa2eacd6e0d
#9 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:8db66d8f99dea95081f44631d98c24ec365102ae8e9ab50ce2fcfd43984c7dae
#11 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:5698abe87ab32c109c14173c193c7520218375432461c7818d7399f0884107ae
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:c26db9c5783e102789200ec6385ceadda30782f34faf3045be2dbc02cd13a209
#21 writing image sha256:c26db9c5783e102789200ec6385ceadda30782f34faf3045be2dbc02cd13a209 0.0s done
#21 naming to gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg done
#21 DONE 0.4s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:b055a73d789e20dc90be62fd5163ccfad8d1f752543c952e43b09cdfd2e300ed
#1 transferring dockerfile: 656B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:786266bc2a8f8460180c613dc2a0df41db4bf756aa76db8591f0d37738de7b57
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/runners/afl/openjpeg_openjpeg-intermediate
#4 sha256:edaaa43b9b4317b46149aa6fcfff828ef840335badd4fe185df91d65aa9aebc2
#4 DONE 0.0s

#5 [1/1] FROM gcr.io/fuzzbench/base-image
#5 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#5 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:3e4588a9aebaeeab0d6e65a047af35e4caf540bb58ccd8719f28cf6fa6b3868f done
#6 naming to gcr.io/fuzzbench/runners/afl/openjpeg_openjpeg-intermediate done
#6 DONE 0.1s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:e086f2bab1faf3b063619b000d7aaf257de9e441eea57a2510a19ce2d2c339df
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:2fc04044689427b55cce7d9aa100471f82d2ac9393f868e40d2e424eb00ab9ba
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/openjpeg_openjpeg-intermediate:latest
#3 sha256:35eb7e3d6dba4ae2cee563fd797f05932449b17386698ca24b7c4660b521be0b
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg:latest
#4 sha256:9e2baab4d0c5f47783ee0bdce77f105e79e5b027dd857992977ccf9adc8b6c7e
#4 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/openjpeg_openjpeg-intermediate
#6 sha256:a41db044f69d4f12b4e4e3ad7b945d7b34c0601b9c22014bed3eb623e77ba2c7
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/openjpeg_openjpeg
#5 sha256:3a3208cf78523a0e4ad796369468f3eeb69ccc1bd4bad705eb775e28fde49832
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/openjpeg_openjpeg
#10 sha256:a2aaac51b945bce2c17399a97b652d132931119cab21d072855557ecb50b3b65
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:f23287ba72f828735eda39bd05382b2fb97a9d3dd4a85f0bc37854730bab2924
#12 transferring context: 17.64MB 0.6s done
#12 DONE 0.7s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:0eca4ce4355ba7a4e1ccd54b6d4226534e921b00f2fb3d5763db8fada8a1912c
#14 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:197317d6daa9ab23c99c0c3cb8b392e2c4c9be3ce4f90516b57daf574ac1bf38
#17 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:b7c055ede55591633f2375ca8b8cdba03d01776625a288e4536df58c5c6857f7
#15 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:c38f65e64c1a49ee5360e3286853a1e199c197c45cb2061bc20bd45fe45d3ad6
#18 CACHED

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:1b0c656e832654a9f33708f7e415aaaafe6868c841e050b0c1842b9b42600f31
#19 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:35a011ad91ee3318aa8562e95afc31c9a58167e009a00a051360939d14d060c1
#11 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:605f84a01355f0d3e3e987d3d2ed5ab3600718b98ed57ec0987fe6212d223741
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:557e35acef6df267dd3ad53125aca5fc628ca61479d6c9990f010db61e502967
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:8cad8031839619efd2332fe08dd9dbca6395276b630e5ff00051c16fa3fbed65
#9 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:b1aef674c8515794db087b74b1d57b46c3d9e12fba36c7ead36967cf93624908
#16 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:7c468dd62ace5df98f1e79d1238cce8f981799f2aeb4f7530600165f3938fa70
#13 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:5ae3816d25d588bacde63621f8cf8baafd71933b63f899c2d212910a99bdde99
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:cac358a3dc301df913e85df19cdd524623bd0f8cad039595d85d6ca5ad964e2c 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/openjpeg_openjpeg done
#21 DONE 0.2s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
ERROR:root:Fuzz target binary not found.
INFO:root:Doing final sync.
ERROR:root:Call to <function get_stats at 0x7f28e9db7f70> failed. Extras: {'traceback': 'Traceback (most recent call last):\n  File "/src/experiment/runner.py", line 374, in record_stats\n    stats_json_str = fuzzer_module_get_stats(output_corpus,\n  File "/src/fuzzers/afl/fuzzer.py", line 51, in get_stats\n    with open(stats_file) as file_handle:\nFileNotFoundError: [Errno 2] No such file or directory: \'/out/corpus/fuzzer_stats\'\n'}
