WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: flac_fuzzer_exo.
INFO:root:Please run "make test-run-afl-flac_fuzzer_exo" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:8f03cff8311fc0e3e4bf31d4da58d40eba0b8fc99710c3867f9eb290445ccac5
#1 transferring dockerfile:
#1 transferring dockerfile: 1.24kB done
#1 DONE 0.4s

#2 [internal] load .dockerignore
#2 sha256:b58f8ba58dbb645dfc879c4ff88e0492fd16e20d679d0d9ce221e53195af0aac
#2 transferring context: 2B done
#2 DONE 0.4s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#12 [internal] load build context
#12 sha256:cd6b3f7b30771ca107c1deb83dbbc3d89159e356b7b7849386bb088bdf76724b
#12 DONE 0.0s

#5 [1/9] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo
#4 sha256:a2fbe73c3833545b45b576c9992dfb705a0693cbfe0f8d0d14ecbbfb8e22a4c2
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo:latest: not found

#5 [1/9] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 CACHED

#12 [internal] load build context
#12 sha256:cd6b3f7b30771ca107c1deb83dbbc3d89159e356b7b7849386bb088bdf76724b
#12 transferring context: 18.27kB done
#12 DONE 0.3s

#6 [2/9] RUN apt-get update && apt-get install -y make autoconf automake libtool libtool-bin pkg-config gettext sudo default-jdk
#6 sha256:b8ce6b7769201fa13e6038993255d11f64bad3a1066aaf8d9f697dbee9febb71
#6 0.858 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#6 0.858 Get:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#6 0.858 Hit:3 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 0.938 Get:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#6 0.972 Get:5 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#6 1.415 Get:6 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [827 kB]
#6 1.536 Get:7 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1134 kB]
#6 1.646 Get:8 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1973 kB]
#6 1.797 Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [752 kB]
#6 1.829 Get:10 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1547 kB]
#6 2.455 Fetched 6568 kB in 2s (4048 kB/s)
#6 2.455 Reading package lists...
#6 4.191 Reading package lists...
#6 5.602 Building dependency tree...
#6 5.812 Reading state information...
#6 6.031 make is already the newest version (4.2.1-1.2).
#6 6.031 make set to manually installed.
#6 6.031 The following additional packages will be installed:
#6 6.031   alsa-topology-conf alsa-ucm-conf at-spi2-core autotools-dev
#6 6.031   ca-certificates-java default-jdk-headless default-jre default-jre-headless
#6 6.031   fontconfig-config fonts-dejavu-core fonts-dejavu-extra gettext-base
#6 6.031   java-common libasound2 libasound2-data libatk-bridge2.0-0
#6 6.031   libatk-wrapper-java libatk-wrapper-java-jni libatk1.0-0 libatk1.0-data
#6 6.031   libatspi2.0-0 libavahi-client3 libavahi-common-data libavahi-common3
#6 6.031   libcroco3 libcups2 libdrm-amdgpu1 libdrm-common libdrm-intel1
#6 6.031   libdrm-nouveau2 libdrm-radeon1 libdrm2 libfontconfig1 libfontenc1
#6 6.031   libfreetype6 libgif7 libgl1 libgl1-mesa-dri libglapi-mesa libglvnd0
#6 6.031   libglx-mesa0 libglx0 libgraphite2-3 libharfbuzz0b libice-dev libice6
#6 6.031   libjpeg-turbo8 libjpeg8 liblcms2-2 libllvm12 libltdl-dev libltdl7 libnspr4
#6 6.032   libnss3 libpciaccess0 libpcsclite1 libpng16-16 libpthread-stubs0-dev
#6 6.032   libsensors-config libsensors5 libsigsegv2 libsm-dev libsm6 libvulkan1
#6 6.032   libwayland-client0 libx11-dev libx11-xcb1 libxau-dev libxaw7 libxcb-dri2-0
#6 6.032   libxcb-dri3-0 libxcb-glx0 libxcb-present0 libxcb-randr0 libxcb-shape0
#6 6.032   libxcb-shm0 libxcb-sync1 libxcb-xfixes0 libxcb1-dev libxcomposite1
#6 6.032   libxdmcp-dev libxfixes3 libxft2 libxi6 libxinerama1 libxkbfile1 libxmu6
#6 6.032   libxpm4 libxrandr2 libxrender1 libxshmfence1 libxt-dev libxt6 libxtst6
#6 6.032   libxv1 libxxf86dga1 libxxf86vm1 m4 mesa-vulkan-drivers openjdk-11-jdk
#6 6.033   openjdk-11-jdk-headless openjdk-11-jre openjdk-11-jre-headless x11-common
#6 6.033   x11-utils x11proto-core-dev x11proto-dev xorg-sgml-doctools xtrans-dev
#6 6.035 Suggested packages:
#6 6.035   autoconf-archive gnu-standards autoconf-doc gettext-doc autopoint
#6 6.035   libasprintf-dev libgettextpo-dev libasound2-plugins alsa-utils cups-common
#6 6.035   libice-doc liblcms2-utils libtool-doc pciutils pcscd lm-sensors libsm-doc
#6 6.035   gfortran | fortran95-compiler gcj-jdk libx11-doc libxcb-doc libxt-doc m4-doc
#6 6.035   openjdk-11-demo openjdk-11-source visualvm libnss-mdns fonts-ipafont-gothic
#6 6.035   fonts-ipafont-mincho fonts-wqy-microhei | fonts-wqy-zenhei fonts-indic
#6 6.035   mesa-utils
#6 6.247 The following NEW packages will be installed:
#6 6.247   alsa-topology-conf alsa-ucm-conf at-spi2-core autoconf automake
#6 6.247   autotools-dev ca-certificates-java default-jdk default-jdk-headless
#6 6.247   default-jre default-jre-headless fontconfig-config fonts-dejavu-core
#6 6.247   fonts-dejavu-extra gettext gettext-base java-common libasound2
#6 6.247   libasound2-data libatk-bridge2.0-0 libatk-wrapper-java
#6 6.247   libatk-wrapper-java-jni libatk1.0-0 libatk1.0-data libatspi2.0-0
#6 6.248   libavahi-client3 libavahi-common-data libavahi-common3 libcroco3 libcups2
#6 6.248   libdrm-amdgpu1 libdrm-common libdrm-intel1 libdrm-nouveau2 libdrm-radeon1
#6 6.248   libdrm2 libfontconfig1 libfontenc1 libfreetype6 libgif7 libgl1
#6 6.248   libgl1-mesa-dri libglapi-mesa libglvnd0 libglx-mesa0 libglx0 libgraphite2-3
#6 6.248   libharfbuzz0b libice-dev libice6 libjpeg-turbo8 libjpeg8 liblcms2-2
#6 6.248   libllvm12 libltdl-dev libltdl7 libnspr4 libnss3 libpciaccess0 libpcsclite1
#6 6.248   libpng16-16 libpthread-stubs0-dev libsensors-config libsensors5 libsigsegv2
#6 6.248   libsm-dev libsm6 libtool libtool-bin libvulkan1 libwayland-client0
#6 6.248   libx11-dev libx11-xcb1 libxau-dev libxaw7 libxcb-dri2-0 libxcb-dri3-0
#6 6.248   libxcb-glx0 libxcb-present0 libxcb-randr0 libxcb-shape0 libxcb-shm0
#6 6.248   libxcb-sync1 libxcb-xfixes0 libxcb1-dev libxcomposite1 libxdmcp-dev
#6 6.249   libxfixes3 libxft2 libxi6 libxinerama1 libxkbfile1 libxmu6 libxpm4
#6 6.249   libxrandr2 libxrender1 libxshmfence1 libxt-dev libxt6 libxtst6 libxv1
#6 6.249   libxxf86dga1 libxxf86vm1 m4 mesa-vulkan-drivers openjdk-11-jdk
#6 6.249   openjdk-11-jdk-headless openjdk-11-jre openjdk-11-jre-headless pkg-config
#6 6.249   sudo x11-common x11-utils x11proto-core-dev x11proto-dev xorg-sgml-doctools
#6 6.249   xtrans-dev
#6 6.327 0 upgraded, 117 newly installed, 0 to remove and 0 not upgraded.
#6 6.327 Need to get 311 MB of archives.
#6 6.327 After this operation, 978 MB of additional disk space will be used.
#6 6.327 Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 sudo amd64 1.8.31-1ubuntu1.2 [514 kB]
#6 6.468 Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 gettext-base amd64 0.19.8.1-10build1 [50.2 kB]
#6 6.472 Get:3 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libdrm-common all 2.4.107-8ubuntu1~20.04.1 [5408 B]
#6 6.473 Get:4 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libdrm2 amd64 2.4.107-8ubuntu1~20.04.1 [34.1 kB]
#6 6.475 Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 libpng16-16 amd64 1.6.37-2 [179 kB]
#6 6.488 Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 alsa-topology-conf all 1.2.2-1 [7364 B]
#6 6.489 Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 alsa-ucm-conf all 1.2.2-1ubuntu0.11 [26.9 kB]
#6 6.491 Get:8 http://archive.ubuntu.com/ubuntu focal/main amd64 libatspi2.0-0 amd64 2.36.0-2 [64.2 kB]
#6 6.495 Get:9 http://archive.ubuntu.com/ubuntu focal/main amd64 x11-common all 1:7.7+19ubuntu14 [22.3 kB]
#6 6.497 Get:10 http://archive.ubuntu.com/ubuntu focal/main amd64 libxtst6 amd64 2:1.2.3-1 [12.8 kB]
#6 6.498 Get:11 http://archive.ubuntu.com/ubuntu focal/main amd64 at-spi2-core amd64 2.36.0-2 [48.7 kB]
#6 6.520 Get:12 http://archive.ubuntu.com/ubuntu focal/main amd64 libsigsegv2 amd64 2.12-2 [13.9 kB]
#6 6.521 Get:13 http://archive.ubuntu.com/ubuntu focal/main amd64 m4 amd64 1.4.18-4 [199 kB]
#6 6.536 Get:14 http://archive.ubuntu.com/ubuntu focal/main amd64 autoconf all 2.69-11.1 [321 kB]
#6 6.560 Get:15 http://archive.ubuntu.com/ubuntu focal/main amd64 autotools-dev all 20180224.1 [39.6 kB]
#6 6.563 Get:16 http://archive.ubuntu.com/ubuntu focal/main amd64 automake all 1:1.16.1-4ubuntu6 [522 kB]
#6 7.028 Get:17 http://archive.ubuntu.com/ubuntu focal/main amd64 java-common all 0.72 [6816 B]
#6 7.028 Get:18 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libavahi-common-data amd64 0.7-4ubuntu7.1 [21.4 kB]
#6 7.029 Get:19 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libavahi-common3 amd64 0.7-4ubuntu7.1 [21.7 kB]
#6 7.030 Get:20 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libavahi-client3 amd64 0.7-4ubuntu7.1 [25.5 kB]
#6 7.030 Get:21 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libcups2 amd64 2.3.1-9ubuntu1.1 [233 kB]
#6 7.036 Get:22 http://archive.ubuntu.com/ubuntu focal/main amd64 liblcms2-2 amd64 2.9-4 [140 kB]
#6 7.039 Get:23 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libjpeg-turbo8 amd64 2.0.3-0ubuntu1.20.04.1 [117 kB]
#6 7.042 Get:24 http://archive.ubuntu.com/ubuntu focal/main amd64 libjpeg8 amd64 8c-2ubuntu8 [2194 B]
#6 7.042 Get:25 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libfreetype6 amd64 2.10.1-2ubuntu0.1 [341 kB]
#6 7.050 Get:26 http://archive.ubuntu.com/ubuntu focal/main amd64 fonts-dejavu-core all 2.37-1 [1041 kB]
#6 7.128 Get:27 http://archive.ubuntu.com/ubuntu focal/main amd64 fontconfig-config all 2.13.1-2ubuntu3 [28.8 kB]
#6 7.129 Get:28 http://archive.ubuntu.com/ubuntu focal/main amd64 libfontconfig1 amd64 2.13.1-2ubuntu3 [114 kB]
#6 7.138 Get:29 http://archive.ubuntu.com/ubuntu focal/main amd64 libnspr4 amd64 2:4.25-1 [107 kB]
#6 7.146 Get:30 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libnss3 amd64 2:3.49.1-1ubuntu1.6 [1256 kB]
#6 7.239 Get:31 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libasound2-data all 1.2.2-2.1ubuntu2.5 [20.1 kB]
#6 7.240 Get:32 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libasound2 amd64 1.2.2-2.1ubuntu2.5 [335 kB]
#6 7.266 Get:33 http://archive.ubuntu.com/ubuntu focal/main amd64 libgraphite2-3 amd64 1.3.13-11build1 [73.5 kB]
#6 7.271 Get:34 http://archive.ubuntu.com/ubuntu focal/main amd64 libharfbuzz0b amd64 2.6.4-1ubuntu4 [391 kB]
#6 7.300 Get:35 http://archive.ubuntu.com/ubuntu focal/main amd64 libpcsclite1 amd64 1.8.26-3 [22.0 kB]
#6 7.302 Get:36 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 openjdk-11-jre-headless amd64 11.0.13+8-0ubuntu1~20.04 [37.3 MB]
#6 10.52 Get:37 http://archive.ubuntu.com/ubuntu focal/main amd64 default-jre-headless amd64 2:1.11-72 [3192 B]
#6 10.52 Get:38 http://archive.ubuntu.com/ubuntu focal/main amd64 ca-certificates-java all 20190405ubuntu1 [12.2 kB]
#6 10.52 Get:39 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libglvnd0 amd64 1.3.2-1~ubuntu0.20.04.1 [51.4 kB]
#6 10.53 Get:40 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libglapi-mesa amd64 21.2.6-0ubuntu0.1~20.04.1 [27.3 kB]
#6 10.53 Get:41 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libx11-xcb1 amd64 2:1.6.9-2ubuntu1.2 [9372 B]
#6 10.53 Get:42 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb-dri2-0 amd64 1.14-2 [6920 B]
#6 10.53 Get:43 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb-dri3-0 amd64 1.14-2 [6552 B]
#6 10.53 Get:44 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb-glx0 amd64 1.14-2 [22.1 kB]
#6 10.53 Get:45 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb-present0 amd64 1.14-2 [5560 B]
#6 10.55 Get:46 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb-shm0 amd64 1.14-2 [5584 B]
#6 10.55 Get:47 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb-sync1 amd64 1.14-2 [8884 B]
#6 10.57 Get:48 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb-xfixes0 amd64 1.14-2 [9296 B]
#6 10.57 Get:49 http://archive.ubuntu.com/ubuntu focal/main amd64 libxfixes3 amd64 1:5.0.3-2 [10.9 kB]
#6 10.57 Get:50 http://archive.ubuntu.com/ubuntu focal/main amd64 libxshmfence1 amd64 1.3-1 [5028 B]
#6 10.57 Get:51 http://archive.ubuntu.com/ubuntu focal/main amd64 libxxf86vm1 amd64 1:1.1.4-1build1 [10.2 kB]
#6 10.57 Get:52 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libdrm-amdgpu1 amd64 2.4.107-8ubuntu1~20.04.1 [18.4 kB]
#6 10.57 Get:53 http://archive.ubuntu.com/ubuntu focal/main amd64 libpciaccess0 amd64 0.16-0ubuntu1 [17.9 kB]
#6 10.57 Get:54 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libdrm-intel1 amd64 2.4.107-8ubuntu1~20.04.1 [60.3 kB]
#6 10.58 Get:55 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libdrm-nouveau2 amd64 2.4.107-8ubuntu1~20.04.1 [16.6 kB]
#6 10.59 Get:56 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libdrm-radeon1 amd64 2.4.107-8ubuntu1~20.04.1 [19.7 kB]
#6 10.59 Get:57 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libllvm12 amd64 1:12.0.0-3ubuntu1~20.04.4 [18.8 MB]
#6 12.29 Get:58 http://archive.ubuntu.com/ubuntu focal/main amd64 libsensors-config all 1:3.6.0-2ubuntu1 [6092 B]
#6 12.29 Get:59 http://archive.ubuntu.com/ubuntu focal/main amd64 libsensors5 amd64 1:3.6.0-2ubuntu1 [27.4 kB]
#6 12.29 Get:60 http://archive.ubuntu.com/ubuntu focal/main amd64 libvulkan1 amd64 1.2.131.2-1 [93.3 kB]
#6 12.30 Get:61 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgl1-mesa-dri amd64 21.2.6-0ubuntu0.1~20.04.1 [11.0 MB]
#6 12.93 Get:62 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libglx-mesa0 amd64 21.2.6-0ubuntu0.1~20.04.1 [137 kB]
#6 12.93 Get:63 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libglx0 amd64 1.3.2-1~ubuntu0.20.04.1 [32.6 kB]
#6 12.93 Get:64 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgl1 amd64 1.3.2-1~ubuntu0.20.04.1 [86.9 kB]
#6 12.94 Get:65 http://archive.ubuntu.com/ubuntu focal/main amd64 libgif7 amd64 5.1.9-1 [32.2 kB]
#6 12.94 Get:66 http://archive.ubuntu.com/ubuntu focal/main amd64 libxi6 amd64 2:1.7.10-0ubuntu1 [29.9 kB]
#6 13.03 Get:67 http://archive.ubuntu.com/ubuntu focal/main amd64 libxrender1 amd64 1:0.9.10-1 [18.7 kB]
#6 13.03 Get:68 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 openjdk-11-jre amd64 11.0.13+8-0ubuntu1~20.04 [175 kB]
#6 13.03 Get:69 http://archive.ubuntu.com/ubuntu focal/main amd64 default-jre amd64 2:1.11-72 [1084 B]
#6 13.03 Get:70 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 openjdk-11-jdk-headless amd64 11.0.13+8-0ubuntu1~20.04 [223 MB]
#6 30.81 Get:71 http://archive.ubuntu.com/ubuntu focal/main amd64 default-jdk-headless amd64 2:1.11-72 [1140 B]
#6 30.81 Get:72 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 openjdk-11-jdk amd64 11.0.13+8-0ubuntu1~20.04 [1542 kB]
#6 30.93 Get:73 http://archive.ubuntu.com/ubuntu focal/main amd64 default-jdk amd64 2:1.11-72 [1096 B]
#6 30.93 Get:74 http://archive.ubuntu.com/ubuntu focal/main amd64 fonts-dejavu-extra all 2.37-1 [1953 kB]
#6 31.08 Get:75 http://archive.ubuntu.com/ubuntu focal/main amd64 libcroco3 amd64 0.6.13-1 [82.5 kB]
#6 31.08 Get:76 http://archive.ubuntu.com/ubuntu focal/main amd64 gettext amd64 0.19.8.1-10build1 [895 kB]
#6 31.15 Get:77 http://archive.ubuntu.com/ubuntu focal/main amd64 libatk1.0-data all 2.35.1-1ubuntu2 [2964 B]
#6 31.15 Get:78 http://archive.ubuntu.com/ubuntu focal/main amd64 libatk1.0-0 amd64 2.35.1-1ubuntu2 [45.5 kB]
#6 32.07 Get:79 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libatk-bridge2.0-0 amd64 2.34.2-0ubuntu2~20.04.1 [58.2 kB]
#6 32.07 Get:80 http://archive.ubuntu.com/ubuntu focal/main amd64 libfontenc1 amd64 1:1.1.4-0ubuntu1 [14.0 kB]
#6 32.07 Get:81 http://archive.ubuntu.com/ubuntu focal/main amd64 libice6 amd64 2:1.0.10-0ubuntu1 [41.0 kB]
#6 32.08 Get:82 http://archive.ubuntu.com/ubuntu focal/main amd64 libsm6 amd64 2:1.2.3-1 [16.1 kB]
#6 32.08 Get:83 http://archive.ubuntu.com/ubuntu focal/main amd64 libxt6 amd64 1:1.1.5-1 [160 kB]
#6 32.08 Get:84 http://archive.ubuntu.com/ubuntu focal/main amd64 libxmu6 amd64 2:1.1.3-0ubuntu1 [45.8 kB]
#6 32.08 Get:85 http://archive.ubuntu.com/ubuntu focal/main amd64 libxpm4 amd64 1:3.5.12-1 [34.0 kB]
#6 32.08 Get:86 http://archive.ubuntu.com/ubuntu focal/main amd64 libxaw7 amd64 2:1.0.13-1 [173 kB]
#6 32.09 Get:87 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb-shape0 amd64 1.14-2 [5928 B]
#6 32.10 Get:88 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcomposite1 amd64 1:0.4.5-1 [6976 B]
#6 32.12 Get:89 http://archive.ubuntu.com/ubuntu focal/main amd64 libxft2 amd64 2.3.3-0ubuntu1 [39.2 kB]
#6 32.12 Get:90 http://archive.ubuntu.com/ubuntu focal/main amd64 libxinerama1 amd64 2:1.1.4-2 [6904 B]
#6 32.12 Get:91 http://archive.ubuntu.com/ubuntu focal/main amd64 libxkbfile1 amd64 1:1.1.0-1 [65.3 kB]
#6 32.13 Get:92 http://archive.ubuntu.com/ubuntu focal/main amd64 libxrandr2 amd64 2:1.5.2-0ubuntu1 [18.5 kB]
#6 32.13 Get:93 http://archive.ubuntu.com/ubuntu focal/main amd64 libxv1 amd64 2:1.0.11-1 [10.7 kB]
#6 32.13 Get:94 http://archive.ubuntu.com/ubuntu focal/main amd64 libxxf86dga1 amd64 2:1.1.5-0ubuntu1 [12.0 kB]
#6 32.13 Get:95 http://archive.ubuntu.com/ubuntu focal/main amd64 x11-utils amd64 7.7+5 [199 kB]
#6 32.15 Get:96 http://archive.ubuntu.com/ubuntu focal/main amd64 libatk-wrapper-java all 0.37.1-1 [53.0 kB]
#6 32.16 Get:97 http://archive.ubuntu.com/ubuntu focal/main amd64 libatk-wrapper-java-jni amd64 0.37.1-1 [45.1 kB]
#6 32.16 Get:98 http://archive.ubuntu.com/ubuntu focal/main amd64 xorg-sgml-doctools all 1:1.11-1 [12.9 kB]
#6 32.17 Get:99 http://archive.ubuntu.com/ubuntu focal/main amd64 x11proto-dev all 2019.2-1ubuntu1 [594 kB]
#6 32.24 Get:100 http://archive.ubuntu.com/ubuntu focal/main amd64 x11proto-core-dev all 2019.2-1ubuntu1 [2620 B]
#6 32.24 Get:101 http://archive.ubuntu.com/ubuntu focal/main amd64 libice-dev amd64 2:1.0.10-0ubuntu1 [47.8 kB]
#6 32.29 Get:102 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl7 amd64 2.4.6-14 [38.5 kB]
#6 32.34 Get:103 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl-dev amd64 2.4.6-14 [162 kB]
#6 32.38 Get:104 http://archive.ubuntu.com/ubuntu focal/main amd64 libpthread-stubs0-dev amd64 0.4-1 [5384 B]
#6 32.39 Get:105 http://archive.ubuntu.com/ubuntu focal/main amd64 libsm-dev amd64 2:1.2.3-1 [17.0 kB]
#6 32.39 Get:106 http://archive.ubuntu.com/ubuntu focal/main amd64 libtool all 2.4.6-14 [161 kB]
#6 32.41 Get:107 http://archive.ubuntu.com/ubuntu focal/main amd64 libtool-bin amd64 2.4.6-14 [80.1 kB]
#6 32.41 Get:108 http://archive.ubuntu.com/ubuntu focal/main amd64 libwayland-client0 amd64 1.18.0-1 [23.9 kB]
#6 32.42 Get:109 http://archive.ubuntu.com/ubuntu focal/main amd64 libxau-dev amd64 1:1.0.9-0ubuntu1 [9552 B]
#6 32.42 Get:110 http://archive.ubuntu.com/ubuntu focal/main amd64 libxdmcp-dev amd64 1:1.1.3-0ubuntu1 [25.3 kB]
#6 32.42 Get:111 http://archive.ubuntu.com/ubuntu focal/main amd64 xtrans-dev all 1.4.0-1 [68.9 kB]
#6 32.43 Get:112 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb1-dev amd64 1.14-2 [80.5 kB]
#6 32.44 Get:113 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libx11-dev amd64 2:1.6.9-2ubuntu1.2 [647 kB]
#6 32.52 Get:114 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb-randr0 amd64 1.14-2 [16.3 kB]
#6 32.52 Get:115 http://archive.ubuntu.com/ubuntu focal/main amd64 libxt-dev amd64 1:1.1.5-1 [395 kB]
#6 32.57 Get:116 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 mesa-vulkan-drivers amd64 21.2.6-0ubuntu0.1~20.04.1 [5784 kB]
#6 33.07 Get:117 http://archive.ubuntu.com/ubuntu focal/main amd64 pkg-config amd64 0.29.1-0ubuntu4 [45.5 kB]
#6 33.90 debconf: delaying package configuration, since apt-utils is not installed
#6 33.99 Fetched 311 MB in 27s (11.6 MB/s)
#6 34.10 Selecting previously unselected package sudo.
#6 34.10 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21291 files and directories currently installed.)
#6 34.19 Preparing to unpack .../000-sudo_1.8.31-1ubuntu1.2_amd64.deb ...
#6 34.20 Unpacking sudo (1.8.31-1ubuntu1.2) ...
#6 34.35 Selecting previously unselected package gettext-base.
#6 34.35 Preparing to unpack .../001-gettext-base_0.19.8.1-10build1_amd64.deb ...
#6 34.39 Unpacking gettext-base (0.19.8.1-10build1) ...
#6 34.47 Selecting previously unselected package libdrm-common.
#6 34.47 Preparing to unpack .../002-libdrm-common_2.4.107-8ubuntu1~20.04.1_all.deb ...
#6 34.49 Unpacking libdrm-common (2.4.107-8ubuntu1~20.04.1) ...
#6 34.59 Selecting previously unselected package libdrm2:amd64.
#6 34.60 Preparing to unpack .../003-libdrm2_2.4.107-8ubuntu1~20.04.1_amd64.deb ...
#6 34.60 Unpacking libdrm2:amd64 (2.4.107-8ubuntu1~20.04.1) ...
#6 34.72 Selecting previously unselected package libpng16-16:amd64.
#6 34.72 Preparing to unpack .../004-libpng16-16_1.6.37-2_amd64.deb ...
#6 34.74 Unpacking libpng16-16:amd64 (1.6.37-2) ...
#6 34.84 Selecting previously unselected package alsa-topology-conf.
#6 34.84 Preparing to unpack .../005-alsa-topology-conf_1.2.2-1_all.deb ...
#6 34.86 Unpacking alsa-topology-conf (1.2.2-1) ...
#6 34.95 Selecting previously unselected package alsa-ucm-conf.
#6 34.96 Preparing to unpack .../006-alsa-ucm-conf_1.2.2-1ubuntu0.11_all.deb ...
#6 34.96 Unpacking alsa-ucm-conf (1.2.2-1ubuntu0.11) ...
#6 35.10 Selecting previously unselected package libatspi2.0-0:amd64.
#6 35.11 Preparing to unpack .../007-libatspi2.0-0_2.36.0-2_amd64.deb ...
#6 35.11 Unpacking libatspi2.0-0:amd64 (2.36.0-2) ...
#6 35.21 Selecting previously unselected package x11-common.
#6 35.22 Preparing to unpack .../008-x11-common_1%3a7.7+19ubuntu14_all.deb ...
#6 35.24 dpkg-query: no packages found matching nux-tools
#6 35.26 Unpacking x11-common (1:7.7+19ubuntu14) ...
#6 35.34 Selecting previously unselected package libxtst6:amd64.
#6 35.34 Preparing to unpack .../009-libxtst6_2%3a1.2.3-1_amd64.deb ...
#6 35.35 Unpacking libxtst6:amd64 (2:1.2.3-1) ...
#6 35.42 Selecting previously unselected package at-spi2-core.
#6 35.42 Preparing to unpack .../010-at-spi2-core_2.36.0-2_amd64.deb ...
#6 35.44 Unpacking at-spi2-core (2.36.0-2) ...
#6 35.56 Selecting previously unselected package libsigsegv2:amd64.
#6 35.56 Preparing to unpack .../011-libsigsegv2_2.12-2_amd64.deb ...
#6 35.57 Unpacking libsigsegv2:amd64 (2.12-2) ...
#6 35.63 Selecting previously unselected package m4.
#6 35.63 Preparing to unpack .../012-m4_1.4.18-4_amd64.deb ...
#6 35.64 Unpacking m4 (1.4.18-4) ...
#6 35.69 Selecting previously unselected package autoconf.
#6 35.70 Preparing to unpack .../013-autoconf_2.69-11.1_all.deb ...
#6 35.70 Unpacking autoconf (2.69-11.1) ...
#6 35.78 Selecting previously unselected package autotools-dev.
#6 35.78 Preparing to unpack .../014-autotools-dev_20180224.1_all.deb ...
#6 35.79 Unpacking autotools-dev (20180224.1) ...
#6 35.84 Selecting previously unselected package automake.
#6 35.84 Preparing to unpack .../015-automake_1%3a1.16.1-4ubuntu6_all.deb ...
#6 35.85 Unpacking automake (1:1.16.1-4ubuntu6) ...
#6 35.95 Selecting previously unselected package java-common.
#6 35.96 Preparing to unpack .../016-java-common_0.72_all.deb ...
#6 35.96 Unpacking java-common (0.72) ...
#6 36.01 Selecting previously unselected package libavahi-common-data:amd64.
#6 36.01 Preparing to unpack .../017-libavahi-common-data_0.7-4ubuntu7.1_amd64.deb ...
#6 36.01 Unpacking libavahi-common-data:amd64 (0.7-4ubuntu7.1) ...
#6 36.07 Selecting previously unselected package libavahi-common3:amd64.
#6 36.07 Preparing to unpack .../018-libavahi-common3_0.7-4ubuntu7.1_amd64.deb ...
#6 36.08 Unpacking libavahi-common3:amd64 (0.7-4ubuntu7.1) ...
#6 36.13 Selecting previously unselected package libavahi-client3:amd64.
#6 36.13 Preparing to unpack .../019-libavahi-client3_0.7-4ubuntu7.1_amd64.deb ...
#6 36.14 Unpacking libavahi-client3:amd64 (0.7-4ubuntu7.1) ...
#6 36.19 Selecting previously unselected package libcups2:amd64.
#6 36.19 Preparing to unpack .../020-libcups2_2.3.1-9ubuntu1.1_amd64.deb ...
#6 36.19 Unpacking libcups2:amd64 (2.3.1-9ubuntu1.1) ...
#6 36.27 Selecting previously unselected package liblcms2-2:amd64.
#6 36.27 Preparing to unpack .../021-liblcms2-2_2.9-4_amd64.deb ...
#6 36.27 Unpacking liblcms2-2:amd64 (2.9-4) ...
#6 36.33 Selecting previously unselected package libjpeg-turbo8:amd64.
#6 36.34 Preparing to unpack .../022-libjpeg-turbo8_2.0.3-0ubuntu1.20.04.1_amd64.deb ...
#6 36.34 Unpacking libjpeg-turbo8:amd64 (2.0.3-0ubuntu1.20.04.1) ...
#6 36.40 Selecting previously unselected package libjpeg8:amd64.
#6 36.40 Preparing to unpack .../023-libjpeg8_8c-2ubuntu8_amd64.deb ...
#6 36.41 Unpacking libjpeg8:amd64 (8c-2ubuntu8) ...
#6 36.45 Selecting previously unselected package libfreetype6:amd64.
#6 36.45 Preparing to unpack .../024-libfreetype6_2.10.1-2ubuntu0.1_amd64.deb ...
#6 36.45 Unpacking libfreetype6:amd64 (2.10.1-2ubuntu0.1) ...
#6 36.53 Selecting previously unselected package fonts-dejavu-core.
#6 36.53 Preparing to unpack .../025-fonts-dejavu-core_2.37-1_all.deb ...
#6 36.53 Unpacking fonts-dejavu-core (2.37-1) ...
#6 36.82 Selecting previously unselected package fontconfig-config.
#6 36.82 Preparing to unpack .../026-fontconfig-config_2.13.1-2ubuntu3_all.deb ...
#6 36.83 Unpacking fontconfig-config (2.13.1-2ubuntu3) ...
#6 36.88 Selecting previously unselected package libfontconfig1:amd64.
#6 36.89 Preparing to unpack .../027-libfontconfig1_2.13.1-2ubuntu3_amd64.deb ...
#6 36.89 Unpacking libfontconfig1:amd64 (2.13.1-2ubuntu3) ...
#6 36.95 Selecting previously unselected package libnspr4:amd64.
#6 36.96 Preparing to unpack .../028-libnspr4_2%3a4.25-1_amd64.deb ...
#6 36.96 Unpacking libnspr4:amd64 (2:4.25-1) ...
#6 37.03 Selecting previously unselected package libnss3:amd64.
#6 37.03 Preparing to unpack .../029-libnss3_2%3a3.49.1-1ubuntu1.6_amd64.deb ...
#6 37.03 Unpacking libnss3:amd64 (2:3.49.1-1ubuntu1.6) ...
#6 37.20 Selecting previously unselected package libasound2-data.
#6 37.20 Preparing to unpack .../030-libasound2-data_1.2.2-2.1ubuntu2.5_all.deb ...
#6 37.21 Unpacking libasound2-data (1.2.2-2.1ubuntu2.5) ...
#6 37.27 Selecting previously unselected package libasound2:amd64.
#6 37.27 Preparing to unpack .../031-libasound2_1.2.2-2.1ubuntu2.5_amd64.deb ...
#6 37.28 Unpacking libasound2:amd64 (1.2.2-2.1ubuntu2.5) ...
#6 37.37 Selecting previously unselected package libgraphite2-3:amd64.
#6 37.37 Preparing to unpack .../032-libgraphite2-3_1.3.13-11build1_amd64.deb ...
#6 37.38 Unpacking libgraphite2-3:amd64 (1.3.13-11build1) ...
#6 37.43 Selecting previously unselected package libharfbuzz0b:amd64.
#6 37.44 Preparing to unpack .../033-libharfbuzz0b_2.6.4-1ubuntu4_amd64.deb ...
#6 37.44 Unpacking libharfbuzz0b:amd64 (2.6.4-1ubuntu4) ...
#6 37.68 Selecting previously unselected package libpcsclite1:amd64.
#6 37.68 Preparing to unpack .../034-libpcsclite1_1.8.26-3_amd64.deb ...
#6 37.69 Unpacking libpcsclite1:amd64 (1.8.26-3) ...
#6 37.81 Selecting previously unselected package openjdk-11-jre-headless:amd64.
#6 37.81 Preparing to unpack .../035-openjdk-11-jre-headless_11.0.13+8-0ubuntu1~20.04_amd64.deb ...
#6 37.82 Unpacking openjdk-11-jre-headless:amd64 (11.0.13+8-0ubuntu1~20.04) ...
#6 42.88 Selecting previously unselected package default-jre-headless.
#6 42.89 Preparing to unpack .../036-default-jre-headless_2%3a1.11-72_amd64.deb ...
#6 43.21 Unpacking default-jre-headless (2:1.11-72) ...
#6 44.71 Selecting previously unselected package ca-certificates-java.
#6 44.71 Preparing to unpack .../037-ca-certificates-java_20190405ubuntu1_all.deb ...
#6 45.07 Unpacking ca-certificates-java (20190405ubuntu1) ...
#6 45.92 Selecting previously unselected package libglvnd0:amd64.
#6 45.92 Preparing to unpack .../038-libglvnd0_1.3.2-1~ubuntu0.20.04.1_amd64.deb ...
#6 45.94 Unpacking libglvnd0:amd64 (1.3.2-1~ubuntu0.20.04.1) ...
#6 46.08 Selecting previously unselected package libglapi-mesa:amd64.
#6 46.09 Preparing to unpack .../039-libglapi-mesa_21.2.6-0ubuntu0.1~20.04.1_amd64.deb ...
#6 46.10 Unpacking libglapi-mesa:amd64 (21.2.6-0ubuntu0.1~20.04.1) ...
#6 46.22 Selecting previously unselected package libx11-xcb1:amd64.
#6 46.22 Preparing to unpack .../040-libx11-xcb1_2%3a1.6.9-2ubuntu1.2_amd64.deb ...
#6 46.24 Unpacking libx11-xcb1:amd64 (2:1.6.9-2ubuntu1.2) ...
#6 46.35 Selecting previously unselected package libxcb-dri2-0:amd64.
#6 46.35 Preparing to unpack .../041-libxcb-dri2-0_1.14-2_amd64.deb ...
#6 46.37 Unpacking libxcb-dri2-0:amd64 (1.14-2) ...
#6 46.47 Selecting previously unselected package libxcb-dri3-0:amd64.
#6 46.48 Preparing to unpack .../042-libxcb-dri3-0_1.14-2_amd64.deb ...
#6 46.49 Unpacking libxcb-dri3-0:amd64 (1.14-2) ...
#6 46.63 Selecting previously unselected package libxcb-glx0:amd64.
#6 46.63 Preparing to unpack .../043-libxcb-glx0_1.14-2_amd64.deb ...
#6 46.65 Unpacking libxcb-glx0:amd64 (1.14-2) ...
#6 46.80 Selecting previously unselected package libxcb-present0:amd64.
#6 46.81 Preparing to unpack .../044-libxcb-present0_1.14-2_amd64.deb ...
#6 46.83 Unpacking libxcb-present0:amd64 (1.14-2) ...
#6 47.00 Selecting previously unselected package libxcb-shm0:amd64.
#6 47.01 Preparing to unpack .../045-libxcb-shm0_1.14-2_amd64.deb ...
#6 47.03 Unpacking libxcb-shm0:amd64 (1.14-2) ...
#6 47.16 Selecting previously unselected package libxcb-sync1:amd64.
#6 47.16 Preparing to unpack .../046-libxcb-sync1_1.14-2_amd64.deb ...
#6 47.18 Unpacking libxcb-sync1:amd64 (1.14-2) ...
#6 47.29 Selecting previously unselected package libxcb-xfixes0:amd64.
#6 47.30 Preparing to unpack .../047-libxcb-xfixes0_1.14-2_amd64.deb ...
#6 47.31 Unpacking libxcb-xfixes0:amd64 (1.14-2) ...
#6 47.44 Selecting previously unselected package libxfixes3:amd64.
#6 47.44 Preparing to unpack .../048-libxfixes3_1%3a5.0.3-2_amd64.deb ...
#6 47.46 Unpacking libxfixes3:amd64 (1:5.0.3-2) ...
#6 47.57 Selecting previously unselected package libxshmfence1:amd64.
#6 47.57 Preparing to unpack .../049-libxshmfence1_1.3-1_amd64.deb ...
#6 47.59 Unpacking libxshmfence1:amd64 (1.3-1) ...
#6 47.69 Selecting previously unselected package libxxf86vm1:amd64.
#6 47.69 Preparing to unpack .../050-libxxf86vm1_1%3a1.1.4-1build1_amd64.deb ...
#6 47.71 Unpacking libxxf86vm1:amd64 (1:1.1.4-1build1) ...
#6 47.85 Selecting previously unselected package libdrm-amdgpu1:amd64.
#6 47.85 Preparing to unpack .../051-libdrm-amdgpu1_2.4.107-8ubuntu1~20.04.1_amd64.deb ...
#6 47.87 Unpacking libdrm-amdgpu1:amd64 (2.4.107-8ubuntu1~20.04.1) ...
#6 47.99 Selecting previously unselected package libpciaccess0:amd64.
#6 48.00 Preparing to unpack .../052-libpciaccess0_0.16-0ubuntu1_amd64.deb ...
#6 48.01 Unpacking libpciaccess0:amd64 (0.16-0ubuntu1) ...
#6 48.11 Selecting previously unselected package libdrm-intel1:amd64.
#6 48.12 Preparing to unpack .../053-libdrm-intel1_2.4.107-8ubuntu1~20.04.1_amd64.deb ...
#6 48.14 Unpacking libdrm-intel1:amd64 (2.4.107-8ubuntu1~20.04.1) ...
#6 48.27 Selecting previously unselected package libdrm-nouveau2:amd64.
#6 48.28 Preparing to unpack .../054-libdrm-nouveau2_2.4.107-8ubuntu1~20.04.1_amd64.deb ...
#6 48.29 Unpacking libdrm-nouveau2:amd64 (2.4.107-8ubuntu1~20.04.1) ...
#6 48.41 Selecting previously unselected package libdrm-radeon1:amd64.
#6 48.42 Preparing to unpack .../055-libdrm-radeon1_2.4.107-8ubuntu1~20.04.1_amd64.deb ...
#6 48.43 Unpacking libdrm-radeon1:amd64 (2.4.107-8ubuntu1~20.04.1) ...
#6 48.54 Selecting previously unselected package libllvm12:amd64.
#6 48.54 Preparing to unpack .../056-libllvm12_1%3a12.0.0-3ubuntu1~20.04.4_amd64.deb ...
#6 48.56 Unpacking libllvm12:amd64 (1:12.0.0-3ubuntu1~20.04.4) ...
#6 50.83 Selecting previously unselected package libsensors-config.
#6 50.83 Preparing to unpack .../057-libsensors-config_1%3a3.6.0-2ubuntu1_all.deb ...
#6 50.88 Unpacking libsensors-config (1:3.6.0-2ubuntu1) ...
#6 51.19 Selecting previously unselected package libsensors5:amd64.
#6 51.19 Preparing to unpack .../058-libsensors5_1%3a3.6.0-2ubuntu1_amd64.deb ...
#6 51.29 Unpacking libsensors5:amd64 (1:3.6.0-2ubuntu1) ...
#6 51.41 Selecting previously unselected package libvulkan1:amd64.
#6 51.41 Preparing to unpack .../059-libvulkan1_1.2.131.2-1_amd64.deb ...
#6 51.43 Unpacking libvulkan1:amd64 (1.2.131.2-1) ...
#6 51.61 Selecting previously unselected package libgl1-mesa-dri:amd64.
#6 51.61 Preparing to unpack .../060-libgl1-mesa-dri_21.2.6-0ubuntu0.1~20.04.1_amd64.deb ...
#6 51.64 Unpacking libgl1-mesa-dri:amd64 (21.2.6-0ubuntu0.1~20.04.1) ...
#6 52.83 Selecting previously unselected package libglx-mesa0:amd64.
#6 52.83 Preparing to unpack .../061-libglx-mesa0_21.2.6-0ubuntu0.1~20.04.1_amd64.deb ...
#6 52.85 Unpacking libglx-mesa0:amd64 (21.2.6-0ubuntu0.1~20.04.1) ...
#6 53.01 Selecting previously unselected package libglx0:amd64.
#6 53.02 Preparing to unpack .../062-libglx0_1.3.2-1~ubuntu0.20.04.1_amd64.deb ...
#6 53.03 Unpacking libglx0:amd64 (1.3.2-1~ubuntu0.20.04.1) ...
#6 53.13 Selecting previously unselected package libgl1:amd64.
#6 53.14 Preparing to unpack .../063-libgl1_1.3.2-1~ubuntu0.20.04.1_amd64.deb ...
#6 53.15 Unpacking libgl1:amd64 (1.3.2-1~ubuntu0.20.04.1) ...
#6 53.32 Selecting previously unselected package libgif7:amd64.
#6 53.33 Preparing to unpack .../064-libgif7_5.1.9-1_amd64.deb ...
#6 53.34 Unpacking libgif7:amd64 (5.1.9-1) ...
#6 53.47 Selecting previously unselected package libxi6:amd64.
#6 53.47 Preparing to unpack .../065-libxi6_2%3a1.7.10-0ubuntu1_amd64.deb ...
#6 53.48 Unpacking libxi6:amd64 (2:1.7.10-0ubuntu1) ...
#6 53.58 Selecting previously unselected package libxrender1:amd64.
#6 53.59 Preparing to unpack .../066-libxrender1_1%3a0.9.10-1_amd64.deb ...
#6 53.60 Unpacking libxrender1:amd64 (1:0.9.10-1) ...
#6 53.72 Selecting previously unselected package openjdk-11-jre:amd64.
#6 53.72 Preparing to unpack .../067-openjdk-11-jre_11.0.13+8-0ubuntu1~20.04_amd64.deb ...
#6 53.73 Unpacking openjdk-11-jre:amd64 (11.0.13+8-0ubuntu1~20.04) ...
#6 53.85 Selecting previously unselected package default-jre.
#6 53.85 Preparing to unpack .../068-default-jre_2%3a1.11-72_amd64.deb ...
#6 53.87 Unpacking default-jre (2:1.11-72) ...
#6 53.97 Selecting previously unselected package openjdk-11-jdk-headless:amd64.
#6 53.97 Preparing to unpack .../069-openjdk-11-jdk-headless_11.0.13+8-0ubuntu1~20.04_amd64.deb ...
#6 53.98 Unpacking openjdk-11-jdk-headless:amd64 (11.0.13+8-0ubuntu1~20.04) ...
#6 63.84 Selecting previously unselected package default-jdk-headless.
#6 63.84 Preparing to unpack .../070-default-jdk-headless_2%3a1.11-72_amd64.deb ...
#6 63.86 Unpacking default-jdk-headless (2:1.11-72) ...
#6 64.01 Selecting previously unselected package openjdk-11-jdk:amd64.
#6 64.01 Preparing to unpack .../071-openjdk-11-jdk_11.0.13+8-0ubuntu1~20.04_amd64.deb ...
#6 64.04 Unpacking openjdk-11-jdk:amd64 (11.0.13+8-0ubuntu1~20.04) ...
#6 64.20 Selecting previously unselected package default-jdk.
#6 64.21 Preparing to unpack .../072-default-jdk_2%3a1.11-72_amd64.deb ...
#6 64.23 Unpacking default-jdk (2:1.11-72) ...
#6 64.36 Selecting previously unselected package fonts-dejavu-extra.
#6 64.36 Preparing to unpack .../073-fonts-dejavu-extra_2.37-1_all.deb ...
#6 64.39 Unpacking fonts-dejavu-extra (2.37-1) ...
#6 64.80 Selecting previously unselected package libcroco3:amd64.
#6 64.80 Preparing to unpack .../074-libcroco3_0.6.13-1_amd64.deb ...
#6 64.84 Unpacking libcroco3:amd64 (0.6.13-1) ...
#6 64.95 Selecting previously unselected package gettext.
#6 64.96 Preparing to unpack .../075-gettext_0.19.8.1-10build1_amd64.deb ...
#6 64.97 Unpacking gettext (0.19.8.1-10build1) ...
#6 65.18 Selecting previously unselected package libatk1.0-data.
#6 65.19 Preparing to unpack .../076-libatk1.0-data_2.35.1-1ubuntu2_all.deb ...
#6 65.21 Unpacking libatk1.0-data (2.35.1-1ubuntu2) ...
#6 65.33 Selecting previously unselected package libatk1.0-0:amd64.
#6 65.34 Preparing to unpack .../077-libatk1.0-0_2.35.1-1ubuntu2_amd64.deb ...
#6 65.34 Unpacking libatk1.0-0:amd64 (2.35.1-1ubuntu2) ...
#6 65.41 Selecting previously unselected package libatk-bridge2.0-0:amd64.
#6 65.42 Preparing to unpack .../078-libatk-bridge2.0-0_2.34.2-0ubuntu2~20.04.1_amd64.deb ...
#6 65.43 Unpacking libatk-bridge2.0-0:amd64 (2.34.2-0ubuntu2~20.04.1) ...
#6 65.51 Selecting previously unselected package libfontenc1:amd64.
#6 65.51 Preparing to unpack .../079-libfontenc1_1%3a1.1.4-0ubuntu1_amd64.deb ...
#6 65.52 Unpacking libfontenc1:amd64 (1:1.1.4-0ubuntu1) ...
#6 65.59 Selecting previously unselected package libice6:amd64.
#6 65.59 Preparing to unpack .../080-libice6_2%3a1.0.10-0ubuntu1_amd64.deb ...
#6 65.61 Unpacking libice6:amd64 (2:1.0.10-0ubuntu1) ...
#6 65.68 Selecting previously unselected package libsm6:amd64.
#6 65.69 Preparing to unpack .../081-libsm6_2%3a1.2.3-1_amd64.deb ...
#6 65.69 Unpacking libsm6:amd64 (2:1.2.3-1) ...
#6 65.82 Selecting previously unselected package libxt6:amd64.
#6 65.82 Preparing to unpack .../082-libxt6_1%3a1.1.5-1_amd64.deb ...
#6 65.83 Unpacking libxt6:amd64 (1:1.1.5-1) ...
#6 65.95 Selecting previously unselected package libxmu6:amd64.
#6 65.95 Preparing to unpack .../083-libxmu6_2%3a1.1.3-0ubuntu1_amd64.deb ...
#6 65.96 Unpacking libxmu6:amd64 (2:1.1.3-0ubuntu1) ...
#6 66.00 Selecting previously unselected package libxpm4:amd64.
#6 66.01 Preparing to unpack .../084-libxpm4_1%3a3.5.12-1_amd64.deb ...
#6 66.01 Unpacking libxpm4:amd64 (1:3.5.12-1) ...
#6 66.06 Selecting previously unselected package libxaw7:amd64.
#6 66.06 Preparing to unpack .../085-libxaw7_2%3a1.0.13-1_amd64.deb ...
#6 66.07 Unpacking libxaw7:amd64 (2:1.0.13-1) ...
#6 66.14 Selecting previously unselected package libxcb-shape0:amd64.
#6 66.14 Preparing to unpack .../086-libxcb-shape0_1.14-2_amd64.deb ...
#6 66.15 Unpacking libxcb-shape0:amd64 (1.14-2) ...
#6 66.20 Selecting previously unselected package libxcomposite1:amd64.
#6 66.20 Preparing to unpack .../087-libxcomposite1_1%3a0.4.5-1_amd64.deb ...
#6 66.21 Unpacking libxcomposite1:amd64 (1:0.4.5-1) ...
#6 66.26 Selecting previously unselected package libxft2:amd64.
#6 66.26 Preparing to unpack .../088-libxft2_2.3.3-0ubuntu1_amd64.deb ...
#6 66.27 Unpacking libxft2:amd64 (2.3.3-0ubuntu1) ...
#6 66.32 Selecting previously unselected package libxinerama1:amd64.
#6 66.32 Preparing to unpack .../089-libxinerama1_2%3a1.1.4-2_amd64.deb ...
#6 66.32 Unpacking libxinerama1:amd64 (2:1.1.4-2) ...
#6 66.36 Selecting previously unselected package libxkbfile1:amd64.
#6 66.37 Preparing to unpack .../090-libxkbfile1_1%3a1.1.0-1_amd64.deb ...
#6 66.37 Unpacking libxkbfile1:amd64 (1:1.1.0-1) ...
#6 66.42 Selecting previously unselected package libxrandr2:amd64.
#6 66.43 Preparing to unpack .../091-libxrandr2_2%3a1.5.2-0ubuntu1_amd64.deb ...
#6 66.43 Unpacking libxrandr2:amd64 (2:1.5.2-0ubuntu1) ...
#6 66.48 Selecting previously unselected package libxv1:amd64.
#6 66.49 Preparing to unpack .../092-libxv1_2%3a1.0.11-1_amd64.deb ...
#6 66.49 Unpacking libxv1:amd64 (2:1.0.11-1) ...
#6 66.54 Selecting previously unselected package libxxf86dga1:amd64.
#6 66.55 Preparing to unpack .../093-libxxf86dga1_2%3a1.1.5-0ubuntu1_amd64.deb ...
#6 66.55 Unpacking libxxf86dga1:amd64 (2:1.1.5-0ubuntu1) ...
#6 66.60 Selecting previously unselected package x11-utils.
#6 66.61 Preparing to unpack .../094-x11-utils_7.7+5_amd64.deb ...
#6 66.61 Unpacking x11-utils (7.7+5) ...
#6 66.68 Selecting previously unselected package libatk-wrapper-java.
#6 66.69 Preparing to unpack .../095-libatk-wrapper-java_0.37.1-1_all.deb ...
#6 66.69 Unpacking libatk-wrapper-java (0.37.1-1) ...
#6 66.74 Selecting previously unselected package libatk-wrapper-java-jni:amd64.
#6 66.74 Preparing to unpack .../096-libatk-wrapper-java-jni_0.37.1-1_amd64.deb ...
#6 66.74 Unpacking libatk-wrapper-java-jni:amd64 (0.37.1-1) ...
#6 66.79 Selecting previously unselected package xorg-sgml-doctools.
#6 66.80 Preparing to unpack .../097-xorg-sgml-doctools_1%3a1.11-1_all.deb ...
#6 66.80 Unpacking xorg-sgml-doctools (1:1.11-1) ...
#6 66.85 Selecting previously unselected package x11proto-dev.
#6 66.85 Preparing to unpack .../098-x11proto-dev_2019.2-1ubuntu1_all.deb ...
#6 66.85 Unpacking x11proto-dev (2019.2-1ubuntu1) ...
#6 66.97 Selecting previously unselected package x11proto-core-dev.
#6 66.97 Preparing to unpack .../099-x11proto-core-dev_2019.2-1ubuntu1_all.deb ...
#6 66.97 Unpacking x11proto-core-dev (2019.2-1ubuntu1) ...
#6 67.01 Selecting previously unselected package libice-dev:amd64.
#6 67.01 Preparing to unpack .../100-libice-dev_2%3a1.0.10-0ubuntu1_amd64.deb ...
#6 67.01 Unpacking libice-dev:amd64 (2:1.0.10-0ubuntu1) ...
#6 67.07 Selecting previously unselected package libltdl7:amd64.
#6 67.07 Preparing to unpack .../101-libltdl7_2.4.6-14_amd64.deb ...
#6 67.08 Unpacking libltdl7:amd64 (2.4.6-14) ...
#6 67.13 Selecting previously unselected package libltdl-dev:amd64.
#6 67.13 Preparing to unpack .../102-libltdl-dev_2.4.6-14_amd64.deb ...
#6 67.13 Unpacking libltdl-dev:amd64 (2.4.6-14) ...
#6 67.21 Selecting previously unselected package libpthread-stubs0-dev:amd64.
#6 67.22 Preparing to unpack .../103-libpthread-stubs0-dev_0.4-1_amd64.deb ...
#6 67.22 Unpacking libpthread-stubs0-dev:amd64 (0.4-1) ...
#6 67.27 Selecting previously unselected package libsm-dev:amd64.
#6 67.27 Preparing to unpack .../104-libsm-dev_2%3a1.2.3-1_amd64.deb ...
#6 67.28 Unpacking libsm-dev:amd64 (2:1.2.3-1) ...
#6 67.32 Selecting previously unselected package libtool.
#6 67.32 Preparing to unpack .../105-libtool_2.4.6-14_all.deb ...
#6 67.33 Unpacking libtool (2.4.6-14) ...
#6 67.39 Selecting previously unselected package libtool-bin.
#6 67.40 Preparing to unpack .../106-libtool-bin_2.4.6-14_amd64.deb ...
#6 67.40 Unpacking libtool-bin (2.4.6-14) ...
#6 67.45 Selecting previously unselected package libwayland-client0:amd64.
#6 67.45 Preparing to unpack .../107-libwayland-client0_1.18.0-1_amd64.deb ...
#6 67.46 Unpacking libwayland-client0:amd64 (1.18.0-1) ...
#6 67.50 Selecting previously unselected package libxau-dev:amd64.
#6 67.50 Preparing to unpack .../108-libxau-dev_1%3a1.0.9-0ubuntu1_amd64.deb ...
#6 67.50 Unpacking libxau-dev:amd64 (1:1.0.9-0ubuntu1) ...
#6 67.54 Selecting previously unselected package libxdmcp-dev:amd64.
#6 67.54 Preparing to unpack .../109-libxdmcp-dev_1%3a1.1.3-0ubuntu1_amd64.deb ...
#6 67.55 Unpacking libxdmcp-dev:amd64 (1:1.1.3-0ubuntu1) ...
#6 67.86 Selecting previously unselected package xtrans-dev.
#6 67.87 Preparing to unpack .../110-xtrans-dev_1.4.0-1_all.deb ...
#6 67.94 Unpacking xtrans-dev (1.4.0-1) ...
#6 68.48 Selecting previously unselected package libxcb1-dev:amd64.
#6 68.49 Preparing to unpack .../111-libxcb1-dev_1.14-2_amd64.deb ...
#6 68.62 Unpacking libxcb1-dev:amd64 (1.14-2) ...
#6 69.46 Selecting previously unselected package libx11-dev:amd64.
#6 69.46 Preparing to unpack .../112-libx11-dev_2%3a1.6.9-2ubuntu1.2_amd64.deb ...
#6 69.59 Unpacking libx11-dev:amd64 (2:1.6.9-2ubuntu1.2) ...
#6 69.87 Selecting previously unselected package libxcb-randr0:amd64.
#6 69.87 Preparing to unpack .../113-libxcb-randr0_1.14-2_amd64.deb ...
#6 69.87 Unpacking libxcb-randr0:amd64 (1.14-2) ...
#6 69.91 Selecting previously unselected package libxt-dev:amd64.
#6 69.91 Preparing to unpack .../114-libxt-dev_1%3a1.1.5-1_amd64.deb ...
#6 69.92 Unpacking libxt-dev:amd64 (1:1.1.5-1) ...
#6 70.02 Selecting previously unselected package mesa-vulkan-drivers:amd64.
#6 70.02 Preparing to unpack .../115-mesa-vulkan-drivers_21.2.6-0ubuntu0.1~20.04.1_amd64.deb ...
#6 70.03 Unpacking mesa-vulkan-drivers:amd64 (21.2.6-0ubuntu0.1~20.04.1) ...
#6 71.33 Selecting previously unselected package pkg-config.
#6 71.33 Preparing to unpack .../116-pkg-config_0.29.1-0ubuntu4_amd64.deb ...
#6 71.35 Unpacking pkg-config (0.29.1-0ubuntu4) ...
#6 71.48 Setting up libgraphite2-3:amd64 (1.3.13-11build1) ...
#6 71.55 Setting up libxcb-dri3-0:amd64 (1.14-2) ...
#6 71.59 Setting up liblcms2-2:amd64 (2.9-4) ...
#6 71.66 Setting up libx11-xcb1:amd64 (2:1.6.9-2ubuntu1.2) ...
#6 71.71 Setting up libpciaccess0:amd64 (0.16-0ubuntu1) ...
#6 71.77 Setting up libxcb-xfixes0:amd64 (1.14-2) ...
#6 71.83 Setting up libxpm4:amd64 (1:3.5.12-1) ...
#6 71.88 Setting up libxi6:amd64 (2:1.7.10-0ubuntu1) ...
#6 71.93 Setting up java-common (0.72) ...
#6 71.98 Setting up libxrender1:amd64 (1:0.9.10-1) ...
#6 72.03 Setting up alsa-ucm-conf (1.2.2-1ubuntu0.11) ...
#6 72.08 Setting up libglvnd0:amd64 (1.3.2-1~ubuntu0.20.04.1) ...
#6 72.13 Setting up libxcb-glx0:amd64 (1.14-2) ...
#6 72.16 Setting up libxcb-shape0:amd64 (1.14-2) ...
#6 72.19 Setting up x11-common (1:7.7+19ubuntu14) ...
#6 72.48 update-rc.d: warning: start and stop actions are no longer supported; falling back to defaults
#6 72.50 invoke-rc.d: could not determine current runlevel
#6 72.51 invoke-rc.d: policy-rc.d denied execution of start.
#6 72.54 Setting up libsensors-config (1:3.6.0-2ubuntu1) ...
#6 72.71 Setting up libxxf86dga1:amd64 (2:1.1.5-0ubuntu1) ...
#6 72.76 Setting up gettext-base (0.19.8.1-10build1) ...
#6 72.80 Setting up libxcb-shm0:amd64 (1.14-2) ...
#6 72.88 Setting up libatspi2.0-0:amd64 (2.36.0-2) ...
#6 72.94 Setting up libpthread-stubs0-dev:amd64 (0.4-1) ...
#6 73.05 Setting up libxxf86vm1:amd64 (1:1.1.4-1build1) ...
#6 73.09 Setting up libxcb-present0:amd64 (1.14-2) ...
#6 73.13 Setting up libasound2-data (1.2.2-2.1ubuntu2.5) ...
#6 73.17 Setting up xtrans-dev (1.4.0-1) ...
#6 73.21 Setting up libfontenc1:amd64 (1:1.1.4-0ubuntu1) ...
#6 73.26 Setting up autotools-dev (20180224.1) ...
#6 73.32 Setting up libnspr4:amd64 (2:4.25-1) ...
#6 73.38 Setting up libxfixes3:amd64 (1:5.0.3-2) ...
#6 73.43 Setting up libxcb-sync1:amd64 (1.14-2) ...
#6 73.48 Setting up libavahi-common-data:amd64 (0.7-4ubuntu7.1) ...
#6 73.54 Setting up libllvm12:amd64 (1:12.0.0-3ubuntu1~20.04.4) ...
#6 73.59 Setting up libsigsegv2:amd64 (2.12-2) ...
#6 73.65 Setting up libxinerama1:amd64 (2:1.1.4-2) ...
#6 73.72 Setting up libxv1:amd64 (2:1.0.11-1) ...
#6 73.77 Setting up libpng16-16:amd64 (1.6.37-2) ...
#6 73.79 Setting up libxrandr2:amd64 (2:1.5.2-0ubuntu1) ...
#6 73.81 Setting up libcroco3:amd64 (0.6.13-1) ...
#6 73.84 Setting up sudo (1.8.31-1ubuntu1.2) ...
#6 73.94 Setting up pkg-config (0.29.1-0ubuntu4) ...
#6 74.06 Setting up fonts-dejavu-core (2.37-1) ...
#6 74.32 Setting up libpcsclite1:amd64 (1.8.26-3) ...
#6 74.37 Setting up libsensors5:amd64 (1:3.6.0-2ubuntu1) ...
#6 74.42 Setting up libjpeg-turbo8:amd64 (2.0.3-0ubuntu1.20.04.1) ...
#6 74.44 Setting up libltdl7:amd64 (2.4.6-14) ...
#6 74.45 Setting up libglapi-mesa:amd64 (21.2.6-0ubuntu0.1~20.04.1) ...
#6 74.47 Setting up libvulkan1:amd64 (1.2.131.2-1) ...
#6 74.49 Setting up libxcb-dri2-0:amd64 (1.14-2) ...
#6 74.50 Setting up libgif7:amd64 (5.1.9-1) ...
#6 74.52 Setting up libatk1.0-data (2.35.1-1ubuntu2) ...
#6 74.53 Setting up fonts-dejavu-extra (2.37-1) ...
#6 74.54 Setting up alsa-topology-conf (1.2.2-1) ...
#6 74.55 Setting up libxshmfence1:amd64 (1.3-1) ...
#6 74.56 Setting up libxcb-randr0:amd64 (1.14-2) ...
#6 74.57 Setting up libasound2:amd64 (1.2.2-2.1ubuntu2.5) ...
#6 74.59 Setting up xorg-sgml-doctools (1:1.11-1) ...
#6 74.60 Setting up libatk1.0-0:amd64 (2.35.1-1ubuntu2) ...
#6 74.62 Setting up libxkbfile1:amd64 (1:1.1.0-1) ...
#6 74.64 Setting up libdrm-common (2.4.107-8ubuntu1~20.04.1) ...
#6 74.65 Setting up libxcomposite1:amd64 (1:0.4.5-1) ...
#6 74.67 Setting up libwayland-client0:amd64 (1.18.0-1) ...
#6 74.69 Setting up libjpeg8:amd64 (8c-2ubuntu8) ...
#6 74.70 Setting up x11proto-dev (2019.2-1ubuntu1) ...
#6 74.72 Setting up libice6:amd64 (2:1.0.10-0ubuntu1) ...
#6 74.73 Setting up gettext (0.19.8.1-10build1) ...
#6 74.75 Setting up libxau-dev:amd64 (1:1.0.9-0ubuntu1) ...
#6 74.76 Setting up libice-dev:amd64 (2:1.0.10-0ubuntu1) ...
#6 74.77 Setting up libtool (2.4.6-14) ...
#6 74.78 Setting up fontconfig-config (2.13.1-2ubuntu3) ...
#6 75.04 Setting up libxtst6:amd64 (2:1.2.3-1) ...
#6 75.06 Setting up libavahi-common3:amd64 (0.7-4ubuntu7.1) ...
#6 75.08 Setting up m4 (1.4.18-4) ...
#6 75.09 Setting up libnss3:amd64 (2:3.49.1-1ubuntu1.6) ...
#6 75.11 Setting up libatk-bridge2.0-0:amd64 (2.34.2-0ubuntu2~20.04.1) ...
#6 75.12 Setting up libxdmcp-dev:amd64 (1:1.1.3-0ubuntu1) ...
#6 75.14 Setting up libfreetype6:amd64 (2.10.1-2ubuntu0.1) ...
#6 75.16 Setting up x11proto-core-dev (2019.2-1ubuntu1) ...
#6 75.17 Setting up autoconf (2.69-11.1) ...
#6 75.19 Setting up libdrm2:amd64 (2.4.107-8ubuntu1~20.04.1) ...
#6 75.21 Setting up at-spi2-core (2.36.0-2) ...
#6 75.24 Setting up libharfbuzz0b:amd64 (2.6.4-1ubuntu4) ...
#6 75.26 Setting up libfontconfig1:amd64 (2.13.1-2ubuntu3) ...
#6 75.28 Setting up libsm6:amd64 (2:1.2.3-1) ...
#6 75.29 Setting up libavahi-client3:amd64 (0.7-4ubuntu7.1) ...
#6 75.31 Setting up libdrm-amdgpu1:amd64 (2.4.107-8ubuntu1~20.04.1) ...
#6 75.32 Setting up automake (1:1.16.1-4ubuntu6) ...
#6 75.34 update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
#6 75.34 update-alternatives: warning: skip creation of /usr/share/man/man1/automake.1.gz because associated file /usr/share/man/man1/automake-1.16.1.gz (of link group automake) doesn't exist
#6 75.34 update-alternatives: warning: skip creation of /usr/share/man/man1/aclocal.1.gz because associated file /usr/share/man/man1/aclocal-1.16.1.gz (of link group automake) doesn't exist
#6 75.35 Setting up mesa-vulkan-drivers:amd64 (21.2.6-0ubuntu0.1~20.04.1) ...
#6 75.37 Setting up libtool-bin (2.4.6-14) ...
#6 75.38 Setting up libxft2:amd64 (2.3.3-0ubuntu1) ...
#6 75.39 Setting up libdrm-nouveau2:amd64 (2.4.107-8ubuntu1~20.04.1) ...
#6 75.40 Setting up libxcb1-dev:amd64 (1.14-2) ...
#6 75.41 Setting up libsm-dev:amd64 (2:1.2.3-1) ...
#6 75.42 Setting up libdrm-radeon1:amd64 (2.4.107-8ubuntu1~20.04.1) ...
#6 75.43 Setting up libdrm-intel1:amd64 (2.4.107-8ubuntu1~20.04.1) ...
#6 75.44 Setting up libgl1-mesa-dri:amd64 (21.2.6-0ubuntu0.1~20.04.1) ...
#6 75.46 Setting up libx11-dev:amd64 (2:1.6.9-2ubuntu1.2) ...
#6 75.48 Setting up libltdl-dev:amd64 (2.4.6-14) ...
#6 75.50 Setting up libxt6:amd64 (1:1.1.5-1) ...
#6 75.51 Setting up libcups2:amd64 (2.3.1-9ubuntu1.1) ...
#6 75.52 Setting up libxmu6:amd64 (2:1.1.3-0ubuntu1) ...
#6 75.53 Setting up libglx-mesa0:amd64 (21.2.6-0ubuntu0.1~20.04.1) ...
#6 75.54 Setting up libglx0:amd64 (1.3.2-1~ubuntu0.20.04.1) ...
#6 75.55 Setting up libxaw7:amd64 (2:1.0.13-1) ...
#6 75.58 Setting up libgl1:amd64 (1.3.2-1~ubuntu0.20.04.1) ...
#6 75.59 Setting up libxt-dev:amd64 (1:1.1.5-1) ...
#6 75.61 Setting up x11-utils (7.7+5) ...
#6 75.67 Setting up libatk-wrapper-java (0.37.1-1) ...
#6 75.69 Setting up libatk-wrapper-java-jni:amd64 (0.37.1-1) ...
#6 75.70 Setting up default-jre-headless (2:1.11-72) ...
#6 75.72 Setting up openjdk-11-jre-headless:amd64 (11.0.13+8-0ubuntu1~20.04) ...
#6 75.86 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/java to provide /usr/bin/java (java) in auto mode
#6 75.86 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jjs to provide /usr/bin/jjs (jjs) in auto mode
#6 75.87 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/keytool to provide /usr/bin/keytool (keytool) in auto mode
#6 75.87 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/rmid to provide /usr/bin/rmid (rmid) in auto mode
#6 75.88 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/rmiregistry to provide /usr/bin/rmiregistry (rmiregistry) in auto mode
#6 75.89 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/pack200 to provide /usr/bin/pack200 (pack200) in auto mode
#6 75.89 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/unpack200 to provide /usr/bin/unpack200 (unpack200) in auto mode
#6 75.90 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/lib/jexec to provide /usr/bin/jexec (jexec) in auto mode
#6 76.59 Setting up openjdk-11-jre:amd64 (11.0.13+8-0ubuntu1~20.04) ...
#6 76.62 Setting up openjdk-11-jdk-headless:amd64 (11.0.13+8-0ubuntu1~20.04) ...
#6 76.65 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jar to provide /usr/bin/jar (jar) in auto mode
#6 76.66 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jarsigner to provide /usr/bin/jarsigner (jarsigner) in auto mode
#6 76.67 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/javac to provide /usr/bin/javac (javac) in auto mode
#6 76.69 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/javadoc to provide /usr/bin/javadoc (javadoc) in auto mode
#6 76.70 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/javap to provide /usr/bin/javap (javap) in auto mode
#6 76.72 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jcmd to provide /usr/bin/jcmd (jcmd) in auto mode
#6 76.73 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jdb to provide /usr/bin/jdb (jdb) in auto mode
#6 76.75 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jdeprscan to provide /usr/bin/jdeprscan (jdeprscan) in auto mode
#6 76.76 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jdeps to provide /usr/bin/jdeps (jdeps) in auto mode
#6 76.78 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jfr to provide /usr/bin/jfr (jfr) in auto mode
#6 76.79 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jimage to provide /usr/bin/jimage (jimage) in auto mode
#6 76.80 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jinfo to provide /usr/bin/jinfo (jinfo) in auto mode
#6 76.82 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jlink to provide /usr/bin/jlink (jlink) in auto mode
#6 76.83 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jmap to provide /usr/bin/jmap (jmap) in auto mode
#6 76.84 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jmod to provide /usr/bin/jmod (jmod) in auto mode
#6 76.86 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jps to provide /usr/bin/jps (jps) in auto mode
#6 76.87 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jrunscript to provide /usr/bin/jrunscript (jrunscript) in auto mode
#6 76.88 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jshell to provide /usr/bin/jshell (jshell) in auto mode
#6 76.90 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jstack to provide /usr/bin/jstack (jstack) in auto mode
#6 76.91 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jstat to provide /usr/bin/jstat (jstat) in auto mode
#6 76.93 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jstatd to provide /usr/bin/jstatd (jstatd) in auto mode
#6 76.94 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/rmic to provide /usr/bin/rmic (rmic) in auto mode
#6 76.95 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/serialver to provide /usr/bin/serialver (serialver) in auto mode
#6 76.96 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jaotc to provide /usr/bin/jaotc (jaotc) in auto mode
#6 76.98 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jhsdb to provide /usr/bin/jhsdb (jhsdb) in auto mode
#6 77.00 Setting up default-jre (2:1.11-72) ...
#6 77.02 Setting up default-jdk-headless (2:1.11-72) ...
#6 77.03 Setting up openjdk-11-jdk:amd64 (11.0.13+8-0ubuntu1~20.04) ...
#6 77.06 update-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jconsole to provide /usr/bin/jconsole (jconsole) in auto mode
#6 77.09 Setting up ca-certificates-java (20190405ubuntu1) ...
#6 77.21 head: cannot open '/etc/ssl/certs/java/cacerts' for reading: No such file or directory
#6 77.59 Adding debian:Trustwave_Global_ECC_P384_Certification_Authority.pem
#6 77.59 Adding debian:DigiCert_Assured_ID_Root_G3.pem
#6 77.60 Adding debian:Hongkong_Post_Root_CA_3.pem
#6 77.61 Adding debian:Entrust_Root_Certification_Authority_-_G4.pem
#6 77.61 Adding debian:SecureSign_RootCA11.pem
#6 77.61 Adding debian:IdenTrust_Commercial_Root_CA_1.pem
#6 77.62 Adding debian:SSL.com_EV_Root_Certification_Authority_RSA_R2.pem
#6 77.63 Adding debian:AC_RAIZ_FNMT-RCM.pem
#6 77.63 Adding debian:Entrust.net_Premium_2048_Secure_Server_CA.pem
#6 77.64 Adding debian:Starfield_Class_2_CA.pem
#6 77.64 Adding debian:SSL.com_EV_Root_Certification_Authority_ECC.pem
#6 77.64 Adding debian:GTS_Root_R3.pem
#6 77.65 Adding debian:Sonera_Class_2_Root_CA.pem
#6 77.65 Adding debian:GTS_Root_R4.pem
#6 77.65 Adding debian:DigiCert_Trusted_Root_G4.pem
#6 77.66 Adding debian:DigiCert_Assured_ID_Root_CA.pem
#6 77.67 Adding debian:IdenTrust_Public_Sector_Root_CA_1.pem
#6 77.67 Adding debian:SecureTrust_CA.pem
#6 77.67 Adding debian:COMODO_ECC_Certification_Authority.pem
#6 77.68 Adding debian:Certum_Trusted_Network_CA_2.pem
#6 77.68 Adding debian:DigiCert_Assured_ID_Root_G2.pem
#6 77.69 Adding debian:DigiCert_Global_Root_CA.pem
#6 77.69 Adding debian:Entrust_Root_Certification_Authority_-_G2.pem
#6 77.70 Adding debian:Buypass_Class_3_Root_CA.pem
#6 77.70 Adding debian:Amazon_Root_CA_2.pem
#6 77.71 Adding debian:QuoVadis_Root_CA_3.pem
#6 77.71 Adding debian:USERTrust_ECC_Certification_Authority.pem
#6 77.71 Adding debian:Autoridad_de_Certificacion_Firmaprofesional_CIF_A62634068.pem
#6 77.72 Adding debian:QuoVadis_Root_CA_1_G3.pem
#6 77.72 Adding debian:D-TRUST_Root_Class_3_CA_2_2009.pem
#6 77.72 Adding debian:DigiCert_Global_Root_G2.pem
#6 77.73 Adding debian:QuoVadis_Root_CA_2.pem
#6 77.73 Adding debian:AffirmTrust_Premium.pem
#6 77.74 Adding debian:COMODO_Certification_Authority.pem
#6 77.74 Adding debian:certSIGN_Root_CA_G2.pem
#6 77.75 Adding debian:Hellenic_Academic_and_Research_Institutions_RootCA_2011.pem
#6 77.76 Adding debian:TrustCor_RootCert_CA-2.pem
#6 77.76 Adding debian:GTS_Root_R2.pem
#6 77.76 Adding debian:Security_Communication_RootCA2.pem
#6 77.77 Adding debian:CA_Disig_Root_R2.pem
#6 77.77 Adding debian:AffirmTrust_Premium_ECC.pem
#6 77.77 Adding debian:SSL.com_Root_Certification_Authority_ECC.pem
#6 77.78 Adding debian:Trustwave_Global_Certification_Authority.pem
#6 77.78 Adding debian:E-Tugra_Certification_Authority.pem
#6 77.78 Adding debian:emSign_Root_CA_-_C1.pem
#6 77.79 Adding debian:NetLock_Arany_=Class_Gold=_Főtanúsítvány.pem
#6 77.79 Adding debian:Microsoft_ECC_Root_Certificate_Authority_2017.pem
#6 77.79 Adding debian:Go_Daddy_Root_Certificate_Authority_-_G2.pem
#6 77.80 Adding debian:SSL.com_Root_Certification_Authority_RSA.pem
#6 77.80 Adding debian:GTS_Root_R1.pem
#6 77.81 Adding debian:TeliaSonera_Root_CA_v1.pem
#6 77.81 Adding debian:emSign_Root_CA_-_G1.pem
#6 77.81 Adding debian:OISTE_WISeKey_Global_Root_GC_CA.pem
#6 77.81 Adding debian:GeoTrust_Primary_Certification_Authority_-_G2.pem
#6 77.82 Adding debian:ePKI_Root_Certification_Authority.pem
#6 77.82 Adding debian:XRamp_Global_CA_Root.pem
#6 77.82 Adding debian:Entrust_Root_Certification_Authority_-_EC1.pem
#6 77.83 Adding debian:Secure_Global_CA.pem
#6 77.83 Adding debian:Starfield_Services_Root_Certificate_Authority_-_G2.pem
#6 77.83 Adding debian:GlobalSign_ECC_Root_CA_-_R4.pem
#6 77.83 Adding debian:Baltimore_CyberTrust_Root.pem
#6 77.84 Adding debian:Network_Solutions_Certificate_Authority.pem
#6 77.84 Adding debian:Staat_der_Nederlanden_Root_CA_-_G3.pem
#6 77.84 Adding debian:ISRG_Root_X1.pem
#6 77.85 Adding debian:EC-ACC.pem
#6 77.85 Adding debian:Actalis_Authentication_Root_CA.pem
#6 77.86 Adding debian:Global_Chambersign_Root_-_2008.pem
#6 77.86 Adding debian:Certum_Trusted_Network_CA.pem
#6 77.86 Adding debian:Amazon_Root_CA_4.pem
#6 77.86 Adding debian:Trustwave_Global_ECC_P256_Certification_Authority.pem
#6 77.87 Adding debian:DigiCert_High_Assurance_EV_Root_CA.pem
#6 77.87 Adding debian:Hellenic_Academic_and_Research_Institutions_ECC_RootCA_2015.pem
#6 77.87 Adding debian:TWCA_Root_Certification_Authority.pem
#6 77.87 Adding debian:certSIGN_ROOT_CA.pem
#6 77.88 Adding debian:Go_Daddy_Class_2_CA.pem
#6 77.88 Adding debian:GlobalSign_Root_CA_-_R3.pem
#6 77.88 Adding debian:e-Szigno_Root_CA_2017.pem
#6 77.89 Adding debian:UCA_Global_G2_Root.pem
#6 77.89 Adding debian:QuoVadis_Root_CA_3_G3.pem
#6 77.89 Adding debian:emSign_ECC_Root_CA_-_G3.pem
#6 77.89 Adding debian:GlobalSign_ECC_Root_CA_-_R5.pem
#6 77.90 Adding debian:GlobalSign_Root_CA_-_R6.pem
#6 77.90 Adding debian:Amazon_Root_CA_1.pem
#6 77.90 Adding debian:Certigna_Root_CA.pem
#6 77.91 Adding debian:Buypass_Class_2_Root_CA.pem
#6 77.91 Adding debian:SwissSign_Silver_CA_-_G2.pem
#6 77.91 Adding debian:Starfield_Root_Certificate_Authority_-_G2.pem
#6 77.92 Adding debian:TUBITAK_Kamu_SM_SSL_Kok_Sertifikasi_-_Surum_1.pem
#6 77.92 Adding debian:GlobalSign_Root_CA_-_R2.pem
#6 77.92 Adding debian:Security_Communication_Root_CA.pem
#6 77.93 Adding debian:Microsec_e-Szigno_Root_CA_2009.pem
#6 77.93 Adding debian:Certigna.pem
#6 77.93 Adding debian:Atos_TrustedRoot_2011.pem
#6 77.94 Adding debian:GDCA_TrustAUTH_R5_ROOT.pem
#6 77.94 Adding debian:GlobalSign_Root_CA.pem
#6 77.94 Adding debian:AffirmTrust_Commercial.pem
#6 77.95 Adding debian:ACCVRAIZ1.pem
#6 77.95 Adding debian:QuoVadis_Root_CA.pem
#6 77.96 Adding debian:TrustCor_ECA-1.pem
#6 77.96 Adding debian:QuoVadis_Root_CA_2_G3.pem
#6 77.96 Adding debian:NAVER_Global_Root_Certification_Authority.pem
#6 77.97 Adding debian:VeriSign_Universal_Root_Certification_Authority.pem
#6 77.97 Adding debian:emSign_ECC_Root_CA_-_C3.pem
#6 77.97 Adding debian:Entrust_Root_Certification_Authority.pem
#6 77.98 Adding debian:T-TeleSec_GlobalRoot_Class_3.pem
#6 77.98 Adding debian:USERTrust_RSA_Certification_Authority.pem
#6 77.98 Adding debian:CFCA_EV_ROOT.pem
#6 77.99 Adding debian:Izenpe.com.pem
#6 77.99 Adding debian:Chambers_of_Commerce_Root_-_2008.pem
#6 78.00 Adding debian:Comodo_AAA_Services_root.pem
#6 78.00 Adding debian:SZAFIR_ROOT_CA2.pem
#6 78.01 Adding debian:D-TRUST_Root_Class_3_CA_2_EV_2009.pem
#6 78.01 Adding debian:Trustis_FPS_Root_CA.pem
#6 78.01 Adding debian:TWCA_Global_Root_CA.pem
#6 78.02 Adding debian:Staat_der_Nederlanden_EV_Root_CA.pem
#6 78.02 Adding debian:Hongkong_Post_Root_CA_1.pem
#6 78.02 Adding debian:DigiCert_Global_Root_G3.pem
#6 78.02 Adding debian:T-TeleSec_GlobalRoot_Class_2.pem
#6 78.02 Adding debian:OISTE_WISeKey_Global_Root_GB_CA.pem
#6 78.03 Adding debian:UCA_Extended_Validation_Root.pem
#6 78.03 Adding debian:COMODO_RSA_Certification_Authority.pem
#6 78.04 Adding debian:Cybertrust_Global_Root.pem
#6 78.04 Adding debian:Amazon_Root_CA_3.pem
#6 78.04 Adding debian:SwissSign_Gold_CA_-_G2.pem
#6 78.04 Adding debian:AffirmTrust_Networking.pem
#6 78.05 Adding debian:TrustCor_RootCert_CA-1.pem
#6 78.05 Adding debian:Microsoft_RSA_Root_Certificate_Authority_2017.pem
#6 78.05 Adding debian:Hellenic_Academic_and_Research_Institutions_RootCA_2015.pem
#6 78.11 done.
#6 78.14 Setting up default-jdk (2:1.11-72) ...
#6 78.19 Processing triggers for systemd (245.4-4ubuntu3.15) ...
#6 78.22 Processing triggers for ca-certificates (20210119~20.04.2) ...
#6 78.26 Updating certificates in /etc/ssl/certs...
#6 78.97 0 added, 0 removed; done.
#6 78.97 Running hooks in /etc/ca-certificates/update.d...
#6 78.98 
#6 79.37 done.
#6 79.37 done.
#6 79.40 Processing triggers for mime-support (3.64ubuntu1) ...
#6 79.45 Processing triggers for libc-bin (2.31-0ubuntu9.2) ...
#6 DONE 80.7s

#7 [3/9] RUN git clone --depth 1 https://github.com/xiph/flac.git
#7 sha256:359862a237d7e5fc5283b1521fe5245908e748b207c0caa638d9b5ed0d77d0be
#7 0.569 Cloning into 'flac'...
#7 DONE 2.2s

#8 [4/9] RUN git clone --depth 1 https://github.com/xiph/ogg.git
#8 sha256:39fa53f99d0c1fa4e7eb5f2e955aa6eefe27ccaa896e814503b739f3a5ed88d7
#8 1.019 Cloning into 'ogg'...
#8 DONE 2.7s

#9 [5/9] RUN git clone --depth 1 https://github.com/google/ExoPlayer.git
#9 sha256:fe43932883b911d6c3fcc97b1bd5617778deb339b432e9e0c51805e5c532a761
#9 0.554 Cloning into 'ExoPlayer'...
#9 DONE 9.5s

#10 [6/9] RUN git clone --depth 1 https://github.com/guidovranken/fuzzing-headers.git
#10 sha256:cd92431e177a633f2f99b96c6fca30da54fa784f62706be73a7b3b8ccda74924
#10 0.472 Cloning into 'fuzzing-headers'...
#10 DONE 1.5s

#11 [7/9] RUN git clone --depth 1 https://github.com/guidovranken/flac-fuzzers.git
#11 sha256:00d413c4f967ed0ffc9191dfb7db2b29053da1facd6b3d81ff6bb660dbc4173b
#11 0.513 Cloning into 'flac-fuzzers'...
#11 DONE 1.3s

#13 [8/9] COPY fuzzer_exo.cpp /src/flac-fuzzers
#13 sha256:9711290b42ef2b12274e4244e4204d99dee0eb26e3edbc51c758c8ce9bbf25ba
#13 DONE 0.3s

#14 [9/9] COPY build.sh /src/
#14 sha256:be1d4e271dd350f049215e4e1c733dc8b54ad151124f80c689fb32859d983eb6
#14 DONE 0.3s

#15 exporting to image
#15 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#15 exporting layers done
#15 writing image sha256:00b8a7fcff99df16f9078f3c06affd9e13a8d28d7edda5a950b578d089ef7111
#15 writing image sha256:00b8a7fcff99df16f9078f3c06affd9e13a8d28d7edda5a950b578d089ef7111 done
#15 naming to gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo done
#15 DONE 0.2s

#16 exporting cache
#16 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#16 preparing build cache for export done
#16 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:0c5310c5d064bcd03d1b04258f927c2179f542400a9dddf8fd965b7850e5af61
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:a27c14140006637ae6c8cd60dd089391b0161bbafb939131b698a2ebd2d9ae7d
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo:latest
#3 sha256:75851e499ee75ab0c843bda8ada84e920846da943fe81e9e508b8b4131a58852
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo
#5 sha256:90673f88336bbc1921494a0e989d3a05f86833fb50693e01e204a48f3faaa2a5
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate
#4 sha256:236679cb9d9e071be2329edd700fc5970b426d1521f4cecaed39bcffe88c4d18
#4 ERROR: gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo
#5 sha256:90673f88336bbc1921494a0e989d3a05f86833fb50693e01e204a48f3faaa2a5
#5 DONE 2.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:07c39a69203b6eeb52ba4c79eb515491df80c6877733b5daac806584e4f85a25
#6 0.470 Cloning into '/afl'...
#6 1.199 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.199 
#6 1.199 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.199 changes and commit them, and you can discard any commits you make in this
#6 1.199 state without impacting any branches by switching back to a branch.
#6 1.199 
#6 1.199 If you want to create a new branch to retain commits you create, you may
#6 1.199 do so (now or later) by using -c with the switch command. Example:
#6 1.199 
#6 1.199   git switch -c <new-branch-name>
#6 1.199 
#6 1.199 Or undo this operation with:
#6 1.199 
#6 1.199   git switch -
#6 1.199 
#6 1.199 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.199 
#6 1.199 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.275 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.275 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.487 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.500 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.892 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.209 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.641 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.785 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.183 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.420 ln -sf afl-as as
#6 5.422 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.425 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.426 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.1s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:2806afed7fd6e4d15ae611dde90a37ad06ee457e240feb73e87f2e34fd8a9824
#7 0.819 Hit:1 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 0.819 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.819 Hit:3 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.836 Hit:4 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.858 Hit:5 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 1.717 Reading package lists...
#7 3.208 Reading package lists...
#7 4.614 Building dependency tree...
#7 4.825 Reading state information...
#7 5.072 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.072 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 5.084 --2022-02-16 14:42:10--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.087 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.109.133, 185.199.110.133, 185.199.111.133, ...
#7 5.088 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.109.133|:443... connected.
#7 5.116 HTTP request sent, awaiting response... 200 OK
#7 5.298 Length: 9177 (9.0K) [text/plain]
#7 5.298 Saving to: '/afl/afl_driver.cpp'
#7 5.298 
#7 5.298      0K ........                                              100% 7.79M=0.001s
#7 5.299 
#7 5.299 2022-02-16 14:42:10 (7.79 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.299 
#7 7.086 ar: creating /libAFL.a
#7 DONE 8.7s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:3d07ac542f8d203c8d994e25f1028002ffe87e2dd05356d7fe78b021eb1aa5db done
#8 naming to gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:aabae1d4348409728db8d1291d6fbcb719905d061314ab6386fc216fb7999c8b
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:dd9d5cf55f9bd0bbdb867adc8e5a6953eb04731c3ca7ae53478f2587db6f0857
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:1acb8c72f3479c0df78b2e40c73b161304ca25313ec62d7f3b32be6114374b6e
#8 transferring context: 559B 0.1s done
#8 DONE 0.2s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:0b28c5f7b652e8a59f5569cb5e2dfb912ce152c5ed9265eb024fbed3523b3411
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:0ae68aa9ac369957dc84630f654a5d9b04b72e1db12d1c8098bce4bbc3a3b144
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:424feda1225f06c7bf6f3dc001ab9718d4578eabe39b5d85cd67f7df5361cc03
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:674bacfe6ee089649fb4a82c6954d6761e3ee5d24b3f13026deddc93caa5bb99
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:9d1e8afbcac5145b7f2a8a1f2bfbfe7541732c7b63d249c6eab89a68dc0f8cf6
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:f502783155643913adbac1e8ca63ab39e8aa6bde06420fd2f3c4e76d76d4a8a1
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate:latest
#3 sha256:65786f6db6a2c621e280d2502d33fa2ff2695d4b3e9de78d38de10034c4f2fc5
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:940a3f1e2c5f77d6d283901580fa844cfd4f0c0ec3d81ddff055f3c003720700
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate
#6 sha256:074800b24ebc8e3fa3f627e2d93118f682b8bad32b8b0e132c94655fdc5f71ab
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo
#5 sha256:56d3c0d9d52a62d251865c34d45bcc2bdc9b8031b30f17bbbbeb6d7fd9c0bcff
#5 ERROR: gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:940a3f1e2c5f77d6d283901580fa844cfd4f0c0ec3d81ddff055f3c003720700
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.2s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate
#6 sha256:074800b24ebc8e3fa3f627e2d93118f682b8bad32b8b0e132c94655fdc5f71ab
#6 DONE 0.5s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:06f8b4e46f269cc71b6828c8968ee529e7ce94107d90ee0323f2430c83790f88
#8 DONE 0.6s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:10bb0a3ca18f4d0d322ae7969514ed97d4b23c3c8a19a2ec4f246c0d0c495183
#9 DONE 16.8s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:527e5871f1898dc68f91f671505b9ac9fcb04ed7452b162a0d6c326ad4117613
#10 DONE 0.1s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:1aaf39dd1fc2e1332f6da1080f2d5cd5d80239e989daf5ca36d2240bca78a637
#11 DONE 26.2s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:524c7ebdddcf4d968c45d575eecfdd5c315d78009be625050aff07bb149cd298
#13 DONE 0.3s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:d5558ccba0ceb3a70810d5caca860cd4da28872d84454e255ffd2d0729554824
#14 DONE 0.9s

#15 [stage-1  8/13] COPY benchmarks/flac_fuzzer_exo/benchmark.yaml /
#15 sha256:10ae6f1391485557a7bfc1098de32a2fed7971f7c2da088f3acf3879eb634877
#15 DONE 0.3s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:cd531843d00045c4fd0dbf276715fd08979aabb86316915bbba825b769961453
#16 DONE 0.6s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:df2d68ba856aa502a8bf2db9d351d1c6b173932c8dbaeda4c3eb9a0afb7f89dd
#17 DONE 0.3s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:1bae55295e41854268357db691a951be33518058e0b0642938ea3575694709f7
#18 0.528 Checking out commit 84faf557
#18 1.154 error: pathspec '84faf557' did not match any file(s) known to git
#18 1.894 error: pathspec '84faf557' did not match any file(s) known to git
#18 19.75 From https://github.com/google/ExoPlayer
#18 19.75  * [new tag]             r1.0.10     -> r1.0.10
#18 19.75  * [new tag]             r1.0.11     -> r1.0.11
#18 19.75  * [new tag]             r1.0.12     -> r1.0.12
#18 19.75  * [new tag]             r2.0.0      -> r2.0.0
#18 19.75  * [new tag]             r2.0.1      -> r2.0.1
#18 19.75  * [new tag]             r2.0.2      -> r2.0.2
#18 19.75  * [new tag]             r2.0.3      -> r2.0.3
#18 19.75  * [new tag]             r2.0.4      -> r2.0.4
#18 19.75  * [new tag]             r2.0.4_docs -> r2.0.4_docs
#18 19.75  * [new tag]             r2.1.0      -> r2.1.0
#18 19.75  * [new tag]             r2.1.1      -> r2.1.1
#18 19.75  * [new tag]             r2.10.0     -> r2.10.0
#18 19.75  * [new tag]             r2.10.1     -> r2.10.1
#18 19.75  * [new tag]             r2.10.2     -> r2.10.2
#18 19.75  * [new tag]             r2.10.3     -> r2.10.3
#18 19.75  * [new tag]             r2.10.4     -> r2.10.4
#18 19.75  * [new tag]             r2.10.5     -> r2.10.5
#18 19.75  * [new tag]             r2.10.6     -> r2.10.6
#18 19.75  * [new tag]             r2.10.7     -> r2.10.7
#18 19.75  * [new tag]             r2.10.8     -> r2.10.8
#18 19.75  * [new tag]             r2.11.0     -> r2.11.0
#18 19.75  * [new tag]             r2.11.1     -> r2.11.1
#18 19.75  * [new tag]             r2.11.2     -> r2.11.2
#18 19.75  * [new tag]             r2.11.3     -> r2.11.3
#18 19.75  * [new tag]             r2.11.4     -> r2.11.4
#18 19.75  * [new tag]             r2.11.5     -> r2.11.5
#18 19.75  * [new tag]             r2.11.6     -> r2.11.6
#18 19.75  * [new tag]             r2.11.7     -> r2.11.7
#18 19.75  * [new tag]             r2.11.8     -> r2.11.8
#18 19.75  * [new tag]             r2.12.0     -> r2.12.0
#18 19.75  * [new tag]             r2.12.1     -> r2.12.1
#18 19.75  * [new tag]             r2.12.2     -> r2.12.2
#18 19.75  * [new tag]             r2.12.3     -> r2.12.3
#18 19.75  * [new tag]             r2.13.0     -> r2.13.0
#18 19.76  * [new tag]             r2.13.1     -> r2.13.1
#18 19.76  * [new tag]             r2.13.2     -> r2.13.2
#18 19.76  * [new tag]             r2.13.3     -> r2.13.3
#18 19.76  * [new tag]             r2.14.0     -> r2.14.0
#18 19.76  * [new tag]             r2.14.1     -> r2.14.1
#18 19.76  * [new tag]             r2.14.2     -> r2.14.2
#18 19.76  * [new tag]             r2.15.0     -> r2.15.0
#18 19.76  * [new tag]             r2.15.1     -> r2.15.1
#18 19.76  * [new tag]             r2.16.0     -> r2.16.0
#18 19.76  * [new tag]             r2.2.0      -> r2.2.0
#18 19.76  * [new tag]             r2.3.0      -> r2.3.0
#18 19.76  * [new tag]             r2.3.1      -> r2.3.1
#18 19.76  * [new tag]             r2.4.0      -> r2.4.0
#18 19.76  * [new tag]             r2.4.1      -> r2.4.1
#18 19.76  * [new tag]             r2.4.2      -> r2.4.2
#18 19.76  * [new tag]             r2.4.3      -> r2.4.3
#18 19.76  * [new tag]             r2.4.4      -> r2.4.4
#18 19.76  * [new tag]             r2.5.0      -> r2.5.0
#18 19.76  * [new tag]             r2.5.1      -> r2.5.1
#18 19.76  * [new tag]             r2.5.2      -> r2.5.2
#18 19.76  * [new tag]             r2.5.3      -> r2.5.3
#18 19.76  * [new tag]             r2.5.4      -> r2.5.4
#18 19.76  * [new tag]             r2.6.0      -> r2.6.0
#18 19.76  * [new tag]             r2.6.1      -> r2.6.1
#18 19.76  * [new tag]             r2.7.0      -> r2.7.0
#18 19.76  * [new tag]             r2.7.1      -> r2.7.1
#18 19.76  * [new tag]             r2.7.2      -> r2.7.2
#18 19.76  * [new tag]             r2.7.3      -> r2.7.3
#18 19.76  * [new tag]             r2.8.0      -> r2.8.0
#18 19.76  * [new tag]             r2.8.1      -> r2.8.1
#18 19.76  * [new tag]             r2.8.2      -> r2.8.2
#18 19.76  * [new tag]             r2.8.3      -> r2.8.3
#18 19.76  * [new tag]             r2.8.4      -> r2.8.4
#18 19.76  * [new tag]             r2.9.0      -> r2.9.0
#18 19.76  * [new tag]             r2.9.1      -> r2.9.1
#18 19.76  * [new tag]             r2.9.2      -> r2.9.2
#18 19.76  * [new tag]             r2.9.3      -> r2.9.3
#18 19.76  * [new tag]             r2.9.4      -> r2.9.4
#18 19.76  * [new tag]             r2.9.5      -> r2.9.5
#18 19.77  * [new tag]             r2.9.6      -> r2.9.6
#18 19.78 error: pathspec '84faf557' did not match any file(s) known to git
#18 21.52 From https://github.com/xiph/ogg
#18 21.52  * [new tag]         v1.1.1     -> v1.1.1
#18 21.52  * [new tag]         v1.1.2     -> v1.1.2
#18 21.52  * [new tag]         v1.1.3     -> v1.1.3
#18 21.52  * [new tag]         v1.1.4     -> v1.1.4
#18 21.52  * [new tag]         v1.2.0     -> v1.2.0
#18 21.52  * [new tag]         v1.2.1     -> v1.2.1
#18 21.52  * [new tag]         v1.2.2     -> v1.2.2
#18 21.52  * [new tag]         v1.3.0     -> v1.3.0
#18 21.52  * [new tag]         v1.3.1     -> v1.3.1
#18 21.52  * [new tag]         v1.3.2     -> v1.3.2
#18 21.53  * [new tag]         v1.3.3     -> v1.3.3
#18 21.53  * [new tag]         v1.3.4     -> v1.3.4
#18 21.53  * [new tag]         v1.3.5     -> v1.3.5
#18 21.53 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.62 From https://github.com/xiph/flac
#18 29.62  * [new tag]           1.2.0      -> 1.2.0
#18 29.62  * [new tag]           1.2.1      -> 1.2.1
#18 29.62  * [new tag]           1.3.0      -> 1.3.0
#18 29.62  * [new tag]           1.3.0pre1  -> 1.3.0pre1
#18 29.62  * [new tag]           1.3.0pre2  -> 1.3.0pre2
#18 29.62  * [new tag]           1.3.0pre4  -> 1.3.0pre4
#18 29.62  * [new tag]           1.3.1      -> 1.3.1
#18 29.62  * [new tag]           1.3.1pre1  -> 1.3.1pre1
#18 29.62  * [new tag]           1.3.2      -> 1.3.2
#18 29.63  * [new tag]           1.3.3      -> 1.3.3
#18 29.63 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.64 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.65 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.70 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.71 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.72 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.72 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.73 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.73 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.87 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.87 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.88 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.89 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.89 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.94 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.94 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.95 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.96 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.97 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.98 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.98 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.99 error: pathspec '84faf557' did not match any file(s) known to git
#18 29.99 error: pathspec '84faf557' did not match any file(s) known to git
#18 30.00 error: pathspec '84faf557' did not match any file(s) known to git
#18 30.01 error: pathspec '84faf557' did not match any file(s) known to git
#18 30.04 error: pathspec '84faf557' did not match any file(s) known to git
#18 30.16 Checkout unsuccessful.
#18 DONE 32.3s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:e6c1013750af2f5bc3acbdaf748d64189728628665dd744d1092ec3ca5d95d4e
#19 DONE 1.0s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:639a2598729a93e6170ea7d6cb30c4a0ccda7e7787e1eec501cc7c83271cda1d
#20 0.597 Run fuzzer_build to build the target
#20 0.714 FUZZ_TARGET = fuzzer_exo
#20 0.714 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.714 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.721 Building benchmark flac_fuzzer_exo with fuzzer afl
#20 0.725 + export ASAN_OPTIONS=detect_leaks=0
#20 0.725 + ASAN_OPTIONS=detect_leaks=0
#20 0.725 + [[ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard = *sanitize=address* ]]
#20 0.725 + [[ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard = *sanitize=memory* ]]
#20 0.725 + export 'CXXFLAGS=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -D_GLIBCXX_DEBUG'
#20 0.725 + CXXFLAGS='-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -D_GLIBCXX_DEBUG'
#20 0.725 + mkdir /src/libogg-install
#20 0.729 + cd /src/ogg
#20 0.729 + ./autogen.sh
#20 0.734 Updating build configuration files for libogg, please wait....
#20 5.265 libtoolize: putting auxiliary files in '.'.
#20 5.265 libtoolize: copying file './ltmain.sh'
#20 5.306 libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
#20 5.306 libtoolize: copying file 'm4/libtool.m4'
#20 5.342 libtoolize: copying file 'm4/ltoptions.m4'
#20 5.381 libtoolize: copying file 'm4/ltsugar.m4'
#20 5.419 libtoolize: copying file 'm4/ltversion.m4'
#20 5.457 libtoolize: copying file 'm4/lt~obsolete.m4'
#20 9.818 configure.ac:5: installing './compile'
#20 9.822 configure.ac:5: installing './config.guess'
#20 9.827 configure.ac:5: installing './config.sub'
#20 9.831 configure.ac:9: installing './install-sh'
#20 9.835 configure.ac:9: installing './missing'
#20 10.12 src/Makefile.am: installing './depcomp'
#20 10.19 + ./configure --prefix=/src/libogg-install
#20 10.45 checking build system type... x86_64-pc-linux-gnu
#20 10.57 checking host system type... x86_64-pc-linux-gnu
#20 10.57 checking how to print strings... printf
#20 10.63 checking for gcc... clang
#20 10.70 checking whether the C compiler works... yes
#20 10.84 checking for C compiler default output file name... a.out
#20 10.84 checking for suffix of executables... 
#20 10.96 checking whether we are cross compiling... no
#20 11.10 checking for suffix of object files... o
#20 11.13 checking whether we are using the GNU C compiler... yes
#20 11.16 checking whether clang accepts -g... yes
#20 11.18 checking for clang option to accept ISO C89... none needed
#20 11.23 checking whether clang understands -c and -o together... yes
#20 11.27 checking for a sed that does not truncate output... /usr/bin/sed
#20 11.27 checking for grep that handles long lines and -e... /usr/bin/grep
#20 11.28 checking for egrep... /usr/bin/grep -E
#20 11.28 checking for fgrep... /usr/bin/grep -F
#20 11.28 checking for ld used by clang... /usr/bin/ld
#20 11.30 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 11.31 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 11.32 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 11.35 checking whether ln -s works... yes
#20 11.35 checking the maximum length of command line arguments... 1572864
#20 11.36 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 11.36 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 11.36 checking for /usr/bin/ld option to reload object files... -r
#20 11.36 checking for objdump... objdump
#20 11.37 checking how to recognize dependent libraries... pass_all
#20 11.37 checking for dlltool... no
#20 11.37 checking how to associate runtime and link libraries... printf %s\n
#20 11.37 checking for ar... ar
#20 11.37 checking for archiver @FILE support... @
#20 11.42 checking for strip... strip
#20 11.42 checking for ranlib... ranlib
#20 11.42 checking for gawk... no
#20 11.42 checking for mawk... mawk
#20 11.42 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 11.61 checking for sysroot... no
#20 11.61 checking for a working dd... /usr/bin/dd
#20 11.62 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 11.70 checking for mt... no
#20 11.70 checking if : is a manifest tool... no
#20 11.71 checking how to run the C preprocessor... clang -E
#20 11.81 checking for ANSI C header files... yes
#20 12.06 checking for sys/types.h... yes
#20 12.11 checking for sys/stat.h... yes
#20 12.16 checking for stdlib.h... yes
#20 12.22 checking for string.h... yes
#20 12.28 checking for memory.h... yes
#20 12.35 checking for strings.h... yes
#20 12.41 checking for inttypes.h... yes
#20 12.48 checking for stdint.h... yes
#20 12.54 checking for unistd.h... yes
#20 12.60 checking for dlfcn.h... yes
#20 12.66 checking for objdir... .libs
#20 12.83 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 12.86 checking for clang option to produce PIC... -fPIC -DPIC
#20 12.86 checking if clang PIC flag -fPIC -DPIC works... yes
#20 12.89 checking if clang static flag -static works... yes
#20 13.14 checking if clang supports -c -o file.o... yes
#20 13.18 checking if clang supports -c -o file.o... (cached) yes
#20 13.18 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 13.21 checking whether -lc should be explicitly linked in... no
#20 13.27 checking dynamic linker characteristics... GNU/Linux ld.so
#20 13.45 checking how to hardcode library paths into programs... immediate
#20 13.45 checking whether stripping libraries is possible... yes
#20 13.46 checking if libtool supports shared libraries... yes
#20 13.46 checking whether to build shared libraries... yes
#20 13.46 checking whether to build static libraries... yes
#20 13.46 checking for a BSD-compatible install... /usr/bin/install -c
#20 13.48 checking whether build environment is sane... yes
#20 13.50 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 13.50 checking whether make sets $(MAKE)... yes
#20 13.52 checking whether make supports the include directive... yes (GNU style)
#20 13.53 checking whether make supports nested variables... yes
#20 13.54 checking dependency style of clang... gcc3
#20 13.60 checking whether to enable maintainer-specific portions of Makefiles... yes
#20 13.60 checking for gcc... (cached) clang
#20 13.67 checking whether we are using the GNU C compiler... (cached) yes
#20 13.67 checking whether clang accepts -g... (cached) yes
#20 13.67 checking for clang option to accept ISO C89... (cached) none needed
#20 13.67 checking whether clang understands -c and -o together... (cached) yes
#20 13.68 checking for ANSI C header files... (cached) yes
#20 13.68 checking for inttypes.h... (cached) yes
#20 13.68 checking for stdint.h... (cached) yes
#20 13.68 checking for sys/types.h... (cached) yes
#20 13.68 checking for an ANSI C-conforming const... yes
#20 13.73 checking size of int16_t... 2
#20 13.90 checking size of uint16_t... 2
#20 14.20 checking size of u_int16_t... 2
#20 14.37 checking size of int32_t... 4
#20 14.54 checking size of uint32_t... 4
#20 14.70 checking size of u_int32_t... 4
#20 14.86 checking size of int64_t... 8
#20 15.18 checking size of uint64_t... 8
#20 15.37 checking size of short... 2
#20 15.55 checking size of int... 4
#20 15.72 checking size of long... 8
#20 15.88 checking size of long long... 8
#20 16.05 checking for working memcmp... yes
#20 16.27 checking that generated files are newer than configure... done
#20 16.27 configure: creating ./config.status
#20 17.06 config.status: creating Makefile
#20 17.08 config.status: creating src/Makefile
#20 17.10 config.status: creating doc/Makefile
#20 17.13 config.status: creating doc/libogg/Makefile
#20 17.15 config.status: creating include/Makefile
#20 17.18 config.status: creating include/ogg/Makefile
#20 17.21 config.status: creating include/ogg/config_types.h
#20 17.24 config.status: creating libogg.spec
#20 17.26 config.status: creating ogg.pc
#20 17.28 config.status: creating ogg-uninstalled.pc
#20 17.31 config.status: creating config.h
#20 17.32 config.status: executing libtool commands
#20 17.34 config.status: executing depfiles commands
#20 17.49 ++ nproc
#20 17.51 + make -j8
#20 17.51 make  all-recursive
#20 17.52 make[1]: Entering directory '/src/ogg'
#20 17.53 Making all in src
#20 17.53 make[2]: Entering directory '/src/ogg/src'
#20 17.53 clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include  -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT test_bitwise-bitwise.o -MD -MP -MF .deps/test_bitwise-bitwise.Tpo -c -o test_bitwise-bitwise.o `test -f 'bitwise.c' || echo './'`bitwise.c
#20 17.53 clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include  -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT test_framing-framing.o -MD -MP -MF .deps/test_framing-framing.Tpo -c -o test_framing-framing.o `test -f 'framing.c' || echo './'`framing.c
#20 17.53 /bin/bash ../libtool  --tag=CC   --mode=compile clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include   -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c -o framing.lo framing.c
#20 17.53 /bin/bash ../libtool  --tag=CC   --mode=compile clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include   -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c -o bitwise.lo bitwise.c
#20 17.59 libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c bitwise.c  -fPIC -DPIC -o .libs/bitwise.o
#20 17.59 libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c framing.c  -fPIC -DPIC -o .libs/framing.o
#20 17.78 libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c bitwise.c -o bitwise.o >/dev/null 2>&1
#20 17.97 mv -f .deps/bitwise.Tpo .deps/bitwise.Plo
#20 17.98 libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c framing.c -o framing.o >/dev/null 2>&1
#20 18.34 mv -f .deps/test_bitwise-bitwise.Tpo .deps/test_bitwise-bitwise.Po
#20 18.34 /bin/bash ../libtool  --tag=CC   --mode=link clang -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard   -o test_bitwise test_bitwise-bitwise.o  
#20 18.38 mv -f .deps/framing.Tpo .deps/framing.Plo
#20 18.38 /bin/bash ../libtool  --tag=CC   --mode=link clang  -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -no-undefined -version-info 8:5:8  -o libogg.la -rpath /src/libogg-install/lib framing.lo bitwise.lo  
#20 18.43 libtool: link: clang -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -o test_bitwise test_bitwise-bitwise.o  -pthread
#20 18.48 libtool: link: clang -shared  -fPIC -DPIC  .libs/framing.o .libs/bitwise.o    -O2 -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -O3   -pthread -Wl,-soname -Wl,libogg.so.0 -o .libs/libogg.so.0.8.5
#20 18.52 libtool: link: (cd ".libs" && rm -f "libogg.so.0" && ln -s "libogg.so.0.8.5" "libogg.so.0")
#20 18.53 libtool: link: (cd ".libs" && rm -f "libogg.so" && ln -s "libogg.so.0.8.5" "libogg.so")
#20 18.54 libtool: link: ar cr .libs/libogg.a  framing.o bitwise.o
#20 18.54 libtool: link: ranlib .libs/libogg.a
#20 18.57 libtool: link: ( cd ".libs" && rm -f "libogg.la" && ln -s "../libogg.la" "libogg.la" )
#20 18.73 mv -f .deps/test_framing-framing.Tpo .deps/test_framing-framing.Po
#20 18.74 /bin/bash ../libtool  --tag=CC   --mode=link clang -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard   -o test_framing test_framing-framing.o  
#20 18.86 libtool: link: clang -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -o test_framing test_framing-framing.o  -pthread
#20 18.96 make[2]: Leaving directory '/src/ogg/src'
#20 18.96 Making all in include
#20 18.97 make[2]: Entering directory '/src/ogg/include'
#20 18.97 Making all in ogg
#20 18.98 make[3]: Entering directory '/src/ogg/include/ogg'
#20 18.98 make[3]: Nothing to be done for 'all'.
#20 18.98 make[3]: Leaving directory '/src/ogg/include/ogg'
#20 18.98 make[3]: Entering directory '/src/ogg/include'
#20 18.98 make[3]: Nothing to be done for 'all-am'.
#20 18.98 make[3]: Leaving directory '/src/ogg/include'
#20 18.98 make[2]: Leaving directory '/src/ogg/include'
#20 18.98 Making all in doc
#20 18.99 make[2]: Entering directory '/src/ogg/doc'
#20 18.99 Making all in libogg
#20 19.00 make[3]: Entering directory '/src/ogg/doc/libogg'
#20 19.00 make[3]: Nothing to be done for 'all'.
#20 19.00 make[3]: Leaving directory '/src/ogg/doc/libogg'
#20 19.00 make[3]: Entering directory '/src/ogg/doc'
#20 19.00 make[3]: Nothing to be done for 'all-am'.
#20 19.00 make[3]: Leaving directory '/src/ogg/doc'
#20 19.00 make[2]: Leaving directory '/src/ogg/doc'
#20 19.00 make[2]: Entering directory '/src/ogg'
#20 19.01 make[2]: Leaving directory '/src/ogg'
#20 19.01 make[1]: Leaving directory '/src/ogg'
#20 19.01 + make install
#20 19.02 Making install in src
#20 19.04 make[1]: Entering directory '/src/ogg/src'
#20 19.05 make[2]: Entering directory '/src/ogg/src'
#20 19.05  /usr/bin/mkdir -p '/src/libogg-install/lib'
#20 19.05  /bin/bash ../libtool   --mode=install /usr/bin/install -c   libogg.la '/src/libogg-install/lib'
#20 19.09 libtool: install: /usr/bin/install -c .libs/libogg.so.0.8.5 /src/libogg-install/lib/libogg.so.0.8.5
#20 19.09 libtool: install: (cd /src/libogg-install/lib && { ln -s -f libogg.so.0.8.5 libogg.so.0 || { rm -f libogg.so.0 && ln -s libogg.so.0.8.5 libogg.so.0; }; })
#20 19.10 libtool: install: (cd /src/libogg-install/lib && { ln -s -f libogg.so.0.8.5 libogg.so || { rm -f libogg.so && ln -s libogg.so.0.8.5 libogg.so; }; })
#20 19.10 libtool: install: /usr/bin/install -c .libs/libogg.lai /src/libogg-install/lib/libogg.la
#20 19.10 libtool: install: /usr/bin/install -c .libs/libogg.a /src/libogg-install/lib/libogg.a
#20 19.11 libtool: install: chmod 644 /src/libogg-install/lib/libogg.a
#20 19.11 libtool: install: ranlib /src/libogg-install/lib/libogg.a
#20 19.17 libtool: finish: PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/out:/sbin" ldconfig -n /src/libogg-install/lib
#20 19.18 ----------------------------------------------------------------------
#20 19.18 Libraries have been installed in:
#20 19.18    /src/libogg-install/lib
#20 19.18 
#20 19.18 If you ever happen to want to link against installed libraries
#20 19.18 in a given directory, LIBDIR, you must either use libtool, and
#20 19.18 specify the full pathname of the library, or use the '-LLIBDIR'
#20 19.18 flag during linking and do at least one of the following:
#20 19.18    - add LIBDIR to the 'LD_LIBRARY_PATH' environment variable
#20 19.18      during execution
#20 19.18    - add LIBDIR to the 'LD_RUN_PATH' environment variable
#20 19.18      during linking
#20 19.18    - use the '-Wl,-rpath -Wl,LIBDIR' linker flag
#20 19.18    - have your system administrator add LIBDIR to '/etc/ld.so.conf'
#20 19.18 
#20 19.18 See any operating system documentation about shared libraries for
#20 19.18 more information, such as the ld(1) and ld.so(8) manual pages.
#20 19.18 ----------------------------------------------------------------------
#20 19.18 make[2]: Nothing to be done for 'install-data-am'.
#20 19.18 make[2]: Leaving directory '/src/ogg/src'
#20 19.18 make[1]: Leaving directory '/src/ogg/src'
#20 19.18 Making install in include
#20 19.19 make[1]: Entering directory '/src/ogg/include'
#20 19.19 Making install in ogg
#20 19.20 make[2]: Entering directory '/src/ogg/include/ogg'
#20 19.20 make[3]: Entering directory '/src/ogg/include/ogg'
#20 19.20 make[3]: Nothing to be done for 'install-exec-am'.
#20 19.20  /usr/bin/mkdir -p '/src/libogg-install/include/ogg'
#20 19.21  /usr/bin/install -c -m 644 config_types.h '/src/libogg-install/include/ogg'
#20 19.21  /usr/bin/mkdir -p '/src/libogg-install/include/ogg'
#20 19.22  /usr/bin/install -c -m 644 ogg.h os_types.h '/src/libogg-install/include/ogg'
#20 19.22 make[3]: Leaving directory '/src/ogg/include/ogg'
#20 19.22 make[2]: Leaving directory '/src/ogg/include/ogg'
#20 19.22 make[2]: Entering directory '/src/ogg/include'
#20 19.23 make[3]: Entering directory '/src/ogg/include'
#20 19.23 make[3]: Nothing to be done for 'install-exec-am'.
#20 19.23 make[3]: Nothing to be done for 'install-data-am'.
#20 19.23 make[3]: Leaving directory '/src/ogg/include'
#20 19.23 make[2]: Leaving directory '/src/ogg/include'
#20 19.23 make[1]: Leaving directory '/src/ogg/include'
#20 19.23 Making install in doc
#20 19.23 make[1]: Entering directory '/src/ogg/doc'
#20 19.24 Making install in libogg
#20 19.24 make[2]: Entering directory '/src/ogg/doc/libogg'
#20 19.25 make[3]: Entering directory '/src/ogg/doc/libogg'
#20 19.25 make[3]: Nothing to be done for 'install-exec-am'.
#20 19.25  /usr/bin/mkdir -p '/src/libogg-install/share/doc/libogg/libogg'
#20 19.25  /usr/bin/install -c -m 644 bitpacking.html datastructures.html decoding.html encoding.html general.html index.html ogg_iovec_t.html ogg_packet.html ogg_packet_clear.html ogg_page.html ogg_page_bos.html ogg_page_checksum_set.html ogg_page_continued.html ogg_page_eos.html ogg_page_granulepos.html ogg_page_packets.html ogg_page_pageno.html ogg_page_serialno.html ogg_page_version.html ogg_stream_check.html ogg_stream_clear.html ogg_stream_destroy.html ogg_stream_eos.html ogg_stream_flush.html ogg_stream_flush_fill.html ogg_stream_init.html ogg_stream_iovecin.html ogg_stream_packetin.html ogg_stream_packetout.html ogg_stream_packetpeek.html ogg_stream_pagein.html ogg_stream_pageout.html ogg_stream_pageout_fill.html ogg_stream_reset.html ogg_stream_reset_serialno.html ogg_stream_state.html ogg_sync_buffer.html ogg_sync_check.html ogg_sync_clear.html ogg_sync_destroy.html '/src/libogg-install/share/doc/libogg/libogg'
#20 19.30  /usr/bin/install -c -m 644 ogg_sync_init.html ogg_sync_pageout.html ogg_sync_pageseek.html ogg_sync_reset.html ogg_sync_state.html ogg_sync_wrote.html oggpack_adv.html oggpack_adv1.html oggpack_bits.html oggpack_buffer.html oggpack_bytes.html oggpack_get_buffer.html oggpack_look.html oggpack_look1.html oggpack_read.html oggpack_read1.html oggpack_readinit.html oggpack_reset.html oggpack_write.html oggpack_writealign.html oggpack_writecheck.html oggpack_writeclear.html oggpack_writecopy.html oggpack_writeinit.html oggpack_writetrunc.html overview.html reference.html style.css '/src/libogg-install/share/doc/libogg/libogg'
#20 19.31 make[3]: Leaving directory '/src/ogg/doc/libogg'
#20 19.31 make[2]: Leaving directory '/src/ogg/doc/libogg'
#20 19.31 make[2]: Entering directory '/src/ogg/doc'
#20 19.32 make[3]: Entering directory '/src/ogg/doc'
#20 19.32 make[3]: Nothing to be done for 'install-exec-am'.
#20 19.32  /usr/bin/mkdir -p '/src/libogg-install/share/doc/libogg'
#20 19.33  /usr/bin/install -c -m 644 framing.html index.html oggstream.html ogg-multiplex.html fish_xiph_org.png multiplex1.png packets.png pages.png stream.png vorbisword2.png white-ogg.png white-xifish.png rfc3533.txt rfc5334.txt skeleton.html '/src/libogg-install/share/doc/libogg'
#20 19.34 make[3]: Leaving directory '/src/ogg/doc'
#20 19.34 make[2]: Leaving directory '/src/ogg/doc'
#20 19.34 make[1]: Leaving directory '/src/ogg/doc'
#20 19.34 make[1]: Entering directory '/src/ogg'
#20 19.35 make[2]: Entering directory '/src/ogg'
#20 19.35 make[2]: Nothing to be done for 'install-exec-am'.
#20 19.35  /usr/bin/mkdir -p '/src/libogg-install/share/aclocal'
#20 19.36  /usr/bin/install -c -m 644 ogg.m4 '/src/libogg-install/share/aclocal'
#20 19.37  /usr/bin/mkdir -p '/src/libogg-install/lib/pkgconfig'
#20 19.37  /usr/bin/install -c -m 644 ogg.pc '/src/libogg-install/lib/pkgconfig'
#20 19.37 make[2]: Leaving directory '/src/ogg'
#20 19.37 make[1]: Leaving directory '/src/ogg'
#20 19.38 + cd /src/flac/
#20 19.38 + ./autogen.sh
#20 19.38 Using symlinks to autotool files (use --no-symlinks to copy instead).
#20 19.38 Updating build configuration files for FLAC, please wait....
#20 24.46 libtoolize: putting auxiliary files in '.'.
#20 24.46 libtoolize: linking file './ltmain.sh'
#20 24.51 libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
#20 24.51 libtoolize: linking file 'm4/libtool.m4'
#20 24.61 libtoolize: linking file 'm4/ltoptions.m4'
#20 24.72 libtoolize: linking file 'm4/ltsugar.m4'
#20 24.82 libtoolize: linking file 'm4/ltversion.m4'
#20 24.93 libtoolize: linking file 'm4/lt~obsolete.m4'
#20 30.57 configure.ac:41: installing './ar-lib'
#20 30.57 configure.ac:39: installing './compile'
#20 30.57 configure.ac:42: installing './config.guess'
#20 30.57 configure.ac:42: installing './config.sub'
#20 30.57 configure.ac:26: installing './install-sh'
#20 30.57 configure.ac:26: installing './missing'
#20 30.97 examples/c/decode/file/Makefile.am: installing './depcomp'
#20 33.09 + [[ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard = *sanitize=memory* ]]
#20 33.09 + LD_LIBRARY_PATH=/src/libogg-install/lib
#20 33.09 + ./configure --with-ogg=/src/libogg-install --enable-static --disable-oggtest --disable-examples --disable-xmms-plugin
#20 33.34 checking for a BSD-compatible install... /usr/bin/install -c
#20 33.35 checking whether build environment is sane... yes
#20 33.37 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 33.37 checking for gawk... no
#20 33.37 checking for mawk... mawk
#20 33.37 checking whether make sets $(MAKE)... yes
#20 33.39 checking whether make supports nested variables... yes
#20 33.40 checking how to create a pax tar archive... gnutar
#20 33.43 checking whether make supports nested variables... (cached) yes
#20 33.43 checking whether configure should try to set CFLAGS/CXXFLAGS/CPPFLAGS/LDFLAGS... no
#20 33.43 checking whether to enable debugging... no
#20 33.44 checking whether make supports the include directive... yes (GNU style)
#20 33.45 checking for gcc... clang
#20 33.52 checking whether the C compiler works... yes
#20 33.65 checking for C compiler default output file name... a.out
#20 33.65 checking for suffix of executables... 
#20 33.78 checking whether we are cross compiling... no
#20 33.93 checking for suffix of object files... o
#20 33.96 checking whether we are using the GNU C compiler... yes
#20 33.99 checking whether clang accepts -g... yes
#20 34.01 checking for clang option to accept ISO C89... none needed
#20 34.06 checking whether clang understands -c and -o together... yes
#20 34.11 checking dependency style of clang... gcc3
#20 34.16 checking for clang option to accept ISO C99... none needed
#20 34.23 checking for clang option to accept ISO Standard C... (cached) none needed
#20 34.23 checking how to run the C preprocessor... clang -E
#20 34.33 checking for grep that handles long lines and -e... /usr/bin/grep
#20 34.33 checking for egrep... /usr/bin/grep -E
#20 34.34 checking for ANSI C header files... yes
#20 34.58 checking for sys/types.h... yes
#20 34.64 checking for sys/stat.h... yes
#20 34.69 checking for stdlib.h... yes
#20 34.75 checking for string.h... yes
#20 34.81 checking for memory.h... yes
#20 34.87 checking for strings.h... yes
#20 34.93 checking for inttypes.h... yes
#20 34.99 checking for stdint.h... yes
#20 35.05 checking for unistd.h... yes
#20 35.11 checking minix/config.h usability... no
#20 35.18 checking minix/config.h presence... no
#20 35.21 checking for minix/config.h... no
#20 35.21 checking whether it is safe to define __EXTENSIONS__... yes
#20 35.27 checking for ar... ar
#20 35.27 checking the archiver (ar) interface... ar
#20 35.32 checking build system type... x86_64-pc-linux-gnu
#20 35.40 checking host system type... x86_64-pc-linux-gnu
#20 35.40 checking how to print strings... printf
#20 35.45 checking for a sed that does not truncate output... /usr/bin/sed
#20 35.46 checking for fgrep... /usr/bin/grep -F
#20 35.47 checking for ld used by clang... /usr/bin/ld
#20 35.48 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 35.49 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 35.49 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 35.52 checking whether ln -s works... yes
#20 35.53 checking the maximum length of command line arguments... 1572864
#20 35.54 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 35.54 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 35.54 checking for /usr/bin/ld option to reload object files... -r
#20 35.54 checking for objdump... objdump
#20 35.54 checking how to recognize dependent libraries... pass_all
#20 35.54 checking for dlltool... no
#20 35.54 checking how to associate runtime and link libraries... printf %s\n
#20 35.55 checking for archiver @FILE support... @
#20 35.59 checking for strip... strip
#20 35.59 checking for ranlib... ranlib
#20 35.59 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 35.77 checking for sysroot... no
#20 35.77 checking for a working dd... /usr/bin/dd
#20 35.78 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 35.81 checking for mt... no
#20 35.81 checking if : is a manifest tool... no
#20 35.82 checking for dlfcn.h... yes
#20 35.89 checking for objdir... .libs
#20 36.06 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 36.10 checking for clang option to produce PIC... -fPIC -DPIC
#20 36.10 checking if clang PIC flag -fPIC -DPIC works... yes
#20 36.13 checking if clang static flag -static works... yes
#20 36.30 checking if clang supports -c -o file.o... yes
#20 36.35 checking if clang supports -c -o file.o... (cached) yes
#20 36.35 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 36.37 checking whether -lc should be explicitly linked in... no
#20 36.43 checking dynamic linker characteristics... GNU/Linux ld.so
#20 36.61 checking how to hardcode library paths into programs... immediate
#20 36.61 checking whether stripping libraries is possible... yes
#20 36.61 checking if libtool supports shared libraries... yes
#20 36.61 checking whether to build shared libraries... yes
#20 36.61 checking whether to build static libraries... yes
#20 36.61 checking dependency style of clang... gcc3
#20 36.74 checking whether we are using the GNU C++ compiler... yes
#20 36.77 checking whether clang++ accepts -g... yes
#20 36.80 checking dependency style of clang++... gcc3
#20 36.86 checking how to run the C++ preprocessor... clang++ -E
#20 37.18 checking for ld used by clang++... /usr/bin/ld -m elf_x86_64
#20 37.20 checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
#20 37.22 checking whether the clang++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 37.38 checking for clang++ option to produce PIC... -fPIC -DPIC
#20 37.38 checking if clang++ PIC flag -fPIC -DPIC works... yes
#20 37.41 checking if clang++ static flag -static works... yes
#20 37.66 checking if clang++ supports -c -o file.o... yes
#20 37.71 checking if clang++ supports -c -o file.o... (cached) yes
#20 37.71 checking whether the clang++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 37.71 checking dynamic linker characteristics... (cached) GNU/Linux ld.so
#20 37.72 checking how to hardcode library paths into programs... immediate
#20 37.72 checking whether we are using the CLANG C compiler... yes
#20 37.91 checking whether make sets $(MAKE)... (cached) yes
#20 37.92 checking for special C compiler options needed for large files... no
#20 37.92 checking for _FILE_OFFSET_BITS value needed for large files... no
#20 37.95 checking for _LARGEFILE_SOURCE value needed for large files... no
#20 38.10 checking size of off_t... 8
#20 38.29 checking size of void*... 8
#20 38.46 checking for library containing lround... none required
#20 38.59 checking for variable-length arrays... yes
#20 38.63 checking for ANSI C header files... (cached) yes
#20 38.63 checking for inline... inline
#20 38.66 checking for variable-length arrays... (cached) yes
#20 38.66 checking for typeof syntax and keyword spelling... typeof
#20 38.70 checking for stdint.h... (cached) yes
#20 38.71 checking for inttypes.h... (cached) yes
#20 38.72 checking byteswap.h usability... yes
#20 38.79 checking byteswap.h presence... yes
#20 38.81 checking for byteswap.h... yes
#20 38.82 checking sys/param.h usability... yes
#20 38.89 checking sys/param.h presence... yes
#20 38.92 checking for sys/param.h... yes
#20 38.93 checking sys/ioctl.h usability... yes
#20 38.99 checking sys/ioctl.h presence... yes
#20 39.02 checking for sys/ioctl.h... yes
#20 39.03 checking termios.h usability... yes
#20 39.10 checking termios.h presence... yes
#20 39.12 checking for termios.h... yes
#20 39.13 checking x86intrin.h usability... yes
#20 39.70 checking x86intrin.h presence... yes
#20 39.80 checking for x86intrin.h... yes
#20 39.81 checking cpuid.h usability... yes
#20 39.87 checking cpuid.h presence... yes
#20 39.89 checking for cpuid.h... yes
#20 39.90 checking for bswap32 intrinsic... yes
#20 40.03 checking for bswap16 intrinsic... yes
#20 40.15 checking whether byte ordering is bigendian... no
#20 40.28 checking for socklen_t... yes
#20 40.42 checking for getopt_long... yes
#20 40.55 checking size of void*... (cached) 8
#20 40.56 checking for doxygen... no
#20 40.57 checking for Ogg... yes
#20 40.57 checking for ld used by clang... /usr/bin/ld -m elf_x86_64
#20 40.59 checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
#20 40.60 checking for shared library run path origin... done
#20 40.63 checking for iconv... yes
#20 40.77 checking for working iconv... yes
#20 40.93 checking for iconv declaration... 
#20 40.98          extern size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
#20 40.98 checking for nl_langinfo and CODESET... yes
#20 41.11 checking for docbook-to-man... no
#20 41.11 checking for docbook2man... no
#20 41.12 checking for clock_gettime in -lrt... yes
#20 41.25 checking for nasm... no
#20 41.25 checking if clang accepts -Wdeclaration-after-statement... yes
#20 41.50 checking whether to add -D_FORTIFY_SOURCE=2 to CPPFLAGS... yes
#20 41.63 checking if clang++ accepts -Weffc++... yes
#20 41.88 checking if clang accepts -msse2... yes
#20 42.00 checking that generated files are newer than configure... done
#20 42.00 configure: creating ./config.status
#20 43.10 config.status: creating Makefile
#20 43.12 config.status: creating src/Makefile
#20 43.14 config.status: creating src/libFLAC/Makefile
#20 43.17 config.status: creating src/libFLAC/flac.pc
#20 43.21 config.status: creating src/libFLAC/ia32/Makefile
#20 43.23 config.status: creating src/libFLAC/include/Makefile
#20 43.26 config.status: creating src/libFLAC/include/private/Makefile
#20 43.29 config.status: creating src/libFLAC/include/protected/Makefile
#20 43.31 config.status: creating src/libFLAC++/Makefile
#20 43.34 config.status: creating src/libFLAC++/flac++.pc
#20 43.38 config.status: creating src/flac/Makefile
#20 43.40 config.status: creating src/metaflac/Makefile
#20 43.43 config.status: creating src/plugin_common/Makefile
#20 43.46 config.status: creating src/plugin_xmms/Makefile
#20 43.49 config.status: creating src/share/Makefile
#20 43.51 config.status: creating src/test_grabbag/Makefile
#20 43.54 config.status: creating src/test_grabbag/cuesheet/Makefile
#20 43.57 config.status: creating src/test_grabbag/picture/Makefile
#20 43.60 config.status: creating src/test_libs_common/Makefile
#20 43.62 config.status: creating src/test_libFLAC/Makefile
#20 43.65 config.status: creating src/test_libFLAC++/Makefile
#20 43.68 config.status: creating src/test_seeking/Makefile
#20 43.71 config.status: creating src/test_streams/Makefile
#20 43.74 config.status: creating src/utils/Makefile
#20 43.76 config.status: creating src/utils/flacdiff/Makefile
#20 43.79 config.status: creating src/utils/flactimer/Makefile
#20 43.82 config.status: creating examples/Makefile
#20 43.85 config.status: creating examples/c/Makefile
#20 43.87 config.status: creating examples/c/decode/Makefile
#20 43.90 config.status: creating examples/c/decode/file/Makefile
#20 43.93 config.status: creating examples/c/encode/Makefile
#20 43.96 config.status: creating examples/c/encode/file/Makefile
#20 43.98 config.status: creating examples/cpp/Makefile
#20 44.01 config.status: creating examples/cpp/decode/Makefile
#20 44.04 config.status: creating examples/cpp/decode/file/Makefile
#20 44.07 config.status: creating examples/cpp/encode/Makefile
#20 44.09 config.status: creating examples/cpp/encode/file/Makefile
#20 44.12 config.status: creating include/Makefile
#20 44.15 config.status: creating include/FLAC/Makefile
#20 44.18 config.status: creating include/FLAC++/Makefile
#20 44.20 config.status: creating include/share/Makefile
#20 44.23 config.status: creating include/share/grabbag/Makefile
#20 44.26 config.status: creating include/test_libs_common/Makefile
#20 44.29 config.status: creating doc/Doxyfile
#20 44.33 config.status: creating doc/Makefile
#20 44.36 config.status: creating doc/html/Makefile
#20 44.38 config.status: creating doc/html/images/Makefile
#20 44.41 config.status: creating m4/Makefile
#20 44.44 config.status: creating man/Makefile
#20 44.47 config.status: creating test/common.sh
#20 44.50 config.status: creating test/Makefile
#20 44.53 config.status: creating test/cuesheets/Makefile
#20 44.56 config.status: creating test/flac-to-flac-metadata-test-files/Makefile
#20 44.58 config.status: creating test/metaflac-test-files/Makefile
#20 44.61 config.status: creating test/pictures/Makefile
#20 44.64 config.status: creating build/Makefile
#20 44.67 config.status: creating microbench/Makefile
#20 44.69 config.status: creating oss-fuzz/Makefile
#20 44.72 config.status: creating config.h
#20 44.74 config.status: executing depfiles commands
#20 46.00 config.status: executing libtool commands
#20 46.02 
#20 46.02 -=-=-=-=-=-=-=-=-=-= Configuration Complete =-=-=-=-=-=-=-=-=-=-
#20 46.02 
#20 46.02   Configuration summary :
#20 46.02 
#20 46.02     FLAC version : ............................ 1.3.3
#20 46.02 
#20 46.02     Host CPU : ................................ x86_64
#20 46.02     Host Vendor : ............................. pc
#20 46.02     Host OS : ................................. linux-gnu
#20 46.02 
#20 46.02     Compiler is GCC : ......................... no
#20 46.02     Compiler is Clang : ....................... yes
#20 46.02     SSE optimizations : ....................... yes
#20 46.02     Asm optimizations : ....................... yes
#20 46.02     Ogg/FLAC support : ........................ yes
#20 46.02     Stack protector  : ........................ no
#20 46.02     Fuzzing support (Clang only) : ............ no
#20 46.02 
#20 46.11 ++ nproc
#20 46.11 + make -j8
#20 46.12 make  all-recursive
#20 46.12 make[1]: Entering directory '/src/flac'
#20 46.13 Making all in doc
#20 46.13 make[2]: Entering directory '/src/flac/doc'
#20 46.14 Making all in .
#20 46.14 make[3]: Entering directory '/src/flac/doc'
#20 46.14 touch FLAC.tag
#20 46.15 mkdir -p html/api
#20 46.15 make[3]: Leaving directory '/src/flac/doc'
#20 46.15 Making all in html
#20 46.15 make[3]: Entering directory '/src/flac/doc/html'
#20 46.16 Making all in images
#20 46.16 make[4]: Entering directory '/src/flac/doc/html/images'
#20 46.16 make[4]: Nothing to be done for 'all'.
#20 46.16 make[4]: Leaving directory '/src/flac/doc/html/images'
#20 46.17 make[4]: Entering directory '/src/flac/doc/html'
#20 46.17 make[4]: Nothing to be done for 'all-am'.
#20 46.17 make[4]: Leaving directory '/src/flac/doc/html'
#20 46.17 make[3]: Leaving directory '/src/flac/doc/html'
#20 46.17 make[2]: Leaving directory '/src/flac/doc'
#20 46.17 Making all in include
#20 46.17 make[2]: Entering directory '/src/flac/include'
#20 46.18 Making all in FLAC
#20 46.18 make[3]: Entering directory '/src/flac/include/FLAC'
#20 46.18 make[3]: Nothing to be done for 'all'.
#20 46.18 make[3]: Leaving directory '/src/flac/include/FLAC'
#20 46.18 Making all in FLAC++
#20 46.19 make[3]: Entering directory '/src/flac/include/FLAC++'
#20 46.19 make[3]: Nothing to be done for 'all'.
#20 46.19 make[3]: Leaving directory '/src/flac/include/FLAC++'
#20 46.19 Making all in share
#20 46.19 make[3]: Entering directory '/src/flac/include/share'
#20 46.20 Making all in grabbag
#20 46.20 make[4]: Entering directory '/src/flac/include/share/grabbag'
#20 46.20 make[4]: Nothing to be done for 'all'.
#20 46.20 make[4]: Leaving directory '/src/flac/include/share/grabbag'
#20 46.21 make[4]: Entering directory '/src/flac/include/share'
#20 46.21 make[4]: Nothing to be done for 'all-am'.
#20 46.21 make[4]: Leaving directory '/src/flac/include/share'
#20 46.21 make[3]: Leaving directory '/src/flac/include/share'
#20 46.21 Making all in test_libs_common
#20 46.21 make[3]: Entering directory '/src/flac/include/test_libs_common'
#20 46.21 make[3]: Nothing to be done for 'all'.
#20 46.21 make[3]: Leaving directory '/src/flac/include/test_libs_common'
#20 46.21 make[3]: Entering directory '/src/flac/include'
#20 46.21 make[3]: Nothing to be done for 'all-am'.
#20 46.21 make[3]: Leaving directory '/src/flac/include'
#20 46.22 make[2]: Leaving directory '/src/flac/include'
#20 46.22 Making all in m4
#20 46.22 make[2]: Entering directory '/src/flac/m4'
#20 46.22 make[2]: Nothing to be done for 'all'.
#20 46.22 make[2]: Leaving directory '/src/flac/m4'
#20 46.22 Making all in man
#20 46.22 make[2]: Entering directory '/src/flac/man'
#20 46.22 make[2]: Nothing to be done for 'all'.
#20 46.22 make[2]: Leaving directory '/src/flac/man'
#20 46.22 Making all in src
#20 46.23 make[2]: Entering directory '/src/flac/src'
#20 46.23 Making all in libFLAC
#20 46.24 make[3]: Entering directory '/src/flac/src/libFLAC'
#20 46.24 Making all in include
#20 46.25 make[4]: Entering directory '/src/flac/src/libFLAC/include'
#20 46.25 Making all in private
#20 46.26 make[5]: Entering directory '/src/flac/src/libFLAC/include/private'
#20 46.26 make[5]: Nothing to be done for 'all'.
#20 46.26 make[5]: Leaving directory '/src/flac/src/libFLAC/include/private'
#20 46.26 Making all in protected
#20 46.26 make[5]: Entering directory '/src/flac/src/libFLAC/include/protected'
#20 46.26 make[5]: Nothing to be done for 'all'.
#20 46.26 make[5]: Leaving directory '/src/flac/src/libFLAC/include/protected'
#20 46.27 make[5]: Entering directory '/src/flac/src/libFLAC/include'
#20 46.27 make[5]: Nothing to be done for 'all-am'.
#20 46.27 make[5]: Leaving directory '/src/flac/src/libFLAC/include'
#20 46.27 make[4]: Leaving directory '/src/flac/src/libFLAC/include'
#20 46.27 Making all in .
#20 46.27 make[4]: Entering directory '/src/flac/src/libFLAC'
#20 46.28   CC       bitmath.lo
#20 46.28   CC       bitreader.lo
#20 46.28   CC       bitwriter.lo
#20 46.28   CC       cpu.lo
#20 46.28   CC       crc.lo
#20 46.28   CC       fixed.lo
#20 46.28   CC       fixed_intrin_sse2.lo
#20 46.28   CC       fixed_intrin_ssse3.lo
#20 46.52   CC       float.lo
#20 46.63   CC       format.lo
#20 46.64   CC       lpc.lo
#20 46.75   CC       lpc_intrin_sse.lo
#20 47.08   CC       lpc_intrin_sse2.lo
#20 47.08   CC       lpc_intrin_sse41.lo
#20 47.20   CC       lpc_intrin_avx2.lo
#20 47.25   CC       lpc_intrin_vsx.lo
#20 47.32 lpc_intrin_sse2.c:83:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.33                                                 summ = _mm_madd_epi16(q11, _mm_loadu_si128((const __m128i*)(data+i-12)));
#20 47.33                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.33 lpc_intrin_sse2.c:84:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.33 lpc_intrin_sse41.c:1167:51: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.33                                                 summ = _mm_mullo_epi32(q11, _mm_loadu_si128((const __m128i*)(data+i-12)));
#20 47.33                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.33 lpc_intrin_sse41.c:1168:                                                mull = _mm_madd_epi16(q10, _mm_loadu_si128((const __m128i*)(data+i-11))); summ = _mm_add_epi32(summ, mull);51:
#20 47.33  warning:                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.33 cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.33                                                 mull = _mm_mullo_epi32(q10, _mm_loadu_si128((const __m128i*)(data+i-11))); summ = _mm_add_epi32(summ, mull);
#20 47.33                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.33 lpc_intrin_sse41.clpc_intrin_sse2.c:85:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.33 :1169:50                                                mull = _mm_madd_epi16(q9, _mm_loadu_si128((const __m128i*)(data+i-10))); summ = _mm_add_epi32(summ, mull);
#20 47.33                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.33 : warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.33                                                 mull = _mm_mullo_epi32(q9, _mm_loadu_si128((const __m128i*)(data+i-10))); summ = _mm_add_epi32(summ, mull);
#20 47.33                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.33 lpc_intrin_sse41.c:1170:50:lpc_intrin_sse2.c warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]:86
#20 47.33 :49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.33                                                 mull = _mm_mullo_epi32(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);                                                mull = _mm_madd_epi16(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 47.33                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.33 
#20 47.33                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.33 lpc_intrin_sse41.c:1171:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]lpc_intrin_sse2.c
#20 47.33 :87:                                                mull = _mm_mullo_epi32(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);49:
#20 47.33                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~ warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.33 
#20 47.33                                                 mull = _mm_madd_epi16(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 47.33                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.33 lpc_intrin_sse41.c:lpc_intrin_sse2.c:88:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34 1172                                                mull = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 47.34                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.34 :50lpc_intrin_sse2.c:89:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34 :                                                mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 47.34                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.34  warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34                                                 mull = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 47.34                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.34 lpc_intrin_sse2.clpc_intrin_sse41.c:1173:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34 :                                                mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);90:49
#20 47.34                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.34 : warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34 lpc_intrin_sse41.c:1174                                                mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34 
#20 47.34                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.34                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.34 
#20 47.34 lpc_intrin_sse41.c:1175:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34 lpc_intrin_sse2.c:91                                                mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.34                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.34 :49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34 lpc_intrin_sse41.c:1176:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.34                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.34                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.34                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.34 lpc_intrin_sse41.c:1177:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.34                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.34 lpc_intrin_sse2.c:92:49: lpc_intrin_sse41.cwarning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]:1178:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34 
#20 47.34                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.34                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.34                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.34                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.34 lpc_intrin_sse41.c:1180:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34 lpc_intrin_sse2.c                                                _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));:
#20 47.34                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.34 93:49lpc_intrin_sse41.c:1180:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34 :                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.34                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.34 warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.34                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.34 lpc_intrin_sse2.c:94:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.34                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.34 lpc_intrin_sse2.c:96:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.34                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.34 lpc_intrin_sse2.c:96:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.34                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.34 lpc_intrin_sse41.c:1199:51: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34                                                 summ = _mm_mullo_epi32(q10, _mm_loadu_si128((const __m128i*)(data+i-11)));
#20 47.34                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.34 lpc_intrin_sse41.c:1200:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34                                                 mull = _mm_mullo_epi32(q9, _mm_loadu_si128((const __m128i*)(data+i-10))); summ = _mm_add_epi32(summ, mull);
#20 47.34                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.34 lpc_intrin_sse41.c:1201:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34                                                 mull = _mm_mullo_epi32(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 47.34                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.34 lpc_intrin_sse41.c:1202:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.34                                                 mull = _mm_mullo_epi32(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 47.34                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35 lpc_intrin_sse41.c:1203:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35                                                 mull = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 47.35                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35 lpc_intrin_sse41.c:1204:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 47.35                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35 lpc_intrin_sse41.c:1205:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35 lpc_intrin_sse2.c:115                                                mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.35                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35 :50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35 lpc_intrin_sse41.c:1206:                                                summ = _mm_madd_epi16(q10, _mm_loadu_si128((const __m128i*)(data+i-11)));
#20 47.35                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35 
#20 47.35                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.35                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35 lpc_intrin_sse2.c:116lpc_intrin_sse41.c:49:1207:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35 :                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.35                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35 warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35                                                 mull = _mm_madd_epi16(q9, _mm_loadu_si128((const __m128i*)(data+i-10))); summ = _mm_add_epi32(summ, mull);
#20 47.35 lpc_intrin_sse41.c                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35 :1208:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.35                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35 lpc_intrin_sse2.c:117:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]lpc_intrin_sse41.c:1209:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35 
#20 47.35                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.35                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35                                                 mull = _mm_madd_epi16(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 47.35                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35 lpc_intrin_sse41.c:lpc_intrin_sse2.c1211:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35 :118                                                _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.35                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.35 :49:lpc_intrin_sse41.c:1211:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35  warning:                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.35                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35 cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35                                                 mull = _mm_madd_epi16(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 47.35                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35 lpc_intrin_sse2.c:119:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35                                                 mull = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 47.35                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35 lpc_intrin_sse2.c:120:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 47.35                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35 lpc_intrin_sse2.c:121:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.35                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35 lpc_intrin_sse2.c:122:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35 lpc_intrin_sse41.c:1231:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35                                                 summ = _mm_mullo_epi32(q9, _mm_loadu_si128((const __m128i*)(data+i-10)));
#20 47.35                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~                                                mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.35                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35 
#20 47.35 lpc_intrin_sse41.c:1232:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35 lpc_intrin_sse2.c                                                mull = _mm_mullo_epi32(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);:123:
#20 47.35                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35 49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35 lpc_intrin_sse41.c:1233:                                                mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.35 50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35                                                 mull = _mm_mullo_epi32(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 47.35                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35 lpc_intrin_sse41.c:lpc_intrin_sse2.c:124:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.35                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35 1234lpc_intrin_sse2.c:125:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.35                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.35 :lpc_intrin_sse2.c50::127:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.35                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.35                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.35 lpc_intrin_sse2.c:127:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.36                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.36                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.36  warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.36                                                 mull = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 47.36                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.36 lpc_intrin_sse41.c:1235:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.36                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 47.36                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~lpc_intrin_sse2.c:147:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.36                                                 summ = _mm_madd_epi16(q9, _mm_loadu_si128((const __m128i*)(data+i-10)));
#20 47.36                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.36 
#20 47.36 lpc_intrin_sse2.c:148:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.36                                                 mull = _mm_madd_epi16(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 47.36                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.36 lpc_intrin_sse2.c:149:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.36                                                 mull = _mm_madd_epi16(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 47.36                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.36 lpc_intrin_sse41.c:1236:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.36                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);lpc_intrin_sse2.c:150:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.36 
#20 47.36                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~                                                mull = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 47.36                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.36 
#20 47.36 lpc_intrin_sse2.c:151:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.36                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 47.36                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.36 lpc_intrin_sse41.clpc_intrin_sse2.c:152:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.36                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.36                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.36 :1237:50lpc_intrin_sse2.c:153:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.36                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);:
#20 47.36                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~ 
#20 47.36 warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]lpc_intrin_sse2.c:154:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.36                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.36                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.36 
#20 47.36 lpc_intrin_sse2.c:155:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.36                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.36                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.37 lpc_intrin_sse2.c:156:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.37                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.37                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.37 lpc_intrin_sse2.c:158:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.37                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.37                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.37 lpc_intrin_sse2.c:158:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.37                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.37                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.37                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.37                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.37 lpc_intrin_sse41.c:1238:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.37 lpc_intrin_sse2.c                                                mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.37 :175:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.37                                                 summ = _mm_madd_epi16(q8, _mm_loadu_si128((const __m128i*)(data+i-9)));
#20 47.37                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.37                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~lpc_intrin_sse2.c:176:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.37                                                 mull = _mm_madd_epi16(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 47.37                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.37 
#20 47.37 lpc_intrin_sse2.c:177:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.37                                                 mull = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 47.37                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.37 lpc_intrin_sse2.c:178:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.37                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);lpc_intrin_sse41.c
#20 47.37                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.37 :1239:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.37                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.37                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.37 lpc_intrin_sse41.clpc_intrin_sse2.c:179:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.37 :1240:50:                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);warning: 
#20 47.37 cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.37                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.37                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.37                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.37 lpc_intrin_sse2.c:lpc_intrin_sse41.c180:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.37 :1242                                                mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.37                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.37 :24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.37                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));lpc_intrin_sse2.c
#20 47.37 :181:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.37                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.37                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.37                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.37 lpc_intrin_sse41.c:1242:78lpc_intrin_sse2.c:182:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.37 :                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.37                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.37 warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.37                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.37                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~lpc_intrin_sse2.c:183:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.37 
#20 47.37                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.37                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.37 lpc_intrin_sse2.c:185:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.37                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.37                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.37 lpc_intrin_sse2.c:185:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.37                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.37                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.38 lpc_intrin_sse41.c:1259:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.38                                                 summ = _mm_mullo_epi32(q8, _mm_loadu_si128((const __m128i*)(data+i-9)));
#20 47.38                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.38 lpc_intrin_sse2.c:205:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.38 lpc_intrin_sse41.c:                                                summ = _mm_madd_epi16(q7, _mm_loadu_si128((const __m128i*)(data+i-8)));
#20 47.38                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.38 lpc_intrin_sse2.c:206:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.38 1260:                                                mull = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 47.38                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.38 50: warning: lpc_intrin_sse2.c:207:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.38 cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.38                                                 mull = _mm_mullo_epi32(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 47.38                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 47.38                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.38                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.38 lpc_intrin_sse2.c:208:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.38                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.38                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.38 lpc_intrin_sse41.c:1261:50lpc_intrin_sse2.c:209:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.38 : warning:                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.38                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.38 cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.38                                                 mull = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 47.38                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.38 lpc_intrin_sse2.c:210:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.38                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.38                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.38 lpc_intrin_sse41.clpc_intrin_sse2.c:211:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.38                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.38                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.38 lpc_intrin_sse2.c:212:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.38                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.38                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.38 lpc_intrin_sse2.c::214:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.38                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.38                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.38 lpc_intrin_sse2.c:214:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.38                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.38                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.38 1262:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.38                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 47.38                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.38 lpc_intrin_sse41.c:1263:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.38                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.38                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.38 lpc_intrin_sse41.c:1264:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.38                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.38                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.38 lpc_intrin_sse41.c:1265:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.38                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.38                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.38 lpc_intrin_sse41.c:1266:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.39                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39 lpc_intrin_sse2.clpc_intrin_sse41.c:1267:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39 :229                                                mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.39                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39 :49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39                                                 summ = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7)));
#20 47.39 lpc_intrin_sse41.c:1269:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.39                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.39 lpc_intrin_sse41.c:lpc_intrin_sse2.c1269:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39 :230                                                _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.39                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39 :49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 47.39                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39 lpc_intrin_sse2.c:231:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.39                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39 lpc_intrin_sse2.c:232:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.39                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39 lpc_intrin_sse2.c:233:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.39                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39 lpc_intrin_sse41.c:1289:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39                                                 summ = _mm_mullo_epi32(q7, _mm_loadu_si128((const __m128i*)(data+i-8)));lpc_intrin_sse2.c:234:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39 
#20 47.39                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.39                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~lpc_intrin_sse41.c:1290:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39 
#20 47.39                                                 mull = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 47.39                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39 lpc_intrin_sse2.clpc_intrin_sse41.c:1291:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 47.39                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39 :235:lpc_intrin_sse41.c49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39 :1292:                                                mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.39                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39 50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.39                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39 lpc_intrin_sse2.c:237:24: warning: lpc_intrin_sse41.c:1293:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39 cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.39                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~                                                _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.39 
#20 47.39                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.39 lpc_intrin_sse2.clpc_intrin_sse41.c:1294:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39 :237                                                mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.39                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39 :78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));lpc_intrin_sse41.c:1295:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39 
#20 47.39                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.39                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39 lpc_intrin_sse41.c:1296:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.39                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39 lpc_intrin_sse41.c:1298:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39 lpc_intrin_sse2.c                                                _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.39                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.39 lpc_intrin_sse41.c:1298:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39 :                                                _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));253:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39 
#20 47.39                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39                                                 summ = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6)));
#20 47.39                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39 lpc_intrin_sse2.c:254:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.39                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39 lpc_intrin_sse2.c:255:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.39                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39 lpc_intrin_sse2.c:256:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.39                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.39                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.39 lpc_intrin_sse2.c:257:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.40                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 lpc_intrin_sse2.clpc_intrin_sse41.c:1313:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40 :258                                                summ = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7)));
#20 47.40                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 :49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40 lpc_intrin_sse41.c:                                                mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.40                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 1314:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 47.40 lpc_intrin_sse2.c:260:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.40                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.40 lpc_intrin_sse2.c:260lpc_intrin_sse41.c:1315:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40 :78:                                                mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.40                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40  warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.40                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 lpc_intrin_sse41.c:1316:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.40                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 lpc_intrin_sse41.c:1317:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.40                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 lpc_intrin_sse41.c:1318:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.40                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 lpc_intrin_sse41.c:1319:50:lpc_intrin_sse2.c:273:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40  warning:                                                 summ = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5)));
#20 47.40                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.40 lpc_intrin_sse2.c                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 :274:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);lpc_intrin_sse41.c:1321:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40 
#20 47.40                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.40                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.40 lpc_intrin_sse41.c:1321:78: warning: lpc_intrin_sse2.c:275:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40 cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.40                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~                                                _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.40                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 
#20 47.40 lpc_intrin_sse2.c:276:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.40                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 lpc_intrin_sse2.c:lpc_intrin_sse41.c:1337:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40 277:                                                summ = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6)));
#20 47.40                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40 lpc_intrin_sse41.c:1338                                                mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40 
#20 47.40                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~                                                mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 47.40                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 
#20 47.40 lpc_intrin_sse41.c:1339lpc_intrin_sse2.c:279:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40 :50:                                                _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.40                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.40  warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40 lpc_intrin_sse2.c:279:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));                                                mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.40                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 
#20 47.40                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 lpc_intrin_sse41.c:1340:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.40                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 lpc_intrin_sse41.c:1341:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.40                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 lpc_intrin_sse41.c:1342:50lpc_intrin_sse2.c:295:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40 :                                                 summ = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4)));
#20 47.40                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);lpc_intrin_sse2.c:296:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40 
#20 47.40                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~                                                mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.40 
#20 47.40                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 lpc_intrin_sse41.clpc_intrin_sse2.c:297:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40 :1344:                                                mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.40                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));lpc_intrin_sse2.c:298:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.40 
#20 47.40                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.40                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.40                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.40 lpc_intrin_sse41.c:1344:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41 lpc_intrin_sse2.c:300:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.41                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.41                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse2.c:300:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.41                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse2.c:311:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 summ = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3)));
#20 47.41                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse2.c:312:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41 lpc_intrin_sse41.c                                                mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.41 :1357                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~:
#20 47.41 50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 summ = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5)));
#20 47.41                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse2.clpc_intrin_sse41.c::3131358::4950::  warning: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41 
#20 47.41                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);                                                mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 47.41 
#20 47.41                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 
#20 47.41 lpc_intrin_sse41.c:1359:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41 lpc_intrin_sse2.c:315:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.41                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.41                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse2.c:315:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.41                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse41.c:1360:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.41                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse41.c:1361:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.41                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse41.c:1363:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.41                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse41.c:1363:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41 lpc_intrin_sse2.c:327:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));                                                summ = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2)));
#20 47.41 
#20 47.41                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 
#20 47.41 lpc_intrin_sse2.c:328:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.41                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse2.c:330:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.41                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse2.c:330:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.41                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse2.c:339:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 summ = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1)));
#20 47.41                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse41.c:1379:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 summ = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4)));
#20 47.41                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse2.c:341:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41 lpc_intrin_sse41.c:1380:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]                                                _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.41 
#20 47.41                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.41                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 47.41                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse2.c:341:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.41                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse41.c:1381:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.41                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse41.c:1382:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.41                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse41.c:1384:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.41                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse41.c:1384:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.41                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse41.c:1395:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 summ = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3)));
#20 47.41                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse41.c:1396:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 47.41                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse41.c:1397:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.41                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse41.c:1399:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.41                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse41.c:1399:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.41                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.41                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.41 lpc_intrin_sse41.c:1411:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.42                                                 summ = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2)));
#20 47.42                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.42 lpc_intrin_sse41.c:1412:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.42                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 47.42                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.42 lpc_intrin_sse41.c:1414:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.42                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.42                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.42 lpc_intrin_sse41.c:1414:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.42                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.42                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.42 lpc_intrin_sse41.c:1423:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.42                                                 summ = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1)));
#20 47.42                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.42 lpc_intrin_sse41.c:1425:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.42                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.42                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 47.42 lpc_intrin_sse41.c:1425:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.42                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 47.42                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 47.44 lpc_intrin_sse2.c:420:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.44                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));  // 0  0  q[1]  q[0]
#20 47.44                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.44 lpc_intrin_sse2.c:421:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.44                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));  // 0  0  q[3]  q[2]
#20 47.44                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.44 lpc_intrin_sse2.c:422:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.44                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));  // 0  0  q[5]  q[4]
#20 47.44                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.44 lpc_intrin_sse2.c:423:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.44                                         xmm3 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+6));  // 0  0  q[7]  q[6]
#20 47.44                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.44 lpc_intrin_sse2.c:424:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.44                                         xmm4 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+8));  // 0  0  q[9]  q[8]
#20 47.44                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.44 lpc_intrin_sse2.c:425:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.45                                         xmm5 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+10)); // 0  0  q[11] q[10]
#20 47.45                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.45 lpc_intrin_sse2.c:438:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.45                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-12));  // 0   0        d[i-11]  d[i-12]
#20 47.45                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.45 lpc_intrin_sse2.c:444:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.45                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-10));
#20 47.45                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.45 lpc_intrin_sse2.c:451:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.45                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-8));
#20 47.45                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.45 lpc_intrin_sse2.c:458:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.45                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 47.45                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.45 lpc_intrin_sse2.c:465:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.46                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 47.46                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.46 lpc_intrin_sse2.c:472:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.46                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.46                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.46 lpc_intrin_sse2.c:483:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.46                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 47.46                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.46 lpc_intrin_sse2.c:484:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.46                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 47.46                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.46 lpc_intrin_sse2.c:485:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.46                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 47.46                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.46 lpc_intrin_sse2.c:486:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.46                                         xmm3 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+6));
#20 47.46                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.46 lpc_intrin_sse2.c:487:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.46                                         xmm4 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+8));
#20 47.46                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.47 lpc_intrin_sse2.c:504:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.47                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-10));
#20 47.47                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.47 lpc_intrin_sse2.c:511:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.47                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-8));
#20 47.47                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.47 lpc_intrin_sse2.c:518:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.47                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 47.47                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.47 lpc_intrin_sse2.c:525:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.47                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 47.47                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:532:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.48                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:545:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 47.48                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:546:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 47.48                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:547:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 47.48                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:548:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                         xmm3 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+6));
#20 47.48                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:549:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                         xmm4 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+8));
#20 47.48                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:561:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-10));
#20 47.48                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:567:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-8));
#20 47.48                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:574:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 47.48                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:581:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 47.48                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:588:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.48                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:599:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 47.48                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:600:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 47.48                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:601:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 47.48                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:602:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                         xmm3 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+6));
#20 47.48                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:618:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-8));
#20 47.48                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:625:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 47.48                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:632:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 47.48                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:639:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.48                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:654:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 47.48                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:655:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 47.48                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:656:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 47.48                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.48 lpc_intrin_sse2.c:657:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.48                                         xmm3 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+6));
#20 47.48                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:668:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-8));
#20 47.49                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:674:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 47.49                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:681:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 47.49                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:688:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.49                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:699:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 47.49                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:700:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 47.49                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:701:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 47.49                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:716:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 47.49                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:723:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 47.49                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:730:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.49                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:743:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 47.49                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:744:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 47.49                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:745:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 47.49                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:755:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 47.49                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:761:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 47.49                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:768:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.49                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:779:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 47.49                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:780:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 47.49                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:794:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 47.49                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:801:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.49                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:816:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 47.49                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:817:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 47.49                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:826:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 47.49                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:832:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.49                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:843:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 47.49                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:856:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.49                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:869:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 47.49                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.49 lpc_intrin_sse2.c:876:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 47.49                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 47.49                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 47.51   CC       md5.lo
#20 47.51   CC       memory.lo
#20 47.51   CC       metadata_iterators.lo
#20 47.58   CC       metadata_object.lo
#20 47.79 102 warnings generated.
#20 47.94   CC       stream_decoder.lo
#20 48.05 174 warnings generated.
#20 48.15 lpc_intrin_avx2.c:80:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.15                                                 summ = _mm256_madd_epi16(q11, _mm256_loadu_si256((const __m256i*)(data+i-12)));
#20 48.15                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_avx2.c:81:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.15                                                 mull = _mm256_madd_epi16(q10, _mm256_loadu_si256((const __m256i*)(data+i-11))); summ = _mm256_add_epi32(summ, mull);
#20 48.15                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_avx2.c:82:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.15                                                 mull = _mm256_madd_epi16(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10))); summ = _mm256_add_epi32(summ, mull);
#20 48.15                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_avx2.c:83:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.15                                                 mull = _mm256_madd_epi16(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.15                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_avx2.c:84:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.16                                                 mull = _mm256_madd_epi16(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.16                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.16 lpc_intrin_avx2.c:85:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.16                                                 mull = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.16                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.16 lpc_intrin_avx2.c:86:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.16                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.16                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.16 lpc_intrin_avx2.c:87:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.16                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.16                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.16 lpc_intrin_avx2.c:88:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.16                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.16                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.16 lpc_intrin_avx2.c:89:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.16                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.16                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.16 lpc_intrin_avx2.c:90:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.16                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.16                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.16 lpc_intrin_avx2.c:91:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.17                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_avx2.c:93:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.17                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.17                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_avx2.c:93:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.17                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.17                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_avx2.c:112:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.17                                                 summ = _mm256_madd_epi16(q10, _mm256_loadu_si256((const __m256i*)(data+i-11)));
#20 48.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_avx2.c:113:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.17                                                 mull = _mm256_madd_epi16(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10))); summ = _mm256_add_epi32(summ, mull);
#20 48.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_avx2.c:114:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.17                                                 mull = _mm256_madd_epi16(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_avx2.c:115:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.17                                                 mull = _mm256_madd_epi16(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_avx2.c:116:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.17                                                 mull = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_avx2.c:117:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.17                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_avx2.c:118:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.17                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_avx2.c:119:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.17                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_avx2.c:120:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.17                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_avx2.c:121:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.17                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_avx2.c:122:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.17                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.17                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_avx2.c:124:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.17                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.17                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_avx2.c:124:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.17                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.17                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_avx2.c:144:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.18                                                 summ = _mm256_madd_epi16(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10)));
#20 48.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_avx2.c:145:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.18                                                 mull = _mm256_madd_epi16(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_avx2.c:146:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.18                                                 mull = _mm256_madd_epi16(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_avx2.c:147:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.18                                                 mull = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_avx2.c:148:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.18                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_avx2.c:149:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.18                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_avx2.c:150:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.18                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_avx2.c:151:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.18                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_avx2.c:152:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.18                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_avx2.c:153:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.18                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_avx2.c:155:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.18                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.18                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_avx2.c:155:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.18                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.18                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_avx2.c:172:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.18                                                 summ = _mm256_madd_epi16(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9 )));
#20 48.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_avx2.c:173:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.18                                                 mull = _mm256_madd_epi16(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_avx2.c:174:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.18                                                 mull = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_avx2.c:175:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.18                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_avx2.c:176:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.18                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_avx2.c:177:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.18                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.18                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:178:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:179:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:180:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:182:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.19                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:182:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.19                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:202:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 summ = _mm256_madd_epi16(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8 )));
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:203:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:204:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:205:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:206:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:207:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:208:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:209:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:211:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.19                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:211:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.19                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:226:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 summ = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 )));
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:227:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:228:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:229:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:230:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:231:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:232:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:234:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.19                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:234:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.19                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:250:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 summ = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 )));
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:251:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:252:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:253:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:254:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:255:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.19                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:257:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.19                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.19                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_avx2.c:257:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.20                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:270:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 summ = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 )));
#20 48.20                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:271:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.20                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:272:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.20                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:273:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.20                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:274:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.20                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:276:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.20                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:276:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.20                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:292:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 summ = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 )));
#20 48.20                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:293:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.20                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:294:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.20                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:295:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.20                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:297:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.20                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:297:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.20                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:308:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 summ = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 )));
#20 48.20                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:309:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.20                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:310:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.20                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:312:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.20                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:312:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.20                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:324:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 summ = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 )));
#20 48.20                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:325:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.20                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:327:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.20                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:327:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.20                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:336:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 summ = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 )));
#20 48.20                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:338:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.20                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_avx2.c:338:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.20                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.20                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:435:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.24                                                 summ = _mm256_mullo_epi32(q11, _mm256_loadu_si256((const __m256i*)(data+i-12)));
#20 48.24                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:436:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.24                                                 mull = _mm256_mullo_epi32(q10, _mm256_loadu_si256((const __m256i*)(data+i-11))); summ = _mm256_add_epi32(summ, mull);
#20 48.24                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:437:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.24                                                 mull = _mm256_mullo_epi32(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10))); summ = _mm256_add_epi32(summ, mull);
#20 48.24                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:438:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.24                                                 mull = _mm256_mullo_epi32(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9)));  summ = _mm256_add_epi32(summ, mull);
#20 48.24                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:439:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.24                                                 mull = _mm256_mullo_epi32(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8)));  summ = _mm256_add_epi32(summ, mull);
#20 48.24                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24 lpc_intrin_avx2.c:440:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.25                                                 mull = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));  summ = _mm256_add_epi32(summ, mull);
#20 48.25                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_avx2.c:441:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.25                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 48.25                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_avx2.c:442:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.25                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 48.25                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_avx2.c:443:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.25                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 48.25                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_avx2.c:444:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.25                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 48.25                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_avx2.c:445:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.25                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 48.25                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_avx2.c:446:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.25                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.25                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_avx2.c:448:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.25                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.25                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_avx2.c:448:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.25                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.25                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_avx2.c:467:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.25                                                 summ = _mm256_mullo_epi32(q10, _mm256_loadu_si256((const __m256i*)(data+i-11)));
#20 48.25                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_avx2.c:468:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.25                                                 mull = _mm256_mullo_epi32(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10))); summ = _mm256_add_epi32(summ, mull);
#20 48.25                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.25 lpc_intrin_avx2.c:469:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.25                                                 mull = _mm256_mullo_epi32(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9)));  summ = _mm256_add_epi32(summ, mull);
#20 48.25                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_avx2.c:470:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.26                                                 mull = _mm256_mullo_epi32(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8)));  summ = _mm256_add_epi32(summ, mull);
#20 48.26                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_avx2.c:471:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.26                                                 mull = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));  summ = _mm256_add_epi32(summ, mull);
#20 48.26                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_avx2.c:472:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.26                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 48.26                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_avx2.c:473:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.26                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 48.26                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_avx2.c:474:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.26                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 48.26                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_avx2.c:475:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.26                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 48.26                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_avx2.c:476:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.26                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 48.26                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_avx2.c:477:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.26                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.26                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_avx2.c:479:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.26                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.26                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_avx2.c:479:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.26                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.26                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_avx2.c:499:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.26                                                 summ = _mm256_mullo_epi32(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10)));
#20 48.26                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_avx2.c:500:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.26                                                 mull = _mm256_mullo_epi32(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9)));  summ = _mm256_add_epi32(summ, mull);
#20 48.26                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.26 lpc_intrin_avx2.c:501:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.26                                                 mull = _mm256_mullo_epi32(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8)));  summ = _mm256_add_epi32(summ, mull);
#20 48.26                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.27 lpc_intrin_avx2.c:502:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.27                                                 mull = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));  summ = _mm256_add_epi32(summ, mull);
#20 48.27                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.27 lpc_intrin_avx2.c:503:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.27                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 48.27                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.27 lpc_intrin_avx2.c:504:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.27                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 48.27                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.27 lpc_intrin_avx2.c:505:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.27                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 48.27                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.27 lpc_intrin_avx2.c:506:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.27                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 48.27                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.27 lpc_intrin_avx2.c:507:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.27                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 48.27                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.27 lpc_intrin_avx2.c:508:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.27                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.27                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.27 lpc_intrin_avx2.c:510:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.27                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.27                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.27 lpc_intrin_avx2.c:510:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.28                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.28                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_avx2.c:527:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.28                                                 summ = _mm256_mullo_epi32(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9)));
#20 48.28                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_avx2.c:528:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.28                                                 mull = _mm256_mullo_epi32(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8)));  summ = _mm256_add_epi32(summ, mull);
#20 48.28                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_avx2.c:529:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.28                                                 mull = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));  summ = _mm256_add_epi32(summ, mull);
#20 48.28                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_avx2.c:530:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.28                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 48.28                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_avx2.c:531:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.28                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 48.28                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_avx2.c:532:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.28                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 48.28                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_avx2.c:533:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.28                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 48.28                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_avx2.c:534:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.28                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 48.28                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.28 lpc_intrin_avx2.c:535:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.29                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.29                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 lpc_intrin_avx2.c:537:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.29                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.29                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.29 lpc_intrin_avx2.c:537:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.29                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.29                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 lpc_intrin_avx2.c:557:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.29                                                 summ = _mm256_mullo_epi32(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8)));
#20 48.29                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 lpc_intrin_avx2.c:558:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.29                                                 mull = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));  summ = _mm256_add_epi32(summ, mull);
#20 48.29                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 lpc_intrin_avx2.c:559:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.29                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 48.29                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 lpc_intrin_avx2.c:560:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.29                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 48.29                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.29 lpc_intrin_avx2.c:561:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.30                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 48.30                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 lpc_intrin_avx2.c:562:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.30                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 48.30                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 lpc_intrin_avx2.c:563:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.30                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 48.30                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 lpc_intrin_avx2.c:564:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.30                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.30                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 lpc_intrin_avx2.c:566:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.30                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.30                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.30 lpc_intrin_avx2.c:566:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.30                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.30                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.30 lpc_intrin_avx2.c:581:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.31                                                 summ = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));
#20 48.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_avx2.c:582:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.31                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 48.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_avx2.c:583:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.31                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 48.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_avx2.c:584:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.31                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 48.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_avx2.c:585:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.31                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 48.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_avx2.c:586:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.31                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 48.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_avx2.c:587:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.31                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_avx2.c:589:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.31                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.31                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_avx2.c:589:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.31                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.31                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_avx2.c:605:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.31                                                 summ = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));
#20 48.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_avx2.c:606:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.31                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 48.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_avx2.c:607:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.31                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 48.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_avx2.c:608:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.31                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 48.31                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.31 lpc_intrin_avx2.c:609:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.32                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 48.32                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.32 lpc_intrin_avx2.c:610:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.32                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.32                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:612:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.33                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:612:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.33                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:625:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 summ = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));
#20 48.33                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:626:57: warning:   CC       stream_encoder.lo
#20 48.33 cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 48.33                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:627:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 48.33                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:628:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 48.33                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:629:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.33                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:631:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.33                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:631:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.33                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:647:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 summ = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));
#20 48.33                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:648:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 48.33                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:649:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 48.33                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:650:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.33                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:652:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.33                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:652:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.33                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:663:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 summ = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));
#20 48.33                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:664:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 48.33                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:665:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.33                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:667:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.33                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:667:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.33                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.33 lpc_intrin_avx2.c:679:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.33                                                 summ = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));
#20 48.33                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.34 lpc_intrin_avx2.c:680:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.34                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 48.34                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.34 lpc_intrin_avx2.c:682:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.34                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.34                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.34 lpc_intrin_avx2.c:682:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.34                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.34                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.34 lpc_intrin_avx2.c:691:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.34                                                 summ = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));
#20 48.34                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.34 lpc_intrin_avx2.c:693:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.34                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.34                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.34 lpc_intrin_avx2.c:693:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.34                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.34                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.36 lpc_intrin_avx2.c:768:42: warning: cast from 'FLAC__int32 *' (aka 'int *') to 'const __m256i *' increases required alignment from 16 to 32 [-Wcast-align]
#20 48.36         const __m256i pack = _mm256_loadu_si256((const __m256i *)pack_arr);
#20 48.36                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.36 lpc_intrin_avx2.c:794:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.36                                                 summ = _mm256_mul_epi32(q11, _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-12))));
#20 48.36                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.36 lpc_intrin_avx2.c:795:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.36                                                 mull = _mm256_mul_epi32(q10, _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-11)))); summ = _mm256_add_epi64(summ, mull);
#20 48.36                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.36 lpc_intrin_avx2.c:796:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.36                                                 mull = _mm256_mul_epi32(q9,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-10)))); summ = _mm256_add_epi64(summ, mull);
#20 48.36                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.36 lpc_intrin_avx2.c:797:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.36                                                 mull = _mm256_mul_epi32(q8,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-9 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.36                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.36 lpc_intrin_avx2.c:798:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.36                                                 mull = _mm256_mul_epi32(q7,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-8 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.36                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.36 lpc_intrin_avx2.c:799:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.37                                                 mull = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.37                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.37 lpc_intrin_avx2.c:800:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.37                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.37                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.37 lpc_intrin_avx2.c:801:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.37                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.37                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.37 lpc_intrin_avx2.c:802:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.37                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.37                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.37 lpc_intrin_avx2.c:803:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.37                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.37                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.37 lpc_intrin_avx2.c:804:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.37                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.37                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.37 lpc_intrin_avx2.c:805:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.37                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.37                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.37 lpc_intrin_avx2.c:807:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.37                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.37                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.37 lpc_intrin_avx2.c:807:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.37                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.37                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.37 lpc_intrin_avx2.c:826:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.37                                                 summ = _mm256_mul_epi32(q10, _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-11))));
#20 48.37                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.37 lpc_intrin_avx2.c:827:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.37                                                 mull = _mm256_mul_epi32(q9,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-10)))); summ = _mm256_add_epi64(summ, mull);
#20 48.37                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.37 lpc_intrin_avx2.c:828:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.37                                                 mull = _mm256_mul_epi32(q8,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-9 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.37                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.37 lpc_intrin_avx2.c:829:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.37                                                 mull = _mm256_mul_epi32(q7,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-8 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.37                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.37 lpc_intrin_avx2.c:830:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.37                                                 mull = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.37                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.37 lpc_intrin_avx2.c:831:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.37                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.37                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.37 lpc_intrin_avx2.c:832:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.37                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.37                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.37 lpc_intrin_avx2.c:833:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.37                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.37                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.37 lpc_intrin_avx2.c:834:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.37                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.37                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.38 lpc_intrin_avx2.c:835:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.38                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.38                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.38 lpc_intrin_avx2.c:836:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.38                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.38                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.38 lpc_intrin_avx2.c:838:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.38                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.38                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.38 lpc_intrin_avx2.c:838:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.38                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.38                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.38 lpc_intrin_avx2.c:858:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.38                                                 summ = _mm256_mul_epi32(q9,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-10))));
#20 48.38                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.38 lpc_intrin_avx2.c:859:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.38                                                 mull = _mm256_mul_epi32(q8,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-9 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.38                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.38 lpc_intrin_avx2.c:860:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.38                                                 mull = _mm256_mul_epi32(q7,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-8 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.38                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.38 lpc_intrin_avx2.c:861:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.38                                                 mull = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.38                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.38 lpc_intrin_avx2.c:862:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.38                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.38                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.38 lpc_intrin_avx2.c:863:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.38                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.38                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.38 lpc_intrin_avx2.c:864:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.38                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.38                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.38 lpc_intrin_avx2.c:865:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.38                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.38                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.38 lpc_intrin_avx2.c:866:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.38                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.38                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.38 lpc_intrin_avx2.c:867:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.38                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.38                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.38 lpc_intrin_avx2.c:869:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.38                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.38                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.38 lpc_intrin_avx2.c:869:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.38                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.38                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.38 lpc_intrin_avx2.c:886:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.38                                                 summ = _mm256_mul_epi32(q8,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-9 ))));
#20 48.38                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:887:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q7,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-8 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:888:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:889:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:890:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:891:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:892:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:893:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:894:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:896:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.39                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:896:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.39                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:916:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 summ = _mm256_mul_epi32(q7,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-8 ))));
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:917:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:918:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:919:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:920:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:921:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:922:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:923:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:925:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.39                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:925:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.39                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:940:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 summ = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 ))));
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:941:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:942:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:943:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:944:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:945:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:946:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:948:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.39                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:948:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.39                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:964:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 summ = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 ))));
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:965:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:966:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:967:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.39 lpc_intrin_avx2.c:968:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.39                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.39                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.40 lpc_intrin_avx2.c:969:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.40                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.40                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.40 stream_decoder.c:2172:13: warning: variable 'crc8' set but not used [-Wunused-but-set-variable]
#20 48.40         FLAC__byte crc8, raw_header[16]; /* MAGIC NUMBER based on the maximum frame header size, including CRC */
#20 48.40                    ^
#20 48.40 lpc_intrin_avx2.c:971:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.40                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.40                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.40 lpc_intrin_avx2.c:971:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.40                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.40                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.40 lpc_intrin_avx2.c:984:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.40                                                 summ = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 ))));
#20 48.40                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.40 lpc_intrin_avx2.c:985:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.40                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.40                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.40 lpc_intrin_avx2.c:986:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.40                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.40                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.40 lpc_intrin_avx2.c:987:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.40                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.40                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.40 lpc_intrin_avx2.c:988:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.40                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.40                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.40 lpc_intrin_avx2.c:990:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.40                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.40                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.40 lpc_intrin_avx2.c:990:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.40                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.40                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.40 lpc_intrin_avx2.c:1006:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.40                                                 summ = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 ))));
#20 48.40                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.40 lpc_intrin_avx2.c:1007:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.40                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.41                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.41 lpc_intrin_avx2.c:1008:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.41                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.41                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.41 lpc_intrin_avx2.c:1009:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.41                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.41                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.41 lpc_intrin_avx2.c:1011:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.41                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.41                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.41 lpc_intrin_avx2.c:1011:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.41                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.41                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.42 lpc_intrin_avx2.c:1022:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.42                                                 summ = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 ))));
#20 48.42                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.42 lpc_intrin_avx2.c:1023:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.42                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.42                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.42 lpc_intrin_avx2.c:1024:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.42                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.42                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.42 lpc_intrin_avx2.c:1026:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.42                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.42                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.42 lpc_intrin_avx2.c:1026:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.42                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.42                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.42 lpc_intrin_avx2.c:1038:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.42                                                 summ = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 ))));
#20 48.42                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.42 lpc_intrin_avx2.c:1039:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.42                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 48.42                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.42 lpc_intrin_avx2.c:1041:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.42                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.42                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.42 lpc_intrin_avx2.c:1041:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.42                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.42                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.42 lpc_intrin_avx2.c:1050:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.42                                                 summ = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 ))));
#20 48.42                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.42 lpc_intrin_avx2.c:1052:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.42                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.43                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.43 lpc_intrin_avx2.c:1052:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.43                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 48.43                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.88   CC       stream_encoder_intrin_sse2.lo
#20 49.14   CC       stream_encoder_intrin_ssse3.lo
#20 49.15 stream_encoder_intrin_sse2.c:91:55: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.15                                         __m128i mm_res = local_abs_epi32(_mm_loadu_si128((const __m128i*)(residual+residual_sample)));
#20 49.15                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.18 stream_encoder_intrin_sse2.c:124:55: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.18                                         __m128i mm_res = local_abs_epi32(_mm_loadl_epi64((const __m128i*)(residual+residual_sample))); /*  0   0  |r1|   |r0| */
#20 49.18                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.18 stream_encoder_intrin_sse2.c:135:22: warning: cast from 'FLAC__uint64 *' (aka 'unsigned long *') to '__m128i *' increases required alignment from 8 to 16 [-Wcast-align]
#20 49.18                                 _mm_storel_epi64((__m128i*)(abs_residual_partition_sums+partition), mm_sum);
#20 49.18                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.34 3 warnings generated.
#20 49.50 307 warnings generated.
#20 49.53 stream_encoder_intrin_ssse3.c:80:53: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.53                                         __m128i mm_res = _mm_abs_epi32(_mm_loadu_si128((const __m128i*)(residual+residual_sample)));
#20 49.53                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.53 stream_encoder_intrin_ssse3.c:113:53: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.53                                         __m128i mm_res = _mm_abs_epi32(_mm_loadl_epi64((const __m128i*)(residual+residual_sample))); /*  0   0  |r1|   |r0| */
#20 49.53                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.53 stream_encoder_intrin_ssse3.c:124:22: warning: cast from 'FLAC__uint64 *' (aka 'unsigned long *') to '__m128i *' increases required alignment from 8 to 16 [-Wcast-align]
#20 49.53                                 _mm_storel_epi64((__m128i*)(abs_residual_partition_sums+partition), mm_sum);
#20 49.53                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.64   CC       stream_encoder_intrin_avx2.lo
#20 49.65 3 warnings generated.
#20 49.73   CC       stream_encoder_framing.lo
#20 49.95   CC       window.lo
#20 49.99 1 warning generated.
#20 50.16   CC       ogg_decoder_aspect.lo
#20 50.59   CC       ogg_encoder_aspect.lo
#20 50.59   CC       ogg_helper.lo
#20 50.60 stream_encoder_intrin_avx2.c:70:59: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 50.60                                         __m256i res256 = _mm256_abs_epi32(_mm256_loadu_si256((const __m256i*)(residual+residual_sample)));
#20 50.60                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 50.60 stream_encoder_intrin_avx2.c:77:53: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 50.60                                         __m128i res128 = _mm_abs_epi32(_mm_loadu_si128((const __m128i*)(residual+residual_sample)));
#20 50.60                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 50.61 stream_encoder_intrin_avx2.c:102:53: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 50.61                                         __m128i res128 = _mm_abs_epi32(_mm_loadu_si128((const __m128i*)(residual+residual_sample)));
#20 50.61                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 50.61 stream_encoder_intrin_avx2.c:110:53: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 50.61                                         __m128i res128 = _mm_abs_epi32(_mm_loadl_epi64((const __m128i*)(residual+residual_sample)));
#20 50.61                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 50.61 stream_encoder_intrin_avx2.c:121:22: warning: cast from 'FLAC__uint64 *' (aka 'unsigned long *') to '__m128i *' increases required alignment from 8 to 16 [-Wcast-align]
#20 50.61                                 _mm_storel_epi64((__m128i*)(abs_residual_partition_sums+partition), sum128);
#20 50.61                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 50.73 5 warnings generated.
#20 50.99   CC       ogg_mapping.lo
#20 52.41   CCLD     libFLAC.la
#20 52.41   CCLD     libFLAC-static.la
#20 53.58 make[4]: Leaving directory '/src/flac/src/libFLAC'
#20 53.58 make[3]: Leaving directory '/src/flac/src/libFLAC'
#20 53.58 Making all in share
#20 53.58 make[3]: Entering directory '/src/flac/src/share'
#20 53.59   CC       getopt/getopt.lo
#20 53.59   CC       getopt/getopt1.lo
#20 53.59   CC       grabbag/alloc.lo
#20 53.59   CC       grabbag/cuesheet.lo
#20 53.59   CC       grabbag/file.lo
#20 53.59   CC       grabbag/picture.lo
#20 53.60   CC       grabbag/replaygain.lo
#20 53.60   CC       grabbag/seektable.lo
#20 53.86   CC       grabbag/snprintf.lo
#20 53.89   CC       utf8/charset.lo
#20 54.05   CC       utf8/iconvert.lo
#20 54.05   CC       utf8/utf8.lo
#20 54.06   CC       replaygain_analysis/replaygain_analysis.lo
#20 54.14   CC       replaygain_synthesis/libreplaygain_synthesis_la-replaygain_synthesis.lo
#20 54.57   CCLD     utf8/libutf8.la
#20 54.64   CCLD     getopt/libgetopt.la
#20 54.83   CCLD     replaygain_synthesis/libreplaygain_synthesis.la
#20 55.02   CCLD     replaygain_analysis/libreplaygain_analysis.la
#20 55.05   CCLD     grabbag/libgrabbag.la
#20 55.20 make[3]: Leaving directory '/src/flac/src/share'
#20 55.20 Making all in flac
#20 55.20 make[3]: Entering directory '/src/flac/src/flac'
#20 55.20   CC       analyze.o
#20 55.21   CC       decode.o
#20 55.21   CC       encode.o
#20 55.21   CC       main.o
#20 55.21   CC       foreign_metadata.o
#20 55.21   CC       utils.o
#20 55.21   CC       local_string_utils.o
#20 55.21   CC       vorbiscomment.o
#20 56.53   CCLD     flac
#20 56.97 make[3]: Leaving directory '/src/flac/src/flac'
#20 56.97 Making all in metaflac
#20 56.98 make[3]: Entering directory '/src/flac/src/metaflac'
#20 56.98   CC       main.o
#20 56.98   CC       operations.o
#20 56.98   CC       operations_shorthand_cuesheet.o
#20 56.98   CC       operations_shorthand_picture.o
#20 56.98   CC       operations_shorthand_seektable.o
#20 56.98   CC       operations_shorthand_streaminfo.o
#20 56.98   CC       options.o
#20 56.98   CC       operations_shorthand_vorbiscomment.o
#20 57.09   CC       usage.o
#20 57.15   CC       utils.o
#20 57.71   CCLD     metaflac
#20 58.11 make[3]: Leaving directory '/src/flac/src/metaflac'
#20 58.11 Making all in test_grabbag
#20 58.11 make[3]: Entering directory '/src/flac/src/test_grabbag'
#20 58.12 Making all in cuesheet
#20 58.12 make[4]: Entering directory '/src/flac/src/test_grabbag/cuesheet'
#20 58.12 make[4]: Nothing to be done for 'all'.
#20 58.12 make[4]: Leaving directory '/src/flac/src/test_grabbag/cuesheet'
#20 58.12 Making all in picture
#20 58.13 make[4]: Entering directory '/src/flac/src/test_grabbag/picture'
#20 58.13 make[4]: Nothing to be done for 'all'.
#20 58.13 make[4]: Leaving directory '/src/flac/src/test_grabbag/picture'
#20 58.13 make[4]: Entering directory '/src/flac/src/test_grabbag'
#20 58.13 make[4]: Nothing to be done for 'all-am'.
#20 58.13 make[4]: Leaving directory '/src/flac/src/test_grabbag'
#20 58.13 make[3]: Leaving directory '/src/flac/src/test_grabbag'
#20 58.13 Making all in test_libs_common
#20 58.14 make[3]: Entering directory '/src/flac/src/test_libs_common'
#20 58.14   CC       file_utils_flac.lo
#20 58.14   CC       metadata_utils.lo
#20 58.71   CCLD     libtest_libs_common.la
#20 58.86 make[3]: Leaving directory '/src/flac/src/test_libs_common'
#20 58.86 Making all in test_libFLAC
#20 58.87 make[3]: Entering directory '/src/flac/src/test_libFLAC'
#20 58.87 make[3]: Nothing to be done for 'all'.
#20 58.87 make[3]: Leaving directory '/src/flac/src/test_libFLAC'
#20 58.87 Making all in test_seeking
#20 58.87 make[3]: Entering directory '/src/flac/src/test_seeking'
#20 58.87 make[3]: Nothing to be done for 'all'.
#20 58.87 make[3]: Leaving directory '/src/flac/src/test_seeking'
#20 58.87 Making all in test_streams
#20 58.88 make[3]: Entering directory '/src/flac/src/test_streams'
#20 58.88 make[3]: Nothing to be done for 'all'.
#20 58.88 make[3]: Leaving directory '/src/flac/src/test_streams'
#20 58.88 Making all in utils
#20 58.88 make[3]: Entering directory '/src/flac/src/utils'
#20 58.89 Making all in flacdiff
#20 58.89 make[4]: Entering directory '/src/flac/src/utils/flacdiff'
#20 58.89 make[4]: Nothing to be done for 'all'.
#20 58.89 make[4]: Leaving directory '/src/flac/src/utils/flacdiff'
#20 58.89 Making all in flactimer
#20 58.90 make[4]: Entering directory '/src/flac/src/utils/flactimer'
#20 58.90 make[4]: Nothing to be done for 'all'.
#20 58.90 make[4]: Leaving directory '/src/flac/src/utils/flactimer'
#20 58.90 make[4]: Entering directory '/src/flac/src/utils'
#20 58.90 make[4]: Nothing to be done for 'all-am'.
#20 58.90 make[4]: Leaving directory '/src/flac/src/utils'
#20 58.90 make[3]: Leaving directory '/src/flac/src/utils'
#20 58.90 Making all in libFLAC++
#20 58.91 make[3]: Entering directory '/src/flac/src/libFLAC++'
#20 58.91   CXX      metadata.lo
#20 58.91   CXX      stream_decoder.lo
#20 58.91   CXX      stream_encoder.lo
#20 61.36   CXXLD    libFLAC++.la
#20 61.36   CXXLD    libFLAC++-static.la
#20 61.58 clang-14: warning: argument unused during compilation: '-pthread' [-Wunused-command-line-argument]
#20 61.58 clang-14: warning: argument unused during compilation: '-pthread' [-Wunused-command-line-argument]
#20 61.60 copying selected object files to avoid basename conflicts...
#20 61.76 make[3]: Leaving directory '/src/flac/src/libFLAC++'
#20 61.76 Making all in test_libFLAC++
#20 61.77 make[3]: Entering directory '/src/flac/src/test_libFLAC++'
#20 61.77 make[3]: Nothing to be done for 'all'.
#20 61.77 make[3]: Leaving directory '/src/flac/src/test_libFLAC++'
#20 61.77 make[3]: Entering directory '/src/flac/src'
#20 61.77 make[3]: Nothing to be done for 'all-am'.
#20 61.77 make[3]: Leaving directory '/src/flac/src'
#20 61.77 make[2]: Leaving directory '/src/flac/src'
#20 61.77 Making all in test
#20 61.78 make[2]: Entering directory '/src/flac/test'
#20 61.78 Making all in cuesheets
#20 61.79 make[3]: Entering directory '/src/flac/test/cuesheets'
#20 61.79 make[3]: Nothing to be done for 'all'.
#20 61.79 make[3]: Leaving directory '/src/flac/test/cuesheets'
#20 61.79 Making all in flac-to-flac-metadata-test-files
#20 61.79 make[3]: Entering directory '/src/flac/test/flac-to-flac-metadata-test-files'
#20 61.79 make[3]: Nothing to be done for 'all'.
#20 61.79 make[3]: Leaving directory '/src/flac/test/flac-to-flac-metadata-test-files'
#20 61.79 Making all in metaflac-test-files
#20 61.79 make[3]: Entering directory '/src/flac/test/metaflac-test-files'
#20 61.79 make[3]: Nothing to be done for 'all'.
#20 61.79 make[3]: Leaving directory '/src/flac/test/metaflac-test-files'
#20 61.79 Making all in pictures
#20 61.80 make[3]: Entering directory '/src/flac/test/pictures'
#20 61.80 make[3]: Nothing to be done for 'all'.
#20 61.80 make[3]: Leaving directory '/src/flac/test/pictures'
#20 61.80 make[3]: Entering directory '/src/flac/test'
#20 61.80 make[3]: Nothing to be done for 'all-am'.
#20 61.80 make[3]: Leaving directory '/src/flac/test'
#20 61.80 make[2]: Leaving directory '/src/flac/test'
#20 61.80 Making all in build
#20 61.81 make[2]: Entering directory '/src/flac/build'
#20 61.81 make[2]: Nothing to be done for 'all'.
#20 61.81 make[2]: Leaving directory '/src/flac/build'
#20 61.81 Making all in microbench
#20 61.81 make[2]: Entering directory '/src/flac/microbench'
#20 61.81   CC       benchmark_residual.o
#20 61.81   CC       util.o
#20 62.00   CCLD     benchmark_residual
#20 62.22 make[2]: Leaving directory '/src/flac/microbench'
#20 62.22 Making all in oss-fuzz
#20 62.22 make[2]: Entering directory '/src/flac/oss-fuzz'
#20 62.22 make[2]: Nothing to be done for 'all'.
#20 62.22 make[2]: Leaving directory '/src/flac/oss-fuzz'
#20 62.23 make[2]: Entering directory '/src/flac'
#20 62.23 make[2]: Leaving directory '/src/flac'
#20 62.23 make[1]: Leaving directory '/src/flac'
#20 62.23 + cd /src/fuzzing-headers
#20 62.23 + ./install.sh
#20 62.30 + cd /src/flac-fuzzers/
#20 62.30 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -D_GLIBCXX_DEBUG -I /src/flac/include/ -I /src/ExoPlayer/extensions/flac/src/main/jni/ -I /usr/lib/jvm/java-8-openjdk-amd64/include/ -I /usr/lib/jvm/java-8-openjdk-amd64/include/linux/ fuzzer_exo.cpp /src/flac/src/libFLAC++/.libs/libFLAC++.a /src/flac/src/libFLAC/.libs/libFLAC.a /src/libogg-install/lib/libogg.a /libAFL.a -o /out/fuzzer_exo
#20 63.24 In file included from fuzzer_exo.cpp:18:
#20 63.24 In file included from /src/ExoPlayer/extensions/flac/src/main/jni/include/flac_parser.h:30:
#20 63.24 /src/ExoPlayer/extensions/flac/src/main/jni/include/data_source.h:20:10: fatal error: 'jni.h' file not found
#20 63.24 #include <jni.h>
#20 63.24          ^~~~~~~
#20 63.30 1 error generated.
#20 63.30 Traceback (most recent call last):
#20 63.30   File "<string>", line 1, in <module>
#20 63.30   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 63.30     utils.build_benchmark()
#20 63.30   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 63.30     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 63.30   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 63.30     raise CalledProcessError(retcode, cmd)
#20 63.30 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2718786: .afl-flac_fuzzer_exo-builder] Error 1
/bin/sh: 1: source: not found
#2 [internal] load .dockerignore
#2 sha256:77aefee438cef6a98a99125460fb73fe567bb050faa19b6264c5b6efd09c69cc
#2 transferring context: 2B done
#2 DONE 0.9s

#1 [internal] load build definition from Dockerfile
#1 sha256:eff7b412c25b7bfd7472a7cda35263bad413ea78c41b4009a7d68f14ce12705d
#1 transferring dockerfile: 32B 0.0s done
#1 DONE 0.8s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#5 [1/9] FROM gcr.io/oss-fuzz-base/base-builder@sha256:4ad017ca53699eda684c1c444948c93a4af848fe34baee3a765d3c4693fe6a56
#5 sha256:3f10b3978a3951f6e2692fa5e5890ee5a755650381dedece7198ed0b1dcdaa8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo
#4 sha256:a2fbe73c3833545b45b576c9992dfb705a0693cbfe0f8d0d14ecbbfb8e22a4c2
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:2a99eed61bd02d21f0c6f2808a96b9835b9a6cce75b53801cc787c180ec6bdf9
#12 transferring context: 64B done
#12 DONE 0.0s

#6 [2/9] RUN apt-get update && apt-get install -y make autoconf automake libtool libtool-bin pkg-config gettext sudo default-jdk
#6 sha256:b8ce6b7769201fa13e6038993255d11f64bad3a1066aaf8d9f697dbee9febb71
#6 CACHED

#13 [8/9] COPY fuzzer_exo.cpp /src/flac-fuzzers
#13 sha256:1f4072f8982996a81e36a4fcfe08375f05cb85f4ac89d35b0124db5860777744
#13 CACHED

#7 [3/9] RUN git clone --depth 1 https://github.com/xiph/flac.git
#7 sha256:359862a237d7e5fc5283b1521fe5245908e748b207c0caa638d9b5ed0d77d0be
#7 CACHED

#8 [4/9] RUN git clone --depth 1 https://github.com/xiph/ogg.git
#8 sha256:39fa53f99d0c1fa4e7eb5f2e955aa6eefe27ccaa896e814503b739f3a5ed88d7
#8 CACHED

#9 [5/9] RUN git clone --depth 1 https://github.com/google/ExoPlayer.git
#9 sha256:fe43932883b911d6c3fcc97b1bd5617778deb339b432e9e0c51805e5c532a761
#9 CACHED

#10 [6/9] RUN git clone --depth 1 https://github.com/guidovranken/fuzzing-headers.git
#10 sha256:cd92431e177a633f2f99b96c6fca30da54fa784f62706be73a7b3b8ccda74924
#10 CACHED

#11 [7/9] RUN git clone --depth 1 https://github.com/guidovranken/flac-fuzzers.git
#11 sha256:00d413c4f967ed0ffc9191dfb7db2b29053da1facd6b3d81ff6bb660dbc4173b
#11 CACHED

#14 [9/9] COPY build.sh /src/
#14 sha256:e9b61b7ad9023645a1f3792a47c8fd0115c18f9d604f5a36f13f718d0b579446
#14 CACHED

#15 exporting to image
#15 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#15 exporting layers done
#15 writing image sha256:00b8a7fcff99df16f9078f3c06affd9e13a8d28d7edda5a950b578d089ef7111 0.0s done
#15 naming to gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo done
#15 DONE 0.2s

#16 exporting cache
#16 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#16 preparing build cache for export done
#16 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:30d3134957f88e83145cf892928036c528d63d26c00c3db8a0de7c469277acfc
#1 transferring dockerfile: 46B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:a460adcc23e10e6211d0199e40ceb59c43d08dc3f338eb6d437fc24dcc885570
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo:latest
#3 sha256:75851e499ee75ab0c843bda8ada84e920846da943fe81e9e508b8b4131a58852
#3 DONE 0.0s

#7 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/flac_fuzzer_exo
#7 sha256:90673f88336bbc1921494a0e989d3a05f86833fb50693e01e204a48f3faaa2a5
#7 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate
#4 sha256:236679cb9d9e071be2329edd700fc5970b426d1521f4cecaed39bcffe88c4d18
#4 DONE 0.0s

#5 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#5 sha256:07c39a69203b6eeb52ba4c79eb515491df80c6877733b5daac806584e4f85a25
#5 CACHED

#6 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#6 sha256:2806afed7fd6e4d15ae611dde90a37ad06ee457e240feb73e87f2e34fd8a9824
#6 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:3d07ac542f8d203c8d994e25f1028002ffe87e2dd05356d7fe78b021eb1aa5db 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate done
#8 DONE 0.2s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:a3b2f0e2622d2526a00018dbecaef86cd1ffcd6050a27fd110e77934f8d1e1ea
#2 transferring context: 34B done
#2 ...

#1 [internal] load build definition from Dockerfile
#1 sha256:d1e2c892f6a3c11e156e9d01a428bd93199f07c750ca90103ec2bbf2a8c095ea
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.7s

#2 [internal] load .dockerignore
#2 sha256:a3b2f0e2622d2526a00018dbecaef86cd1ffcd6050a27fd110e77934f8d1e1ea
#2 DONE 0.8s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:c60c52af9ddf3b990d60333fc6384eb8db26e06b1dc701897625085057a0bf47
#8 transferring context: 559B 0.0s done
#8 DONE 0.3s

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:bfc3b065631adf11ce318ac3534872265fcb05e76da8def45f86700c6e4600d4
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:8ee989273291c93173ab667d542a9a200528f29c238f8c32222b0a55dc3c597e
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:97bb9b57a28ed2b5593d01540976a4fc317afa9383a62415cdc6ddaa2ec3e2d0
#9 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:aac743fce18973902943a4d2c84da78edb7ada41ce50acd6f281910a2b442425
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a
#13 writing image sha256:139540fb22a119f888cb3e5ed6e013e8d868574697f5fb839e5da9e23de73e0a 0.2s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.5s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:10e77aa36bae843686d0c9ea382791d4218b6b9c1aeb8764a3603dba2569bcab
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 sha256:9ea8bf8315de55ef533e8e29911083d8e586bb299a54c5d16701bfba954de414
#2 transferring context: 34B done
#2 DONE 0.3s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate:latest
#3 sha256:65786f6db6a2c621e280d2502d33fa2ff2695d4b3e9de78d38de10034c4f2fc5
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:e1f9635ba699e451415383fb1c9c8976ea522ff5e1de9af8bc1ab8f669c1abc9
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo-intermediate
#6 sha256:074800b24ebc8e3fa3f627e2d93118f682b8bad32b8b0e132c94655fdc5f71ab
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo
#5 sha256:56d3c0d9d52a62d251865c34d45bcc2bdc9b8031b30f17bbbbeb6d7fd9c0bcff
#5 ERROR: gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo:latest: not found

#12 [internal] load build context
#12 sha256:e1f9635ba699e451415383fb1c9c8976ea522ff5e1de9af8bc1ab8f669c1abc9
#12 transferring context: 669.87kB 0.1s done
#12 DONE 0.5s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:06f8b4e46f269cc71b6828c8968ee529e7ce94107d90ee0323f2430c83790f88
#8 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:ad548d8bdf59fbdedcaa75ab267658d374b05f0be821544612813148da5713e5
#17 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:1aaf39dd1fc2e1332f6da1080f2d5cd5d80239e989daf5ca36d2240bca78a637
#11 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:8f86fb0ec657c16e7feecb9b63995254ec578bb7716be929f3b07c94a339721a
#14 CACHED

#15 [stage-1  8/13] COPY benchmarks/flac_fuzzer_exo/benchmark.yaml /
#15 sha256:1d42c935027fc9e6d59f9ae8541d27e2032573b19ebde120ac1198da2bb5c751
#15 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:efc25c4dfea0344bbc77da438ea09c26424fc28c414827ab904157b53ec85abf
#13 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:86bbc7d00f272ce2c5e9358d179404a63a1ceffeb5ad01de08cf4ce13e65e79c
#16 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:10bb0a3ca18f4d0d322ae7969514ed97d4b23c3c8a19a2ec4f246c0d0c495183
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:527e5871f1898dc68f91f671505b9ac9fcb04ed7452b162a0d6c326ad4117613
#10 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:aa504847e41c7148633f0e781d586bf8ddf8159286d4af6b6ac71e67dc0d6328
#18 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:e922f4ca0c616ca508b8853865204478c0921e8fc5f03ade1ef5b1e195635830
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:96fd24bacd41962b725bf25fc883c2f74f88d812f542304a86c8ecb365048fc7
#20 1.379 Run fuzzer_build to build the target
#20 1.497 FUZZ_TARGET = fuzzer_exo
#20 1.497 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 1.497 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 1.509 Building benchmark flac_fuzzer_exo with fuzzer afl
#20 1.513 + export ASAN_OPTIONS=detect_leaks=0
#20 1.513 + ASAN_OPTIONS=detect_leaks=0
#20 1.513 + [[ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard = *sanitize=address* ]]
#20 1.513 + [[ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard = *sanitize=memory* ]]
#20 1.513 + export 'CXXFLAGS=-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -D_GLIBCXX_DEBUG'
#20 1.513 + CXXFLAGS='-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -D_GLIBCXX_DEBUG'
#20 1.513 + mkdir /src/libogg-install
#20 1.515 + cd /src/ogg
#20 1.515 + ./autogen.sh
#20 1.517 Updating build configuration files for libogg, please wait....
#20 5.963 libtoolize: putting auxiliary files in '.'.
#20 5.963 libtoolize: copying file './ltmain.sh'
#20 6.006 libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
#20 6.006 libtoolize: copying file 'm4/libtool.m4'
#20 6.041 libtoolize: copying file 'm4/ltoptions.m4'
#20 6.080 libtoolize: copying file 'm4/ltsugar.m4'
#20 6.122 libtoolize: copying file 'm4/ltversion.m4'
#20 6.162 libtoolize: copying file 'm4/lt~obsolete.m4'
#20 10.88 configure.ac:5: installing './compile'
#20 10.88 configure.ac:5: installing './config.guess'
#20 10.88 configure.ac:5: installing './config.sub'
#20 10.89 configure.ac:9: installing './install-sh'
#20 10.89 configure.ac:9: installing './missing'
#20 11.10 src/Makefile.am: installing './depcomp'
#20 11.16 + ./configure --prefix=/src/libogg-install
#20 11.38 checking build system type... x86_64-pc-linux-gnu
#20 11.45 checking host system type... x86_64-pc-linux-gnu
#20 11.45 checking how to print strings... printf
#20 11.52 checking for gcc... clang
#20 11.58 checking whether the C compiler works... yes
#20 11.70 checking for C compiler default output file name... a.out
#20 11.70 checking for suffix of executables... 
#20 11.83 checking whether we are cross compiling... no
#20 11.97 checking for suffix of object files... o
#20 12.00 checking whether we are using the GNU C compiler... yes
#20 12.02 checking whether clang accepts -g... yes
#20 12.05 checking for clang option to accept ISO C89... none needed
#20 12.09 checking whether clang understands -c and -o together... yes
#20 12.13 checking for a sed that does not truncate output... /usr/bin/sed
#20 12.14 checking for grep that handles long lines and -e... /usr/bin/grep
#20 12.14 checking for egrep... /usr/bin/grep -E
#20 12.14 checking for fgrep... /usr/bin/grep -F
#20 12.15 checking for ld used by clang... /usr/bin/ld
#20 12.16 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 12.17 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 12.17 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 12.21 checking whether ln -s works... yes
#20 12.21 checking the maximum length of command line arguments... 1572864
#20 12.22 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 12.22 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 12.22 checking for /usr/bin/ld option to reload object files... -r
#20 12.22 checking for objdump... objdump
#20 12.22 checking how to recognize dependent libraries... pass_all
#20 12.22 checking for dlltool... no
#20 12.23 checking how to associate runtime and link libraries... printf %s\n
#20 12.23 checking for ar... ar
#20 12.23 checking for archiver @FILE support... @
#20 12.27 checking for strip... strip
#20 12.27 checking for ranlib... ranlib
#20 12.27 checking for gawk... no
#20 12.27 checking for mawk... mawk
#20 12.27 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 12.45 checking for sysroot... no
#20 12.45 checking for a working dd... /usr/bin/dd
#20 12.46 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 12.49 checking for mt... no
#20 12.49 checking if : is a manifest tool... no
#20 12.50 checking how to run the C preprocessor... clang -E
#20 12.59 checking for ANSI C header files... yes
#20 12.84 checking for sys/types.h... yes
#20 12.89 checking for sys/stat.h... yes
#20 12.95 checking for stdlib.h... yes
#20 13.00 checking for string.h... yes
#20 13.06 checking for memory.h... yes
#20 13.12 checking for strings.h... yes
#20 13.18 checking for inttypes.h... yes
#20 13.24 checking for stdint.h... yes
#20 13.31 checking for unistd.h... yes
#20 13.37 checking for dlfcn.h... yes
#20 13.43 checking for objdir... .libs
#20 13.60 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 13.62 checking for clang option to produce PIC... -fPIC -DPIC
#20 13.63 checking if clang PIC flag -fPIC -DPIC works... yes
#20 13.66 checking if clang static flag -static works... yes
#20 13.83 checking if clang supports -c -o file.o... yes
#20 13.88 checking if clang supports -c -o file.o... (cached) yes
#20 13.88 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 13.90 checking whether -lc should be explicitly linked in... no
#20 13.96 checking dynamic linker characteristics... GNU/Linux ld.so
#20 14.13 checking how to hardcode library paths into programs... immediate
#20 14.13 checking whether stripping libraries is possible... yes
#20 14.13 checking if libtool supports shared libraries... yes
#20 14.13 checking whether to build shared libraries... yes
#20 14.13 checking whether to build static libraries... yes
#20 14.14 checking for a BSD-compatible install... /usr/bin/install -c
#20 14.15 checking whether build environment is sane... yes
#20 14.17 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 14.17 checking whether make sets $(MAKE)... yes
#20 14.19 checking whether make supports the include directive... yes (GNU style)
#20 14.20 checking whether make supports nested variables... yes
#20 14.22 checking dependency style of clang... gcc3
#20 14.28 checking whether to enable maintainer-specific portions of Makefiles... yes
#20 14.28 checking for gcc... (cached) clang
#20 14.34 checking whether we are using the GNU C compiler... (cached) yes
#20 14.34 checking whether clang accepts -g... (cached) yes
#20 14.34 checking for clang option to accept ISO C89... (cached) none needed
#20 14.34 checking whether clang understands -c and -o together... (cached) yes
#20 14.35 checking for ANSI C header files... (cached) yes
#20 14.35 checking for inttypes.h... (cached) yes
#20 14.35 checking for stdint.h... (cached) yes
#20 14.35 checking for sys/types.h... (cached) yes
#20 14.35 checking for an ANSI C-conforming const... yes
#20 14.38 checking size of int16_t... 2
#20 14.55 checking size of uint16_t... 2
#20 14.72 checking size of u_int16_t... 2
#20 14.88 checking size of int32_t... 4
#20 15.05 checking size of uint32_t... 4
#20 15.22 checking size of u_int32_t... 4
#20 15.40 checking size of int64_t... 8
#20 15.56 checking size of uint64_t... 8
#20 15.73 checking size of short... 2
#20 15.90 checking size of int... 4
#20 16.06 checking size of long... 8
#20 16.34 checking size of long long... 8
#20 16.51 checking for working memcmp... yes
#20 16.72 checking that generated files are newer than configure... done
#20 16.72 configure: creating ./config.status
#20 17.51 config.status: creating Makefile
#20 17.53 config.status: creating src/Makefile
#20 17.56 config.status: creating doc/Makefile
#20 17.59 config.status: creating doc/libogg/Makefile
#20 17.61 config.status: creating include/Makefile
#20 17.64 config.status: creating include/ogg/Makefile
#20 17.66 config.status: creating include/ogg/config_types.h
#20 17.69 config.status: creating libogg.spec
#20 17.71 config.status: creating ogg.pc
#20 17.73 config.status: creating ogg-uninstalled.pc
#20 17.75 config.status: creating config.h
#20 17.77 config.status: executing libtool commands
#20 17.78 config.status: executing depfiles commands
#20 17.94 ++ nproc
#20 17.94 + make -j8
#20 17.95 make  all-recursive
#20 17.95 make[1]: Entering directory '/src/ogg'
#20 17.96 Making all in src
#20 17.96 make[2]: Entering directory '/src/ogg/src'
#20 17.96 clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include  -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT test_bitwise-bitwise.o -MD -MP -MF .deps/test_bitwise-bitwise.Tpo -c -o test_bitwise-bitwise.o `test -f 'bitwise.c' || echo './'`bitwise.c
#20 17.96 clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include  -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT test_framing-framing.o -MD -MP -MF .deps/test_framing-framing.Tpo -c -o test_framing-framing.o `test -f 'framing.c' || echo './'`framing.c
#20 17.96 /bin/bash ../libtool  --tag=CC   --mode=compile clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include   -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c -o framing.lo framing.c
#20 17.96 /bin/bash ../libtool  --tag=CC   --mode=compile clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include   -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c -o bitwise.lo bitwise.c
#20 18.01 libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c bitwise.c  -fPIC -DPIC -o .libs/bitwise.o
#20 18.02 libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c framing.c  -fPIC -DPIC -o .libs/framing.o
#20 18.20 libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c bitwise.c -o bitwise.o >/dev/null 2>&1
#20 18.40 mv -f .deps/bitwise.Tpo .deps/bitwise.Plo
#20 18.41 libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c framing.c -o framing.o >/dev/null 2>&1
#20 18.76 mv -f .deps/test_bitwise-bitwise.Tpo .deps/test_bitwise-bitwise.Po
#20 18.77 /bin/bash ../libtool  --tag=CC   --mode=link clang -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard   -o test_bitwise test_bitwise-bitwise.o  
#20 18.81 mv -f .deps/framing.Tpo .deps/framing.Plo
#20 18.81 /bin/bash ../libtool  --tag=CC   --mode=link clang  -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -no-undefined -version-info 8:5:8  -o libogg.la -rpath /src/libogg-install/lib framing.lo bitwise.lo  
#20 18.86 libtool: link: clang -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -o test_bitwise test_bitwise-bitwise.o  -pthread
#20 18.91 libtool: link: clang -shared  -fPIC -DPIC  .libs/framing.o .libs/bitwise.o    -O2 -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -O3   -pthread -Wl,-soname -Wl,libogg.so.0 -o .libs/libogg.so.0.8.5
#20 18.95 libtool: link: (cd ".libs" && rm -f "libogg.so.0" && ln -s "libogg.so.0.8.5" "libogg.so.0")
#20 18.96 libtool: link: (cd ".libs" && rm -f "libogg.so" && ln -s "libogg.so.0.8.5" "libogg.so")
#20 18.96 libtool: link: ar cr .libs/libogg.a  framing.o bitwise.o
#20 18.97 libtool: link: ranlib .libs/libogg.a
#20 18.99 libtool: link: ( cd ".libs" && rm -f "libogg.la" && ln -s "../libogg.la" "libogg.la" )
#20 19.15 mv -f .deps/test_framing-framing.Tpo .deps/test_framing-framing.Po
#20 19.16 /bin/bash ../libtool  --tag=CC   --mode=link clang -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard   -o test_framing test_framing-framing.o  
#20 19.26 libtool: link: clang -D_V_SELFTEST -O2 -Wall -ffast-math -fsigned-char -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard -o test_framing test_framing-framing.o  -pthread
#20 19.36 make[2]: Leaving directory '/src/ogg/src'
#20 19.37 Making all in include
#20 19.37 make[2]: Entering directory '/src/ogg/include'
#20 19.37 Making all in ogg
#20 19.38 make[3]: Entering directory '/src/ogg/include/ogg'
#20 19.38 make[3]: Nothing to be done for 'all'.
#20 19.38 make[3]: Leaving directory '/src/ogg/include/ogg'
#20 19.38 make[3]: Entering directory '/src/ogg/include'
#20 19.38 make[3]: Nothing to be done for 'all-am'.
#20 19.38 make[3]: Leaving directory '/src/ogg/include'
#20 19.38 make[2]: Leaving directory '/src/ogg/include'
#20 19.38 Making all in doc
#20 19.38 make[2]: Entering directory '/src/ogg/doc'
#20 19.39 Making all in libogg
#20 19.40 make[3]: Entering directory '/src/ogg/doc/libogg'
#20 19.40 make[3]: Nothing to be done for 'all'.
#20 19.40 make[3]: Leaving directory '/src/ogg/doc/libogg'
#20 19.40 make[3]: Entering directory '/src/ogg/doc'
#20 19.40 make[3]: Nothing to be done for 'all-am'.
#20 19.40 make[3]: Leaving directory '/src/ogg/doc'
#20 19.40 make[2]: Leaving directory '/src/ogg/doc'
#20 19.40 make[2]: Entering directory '/src/ogg'
#20 19.41 make[2]: Leaving directory '/src/ogg'
#20 19.41 make[1]: Leaving directory '/src/ogg'
#20 19.41 + make install
#20 19.42 Making install in src
#20 19.43 make[1]: Entering directory '/src/ogg/src'
#20 19.44 make[2]: Entering directory '/src/ogg/src'
#20 19.45  /usr/bin/mkdir -p '/src/libogg-install/lib'
#20 19.45  /bin/bash ../libtool   --mode=install /usr/bin/install -c   libogg.la '/src/libogg-install/lib'
#20 19.49 libtool: install: /usr/bin/install -c .libs/libogg.so.0.8.5 /src/libogg-install/lib/libogg.so.0.8.5
#20 19.49 libtool: install: (cd /src/libogg-install/lib && { ln -s -f libogg.so.0.8.5 libogg.so.0 || { rm -f libogg.so.0 && ln -s libogg.so.0.8.5 libogg.so.0; }; })
#20 19.50 libtool: install: (cd /src/libogg-install/lib && { ln -s -f libogg.so.0.8.5 libogg.so || { rm -f libogg.so && ln -s libogg.so.0.8.5 libogg.so; }; })
#20 19.50 libtool: install: /usr/bin/install -c .libs/libogg.lai /src/libogg-install/lib/libogg.la
#20 19.50 libtool: install: /usr/bin/install -c .libs/libogg.a /src/libogg-install/lib/libogg.a
#20 19.50 libtool: install: chmod 644 /src/libogg-install/lib/libogg.a
#20 19.51 libtool: install: ranlib /src/libogg-install/lib/libogg.a
#20 19.58 libtool: finish: PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/out:/sbin" ldconfig -n /src/libogg-install/lib
#20 19.58 ----------------------------------------------------------------------
#20 19.58 Libraries have been installed in:
#20 19.58    /src/libogg-install/lib
#20 19.58 
#20 19.58 If you ever happen to want to link against installed libraries
#20 19.58 in a given directory, LIBDIR, you must either use libtool, and
#20 19.58 specify the full pathname of the library, or use the '-LLIBDIR'
#20 19.58 flag during linking and do at least one of the following:
#20 19.58    - add LIBDIR to the 'LD_LIBRARY_PATH' environment variable
#20 19.58      during execution
#20 19.58    - add LIBDIR to the 'LD_RUN_PATH' environment variable
#20 19.58      during linking
#20 19.58    - use the '-Wl,-rpath -Wl,LIBDIR' linker flag
#20 19.58    - have your system administrator add LIBDIR to '/etc/ld.so.conf'
#20 19.58 
#20 19.58 See any operating system documentation about shared libraries for
#20 19.58 more information, such as the ld(1) and ld.so(8) manual pages.
#20 19.58 ----------------------------------------------------------------------
#20 19.58 make[2]: Nothing to be done for 'install-data-am'.
#20 19.58 make[2]: Leaving directory '/src/ogg/src'
#20 19.58 make[1]: Leaving directory '/src/ogg/src'
#20 19.58 Making install in include
#20 19.58 make[1]: Entering directory '/src/ogg/include'
#20 19.59 Making install in ogg
#20 19.59 make[2]: Entering directory '/src/ogg/include/ogg'
#20 19.60 make[3]: Entering directory '/src/ogg/include/ogg'
#20 19.60 make[3]: Nothing to be done for 'install-exec-am'.
#20 19.60  /usr/bin/mkdir -p '/src/libogg-install/include/ogg'
#20 19.60  /usr/bin/install -c -m 644 config_types.h '/src/libogg-install/include/ogg'
#20 19.61  /usr/bin/mkdir -p '/src/libogg-install/include/ogg'
#20 19.61  /usr/bin/install -c -m 644 ogg.h os_types.h '/src/libogg-install/include/ogg'
#20 19.62 make[3]: Leaving directory '/src/ogg/include/ogg'
#20 19.62 make[2]: Leaving directory '/src/ogg/include/ogg'
#20 19.62 make[2]: Entering directory '/src/ogg/include'
#20 19.62 make[3]: Entering directory '/src/ogg/include'
#20 19.62 make[3]: Nothing to be done for 'install-exec-am'.
#20 19.62 make[3]: Nothing to be done for 'install-data-am'.
#20 19.62 make[3]: Leaving directory '/src/ogg/include'
#20 19.62 make[2]: Leaving directory '/src/ogg/include'
#20 19.63 make[1]: Leaving directory '/src/ogg/include'
#20 19.63 Making install in doc
#20 19.63 make[1]: Entering directory '/src/ogg/doc'
#20 19.64 Making install in libogg
#20 19.64 make[2]: Entering directory '/src/ogg/doc/libogg'
#20 19.64 make[3]: Entering directory '/src/ogg/doc/libogg'
#20 19.64 make[3]: Nothing to be done for 'install-exec-am'.
#20 19.65  /usr/bin/mkdir -p '/src/libogg-install/share/doc/libogg/libogg'
#20 19.65  /usr/bin/install -c -m 644 bitpacking.html datastructures.html decoding.html encoding.html general.html index.html ogg_iovec_t.html ogg_packet.html ogg_packet_clear.html ogg_page.html ogg_page_bos.html ogg_page_checksum_set.html ogg_page_continued.html ogg_page_eos.html ogg_page_granulepos.html ogg_page_packets.html ogg_page_pageno.html ogg_page_serialno.html ogg_page_version.html ogg_stream_check.html ogg_stream_clear.html ogg_stream_destroy.html ogg_stream_eos.html ogg_stream_flush.html ogg_stream_flush_fill.html ogg_stream_init.html ogg_stream_iovecin.html ogg_stream_packetin.html ogg_stream_packetout.html ogg_stream_packetpeek.html ogg_stream_pagein.html ogg_stream_pageout.html ogg_stream_pageout_fill.html ogg_stream_reset.html ogg_stream_reset_serialno.html ogg_stream_state.html ogg_sync_buffer.html ogg_sync_check.html ogg_sync_clear.html ogg_sync_destroy.html '/src/libogg-install/share/doc/libogg/libogg'
#20 19.66  /usr/bin/install -c -m 644 ogg_sync_init.html ogg_sync_pageout.html ogg_sync_pageseek.html ogg_sync_reset.html ogg_sync_state.html ogg_sync_wrote.html oggpack_adv.html oggpack_adv1.html oggpack_bits.html oggpack_buffer.html oggpack_bytes.html oggpack_get_buffer.html oggpack_look.html oggpack_look1.html oggpack_read.html oggpack_read1.html oggpack_readinit.html oggpack_reset.html oggpack_write.html oggpack_writealign.html oggpack_writecheck.html oggpack_writeclear.html oggpack_writecopy.html oggpack_writeinit.html oggpack_writetrunc.html overview.html reference.html style.css '/src/libogg-install/share/doc/libogg/libogg'
#20 19.67 make[3]: Leaving directory '/src/ogg/doc/libogg'
#20 19.67 make[2]: Leaving directory '/src/ogg/doc/libogg'
#20 19.67 make[2]: Entering directory '/src/ogg/doc'
#20 19.68 make[3]: Entering directory '/src/ogg/doc'
#20 19.68 make[3]: Nothing to be done for 'install-exec-am'.
#20 19.68  /usr/bin/mkdir -p '/src/libogg-install/share/doc/libogg'
#20 19.68  /usr/bin/install -c -m 644 framing.html index.html oggstream.html ogg-multiplex.html fish_xiph_org.png multiplex1.png packets.png pages.png stream.png vorbisword2.png white-ogg.png white-xifish.png rfc3533.txt rfc5334.txt skeleton.html '/src/libogg-install/share/doc/libogg'
#20 19.69 make[3]: Leaving directory '/src/ogg/doc'
#20 19.69 make[2]: Leaving directory '/src/ogg/doc'
#20 19.69 make[1]: Leaving directory '/src/ogg/doc'
#20 19.69 make[1]: Entering directory '/src/ogg'
#20 19.70 make[2]: Entering directory '/src/ogg'
#20 19.70 make[2]: Nothing to be done for 'install-exec-am'.
#20 19.70  /usr/bin/mkdir -p '/src/libogg-install/share/aclocal'
#20 19.71  /usr/bin/install -c -m 644 ogg.m4 '/src/libogg-install/share/aclocal'
#20 19.71  /usr/bin/mkdir -p '/src/libogg-install/lib/pkgconfig'
#20 19.72  /usr/bin/install -c -m 644 ogg.pc '/src/libogg-install/lib/pkgconfig'
#20 19.72 make[2]: Leaving directory '/src/ogg'
#20 19.72 make[1]: Leaving directory '/src/ogg'
#20 19.72 + cd /src/flac/
#20 19.72 + ./autogen.sh
#20 19.72 Using symlinks to autotool files (use --no-symlinks to copy instead).
#20 19.72 Updating build configuration files for FLAC, please wait....
#20 25.02 libtoolize: putting auxiliary files in '.'.
#20 25.02 libtoolize: linking file './ltmain.sh'
#20 25.06 libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
#20 25.06 libtoolize: linking file 'm4/libtool.m4'
#20 25.16 libtoolize: linking file 'm4/ltoptions.m4'
#20 25.27 libtoolize: linking file 'm4/ltsugar.m4'
#20 25.38 libtoolize: linking file 'm4/ltversion.m4'
#20 25.49 libtoolize: linking file 'm4/lt~obsolete.m4'
#20 31.71 configure.ac:41: installing './ar-lib'
#20 31.71 configure.ac:39: installing './compile'
#20 31.71 configure.ac:42: installing './config.guess'
#20 31.71 configure.ac:42: installing './config.sub'
#20 31.71 configure.ac:26: installing './install-sh'
#20 31.71 configure.ac:26: installing './missing'
#20 32.03 examples/c/decode/file/Makefile.am: installing './depcomp'
#20 33.85 + [[ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard = *sanitize=memory* ]]
#20 33.85 + LD_LIBRARY_PATH=/src/libogg-install/lib
#20 33.85 + ./configure --with-ogg=/src/libogg-install --enable-static --disable-oggtest --disable-examples --disable-xmms-plugin
#20 34.09 checking for a BSD-compatible install... /usr/bin/install -c
#20 34.11 checking whether build environment is sane... yes
#20 34.13 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 34.13 checking for gawk... no
#20 34.13 checking for mawk... mawk
#20 34.13 checking whether make sets $(MAKE)... yes
#20 34.15 checking whether make supports nested variables... yes
#20 34.16 checking how to create a pax tar archive... gnutar
#20 34.19 checking whether make supports nested variables... (cached) yes
#20 34.19 checking whether configure should try to set CFLAGS/CXXFLAGS/CPPFLAGS/LDFLAGS... no
#20 34.19 checking whether to enable debugging... no
#20 34.20 checking whether make supports the include directive... yes (GNU style)
#20 34.21 checking for gcc... clang
#20 34.28 checking whether the C compiler works... yes
#20 34.40 checking for C compiler default output file name... a.out
#20 34.41 checking for suffix of executables... 
#20 34.53 checking whether we are cross compiling... no
#20 34.66 checking for suffix of object files... o
#20 34.69 checking whether we are using the GNU C compiler... yes
#20 34.72 checking whether clang accepts -g... yes
#20 34.74 checking for clang option to accept ISO C89... none needed
#20 34.79 checking whether clang understands -c and -o together... yes
#20 34.84 checking dependency style of clang... gcc3
#20 34.90 checking for clang option to accept ISO C99... none needed
#20 34.96 checking for clang option to accept ISO Standard C... (cached) none needed
#20 34.96 checking how to run the C preprocessor... clang -E
#20 35.07 checking for grep that handles long lines and -e... /usr/bin/grep
#20 35.07 checking for egrep... /usr/bin/grep -E
#20 35.07 checking for ANSI C header files... yes
#20 35.33 checking for sys/types.h... yes
#20 35.38 checking for sys/stat.h... yes
#20 35.44 checking for stdlib.h... yes
#20 35.49 checking for string.h... yes
#20 35.55 checking for memory.h... yes
#20 35.61 checking for strings.h... yes
#20 35.68 checking for inttypes.h... yes
#20 35.74 checking for stdint.h... yes
#20 35.80 checking for unistd.h... yes
#20 35.86 checking minix/config.h usability... no
#20 35.94 checking minix/config.h presence... no
#20 35.96 checking for minix/config.h... no
#20 35.96 checking whether it is safe to define __EXTENSIONS__... yes
#20 36.02 checking for ar... ar
#20 36.03 checking the archiver (ar) interface... ar
#20 36.09 checking build system type... x86_64-pc-linux-gnu
#20 36.16 checking host system type... x86_64-pc-linux-gnu
#20 36.17 checking how to print strings... printf
#20 36.22 checking for a sed that does not truncate output... /usr/bin/sed
#20 36.23 checking for fgrep... /usr/bin/grep -F
#20 36.23 checking for ld used by clang... /usr/bin/ld
#20 36.25 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 36.26 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 36.26 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 36.29 checking whether ln -s works... yes
#20 36.29 checking the maximum length of command line arguments... 1572864
#20 36.31 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 36.31 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 36.31 checking for /usr/bin/ld option to reload object files... -r
#20 36.31 checking for objdump... objdump
#20 36.31 checking how to recognize dependent libraries... pass_all
#20 36.31 checking for dlltool... no
#20 36.31 checking how to associate runtime and link libraries... printf %s\n
#20 36.31 checking for archiver @FILE support... @
#20 36.36 checking for strip... strip
#20 36.36 checking for ranlib... ranlib
#20 36.36 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 36.53 checking for sysroot... no
#20 36.53 checking for a working dd... /usr/bin/dd
#20 36.54 checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
#20 36.57 checking for mt... no
#20 36.57 checking if : is a manifest tool... no
#20 36.58 checking for dlfcn.h... yes
#20 36.65 checking for objdir... .libs
#20 36.85 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 36.89 checking for clang option to produce PIC... -fPIC -DPIC
#20 36.89 checking if clang PIC flag -fPIC -DPIC works... yes
#20 36.92 checking if clang static flag -static works... yes
#20 37.11 checking if clang supports -c -o file.o... yes
#20 37.15 checking if clang supports -c -o file.o... (cached) yes
#20 37.15 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 37.17 checking whether -lc should be explicitly linked in... no
#20 37.23 checking dynamic linker characteristics... GNU/Linux ld.so
#20 37.41 checking how to hardcode library paths into programs... immediate
#20 37.41 checking whether stripping libraries is possible... yes
#20 37.41 checking if libtool supports shared libraries... yes
#20 37.41 checking whether to build shared libraries... yes
#20 37.41 checking whether to build static libraries... yes
#20 37.42 checking dependency style of clang... gcc3
#20 37.54 checking whether we are using the GNU C++ compiler... yes
#20 37.57 checking whether clang++ accepts -g... yes
#20 37.60 checking dependency style of clang++... gcc3
#20 37.66 checking how to run the C++ preprocessor... clang++ -E
#20 37.96 checking for ld used by clang++... /usr/bin/ld -m elf_x86_64
#20 37.98 checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
#20 38.00 checking whether the clang++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 38.15 checking for clang++ option to produce PIC... -fPIC -DPIC
#20 38.15 checking if clang++ PIC flag -fPIC -DPIC works... yes
#20 38.18 checking if clang++ static flag -static works... yes
#20 38.40 checking if clang++ supports -c -o file.o... yes
#20 38.45 checking if clang++ supports -c -o file.o... (cached) yes
#20 38.45 checking whether the clang++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 38.45 checking dynamic linker characteristics... (cached) GNU/Linux ld.so
#20 38.45 checking how to hardcode library paths into programs... immediate
#20 38.46 checking whether we are using the CLANG C compiler... yes
#20 38.65 checking whether make sets $(MAKE)... (cached) yes
#20 38.66 checking for special C compiler options needed for large files... no
#20 38.66 checking for _FILE_OFFSET_BITS value needed for large files... no
#20 38.69 checking for _LARGEFILE_SOURCE value needed for large files... no
#20 38.85 checking size of off_t... 8
#20 39.04 checking size of void*... 8
#20 39.20 checking for library containing lround... none required
#20 39.34 checking for variable-length arrays... yes
#20 39.37 checking for ANSI C header files... (cached) yes
#20 39.37 checking for inline... inline
#20 39.39 checking for variable-length arrays... (cached) yes
#20 39.40 checking for typeof syntax and keyword spelling... typeof
#20 39.43 checking for stdint.h... (cached) yes
#20 39.44 checking for inttypes.h... (cached) yes
#20 39.45 checking byteswap.h usability... yes
#20 39.52 checking byteswap.h presence... yes
#20 39.54 checking for byteswap.h... yes
#20 39.55 checking sys/param.h usability... yes
#20 39.63 checking sys/param.h presence... yes
#20 39.65 checking for sys/param.h... yes
#20 39.67 checking sys/ioctl.h usability... yes
#20 39.73 checking sys/ioctl.h presence... yes
#20 39.75 checking for sys/ioctl.h... yes
#20 39.76 checking termios.h usability... yes
#20 39.82 checking termios.h presence... yes
#20 39.85 checking for termios.h... yes
#20 39.86 checking x86intrin.h usability... yes
#20 40.45 checking x86intrin.h presence... yes
#20 40.55 checking for x86intrin.h... yes
#20 40.56 checking cpuid.h usability... yes
#20 40.63 checking cpuid.h presence... yes
#20 40.65 checking for cpuid.h... yes
#20 40.65 checking for bswap32 intrinsic... yes
#20 40.78 checking for bswap16 intrinsic... yes
#20 40.91 checking whether byte ordering is bigendian... no
#20 41.07 checking for socklen_t... yes
#20 41.43 checking for getopt_long... yes
#20 41.63 checking size of void*... (cached) 8
#20 41.64 checking for doxygen... no
#20 41.64 checking for Ogg... yes
#20 41.65 checking for ld used by clang... /usr/bin/ld -m elf_x86_64
#20 41.67 checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
#20 41.68 checking for shared library run path origin... done
#20 41.71 checking for iconv... yes
#20 41.87 checking for working iconv... yes
#20 42.02 checking for iconv declaration... 
#20 42.07          extern size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
#20 42.07 checking for nl_langinfo and CODESET... yes
#20 42.20 checking for docbook-to-man... no
#20 42.20 checking for docbook2man... no
#20 42.20 checking for clock_gettime in -lrt... yes
#20 42.33 checking for nasm... no
#20 42.33 checking if clang accepts -Wdeclaration-after-statement... yes
#20 42.40 checking whether to add -D_FORTIFY_SOURCE=2 to CPPFLAGS... yes
#20 42.52 checking if clang++ accepts -Weffc++... yes
#20 42.64 checking if clang accepts -msse2... yes
#20 42.77 checking that generated files are newer than configure... done
#20 42.77 configure: creating ./config.status
#20 43.86 config.status: creating Makefile
#20 43.88 config.status: creating src/Makefile
#20 43.91 config.status: creating src/libFLAC/Makefile
#20 43.94 config.status: creating src/libFLAC/flac.pc
#20 43.96 config.status: creating src/libFLAC/ia32/Makefile
#20 43.99 config.status: creating src/libFLAC/include/Makefile
#20 44.01 config.status: creating src/libFLAC/include/private/Makefile
#20 44.04 config.status: creating src/libFLAC/include/protected/Makefile
#20 44.07 config.status: creating src/libFLAC++/Makefile
#20 44.10 config.status: creating src/libFLAC++/flac++.pc
#20 44.13 config.status: creating src/flac/Makefile
#20 44.15 config.status: creating src/metaflac/Makefile
#20 44.18 config.status: creating src/plugin_common/Makefile
#20 44.21 config.status: creating src/plugin_xmms/Makefile
#20 44.24 config.status: creating src/share/Makefile
#20 44.27 config.status: creating src/test_grabbag/Makefile
#20 44.29 config.status: creating src/test_grabbag/cuesheet/Makefile
#20 44.32 config.status: creating src/test_grabbag/picture/Makefile
#20 44.35 config.status: creating src/test_libs_common/Makefile
#20 44.38 config.status: creating src/test_libFLAC/Makefile
#20 44.41 config.status: creating src/test_libFLAC++/Makefile
#20 44.43 config.status: creating src/test_seeking/Makefile
#20 44.46 config.status: creating src/test_streams/Makefile
#20 44.49 config.status: creating src/utils/Makefile
#20 44.51 config.status: creating src/utils/flacdiff/Makefile
#20 44.54 config.status: creating src/utils/flactimer/Makefile
#20 44.57 config.status: creating examples/Makefile
#20 44.60 config.status: creating examples/c/Makefile
#20 44.63 config.status: creating examples/c/decode/Makefile
#20 44.65 config.status: creating examples/c/decode/file/Makefile
#20 44.68 config.status: creating examples/c/encode/Makefile
#20 44.71 config.status: creating examples/c/encode/file/Makefile
#20 44.73 config.status: creating examples/cpp/Makefile
#20 44.76 config.status: creating examples/cpp/decode/Makefile
#20 44.79 config.status: creating examples/cpp/decode/file/Makefile
#20 44.82 config.status: creating examples/cpp/encode/Makefile
#20 44.85 config.status: creating examples/cpp/encode/file/Makefile
#20 44.87 config.status: creating include/Makefile
#20 44.90 config.status: creating include/FLAC/Makefile
#20 44.93 config.status: creating include/FLAC++/Makefile
#20 44.96 config.status: creating include/share/Makefile
#20 44.99 config.status: creating include/share/grabbag/Makefile
#20 45.01 config.status: creating include/test_libs_common/Makefile
#20 45.04 config.status: creating doc/Doxyfile
#20 45.07 config.status: creating doc/Makefile
#20 45.10 config.status: creating doc/html/Makefile
#20 45.13 config.status: creating doc/html/images/Makefile
#20 45.15 config.status: creating m4/Makefile
#20 45.18 config.status: creating man/Makefile
#20 45.21 config.status: creating test/common.sh
#20 45.24 config.status: creating test/Makefile
#20 45.27 config.status: creating test/cuesheets/Makefile
#20 45.29 config.status: creating test/flac-to-flac-metadata-test-files/Makefile
#20 45.32 config.status: creating test/metaflac-test-files/Makefile
#20 45.35 config.status: creating test/pictures/Makefile
#20 45.37 config.status: creating build/Makefile
#20 45.40 config.status: creating microbench/Makefile
#20 45.43 config.status: creating oss-fuzz/Makefile
#20 45.46 config.status: creating config.h
#20 45.47 config.status: executing depfiles commands
#20 46.74 config.status: executing libtool commands
#20 46.76 
#20 46.76 -=-=-=-=-=-=-=-=-=-= Configuration Complete =-=-=-=-=-=-=-=-=-=-
#20 46.76 
#20 46.76   Configuration summary :
#20 46.76 
#20 46.76     FLAC version : ............................ 1.3.3
#20 46.76 
#20 46.76     Host CPU : ................................ x86_64
#20 46.76     Host Vendor : ............................. pc
#20 46.76     Host OS : ................................. linux-gnu
#20 46.76 
#20 46.76     Compiler is GCC : ......................... no
#20 46.76     Compiler is Clang : ....................... yes
#20 46.76     SSE optimizations : ....................... yes
#20 46.76     Asm optimizations : ....................... yes
#20 46.76     Ogg/FLAC support : ........................ yes
#20 46.76     Stack protector  : ........................ no
#20 46.76     Fuzzing support (Clang only) : ............ no
#20 46.76 
#20 46.85 ++ nproc
#20 46.85 + make -j8
#20 46.86 make  all-recursive
#20 46.87 make[1]: Entering directory '/src/flac'
#20 46.87 Making all in doc
#20 46.88 make[2]: Entering directory '/src/flac/doc'
#20 46.88 Making all in .
#20 46.89 make[3]: Entering directory '/src/flac/doc'
#20 46.89 touch FLAC.tag
#20 46.89 mkdir -p html/api
#20 46.89 make[3]: Leaving directory '/src/flac/doc'
#20 46.89 Making all in html
#20 46.90 make[3]: Entering directory '/src/flac/doc/html'
#20 46.90 Making all in images
#20 46.91 make[4]: Entering directory '/src/flac/doc/html/images'
#20 46.91 make[4]: Nothing to be done for 'all'.
#20 46.91 make[4]: Leaving directory '/src/flac/doc/html/images'
#20 46.91 make[4]: Entering directory '/src/flac/doc/html'
#20 46.91 make[4]: Nothing to be done for 'all-am'.
#20 46.91 make[4]: Leaving directory '/src/flac/doc/html'
#20 46.91 make[3]: Leaving directory '/src/flac/doc/html'
#20 46.91 make[2]: Leaving directory '/src/flac/doc'
#20 46.91 Making all in include
#20 46.92 make[2]: Entering directory '/src/flac/include'
#20 46.92 Making all in FLAC
#20 46.93 make[3]: Entering directory '/src/flac/include/FLAC'
#20 46.93 make[3]: Nothing to be done for 'all'.
#20 46.93 make[3]: Leaving directory '/src/flac/include/FLAC'
#20 46.93 Making all in FLAC++
#20 46.93 make[3]: Entering directory '/src/flac/include/FLAC++'
#20 46.93 make[3]: Nothing to be done for 'all'.
#20 46.93 make[3]: Leaving directory '/src/flac/include/FLAC++'
#20 46.93 Making all in share
#20 46.94 make[3]: Entering directory '/src/flac/include/share'
#20 46.94 Making all in grabbag
#20 46.94 make[4]: Entering directory '/src/flac/include/share/grabbag'
#20 46.94 make[4]: Nothing to be done for 'all'.
#20 46.94 make[4]: Leaving directory '/src/flac/include/share/grabbag'
#20 46.95 make[4]: Entering directory '/src/flac/include/share'
#20 46.95 make[4]: Nothing to be done for 'all-am'.
#20 46.95 make[4]: Leaving directory '/src/flac/include/share'
#20 46.95 make[3]: Leaving directory '/src/flac/include/share'
#20 46.95 Making all in test_libs_common
#20 46.95 make[3]: Entering directory '/src/flac/include/test_libs_common'
#20 46.95 make[3]: Nothing to be done for 'all'.
#20 46.95 make[3]: Leaving directory '/src/flac/include/test_libs_common'
#20 46.96 make[3]: Entering directory '/src/flac/include'
#20 46.96 make[3]: Nothing to be done for 'all-am'.
#20 46.96 make[3]: Leaving directory '/src/flac/include'
#20 46.96 make[2]: Leaving directory '/src/flac/include'
#20 46.96 Making all in m4
#20 46.96 make[2]: Entering directory '/src/flac/m4'
#20 46.96 make[2]: Nothing to be done for 'all'.
#20 46.96 make[2]: Leaving directory '/src/flac/m4'
#20 46.96 Making all in man
#20 46.96 make[2]: Entering directory '/src/flac/man'
#20 46.96 make[2]: Nothing to be done for 'all'.
#20 46.96 make[2]: Leaving directory '/src/flac/man'
#20 46.96 Making all in src
#20 46.97 make[2]: Entering directory '/src/flac/src'
#20 46.98 Making all in libFLAC
#20 46.98 make[3]: Entering directory '/src/flac/src/libFLAC'
#20 46.99 Making all in include
#20 46.99 make[4]: Entering directory '/src/flac/src/libFLAC/include'
#20 47.00 Making all in private
#20 47.00 make[5]: Entering directory '/src/flac/src/libFLAC/include/private'
#20 47.00 make[5]: Nothing to be done for 'all'.
#20 47.00 make[5]: Leaving directory '/src/flac/src/libFLAC/include/private'
#20 47.00 Making all in protected
#20 47.01 make[5]: Entering directory '/src/flac/src/libFLAC/include/protected'
#20 47.01 make[5]: Nothing to be done for 'all'.
#20 47.01 make[5]: Leaving directory '/src/flac/src/libFLAC/include/protected'
#20 47.01 make[5]: Entering directory '/src/flac/src/libFLAC/include'
#20 47.01 make[5]: Nothing to be done for 'all-am'.
#20 47.01 make[5]: Leaving directory '/src/flac/src/libFLAC/include'
#20 47.01 make[4]: Leaving directory '/src/flac/src/libFLAC/include'
#20 47.01 Making all in .
#20 47.02 make[4]: Entering directory '/src/flac/src/libFLAC'
#20 47.02   CC       bitmath.lo
#20 47.02   CC       bitreader.lo
#20 47.02   CC       bitwriter.lo
#20 47.02   CC       cpu.lo
#20 47.02   CC       crc.lo
#20 47.02   CC       fixed_intrin_sse2.lo
#20 47.02   CC       fixed.lo
#20 47.02   CC       fixed_intrin_ssse3.lo
#20 47.27   CC       float.lo
#20 47.37   CC       format.lo
#20 47.37   CC       lpc.lo
#20 47.49   CC       lpc_intrin_sse.lo
#20 47.82   CC       lpc_intrin_sse2.lo
#20 47.83   CC       lpc_intrin_sse41.lo
#20 47.97   CC       lpc_intrin_avx2.lo
#20 47.98   CC       lpc_intrin_vsx.lo
#20 48.07 lpc_intrin_sse2.c:83:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.07                                                 summ = _mm_madd_epi16(q11, _mm_loadu_si128((const __m128i*)(data+i-12)));
#20 48.07                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.07 lpc_intrin_sse2.c:84:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.07                                                 mull = _mm_madd_epi16(q10, _mm_loadu_si128((const __m128i*)(data+i-11))); summ = _mm_add_epi32(summ, mull);
#20 48.07                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.07 lpc_intrin_sse2.c:85:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.07                                                 mull = _mm_madd_epi16(q9, _mm_loadu_si128((const __m128i*)(data+i-10))); summ = _mm_add_epi32(summ, mull);
#20 48.07                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.07 lpc_intrin_sse2.c:86:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.07                                                 mull = _mm_madd_epi16(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 48.07                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.07 lpc_intrin_sse2.c:87:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.07                                                 mull = _mm_madd_epi16(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 48.07                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.07 lpc_intrin_sse2.c:88:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.07                                                 mull = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 48.07                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.07 lpc_intrin_sse2.c:89:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.07                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.07                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.07 lpc_intrin_sse2.c:90:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.07                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.07                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.07 lpc_intrin_sse2.c:91:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.07                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.07                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.07 lpc_intrin_sse2.c:92:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.07                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.07                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.07 lpc_intrin_sse2.c:93:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.07                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.07                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.07 lpc_intrin_sse2.c:94:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.08                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.08                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.08 lpc_intrin_sse2.c:96:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.08                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.08                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.08 lpc_intrin_sse2.c:96:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.08                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.08                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.08 lpc_intrin_sse2.c:115:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.08                                                 summ = _mm_madd_epi16(q10, _mm_loadu_si128((const __m128i*)(data+i-11)));
#20 48.08                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.08 lpc_intrin_sse2.c:116:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.08                                                 mull = _mm_madd_epi16(q9, _mm_loadu_si128((const __m128i*)(data+i-10))); summ = _mm_add_epi32(summ, mull);
#20 48.08                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.08 lpc_intrin_sse2.c:117:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.08                                                 mull = _mm_madd_epi16(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 48.08                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.08 lpc_intrin_sse2.c:118:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]lpc_intrin_sse41.c:1167:51: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09                                                 summ = _mm_mullo_epi32(q11, _mm_loadu_si128((const __m128i*)(data+i-12)));
#20 48.09                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_sse41.c:1168:51: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09                                                 mull = _mm_mullo_epi32(q10, _mm_loadu_si128((const __m128i*)(data+i-11))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 
#20 48.09                                                 mull = _mm_madd_epi16(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_sse41.c:1169:lpc_intrin_sse2.c:119:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09 50:                                                mull = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull); 
#20 48.09                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09                                                 mull = _mm_mullo_epi32(q9, _mm_loadu_si128((const __m128i*)(data+i-10))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_sse2.c:120:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_sse41.c:lpc_intrin_sse2.c1170:121:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09 :                                                mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);50
#20 48.09                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 : warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09 lpc_intrin_sse2.c:122:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09                                                 mull = _mm_mullo_epi32(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_sse2.c:123:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_sse41.clpc_intrin_sse2.c:124:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09 :1171                                                mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 :50: warning: lpc_intrin_sse2.c:125:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09 cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]                                                mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 
#20 48.09                                                 mull = _mm_mullo_epi32(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_sse2.c:127:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.09                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_sse2.c:127:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.09                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_sse41.c:1172:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09                                                 mull = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_sse41.c:1173:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_sse41.c:1174:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_sse41.c:1175:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_sse41.c:1176:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]lpc_intrin_sse2.c
#20 48.09 :147:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09                                                 summ = _mm_madd_epi16(q9, _mm_loadu_si128((const __m128i*)(data+i-10)));
#20 48.09                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_sse2.c:148:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09                                                 mull = _mm_madd_epi16(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_sse41.c:1177:lpc_intrin_sse2.c:149:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09 50:                                                mull = _mm_madd_epi16(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09  warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);lpc_intrin_sse2.c
#20 48.09 :150:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09                                                 mull = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_sse2.c:151:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09 lpc_intrin_sse41.c                                                mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 :1178:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]lpc_intrin_sse2.c:152:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09 
#20 48.09                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_sse2.c:153:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_sse2.c:154:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.09 lpc_intrin_sse2.c:155:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.09                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.09                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse41.c:1180:24: lpc_intrin_sse2.cwarning: :156:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10 cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.10                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.10                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse41.clpc_intrin_sse2.c:158:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.10                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse2.c:158:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.10                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 :1180:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.10                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse2.c:175:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 summ = _mm_madd_epi16(q8, _mm_loadu_si128((const __m128i*)(data+i-9)));
#20 48.10                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse2.c:176:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 mull = _mm_madd_epi16(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 48.10                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse2.c:177:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 mull = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 48.10                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse2.c:178:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.10                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse2.c:179:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.10                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse2.c:180:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.10                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse2.c:181:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.10                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse2.c:182:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.10                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse2.c:183:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.10                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse2.c:185:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.10                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse2.c:185:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.10                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse41.c:1199:51: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 summ = _mm_mullo_epi32(q10, _mm_loadu_si128((const __m128i*)(data+i-11)));
#20 48.10                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse41.c:1200:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 mull = _mm_mullo_epi32(q9, _mm_loadu_si128((const __m128i*)(data+i-10))); summ = _mm_add_epi32(summ, mull);
#20 48.10                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse2.c:205:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 summ = _mm_madd_epi16(q7, _mm_loadu_si128((const __m128i*)(data+i-8)));
#20 48.10                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse2.clpc_intrin_sse41.c:206:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10 :1201                                                mull = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 48.10                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 :50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10 lpc_intrin_sse2.c:207:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.10                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10                                                 mull = _mm_mullo_epi32(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 48.10                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse2.c:208:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.10                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse41.c:lpc_intrin_sse2.c1202:209:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10 :50                                                mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.10                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 : warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10 lpc_intrin_sse2.c                                                mull = _mm_mullo_epi32(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);:210:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10 
#20 48.10                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~                                                mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.10                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 
#20 48.10 lpc_intrin_sse2.c:211:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.10                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 lpc_intrin_sse41.c:1203:50lpc_intrin_sse2.c::212:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.10  warning:                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.10                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.10 cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.11                                                 mull = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 48.11                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~lpc_intrin_sse2.c:214:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.11 
#20 48.11                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.11                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_sse2.c:214:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.11                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.11                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_sse41.c:1204:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.11                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.11                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_sse41.c:1205:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.11                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.11                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_sse41.clpc_intrin_sse2.c:229:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.11 :                                                summ = _mm_madd_epi16(q6, _mm_loadu_si128((const __m128i*)(data+i-7)));
#20 48.11                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 1206:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.11                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.11                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_sse2.c:230:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.11                                                 mull = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.11                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_sse2.clpc_intrin_sse41.c:231:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.11 :1207                                                mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.11                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 :50: warning: lpc_intrin_sse2.c:232:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.11 cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]                                                mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.11                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 
#20 48.11                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);lpc_intrin_sse2.c:
#20 48.11 233:                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~49
#20 48.11 : warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.11                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.11                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_sse41.c:1208:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.11                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);lpc_intrin_sse2.c
#20 48.11                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~:
#20 48.11 234:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.11                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.11                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~lpc_intrin_sse41.c:1209:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.11 
#20 48.11                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.11                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_sse2.c:235:49: lpc_intrin_sse41.cwarning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.11 :1211                                                mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.11                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 :24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.11 lpc_intrin_sse2.c                                                _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.11                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.11 :237:24:lpc_intrin_sse41.c:1211:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.11  warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]                                                _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.11                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 
#20 48.11                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.11                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_sse2.c:237:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.11                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.11                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.11 lpc_intrin_sse41.c:1231:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.11                                                 summ = _mm_mullo_epi32(q9, _mm_loadu_si128((const __m128i*)(data+i-10)));
#20 48.11                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_sse41.c:1232:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.12                                                 mull = _mm_mullo_epi32(q8, _mm_loadu_si128((const __m128i*)(data+i-9))); summ = _mm_add_epi32(summ, mull);
#20 48.12                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_sse41.c:1233:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.12                                                 mull = _mm_mullo_epi32(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 48.12                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_sse41.c:1234:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.12                                                 mull = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 48.12                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_sse41.c:1235:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.12                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.12                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_sse41.c:1236:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.12                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.12                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_sse41.c:1237:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.12                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.12                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_sse41.clpc_intrin_sse2.c:253:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]:1238:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.12                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.12 
#20 48.12                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12                                                 summ = _mm_madd_epi16(q5, _mm_loadu_si128((const __m128i*)(data+i-6)));
#20 48.12 lpc_intrin_sse41.c:1239:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.12                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.12                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_sse41.c                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 :1240:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.12                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.12                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_sse41.c:1242:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.12                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.12                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_sse41.c:1242:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.12                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.12                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_sse2.c:254:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.12                                                 mull = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.12                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_sse2.c:255:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.12                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.12                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_sse2.c:256:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.12                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.12 lpc_intrin_sse41.c:1259:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.12                                                 summ = _mm_mullo_epi32(q8, _mm_loadu_si128((const __m128i*)(data+i-9)));
#20 48.12                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_sse41.c:1260:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.12                                                 mull = _mm_mullo_epi32(q7, _mm_loadu_si128((const __m128i*)(data+i-8))); summ = _mm_add_epi32(summ, mull);
#20 48.12                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.12 lpc_intrin_sse41.c:1261:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.12                                                 mull = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 48.12                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_sse41.c:1262:50: warning: lpc_intrin_sse2.c:257:49:cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align] warning: 
#20 48.13                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.13                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.13                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);lpc_intrin_sse41.c:1263:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.13                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.13                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 
#20 48.13 lpc_intrin_sse41.c                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 :1264:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.13                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.13                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_sse41.c:1265:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.13                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.13                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_sse2.c:lpc_intrin_sse41.c:1266:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.13 258:                                                mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.13                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.13                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);lpc_intrin_sse41.c:1267:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.13 
#20 48.13                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~                                                mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.13 
#20 48.13                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_sse41.c:1269:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.13 lpc_intrin_sse2.c:260:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.13                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.13                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));                                                                 ^~~~~~~~~~~~~~~~~~~~~~
#20 48.13 
#20 48.13                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_sse2.c:260lpc_intrin_sse41.c:1269:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.13 :                                                _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.13                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.13                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.13                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_sse41.clpc_intrin_sse2.c:273:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.13 :1289:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.13                                                 summ = _mm_mullo_epi32(q7, _mm_loadu_si128((const __m128i*)(data+i-8)));
#20 48.13                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13                                                 summ = _mm_madd_epi16(q4, _mm_loadu_si128((const __m128i*)(data+i-5)));lpc_intrin_sse41.c
#20 48.13 :1290:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.13                                                 mull = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7))); summ = _mm_add_epi32(summ, mull);
#20 48.13                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~lpc_intrin_sse41.c
#20 48.13 :1291:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.13                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.13                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_sse41.c:lpc_intrin_sse2.c1292:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.13                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.13 :274:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 
#20 48.13                                                 mull = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.13                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.13 lpc_intrin_sse2.c:275:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.14                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_sse2.c:276:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.14                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_sse2.c:277:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.14                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~lpc_intrin_sse41.c
#20 48.14 :1293:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.14                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_sse2.clpc_intrin_sse41.c::1294279::5024::  warning: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14 
#20 48.14                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);                                                _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.14 
#20 48.14                                                                  ^~~~~~~~~~~~~~~~~~~~~~                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 
#20 48.14 lpc_intrin_sse2.c:279:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.14                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_sse41.c:1295:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.14                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_sse41.c:1296:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.14                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_sse41.c:1298:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.14                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_sse41.c:1298:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.14                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_sse2.c:295:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 summ = _mm_madd_epi16(q3, _mm_loadu_si128((const __m128i*)(data+i-4)));
#20 48.14                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_sse2.c:296:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 mull = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.14                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_sse2.c:297:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.14                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_sse2.c:298:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.14                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_sse2.c:300:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.14                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_sse2.c:300:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.14                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_sse2.c:311:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 summ = _mm_madd_epi16(q2, _mm_loadu_si128((const __m128i*)(data+i-3)));
#20 48.14                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_sse2.c:312:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 mull = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.14                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_sse2.c:313:49: lpc_intrin_sse41.c:1313:50warning: : warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 summ = _mm_mullo_epi32(q6, _mm_loadu_si128((const __m128i*)(data+i-7)));
#20 48.14                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]lpc_intrin_sse41.c:1314:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 mull = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6))); summ = _mm_add_epi32(summ, mull);
#20 48.14                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 
#20 48.14                                                 mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.14                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_sse41.clpc_intrin_sse2.c:315:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14 :1315:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.14                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.14                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_sse41.c:1316:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);lpc_intrin_sse2.c:315:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14 
#20 48.14                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.14                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.14 lpc_intrin_sse41.c:1317:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.14                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.14                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_sse41.c:1318:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.15                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.15                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_sse41.c:1319:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.15                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.15                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_sse41.c:1321:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.15                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.15                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_sse41.c:lpc_intrin_sse2.c1321:327:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.15                                                 summ = _mm_madd_epi16(q1, _mm_loadu_si128((const __m128i*)(data+i-2)));:
#20 48.15                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 78:lpc_intrin_sse2.c:328:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.15                                                  mull = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.15                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.15 lpc_intrin_sse2.c:330:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.15                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.15                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_sse2.c:330:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.15                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.15                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.15                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_sse2.c:339:49: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.15                                                 summ = _mm_madd_epi16(q0, _mm_loadu_si128((const __m128i*)(data+i-1)));
#20 48.15                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_sse2.c:341:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.15                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.15                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_sse2.c:341:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.15                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.15                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_sse41.c:1337:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.15                                                 summ = _mm_mullo_epi32(q5, _mm_loadu_si128((const __m128i*)(data+i-6)));
#20 48.15                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.15 lpc_intrin_sse41.c:1338:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.16                                                 mull = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5))); summ = _mm_add_epi32(summ, mull);
#20 48.16                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.16 lpc_intrin_sse41.c:1339:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.16                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.16                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.16 lpc_intrin_sse41.c:1340:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.16                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.16                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.16 lpc_intrin_sse41.c:1341:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.16                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.16                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.16 lpc_intrin_sse41.c:1342:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.16                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.16                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.16 lpc_intrin_sse41.c:1344:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.16                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.16                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.16 lpc_intrin_sse41.c:1344:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.16                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.16                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.16 lpc_intrin_sse41.c:1357:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.16                                                 summ = _mm_mullo_epi32(q4, _mm_loadu_si128((const __m128i*)(data+i-5)));
#20 48.17                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_sse41.c:1358:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.17                                                 mull = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4))); summ = _mm_add_epi32(summ, mull);
#20 48.17                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_sse41.c:1359:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.17                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.17                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_sse41.c:1360:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.17                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.17                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_sse41.c:1361:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.17                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.17                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_sse41.c:1363:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.17                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.17                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.17 lpc_intrin_sse41.c:1363:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.17                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.17                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_sse41.c:1379:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.18                                                 summ = _mm_mullo_epi32(q3, _mm_loadu_si128((const __m128i*)(data+i-4)));
#20 48.18                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_sse41.c:1380:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.18                                                 mull = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3))); summ = _mm_add_epi32(summ, mull);
#20 48.18                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_sse41.c:1381:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.18                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.18                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.18 lpc_intrin_sse2.c:420:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));  // 0  0  q[1]  q[0]
#20 48.19                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:421:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));  // 0  0  q[3]  q[2]
#20 48.19                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse41.c:1382:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19 lpc_intrin_sse2.c:422:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.19                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));  // 0  0  q[5]  q[4]
#20 48.19                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:423:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                         xmm3 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+6));  // 0  0  q[7]  q[6]
#20 48.19                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse41.c:1384:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19 lpc_intrin_sse2.c                                                _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.19 :424                                                                 ^~~~~~~~~~~~~~~~~~~~~~:
#20 48.19 29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                         xmm4 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+8));  // 0  0  q[9]  q[8]
#20 48.19                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse41.c:1384:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.19                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:425:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                         xmm5 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+10)); // 0  0  q[11] q[10]
#20 48.19                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse41.c:1395:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 summ = _mm_mullo_epi32(q2, _mm_loadu_si128((const __m128i*)(data+i-3)));
#20 48.19                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:438:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19 lpc_intrin_sse41.c:1396:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-12));  // 0   0        d[i-11]  d[i-12]
#20 48.19                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19                                                 mull = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2))); summ = _mm_add_epi32(summ, mull);
#20 48.19                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse41.c:1397:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);lpc_intrin_sse2.c
#20 48.19 :                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~444
#20 48.19 :30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-10));
#20 48.19                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse41.c:1399:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.19                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse41.c:1399:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19 lpc_intrin_sse2.c:451:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.19                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-8));
#20 48.19                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:458:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 48.19                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse41.c:1411:50:lpc_intrin_sse2.c :warning: 465cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]:
#20 48.19 30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 48.19                                                 summ = _mm_mullo_epi32(q1, _mm_loadu_si128((const __m128i*)(data+i-2)));                                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 
#20 48.19                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse41.c:1412:50: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 mull = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1))); summ = _mm_add_epi32(summ, mull);
#20 48.19                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:472:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19 lpc_intrin_sse41.c                                                xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));:
#20 48.19 1414                                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~:
#20 48.19 24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.19                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse41.c:1414:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.19                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.clpc_intrin_sse41.c::1423483::5029::  warning: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19 
#20 48.19                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 48.19                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                summ = _mm_mullo_epi32(q0, _mm_loadu_si128((const __m128i*)(data+i-1)));
#20 48.19 
#20 48.19                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:484:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 48.19                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse41.c:1425:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.19                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:485:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 48.19                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse41.c:1425:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), summ));
#20 48.19                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:486:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                         xmm3 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+6));
#20 48.19                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:487:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                         xmm4 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+8));
#20 48.19                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:504:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-10));
#20 48.19                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:511:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-8));
#20 48.19                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:518:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 48.19                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:525:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 48.19                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:532:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.19                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:545:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 48.19                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:546:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 48.19                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:547:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 48.19                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:548:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                         xmm3 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+6));
#20 48.19                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.19 lpc_intrin_sse2.c:549:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.19                                         xmm4 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+8));
#20 48.19                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:561:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-10));
#20 48.20                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:567:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-8));
#20 48.20                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:574:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 48.20                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:581:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 48.20                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:588:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.20                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:599:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 48.20                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:600:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 48.20                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:601:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 48.20                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:602:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                         xmm3 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+6));
#20 48.20                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:618:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-8));
#20 48.20                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:625:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 48.20                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:632:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 48.20                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:639:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.20                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:654:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 48.20                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:655:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 48.20                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:656:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 48.20                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:657:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                         xmm3 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+6));
#20 48.20                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:668:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-8));
#20 48.20                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.20 lpc_intrin_sse2.c:674:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.20                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 48.21                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_sse2.c:681:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 48.21                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_sse2.c:688:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.21                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_sse2.c:699:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 48.21                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_sse2.c:700:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 48.21                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_sse2.c:701:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 48.21                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_sse2.c:716:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 48.21                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_sse2.c:723:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 48.21                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_sse2.c:730:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.21                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.21                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.21 lpc_intrin_sse2.c:743:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 48.22                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse2.c:744:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 48.22                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse2.c:745:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22   CC       md5.lo
#20 48.22                                         xmm2 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+4));
#20 48.22                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse2.c:755:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-6));
#20 48.22                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse2.c:761:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 48.22                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse2.c:768:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.22                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse2.c:779:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 48.22                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse2.c:780:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 48.22                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse2.c:794:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 48.22                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse2.c:801:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.22                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse2.c:816:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.22                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 48.22                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.22 lpc_intrin_sse2.c:817:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                         xmm1 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+2));
#20 48.23                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_sse2.c:826:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-4));
#20 48.23                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_sse2.c:832:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.23                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_sse2.c:843:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 48.23                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_sse2.c:856:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 xmm6 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.23                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_sse2.c:869:29: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                         xmm0 = _mm_loadl_epi64((const __m128i*)(qlp_coeff+0));
#20 48.23                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.23 lpc_intrin_sse2.c:876:30: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 48.23                                                 xmm7 = _mm_loadl_epi64((const __m128i*)(data+i-2));
#20 48.23                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.24   CC       memory.lo
#20 48.26   CC       metadata_iterators.lo
#20 48.28   CC       metadata_object.lo
#20 48.52 102 warnings generated.
#20 48.63   CC       stream_decoder.lo
#20 48.80 174 warnings generated.
#20 48.91 lpc_intrin_avx2.c:80:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.92                                                 summ = _mm256_madd_epi16(q11, _mm256_loadu_si256((const __m256i*)(data+i-12)));
#20 48.92                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.92 lpc_intrin_avx2.c:81:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.92                                                 mull = _mm256_madd_epi16(q10, _mm256_loadu_si256((const __m256i*)(data+i-11))); summ = _mm256_add_epi32(summ, mull);
#20 48.92                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.92 lpc_intrin_avx2.c:82:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.92                                                 mull = _mm256_madd_epi16(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10))); summ = _mm256_add_epi32(summ, mull);
#20 48.92                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.92 lpc_intrin_avx2.c:83:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.92                                                 mull = _mm256_madd_epi16(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.92                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.92 lpc_intrin_avx2.c:84:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.92                                                 mull = _mm256_madd_epi16(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.92                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.92 lpc_intrin_avx2.c:85:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.92                                                 mull = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.92                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.92 lpc_intrin_avx2.c:86:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.92                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.92                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.92 lpc_intrin_avx2.c:87:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.93                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.93                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.93 lpc_intrin_avx2.c:88:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.93                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.93                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.93 lpc_intrin_avx2.c:89:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.93                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.93                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.93 lpc_intrin_avx2.c:90:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.93                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.93                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.93 lpc_intrin_avx2.c:91:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.93                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.94                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.94 lpc_intrin_avx2.c:93:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.94                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.94                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.94 lpc_intrin_avx2.c:93:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.94                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.94                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.94 lpc_intrin_avx2.c:112:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.94                                                 summ = _mm256_madd_epi16(q10, _mm256_loadu_si256((const __m256i*)(data+i-11)));
#20 48.94                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.94 lpc_intrin_avx2.c:113:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.95                                                 mull = _mm256_madd_epi16(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10))); summ = _mm256_add_epi32(summ, mull);
#20 48.95                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.95 lpc_intrin_avx2.c:114:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.95                                                 mull = _mm256_madd_epi16(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.95                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.95 lpc_intrin_avx2.c:115:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.95                                                 mull = _mm256_madd_epi16(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.95                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.95 lpc_intrin_avx2.c:116:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.95                                                 mull = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.95                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.95 lpc_intrin_avx2.c:117:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.95                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.95                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.95 lpc_intrin_avx2.c:118:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.95                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.95                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.95 lpc_intrin_avx2.c:119:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.95                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.95                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.95 lpc_intrin_avx2.c:120:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.95                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.95                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.95 lpc_intrin_avx2.c:121:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.95 stream_decoder.c:                                                mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);2172
#20 48.95 :                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~13
#20 48.95 : warning: variable 'crc8' set but not used [-Wunused-but-set-variable]
#20 48.95         FLAC__byte crc8, raw_header[16]; /* MAGIC NUMBER based on the maximum frame header size, including CRC */
#20 48.95                    ^
#20 48.95 lpc_intrin_avx2.c:122:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.95                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.95                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.95 lpc_intrin_avx2.c:124:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.95                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.95                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.95 lpc_intrin_avx2.c:124:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.96                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.96                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.96 lpc_intrin_avx2.c:144:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.96                                                 summ = _mm256_madd_epi16(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10)));
#20 48.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.96 lpc_intrin_avx2.c:145:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.96                                                 mull = _mm256_madd_epi16(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.96 lpc_intrin_avx2.c:146:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.96                                                 mull = _mm256_madd_epi16(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.96 lpc_intrin_avx2.c:147:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.96                                                 mull = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.96 lpc_intrin_avx2.c:148:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.96                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.96 lpc_intrin_avx2.c:149:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.96                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.96 lpc_intrin_avx2.c:150:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.96                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.96 lpc_intrin_avx2.c:151:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.96                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.96 lpc_intrin_avx2.c:152:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.96                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.96 lpc_intrin_avx2.c:153:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.96                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.96 lpc_intrin_avx2.c:155:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.96                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.96                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.96 lpc_intrin_avx2.c:155:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.96                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.96                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.96 lpc_intrin_avx2.c:172:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.96                                                 summ = _mm256_madd_epi16(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9 )));
#20 48.96                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.97 lpc_intrin_avx2.c:173:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.97                                                 mull = _mm256_madd_epi16(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.97 lpc_intrin_avx2.c:174:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.97                                                 mull = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.97 lpc_intrin_avx2.c:175:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.97                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.97 lpc_intrin_avx2.c:176:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.97                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.97 lpc_intrin_avx2.c:177:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.97                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.97 lpc_intrin_avx2.c:178:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.97                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.97 lpc_intrin_avx2.c:179:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.97                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.97 lpc_intrin_avx2.c:180:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.97                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.97                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.97 lpc_intrin_avx2.c:182:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.97                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.97                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.97 lpc_intrin_avx2.c:182:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.97                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.97                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.98 lpc_intrin_avx2.c:202:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.98                                                 summ = _mm256_madd_epi16(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8 )));
#20 48.98                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.98 lpc_intrin_avx2.c:203:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.98                                                 mull = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.98                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.98 lpc_intrin_avx2.c:204:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.98                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.98                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.98 lpc_intrin_avx2.c:205:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.98                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.98                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.98 lpc_intrin_avx2.c:206:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.98                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.98                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.98 lpc_intrin_avx2.c:207:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.98                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.98                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.99 lpc_intrin_avx2.c:208:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.99                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.99                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.99 lpc_intrin_avx2.c:209:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.99                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 48.99                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 48.99 lpc_intrin_avx2.c:211:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.99                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.99                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 48.99 lpc_intrin_avx2.c:211:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 48.99                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 48.99                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 48.99 lpc_intrin_avx2.c:226:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.00                                                 summ = _mm256_madd_epi16(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7 )));
#20 49.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.00 lpc_intrin_avx2.c:227:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.00                                                 mull = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.00 lpc_intrin_avx2.c:228:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.00                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.00 lpc_intrin_avx2.c:229:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.00                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.00 lpc_intrin_avx2.c:230:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.00                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.00 lpc_intrin_avx2.c:231:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.00                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.00                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.01 lpc_intrin_avx2.c:232:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.01                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.01                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.01 lpc_intrin_avx2.c:234:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.01                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.01                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.01 lpc_intrin_avx2.c:234:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.01                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.01                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.01 lpc_intrin_avx2.c:250:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.01                                                 summ = _mm256_madd_epi16(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6 )));
#20 49.01                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.01 lpc_intrin_avx2.c:251:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.01                                                 mull = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.01                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.01 lpc_intrin_avx2.c:252:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.01                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.01                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.01 lpc_intrin_avx2.c:253:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.01                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.01                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.01 lpc_intrin_avx2.c:254:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.01                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.01                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.01 lpc_intrin_avx2.c:255:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.01                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.01                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.01 lpc_intrin_avx2.c:257:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.01                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.01                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.01 lpc_intrin_avx2.c:257:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.01                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.01                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.01 lpc_intrin_avx2.c:270:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.02                                                 summ = _mm256_madd_epi16(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5 )));
#20 49.02                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.02 lpc_intrin_avx2.c:271:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.02                                                 mull = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.02                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.02 lpc_intrin_avx2.c:272:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.02                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.02                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.02 lpc_intrin_avx2.c:273:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.02                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.02                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.02 lpc_intrin_avx2.c:274:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.02                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.02                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.02 lpc_intrin_avx2.c:276:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.02                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.02                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.02 lpc_intrin_avx2.c:276:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.02                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.02                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.02 lpc_intrin_avx2.c:292:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.02                                                 summ = _mm256_madd_epi16(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4 )));
#20 49.02                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.02 lpc_intrin_avx2.c:293:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.02                                                 mull = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.02                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.02 lpc_intrin_avx2.c:294:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.02                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.02                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.02 lpc_intrin_avx2.c:295:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.03                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.03                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.03 lpc_intrin_avx2.c:297:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.03                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.03                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.03 lpc_intrin_avx2.c:297:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.03                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.03                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.03 lpc_intrin_avx2.c:308:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.03                                                 summ = _mm256_madd_epi16(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3 )));
#20 49.03                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.03 lpc_intrin_avx2.c:309:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.03                                                 mull = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.03                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.03 lpc_intrin_avx2.c:310:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.03                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.03                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.03 lpc_intrin_avx2.c:312:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.03                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.03                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.03 lpc_intrin_avx2.c:312:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.03                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.03                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.03 lpc_intrin_avx2.c:324:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.03                                                 summ = _mm256_madd_epi16(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2 )));
#20 49.03                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.03 lpc_intrin_avx2.c:325:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.03                                                 mull = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 ))); summ = _mm256_add_epi32(summ, mull);
#20 49.03                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.03 lpc_intrin_avx2.c:327:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.03                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.03                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.03 lpc_intrin_avx2.c:327:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.03                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.03                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.03 lpc_intrin_avx2.c:336:56: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.03                                                 summ = _mm256_madd_epi16(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1 )));
#20 49.03                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.03 lpc_intrin_avx2.c:338:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.03                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.03                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.03 lpc_intrin_avx2.c:338:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.03                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.03                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.07 lpc_intrin_avx2.c:435:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.07                                                 summ = _mm256_mullo_epi32(q11, _mm256_loadu_si256((const __m256i*)(data+i-12)));
#20 49.07                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.07 lpc_intrin_avx2.c:436:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.07                                                 mull = _mm256_mullo_epi32(q10, _mm256_loadu_si256((const __m256i*)(data+i-11))); summ = _mm256_add_epi32(summ, mull);
#20 49.07                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.07 lpc_intrin_avx2.c:437:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.07                                                 mull = _mm256_mullo_epi32(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10))); summ = _mm256_add_epi32(summ, mull);
#20 49.07                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.07 lpc_intrin_avx2.c:438:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.07                                                 mull = _mm256_mullo_epi32(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9)));  summ = _mm256_add_epi32(summ, mull);
#20 49.07                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.07 lpc_intrin_avx2.c:439:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.07                                                 mull = _mm256_mullo_epi32(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8)));  summ = _mm256_add_epi32(summ, mull);
#20 49.07                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.07 lpc_intrin_avx2.c:440:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.08                                                 mull = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));  summ = _mm256_add_epi32(summ, mull);
#20 49.08                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.08 lpc_intrin_avx2.c:441:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.08                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 49.08                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.08 lpc_intrin_avx2.c:442:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.08                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 49.08                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.08 lpc_intrin_avx2.c:443:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.08                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 49.08                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.08 lpc_intrin_avx2.c:444:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.08                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 49.08                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.08 lpc_intrin_avx2.c:445:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.08                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 49.08                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.08 lpc_intrin_avx2.c:446:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.08                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.08                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.08 lpc_intrin_avx2.c:448:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.08                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.08                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.08 lpc_intrin_avx2.c:448:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.08                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.08                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.08 lpc_intrin_avx2.c:467:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.09                                                 summ = _mm256_mullo_epi32(q10, _mm256_loadu_si256((const __m256i*)(data+i-11)));
#20 49.09                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.09 lpc_intrin_avx2.c:468:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.09                                                 mull = _mm256_mullo_epi32(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10))); summ = _mm256_add_epi32(summ, mull);
#20 49.09                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.09 lpc_intrin_avx2.c:469:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.09                                                 mull = _mm256_mullo_epi32(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9)));  summ = _mm256_add_epi32(summ, mull);
#20 49.09                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.09 lpc_intrin_avx2.c:470:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.09                                                 mull = _mm256_mullo_epi32(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8)));  summ = _mm256_add_epi32(summ, mull);
#20 49.09                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.09 lpc_intrin_avx2.c:471:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.09                                                 mull = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));  summ = _mm256_add_epi32(summ, mull);
#20 49.09                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.09 lpc_intrin_avx2.c:472:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.09                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 49.09                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.09 lpc_intrin_avx2.c:473:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.09                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 49.09                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.09 lpc_intrin_avx2.c:474:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.09                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 49.09                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.09 lpc_intrin_avx2.c:475:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.09                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 49.09                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.09 lpc_intrin_avx2.c:476:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.09                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 49.09                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.09 lpc_intrin_avx2.c:477:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.09                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.09                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.09 lpc_intrin_avx2.c:479:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.09                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.09                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.09 lpc_intrin_avx2.c:479:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.09                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.09                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.09 lpc_intrin_avx2.c:499:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.09                                                 summ = _mm256_mullo_epi32(q9,  _mm256_loadu_si256((const __m256i*)(data+i-10)));
#20 49.09                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.10 lpc_intrin_avx2.c:500:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.10                                                 mull = _mm256_mullo_epi32(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9)));  summ = _mm256_add_epi32(summ, mull);
#20 49.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.10 lpc_intrin_avx2.c:501:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.10                                                 mull = _mm256_mullo_epi32(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8)));  summ = _mm256_add_epi32(summ, mull);
#20 49.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.10 lpc_intrin_avx2.c:502:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.10                                                 mull = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));  summ = _mm256_add_epi32(summ, mull);
#20 49.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.10 lpc_intrin_avx2.c:503:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.10                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 49.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.10 lpc_intrin_avx2.c:504:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.10                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 49.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.10 lpc_intrin_avx2.c:505:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.10                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 49.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.10 lpc_intrin_avx2.c:506:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.10                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 49.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.10 lpc_intrin_avx2.c:507:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.10                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 49.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.10 lpc_intrin_avx2.c:508:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.10                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.10 lpc_intrin_avx2.c:510:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.10                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.10                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.10 lpc_intrin_avx2.c:510:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.10                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.10                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.10 lpc_intrin_avx2.c:527:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.10                                                 summ = _mm256_mullo_epi32(q8,  _mm256_loadu_si256((const __m256i*)(data+i-9)));
#20 49.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.10 lpc_intrin_avx2.c:528:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.10                                                 mull = _mm256_mullo_epi32(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8)));  summ = _mm256_add_epi32(summ, mull);
#20 49.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.10 lpc_intrin_avx2.c:529:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.10                                                 mull = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));  summ = _mm256_add_epi32(summ, mull);
#20 49.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.10 lpc_intrin_avx2.c:530:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.10                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 49.10                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.10 lpc_intrin_avx2.c:531:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 49.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:532:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 49.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:533:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 49.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:534:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 49.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:535:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:537:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.11                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:537:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.11                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:557:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 summ = _mm256_mullo_epi32(q7,  _mm256_loadu_si256((const __m256i*)(data+i-8)));
#20 49.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:558:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 mull = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));  summ = _mm256_add_epi32(summ, mull);
#20 49.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:559:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 49.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:560:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 49.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:561:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 49.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.11 lpc_intrin_avx2.c:562:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.11                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 49.11                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:563:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 49.12                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:564:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.12                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:566:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.12                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:566:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.12                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.12   CC       stream_encoder.lo
#20 49.12 lpc_intrin_avx2.c:581:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 summ = _mm256_mullo_epi32(q6,  _mm256_loadu_si256((const __m256i*)(data+i-7)));
#20 49.12                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:582:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 mull = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));  summ = _mm256_add_epi32(summ, mull);
#20 49.12                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:583:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 49.12                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:584:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 49.12                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:585:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 49.12                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:586:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 49.12                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:587:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.12                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:589:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.12                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.12                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.12 lpc_intrin_avx2.c:589:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.13                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.13                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.13 lpc_intrin_avx2.c:605:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.13                                                 summ = _mm256_mullo_epi32(q5,  _mm256_loadu_si256((const __m256i*)(data+i-6)));
#20 49.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.13 lpc_intrin_avx2.c:606:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.13                                                 mull = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));  summ = _mm256_add_epi32(summ, mull);
#20 49.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.13 lpc_intrin_avx2.c:607:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.13                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 49.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.13 lpc_intrin_avx2.c:608:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.13                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 49.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.13 lpc_intrin_avx2.c:609:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.13                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 49.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.13 lpc_intrin_avx2.c:610:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.13                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.13 lpc_intrin_avx2.c:612:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.13                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.13                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.13 lpc_intrin_avx2.c:612:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.13                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.13                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.13 lpc_intrin_avx2.c:625:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.13                                                 summ = _mm256_mullo_epi32(q4,  _mm256_loadu_si256((const __m256i*)(data+i-5)));
#20 49.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.13 lpc_intrin_avx2.c:626:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.13                                                 mull = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));  summ = _mm256_add_epi32(summ, mull);
#20 49.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.13 lpc_intrin_avx2.c:627:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.13                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 49.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.13 lpc_intrin_avx2.c:628:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.13                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 49.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.13 lpc_intrin_avx2.c:629:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.13                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.13                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.13 lpc_intrin_avx2.c:631:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.14                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:631:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.14                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:647:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 summ = _mm256_mullo_epi32(q3,  _mm256_loadu_si256((const __m256i*)(data+i-4)));
#20 49.14                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:648:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 mull = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));  summ = _mm256_add_epi32(summ, mull);
#20 49.14                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:649:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 49.14                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:650:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.14                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:652:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.14                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:652:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.14                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:663:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 summ = _mm256_mullo_epi32(q2,  _mm256_loadu_si256((const __m256i*)(data+i-3)));
#20 49.14                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:664:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 mull = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));  summ = _mm256_add_epi32(summ, mull);
#20 49.14                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:665:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.14                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:667:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.14                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:667:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.14                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:679:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 summ = _mm256_mullo_epi32(q1,  _mm256_loadu_si256((const __m256i*)(data+i-2)));
#20 49.14                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:680:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 mull = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));  summ = _mm256_add_epi32(summ, mull);
#20 49.14                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:682:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.14                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:682:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.14                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:691:57: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.14                                                 summ = _mm256_mullo_epi32(q0,  _mm256_loadu_si256((const __m256i*)(data+i-1)));
#20 49.14                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.14 lpc_intrin_avx2.c:693:27: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.15                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.15                                                                     ^~~~~~~~~~~~~~~~~~~~~~
#20 49.15 lpc_intrin_avx2.c:693:87: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 49.15                                                 _mm256_storeu_si256((__m256i*)(residual+i), _mm256_sub_epi32(_mm256_loadu_si256((const __m256i*)(data+i)), summ));
#20 49.15                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.18 lpc_intrin_avx2.c:768:42: warning: cast from 'FLAC__int32 *' (aka 'int *') to 'const __m256i *' increases required alignment from 16 to 32 [-Wcast-align]
#20 49.18         const __m256i pack = _mm256_loadu_si256((const __m256i *)pack_arr);
#20 49.18                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.18 lpc_intrin_avx2.c:794:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.18                                                 summ = _mm256_mul_epi32(q11, _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-12))));
#20 49.18                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.18 lpc_intrin_avx2.c:795:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.18                                                 mull = _mm256_mul_epi32(q10, _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-11)))); summ = _mm256_add_epi64(summ, mull);
#20 49.18                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.19 lpc_intrin_avx2.c:796:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.19                                                 mull = _mm256_mul_epi32(q9,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-10)))); summ = _mm256_add_epi64(summ, mull);
#20 49.19                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.19 lpc_intrin_avx2.c:797:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.19                                                 mull = _mm256_mul_epi32(q8,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-9 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.19                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.19 lpc_intrin_avx2.c:798:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.19                                                 mull = _mm256_mul_epi32(q7,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-8 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.19                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.19 lpc_intrin_avx2.c:799:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.19                                                 mull = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.19                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.19 lpc_intrin_avx2.c:800:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.19                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.19                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.19 lpc_intrin_avx2.c:801:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.19                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.19                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.19 lpc_intrin_avx2.c:802:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.19                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.19                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.19 lpc_intrin_avx2.c:803:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.19                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.19                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.20 lpc_intrin_avx2.c:804:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.20                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.20 lpc_intrin_avx2.c:805:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.20                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.20 lpc_intrin_avx2.c:807:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.20                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.20                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.20 lpc_intrin_avx2.c:807:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.20                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.20                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.20 lpc_intrin_avx2.c:826:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.20                                                 summ = _mm256_mul_epi32(q10, _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-11))));
#20 49.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.20 lpc_intrin_avx2.c:827:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.20                                                 mull = _mm256_mul_epi32(q9,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-10)))); summ = _mm256_add_epi64(summ, mull);
#20 49.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.20 lpc_intrin_avx2.c:828:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.20                                                 mull = _mm256_mul_epi32(q8,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-9 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.20 lpc_intrin_avx2.c:829:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.20                                                 mull = _mm256_mul_epi32(q7,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-8 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.20 lpc_intrin_avx2.c:830:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.20                                                 mull = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.20 lpc_intrin_avx2.c:831:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.20                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.20 lpc_intrin_avx2.c:832:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.20                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.20 lpc_intrin_avx2.c:833:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.20                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.20 lpc_intrin_avx2.c:834:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.20                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.20 lpc_intrin_avx2.c:835:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.20                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.20                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.21 lpc_intrin_avx2.c:836:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.21                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.21 lpc_intrin_avx2.c:838:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.21                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.21                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.21 lpc_intrin_avx2.c:838:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.21                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.21                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.21 lpc_intrin_avx2.c:858:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.21                                                 summ = _mm256_mul_epi32(q9,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-10))));
#20 49.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.21 lpc_intrin_avx2.c:859:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.21                                                 mull = _mm256_mul_epi32(q8,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-9 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.21 lpc_intrin_avx2.c:860:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.21                                                 mull = _mm256_mul_epi32(q7,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-8 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.21 lpc_intrin_avx2.c:861:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.21                                                 mull = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.21 lpc_intrin_avx2.c:862:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.21                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.21 lpc_intrin_avx2.c:863:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.21                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.21 lpc_intrin_avx2.c:864:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.21                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.21 lpc_intrin_avx2.c:865:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.21                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.21 lpc_intrin_avx2.c:866:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.21                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.21                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.22 lpc_intrin_avx2.c:867:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.22                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.22 lpc_intrin_avx2.c:869:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.22                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.22                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.22 lpc_intrin_avx2.c:869:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.22                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.22                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.22 lpc_intrin_avx2.c:886:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.22                                                 summ = _mm256_mul_epi32(q8,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-9 ))));
#20 49.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.22 lpc_intrin_avx2.c:887:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.22                                                 mull = _mm256_mul_epi32(q7,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-8 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.22 lpc_intrin_avx2.c:888:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.22                                                 mull = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.22 lpc_intrin_avx2.c:889:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.22                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.22 lpc_intrin_avx2.c:890:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.22                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.22 lpc_intrin_avx2.c:891:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.22                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.22 lpc_intrin_avx2.c:892:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.22                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.22 lpc_intrin_avx2.c:893:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.22                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.22 lpc_intrin_avx2.c:894:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.22                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.22                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.22 lpc_intrin_avx2.c:896:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.23                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.23                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:896:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.23                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.23                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:916:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.23                                                 summ = _mm256_mul_epi32(q7,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-8 ))));
#20 49.23                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:917:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.23                                                 mull = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.23                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:918:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.23                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.23                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:919:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.23                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.23                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:920:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.23                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.23                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:921:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.23                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.23                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:922:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.23                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.23                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:923:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.23                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.23                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:925:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.23                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.23                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.23 lpc_intrin_avx2.c:925:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.23                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.23                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:940:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.24                                                 summ = _mm256_mul_epi32(q6,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-7 ))));
#20 49.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:941:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.24                                                 mull = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:942:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.24                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:943:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.24                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:944:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.24                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:945:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.24                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:946:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.24                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:948:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.24                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.24                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:948:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.24                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.24                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:964:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.24                                                 summ = _mm256_mul_epi32(q5,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-6 ))));
#20 49.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.24 lpc_intrin_avx2.c:965:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.24                                                 mull = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.24                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.25 lpc_intrin_avx2.c:966:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.25                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.25                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.25 lpc_intrin_avx2.c:967:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.25                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.25                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.25 lpc_intrin_avx2.c:968:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.25                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.25                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.25 lpc_intrin_avx2.c:969:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.25                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.25                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.25 lpc_intrin_avx2.c:971:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.25                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.25                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.25 lpc_intrin_avx2.c:971:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.25                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.25                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.25 lpc_intrin_avx2.c:984:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.25                                                 summ = _mm256_mul_epi32(q4,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-5 ))));
#20 49.25                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.25 lpc_intrin_avx2.c:985:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.25                                                 mull = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.25                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.25 lpc_intrin_avx2.c:986:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.25                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.25                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.25 lpc_intrin_avx2.c:987:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.25                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.25                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.25 lpc_intrin_avx2.c:988:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.25                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.25                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.25 lpc_intrin_avx2.c:990:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.25                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.25                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.25 lpc_intrin_avx2.c:990:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.25                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.25                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.26 lpc_intrin_avx2.c:1006:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.26                                                 summ = _mm256_mul_epi32(q3,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-4 ))));
#20 49.26                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.26 lpc_intrin_avx2.c:1007:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.26                                                 mull = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.26                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.26 lpc_intrin_avx2.c:1008:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.26                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.26                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.26 lpc_intrin_avx2.c:1009:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.26                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.26                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.26 lpc_intrin_avx2.c:1011:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.26                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.26                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.26 lpc_intrin_avx2.c:1011:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.26                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.26                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.26 lpc_intrin_avx2.c:1022:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.26                                                 summ = _mm256_mul_epi32(q2,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-3 ))));
#20 49.26                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.27 lpc_intrin_avx2.c:1023:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.27                                                 mull = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.27                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.27 lpc_intrin_avx2.c:1024:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.27                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.27                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.27 lpc_intrin_avx2.c:1026:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.27                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.27                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.27 lpc_intrin_avx2.c:1026:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.27                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.27                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.27 lpc_intrin_avx2.c:1038:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.27                                                 summ = _mm256_mul_epi32(q1,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-2 ))));
#20 49.27                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.27 lpc_intrin_avx2.c:1039:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.27                                                 mull = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 )))); summ = _mm256_add_epi64(summ, mull);
#20 49.27                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.27 lpc_intrin_avx2.c:1041:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.27                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.27                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.28 lpc_intrin_avx2.c:1041:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.28                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.28                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.28 lpc_intrin_avx2.c:1050:74: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.28                                                 summ = _mm256_mul_epi32(q0,  _mm256_cvtepu32_epi64(_mm_loadu_si128((const __m128i*)(data+i-1 ))));
#20 49.28                                                                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.28 lpc_intrin_avx2.c:1052:24: warning: cast from 'FLAC__int32 *' (aka 'int *') to '__m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.28                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.28                                                                  ^~~~~~~~~~~~~~~~~~~~~~
#20 49.28 lpc_intrin_avx2.c:1052:78: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.28                                                 _mm_storeu_si128((__m128i*)(residual+i), _mm_sub_epi32(_mm_loadu_si128((const __m128i*)(data+i)), _mm256_castsi256_si128(summ)));
#20 49.28                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
#20 49.65   CC       stream_encoder_intrin_sse2.lo
#20 49.80   CC       stream_encoder_intrin_ssse3.lo
#20 49.93 stream_encoder_intrin_sse2.c:91:55: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.93                                         __m128i mm_res = local_abs_epi32(_mm_loadu_si128((const __m128i*)(residual+residual_sample)));
#20 49.93                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.93 stream_encoder_intrin_sse2.c:124:55: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 49.93                                         __m128i mm_res = local_abs_epi32(_mm_loadl_epi64((const __m128i*)(residual+residual_sample))); /*  0   0  |r1|   |r0| */
#20 49.93                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 49.93 stream_encoder_intrin_sse2.c:135:22: warning: cast from 'FLAC__uint64 *' (aka 'unsigned long *') to '__m128i *' increases required alignment from 8 to 16 [-Wcast-align]
#20 49.93                                 _mm_storel_epi64((__m128i*)(abs_residual_partition_sums+partition), mm_sum);
#20 49.93                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 50.06 3 warnings generated.
#20 50.08 stream_encoder_intrin_ssse3.c:80:53: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 50.08                                         __m128i mm_res = _mm_abs_epi32(_mm_loadu_si128((const __m128i*)(residual+residual_sample)));
#20 50.08                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 50.08 stream_encoder_intrin_ssse3.c:113:53: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 50.08                                         __m128i mm_res = _mm_abs_epi32(_mm_loadl_epi64((const __m128i*)(residual+residual_sample))); /*  0   0  |r1|   |r0| */
#20 50.08                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 50.08 stream_encoder_intrin_ssse3.c:124:22: warning: cast from 'FLAC__uint64 *' (aka 'unsigned long *') to '__m128i *' increases required alignment from 8 to 16 [-Wcast-align]
#20 50.08                                 _mm_storel_epi64((__m128i*)(abs_residual_partition_sums+partition), mm_sum);
#20 50.09                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 50.20 3 warnings generated.
#20 50.29 307 warnings generated.
#20 50.35   CC       stream_encoder_intrin_avx2.lo
#20 50.50   CC       stream_encoder_framing.lo
#20 50.52   CC       window.lo
#20 50.54 1 warning generated.
#20 50.84   CC       ogg_decoder_aspect.lo
#20 51.28   CC       ogg_encoder_aspect.lo
#20 51.31 stream_encoder_intrin_avx2.c:70:59: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m256i *' increases required alignment from 4 to 32 [-Wcast-align]
#20 51.31                                         __m256i res256 = _mm256_abs_epi32(_mm256_loadu_si256((const __m256i*)(residual+residual_sample)));
#20 51.31                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.31 stream_encoder_intrin_avx2.c:77:53: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 51.31                                         __m128i res128 = _mm_abs_epi32(_mm_loadu_si128((const __m128i*)(residual+residual_sample)));
#20 51.31                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.31 stream_encoder_intrin_avx2.c:102:53: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 51.31                                         __m128i res128 = _mm_abs_epi32(_mm_loadu_si128((const __m128i*)(residual+residual_sample)));
#20 51.31                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.31 stream_encoder_intrin_avx2.c:110:53: warning: cast from 'const FLAC__int32 *' (aka 'const int *') to 'const __m128i *' increases required alignment from 4 to 16 [-Wcast-align]
#20 51.31                                         __m128i res128 = _mm_abs_epi32(_mm_loadl_epi64((const __m128i*)(residual+residual_sample)));
#20 51.31                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.32 stream_encoder_intrin_avx2.c:121:22: warning: cast from 'FLAC__uint64 *' (aka 'unsigned long *') to '__m128i *' increases required alignment from 8 to 16 [-Wcast-align]
#20 51.32                                 _mm_storel_epi64((__m128i*)(abs_residual_partition_sums+partition), sum128);
#20 51.32                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#20 51.35   CC       ogg_helper.lo
#20 51.44 5 warnings generated.
#20 51.67   CC       ogg_mapping.lo
#20 53.18   CCLD     libFLAC.la
#20 53.18   CCLD     libFLAC-static.la
#20 53.52 make[4]: Leaving directory '/src/flac/src/libFLAC'
#20 53.52 make[3]: Leaving directory '/src/flac/src/libFLAC'
#20 53.52 Making all in share
#20 53.52 make[3]: Entering directory '/src/flac/src/share'
#20 53.53   CC       getopt/getopt.lo
#20 53.53   CC       getopt/getopt1.lo
#20 53.53   CC       grabbag/alloc.lo
#20 53.54   CC       grabbag/cuesheet.lo
#20 53.54   CC       grabbag/file.lo
#20 53.54   CC       grabbag/picture.lo
#20 53.54   CC       grabbag/replaygain.lo
#20 53.54   CC       grabbag/seektable.lo
#20 53.80   CC       grabbag/snprintf.lo
#20 53.83   CC       utf8/charset.lo
#20 53.98   CC       utf8/iconvert.lo
#20 53.99   CC       utf8/utf8.lo
#20 54.00   CC       replaygain_analysis/replaygain_analysis.lo
#20 54.10   CC       replaygain_synthesis/libreplaygain_synthesis_la-replaygain_synthesis.lo
#20 54.51   CCLD     utf8/libutf8.la
#20 54.54   CCLD     getopt/libgetopt.la
#20 54.79   CCLD     replaygain_synthesis/libreplaygain_synthesis.la
#20 54.96   CCLD     replaygain_analysis/libreplaygain_analysis.la
#20 55.03   CCLD     grabbag/libgrabbag.la
#20 55.18 make[3]: Leaving directory '/src/flac/src/share'
#20 55.18 Making all in flac
#20 55.18 make[3]: Entering directory '/src/flac/src/flac'
#20 55.18   CC       analyze.o
#20 55.19   CC       decode.o
#20 55.19   CC       encode.o
#20 55.19   CC       foreign_metadata.o
#20 55.19   CC       main.o
#20 55.19   CC       local_string_utils.o
#20 55.19   CC       utils.o
#20 55.19   CC       vorbiscomment.o
#20 56.58   CCLD     flac
#20 57.01 make[3]: Leaving directory '/src/flac/src/flac'
#20 57.01 Making all in metaflac
#20 57.01 make[3]: Entering directory '/src/flac/src/metaflac'
#20 57.01   CC       main.o
#20 57.01   CC       operations.o
#20 57.02   CC       operations_shorthand_cuesheet.o
#20 57.02   CC       operations_shorthand_picture.o
#20 57.02   CC       operations_shorthand_seektable.o
#20 57.02   CC       operations_shorthand_streaminfo.o
#20 57.02   CC       operations_shorthand_vorbiscomment.o
#20 57.02   CC       options.o
#20 57.12   CC       usage.o
#20 57.17   CC       utils.o
#20 57.62   CCLD     metaflac
#20 58.02 make[3]: Leaving directory '/src/flac/src/metaflac'
#20 58.02 Making all in test_grabbag
#20 58.02 make[3]: Entering directory '/src/flac/src/test_grabbag'
#20 58.03 Making all in cuesheet
#20 58.03 make[4]: Entering directory '/src/flac/src/test_grabbag/cuesheet'
#20 58.03 make[4]: Nothing to be done for 'all'.
#20 58.03 make[4]: Leaving directory '/src/flac/src/test_grabbag/cuesheet'
#20 58.03 Making all in picture
#20 58.04 make[4]: Entering directory '/src/flac/src/test_grabbag/picture'
#20 58.04 make[4]: Nothing to be done for 'all'.
#20 58.04 make[4]: Leaving directory '/src/flac/src/test_grabbag/picture'
#20 58.04 make[4]: Entering directory '/src/flac/src/test_grabbag'
#20 58.04 make[4]: Nothing to be done for 'all-am'.
#20 58.04 make[4]: Leaving directory '/src/flac/src/test_grabbag'
#20 58.04 make[3]: Leaving directory '/src/flac/src/test_grabbag'
#20 58.04 Making all in test_libs_common
#20 58.05 make[3]: Entering directory '/src/flac/src/test_libs_common'
#20 58.05   CC       file_utils_flac.lo
#20 58.05   CC       metadata_utils.lo
#20 58.62   CCLD     libtest_libs_common.la
#20 58.77 make[3]: Leaving directory '/src/flac/src/test_libs_common'
#20 58.77 Making all in test_libFLAC
#20 58.78 make[3]: Entering directory '/src/flac/src/test_libFLAC'
#20 58.78 make[3]: Nothing to be done for 'all'.
#20 58.78 make[3]: Leaving directory '/src/flac/src/test_libFLAC'
#20 58.78 Making all in test_seeking
#20 58.78 make[3]: Entering directory '/src/flac/src/test_seeking'
#20 58.78 make[3]: Nothing to be done for 'all'.
#20 58.78 make[3]: Leaving directory '/src/flac/src/test_seeking'
#20 58.79 Making all in test_streams
#20 58.79 make[3]: Entering directory '/src/flac/src/test_streams'
#20 58.79 make[3]: Nothing to be done for 'all'.
#20 58.79 make[3]: Leaving directory '/src/flac/src/test_streams'
#20 58.79 Making all in utils
#20 58.79 make[3]: Entering directory '/src/flac/src/utils'
#20 58.80 Making all in flacdiff
#20 58.80 make[4]: Entering directory '/src/flac/src/utils/flacdiff'
#20 58.80 make[4]: Nothing to be done for 'all'.
#20 58.80 make[4]: Leaving directory '/src/flac/src/utils/flacdiff'
#20 58.80 Making all in flactimer
#20 58.81 make[4]: Entering directory '/src/flac/src/utils/flactimer'
#20 58.81 make[4]: Nothing to be done for 'all'.
#20 58.81 make[4]: Leaving directory '/src/flac/src/utils/flactimer'
#20 58.81 make[4]: Entering directory '/src/flac/src/utils'
#20 58.81 make[4]: Nothing to be done for 'all-am'.
#20 58.81 make[4]: Leaving directory '/src/flac/src/utils'
#20 58.81 make[3]: Leaving directory '/src/flac/src/utils'
#20 58.81 Making all in libFLAC++
#20 58.82 make[3]: Entering directory '/src/flac/src/libFLAC++'
#20 58.82   CXX      metadata.lo
#20 58.82   CXX      stream_decoder.lo
#20 58.82   CXX      stream_encoder.lo
#20 61.00   CXXLD    libFLAC++.la
#20 61.00   CXXLD    libFLAC++-static.la
#20 61.21 clang-14: warning: argument unused during compilation: '-pthread' [-Wunused-command-line-argument]
#20 61.21 clang-14: warning: argument unused during compilation: '-pthread' [-Wunused-command-line-argument]
#20 61.23 copying selected object files to avoid basename conflicts...
#20 61.36 make[3]: Leaving directory '/src/flac/src/libFLAC++'
#20 61.36 Making all in test_libFLAC++
#20 61.37 make[3]: Entering directory '/src/flac/src/test_libFLAC++'
#20 61.37 make[3]: Nothing to be done for 'all'.
#20 61.37 make[3]: Leaving directory '/src/flac/src/test_libFLAC++'
#20 61.37 make[3]: Entering directory '/src/flac/src'
#20 61.37 make[3]: Nothing to be done for 'all-am'.
#20 61.37 make[3]: Leaving directory '/src/flac/src'
#20 61.37 make[2]: Leaving directory '/src/flac/src'
#20 61.37 Making all in test
#20 61.38 make[2]: Entering directory '/src/flac/test'
#20 61.38 Making all in cuesheets
#20 61.39 make[3]: Entering directory '/src/flac/test/cuesheets'
#20 61.39 make[3]: Nothing to be done for 'all'.
#20 61.39 make[3]: Leaving directory '/src/flac/test/cuesheets'
#20 61.39 Making all in flac-to-flac-metadata-test-files
#20 61.39 make[3]: Entering directory '/src/flac/test/flac-to-flac-metadata-test-files'
#20 61.39 make[3]: Nothing to be done for 'all'.
#20 61.39 make[3]: Leaving directory '/src/flac/test/flac-to-flac-metadata-test-files'
#20 61.39 Making all in metaflac-test-files
#20 61.40 make[3]: Entering directory '/src/flac/test/metaflac-test-files'
#20 61.40 make[3]: Nothing to be done for 'all'.
#20 61.40 make[3]: Leaving directory '/src/flac/test/metaflac-test-files'
#20 61.40 Making all in pictures
#20 61.40 make[3]: Entering directory '/src/flac/test/pictures'
#20 61.40 make[3]: Nothing to be done for 'all'.
#20 61.40 make[3]: Leaving directory '/src/flac/test/pictures'
#20 61.40 make[3]: Entering directory '/src/flac/test'
#20 61.40 make[3]: Nothing to be done for 'all-am'.
#20 61.40 make[3]: Leaving directory '/src/flac/test'
#20 61.40 make[2]: Leaving directory '/src/flac/test'
#20 61.41 Making all in build
#20 61.41 make[2]: Entering directory '/src/flac/build'
#20 61.41 make[2]: Nothing to be done for 'all'.
#20 61.41 make[2]: Leaving directory '/src/flac/build'
#20 61.41 Making all in microbench
#20 61.41 make[2]: Entering directory '/src/flac/microbench'
#20 61.42   CC       benchmark_residual.o
#20 61.42   CC       util.o
#20 61.60   CCLD     benchmark_residual
#20 61.82 make[2]: Leaving directory '/src/flac/microbench'
#20 61.82 Making all in oss-fuzz
#20 61.83 make[2]: Entering directory '/src/flac/oss-fuzz'
#20 61.83 make[2]: Nothing to be done for 'all'.
#20 61.83 make[2]: Leaving directory '/src/flac/oss-fuzz'
#20 61.83 make[2]: Entering directory '/src/flac'
#20 61.83 make[2]: Leaving directory '/src/flac'
#20 61.84 make[1]: Leaving directory '/src/flac'
#20 61.84 + cd /src/fuzzing-headers
#20 61.84 + ./install.sh
#20 61.85 + cd /src/flac-fuzzers/
#20 61.85 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -D_GLIBCXX_DEBUG -I /src/flac/include/ -I /src/ExoPlayer/extensions/flac/src/main/jni/ -I /usr/lib/jvm/java-8-openjdk-amd64/include/ -I /usr/lib/jvm/java-8-openjdk-amd64/include/linux/ fuzzer_exo.cpp /src/flac/src/libFLAC++/.libs/libFLAC++.a /src/flac/src/libFLAC/.libs/libFLAC.a /src/libogg-install/lib/libogg.a /libAFL.a -o /out/fuzzer_exo
#20 62.69 In file included from fuzzer_exo.cpp:18:
#20 62.69 In file included from /src/ExoPlayer/extensions/flac/src/main/jni/include/flac_parser.h:30:
#20 62.69 /src/ExoPlayer/extensions/flac/src/main/jni/include/data_source.h:20:10: fatal error: 'jni.h' file not found
#20 62.69 #include <jni.h>
#20 62.69          ^~~~~~~
#20 62.70 1 error generated.
#20 62.71 Traceback (most recent call last):
#20 62.71   File "<string>", line 1, in <module>
#20 62.71   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 62.71     utils.build_benchmark()
#20 62.71   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 62.71     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 62.71   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 62.71     raise CalledProcessError(retcode, cmd)
#20 62.71 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 1.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/flac_fuzzer_exo:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2718786: .afl-flac_fuzzer_exo-builder] Error 1
