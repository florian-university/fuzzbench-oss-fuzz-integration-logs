WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: lzo_lzo_decompress_target.
INFO:root:Please run "make test-run-afl-lzo_lzo_decompress_target" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:04e4c84cecf8e7add9217d8586599cf0798ceccbe6384904b5f753c96c3481e1
#1 transferring dockerfile: 1.04kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:8c9c27b4036cf071ef2fa2216b6830e0da6f51fcfa904df67abf9627fda95d48
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#8 [internal] load build context
#8 sha256:67b4ba60b32090dff35aadf3a1302fddb5b688c8bd658c4078407375e5123a90
#8 DONE 0.0s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target
#4 sha256:36daac9b393d9d9f74e34b6fb93568b32ced6541d5477d44db637835a17878dd
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target:latest: not found

#8 [internal] load build context
#8 sha256:67b4ba60b32090dff35aadf3a1302fddb5b688c8bd658c4078407375e5123a90
#8 transferring context: 6.75kB done
#8 DONE 0.1s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#6 sha256:4f84a0ce69ee663e95cd1295ccb0c22599aeb66f813cea39811e39dcebbc0ef1
#6 CACHED

#7 [3/5] RUN wget -O lzo.tar.gz     http://www.oberhumer.com/opensource/lzo/download/lzo-2.10.tar.gz
#7 sha256:a43c89546416d010bc5b9d695ab5a9bf5530c91e0201187b3c518bde8e76f8c3
#7 CACHED

#9 [4/5] COPY *.c *.options build.sh /src/
#9 sha256:9ed4dc8a1caeade03a0ee7eb72310618a46c2fbc2e4f351fea68f0d1dee1841f
#9 CACHED

#10 [5/5] COPY lzo_decompress_target_seeds /src/lzo_decompress_target_seeds
#10 sha256:dbea98687849865e297e768862d06d6f51b3cd976f763b098d39a9c54e7bbe07
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:35096e761a4be5a0297450d67599f66d8f7ff98b81d478d19638d2eb992773d2
#11 writing image sha256:35096e761a4be5a0297450d67599f66d8f7ff98b81d478d19638d2eb992773d2 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:0b8fb48e2789a2e5b522467b8e03374ae1597a0727672623ca6e778af4089bdb
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:d1400bd6542be7c191a00879e642db4be6bcd40918a97d8ad43ae22452a9eee8
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target:latest
#3 sha256:80acfac66a8714350cbac83e1e50abe969e83e5472cd4693fcb9ddb15af4851b
#3 DONE 0.0s

#7 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target
#7 sha256:243f7de1b7f1c36ab66e56a787aba7344bec81161eb0a6c7b58acade3918f981
#7 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate
#4 sha256:790a0798dc94d5890fdb88db33339399be52c6d0de53e377f887d3a9eef793f7
#4 ERROR: gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate:latest: not found

#5 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#5 sha256:b7058d8f1b6e2ee16a622571f7335adbc5b7b7028407daf9bbe224e3f7606466
#5 CACHED

#6 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#6 sha256:772cdcb967a6f639e6fab1787d43399fbb7e05f8f268229e88b5a1e8bcc90aa6
#6 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:d9e7ec5c5ce05edd61b1e372e3511309bde23872284342a9a072de1946ff3464 done
#8 naming to gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:3898b30513c9a4fcfe5a7fe24715485e980813e22a7bbc1593b278c9bfd46767
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:04ac50d77255bdcfa7b0c06b70bc8b4e978cdfe500d3535358eb5beda76a89a6
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:964ece7ca5f45cd9dc5cebb6bda9f4ce7e8267d6a87239b90059a25e1d7e9d19
#8 transferring context: 559B 0.2s done
#8 DONE 0.2s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:0acba472ad83bb22abca0832f170f9b03fc6b9b72d7339d681ea35e1c104738c
#9 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:20a98e7dcedad7b1777d8195f03fd22fa64ebe03fd22ae8f6569ead55d164716
#11 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:c2803d1079e9d53874681ead3f206fc0cdd8dc7dd34aeb38e67c5eecc9e3e76d
#10 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:24df05703ba3fc74f5074391238993fd318fa37f889a28d6daf464e17462d60d
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:5dc85c66b74f60d1770fb4d8a2f0cf89b872162f5c4ad8fde1e9774f9306976f 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:06c65e692806cc6b1a525be53c1dc97ea2be28ea92fd07cb92ee36dc18dfa5e4
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:85a2b190450f1f41a7734a9e294bb79c4dd2b17a64174947b48d1874e5d1919e
#2 transferring context: 34B done
#2 DONE 0.2s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate:latest
#3 sha256:57277ad610ff2521191e75da22afb9064f4a9cf1f1cf01d5bb679fea15a74973
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:139e1cc12d14ba28d22cd81ec1d03338805c2f10643fbd58c01e7b2f34aae12d
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate
#6 sha256:0431697bc05bb7dd576b8c033524251400cc829120bf34576c4f5bcdf1f41695
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target
#5 sha256:f5ad800077a190aafdad177ae8d36c9409387967f4c03cc6e231d67b6f6f03f9
#5 ERROR: gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target:latest: not found

#12 [internal] load build context
#12 sha256:139e1cc12d14ba28d22cd81ec1d03338805c2f10643fbd58c01e7b2f34aae12d
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.1s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:fecde7b439d88f9341f9a0f44b1783e0cc85a2c596199ab96d93e9ed4a72174e
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:df4068d2096acf7ce14b6b0bfb8c97bdd5f67a7789badf68b66cc3b5c44309a7
#9 CACHED

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:2551bc1000e391b57ca9c3138c085a4af7e7336e79998f941824d50fa9edcf05
#10 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:dd5429ca0285b084777db6fe279ac9a5dd4001d2ac19e458af0eb9b823f5d9b2
#11 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:917177b7b875ca5b111be011c8fadf9b83f35d96e6d82a875cbfc6240fda84ef
#13 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:f084e2879795d4be0c208986807d3e2c82b410bb6f67baafeea8402b5ceb3c7b
#14 DONE 0.7s

#15 [stage-1  8/13] COPY benchmarks/lzo_lzo_decompress_target/benchmark.yaml /
#15 sha256:08023689473edc9d82b82d33e5248a561643b2893898e25d8e92da8daf9a8939
#15 DONE 0.2s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:1bb586a93345b1a0b8b03d96bc721b7941c6d260fb37cd0bfd39889e508f2e22
#16 DONE 0.5s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:ddc35882b2b6876c47ca32bfbdef15032388e5774701123bf7237c4e2da8c88d
#17 DONE 0.2s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:88520c7d80fbd7abf54e590a634a1b6ec701d22fbb60f20415a1b4ba824af73c
#18 0.427 Checking out commit 754db9eb
#18 0.439 error: pathspec '754db9eb' did not match any file(s) known to git
#18 0.446 error: pathspec '754db9eb' did not match any file(s) known to git
#18 0.490 Checkout unsuccessful.
#18 DONE 0.6s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:3dee44e417d0cf963c38b523c0a23b94f6f7eff3ca9ac665e0e4f3ce683c54e7
#19 DONE 0.5s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:f1db5b964ad55584505d7afe4ef82030b0d92ad5708b15ab8d08b330fe7c4877
#20 0.433 Run fuzzer_build to build the target
#20 0.547 FUZZ_TARGET = lzo_decompress_target
#20 0.547 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.547 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.552 Building benchmark lzo_lzo_decompress_target with fuzzer afl
#20 0.555 + cd /src
#20 0.555 + tar xzf lzo.tar.gz
#20 0.600 + cd lzo-2.10
#20 0.600 + ./configure
#20 0.813 configure: Configuring LZO 2.10
#20 0.833 checking build system type... x86_64-pc-linux-gnu
#20 0.902 checking host system type... x86_64-pc-linux-gnu
#20 0.902 checking target system type... x86_64-pc-linux-gnu
#20 0.903 checking whether to enable maintainer-specific portions of Makefiles... no
#20 0.904 checking for gcc... clang
#20 0.976 checking whether the C compiler works... yes
#20 1.103 checking for C compiler default output file name... a.out
#20 1.105 checking for suffix of executables... 
#20 1.221 checking whether we are cross compiling... no
#20 1.354 checking for suffix of object files... o
#20 1.383 checking whether we are using the GNU C compiler... yes
#20 1.410 checking whether clang accepts -g... yes
#20 1.434 checking for clang option to accept ISO C89... none needed
#20 1.477 checking whether clang understands -c and -o together... yes
#20 1.519 checking for ar... ar
#20 1.520 checking the archiver (ar) interface... ar
#20 1.558 checking for style of include used by make... GNU
#20 1.566 checking dependency style of clang... gcc3
#20 1.622 checking how to run the C preprocessor... clang -E
#20 1.720 checking whether the C preprocessor needs special flags... none needed
#20 1.749 checking for an ANSI C-conforming const... yes
#20 1.780 checking for grep that handles long lines and -e... /usr/bin/grep
#20 1.783 checking for egrep... /usr/bin/grep -E
#20 1.785 checking for ANSI C header files... yes
#20 2.032 checking for sys/types.h... yes
#20 2.085 checking for sys/stat.h... yes
#20 2.142 checking for stdlib.h... yes
#20 2.197 checking for string.h... yes
#20 2.255 checking for memory.h... yes
#20 2.315 checking for strings.h... yes
#20 2.380 checking for inttypes.h... yes
#20 2.444 checking for stdint.h... yes
#20 2.513 checking for unistd.h... yes
#20 2.574 checking whether byte ordering is bigendian... no
#20 2.689 checking for special C compiler options needed for large files... no
#20 2.689 checking for _FILE_OFFSET_BITS value needed for large files... no
#20 2.722 checking for a BSD-compatible install... /usr/bin/install -c
#20 2.737 checking whether build environment is sane... yes
#20 2.753 checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
#20 2.757 checking for gawk... no
#20 2.758 checking for mawk... mawk
#20 2.759 checking whether make sets $(MAKE)... yes
#20 2.770 checking whether make supports nested variables... yes
#20 2.785 checking dependency style of clang... gcc3
#20 2.844 checking whether make supports nested variables... (cached) yes
#20 2.847 checking how to print strings... printf
#20 2.906 checking for a sed that does not truncate output... /usr/bin/sed
#20 2.914 checking for fgrep... /usr/bin/grep -F
#20 2.918 checking for ld used by clang... /usr/bin/ld
#20 2.936 checking if the linker (/usr/bin/ld) is GNU ld... yes
#20 2.940 checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
#20 2.945 checking the name lister (/usr/bin/nm -B) interface... BSD nm
#20 2.979 checking whether ln -s works... yes
#20 2.980 checking the maximum length of command line arguments... 1572864
#20 2.991 checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
#20 2.992 checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
#20 2.992 checking for /usr/bin/ld option to reload object files... -r
#20 2.993 checking for objdump... objdump
#20 2.994 checking how to recognize dependent libraries... pass_all
#20 2.996 checking for dlltool... no
#20 2.997 checking how to associate runtime and link libraries... printf %s\n
#20 2.998 checking for archiver @FILE support... @
#20 3.036 checking for strip... strip
#20 3.038 checking for ranlib... ranlib
#20 3.039 checking command to parse /usr/bin/nm -B output from clang object... ok
#20 3.210 checking for sysroot... no
#20 3.235 checking for mt... no
#20 3.236 checking if : is a manifest tool... no
#20 3.244 checking for dlfcn.h... yes
#20 3.302 checking for objdir... .libs
#20 3.478 checking if clang supports -fno-rtti -fno-exceptions... yes
#20 3.511 checking for clang option to produce PIC... -fPIC -DPIC
#20 3.511 checking if clang PIC flag -fPIC -DPIC works... yes
#20 3.543 checking if clang static flag -static works... yes
#20 3.728 checking if clang supports -c -o file.o... yes
#20 3.772 checking if clang supports -c -o file.o... (cached) yes
#20 3.773 checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
#20 3.795 checking dynamic linker characteristics... GNU/Linux ld.so
#20 3.979 checking how to hardcode library paths into programs... immediate
#20 3.979 checking whether stripping libraries is possible... yes
#20 3.982 checking if libtool supports shared libraries... yes
#20 3.982 checking whether to build shared libraries... no
#20 3.983 checking whether to build static libraries... yes
#20 3.984 checking whether time.h and sys/time.h may both be included... yes
#20 4.026 checking assert.h usability... yes
#20 4.081 checking assert.h presence... yes
#20 4.101 checking for assert.h... yes
#20 4.112 checking ctype.h usability... yes
#20 4.168 checking ctype.h presence... yes
#20 4.191 checking for ctype.h... yes
#20 4.200 checking dirent.h usability... yes
#20 4.257 checking dirent.h presence... yes
#20 4.278 checking for dirent.h... yes
#20 4.287 checking errno.h usability... yes
#20 4.344 checking errno.h presence... yes
#20 4.365 checking for errno.h... yes
#20 4.376 checking fcntl.h usability... yes
#20 4.432 checking fcntl.h presence... yes
#20 4.452 checking for fcntl.h... yes
#20 4.464 checking float.h usability... yes
#20 4.523 checking float.h presence... yes
#20 4.541 checking for float.h... yes
#20 4.553 checking limits.h usability... yes
#20 4.609 checking limits.h presence... yes
#20 4.631 checking for limits.h... yes
#20 4.642 checking malloc.h usability... yes
#20 4.703 checking malloc.h presence... yes
#20 4.727 checking for malloc.h... yes
#20 4.739 checking for memory.h... (cached) yes
#20 4.750 checking setjmp.h usability... yes
#20 4.806 checking setjmp.h presence... yes
#20 4.827 checking for setjmp.h... yes
#20 4.839 checking signal.h usability... yes
#20 4.898 checking signal.h presence... yes
#20 4.925 checking for signal.h... yes
#20 4.936 checking stdarg.h usability... yes
#20 4.990 checking stdarg.h presence... yes
#20 5.012 checking for stdarg.h... yes
#20 5.023 checking stddef.h usability... yes
#20 5.078 checking stddef.h presence... yes
#20 5.098 checking for stddef.h... yes
#20 5.109 checking for stdint.h... (cached) yes
#20 5.120 checking stdio.h usability... yes
#20 5.175 checking stdio.h presence... yes
#20 5.197 checking for stdio.h... yes
#20 5.209 checking for stdlib.h... (cached) yes
#20 5.220 checking for string.h... (cached) yes
#20 5.232 checking for strings.h... (cached) yes
#20 5.243 checking time.h usability... yes
#20 5.299 checking time.h presence... yes
#20 5.321 checking for time.h... yes
#20 5.332 checking for unistd.h... (cached) yes
#20 5.343 checking utime.h usability... yes
#20 5.399 checking utime.h presence... yes
#20 5.418 checking for utime.h... yes
#20 5.430 checking sys/mman.h usability... yes
#20 5.487 checking sys/mman.h presence... yes
#20 5.509 checking for sys/mman.h... yes
#20 5.521 checking sys/resource.h usability... yes
#20 5.577 checking sys/resource.h presence... yes
#20 5.600 checking for sys/resource.h... yes
#20 5.612 checking for sys/stat.h... (cached) yes
#20 5.623 checking sys/time.h usability... yes
#20 5.677 checking sys/time.h presence... yes
#20 5.700 checking for sys/time.h... yes
#20 5.709 checking for sys/types.h... (cached) yes
#20 5.720 checking sys/wait.h usability... yes
#20 5.786 checking sys/wait.h presence... yes
#20 5.812 checking for sys/wait.h... yes
#20 5.820 checking whether limits.h is sane... yes
#20 5.854 checking for off_t... yes
#20 5.975 checking for ptrdiff_t... yes
#20 6.099 checking for size_t... yes
#20 6.227 checking return type of signal handlers... void
#20 6.271 checking size of short... 2
#20 6.437 checking size of int... 4
#20 6.609 checking size of long... 8
#20 6.767 checking size of long long... 8
#20 6.926 checking size of __int16... 0
#20 6.998 checking size of __int32... 0
#20 7.072 checking size of __int64... 0
#20 7.146 checking size of void *... 8
#20 7.323 checking size of size_t... 8
#20 7.487 checking size of ptrdiff_t... 8
#20 7.650 checking size of __int32... (cached) 0
#20 7.652 checking size of intmax_t... 8
#20 7.825 checking size of uintmax_t... 8
#20 7.998 checking size of intptr_t... 8
#20 8.166 checking size of uintptr_t... 8
#20 8.338 checking size of float... 4
#20 8.496 checking size of double... 8
#20 8.662 checking size of long double... 16
#20 8.823 checking size of dev_t... 8
#20 8.992 checking size of fpos_t... 16
#20 9.162 checking size of mode_t... 4
#20 9.327 checking size of off_t... 8
#20 9.491 checking size of ssize_t... 8
#20 9.664 checking size of time_t... 8
#20 9.833 checking for access... yes
#20 9.976 checking for alloca... no
#20 10.12 checking for atexit... yes
#20 10.25 checking for atoi... yes
#20 10.39 checking for atol... yes
#20 10.54 checking for chmod... yes
#20 10.68 checking for chown... yes
#20 10.81 checking for clock_getcpuclockid... yes
#20 10.95 checking for clock_getres... yes
#20 11.10 checking for clock_gettime... yes
#20 11.24 checking for ctime... yes
#20 11.37 checking for difftime... yes
#20 11.52 checking for fstat... yes
#20 11.65 checking for getenv... yes
#20 11.79 checking for getpagesize... yes
#20 11.94 checking for getrusage... yes
#20 12.08 checking for gettimeofday... yes
#20 12.22 checking for gmtime... yes
#20 12.36 checking for isatty... yes
#20 12.49 checking for localtime... yes
#20 12.63 checking for longjmp... yes
#20 12.77 checking for lstat... yes
#20 12.92 checking for memcmp... yes
#20 13.06 checking for memcpy... yes
#20 13.21 checking for memmove... yes
#20 13.36 checking for memset... yes
#20 13.50 checking for mkdir... yes
#20 13.65 checking for mktime... yes
#20 13.79 checking for mmap... yes
#20 13.93 checking for mprotect... yes
#20 14.07 checking for munmap... yes
#20 14.21 checking for qsort... yes
#20 14.35 checking for raise... yes
#20 14.48 checking for rmdir... yes
#20 14.62 checking for setjmp... yes
#20 14.75 checking for signal... yes
#20 14.89 checking for snprintf... yes
#20 15.03 checking for strcasecmp... yes
#20 15.18 checking for strchr... yes
#20 15.32 checking for strdup... yes
#20 15.47 checking for strerror... yes
#20 15.62 checking for strftime... yes
#20 15.76 checking for stricmp... no
#20 15.90 checking for strncasecmp... yes
#20 16.05 checking for strnicmp... no
#20 16.19 checking for strrchr... yes
#20 16.35 checking for strstr... yes
#20 16.59 checking for time... yes
#20 16.74 checking for umask... yes
#20 16.88 checking for utime... yes
#20 17.02 checking for vsnprintf... yes
#20 17.17 checking whether to build assembly versions... no
#20 17.20 checking whether your compiler passes the LZO conformance test... yes
#20 17.40 checking that generated files are newer than configure... done
#20 17.40 configure: creating ./config.status
#20 18.17 config.status: creating Makefile
#20 18.19 config.status: creating lzo2.pc
#20 18.21 config.status: creating config.h
#20 18.22 config.status: executing depfiles commands
#20 18.47 config.status: executing libtool commands
#20 18.49 
#20 18.49    LZO configuration summary
#20 18.49    -------------------------
#20 18.49    LZO version                : 2.10
#20 18.49    configured for host        : x86_64-pc-linux-gnu
#20 18.49    source code location       : .
#20 18.49    compiler                   : clang
#20 18.49    preprocessor definitions   : -DLZO_HAVE_CONFIG_H=1
#20 18.49    preprocessor flags         : 
#20 18.49    compiler flags             : -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3 -fsanitize-coverage=trace-pc-guard
#20 18.49    build static library       : yes
#20 18.49    build shared library       : no
#20 18.49    enable i386 assembly code  : no
#20 18.49 
#20 18.49 
#20 18.49    LZO 2.10 configured.
#20 18.49 
#20 18.49    Copyright (C) 1996-2017 Markus Franz Xaver Johannes Oberhumer
#20 18.49    All Rights Reserved.
#20 18.49 
#20 18.49    The LZO library is free software; you can redistribute it and/or
#20 18.49    modify it under the terms of the GNU General Public License as
#20 18.49    published by the Free Software Foundation; either version 2 of
#20 18.49    the License, or (at your option) any later version.
#20 18.49 
#20 18.49    The LZO library is distributed in the hope that it will be useful,
#20 18.49    but WITHOUT ANY WARRANTY; without even the implied warranty of
#20 18.49    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#20 18.49    GNU General Public License for more details.
#20 18.49 
#20 18.49    Markus F.X.J. Oberhumer
#20 18.49    <markus@oberhumer.com>
#20 18.49    http://www.oberhumer.com/opensource/lzo/
#20 18.49 
#20 18.49 
#20 18.49 Type 'make' to build LZO.
#20 18.49 Type 'make check' and 'make test' to test LZO.
#20 18.49 Type 'make install' to install LZO.
#20 18.49 After installing LZO, please have a look at 'examples/simple.c'.
#20 18.49 
#20 18.56 ++ nproc
#20 18.56 + make -j8
#20 18.58 make  all-am
#20 18.59 make[1]: Entering directory '/src/lzo-2.10'
#20 18.60   CC       src/lzo1.lo
#20 18.60   CC       src/lzo1_99.lo
#20 18.60   CC       src/lzo1a.lo
#20 18.60   CC       src/lzo1a_99.lo
#20 18.60   CC       src/lzo1b_1.lo
#20 18.60   CC       src/lzo1b_2.lo
#20 18.60   CC       src/lzo1b_3.lo
#20 18.61   CC       src/lzo1b_4.lo
#20 19.26   CC       src/lzo1b_5.lo
#20 19.26   CC       src/lzo1b_6.lo
#20 19.28   CC       src/lzo1b_7.lo
#20 19.28   CC       src/lzo1b_8.lo
#20 19.31   CC       src/lzo1b_9.lo
#20 19.32   CC       src/lzo1b_99.lo
#20 19.42   CC       src/lzo1b_9x.lo
#20 19.48   CC       src/lzo1b_cc.lo
#20 19.95   CC       src/lzo1b_d1.lo
#20 19.96   CC       src/lzo1b_d2.lo
#20 19.99   CC       src/lzo1b_rr.lo
#20 20.00   CC       src/lzo1b_xx.lo
#20 20.01   CC       src/lzo1c_1.lo
#20 20.04   CC       src/lzo1c_2.lo
#20 20.06   CC       src/lzo1c_3.lo
#20 20.22   CC       src/lzo1c_4.lo
#20 20.55   CC       src/lzo1c_5.lo
#20 20.60   CC       src/lzo1c_6.lo
#20 20.68   CC       src/lzo1c_7.lo
#20 20.72   CC       src/lzo1c_8.lo
#20 20.73   CC       src/lzo1c_9.lo
#20 20.74   CC       src/lzo1c_99.lo
#20 20.77   CC       src/lzo1c_9x.lo
#20 20.96   CC       src/lzo1c_cc.lo
#20 21.27   CC       src/lzo1c_d1.lo
#20 21.31   CC       src/lzo1c_d2.lo
#20 21.43   CC       src/lzo1c_rr.lo
#20 21.47   CC       src/lzo1c_xx.lo
#20 21.49   CC       src/lzo1f_1.lo
#20 21.49   CC       src/lzo1f_9x.lo
#20 21.49   CC       src/lzo1f_d1.lo
#20 21.65   CC       src/lzo1f_d2.lo
#20 21.98   CC       src/lzo1x_1.lo
#20 22.02   CC       src/lzo1x_1k.lo
#20 22.07   CC       src/lzo1x_1l.lo
#20 22.13   CC       src/lzo1x_1o.lo
#20 22.20   CC       src/lzo1x_9x.lo
#20 22.22   CC       src/lzo1x_d1.lo
#20 22.33   CC       src/lzo1x_d2.lo
#20 22.43   CC       src/lzo1x_d3.lo
#20 22.76   CC       src/lzo1x_o.lo
#20 22.79   CC       src/lzo1y_1.lo
#20 22.88   CC       src/lzo1y_9x.lo
#20 22.89   CC       src/lzo1y_d1.lo
#20 22.90   CC       src/lzo1y_d2.lo
#20 23.03   CC       src/lzo1y_d3.lo
#20 23.29   CC       src/lzo1y_o.lo
#20 23.34   CC       src/lzo1z_9x.lo
#20 23.52   CC       src/lzo1z_d1.lo
#20 23.57   CC       src/lzo1z_d2.lo
#20 23.58   CC       src/lzo1z_d3.lo
#20 23.58   CC       src/lzo2a_9x.lo
#20 23.88   CC       src/lzo2a_d1.lo
#20 24.05   CC       src/lzo2a_d2.lo
#20 24.05   CC       src/lzo_crc.lo
#20 24.19   CC       src/lzo_init.lo
#20 24.28   CC       src/lzo_ptr.lo
#20 24.42   CC       src/lzo_str.lo
#20 24.43   CC       src/lzo_util.lo
#20 24.48   CC       examples/dict.o
#20 24.58   CC       examples/lzopack.o
#20 24.61   CC       examples/overlap.o
#20 24.71   CC       examples/precomp.o
#20 24.71   CC       examples/precomp2.o
#20 24.80   CC       examples/simple.o
#20 24.83   CC       lzotest/lzotest.o
#20 24.83   CC       tests/align.o
#20 24.91   CC       tests/chksum.o
#20 24.94   CC       tests/promote.o
#20 24.95   CC       tests/sizes.o
#20 24.96   CC       minilzo/t-testmini.o
#20 24.97   CC       minilzo/t-minilzo.o
#20 24.99   CCLD     src/liblzo2.la
#20 25.00   CCLD     tests/promote
#20 25.03   CCLD     tests/sizes
#20 25.48 ar: `u' modifier ignored since `D' is the default (see `U')
#20 25.54   CCLD     examples/dict
#20 25.54   CCLD     examples/overlap
#20 25.54   CCLD     examples/lzopack
#20 25.54   CCLD     examples/precomp
#20 25.54   CCLD     examples/precomp2
#20 25.54   CCLD     examples/simple
#20 25.71   CCLD     tests/align
#20 26.23   CCLD     tests/chksum
#20 26.23   CCLD     minilzo/testmini
#20 26.36   CCLD     lzotest/lzotest
#20 26.88 make[1]: Leaving directory '/src/lzo-2.10'
#20 26.88 + for file in $SRC/*.c
#20 26.88 ++ basename /src/lzo_compress_target.c .c
#20 26.88 + name=lzo_compress_target
#20 26.88 + clang -c -I include -I minilzo -I include/lzo /src/lzo_compress_target.c -o lzo_compress_target.o
#20 26.93 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I include -I minilzo -I include/lzo lzo_compress_target.o -o /out/lzo_compress_target -lFuzzingEngine src/.libs/liblzo2.a
#20 27.16 + for file in $SRC/*.c
#20 27.16 ++ basename /src/lzo_decompress_target.c .c
#20 27.17 + name=lzo_decompress_target
#20 27.17 + clang -c -I include -I minilzo -I include/lzo /src/lzo_decompress_target.c -o lzo_decompress_target.o
#20 27.21 + clang++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard -std=c++11 -I include -I minilzo -I include/lzo lzo_decompress_target.o -o /out/lzo_decompress_target -lFuzzingEngine src/.libs/liblzo2.a
#20 27.45 + cp /src/lzo_compress_target.options /src/lzo_decompress_target.options /out/
#20 27.45 + zip -j /out/lzo_decompress_target_seed_corpus.zip /src/lzo_decompress_target_seeds/seed.lzo
#20 27.45   adding: seed.lzo (deflated 6%)
#20 27.46 [post_build] Copying afl-fuzz to $OUT directory
#20 DONE 27.6s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:d9ca8ed452ee0146da9d0a0f396a87c1fcf44cea7ba76489564295ef1bf7a6e6
#21 writing image sha256:d9ca8ed452ee0146da9d0a0f396a87c1fcf44cea7ba76489564295ef1bf7a6e6 done
#21 naming to gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target:
------
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:3acebdff349a7b7924115a9536dcf8e65c370481546cf5bdb095f2601d35718b
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:17243fba520e8ff610dcd23a0a0716a90c90b631716dbcf8692756d743475ead
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate
#5 sha256:c4ed430e28f11ea8d5c6c58c9b5ba67039ccb652fb409a3df4c19c0e24a5788f
#5 ERROR: gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate:latest: not found

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:460de8759a450eba6fbeb388ea7b433485c57144929f60f90d8fad3292e3a801 done
#6 naming to gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:f69749585c0740b4d061774a4108731a7444cc9e661048e5a88897df8285f24d
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:caa083c046d9111b2c085fc9ffa2cb3180e2a19dd75c2782b759c5b1b6463c69
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate:latest
#3 sha256:2bd3c1473c0b46c80adf5f44c76f5170c1a1c6a5b0407c436634ec46fb1a2479
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target:latest
#4 sha256:ff9f16c2770d2e26006f04c530cb11894ed73123f078196236ac718a17ca0892
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:d6b2ae410be509e3354f857851ffe12008aa99dbde5d5fe3aeaec64c783e9f6c
#12 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate
#6 sha256:1f01e4df7001fe17bb56f959af14a80030f698c6534dcdfa477c96269267f825
#6 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target
#10 sha256:28689005e55c7bb7608ffc481c505f2f8e3f5880dd06a7c608e6e20ad7accb35
#10 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target
#5 sha256:e2d20e3fdd5c06f6f1f660580709a0a32251c925314e95f27f780d5a59e9683d
#5 ERROR: gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target:latest: not found

#12 [internal] load build context
#12 sha256:d6b2ae410be509e3354f857851ffe12008aa99dbde5d5fe3aeaec64c783e9f6c
#12 ...

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target
#10 sha256:28689005e55c7bb7608ffc481c505f2f8e3f5880dd06a7c608e6e20ad7accb35
#10 DONE 0.3s

#12 [internal] load build context
#12 sha256:d6b2ae410be509e3354f857851ffe12008aa99dbde5d5fe3aeaec64c783e9f6c
#12 transferring context: 19.00MB 0.7s done
#12 DONE 0.7s

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:5298844308dde8f0c46d0a037c2a4eccebe2f1acc6435a22b5a5a0247e046512
#7 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:d7611944ed4e960d15365bc6b859c437e7a6015d9899cae1dbe0105e3af9e75f
#8 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:ea89c4fb466d21e7c79571e8bf55b65cc4ad82fa01eafb8e2970d4f9f84caf6e
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:5531f874c3d9a2a416c6f844ab6c7bfc489b2a05e77e857b693cc462efb37b7d
#11 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:4273a0434fc7838cb47dc91e0436fe647883f10dff57ec85449b38b6a43ea29f
#13 DONE 0.8s

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:9bed5c9007ae8a6ac3974f0d7685d0e6b81250805d0bef02292f5b18d25e9b96
#14 DONE 0.2s

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:80c5cbe26af168195b0c2b014ef0798b6ff0040b6e31236d75c7ff13244bda35
#15 DONE 0.5s

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:2ac1290365ac396247e65a367d84a88f41adde71ee290b4492cfb6ee517e0186
#16 DONE 0.6s

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:693fac927ced99fcccee3df712f2c0933fe7c0eac2ea99f2f956d2786b88e200
#17 DONE 0.1s

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:e02ecee49063a9a5f71f15bf123ad019a5ca0ac3cde846111a7078be4662ab97
#18 DONE 0.1s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:b4dd28e53b4b8b2af7d229eef68df03b11e471e137d0e1146782b86664a3aef2
#19 DONE 0.1s

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:2ea39d4afac9c1ac16bdf00c334aae9ebb9f55b12f409a05e1f7ab67aa38ff8b
#20 DONE 0.4s

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:9f9996b7f9f3234e9c908a97b4820a6125b73dfe90fa103331bd0cfc07fa06c2
#21 writing image sha256:9f9996b7f9f3234e9c908a97b4820a6125b73dfe90fa103331bd0cfc07fa06c2 done
#21 naming to gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target done
#21 DONE 0.0s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target:
------
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Unarchived 1 files from seed corpus /out/lzo_decompress_target_seed_corpus.zip.
INFO:root:Doing final sync.
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:20588ca1b01b869d6f5034bb2aaa659c9545093dda65d26b9104f5e076f5b5b5
#1 transferring dockerfile: 32B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:4308901af4cf0ace1cd601b0afb50eb5dbc14e8d4636fa92a6467083ac82c5ff
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#5 [1/5] FROM gcr.io/oss-fuzz-base/base-builder@sha256:112044a9815d235113677d459cf2ece740a51f2b85081c8f66943dcdc72ddf7f
#5 sha256:4aee4bf9f7280ac8b7f02b8d29e6e084dd034d2c294b4e3e05d8ce7048a1450f
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target
#4 sha256:36daac9b393d9d9f74e34b6fb93568b32ced6541d5477d44db637835a17878dd
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:f063392955e8e5b06e87687b22903a827472803bddef43aa144ddf3d79e16253
#8 transferring context: 311B done
#8 DONE 0.0s

#6 [2/5] RUN apt-get update && apt-get install -y make autoconf automake libtool wget
#6 sha256:4f84a0ce69ee663e95cd1295ccb0c22599aeb66f813cea39811e39dcebbc0ef1
#6 CACHED

#9 [4/5] COPY *.c *.options build.sh /src/
#9 sha256:30a92cdf56b423807e3d9db56e24af57484e465d4ecc908460ca7246fe71b87e
#9 CACHED

#7 [3/5] RUN wget -O lzo.tar.gz     http://www.oberhumer.com/opensource/lzo/download/lzo-2.10.tar.gz
#7 sha256:a43c89546416d010bc5b9d695ab5a9bf5530c91e0201187b3c518bde8e76f8c3
#7 CACHED

#10 [5/5] COPY lzo_decompress_target_seeds /src/lzo_decompress_target_seeds
#10 sha256:4d79f3260d3327061be10f1f29b211ab52f60680c08c28322601113652dde77e
#10 CACHED

#11 exporting to image
#11 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#11 exporting layers done
#11 writing image sha256:35096e761a4be5a0297450d67599f66d8f7ff98b81d478d19638d2eb992773d2 done
#11 naming to gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target done
#11 DONE 0.1s

#12 exporting cache
#12 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#12 preparing build cache for export done
#12 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:24f044c5d820d5a244a4b5e9b696a578292020f06a733d2eb57446b59d8db090
#1 transferring dockerfile: 1.35kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:e0f32c797634d1b00cff446c6ba6f7de3eab4e0f724e5aabd07c9b2995e60f40
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target:latest
#3 sha256:80acfac66a8714350cbac83e1e50abe969e83e5472cd4693fcb9ddb15af4851b
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/lzo_lzo_decompress_target
#5 sha256:243f7de1b7f1c36ab66e56a787aba7344bec81161eb0a6c7b58acade3918f981
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate
#4 sha256:790a0798dc94d5890fdb88db33339399be52c6d0de53e377f887d3a9eef793f7
#4 DONE 0.0s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:b7058d8f1b6e2ee16a622571f7335adbc5b7b7028407daf9bbe224e3f7606466
#6 CACHED

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:772cdcb967a6f639e6fab1787d43399fbb7e05f8f268229e88b5a1e8bcc90aa6
#7 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:d9e7ec5c5ce05edd61b1e372e3511309bde23872284342a9a072de1946ff3464 done
#8 naming to gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate done
#8 DONE 0.1s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:479f62fbd2dd8ea2710ebb1b958187ddbbac5890eb40356c0d3260e53f9afc4f
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:4fb2d01dad3fde1a5a22746cd3e9e9d26b739eba0d94fe0e96f9554190d52df2
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:c3fe0cf2feb2db8c6fe0d4a487f9b3c8784ebc8e52bec9d6ad932faeac3c1ec1
#8 transferring context: 559B 0.1s done
#8 DONE 0.2s

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:49eb14ae0f13762a0954802449eccfb4b37fd600a4be65122ec03ab66d1549ac
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:506635d260feeddfdbafffc85294bb9b4ead2802b8bd7265578ee33041aa4fe7
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:f7707449e3f2dc4b06fd4ef295a1aa1bb445867791cfcf83985e81d8d2481915
#11 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:77b439954dab2682229329cffd012bc045c5fbdb04e9e1a6fbb01208b37cb4d3
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:5dc85c66b74f60d1770fb4d8a2f0cf89b872162f5c4ad8fde1e9774f9306976f
#13 writing image sha256:5dc85c66b74f60d1770fb4d8a2f0cf89b872162f5c4ad8fde1e9774f9306976f 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.0s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:b6440d4dcbe6d94faecb40fabd5e80da4031805320618c636c5f3bafca85854d
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:8665da9802fa666f2e71fa08daa046e1fff47e288a6c8ebed9684785e1f1f131
#2 transferring context: 34B done
#2 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate:latest
#3 sha256:57277ad610ff2521191e75da22afb9064f4a9cf1f1cf01d5bb679fea15a74973
#3 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target-intermediate
#6 sha256:0431697bc05bb7dd576b8c033524251400cc829120bf34576c4f5bcdf1f41695
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target
#5 sha256:f5ad800077a190aafdad177ae8d36c9409387967f4c03cc6e231d67b6f6f03f9
#5 DONE 0.0s

#12 [internal] load build context
#12 sha256:682af76faf0a2c61aa072ba25c5fe3aa9b654a38b5b4ddff9376f84b1c5ef776
#12 transferring context: 669.90kB 0.1s done
#12 DONE 0.1s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:2551bc1000e391b57ca9c3138c085a4af7e7336e79998f941824d50fa9edcf05
#10 CACHED

#15 [stage-1  8/13] COPY benchmarks/lzo_lzo_decompress_target/benchmark.yaml /
#15 sha256:23e5314c1b6b7d0ff609b00d22ba88744c7b774f74c2a4a7a5ba473422d28de3
#15 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:3d1557420e53c09af3150b84c2de34d89ecb4bd20bcc0de9c55a46b6d232a392
#17 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:acbed180abf34d090f6194b429bbd13ee7bee5f4b077ef7e83510a10cd39e775
#18 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:945c84d8268eb634a8915c5655d6bcee3d88d07444e51e0dbd876b27c0c8d2f4
#19 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:dd5429ca0285b084777db6fe279ac9a5dd4001d2ac19e458af0eb9b823f5d9b2
#11 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:bf7fda2c6bb9bd0be95c635108b40b193c63a85136785430adaf0425316ca28b
#14 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:824ba2827f89d02e27da70f72a511c441ab7295ee76b2d72fd92279883c856a4
#13 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:a86af203e5ed8609e3dbb43c3f74cf1acfcb90488df174a9fb4edd8d7b009ebd
#16 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:df4068d2096acf7ce14b6b0bfb8c97bdd5f67a7789badf68b66cc3b5c44309a7
#9 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:fecde7b439d88f9341f9a0f44b1783e0cc85a2c596199ab96d93e9ed4a72174e
#8 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:6e4e72802938cceaee0c1c9809ff60f09796590725553dedc4635dcbd7a4eb6c
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:d9ca8ed452ee0146da9d0a0f396a87c1fcf44cea7ba76489564295ef1bf7a6e6
#21 writing image sha256:d9ca8ed452ee0146da9d0a0f396a87c1fcf44cea7ba76489564295ef1bf7a6e6 done
#21 naming to gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
#1 [internal] load build definition from runner.Dockerfile
#1 sha256:aa4fe73f7fd15d5cd7d587a782b4c9860bac703e2341521d473e7c1c5918c867
#1 transferring dockerfile: 656B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:cc2a6c6a5979728c47e0e450f2a5193e0c120d41719ced192cee20c25cfebddd
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate
#5 sha256:c4ed430e28f11ea8d5c6c58c9b5ba67039ccb652fb409a3df4c19c0e24a5788f
#5 DONE 0.0s

#4 [1/1] FROM gcr.io/fuzzbench/base-image
#4 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#4 CACHED

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers done
#6 writing image sha256:460de8759a450eba6fbeb388ea7b433485c57144929f60f90d8fad3292e3a801
#6 writing image sha256:460de8759a450eba6fbeb388ea7b433485c57144929f60f90d8fad3292e3a801 done
#6 naming to gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate done
#6 DONE 0.0s

#7 exporting cache
#7 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#7 preparing build cache for export done
#7 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:b553d4d4aca9f0850063a146314dc5273b5f563ebedf89d3bd0ba2623b65aa62
#1 transferring dockerfile: 3.17kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:46bcdbc5704d5f380a1b76cf2479f07f8a51d4daab28cb25404f39f15eb4be9a
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate:latest
#3 sha256:2bd3c1473c0b46c80adf5f44c76f5170c1a1c6a5b0407c436634ec46fb1a2479
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target:latest
#4 sha256:ff9f16c2770d2e26006f04c530cb11894ed73123f078196236ac718a17ca0892
#4 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target-intermediate
#6 sha256:1f01e4df7001fe17bb56f959af14a80030f698c6534dcdfa477c96269267f825
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target
#5 sha256:e2d20e3fdd5c06f6f1f660580709a0a32251c925314e95f27f780d5a59e9683d
#5 DONE 0.0s

#10 [builder 1/1] FROM gcr.io/fuzzbench/builders/afl/lzo_lzo_decompress_target
#10 sha256:28689005e55c7bb7608ffc481c505f2f8e3f5880dd06a7c608e6e20ad7accb35
#10 DONE 0.0s

#12 [internal] load build context
#12 sha256:a392ebd97b838978b966e895569d0615d6143cf0410c487f60da42456db071d2
#12 transferring context: 19.00MB 0.6s done
#12 DONE 0.7s

#19 [stage-1 12/13] COPY docker/benchmark-runner /src/docker/benchmark-runner
#19 sha256:994622ed014a12ef6aa5c0e4818a44e0a7172510f078c5477202226c643e1745
#19 CACHED

#13 [stage-1  6/13] COPY benchmarks /src/benchmarks
#13 sha256:8024fe9574249c65cfb9f34cb2550adb93dc7a9bde5cbd188c6b44154de3cf59
#13 CACHED

#9 [stage-1  4/13] WORKDIR /out
#9 sha256:ea89c4fb466d21e7c79571e8bf55b65cc4ad82fa01eafb8e2970d4f9f84caf6e
#9 CACHED

#11 [stage-1  5/13] COPY --from=builder /out/ ./
#11 sha256:5531f874c3d9a2a416c6f844ab6c7bfc489b2a05e77e857b693cc462efb37b7d
#11 CACHED

#16 [stage-1  9/13] RUN mkdir -p /out/seeds /out/corpus
#16 sha256:674a4a64006624fa200610b98b0ede1c8594f84b4f2c78d70a3124e1cac010a6
#16 CACHED

#18 [stage-1 11/13] COPY experiment/runner.py /src/experiment/runner.py
#18 sha256:529502fcdf4d8cf8298fce81247731a42f9a8968018f45b5544e9f5d1e48019f
#18 CACHED

#8 [stage-1  3/13] RUN mkdir -p /out
#8 sha256:d7611944ed4e960d15365bc6b859c437e7a6015d9899cae1dbe0105e3af9e75f
#8 CACHED

#7 [stage-1  2/13] RUN apt-get update -y && apt-get install -y     libglib2.0-0     libxml2     libarchive13     libgss3
#7 sha256:5298844308dde8f0c46d0a037c2a4eccebe2f1acc6435a22b5a5a0247e046512
#7 CACHED

#14 [stage-1  7/13] COPY fuzzers /src/fuzzers
#14 sha256:f898ead796142cccd8cb647c4f44e8d9c56da67053a25099d7c6ce69e14cb224
#14 CACHED

#15 [stage-1  8/13] RUN touch __init__.py
#15 sha256:6ccffbcce730d8b4eaddfadc1512138b07b5cb89767a0c8e41c75b3168e08aaa
#15 CACHED

#17 [stage-1 10/13] COPY common /src/common
#17 sha256:7333337b981eea0dfe0fd982acc9473d38c375b8473e0052713c6e52e161600f
#17 CACHED

#20 [stage-1 13/13] RUN chmod +x /src/docker/benchmark-runner/startup-runner.sh
#20 sha256:b9400b16c41b083b0f4c6abc8179d0c6d2967bc5770079e5a639e300d9a12de5
#20 CACHED

#21 exporting to image
#21 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#21 exporting layers done
#21 writing image sha256:9f9996b7f9f3234e9c908a97b4820a6125b73dfe90fa103331bd0cfc07fa06c2
#21 writing image sha256:9f9996b7f9f3234e9c908a97b4820a6125b73dfe90fa103331bd0cfc07fa06c2 0.0s done
#21 naming to gcr.io/fuzzbench/runners/afl/lzo_lzo_decompress_target done
#21 DONE 0.1s

#22 exporting cache
#22 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#22 preparing build cache for export done
#22 DONE 0.0s
INFO:root:Doing trial as part of experiment.
INFO:root:Starting trial.
INFO:root:Unarchived 1 files from seed corpus /out/lzo_decompress_target_seed_corpus.zip.
INFO:root:Doing final sync.
