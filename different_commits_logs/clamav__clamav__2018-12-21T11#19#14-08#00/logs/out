WARNING:root:gcloud not found in PATH.
INFO:root:Successfully integrated benchmark: clamav_clamav.
INFO:root:Please run "make test-run-afl-clamav_clamav" to test integration.
#1 [internal] load build definition from Dockerfile
#1 sha256:cc2245b10974b6a34d934ce54e267cd7e03e0287cc689caa34670a8f08724f6c
#1 transferring dockerfile:
#1 transferring dockerfile: 1.07kB done
#1 DONE 0.9s

#2 [internal] load .dockerignore
#2 sha256:c3707852ba45c484a8979cf99f5e51326c97f4e67294193bc84942968980cfe1
#2 transferring context: 2B done
#2 DONE 1.0s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.4s

#10 [internal] load build context
#10 sha256:4279a4aa33d06afff72357ce08550c46653454ef84eb1148eb63aa6b2ef44590
#10 DONE 0.0s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/clamav_clamav
#4 sha256:30a27a11861af4f3df9b5b2fde643ae0b3d0bd612435c6d657e7eb4864683c05
#4 ERROR: gcr.io/fuzzbench/builders/benchmark/clamav_clamav:latest: not found

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 CACHED

#10 [internal] load build context
#10 sha256:4279a4aa33d06afff72357ce08550c46653454ef84eb1148eb63aa6b2ef44590
#10 transferring context: 4.34kB done
#10 DONE 0.1s

#6 [2/6] RUN apt-get update && apt-get install -y libssl-dev
#6 sha256:bddbc32ebe457898f717e043cfc586f93631e200dfee61e7663cab2791c8428e
#6 0.766 Hit:1 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#6 0.766 Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
#6 0.766 Get:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]
#6 0.852 Get:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]
#6 0.896 Get:5 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]
#6 1.305 Get:6 http://archive.ubuntu.com/ubuntu focal-updates/universe i386 Packages [828 kB]
#6 1.408 Get:7 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1135 kB]
#6 1.492 Get:8 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [1042 kB]
#6 1.574 Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1984 kB]
#6 1.717 Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main i386 Packages [755 kB]
#6 1.720 Get:11 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [467 kB]
#6 2.065 Get:12 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [974 kB]
#6 2.226 Get:13 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1557 kB]
#6 2.353 Get:14 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [841 kB]
#6 2.415 Get:15 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [657 kB]
#6 2.899 Fetched 10.6 MB in 2s (5447 kB/s)
#6 2.899 Reading package lists...
#6 4.547 Reading package lists...
#6 5.983 Building dependency tree...
#6 6.202 Reading state information...
#6 6.417 Suggested packages:
#6 6.417   libssl-doc
#6 6.450 The following NEW packages will be installed:
#6 6.451   libssl-dev
#6 6.531 0 upgraded, 1 newly installed, 0 to remove and 1 not upgraded.
#6 6.531 Need to get 1584 kB of archives.
#6 6.531 After this operation, 8009 kB of additional disk space will be used.
#6 6.531 Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libssl-dev amd64 1.1.1f-1ubuntu2.10 [1584 kB]
#6 7.028 debconf: delaying package configuration, since apt-utils is not installed
#6 7.150 Fetched 1584 kB in 0s (5745 kB/s)
#6 7.231 Selecting previously unselected package libssl-dev:amd64.
#6 7.231 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 21291 files and directories currently installed.)
#6 7.252 Preparing to unpack .../libssl-dev_1.1.1f-1ubuntu2.10_amd64.deb ...
#6 7.277 Unpacking libssl-dev:amd64 (1.1.1f-1ubuntu2.10) ...
#6 7.618 Setting up libssl-dev:amd64 (1.1.1f-1ubuntu2.10) ...
#6 DONE 8.2s

#7 [3/6] RUN git clone --depth 1 https://github.com/Cisco-Talos/clamav-devel.git
#7 sha256:144424ef4494e3aaf25d861f1e61f4e4a74283676e7f4df1a6ee82ddc45f021c
#7 0.574 Cloning into 'clamav-devel'...
#7 DONE 3.8s

#8 [4/6] RUN git clone --depth 1 https://github.com/Cisco-Talos/clamav-fuzz-corpus.git
#8 sha256:687f8acc71c2982f549257c980e2a37e0fec9ca6c7cf4a2441d323e42c6366b4
#8 0.551 Cloning into 'clamav-fuzz-corpus'...
#8 DONE 1.6s

#9 [5/6] WORKDIR clamav-devel
#9 sha256:a2d02683b724dd6f06be41ead0c798b9e25dd108e77d650119f90215811294ab
#9 DONE 0.3s

#11 [6/6] COPY build.sh /src/
#11 sha256:acbb27719ecc86198ecba1ccadc48ce0817c44b0a5818f069033e9c4c0a753e6
#11 DONE 0.2s

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:67b024b9bc4aa193b17a89b88b6706aa283e727377e074d1340686f1ac08aa3d done
#12 naming to gcr.io/fuzzbench/builders/benchmark/clamav_clamav 0.0s done
#12 DONE 0.2s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export
#13 preparing build cache for export done
#13 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/benchmark/clamav_clamav:
------
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:55127def70119eb9cb9086a46e9cc302a91be5abb1db748d9e317baf5baa3975
#1 transferring dockerfile: 46B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:9e1dac8a9cec2fe6aa619be164708fba1e53c5fca1e09231db88f5c56749c22a
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/clamav_clamav:latest
#3 sha256:4bf07f69de953fc73d256f154e7c5f2468382d727c0625c721bc57780acfb846
#3 DONE 0.0s

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/clamav_clamav
#5 sha256:ad8d4b93202e6aa61cf993bccdc559c407890a0ed1c6d29bf2913cb3064833a8
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate
#4 sha256:b1bb676cbc07742c476457fa231579edf78d42c3e57c26e7c764ba333e6c72db
#4 ERROR: gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate:latest: not found

#5 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/clamav_clamav
#5 sha256:ad8d4b93202e6aa61cf993bccdc559c407890a0ed1c6d29bf2913cb3064833a8
#5 DONE 0.6s

#6 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#6 sha256:f6b79b8501126047d97c8c613fd3dbbd1669f7b64852ca51f1342c5df8fb148c
#6 0.366 Cloning into '/afl'...
#6 1.124 Note: switching to '61037103ae3722c8060ff7082994836a794f978e'.
#6 1.124 
#6 1.124 You are in 'detached HEAD' state. You can look around, make experimental
#6 1.124 changes and commit them, and you can discard any commits you make in this
#6 1.124 state without impacting any branches by switching back to a branch.
#6 1.124 
#6 1.124 If you want to create a new branch to retain commits you create, you may
#6 1.124 do so (now or later) by using -c with the switch command. Example:
#6 1.124 
#6 1.124   git switch -c <new-branch-name>
#6 1.124 
#6 1.124 Or undo this operation with:
#6 1.124 
#6 1.124   git switch -
#6 1.124 
#6 1.124 Turn off this advice by setting config variable advice.detachedHead to false
#6 1.124 
#6 1.124 HEAD is now at 6103710 Fix a typo filename comparison in the fuzzer (#139)
#6 1.205 [!] Note: skipping x86 compilation checks (AFL_NO_X86 set).
#6 1.206 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gcc.c -o afl-gcc -ldl
#6 1.404 set -e; for i in afl-g++ afl-clang afl-clang++; do ln -sf afl-gcc $i; done
#6 1.409 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-fuzz.c -o afl-fuzz -ldl
#6 3.788 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-showmap.c -o afl-showmap -ldl
#6 4.093 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-tmin.c -o afl-tmin -ldl
#6 4.520 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-gotcpu.c -o afl-gotcpu -ldl
#6 4.671 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-analyze.c -o afl-analyze -ldl
#6 5.081 clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\"/usr/local/lib/afl\" -DDOC_PATH=\"/usr/local/share/doc/afl\" -DBIN_PATH=\"/usr/local/bin\" afl-as.c -o afl-as -ldl
#6 5.318 ln -sf afl-as as
#6 5.320 [!] Note: skipping build tests (you may need to use LLVM or QEMU mode).
#6 5.323 [+] LLVM users: see llvm_mode/README.llvm for a faster alternative to afl-gcc.
#6 5.324 [+] All done! Be sure to review README - it's pretty short and useful.
#6 DONE 6.5s

#7 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#7 sha256:e4e202923246d7be9afa2740ea8ec669f7c4584271540378cd6c6a553c012e23
#7 0.814 Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
#7 0.814 Hit:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease
#7 0.814 Hit:3 http://ppa.launchpad.net/git-core/ppa/ubuntu focal InRelease
#7 0.833 Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease
#7 0.932 Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease
#7 1.778 Reading package lists...
#7 3.301 Reading package lists...
#7 4.715 Building dependency tree...
#7 4.925 Reading state information...
#7 5.173 wget is already the newest version (1.20.3-1ubuntu2).
#7 5.173 0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
#7 5.194 --2022-02-18 00:33:36--  https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp
#7 5.197 Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.111.133, 185.199.108.133, 185.199.109.133, ...
#7 5.199 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.111.133|:443... connected.
#7 5.221 HTTP request sent, awaiting response... 200 OK
#7 5.240 Length: 9177 (9.0K) [text/plain]
#7 5.240 Saving to: '/afl/afl_driver.cpp'
#7 5.240 
#7 5.240      0K ........                                              100% 10.8M=0.001s
#7 5.241 
#7 5.241 2022-02-18 00:33:36 (10.8 MB/s) - '/afl/afl_driver.cpp' saved [9177/9177]
#7 5.241 
#7 7.522 ar: creating /libAFL.a
#7 DONE 7.9s

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:f4af8a20b3ee68103d629cd0c407fc3783a4b507df17b50fe9af511962a158fd
#8 writing image sha256:f4af8a20b3ee68103d629cd0c407fc3783a4b507df17b50fe9af511962a158fd done
#8 naming to gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate 0.0s done
#8 DONE 0.3s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate:
------
#1 [internal] load build definition from Dockerfile
#1 sha256:66333a156de29fa10c33b3e7e1acee60e94c621061e168889841f73d693225dc
#1 transferring dockerfile:
#1 transferring dockerfile: 2.00kB done
#1 DONE 1.4s

#2 [internal] load .dockerignore
#2 sha256:10013ac6d292eb59ded6175cf4ee077e7488a5465ee92229ef3b4b95d3dd79c8
#2 transferring context: 34B done
#2 DONE 1.8s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:d6d70e5fed4b4389b8edca9711aba80a2c0a2b42457d6c7b0a6e98b40ea60a87
#8 transferring context: 559B 0.0s done
#8 DONE 0.1s

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:f53c2be1d64278b299113013e125e3c7ed48cb81b1d1c40dda58d33f457dc25e
#11 CACHED

#9 [4/7] COPY ./requirements.txt /
#9 sha256:435b8600b10f846d53c7cc3c181d97dbce7ec8730f1550661b1dfaf99c062ff5
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:604ac223851dbf4309aed8919c8129d619cbcfaa6757358c85aace1ef601fe3f
#10 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:327dc31b68f5bee0fcbaf16020cf329ad9cf6c68584162d8c42ced73042553fa
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:b63d9e35e1d27432ba62a0e358b3878140f549eb12be87f86addae674564f405 0.0s done
#13 naming to gcr.io/fuzzbench/base-image
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.1s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:361407b991fb91251f2d790e7128892f0086e7f63a1d0100c4c80a5f0542e32a
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:bcd62fa913c713740347335d1565c90eb6a040142cbcee0ef2bd1fb687b8381a
#2 transferring context: 34B done
#2 DONE 0.1s

#4 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#4 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#4 DONE 0.0s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate:latest
#3 sha256:55d3bb36fffc2ef7003eba480d7bc213e8acb7e1e917b235ced41417e556e2a2
#3 DONE 0.0s

#12 [internal] load build context
#12 sha256:48e4a455fde2597aedda8ac9c62a7d9c7b6b5cd0504d9b970e67f354d1075bd8
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate
#6 sha256:4692dda96a0583f503a4ae12706763bc21032ec7a31a9ba71c654c98f5e15b6d
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/clamav_clamav
#5 sha256:193645782439575c9f61216c5aa7383cc2cb0232175ed12d4baefba586e877c5
#5 ERROR: gcr.io/fuzzbench/builders/afl/clamav_clamav:latest: not found

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 CACHED

#12 [internal] load build context
#12 sha256:48e4a455fde2597aedda8ac9c62a7d9c7b6b5cd0504d9b970e67f354d1075bd8
#12 transferring context: 669.86kB 0.1s done
#12 DONE 0.3s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate
#6 sha256:4692dda96a0583f503a4ae12706763bc21032ec7a31a9ba71c654c98f5e15b6d
#6 DONE 1.0s

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:db550e26be46d3088308ac944a857a6c921e06fdb2ae192018853975f91ba91a
#8 DONE 0.5s

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:3351525898aa7a894476159009e0a8295377ba08291a17b00ec86c3240b9225c
#9 DONE 27.4s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:65b5269cf793215ebb2dd918ac5f819ad05e146fc0fa606d8bf4d3ff40c0780d
#10 DONE 0.3s

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:a651ba13d8e746ea44f2391a40b347f9c057bfe808d0aa0511ffddf2ca90c830
#11 DONE 44.1s

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:66baee492f2461b8c21defb802de734d50a81b4797271a6c950199d8c90cedfb
#13 DONE 2.5s

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:4f6683e7437c915da390f9a768f3394d919f10bb575e593fbae6577241f14908
#14 DONE 2.5s

#15 [stage-1  8/13] COPY benchmarks/clamav_clamav/benchmark.yaml /
#15 sha256:a542413b72f41471ffba46aadcda60f62c285beda346848c40d030e80f6ea669
#15 DONE 0.4s

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:d5b497805d2c1cb34cae6f24af5071aa4e4f35457082b48cc52c60447195974d
#16 DONE 1.9s

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:2557559bc5bab51bd520add402b3bf6f5d7c8d5bb634231d15bb5120204cc8b9
#17 DONE 0.5s

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:de5fa4cc22788e65e4e460c7b398aeb2812359724104f6385198366981d4c48e
#18 0.620 Checking out commit 194c7de6
#18 27.88 From https://github.com/Cisco-Talos/clamav-devel
#18 27.88  * [new tag]             clamav-0.101.0     -> clamav-0.101.0
#18 27.88  * [new tag]             clamav-0.102.0     -> clamav-0.102.0
#18 27.88  * [new tag]             clamav-0.103.0     -> clamav-0.103.0
#18 27.88  * [new tag]             clamav-0.103.0-rc  -> clamav-0.103.0-rc
#18 27.89  * [new tag]             clamav-0.103.0-rc2 -> clamav-0.103.0-rc2
#18 27.89  * [new tag]             clamav-0.96        -> clamav-0.96
#18 27.89  * [new tag]             clamav-0.96.2      -> clamav-0.96.2
#18 27.89  * [new tag]             clamav-0.96.3      -> clamav-0.96.3
#18 27.89  * [new tag]             clamav-0.96.4      -> clamav-0.96.4
#18 27.89  * [new tag]             clamav-0.96.5      -> clamav-0.96.5
#18 27.89  * [new tag]             clamav-0.96rc1     -> clamav-0.96rc1
#18 27.89  * [new tag]             clamav-0.96rc2     -> clamav-0.96rc2
#18 27.89  * [new tag]             clamav-0.97        -> clamav-0.97
#18 27.89  * [new tag]             clamav-0.97rc      -> clamav-0.97rc
#18 27.89  * [new tag]             clamav-0.98-dmgxar -> clamav-0.98-dmgxar
#18 27.89  * [new tag]             clamav-0.99-beta1  -> clamav-0.99-beta1
#18 27.89  * [new tag]             merge-llvm-79908   -> merge-llvm-79908
#18 27.89  * [new tag]             merge-llvm-80601   -> merge-llvm-80601
#18 27.89  * [new tag]             merge-llvm-83242   -> merge-llvm-83242
#18 27.89  * [new tag]             merge-llvm-90002   -> merge-llvm-90002
#18 27.89  * [new tag]             merge-llvm-91214   -> merge-llvm-91214
#18 27.89  * [new tag]             merge-llvm-91428   -> merge-llvm-91428
#18 27.89  * [new tag]             merge-llvm-92222   -> merge-llvm-92222
#18 27.89  * [new tag]             merge-llvm-94539   -> merge-llvm-94539
#18 27.89  * [new tag]             merge-llvm-97877   -> merge-llvm-97877
#18 27.89  * [new tag]             r5076              -> r5076
#18 27.90 error: pathspec '194c7de6' did not match any file(s) known to git
#18 28.46 error: pathspec '194c7de6' did not match any file(s) known to git
#18 28.47 error: pathspec '194c7de6' did not match any file(s) known to git
#18 28.48 error: pathspec '194c7de6' did not match any file(s) known to git
#18 28.60 Checkout unsuccessful.
#18 DONE 29.2s

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:752d0463c26c8f14dd77a74b6fc0e535617d4dcb72e3bdb7c9b49e035fc3cadc
#19 DONE 1.0s

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:75eb822b1af763932549d8f7999a6ce692fb7374d2d88607db365251182748fb
#20 1.334 Run fuzzer_build to build the target
#20 1.469 FUZZ_TARGET = clamav
#20 1.469 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 1.469 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 1.492 Building benchmark clamav_clamav with fuzzer afl
#20 1.495 + export 'CXXFLAGS=-std=c++11 -stdlib=libc++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard'
#20 1.495 + CXXFLAGS='-std=c++11 -stdlib=libc++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard'
#20 1.495 + ./configure --with-libjson=no --with-pcre=no --enable-static=yes --enable-shared=no --disable-llvm --host=x86_64-unknown-linux-gnu
#20 1.496 /src/build.sh: line 23: ./configure: No such file or directory
#20 1.497 Traceback (most recent call last):
#20 1.497   File "<string>", line 1, in <module>
#20 1.497   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 1.497     utils.build_benchmark()
#20 1.497   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 1.497     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 1.497   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 1.497     raise CalledProcessError(retcode, cmd)
#20 1.497 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 127.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/clamav_clamav:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2791584: .afl-clamav_clamav-builder] Error 1
/bin/sh: 1: source: not found
#1 [internal] load build definition from Dockerfile
#1 sha256:c72d1fd358bee16babdc85e907c55e4f08724b1bc2e166836f79253c90cbed24
#1 transferring dockerfile: 32B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:752eb85c077bdb172d51b3281b129b556f3153b6220507ca02d075f83a163777
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/oss-fuzz-base/base-builder:latest
#3 sha256:f10dc39cc9d418a5bc416dead31a1902b6821fdae909cd3b08f7a3fd1faba7b5
#3 DONE 0.5s

#5 [1/6] FROM gcr.io/oss-fuzz-base/base-builder@sha256:41d7bbe7827592680a606c9bba1aeb6e23c7502ce8b633923b06542f4c706e7c
#5 sha256:660db69324ed478291dd329cbbfe422dccbc173f9ab806c069fac341073eab8c
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/builders/benchmark/clamav_clamav
#4 sha256:30a27a11861af4f3df9b5b2fde643ae0b3d0bd612435c6d657e7eb4864683c05
#4 DONE 0.0s

#10 [internal] load build context
#10 sha256:e55ff8be894735a8e7df95086407ea70b5852bfaee062f5dbd00b86cd8166ec7
#10 transferring context: 30B done
#10 DONE 0.1s

#6 [2/6] RUN apt-get update && apt-get install -y libssl-dev
#6 sha256:bddbc32ebe457898f717e043cfc586f93631e200dfee61e7663cab2791c8428e
#6 CACHED

#7 [3/6] RUN git clone --depth 1 https://github.com/Cisco-Talos/clamav-devel.git
#7 sha256:144424ef4494e3aaf25d861f1e61f4e4a74283676e7f4df1a6ee82ddc45f021c
#7 CACHED

#8 [4/6] RUN git clone --depth 1 https://github.com/Cisco-Talos/clamav-fuzz-corpus.git
#8 sha256:687f8acc71c2982f549257c980e2a37e0fec9ca6c7cf4a2441d323e42c6366b4
#8 CACHED

#9 [5/6] WORKDIR clamav-devel
#9 sha256:a2d02683b724dd6f06be41ead0c798b9e25dd108e77d650119f90215811294ab
#9 CACHED

#11 [6/6] COPY build.sh /src/
#11 sha256:1d1686f70a8d5e8433f9ff2f522db427d943e7d63ff5af39c5ceb1a69c552ed2
#11 CACHED

#12 exporting to image
#12 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#12 exporting layers done
#12 writing image sha256:67b024b9bc4aa193b17a89b88b6706aa283e727377e074d1340686f1ac08aa3d
#12 writing image sha256:67b024b9bc4aa193b17a89b88b6706aa283e727377e074d1340686f1ac08aa3d 0.0s done
#12 naming to gcr.io/fuzzbench/builders/benchmark/clamav_clamav done
#12 DONE 0.6s

#13 exporting cache
#13 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#13 preparing build cache for export done
#13 DONE 0.0s
#1 [internal] load build definition from builder.Dockerfile
#1 sha256:31e4548c3c3810b37849e88e00d6e00ec4d5c17ff9802cb562d3954e66a8b5cd
#1 transferring dockerfile: 46B done
#1 DONE 0.2s

#2 [internal] load .dockerignore
#2 sha256:982b35e3b108611462b20844edd0829a0c5ab1d65f0136ec1ed15add27dd58c1
#2 transferring context: 2B done
#2 DONE 0.2s

#3 [internal] load metadata for gcr.io/fuzzbench/builders/benchmark/clamav_clamav:latest
#3 sha256:4bf07f69de953fc73d256f154e7c5f2468382d727c0625c721bc57780acfb846
#3 DONE 0.0s

#7 importing cache manifest from gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate
#7 sha256:b1bb676cbc07742c476457fa231579edf78d42c3e57c26e7c764ba333e6c72db
#7 DONE 0.0s

#4 [1/3] FROM gcr.io/fuzzbench/builders/benchmark/clamav_clamav
#4 sha256:ad8d4b93202e6aa61cf993bccdc559c407890a0ed1c6d29bf2913cb3064833a8
#4 DONE 0.0s

#5 [2/3] RUN git clone https://github.com/google/AFL.git /afl &&     cd /afl &&     git checkout 61037103ae3722c8060ff7082994836a794f978e &&     AFL_NO_X86=1 make
#5 sha256:f6b79b8501126047d97c8c613fd3dbbd1669f7b64852ca51f1342c5df8fb148c
#5 CACHED

#6 [3/3] RUN apt-get update &&     apt-get install wget -y &&     wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp &&     clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl &&     clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp &&     ar r /libAFL.a *.o
#6 sha256:e4e202923246d7be9afa2740ea8ec669f7c4584271540378cd6c6a553c012e23
#6 CACHED

#8 exporting to image
#8 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#8 exporting layers done
#8 writing image sha256:f4af8a20b3ee68103d629cd0c407fc3783a4b507df17b50fe9af511962a158fd 0.0s done
#8 naming to gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate done
#8 DONE 0.4s

#9 exporting cache
#9 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#9 preparing build cache for export done
#9 DONE 0.0s
#2 [internal] load .dockerignore
#2 sha256:c5326b529324b433e91375bb84472c9896ffbfb4ee8d1b95b904dc15ed3656ac
#2 transferring context: 34B done
#2 DONE 0.2s

#1 [internal] load build definition from Dockerfile
#1 sha256:efbcfd442ddc246f972f78600e585f47f741b798affe33c03228cf4b5b3dd97d
#1 transferring dockerfile: 2.00kB done
#1 DONE 0.2s

#3 [internal] load metadata for docker.io/library/ubuntu:xenial
#3 sha256:f62bae18ed588840f045c881b2502661f2a89578a2f8f99b83f5200ee83dd25b
#3 DONE 0.0s

#5 [1/7] FROM docker.io/library/ubuntu:xenial
#5 sha256:14dd403f25ae9e519bd44f27dc17af7ce80f5a4f9f48ca88108364e67ec5d360
#5 DONE 0.0s

#4 importing cache manifest from gcr.io/fuzzbench/base-image
#4 sha256:9b220ebb4d4daceed1b96df9b6dca076e762f1cd612574f010b82d5b9e5ad896
#4 DONE 0.0s

#8 [internal] load build context
#8 sha256:3ff740c7b4443276e8cc1f56ff3b5203bbae91c5bdba8fb6e080947ef19ad9a0
#8 transferring context: 559B 0.0s done
#8 DONE 0.3s

#9 [4/7] COPY ./requirements.txt /
#9 sha256:7c0c3d494d1ed3d68cf4ec4d613a684209fbd3c5c43477409fb2a21fc7bac169
#9 CACHED

#10 [5/7] RUN pip3 install -r /requirements.txt
#10 sha256:e609c543029142bbbe37ab9fc424d63853048db915330a2ddc95bd178a4222f5
#10 CACHED

#11 [6/7] RUN apt-get update -y && apt-get install -y     apt-transport-https     lsb-release
#11 sha256:4f708e4bc88e3ee67ad65a4dc8174e2c20f50c1e685a5a5703901d7e9246bf19
#11 CACHED

#6 [2/7] RUN apt-get update -y && apt-get install -y     build-essential     rsync     curl     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libreadline-dev     libffi-dev     virtualenv     libbz2-dev     liblzma-dev     libsqlite3-dev
#6 sha256:3a1b0960f17eed529eaae93dc8fd3554f2743dd584d8fa569cdbe6bc734371ac
#6 CACHED

#7 [3/7] RUN cd /tmp/ &&     curl -O https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tar.xz &&     tar -xvf Python-3.8.6.tar.xz &&     cd Python-3.8.6 &&     ./configure --enable-loadable-sqlite-extensions --enable-optimizations &&     make -j install &&     rm -r /tmp/Python-3.8.6.tar.xz /tmp/Python-3.8.6
#7 sha256:c5b9d1fb3371e84dbc60b76e7b2f8d5913bc93bcd4910ab65daa03e7b2ec4bb0
#7 CACHED

#12 [7/7] RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main"     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key add - &&     apt-get update -y &&     apt-get install -y google-cloud-sdk
#12 sha256:7fd9ab2829432d0ccd2273471b9b1ecd8e542e63825f307ad5c448cd2dd013ce
#12 CACHED

#13 exporting to image
#13 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#13 exporting layers done
#13 writing image sha256:b63d9e35e1d27432ba62a0e358b3878140f549eb12be87f86addae674564f405 0.0s done
#13 naming to gcr.io/fuzzbench/base-image done
#13 DONE 0.2s

#14 exporting cache
#14 sha256:2700d4ef94dee473593c5c614b55b2dedcca7893909811a8f2b48291a1f581e4
#14 preparing build cache for export done
#14 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 sha256:0356cafe0fcce4ad6bd76aa9146a351cd4403bdbb3f9df50a0e1e3fb66e46414
#1 transferring dockerfile: 2.22kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:2eebd8d2b2900dcdbf8ce7f345f44bf7035b5b8db2e3bb38a0332fcf6f98b3f3
#2 transferring context: 34B done
#2 DONE 0.1s

#3 [internal] load metadata for gcr.io/fuzzbench/base-image:latest
#3 sha256:932022888f650cc455b10eb5123bb08c0cccacac29a693e69314abbfd28a72c3
#3 DONE 0.0s

#4 [internal] load metadata for gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate:latest
#4 sha256:55d3bb36fffc2ef7003eba480d7bc213e8acb7e1e917b235ced41417e556e2a2
#4 DONE 0.0s

#12 [internal] load build context
#12 sha256:74acd7dd32574a4c40fe9482c862bcb5cdfd2a1ab0a2a5eff16128ba1b7a718e
#12 DONE 0.0s

#7 [base-image 1/1] FROM gcr.io/fuzzbench/base-image
#7 sha256:4d07825694520f8b6f6a0d8592dbd345433361ae044cb7f06706c5a95e3daaad
#7 DONE 0.0s

#6 [stage-1  1/13] FROM gcr.io/fuzzbench/builders/afl/clamav_clamav-intermediate
#6 sha256:4692dda96a0583f503a4ae12706763bc21032ec7a31a9ba71c654c98f5e15b6d
#6 DONE 0.0s

#5 importing cache manifest from gcr.io/fuzzbench/builders/afl/clamav_clamav
#5 sha256:193645782439575c9f61216c5aa7383cc2cb0232175ed12d4baefba586e877c5
#5 ERROR: gcr.io/fuzzbench/builders/afl/clamav_clamav:latest: not found

#12 [internal] load build context
#12 sha256:74acd7dd32574a4c40fe9482c862bcb5cdfd2a1ab0a2a5eff16128ba1b7a718e
#12 transferring context: 669.86kB 0.1s done
#12 DONE 0.2s

#10 [stage-1  4/13] COPY --from=base-image /usr/local/include/python3.8 /usr/local/include/python3.8
#10 sha256:65b5269cf793215ebb2dd918ac5f819ad05e146fc0fa606d8bf4d3ff40c0780d
#10 CACHED

#17 [stage-1 10/13] COPY docker/benchmark-builder/checkout_commit.py /opt/fuzzbench/
#17 sha256:b82885a90d977953f0b2fb111ba41df9748ff8a4c25402ab61536ff75ba620c7
#17 CACHED

#14 [stage-1  7/13] RUN touch /src/__init__.py
#14 sha256:20174680061b02159068a91b764ad72ffecd9fa88964529f7dfc3987b1f1784d
#14 CACHED

#8 [stage-1  2/13] COPY --from=base-image /usr/local/bin/python3* /usr/local/bin/
#8 sha256:db550e26be46d3088308ac944a857a6c921e06fdb2ae192018853975f91ba91a
#8 CACHED

#9 [stage-1  3/13] COPY --from=base-image /usr/local/lib/python3.8 /usr/local/lib/python3.8
#9 sha256:3351525898aa7a894476159009e0a8295377ba08291a17b00ec86c3240b9225c
#9 CACHED

#13 [stage-1  6/13] COPY fuzzers /src/fuzzers
#13 sha256:f0718937f63df5469ac9ef29249a2c0f9d7cdbeb6ac69d206c83df766b794e21
#13 CACHED

#16 [stage-1  9/13] RUN mkdir /opt/fuzzbench/
#16 sha256:3efa7643ef14c50a51799455491c1a77f6a9aa65d25eedb69a50158668898093
#16 CACHED

#18 [stage-1 11/13] RUN export CHECKOUT_COMMIT=$(cat /benchmark.yaml | tr -d ' ' | grep 'commit:' | cut -d ':' -f2) &&     python3 -u /opt/fuzzbench/checkout_commit.py $CHECKOUT_COMMIT /src
#18 sha256:605a5272422ad4f412d707bd93d16f3367387a590693b8cc9be2a570ee2c1972
#18 CACHED

#11 [stage-1  5/13] COPY --from=base-image /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
#11 sha256:a651ba13d8e746ea44f2391a40b347f9c057bfe808d0aa0511ffddf2ca90c830
#11 CACHED

#15 [stage-1  8/13] COPY benchmarks/clamav_clamav/benchmark.yaml /
#15 sha256:7ac7cd7b0b8dd96bce6f2a101ded68d3e9a0e5646a8ccd48a29efec01603635d
#15 CACHED

#19 [stage-1 12/13] RUN echo "#!/bin/bash\nPYTHONPATH=/src python3 -u -c "from fuzzers import utils; utils.initialize_env(); from fuzzers.afl import fuzzer; fuzzer.build()"" > /usr/bin/fuzzer_build &&     chmod +x /usr/bin/fuzzer_build
#19 sha256:93d9a6979d9ad153b86b8a0465c2a55458e26987494bcc7046ed153b1c0e78cc
#19 CACHED

#20 [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi
#20 sha256:0881d4afaf30b4b4419f88232c604c7d4ef2523e5d4f4a43083b44da8ebbce71
#20 0.499 Run fuzzer_build to build the target
#20 0.613 FUZZ_TARGET = clamav
#20 0.613 CFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -O3
#20 0.613 CXXFLAGS = -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3
#20 0.618 Building benchmark clamav_clamav with fuzzer afl
#20 0.622 + export 'CXXFLAGS=-std=c++11 -stdlib=libc++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard'
#20 0.622 + CXXFLAGS='-std=c++11 -stdlib=libc++ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -pthread -Wl,--no-as-needed -Wl,-ldl -Wl,-lm -Wno-unused-command-line-argument -stdlib=libc++ -O3 -fsanitize-coverage=trace-pc-guard'
#20 0.622 + ./configure --with-libjson=no --with-pcre=no --enable-static=yes --enable-shared=no --disable-llvm --host=x86_64-unknown-linux-gnu
#20 0.622 /src/build.sh: line 23: ./configure: No such file or directory
#20 0.623 Traceback (most recent call last):
#20 0.623   File "<string>", line 1, in <module>
#20 0.623   File "/src/fuzzers/afl/fuzzer.py", line 40, in build
#20 0.623     utils.build_benchmark()
#20 0.623   File "/src/fuzzers/utils.py", line 82, in build_benchmark
#20 0.623     subprocess.check_call(['/bin/bash', '-ex', build_script], env=env)
#20 0.623   File "/usr/local/lib/python3.8/subprocess.py", line 364, in check_call
#20 0.624     raise CalledProcessError(retcode, cmd)
#20 0.624 subprocess.CalledProcessError: Command '['/bin/bash', '-ex', '/src/build.sh']' returned non-zero exit status 127.
#20 ERROR: executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
------
 > importing cache manifest from gcr.io/fuzzbench/builders/afl/clamav_clamav:
------
------
 > [stage-1 13/13] RUN echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi:
------
executor failed running [/bin/sh -c echo "Run fuzzer_build to build the target" && if [ -z "$debug_builder" ] ; then fuzzer_build; fi]: exit code: 1
make: *** [docker/generated.mk:2791584: .afl-clamav_clamav-builder] Error 1
